<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="492.4" y="1925" width="0.2" height="15.0" fill="rgb(225,113,25)" rx="2" ry="2" />
<text  x="495.40" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="562.1" y="1573" width="0.2" height="15.0" fill="rgb(206,208,27)" rx="2" ry="2" />
<text  x="565.08" y="1583.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="660.3" y="2021" width="0.2" height="15.0" fill="rgb(252,155,15)" rx="2" ry="2" />
<text  x="663.35" y="2031.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="408.4" y="1605" width="0.2" height="15.0" fill="rgb(211,83,20)" rx="2" ry="2" />
<text  x="411.43" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="597.0" y="1749" width="0.2" height="15.0" fill="rgb(207,224,24)" rx="2" ry="2" />
<text  x="600.02" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1127.5" y="1941" width="0.4" height="15.0" fill="rgb(233,149,10)" rx="2" ry="2" />
<text  x="1130.47" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="250.2" y="1749" width="0.2" height="15.0" fill="rgb(245,115,54)" rx="2" ry="2" />
<text  x="253.21" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="157.5" y="1877" width="0.2" height="15.0" fill="rgb(234,33,13)" rx="2" ry="2" />
<text  x="160.50" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="134.3" y="69" width="0.2" height="15.0" fill="rgb(228,87,38)" rx="2" ry="2" />
<text  x="137.27" y="79.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="956.1" y="2021" width="0.8" height="15.0" fill="rgb(236,45,16)" rx="2" ry="2" />
<text  x="959.14" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="733.8" y="1477" width="0.2" height="15.0" fill="rgb(248,16,7)" rx="2" ry="2" />
<text  x="736.80" y="1487.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="743.1" y="1653" width="0.2" height="15.0" fill="rgb(227,93,33)" rx="2" ry="2" />
<text  x="746.13" y="1663.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="160.1" y="1941" width="0.2" height="15.0" fill="rgb(206,97,52)" rx="2" ry="2" />
<text  x="163.08" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="853.9" y="1733" width="0.2" height="15.0" fill="rgb(243,101,8)" rx="2" ry="2" />
<text  x="856.91" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (3 samples, 0.05%)</title><rect x="21.1" y="2037" width="0.6" height="15.0" fill="rgb(215,219,45)" rx="2" ry="2" />
<text  x="24.12" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="1154.7" y="1973" width="0.4" height="15.0" fill="rgb(242,174,42)" rx="2" ry="2" />
<text  x="1157.66" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="562.1" y="1877" width="0.2" height="15.0" fill="rgb(254,2,39)" rx="2" ry="2" />
<text  x="565.08" y="1887.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="65.0" y="1909" width="0.2" height="15.0" fill="rgb(211,112,54)" rx="2" ry="2" />
<text  x="67.99" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="88.6" y="1877" width="0.2" height="15.0" fill="rgb(243,131,50)" rx="2" ry="2" />
<text  x="91.61" y="1887.5" ></text>
</g>
<g >
<title>inet_release (357 samples, 6.01%)</title><rect x="748.3" y="1765" width="70.9" height="15.0" fill="rgb(216,136,47)" rx="2" ry="2" />
<text  x="751.29" y="1775.5" >inet_rel..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="490.2" y="1957" width="0.2" height="15.0" fill="rgb(225,31,54)" rx="2" ry="2" />
<text  x="493.22" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="838.4" y="1765" width="0.2" height="15.0" fill="rgb(225,201,48)" rx="2" ry="2" />
<text  x="841.42" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="762.6" y="1701" width="0.4" height="15.0" fill="rgb(237,125,6)" rx="2" ry="2" />
<text  x="765.59" y="1711.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="1019.9" y="1781" width="0.2" height="15.0" fill="rgb(239,226,47)" rx="2" ry="2" />
<text  x="1022.87" y="1791.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="523.6" y="1989" width="0.2" height="15.0" fill="rgb(239,89,35)" rx="2" ry="2" />
<text  x="526.57" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="138.0" y="1269" width="0.2" height="15.0" fill="rgb(250,116,31)" rx="2" ry="2" />
<text  x="141.05" y="1279.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="956.3" y="2005" width="0.2" height="15.0" fill="rgb(228,87,4)" rx="2" ry="2" />
<text  x="959.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="629.4" y="2005" width="0.6" height="15.0" fill="rgb(236,129,41)" rx="2" ry="2" />
<text  x="632.38" y="2015.5" ></text>
</g>
<g >
<title>get_empty_filp (37 samples, 0.62%)</title><rect x="405.1" y="1925" width="7.3" height="15.0" fill="rgb(209,219,27)" rx="2" ry="2" />
<text  x="408.05" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="519.6" y="1941" width="0.2" height="15.0" fill="rgb(237,24,49)" rx="2" ry="2" />
<text  x="522.60" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1018.3" y="1893" width="0.2" height="15.0" fill="rgb(254,223,19)" rx="2" ry="2" />
<text  x="1021.28" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="706.0" y="1541" width="0.2" height="15.0" fill="rgb(240,4,16)" rx="2" ry="2" />
<text  x="709.01" y="1551.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="900.2" y="2005" width="0.2" height="15.0" fill="rgb(230,102,27)" rx="2" ry="2" />
<text  x="903.16" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="185.9" y="1941" width="0.6" height="15.0" fill="rgb(227,31,23)" rx="2" ry="2" />
<text  x="188.89" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="71.3" y="1909" width="0.6" height="15.0" fill="rgb(241,192,33)" rx="2" ry="2" />
<text  x="74.34" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="528.7" y="1909" width="0.2" height="15.0" fill="rgb(218,4,31)" rx="2" ry="2" />
<text  x="531.73" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="493.4" y="2021" width="0.4" height="15.0" fill="rgb(209,126,12)" rx="2" ry="2" />
<text  x="496.40" y="2031.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="654.4" y="1621" width="0.2" height="15.0" fill="rgb(241,52,6)" rx="2" ry="2" />
<text  x="657.39" y="1631.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeoutExpired (2 samples, 0.03%)</title><rect x="20.7" y="2021" width="0.4" height="15.0" fill="rgb(239,86,34)" rx="2" ry="2" />
<text  x="23.72" y="2031.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (13 samples, 0.22%)</title><rect x="1075.1" y="1813" width="2.5" height="15.0" fill="rgb(228,103,38)" rx="2" ry="2" />
<text  x="1078.06" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="316.1" y="1733" width="0.2" height="15.0" fill="rgb(238,95,49)" rx="2" ry="2" />
<text  x="319.12" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1052.0" y="1893" width="0.2" height="15.0" fill="rgb(213,34,31)" rx="2" ry="2" />
<text  x="1055.03" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.78%)</title><rect x="118.8" y="1557" width="21.0" height="15.0" fill="rgb(210,88,44)" rx="2" ry="2" />
<text  x="121.79" y="1567.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="853.5" y="1845" width="0.2" height="15.0" fill="rgb(251,117,41)" rx="2" ry="2" />
<text  x="856.51" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="571.8" y="1957" width="0.4" height="15.0" fill="rgb(249,123,47)" rx="2" ry="2" />
<text  x="574.81" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="627.0" y="1973" width="0.4" height="15.0" fill="rgb(231,194,50)" rx="2" ry="2" />
<text  x="630.00" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="136.3" y="197" width="0.2" height="15.0" fill="rgb(217,11,30)" rx="2" ry="2" />
<text  x="139.26" y="207.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="956.5" y="2005" width="0.2" height="15.0" fill="rgb(254,113,48)" rx="2" ry="2" />
<text  x="959.54" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="400.7" y="1893" width="2.8" height="15.0" fill="rgb(216,29,26)" rx="2" ry="2" />
<text  x="403.69" y="1903.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="559.9" y="1845" width="0.2" height="15.0" fill="rgb(240,169,18)" rx="2" ry="2" />
<text  x="562.90" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="300.6" y="1525" width="0.2" height="15.0" fill="rgb(252,117,37)" rx="2" ry="2" />
<text  x="303.63" y="1535.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (13 samples, 0.22%)</title><rect x="243.1" y="1877" width="2.5" height="15.0" fill="rgb(209,121,49)" rx="2" ry="2" />
<text  x="246.06" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="679.8" y="2005" width="0.6" height="15.0" fill="rgb(232,17,19)" rx="2" ry="2" />
<text  x="682.80" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (21 samples, 0.35%)</title><rect x="648.4" y="2005" width="4.2" height="15.0" fill="rgb(218,90,53)" rx="2" ry="2" />
<text  x="651.44" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="138.0" y="1173" width="0.2" height="15.0" fill="rgb(224,9,8)" rx="2" ry="2" />
<text  x="141.05" y="1183.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="853.9" y="1877" width="0.2" height="15.0" fill="rgb(249,61,46)" rx="2" ry="2" />
<text  x="856.91" y="1887.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="999.0" y="1941" width="0.2" height="15.0" fill="rgb(220,206,28)" rx="2" ry="2" />
<text  x="1002.02" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="832.3" y="1893" width="2.9" height="15.0" fill="rgb(247,121,7)" rx="2" ry="2" />
<text  x="835.27" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="186.5" y="2021" width="0.4" height="15.0" fill="rgb(246,214,40)" rx="2" ry="2" />
<text  x="189.48" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="491.8" y="1749" width="0.2" height="15.0" fill="rgb(250,80,10)" rx="2" ry="2" />
<text  x="494.81" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1143.9" y="1989" width="0.4" height="15.0" fill="rgb(222,141,41)" rx="2" ry="2" />
<text  x="1146.94" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="283.0" y="1717" width="0.2" height="15.0" fill="rgb(247,218,6)" rx="2" ry="2" />
<text  x="285.96" y="1727.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="799.9" y="1669" width="0.2" height="15.0" fill="rgb(251,75,38)" rx="2" ry="2" />
<text  x="802.91" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="638.7" y="1877" width="0.2" height="15.0" fill="rgb(235,54,38)" rx="2" ry="2" />
<text  x="641.71" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (4 samples, 0.07%)</title><rect x="62.4" y="1973" width="0.8" height="15.0" fill="rgb(207,88,29)" rx="2" ry="2" />
<text  x="65.41" y="1983.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="1106.6" y="1413" width="0.2" height="15.0" fill="rgb(229,219,12)" rx="2" ry="2" />
<text  x="1109.62" y="1423.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="733.8" y="1621" width="0.2" height="15.0" fill="rgb(239,138,39)" rx="2" ry="2" />
<text  x="736.80" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.14%)</title><rect x="583.9" y="1925" width="13.5" height="15.0" fill="rgb(214,86,53)" rx="2" ry="2" />
<text  x="586.92" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="520.0" y="1733" width="0.2" height="15.0" fill="rgb(225,130,42)" rx="2" ry="2" />
<text  x="523.00" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="104.9" y="1813" width="0.2" height="15.0" fill="rgb(238,204,14)" rx="2" ry="2" />
<text  x="107.89" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (3 samples, 0.05%)</title><rect x="620.2" y="2005" width="0.6" height="15.0" fill="rgb(228,57,50)" rx="2" ry="2" />
<text  x="623.25" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="47.1" y="1941" width="0.2" height="15.0" fill="rgb(216,58,10)" rx="2" ry="2" />
<text  x="50.12" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="987.3" y="1893" width="0.4" height="15.0" fill="rgb(245,216,46)" rx="2" ry="2" />
<text  x="990.31" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="971.8" y="2005" width="0.2" height="15.0" fill="rgb(253,108,30)" rx="2" ry="2" />
<text  x="974.83" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="654.4" y="1989" width="0.2" height="15.0" fill="rgb(251,12,34)" rx="2" ry="2" />
<text  x="657.39" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (25 samples, 0.42%)</title><rect x="780.5" y="1541" width="4.9" height="15.0" fill="rgb(209,115,3)" rx="2" ry="2" />
<text  x="783.45" y="1551.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (8 samples, 0.13%)</title><rect x="1007.8" y="2005" width="1.5" height="15.0" fill="rgb(221,188,46)" rx="2" ry="2" />
<text  x="1010.76" y="2015.5" ></text>
</g>
<g >
<title>iput (57 samples, 0.96%)</title><rect x="730.0" y="1733" width="11.3" height="15.0" fill="rgb(209,167,11)" rx="2" ry="2" />
<text  x="733.03" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="267.3" y="1733" width="0.2" height="15.0" fill="rgb(225,184,5)" rx="2" ry="2" />
<text  x="270.28" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="543.8" y="1861" width="0.2" height="15.0" fill="rgb(245,116,45)" rx="2" ry="2" />
<text  x="546.82" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="517.0" y="1973" width="0.8" height="15.0" fill="rgb(250,28,51)" rx="2" ry="2" />
<text  x="520.02" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.82%)</title><rect x="118.6" y="1605" width="21.4" height="15.0" fill="rgb(211,113,31)" rx="2" ry="2" />
<text  x="121.59" y="1615.5" >[..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="947.4" y="1861" width="0.2" height="15.0" fill="rgb(239,194,3)" rx="2" ry="2" />
<text  x="950.41" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="731.6" y="1493" width="0.2" height="15.0" fill="rgb(245,37,44)" rx="2" ry="2" />
<text  x="734.62" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="39.8" y="1925" width="0.2" height="15.0" fill="rgb(220,152,37)" rx="2" ry="2" />
<text  x="42.78" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="731.0" y="1701" width="0.8" height="15.0" fill="rgb(254,99,8)" rx="2" ry="2" />
<text  x="734.02" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="134.7" y="85" width="0.2" height="15.0" fill="rgb(226,100,17)" rx="2" ry="2" />
<text  x="137.67" y="95.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="378.5" y="1893" width="0.2" height="15.0" fill="rgb(233,186,23)" rx="2" ry="2" />
<text  x="381.45" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (3 samples, 0.05%)</title><rect x="87.8" y="1957" width="0.6" height="15.0" fill="rgb(239,114,2)" rx="2" ry="2" />
<text  x="90.82" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3 samples, 0.05%)</title><rect x="824.1" y="1829" width="0.6" height="15.0" fill="rgb(243,178,24)" rx="2" ry="2" />
<text  x="827.13" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="837.4" y="1861" width="0.2" height="15.0" fill="rgb(253,169,33)" rx="2" ry="2" />
<text  x="840.43" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="529.1" y="1941" width="0.4" height="15.0" fill="rgb(206,43,22)" rx="2" ry="2" />
<text  x="532.13" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="885.9" y="1861" width="0.2" height="15.0" fill="rgb(239,33,53)" rx="2" ry="2" />
<text  x="888.87" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::~Fiber (1 samples, 0.02%)</title><rect x="20.9" y="1973" width="0.2" height="15.0" fill="rgb(238,118,5)" rx="2" ry="2" />
<text  x="23.92" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="193.0" y="1973" width="1.4" height="15.0" fill="rgb(221,180,36)" rx="2" ry="2" />
<text  x="196.03" y="1983.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="1016.7" y="1941" width="0.2" height="15.0" fill="rgb(246,54,23)" rx="2" ry="2" />
<text  x="1019.69" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="46.5" y="1973" width="0.2" height="15.0" fill="rgb(223,140,11)" rx="2" ry="2" />
<text  x="49.53" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="659.2" y="1765" width="0.2" height="15.0" fill="rgb(208,118,11)" rx="2" ry="2" />
<text  x="662.16" y="1775.5" ></text>
</g>
<g >
<title>netif_skb_features (4 samples, 0.07%)</title><rect x="794.4" y="1509" width="0.7" height="15.0" fill="rgb(243,93,16)" rx="2" ry="2" />
<text  x="797.35" y="1519.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="836.6" y="1813" width="0.2" height="15.0" fill="rgb(242,59,39)" rx="2" ry="2" />
<text  x="839.64" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="898.8" y="1989" width="0.2" height="15.0" fill="rgb(213,15,44)" rx="2" ry="2" />
<text  x="901.77" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (5 samples, 0.08%)</title><rect x="546.8" y="1957" width="1.0" height="15.0" fill="rgb(208,114,35)" rx="2" ry="2" />
<text  x="549.80" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="269.3" y="1701" width="0.2" height="15.0" fill="rgb(236,151,20)" rx="2" ry="2" />
<text  x="272.27" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="884.7" y="1637" width="0.2" height="15.0" fill="rgb(237,202,32)" rx="2" ry="2" />
<text  x="887.68" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="694.1" y="1477" width="0.2" height="15.0" fill="rgb(225,197,25)" rx="2" ry="2" />
<text  x="697.10" y="1487.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="133.5" y="37" width="0.2" height="15.0" fill="rgb(249,105,42)" rx="2" ry="2" />
<text  x="136.48" y="47.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="329.8" y="1669" width="0.2" height="15.0" fill="rgb(233,81,15)" rx="2" ry="2" />
<text  x="332.81" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="61.6" y="1765" width="0.2" height="15.0" fill="rgb(211,43,27)" rx="2" ry="2" />
<text  x="64.62" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="830.5" y="1797" width="0.2" height="15.0" fill="rgb(236,158,30)" rx="2" ry="2" />
<text  x="833.48" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (2 samples, 0.03%)</title><rect x="1145.5" y="2005" width="0.4" height="15.0" fill="rgb(229,103,49)" rx="2" ry="2" />
<text  x="1148.53" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1072.1" y="1621" width="0.2" height="15.0" fill="rgb(226,135,14)" rx="2" ry="2" />
<text  x="1075.08" y="1631.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="567.2" y="1861" width="0.2" height="15.0" fill="rgb(211,159,12)" rx="2" ry="2" />
<text  x="570.24" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="600.8" y="1909" width="0.2" height="15.0" fill="rgb(209,10,53)" rx="2" ry="2" />
<text  x="603.79" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="597" width="17.9" height="15.0" fill="rgb(246,1,37)" rx="2" ry="2" />
<text  x="122.19" y="607.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="613.7" y="1973" width="0.2" height="15.0" fill="rgb(245,169,13)" rx="2" ry="2" />
<text  x="616.70" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (10 samples, 0.17%)</title><rect x="1082.8" y="1877" width="2.0" height="15.0" fill="rgb(228,84,41)" rx="2" ry="2" />
<text  x="1085.80" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="995.5" y="1941" width="0.1" height="15.0" fill="rgb(216,179,13)" rx="2" ry="2" />
<text  x="998.45" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="342.7" y="1829" width="0.2" height="15.0" fill="rgb(245,183,6)" rx="2" ry="2" />
<text  x="345.72" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1052.0" y="1845" width="0.2" height="15.0" fill="rgb(249,186,23)" rx="2" ry="2" />
<text  x="1055.03" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="660.5" y="2021" width="0.2" height="15.0" fill="rgb(220,228,52)" rx="2" ry="2" />
<text  x="663.55" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="367.3" y="1941" width="0.2" height="15.0" fill="rgb(250,198,4)" rx="2" ry="2" />
<text  x="370.34" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="162.7" y="1925" width="0.2" height="15.0" fill="rgb(207,157,2)" rx="2" ry="2" />
<text  x="165.66" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="973.8" y="1893" width="0.2" height="15.0" fill="rgb(209,135,16)" rx="2" ry="2" />
<text  x="976.81" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="939.3" y="1941" width="0.4" height="15.0" fill="rgb(228,196,10)" rx="2" ry="2" />
<text  x="942.27" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="175.8" y="1957" width="0.2" height="15.0" fill="rgb(251,15,21)" rx="2" ry="2" />
<text  x="178.76" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="885.7" y="1909" width="0.4" height="15.0" fill="rgb(208,216,6)" rx="2" ry="2" />
<text  x="888.67" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (16 samples, 0.27%)</title><rect x="603.8" y="1893" width="3.1" height="15.0" fill="rgb(251,121,30)" rx="2" ry="2" />
<text  x="606.77" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="562.1" y="1605" width="0.2" height="15.0" fill="rgb(238,228,31)" rx="2" ry="2" />
<text  x="565.08" y="1615.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="52.9" y="1749" width="0.2" height="15.0" fill="rgb(217,224,30)" rx="2" ry="2" />
<text  x="55.88" y="1759.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (51 samples, 0.86%)</title><rect x="499.9" y="1925" width="10.2" height="15.0" fill="rgb(215,229,31)" rx="2" ry="2" />
<text  x="502.95" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="621.6" y="1989" width="0.4" height="15.0" fill="rgb(226,18,11)" rx="2" ry="2" />
<text  x="624.64" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="903.5" y="1925" width="0.2" height="15.0" fill="rgb(230,129,0)" rx="2" ry="2" />
<text  x="906.54" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="956.3" y="1925" width="0.2" height="15.0" fill="rgb(254,8,50)" rx="2" ry="2" />
<text  x="959.34" y="1935.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="35.6" y="1989" width="0.4" height="15.0" fill="rgb(213,179,50)" rx="2" ry="2" />
<text  x="38.61" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="651.8" y="1765" width="0.2" height="15.0" fill="rgb(240,0,4)" rx="2" ry="2" />
<text  x="654.81" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="646.5" y="1941" width="0.2" height="15.0" fill="rgb(234,219,34)" rx="2" ry="2" />
<text  x="649.45" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1005.6" y="1733" width="0.2" height="15.0" fill="rgb(253,60,26)" rx="2" ry="2" />
<text  x="1008.58" y="1743.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="675.2" y="1861" width="0.2" height="15.0" fill="rgb(252,89,27)" rx="2" ry="2" />
<text  x="678.24" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="52.9" y="1877" width="0.2" height="15.0" fill="rgb(234,212,22)" rx="2" ry="2" />
<text  x="55.88" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="490.2" y="1733" width="0.2" height="15.0" fill="rgb(206,152,41)" rx="2" ry="2" />
<text  x="493.22" y="1743.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1106.4" y="1877" width="0.2" height="15.0" fill="rgb(254,207,3)" rx="2" ry="2" />
<text  x="1109.42" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="134.7" y="69" width="0.2" height="15.0" fill="rgb(254,226,50)" rx="2" ry="2" />
<text  x="137.67" y="79.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="700.6" y="1701" width="0.2" height="15.0" fill="rgb(230,148,5)" rx="2" ry="2" />
<text  x="703.65" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="408.4" y="1669" width="0.2" height="15.0" fill="rgb(228,55,38)" rx="2" ry="2" />
<text  x="411.43" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1181.3" y="2005" width="0.4" height="15.0" fill="rgb(213,145,23)" rx="2" ry="2" />
<text  x="1184.27" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (12 samples, 0.20%)</title><rect x="1119.1" y="1941" width="2.4" height="15.0" fill="rgb(222,211,42)" rx="2" ry="2" />
<text  x="1122.13" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="947.4" y="1669" width="0.2" height="15.0" fill="rgb(206,71,8)" rx="2" ry="2" />
<text  x="950.41" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="61.0" y="1829" width="0.2" height="15.0" fill="rgb(252,2,53)" rx="2" ry="2" />
<text  x="64.02" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="627.0" y="1925" width="0.4" height="15.0" fill="rgb(236,225,2)" rx="2" ry="2" />
<text  x="630.00" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1176.1" y="1973" width="0.2" height="15.0" fill="rgb(215,83,51)" rx="2" ry="2" />
<text  x="1179.10" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="343.3" y="1973" width="0.8" height="15.0" fill="rgb(223,20,49)" rx="2" ry="2" />
<text  x="346.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.93%)</title><rect x="118.2" y="1717" width="22.8" height="15.0" fill="rgb(229,46,1)" rx="2" ry="2" />
<text  x="121.19" y="1727.5" >[..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="60.2" y="1845" width="0.2" height="15.0" fill="rgb(211,40,7)" rx="2" ry="2" />
<text  x="63.23" y="1855.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="877.9" y="1909" width="0.2" height="15.0" fill="rgb(216,225,37)" rx="2" ry="2" />
<text  x="880.93" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="700.6" y="1845" width="0.2" height="15.0" fill="rgb(246,19,35)" rx="2" ry="2" />
<text  x="703.65" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="172.0" y="1893" width="0.2" height="15.0" fill="rgb(213,190,5)" rx="2" ry="2" />
<text  x="174.99" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="547.6" y="1797" width="0.2" height="15.0" fill="rgb(251,218,49)" rx="2" ry="2" />
<text  x="550.59" y="1807.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="741.1" y="1685" width="0.2" height="15.0" fill="rgb(248,173,12)" rx="2" ry="2" />
<text  x="744.15" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="865.0" y="1989" width="0.2" height="15.0" fill="rgb(227,191,38)" rx="2" ry="2" />
<text  x="868.02" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1127.5" y="1893" width="0.4" height="15.0" fill="rgb(235,94,48)" rx="2" ry="2" />
<text  x="1130.47" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="741" width="17.9" height="15.0" fill="rgb(245,164,31)" rx="2" ry="2" />
<text  x="122.19" y="751.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="625.8" y="2005" width="0.2" height="15.0" fill="rgb(221,137,10)" rx="2" ry="2" />
<text  x="628.81" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (7 samples, 0.12%)</title><rect x="57.2" y="1893" width="1.4" height="15.0" fill="rgb(235,20,13)" rx="2" ry="2" />
<text  x="60.25" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="330.0" y="1797" width="0.2" height="15.0" fill="rgb(251,33,19)" rx="2" ry="2" />
<text  x="333.01" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="392.2" y="1829" width="0.1" height="15.0" fill="rgb(252,61,28)" rx="2" ry="2" />
<text  x="395.15" y="1839.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="845.4" y="1909" width="0.2" height="15.0" fill="rgb(237,124,49)" rx="2" ry="2" />
<text  x="848.37" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="613.1" y="1797" width="0.2" height="15.0" fill="rgb(236,139,32)" rx="2" ry="2" />
<text  x="616.10" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1177.1" y="1957" width="0.2" height="15.0" fill="rgb(218,3,26)" rx="2" ry="2" />
<text  x="1180.10" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (104 samples, 1.75%)</title><rect x="919.8" y="1989" width="20.7" height="15.0" fill="rgb(217,134,17)" rx="2" ry="2" />
<text  x="922.81" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (4 samples, 0.07%)</title><rect x="914.3" y="1989" width="0.8" height="15.0" fill="rgb(228,173,28)" rx="2" ry="2" />
<text  x="917.26" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="825.9" y="1509" width="0.2" height="15.0" fill="rgb(216,218,28)" rx="2" ry="2" />
<text  x="828.92" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1189.0" y="1989" width="0.2" height="15.0" fill="rgb(219,167,14)" rx="2" ry="2" />
<text  x="1192.01" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (11 samples, 0.19%)</title><rect x="879.7" y="1941" width="2.2" height="15.0" fill="rgb(222,189,18)" rx="2" ry="2" />
<text  x="882.71" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (514 samples, 8.65%)</title><rect x="723.3" y="1861" width="102.0" height="15.0" fill="rgb(225,29,27)" rx="2" ry="2" />
<text  x="726.28" y="1871.5" >exit_to_user..</text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="310.4" y="1573" width="0.2" height="15.0" fill="rgb(229,65,31)" rx="2" ry="2" />
<text  x="313.36" y="1583.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="613.9" y="1957" width="0.2" height="15.0" fill="rgb(210,53,8)" rx="2" ry="2" />
<text  x="616.90" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="755.4" y="1445" width="0.2" height="15.0" fill="rgb(238,48,35)" rx="2" ry="2" />
<text  x="758.44" y="1455.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="96.4" y="1973" width="0.2" height="15.0" fill="rgb(209,118,22)" rx="2" ry="2" />
<text  x="99.36" y="1983.5" ></text>
</g>
<g >
<title>ip_queue_xmit (138 samples, 2.32%)</title><rect x="769.1" y="1669" width="27.4" height="15.0" fill="rgb(213,124,0)" rx="2" ry="2" />
<text  x="772.14" y="1679.5" >i..</text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1181.7" y="2037" width="0.4" height="15.0" fill="rgb(253,22,50)" rx="2" ry="2" />
<text  x="1184.66" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1018.3" y="1989" width="0.2" height="15.0" fill="rgb(245,29,16)" rx="2" ry="2" />
<text  x="1021.28" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (3 samples, 0.05%)</title><rect x="616.1" y="2021" width="0.6" height="15.0" fill="rgb(250,134,27)" rx="2" ry="2" />
<text  x="619.08" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (7 samples, 0.12%)</title><rect x="240.7" y="1845" width="1.4" height="15.0" fill="rgb(209,163,46)" rx="2" ry="2" />
<text  x="243.68" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="830.5" y="1621" width="0.2" height="15.0" fill="rgb(217,1,13)" rx="2" ry="2" />
<text  x="833.48" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1177.1" y="1973" width="0.2" height="15.0" fill="rgb(223,58,40)" rx="2" ry="2" />
<text  x="1180.10" y="1983.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="273.0" y="1893" width="0.2" height="15.0" fill="rgb(239,190,20)" rx="2" ry="2" />
<text  x="276.04" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="630.4" y="1877" width="0.2" height="15.0" fill="rgb(248,199,2)" rx="2" ry="2" />
<text  x="633.37" y="1887.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="800.5" y="1685" width="0.2" height="15.0" fill="rgb(247,34,38)" rx="2" ry="2" />
<text  x="803.50" y="1695.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="443.0" y="1925" width="0.2" height="15.0" fill="rgb(214,83,51)" rx="2" ry="2" />
<text  x="445.97" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="44.5" y="1957" width="0.2" height="15.0" fill="rgb(232,19,3)" rx="2" ry="2" />
<text  x="47.54" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1180.9" y="1973" width="0.2" height="15.0" fill="rgb(248,71,49)" rx="2" ry="2" />
<text  x="1183.87" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.12%)</title><rect x="805.5" y="1589" width="1.4" height="15.0" fill="rgb(253,166,38)" rx="2" ry="2" />
<text  x="808.47" y="1599.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="157.5" y="1589" width="0.2" height="15.0" fill="rgb(222,66,12)" rx="2" ry="2" />
<text  x="160.50" y="1599.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="95.6" y="1653" width="0.2" height="15.0" fill="rgb(230,103,15)" rx="2" ry="2" />
<text  x="98.56" y="1663.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="301.4" y="1477" width="0.2" height="15.0" fill="rgb(209,208,43)" rx="2" ry="2" />
<text  x="304.43" y="1487.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="95.0" y="1893" width="0.2" height="15.0" fill="rgb(243,130,20)" rx="2" ry="2" />
<text  x="97.97" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="654.4" y="1893" width="0.2" height="15.0" fill="rgb(214,148,8)" rx="2" ry="2" />
<text  x="657.39" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (123 samples, 2.07%)</title><rect x="225.0" y="1989" width="24.4" height="15.0" fill="rgb(216,206,26)" rx="2" ry="2" />
<text  x="228.00" y="1999.5" >f..</text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="844.6" y="1893" width="0.6" height="15.0" fill="rgb(242,189,34)" rx="2" ry="2" />
<text  x="847.58" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="694.5" y="1893" width="0.8" height="15.0" fill="rgb(243,146,41)" rx="2" ry="2" />
<text  x="697.50" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1048.5" y="1925" width="0.2" height="15.0" fill="rgb(216,138,6)" rx="2" ry="2" />
<text  x="1051.46" y="1935.5" ></text>
</g>
<g >
<title>vfprintf (3 samples, 0.05%)</title><rect x="1136.4" y="2037" width="0.6" height="15.0" fill="rgb(244,165,10)" rx="2" ry="2" />
<text  x="1139.40" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="482.9" y="1909" width="0.6" height="15.0" fill="rgb(216,79,13)" rx="2" ry="2" />
<text  x="485.87" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (60 samples, 1.01%)</title><rect x="162.1" y="1941" width="11.9" height="15.0" fill="rgb(216,142,30)" rx="2" ry="2" />
<text  x="165.07" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="153.1" y="1957" width="0.8" height="15.0" fill="rgb(246,4,22)" rx="2" ry="2" />
<text  x="156.13" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="679.4" y="1813" width="0.2" height="15.0" fill="rgb(245,27,28)" rx="2" ry="2" />
<text  x="682.41" y="1823.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1025.6" y="2053" width="0.2" height="15.0" fill="rgb(253,19,23)" rx="2" ry="2" />
<text  x="1028.63" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="118.8" y="1221" width="18.8" height="15.0" fill="rgb(235,34,22)" rx="2" ry="2" />
<text  x="121.79" y="1231.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="820.0" y="1557" width="0.2" height="15.0" fill="rgb(245,79,29)" rx="2" ry="2" />
<text  x="822.96" y="1567.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="932.7" y="1861" width="0.8" height="15.0" fill="rgb(245,140,27)" rx="2" ry="2" />
<text  x="935.72" y="1871.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1016.5" y="1909" width="0.2" height="15.0" fill="rgb(247,215,29)" rx="2" ry="2" />
<text  x="1019.49" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="156.3" y="1941" width="0.2" height="15.0" fill="rgb(254,113,22)" rx="2" ry="2" />
<text  x="159.31" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="970.0" y="2005" width="0.2" height="15.0" fill="rgb(253,48,7)" rx="2" ry="2" />
<text  x="973.04" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1106.8" y="1877" width="0.2" height="15.0" fill="rgb(238,196,45)" rx="2" ry="2" />
<text  x="1109.82" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="134.5" y="117" width="0.2" height="15.0" fill="rgb(254,12,0)" rx="2" ry="2" />
<text  x="137.47" y="127.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="954.0" y="1973" width="0.4" height="15.0" fill="rgb(244,146,8)" rx="2" ry="2" />
<text  x="956.96" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="547.6" y="1749" width="0.2" height="15.0" fill="rgb(234,71,27)" rx="2" ry="2" />
<text  x="550.59" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="936.5" y="1877" width="0.2" height="15.0" fill="rgb(246,222,43)" rx="2" ry="2" />
<text  x="939.49" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1189.0" y="2021" width="0.2" height="15.0" fill="rgb(248,134,3)" rx="2" ry="2" />
<text  x="1192.01" y="2031.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="856.7" y="1477" width="0.2" height="15.0" fill="rgb(225,72,53)" rx="2" ry="2" />
<text  x="859.69" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="72.1" y="1813" width="0.2" height="15.0" fill="rgb(245,219,19)" rx="2" ry="2" />
<text  x="75.14" y="1823.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1925" width="0.2" height="15.0" fill="rgb(210,20,36)" rx="2" ry="2" />
<text  x="570.24" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="152.3" y="1909" width="0.2" height="15.0" fill="rgb(217,190,21)" rx="2" ry="2" />
<text  x="155.34" y="1919.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="61.2" y="1861" width="0.2" height="15.0" fill="rgb(249,116,52)" rx="2" ry="2" />
<text  x="64.22" y="1871.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="745.9" y="1381" width="0.2" height="15.0" fill="rgb(216,164,43)" rx="2" ry="2" />
<text  x="748.91" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="279.0" y="1701" width="0.2" height="15.0" fill="rgb(249,193,23)" rx="2" ry="2" />
<text  x="281.99" y="1711.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="71.3" y="1925" width="0.6" height="15.0" fill="rgb(219,208,48)" rx="2" ry="2" />
<text  x="74.34" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onAccepted (3 samples, 0.05%)</title><rect x="157.1" y="2005" width="0.6" height="15.0" fill="rgb(246,41,14)" rx="2" ry="2" />
<text  x="160.10" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="932.1" y="1877" width="0.4" height="15.0" fill="rgb(241,94,50)" rx="2" ry="2" />
<text  x="935.12" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="419.0" y="1845" width="0.1" height="15.0" fill="rgb(250,24,18)" rx="2" ry="2" />
<text  x="421.95" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="887.5" y="1973" width="0.2" height="15.0" fill="rgb(236,152,33)" rx="2" ry="2" />
<text  x="890.46" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="775.5" y="1349" width="0.4" height="15.0" fill="rgb(213,142,6)" rx="2" ry="2" />
<text  x="778.49" y="1359.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="418.2" y="1941" width="0.2" height="15.0" fill="rgb(218,183,16)" rx="2" ry="2" />
<text  x="421.16" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="118.8" y="1157" width="18.6" height="15.0" fill="rgb(214,73,3)" rx="2" ry="2" />
<text  x="121.79" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="997.2" y="1973" width="0.2" height="15.0" fill="rgb(237,78,22)" rx="2" ry="2" />
<text  x="1000.24" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="138.4" y="1461" width="0.2" height="15.0" fill="rgb(250,88,19)" rx="2" ry="2" />
<text  x="141.44" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="753.9" y="1477" width="0.2" height="15.0" fill="rgb(209,140,48)" rx="2" ry="2" />
<text  x="756.85" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="679.4" y="1941" width="0.2" height="15.0" fill="rgb(205,48,33)" rx="2" ry="2" />
<text  x="682.41" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="903.3" y="1973" width="0.4" height="15.0" fill="rgb(245,95,10)" rx="2" ry="2" />
<text  x="906.34" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="505.1" y="1717" width="0.4" height="15.0" fill="rgb(229,185,24)" rx="2" ry="2" />
<text  x="508.11" y="1727.5" ></text>
</g>
<g >
<title>inet_getname (19 samples, 0.32%)</title><rect x="591.3" y="1861" width="3.7" height="15.0" fill="rgb(245,161,28)" rx="2" ry="2" />
<text  x="594.27" y="1871.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (3 samples, 0.05%)</title><rect x="740.0" y="1701" width="0.6" height="15.0" fill="rgb(253,128,7)" rx="2" ry="2" />
<text  x="742.96" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="870.4" y="1973" width="0.2" height="15.0" fill="rgb(251,128,14)" rx="2" ry="2" />
<text  x="873.38" y="1983.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="324.7" y="1813" width="0.2" height="15.0" fill="rgb(227,172,27)" rx="2" ry="2" />
<text  x="327.65" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1090.3" y="1925" width="0.2" height="15.0" fill="rgb(254,199,45)" rx="2" ry="2" />
<text  x="1093.34" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="731.6" y="1589" width="0.2" height="15.0" fill="rgb(217,43,45)" rx="2" ry="2" />
<text  x="734.62" y="1599.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1126.1" y="1909" width="0.2" height="15.0" fill="rgb(252,23,11)" rx="2" ry="2" />
<text  x="1129.08" y="1919.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="760.8" y="1685" width="0.2" height="15.0" fill="rgb(244,55,37)" rx="2" ry="2" />
<text  x="763.80" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (27 samples, 0.45%)</title><rect x="1172.3" y="2037" width="5.4" height="15.0" fill="rgb(238,182,37)" rx="2" ry="2" />
<text  x="1175.33" y="2047.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="383.4" y="1909" width="0.2" height="15.0" fill="rgb(206,92,32)" rx="2" ry="2" />
<text  x="386.42" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="131.1" y="53" width="0.2" height="15.0" fill="rgb(205,7,16)" rx="2" ry="2" />
<text  x="134.10" y="63.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="992.1" y="1989" width="0.2" height="15.0" fill="rgb(253,131,51)" rx="2" ry="2" />
<text  x="995.08" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="250.2" y="1909" width="0.2" height="15.0" fill="rgb(220,0,53)" rx="2" ry="2" />
<text  x="253.21" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="529.1" y="1909" width="0.4" height="15.0" fill="rgb(240,10,30)" rx="2" ry="2" />
<text  x="532.13" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (15 samples, 0.25%)</title><rect x="476.7" y="1941" width="3.0" height="15.0" fill="rgb(249,127,11)" rx="2" ry="2" />
<text  x="479.72" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="173.0" y="1861" width="0.2" height="15.0" fill="rgb(207,196,30)" rx="2" ry="2" />
<text  x="175.98" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (84 samples, 1.41%)</title><rect x="511.5" y="2021" width="16.6" height="15.0" fill="rgb(243,197,52)" rx="2" ry="2" />
<text  x="514.46" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="185.9" y="1957" width="0.6" height="15.0" fill="rgb(209,93,8)" rx="2" ry="2" />
<text  x="188.89" y="1967.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="1108.0" y="1573" width="0.2" height="15.0" fill="rgb(222,86,15)" rx="2" ry="2" />
<text  x="1111.01" y="1583.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="88.6" y="1765" width="0.2" height="15.0" fill="rgb(248,15,47)" rx="2" ry="2" />
<text  x="91.61" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (2 samples, 0.03%)</title><rect x="94.0" y="1893" width="0.4" height="15.0" fill="rgb(210,175,0)" rx="2" ry="2" />
<text  x="96.97" y="1903.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="982.0" y="1845" width="0.2" height="15.0" fill="rgb(211,107,40)" rx="2" ry="2" />
<text  x="984.95" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="825.3" y="1701" width="0.8" height="15.0" fill="rgb(244,93,15)" rx="2" ry="2" />
<text  x="828.32" y="1711.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="483.5" y="1957" width="0.2" height="15.0" fill="rgb(246,159,26)" rx="2" ry="2" />
<text  x="486.47" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="290.5" y="1797" width="0.2" height="15.0" fill="rgb(248,139,24)" rx="2" ry="2" />
<text  x="293.51" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="392.3" y="1893" width="0.2" height="15.0" fill="rgb(228,221,48)" rx="2" ry="2" />
<text  x="395.35" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="925.4" y="1813" width="0.8" height="15.0" fill="rgb(214,21,22)" rx="2" ry="2" />
<text  x="928.37" y="1823.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="383.2" y="1925" width="1.2" height="15.0" fill="rgb(236,122,53)" rx="2" ry="2" />
<text  x="386.22" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::ScopeGuardImplBase (1 samples, 0.02%)</title><rect x="174.8" y="1893" width="0.2" height="15.0" fill="rgb(223,222,14)" rx="2" ry="2" />
<text  x="177.77" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="547.6" y="1845" width="0.2" height="15.0" fill="rgb(233,161,3)" rx="2" ry="2" />
<text  x="550.59" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1048.7" y="1941" width="0.4" height="15.0" fill="rgb(233,201,39)" rx="2" ry="2" />
<text  x="1051.65" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="119.2" y="85" width="14.3" height="15.0" fill="rgb(231,35,42)" rx="2" ry="2" />
<text  x="122.19" y="95.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="654.4" y="1877" width="0.2" height="15.0" fill="rgb(253,158,3)" rx="2" ry="2" />
<text  x="657.39" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1034.2" y="1973" width="0.2" height="15.0" fill="rgb(245,211,9)" rx="2" ry="2" />
<text  x="1037.16" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="733.8" y="1349" width="0.2" height="15.0" fill="rgb(222,207,38)" rx="2" ry="2" />
<text  x="736.80" y="1359.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (1 samples, 0.02%)</title><rect x="96.0" y="1973" width="0.2" height="15.0" fill="rgb(231,119,23)" rx="2" ry="2" />
<text  x="98.96" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="687.9" y="1749" width="0.2" height="15.0" fill="rgb(232,6,14)" rx="2" ry="2" />
<text  x="690.94" y="1759.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.9" y="1461" width="0.2" height="15.0" fill="rgb(212,159,7)" rx="2" ry="2" />
<text  x="828.92" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="857.3" y="1829" width="0.2" height="15.0" fill="rgb(254,214,23)" rx="2" ry="2" />
<text  x="860.28" y="1839.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="92.0" y="1925" width="0.2" height="15.0" fill="rgb(253,95,41)" rx="2" ry="2" />
<text  x="94.99" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="247.4" y="1493" width="0.2" height="15.0" fill="rgb(248,204,22)" rx="2" ry="2" />
<text  x="250.43" y="1503.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="739.0" y="1653" width="0.8" height="15.0" fill="rgb(219,8,10)" rx="2" ry="2" />
<text  x="741.96" y="1663.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="679.4" y="1685" width="0.2" height="15.0" fill="rgb(251,6,34)" rx="2" ry="2" />
<text  x="682.41" y="1695.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="105.9" y="2005" width="0.2" height="15.0" fill="rgb(211,57,34)" rx="2" ry="2" />
<text  x="108.88" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="825.5" y="1525" width="0.2" height="15.0" fill="rgb(245,21,49)" rx="2" ry="2" />
<text  x="828.52" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="878.7" y="1925" width="0.4" height="15.0" fill="rgb(211,152,40)" rx="2" ry="2" />
<text  x="881.72" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="822.5" y="1765" width="0.2" height="15.0" fill="rgb(251,154,7)" rx="2" ry="2" />
<text  x="825.54" y="1775.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="855.9" y="1925" width="0.2" height="15.0" fill="rgb(245,54,44)" rx="2" ry="2" />
<text  x="858.89" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="136.7" y="229" width="0.2" height="15.0" fill="rgb(217,58,2)" rx="2" ry="2" />
<text  x="139.66" y="239.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="740.9" y="1541" width="0.2" height="15.0" fill="rgb(231,138,9)" rx="2" ry="2" />
<text  x="743.95" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="622.6" y="1973" width="0.2" height="15.0" fill="rgb(233,28,49)" rx="2" ry="2" />
<text  x="625.63" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1068.1" y="1813" width="0.2" height="15.0" fill="rgb(247,71,23)" rx="2" ry="2" />
<text  x="1071.11" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="136.9" y="325" width="0.2" height="15.0" fill="rgb(209,107,20)" rx="2" ry="2" />
<text  x="139.85" y="335.5" ></text>
</g>
<g >
<title>destroy_inode (2 samples, 0.03%)</title><rect x="731.8" y="1717" width="0.4" height="15.0" fill="rgb(225,174,9)" rx="2" ry="2" />
<text  x="734.82" y="1727.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="194.4" y="1989" width="0.2" height="15.0" fill="rgb(208,180,48)" rx="2" ry="2" />
<text  x="197.42" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (2 samples, 0.03%)</title><rect x="130.7" y="37" width="0.4" height="15.0" fill="rgb(228,59,48)" rx="2" ry="2" />
<text  x="133.70" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="322.9" y="1813" width="0.2" height="15.0" fill="rgb(232,225,25)" rx="2" ry="2" />
<text  x="325.87" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="533.3" y="1941" width="0.4" height="15.0" fill="rgb(237,146,49)" rx="2" ry="2" />
<text  x="536.30" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (8 samples, 0.13%)</title><rect x="66.0" y="1925" width="1.6" height="15.0" fill="rgb(227,154,21)" rx="2" ry="2" />
<text  x="68.98" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="328.4" y="1685" width="0.2" height="15.0" fill="rgb(216,87,20)" rx="2" ry="2" />
<text  x="331.43" y="1695.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="1162.4" y="1925" width="0.2" height="15.0" fill="rgb(237,41,22)" rx="2" ry="2" />
<text  x="1165.41" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="825.7" y="1589" width="0.2" height="15.0" fill="rgb(225,201,42)" rx="2" ry="2" />
<text  x="828.72" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="559.9" y="1877" width="0.2" height="15.0" fill="rgb(231,28,37)" rx="2" ry="2" />
<text  x="562.90" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1162.6" y="1909" width="0.2" height="15.0" fill="rgb(209,121,39)" rx="2" ry="2" />
<text  x="1165.60" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="67.0" y="1797" width="0.2" height="15.0" fill="rgb(240,68,7)" rx="2" ry="2" />
<text  x="69.98" y="1807.5" ></text>
</g>
<g >
<title>fput (9 samples, 0.15%)</title><rect x="828.1" y="1813" width="1.8" height="15.0" fill="rgb(214,47,30)" rx="2" ry="2" />
<text  x="831.10" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="519.8" y="1957" width="0.4" height="15.0" fill="rgb(247,14,25)" rx="2" ry="2" />
<text  x="522.80" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1016.9" y="1957" width="0.4" height="15.0" fill="rgb(223,19,15)" rx="2" ry="2" />
<text  x="1019.89" y="1967.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="769.5" y="1653" width="0.4" height="15.0" fill="rgb(225,68,4)" rx="2" ry="2" />
<text  x="772.54" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1002.4" y="1781" width="0.2" height="15.0" fill="rgb(230,85,25)" rx="2" ry="2" />
<text  x="1005.40" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="283.0" y="1621" width="0.2" height="15.0" fill="rgb(235,95,30)" rx="2" ry="2" />
<text  x="285.96" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="490.2" y="1845" width="0.2" height="15.0" fill="rgb(207,123,21)" rx="2" ry="2" />
<text  x="493.22" y="1855.5" ></text>
</g>
<g >
<title>tcp_setsockopt (25 samples, 0.42%)</title><rect x="689.3" y="1909" width="5.0" height="15.0" fill="rgb(210,19,24)" rx="2" ry="2" />
<text  x="692.33" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="31.6" y="1957" width="0.2" height="15.0" fill="rgb(224,194,26)" rx="2" ry="2" />
<text  x="34.64" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="1171.9" y="2037" width="0.2" height="15.0" fill="rgb(219,111,43)" rx="2" ry="2" />
<text  x="1174.93" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="929.1" y="1909" width="0.4" height="15.0" fill="rgb(241,120,16)" rx="2" ry="2" />
<text  x="932.15" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="155.1" y="1973" width="0.2" height="15.0" fill="rgb(251,66,39)" rx="2" ry="2" />
<text  x="158.12" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="740.9" y="1605" width="0.2" height="15.0" fill="rgb(214,15,54)" rx="2" ry="2" />
<text  x="743.95" y="1615.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="1183.1" y="1749" width="0.2" height="15.0" fill="rgb(223,47,14)" rx="2" ry="2" />
<text  x="1186.05" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_active_ (12 samples, 0.20%)</title><rect x="1139.4" y="2053" width="2.4" height="15.0" fill="rgb(209,114,10)" rx="2" ry="2" />
<text  x="1142.38" y="2063.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.2" y="1957" width="0.8" height="15.0" fill="rgb(239,203,6)" rx="2" ry="2" />
<text  x="14.19" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="136.9" y="261" width="0.2" height="15.0" fill="rgb(207,34,2)" rx="2" ry="2" />
<text  x="139.85" y="271.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="486.8" y="1685" width="0.2" height="15.0" fill="rgb(221,26,14)" rx="2" ry="2" />
<text  x="489.84" y="1695.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="836.4" y="1925" width="0.4" height="15.0" fill="rgb(222,32,53)" rx="2" ry="2" />
<text  x="839.44" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="178.9" y="1925" width="0.2" height="15.0" fill="rgb(211,196,43)" rx="2" ry="2" />
<text  x="181.94" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1156.5" y="1813" width="0.1" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="1159.45" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="925.4" y="1861" width="0.8" height="15.0" fill="rgb(251,33,29)" rx="2" ry="2" />
<text  x="928.37" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="329.8" y="1797" width="0.2" height="15.0" fill="rgb(224,154,38)" rx="2" ry="2" />
<text  x="332.81" y="1807.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="1126.1" y="1877" width="0.2" height="15.0" fill="rgb(228,202,4)" rx="2" ry="2" />
<text  x="1129.08" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="289.3" y="1605" width="0.2" height="15.0" fill="rgb(224,90,49)" rx="2" ry="2" />
<text  x="292.32" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="623.4" y="1989" width="0.6" height="15.0" fill="rgb(243,17,43)" rx="2" ry="2" />
<text  x="626.43" y="1999.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="753.3" y="1733" width="0.4" height="15.0" fill="rgb(245,147,37)" rx="2" ry="2" />
<text  x="756.26" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="687.9" y="1829" width="0.2" height="15.0" fill="rgb(222,196,52)" rx="2" ry="2" />
<text  x="690.94" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="857.3" y="1813" width="0.2" height="15.0" fill="rgb(250,94,49)" rx="2" ry="2" />
<text  x="860.28" y="1823.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (3 samples, 0.05%)</title><rect x="1151.1" y="2005" width="0.6" height="15.0" fill="rgb(220,143,27)" rx="2" ry="2" />
<text  x="1154.09" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="526.9" y="1957" width="0.2" height="15.0" fill="rgb(249,182,41)" rx="2" ry="2" />
<text  x="529.94" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="1151.9" y="2053" width="0.4" height="15.0" fill="rgb(250,161,4)" rx="2" ry="2" />
<text  x="1154.88" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="676.2" y="1909" width="0.2" height="15.0" fill="rgb(221,73,30)" rx="2" ry="2" />
<text  x="679.23" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (15 samples, 0.25%)</title><rect x="1148.9" y="2037" width="3.0" height="15.0" fill="rgb(210,177,18)" rx="2" ry="2" />
<text  x="1151.91" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1109" width="18.5" height="15.0" fill="rgb(252,108,38)" rx="2" ry="2" />
<text  x="121.79" y="1119.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="269.3" y="1621" width="0.2" height="15.0" fill="rgb(205,107,53)" rx="2" ry="2" />
<text  x="272.27" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1189.0" y="1957" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1192.01" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1005.6" y="1925" width="0.2" height="15.0" fill="rgb(205,169,42)" rx="2" ry="2" />
<text  x="1008.58" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="283.0" y="1733" width="0.2" height="15.0" fill="rgb(231,85,51)" rx="2" ry="2" />
<text  x="285.96" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="700.6" y="1893" width="0.2" height="15.0" fill="rgb(236,88,40)" rx="2" ry="2" />
<text  x="703.65" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="597.4" y="1877" width="0.2" height="15.0" fill="rgb(248,13,49)" rx="2" ry="2" />
<text  x="600.42" y="1887.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="306.0" y="1669" width="0.4" height="15.0" fill="rgb(236,39,8)" rx="2" ry="2" />
<text  x="308.99" y="1679.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="699.1" y="1989" width="0.8" height="15.0" fill="rgb(243,42,48)" rx="2" ry="2" />
<text  x="702.06" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.1" y="1957" width="0.2" height="15.0" fill="rgb(209,87,22)" rx="2" ry="2" />
<text  x="941.08" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="838.8" y="1909" width="1.0" height="15.0" fill="rgb(247,227,5)" rx="2" ry="2" />
<text  x="841.82" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="189.3" y="1957" width="0.2" height="15.0" fill="rgb(234,118,37)" rx="2" ry="2" />
<text  x="192.26" y="1967.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.03%)</title><rect x="1113.4" y="1509" width="0.4" height="15.0" fill="rgb(236,120,11)" rx="2" ry="2" />
<text  x="1116.37" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="67.0" y="1893" width="0.2" height="15.0" fill="rgb(254,105,2)" rx="2" ry="2" />
<text  x="69.98" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1135.6" y="1941" width="0.2" height="15.0" fill="rgb(217,178,25)" rx="2" ry="2" />
<text  x="1138.61" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (2 samples, 0.03%)</title><rect x="857.7" y="1989" width="0.4" height="15.0" fill="rgb(213,174,20)" rx="2" ry="2" />
<text  x="860.68" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="746.1" y="1781" width="1.2" height="15.0" fill="rgb(220,93,20)" rx="2" ry="2" />
<text  x="749.11" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (7 samples, 0.12%)</title><rect x="949.0" y="2005" width="1.4" height="15.0" fill="rgb(210,168,38)" rx="2" ry="2" />
<text  x="952.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="119.8" y="37" width="0.2" height="15.0" fill="rgb(226,97,0)" rx="2" ry="2" />
<text  x="122.78" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="136.3" y="229" width="0.2" height="15.0" fill="rgb(229,33,16)" rx="2" ry="2" />
<text  x="139.26" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (15 samples, 0.25%)</title><rect x="994.9" y="1989" width="2.9" height="15.0" fill="rgb(222,128,42)" rx="2" ry="2" />
<text  x="997.86" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="193.0" y="1989" width="1.4" height="15.0" fill="rgb(208,15,46)" rx="2" ry="2" />
<text  x="196.03" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (5 samples, 0.08%)</title><rect x="862.0" y="1973" width="1.0" height="15.0" fill="rgb(234,133,15)" rx="2" ry="2" />
<text  x="865.05" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="155.9" y="1749" width="0.2" height="15.0" fill="rgb(252,156,35)" rx="2" ry="2" />
<text  x="158.91" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="844.2" y="1925" width="0.2" height="15.0" fill="rgb(218,160,15)" rx="2" ry="2" />
<text  x="847.18" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="543.8" y="1941" width="0.2" height="15.0" fill="rgb(208,154,53)" rx="2" ry="2" />
<text  x="546.82" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="510.3" y="1845" width="0.2" height="15.0" fill="rgb(250,164,19)" rx="2" ry="2" />
<text  x="513.27" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="600.8" y="1845" width="0.2" height="15.0" fill="rgb(215,169,22)" rx="2" ry="2" />
<text  x="603.79" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="80.1" y="1733" width="0.2" height="15.0" fill="rgb(207,211,28)" rx="2" ry="2" />
<text  x="83.08" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1086.8" y="1733" width="0.2" height="15.0" fill="rgb(235,20,32)" rx="2" ry="2" />
<text  x="1089.77" y="1743.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="84.4" y="1957" width="0.4" height="15.0" fill="rgb(215,8,42)" rx="2" ry="2" />
<text  x="87.44" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (19 samples, 0.32%)</title><rect x="311.0" y="1653" width="3.7" height="15.0" fill="rgb(235,173,21)" rx="2" ry="2" />
<text  x="313.96" y="1663.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="806.9" y="1685" width="0.2" height="15.0" fill="rgb(215,150,23)" rx="2" ry="2" />
<text  x="809.86" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="615.1" y="2005" width="0.2" height="15.0" fill="rgb(208,163,31)" rx="2" ry="2" />
<text  x="618.09" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="241.7" y="1541" width="0.2" height="15.0" fill="rgb(228,182,1)" rx="2" ry="2" />
<text  x="244.67" y="1551.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="242.1" y="1797" width="0.2" height="15.0" fill="rgb(237,33,27)" rx="2" ry="2" />
<text  x="245.07" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="687.9" y="1941" width="0.2" height="15.0" fill="rgb(211,107,49)" rx="2" ry="2" />
<text  x="690.94" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="520.0" y="1845" width="0.2" height="15.0" fill="rgb(236,141,9)" rx="2" ry="2" />
<text  x="523.00" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1189.0" y="1925" width="0.2" height="15.0" fill="rgb(233,187,28)" rx="2" ry="2" />
<text  x="1192.01" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="136.5" y="293" width="0.2" height="15.0" fill="rgb(254,164,53)" rx="2" ry="2" />
<text  x="139.46" y="303.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="178.9" y="1877" width="0.2" height="15.0" fill="rgb(209,192,43)" rx="2" ry="2" />
<text  x="181.94" y="1887.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="743.1" y="1477" width="0.2" height="15.0" fill="rgb(240,154,2)" rx="2" ry="2" />
<text  x="746.13" y="1487.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="33.4" y="1957" width="0.2" height="15.0" fill="rgb(220,144,24)" rx="2" ry="2" />
<text  x="36.43" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1144.1" y="1957" width="0.2" height="15.0" fill="rgb(211,214,10)" rx="2" ry="2" />
<text  x="1147.14" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (3 samples, 0.05%)</title><rect x="705.4" y="2037" width="0.6" height="15.0" fill="rgb(253,15,34)" rx="2" ry="2" />
<text  x="708.41" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="72.1" y="1941" width="0.2" height="15.0" fill="rgb(244,153,34)" rx="2" ry="2" />
<text  x="75.14" y="1951.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1016.5" y="1893" width="0.2" height="15.0" fill="rgb(210,209,7)" rx="2" ry="2" />
<text  x="1019.49" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="178.9" y="1781" width="0.2" height="15.0" fill="rgb(228,48,24)" rx="2" ry="2" />
<text  x="181.94" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="637.9" y="1909" width="0.4" height="15.0" fill="rgb(253,207,54)" rx="2" ry="2" />
<text  x="640.92" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="136.3" y="165" width="0.2" height="15.0" fill="rgb(239,172,28)" rx="2" ry="2" />
<text  x="139.26" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="915.2" y="1989" width="0.2" height="15.0" fill="rgb(242,194,17)" rx="2" ry="2" />
<text  x="918.25" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="549.8" y="1941" width="0.4" height="15.0" fill="rgb(224,106,7)" rx="2" ry="2" />
<text  x="552.77" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.5" y="1893" width="0.2" height="15.0" fill="rgb(240,149,43)" rx="2" ry="2" />
<text  x="160.50" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="100.1" y="1909" width="0.2" height="15.0" fill="rgb(228,184,12)" rx="2" ry="2" />
<text  x="103.13" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="844.2" y="1781" width="0.2" height="15.0" fill="rgb(228,78,50)" rx="2" ry="2" />
<text  x="847.18" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="218.6" y="2021" width="0.4" height="15.0" fill="rgb(230,140,12)" rx="2" ry="2" />
<text  x="221.64" y="2031.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="807.1" y="1685" width="0.6" height="15.0" fill="rgb(218,36,15)" rx="2" ry="2" />
<text  x="810.06" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="540.4" y="1877" width="0.8" height="15.0" fill="rgb(251,65,17)" rx="2" ry="2" />
<text  x="543.44" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (5 samples, 0.08%)</title><rect x="878.1" y="1941" width="1.0" height="15.0" fill="rgb(250,164,22)" rx="2" ry="2" />
<text  x="881.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (2 samples, 0.03%)</title><rect x="159.7" y="1957" width="0.4" height="15.0" fill="rgb(226,177,0)" rx="2" ry="2" />
<text  x="162.68" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="597.4" y="1909" width="0.2" height="15.0" fill="rgb(233,96,13)" rx="2" ry="2" />
<text  x="600.42" y="1919.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (2 samples, 0.03%)</title><rect x="95.4" y="1957" width="0.4" height="15.0" fill="rgb(206,54,0)" rx="2" ry="2" />
<text  x="98.36" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="169.4" y="1893" width="0.2" height="15.0" fill="rgb(247,49,45)" rx="2" ry="2" />
<text  x="172.41" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="206.9" y="1925" width="0.2" height="15.0" fill="rgb(252,208,42)" rx="2" ry="2" />
<text  x="209.93" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.6" y="1925" width="0.2" height="15.0" fill="rgb(205,88,37)" rx="2" ry="2" />
<text  x="98.56" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (8 samples, 0.13%)</title><rect x="78.9" y="1925" width="1.6" height="15.0" fill="rgb(237,225,31)" rx="2" ry="2" />
<text  x="81.89" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="825.1" y="1621" width="0.2" height="15.0" fill="rgb(206,158,10)" rx="2" ry="2" />
<text  x="828.12" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1154.3" y="1765" width="0.2" height="15.0" fill="rgb(232,118,2)" rx="2" ry="2" />
<text  x="1157.27" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="638.7" y="1909" width="0.2" height="15.0" fill="rgb(252,189,44)" rx="2" ry="2" />
<text  x="641.71" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="140.0" y="1605" width="0.2" height="15.0" fill="rgb(213,84,25)" rx="2" ry="2" />
<text  x="143.03" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="408.2" y="1733" width="0.2" height="15.0" fill="rgb(248,194,27)" rx="2" ry="2" />
<text  x="411.23" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="134.7" y="37" width="0.2" height="15.0" fill="rgb(237,67,46)" rx="2" ry="2" />
<text  x="137.67" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="156.3" y="1749" width="0.2" height="15.0" fill="rgb(252,27,46)" rx="2" ry="2" />
<text  x="159.31" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="136.3" y="357" width="0.2" height="15.0" fill="rgb(235,192,16)" rx="2" ry="2" />
<text  x="139.26" y="367.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="687.9" y="1701" width="0.2" height="15.0" fill="rgb(251,165,17)" rx="2" ry="2" />
<text  x="690.94" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (106 samples, 1.78%)</title><rect x="919.6" y="2005" width="21.1" height="15.0" fill="rgb(213,5,1)" rx="2" ry="2" />
<text  x="922.62" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="934.9" y="1877" width="0.4" height="15.0" fill="rgb(248,53,35)" rx="2" ry="2" />
<text  x="937.90" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="458.7" y="1797" width="0.2" height="15.0" fill="rgb(233,220,32)" rx="2" ry="2" />
<text  x="461.65" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="559.9" y="1813" width="0.2" height="15.0" fill="rgb(232,160,2)" rx="2" ry="2" />
<text  x="562.90" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="118.8" y="1477" width="19.6" height="15.0" fill="rgb(219,69,12)" rx="2" ry="2" />
<text  x="121.79" y="1487.5" ></text>
</g>
<g >
<title>__libc_recv (534 samples, 8.98%)</title><rect x="1027.8" y="2053" width="106.0" height="15.0" fill="rgb(211,8,1)" rx="2" ry="2" />
<text  x="1030.81" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="613.1" y="1781" width="0.2" height="15.0" fill="rgb(249,156,0)" rx="2" ry="2" />
<text  x="616.10" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="185.5" y="2021" width="0.2" height="15.0" fill="rgb(247,41,47)" rx="2" ry="2" />
<text  x="188.49" y="2031.5" ></text>
</g>
<g >
<title>__d_alloc (11 samples, 0.19%)</title><rect x="412.4" y="1925" width="2.2" height="15.0" fill="rgb(225,10,45)" rx="2" ry="2" />
<text  x="415.40" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="956.3" y="1861" width="0.2" height="15.0" fill="rgb(216,161,31)" rx="2" ry="2" />
<text  x="959.34" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="408.2" y="1765" width="0.2" height="15.0" fill="rgb(250,205,19)" rx="2" ry="2" />
<text  x="411.23" y="1775.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.10%)</title><rect x="12.4" y="1989" width="1.2" height="15.0" fill="rgb(209,193,6)" rx="2" ry="2" />
<text  x="15.38" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="594.8" y="1829" width="0.2" height="15.0" fill="rgb(205,143,29)" rx="2" ry="2" />
<text  x="597.84" y="1839.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1115.4" y="1893" width="0.2" height="15.0" fill="rgb(209,19,42)" rx="2" ry="2" />
<text  x="1118.36" y="1903.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1067.9" y="1861" width="0.2" height="15.0" fill="rgb(209,229,20)" rx="2" ry="2" />
<text  x="1070.91" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="138.0" y="1253" width="0.2" height="15.0" fill="rgb(216,128,43)" rx="2" ry="2" />
<text  x="141.05" y="1263.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (2 samples, 0.03%)</title><rect x="1144.3" y="2005" width="0.4" height="15.0" fill="rgb(229,83,36)" rx="2" ry="2" />
<text  x="1147.34" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (3 samples, 0.05%)</title><rect x="582.7" y="1925" width="0.6" height="15.0" fill="rgb(249,56,33)" rx="2" ry="2" />
<text  x="585.73" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="167.0" y="1669" width="0.2" height="15.0" fill="rgb(234,73,40)" rx="2" ry="2" />
<text  x="170.03" y="1679.5" ></text>
</g>
<g >
<title>__mix_pool_bytes (1 samples, 0.02%)</title><rect x="351.1" y="1909" width="0.2" height="15.0" fill="rgb(217,12,5)" rx="2" ry="2" />
<text  x="354.06" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="824.9" y="1797" width="0.2" height="15.0" fill="rgb(208,187,42)" rx="2" ry="2" />
<text  x="827.92" y="1807.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (7 samples, 0.12%)</title><rect x="1134.6" y="2053" width="1.4" height="15.0" fill="rgb(218,21,30)" rx="2" ry="2" />
<text  x="1137.61" y="2063.5" ></text>
</g>
<g >
<title>event_del_nolock_ (2 samples, 0.03%)</title><rect x="114.6" y="2005" width="0.4" height="15.0" fill="rgb(211,11,26)" rx="2" ry="2" />
<text  x="117.62" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1005.6" y="1861" width="0.2" height="15.0" fill="rgb(223,202,9)" rx="2" ry="2" />
<text  x="1008.58" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="908.1" y="2005" width="0.6" height="15.0" fill="rgb(248,27,47)" rx="2" ry="2" />
<text  x="911.10" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="613.1" y="1813" width="0.2" height="15.0" fill="rgb(219,87,35)" rx="2" ry="2" />
<text  x="616.10" y="1823.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="836.6" y="1781" width="0.2" height="15.0" fill="rgb(214,6,4)" rx="2" ry="2" />
<text  x="839.64" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="936.5" y="1605" width="0.2" height="15.0" fill="rgb(232,153,26)" rx="2" ry="2" />
<text  x="939.49" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="725.9" y="1781" width="0.2" height="15.0" fill="rgb(239,117,29)" rx="2" ry="2" />
<text  x="728.86" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.7" y="1813" width="0.2" height="15.0" fill="rgb(226,81,37)" rx="2" ry="2" />
<text  x="887.68" y="1823.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="807.3" y="1669" width="0.4" height="15.0" fill="rgb(221,72,40)" rx="2" ry="2" />
<text  x="810.25" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="762.6" y="1541" width="0.4" height="15.0" fill="rgb(244,67,48)" rx="2" ry="2" />
<text  x="765.59" y="1551.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="93.0" y="1829" width="0.2" height="15.0" fill="rgb(207,6,29)" rx="2" ry="2" />
<text  x="95.98" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="242.1" y="1813" width="0.2" height="15.0" fill="rgb(225,29,30)" rx="2" ry="2" />
<text  x="245.07" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="1125.9" y="1957" width="0.4" height="15.0" fill="rgb(231,58,35)" rx="2" ry="2" />
<text  x="1128.88" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="133.3" y="53" width="0.2" height="15.0" fill="rgb(254,209,27)" rx="2" ry="2" />
<text  x="136.28" y="63.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (87 samples, 1.46%)</title><rect x="23.9" y="2021" width="17.3" height="15.0" fill="rgb(239,125,8)" rx="2" ry="2" />
<text  x="26.90" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="61.6" y="1749" width="0.2" height="15.0" fill="rgb(233,82,21)" rx="2" ry="2" />
<text  x="64.62" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="483.1" y="1701" width="0.4" height="15.0" fill="rgb(226,25,43)" rx="2" ry="2" />
<text  x="486.07" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="936.5" y="1717" width="0.2" height="15.0" fill="rgb(227,74,13)" rx="2" ry="2" />
<text  x="939.49" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="803.1" y="1573" width="0.2" height="15.0" fill="rgb(253,79,39)" rx="2" ry="2" />
<text  x="806.09" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1154.3" y="1909" width="0.2" height="15.0" fill="rgb(253,200,29)" rx="2" ry="2" />
<text  x="1157.27" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="264.7" y="1845" width="0.2" height="15.0" fill="rgb(251,137,42)" rx="2" ry="2" />
<text  x="267.70" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="418.8" y="1989" width="0.3" height="15.0" fill="rgb(219,178,17)" rx="2" ry="2" />
<text  x="421.75" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="748.7" y="1749" width="0.2" height="15.0" fill="rgb(241,209,3)" rx="2" ry="2" />
<text  x="751.69" y="1759.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1106.8" y="1845" width="0.2" height="15.0" fill="rgb(245,103,13)" rx="2" ry="2" />
<text  x="1109.82" y="1855.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1183.3" y="1845" width="0.1" height="15.0" fill="rgb(241,169,27)" rx="2" ry="2" />
<text  x="1186.25" y="1855.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="659.2" y="1685" width="0.2" height="15.0" fill="rgb(228,186,3)" rx="2" ry="2" />
<text  x="662.16" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="527.1" y="1973" width="0.4" height="15.0" fill="rgb(251,185,32)" rx="2" ry="2" />
<text  x="530.14" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="831.9" y="1829" width="0.4" height="15.0" fill="rgb(209,135,1)" rx="2" ry="2" />
<text  x="834.87" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (83 samples, 1.40%)</title><rect x="682.2" y="2005" width="16.5" height="15.0" fill="rgb(231,104,0)" rx="2" ry="2" />
<text  x="685.19" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1101.3" y="1829" width="0.2" height="15.0" fill="rgb(220,8,50)" rx="2" ry="2" />
<text  x="1104.26" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="848.1" y="1813" width="0.2" height="15.0" fill="rgb(243,29,27)" rx="2" ry="2" />
<text  x="851.15" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="61.0" y="1717" width="0.2" height="15.0" fill="rgb(248,91,12)" rx="2" ry="2" />
<text  x="64.02" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="844.2" y="1893" width="0.2" height="15.0" fill="rgb(242,170,30)" rx="2" ry="2" />
<text  x="847.18" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="694.1" y="1621" width="0.2" height="15.0" fill="rgb(234,223,12)" rx="2" ry="2" />
<text  x="697.10" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="519.8" y="1941" width="0.4" height="15.0" fill="rgb(224,54,22)" rx="2" ry="2" />
<text  x="522.80" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="114.8" y="1861" width="0.2" height="15.0" fill="rgb(212,173,28)" rx="2" ry="2" />
<text  x="117.82" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1005.6" y="1877" width="0.2" height="15.0" fill="rgb(234,97,14)" rx="2" ry="2" />
<text  x="1008.58" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="329.4" y="1717" width="0.2" height="15.0" fill="rgb(225,172,23)" rx="2" ry="2" />
<text  x="332.42" y="1727.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (8 samples, 0.13%)</title><rect x="473.1" y="1941" width="1.6" height="15.0" fill="rgb(249,8,2)" rx="2" ry="2" />
<text  x="476.15" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="955.2" y="2021" width="0.1" height="15.0" fill="rgb(251,45,10)" rx="2" ry="2" />
<text  x="958.15" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="155.9" y="1861" width="0.2" height="15.0" fill="rgb(244,169,45)" rx="2" ry="2" />
<text  x="158.91" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="88.4" y="1957" width="0.8" height="15.0" fill="rgb(232,144,34)" rx="2" ry="2" />
<text  x="91.42" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1183.1" y="1877" width="0.3" height="15.0" fill="rgb(238,209,48)" rx="2" ry="2" />
<text  x="1186.05" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="283.0" y="1557" width="0.2" height="15.0" fill="rgb(233,37,23)" rx="2" ry="2" />
<text  x="285.96" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1018.3" y="1877" width="0.2" height="15.0" fill="rgb(244,45,27)" rx="2" ry="2" />
<text  x="1021.28" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="332.0" y="1813" width="0.4" height="15.0" fill="rgb(205,63,26)" rx="2" ry="2" />
<text  x="335.00" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (2 samples, 0.03%)</title><rect x="1151.9" y="2021" width="0.4" height="15.0" fill="rgb(222,161,53)" rx="2" ry="2" />
<text  x="1154.88" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (11 samples, 0.19%)</title><rect x="890.0" y="1973" width="2.2" height="15.0" fill="rgb(248,98,27)" rx="2" ry="2" />
<text  x="893.04" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="761.0" y="1669" width="0.2" height="15.0" fill="rgb(214,19,54)" rx="2" ry="2" />
<text  x="764.00" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="562.1" y="1717" width="0.2" height="15.0" fill="rgb(212,68,21)" rx="2" ry="2" />
<text  x="565.08" y="1727.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (9 samples, 0.15%)</title><rect x="842.4" y="1925" width="1.8" height="15.0" fill="rgb(222,26,16)" rx="2" ry="2" />
<text  x="845.39" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="640.5" y="1941" width="0.8" height="15.0" fill="rgb(210,48,13)" rx="2" ry="2" />
<text  x="643.50" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="675.4" y="1829" width="0.2" height="15.0" fill="rgb(235,206,51)" rx="2" ry="2" />
<text  x="678.44" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1172.7" y="1733" width="0.2" height="15.0" fill="rgb(248,138,50)" rx="2" ry="2" />
<text  x="1175.73" y="1743.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="95.4" y="1941" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="98.36" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.66%)</title><rect x="119.2" y="53" width="7.7" height="15.0" fill="rgb(224,79,49)" rx="2" ry="2" />
<text  x="122.19" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="329.4" y="1669" width="0.2" height="15.0" fill="rgb(212,198,48)" rx="2" ry="2" />
<text  x="332.42" y="1679.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="653.4" y="2005" width="0.2" height="15.0" fill="rgb(244,121,21)" rx="2" ry="2" />
<text  x="656.40" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (17 samples, 0.29%)</title><rect x="538.7" y="1973" width="3.3" height="15.0" fill="rgb(209,169,49)" rx="2" ry="2" />
<text  x="541.66" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (34 samples, 0.57%)</title><rect x="1108.2" y="1557" width="6.8" height="15.0" fill="rgb(254,9,30)" rx="2" ry="2" />
<text  x="1111.21" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="983.7" y="1877" width="0.2" height="15.0" fill="rgb(231,112,36)" rx="2" ry="2" />
<text  x="986.74" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1156.5" y="1941" width="0.1" height="15.0" fill="rgb(221,216,53)" rx="2" ry="2" />
<text  x="1159.45" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="74.9" y="1685" width="0.2" height="15.0" fill="rgb(254,46,49)" rx="2" ry="2" />
<text  x="77.92" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (38 samples, 0.64%)</title><rect x="1107.4" y="1605" width="7.6" height="15.0" fill="rgb(246,160,1)" rx="2" ry="2" />
<text  x="1110.42" y="1615.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="775.5" y="1301" width="0.2" height="15.0" fill="rgb(252,193,21)" rx="2" ry="2" />
<text  x="778.49" y="1311.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1101.5" y="1909" width="0.2" height="15.0" fill="rgb(237,209,34)" rx="2" ry="2" />
<text  x="1104.46" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="246.0" y="1893" width="0.2" height="15.0" fill="rgb(211,224,34)" rx="2" ry="2" />
<text  x="249.04" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="136.7" y="149" width="0.2" height="15.0" fill="rgb(226,177,36)" rx="2" ry="2" />
<text  x="139.66" y="159.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="61.0" y="1909" width="0.2" height="15.0" fill="rgb(232,141,13)" rx="2" ry="2" />
<text  x="64.02" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="700.6" y="1733" width="0.2" height="15.0" fill="rgb(224,50,19)" rx="2" ry="2" />
<text  x="703.65" y="1743.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="572.4" y="1941" width="0.2" height="15.0" fill="rgb(210,89,10)" rx="2" ry="2" />
<text  x="575.41" y="1951.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="844.8" y="1877" width="0.4" height="15.0" fill="rgb(212,174,26)" rx="2" ry="2" />
<text  x="847.77" y="1887.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1068.1" y="1765" width="0.2" height="15.0" fill="rgb(237,217,51)" rx="2" ry="2" />
<text  x="1071.11" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="31.6" y="1973" width="0.4" height="15.0" fill="rgb(234,200,31)" rx="2" ry="2" />
<text  x="34.64" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="679.6" y="1989" width="0.2" height="15.0" fill="rgb(247,131,41)" rx="2" ry="2" />
<text  x="682.61" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="133.3" y="69" width="0.2" height="15.0" fill="rgb(228,116,7)" rx="2" ry="2" />
<text  x="136.28" y="79.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="329.8" y="1701" width="0.2" height="15.0" fill="rgb(223,81,38)" rx="2" ry="2" />
<text  x="332.81" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="150.0" y="1989" width="0.2" height="15.0" fill="rgb(209,139,45)" rx="2" ry="2" />
<text  x="152.96" y="1999.5" ></text>
</g>
<g >
<title>__close (16 samples, 0.27%)</title><rect x="957.5" y="1973" width="3.2" height="15.0" fill="rgb(239,100,14)" rx="2" ry="2" />
<text  x="960.53" y="1983.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="273.2" y="1893" width="0.4" height="15.0" fill="rgb(217,122,18)" rx="2" ry="2" />
<text  x="276.24" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="883.5" y="1941" width="0.2" height="15.0" fill="rgb(228,38,9)" rx="2" ry="2" />
<text  x="886.49" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="543.8" y="1525" width="0.2" height="15.0" fill="rgb(212,150,26)" rx="2" ry="2" />
<text  x="546.82" y="1535.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="945.4" y="1957" width="0.2" height="15.0" fill="rgb(243,40,44)" rx="2" ry="2" />
<text  x="948.42" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.2" y="1941" width="0.8" height="15.0" fill="rgb(239,144,1)" rx="2" ry="2" />
<text  x="14.19" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="533.5" y="1925" width="0.2" height="15.0" fill="rgb(231,148,35)" rx="2" ry="2" />
<text  x="536.50" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="698.5" y="1989" width="0.2" height="15.0" fill="rgb(231,15,46)" rx="2" ry="2" />
<text  x="701.47" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (2 samples, 0.03%)</title><rect x="704.0" y="2037" width="0.4" height="15.0" fill="rgb(222,200,3)" rx="2" ry="2" />
<text  x="707.02" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="112.4" y="2037" width="0.2" height="15.0" fill="rgb(211,90,10)" rx="2" ry="2" />
<text  x="115.44" y="2047.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="105.1" y="1989" width="0.2" height="15.0" fill="rgb(227,50,1)" rx="2" ry="2" />
<text  x="108.09" y="1999.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="196.4" y="1701" width="0.2" height="15.0" fill="rgb(239,190,35)" rx="2" ry="2" />
<text  x="199.41" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="459.6" y="1893" width="0.2" height="15.0" fill="rgb(208,168,4)" rx="2" ry="2" />
<text  x="462.65" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="982.0" y="1861" width="0.3" height="15.0" fill="rgb(207,172,50)" rx="2" ry="2" />
<text  x="984.95" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.32%)</title><rect x="419.1" y="2021" width="3.8" height="15.0" fill="rgb(248,122,26)" rx="2" ry="2" />
<text  x="422.15" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="745.9" y="1461" width="0.2" height="15.0" fill="rgb(227,128,5)" rx="2" ry="2" />
<text  x="748.91" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="597.4" y="1893" width="0.2" height="15.0" fill="rgb(243,150,9)" rx="2" ry="2" />
<text  x="600.42" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="160.3" y="1941" width="0.2" height="15.0" fill="rgb(214,93,30)" rx="2" ry="2" />
<text  x="163.28" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (123 samples, 2.07%)</title><rect x="771.5" y="1621" width="24.4" height="15.0" fill="rgb(218,42,32)" rx="2" ry="2" />
<text  x="774.52" y="1631.5" >i..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="700.6" y="1765" width="0.2" height="15.0" fill="rgb(249,7,21)" rx="2" ry="2" />
<text  x="703.65" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1177.1" y="1765" width="0.2" height="15.0" fill="rgb(253,207,9)" rx="2" ry="2" />
<text  x="1180.10" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="443.4" y="1973" width="0.6" height="15.0" fill="rgb(249,66,41)" rx="2" ry="2" />
<text  x="446.37" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1144.1" y="1941" width="0.2" height="15.0" fill="rgb(205,57,20)" rx="2" ry="2" />
<text  x="1147.14" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="138.0" y="1045" width="0.2" height="15.0" fill="rgb(229,123,26)" rx="2" ry="2" />
<text  x="141.05" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="118.8" y="1525" width="20.6" height="15.0" fill="rgb(214,110,7)" rx="2" ry="2" />
<text  x="121.79" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="844.4" y="1925" width="0.2" height="15.0" fill="rgb(225,154,44)" rx="2" ry="2" />
<text  x="847.38" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="624.6" y="2021" width="0.6" height="15.0" fill="rgb(218,8,43)" rx="2" ry="2" />
<text  x="627.62" y="2031.5" ></text>
</g>
<g >
<title>ip_output (93 samples, 1.56%)</title><rect x="297.9" y="1781" width="18.4" height="15.0" fill="rgb(232,204,1)" rx="2" ry="2" />
<text  x="300.85" y="1791.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1118.1" y="1909" width="0.4" height="15.0" fill="rgb(231,163,5)" rx="2" ry="2" />
<text  x="1121.14" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="458.5" y="1877" width="0.2" height="15.0" fill="rgb(254,56,20)" rx="2" ry="2" />
<text  x="461.46" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="775.3" y="1381" width="0.6" height="15.0" fill="rgb(218,217,41)" rx="2" ry="2" />
<text  x="778.29" y="1391.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="504.9" y="1813" width="0.8" height="15.0" fill="rgb(213,89,34)" rx="2" ry="2" />
<text  x="507.91" y="1823.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="630.4" y="1653" width="0.2" height="15.0" fill="rgb(207,135,31)" rx="2" ry="2" />
<text  x="633.37" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (4 samples, 0.07%)</title><rect x="185.7" y="2021" width="0.8" height="15.0" fill="rgb(251,170,26)" rx="2" ry="2" />
<text  x="188.69" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (14 samples, 0.24%)</title><rect x="883.9" y="1957" width="2.8" height="15.0" fill="rgb(223,91,13)" rx="2" ry="2" />
<text  x="886.88" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="679.4" y="1925" width="0.2" height="15.0" fill="rgb(246,113,17)" rx="2" ry="2" />
<text  x="682.41" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="60.2" y="1925" width="0.2" height="15.0" fill="rgb(215,172,29)" rx="2" ry="2" />
<text  x="63.23" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="416.8" y="1957" width="1.0" height="15.0" fill="rgb(217,215,33)" rx="2" ry="2" />
<text  x="419.77" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (35 samples, 0.59%)</title><rect x="545.0" y="2005" width="7.0" height="15.0" fill="rgb(247,12,6)" rx="2" ry="2" />
<text  x="548.01" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.6" y="1909" width="0.2" height="15.0" fill="rgb(246,104,10)" rx="2" ry="2" />
<text  x="494.61" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="138.8" y="1365" width="0.2" height="15.0" fill="rgb(251,197,21)" rx="2" ry="2" />
<text  x="141.84" y="1375.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="84.0" y="1925" width="0.4" height="15.0" fill="rgb(210,199,1)" rx="2" ry="2" />
<text  x="87.05" y="1935.5" ></text>
</g>
<g >
<title>event_base_set (2 samples, 0.03%)</title><rect x="538.9" y="1957" width="0.4" height="15.0" fill="rgb(223,10,33)" rx="2" ry="2" />
<text  x="541.86" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="1172.7" y="1685" width="0.2" height="15.0" fill="rgb(223,83,2)" rx="2" ry="2" />
<text  x="1175.73" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="745.9" y="1557" width="0.2" height="15.0" fill="rgb(206,70,29)" rx="2" ry="2" />
<text  x="748.91" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="844.2" y="1941" width="0.2" height="15.0" fill="rgb(212,206,27)" rx="2" ry="2" />
<text  x="847.18" y="1951.5" ></text>
</g>
<g >
<title>alloc_file (39 samples, 0.66%)</title><rect x="404.7" y="1941" width="7.7" height="15.0" fill="rgb(231,162,19)" rx="2" ry="2" />
<text  x="407.66" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="549.4" y="1957" width="1.0" height="15.0" fill="rgb(241,107,11)" rx="2" ry="2" />
<text  x="552.38" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="899.2" y="1957" width="0.2" height="15.0" fill="rgb(239,43,40)" rx="2" ry="2" />
<text  x="902.17" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (6 samples, 0.10%)</title><rect x="528.5" y="2037" width="1.2" height="15.0" fill="rgb(218,50,24)" rx="2" ry="2" />
<text  x="531.53" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="289.3" y="1829" width="0.2" height="15.0" fill="rgb(218,91,15)" rx="2" ry="2" />
<text  x="292.32" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="996.4" y="1957" width="0.2" height="15.0" fill="rgb(243,83,24)" rx="2" ry="2" />
<text  x="999.44" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (1 samples, 0.02%)</title><rect x="915.4" y="1989" width="0.2" height="15.0" fill="rgb(226,211,2)" rx="2" ry="2" />
<text  x="918.45" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1137.0" y="2037" width="0.2" height="15.0" fill="rgb(240,186,33)" rx="2" ry="2" />
<text  x="1140.00" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="73.7" y="1973" width="0.2" height="15.0" fill="rgb(214,17,31)" rx="2" ry="2" />
<text  x="76.72" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="91.4" y="1877" width="0.2" height="15.0" fill="rgb(222,164,20)" rx="2" ry="2" />
<text  x="94.39" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1154.3" y="1893" width="0.2" height="15.0" fill="rgb(224,73,39)" rx="2" ry="2" />
<text  x="1157.27" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="93.2" y="1925" width="0.2" height="15.0" fill="rgb(226,154,5)" rx="2" ry="2" />
<text  x="96.18" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="163.3" y="1685" width="0.2" height="15.0" fill="rgb(210,216,2)" rx="2" ry="2" />
<text  x="166.26" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1179.7" y="2005" width="0.4" height="15.0" fill="rgb(214,176,47)" rx="2" ry="2" />
<text  x="1182.68" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (128 samples, 2.15%)</title><rect x="117.8" y="1877" width="25.4" height="15.0" fill="rgb(209,188,44)" rx="2" ry="2" />
<text  x="120.80" y="1887.5" >[..</text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (45 samples, 0.76%)</title><rect x="928.4" y="1941" width="8.9" height="15.0" fill="rgb(218,145,11)" rx="2" ry="2" />
<text  x="931.35" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="408.4" y="1845" width="0.2" height="15.0" fill="rgb(232,117,47)" rx="2" ry="2" />
<text  x="411.43" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1034.2" y="2005" width="0.2" height="15.0" fill="rgb(232,48,27)" rx="2" ry="2" />
<text  x="1037.16" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6 samples, 0.10%)</title><rect x="410.6" y="1893" width="1.2" height="15.0" fill="rgb(238,108,9)" rx="2" ry="2" />
<text  x="413.61" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1127.5" y="1973" width="0.4" height="15.0" fill="rgb(234,192,32)" rx="2" ry="2" />
<text  x="1130.47" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="138.8" y="1429" width="0.2" height="15.0" fill="rgb(254,168,41)" rx="2" ry="2" />
<text  x="141.84" y="1439.5" ></text>
</g>
<g >
<title>sys_madvise (1 samples, 0.02%)</title><rect x="1133.8" y="2005" width="0.2" height="15.0" fill="rgb(206,110,9)" rx="2" ry="2" />
<text  x="1136.82" y="2015.5" ></text>
</g>
<g >
<title>ksize (11 samples, 0.19%)</title><rect x="284.6" y="1845" width="2.1" height="15.0" fill="rgb(211,180,5)" rx="2" ry="2" />
<text  x="287.55" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="662.1" y="1941" width="0.2" height="15.0" fill="rgb(232,92,1)" rx="2" ry="2" />
<text  x="665.14" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1048.9" y="1813" width="0.2" height="15.0" fill="rgb(251,15,16)" rx="2" ry="2" />
<text  x="1051.85" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="241.7" y="1669" width="0.2" height="15.0" fill="rgb(247,17,33)" rx="2" ry="2" />
<text  x="244.67" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="300.6" y="1557" width="0.4" height="15.0" fill="rgb(250,18,24)" rx="2" ry="2" />
<text  x="303.63" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (47 samples, 0.79%)</title><rect x="147.2" y="2005" width="9.3" height="15.0" fill="rgb(244,15,22)" rx="2" ry="2" />
<text  x="150.18" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (94 samples, 1.58%)</title><rect x="1068.3" y="1909" width="18.7" height="15.0" fill="rgb(233,35,8)" rx="2" ry="2" />
<text  x="1071.31" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="694.1" y="1397" width="0.2" height="15.0" fill="rgb(240,59,44)" rx="2" ry="2" />
<text  x="697.10" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1016.9" y="2021" width="0.4" height="15.0" fill="rgb(219,180,33)" rx="2" ry="2" />
<text  x="1019.89" y="2031.5" ></text>
</g>
<g >
<title>validate_xmit_skb (4 samples, 0.07%)</title><rect x="314.7" y="1669" width="0.8" height="15.0" fill="rgb(254,35,12)" rx="2" ry="2" />
<text  x="317.73" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="95.6" y="1893" width="0.2" height="15.0" fill="rgb(249,150,0)" rx="2" ry="2" />
<text  x="98.56" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="112.4" y="1893" width="0.2" height="15.0" fill="rgb(216,112,44)" rx="2" ry="2" />
<text  x="115.44" y="1903.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="646.5" y="1653" width="0.2" height="15.0" fill="rgb(252,63,34)" rx="2" ry="2" />
<text  x="649.45" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="651.8" y="1829" width="0.2" height="15.0" fill="rgb(232,6,18)" rx="2" ry="2" />
<text  x="654.81" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="611.9" y="1893" width="0.2" height="15.0" fill="rgb(239,193,31)" rx="2" ry="2" />
<text  x="614.91" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="880.7" y="1877" width="0.2" height="15.0" fill="rgb(215,181,48)" rx="2" ry="2" />
<text  x="883.71" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.34%)</title><rect x="957.5" y="2021" width="4.0" height="15.0" fill="rgb(219,211,5)" rx="2" ry="2" />
<text  x="960.53" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (6 samples, 0.10%)</title><rect x="983.9" y="1989" width="1.2" height="15.0" fill="rgb(242,84,9)" rx="2" ry="2" />
<text  x="986.94" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="408.4" y="1813" width="0.2" height="15.0" fill="rgb(222,11,36)" rx="2" ry="2" />
<text  x="411.43" y="1823.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (1 samples, 0.02%)</title><rect x="689.1" y="1925" width="0.2" height="15.0" fill="rgb(220,113,24)" rx="2" ry="2" />
<text  x="692.14" y="1935.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="278.6" y="1877" width="0.2" height="15.0" fill="rgb(212,108,33)" rx="2" ry="2" />
<text  x="281.60" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.2" y="1589" width="0.2" height="15.0" fill="rgb(222,26,27)" rx="2" ry="2" />
<text  x="121.19" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="74.9" y="1829" width="0.2" height="15.0" fill="rgb(251,23,20)" rx="2" ry="2" />
<text  x="77.92" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1172.7" y="1909" width="0.2" height="15.0" fill="rgb(237,126,34)" rx="2" ry="2" />
<text  x="1175.73" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="989.3" y="1893" width="0.2" height="15.0" fill="rgb(221,190,28)" rx="2" ry="2" />
<text  x="992.30" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="853.3" y="1861" width="0.4" height="15.0" fill="rgb(223,13,26)" rx="2" ry="2" />
<text  x="856.31" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1150.3" y="1957" width="0.2" height="15.0" fill="rgb(231,25,51)" rx="2" ry="2" />
<text  x="1153.30" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="350.7" y="1861" width="0.2" height="15.0" fill="rgb(231,125,9)" rx="2" ry="2" />
<text  x="353.66" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="194.6" y="1989" width="0.2" height="15.0" fill="rgb(233,181,37)" rx="2" ry="2" />
<text  x="197.62" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="518.0" y="1973" width="0.4" height="15.0" fill="rgb(209,126,34)" rx="2" ry="2" />
<text  x="521.01" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="940.5" y="1781" width="0.2" height="15.0" fill="rgb(238,81,1)" rx="2" ry="2" />
<text  x="943.46" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1005.6" y="1797" width="0.2" height="15.0" fill="rgb(253,114,12)" rx="2" ry="2" />
<text  x="1008.58" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="679.4" y="1781" width="0.2" height="15.0" fill="rgb(246,183,33)" rx="2" ry="2" />
<text  x="682.41" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="136.7" y="165" width="0.2" height="15.0" fill="rgb(254,79,17)" rx="2" ry="2" />
<text  x="139.66" y="175.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1005.6" y="1749" width="0.2" height="15.0" fill="rgb(222,18,30)" rx="2" ry="2" />
<text  x="1008.58" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="662.3" y="1829" width="0.2" height="15.0" fill="rgb(206,132,50)" rx="2" ry="2" />
<text  x="665.34" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (1 samples, 0.02%)</title><rect x="893.8" y="2005" width="0.2" height="15.0" fill="rgb(223,148,50)" rx="2" ry="2" />
<text  x="896.81" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (2 samples, 0.03%)</title><rect x="20.7" y="2037" width="0.4" height="15.0" fill="rgb(237,88,43)" rx="2" ry="2" />
<text  x="23.72" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="510.3" y="1829" width="0.2" height="15.0" fill="rgb(206,209,48)" rx="2" ry="2" />
<text  x="513.27" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="932.7" y="1749" width="0.8" height="15.0" fill="rgb(251,224,29)" rx="2" ry="2" />
<text  x="935.72" y="1759.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (57 samples, 0.96%)</title><rect x="602.4" y="1957" width="11.3" height="15.0" fill="rgb(212,135,35)" rx="2" ry="2" />
<text  x="605.38" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (961 samples, 16.17%)</title><rect x="706.4" y="2021" width="190.8" height="15.0" fill="rgb(236,116,20)" rx="2" ry="2" />
<text  x="709.41" y="2031.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_lock_bh (16 samples, 0.27%)</title><rect x="385.0" y="1925" width="3.2" height="15.0" fill="rgb(225,65,39)" rx="2" ry="2" />
<text  x="388.00" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (39 samples, 0.66%)</title><rect x="1107.2" y="1717" width="7.8" height="15.0" fill="rgb(233,53,22)" rx="2" ry="2" />
<text  x="1110.22" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1078.4" y="1749" width="0.2" height="15.0" fill="rgb(215,38,8)" rx="2" ry="2" />
<text  x="1081.43" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="676.2" y="1701" width="0.2" height="15.0" fill="rgb(246,211,22)" rx="2" ry="2" />
<text  x="679.23" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="72.1" y="1861" width="0.2" height="15.0" fill="rgb(246,49,43)" rx="2" ry="2" />
<text  x="75.14" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1133.8" y="2021" width="0.2" height="15.0" fill="rgb(223,118,31)" rx="2" ry="2" />
<text  x="1136.82" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1106.6" y="1797" width="0.2" height="15.0" fill="rgb(228,165,54)" rx="2" ry="2" />
<text  x="1109.62" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="800.1" y="1669" width="0.4" height="15.0" fill="rgb(232,44,51)" rx="2" ry="2" />
<text  x="803.11" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="836.6" y="1893" width="0.2" height="15.0" fill="rgb(234,124,2)" rx="2" ry="2" />
<text  x="839.64" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="755.4" y="1589" width="0.2" height="15.0" fill="rgb(226,16,24)" rx="2" ry="2" />
<text  x="758.44" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (2 samples, 0.03%)</title><rect x="36.8" y="1973" width="0.4" height="15.0" fill="rgb(234,154,13)" rx="2" ry="2" />
<text  x="39.80" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="119.6" y="37" width="0.2" height="15.0" fill="rgb(222,229,16)" rx="2" ry="2" />
<text  x="122.58" y="47.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="10.0" y="1813" width="0.2" height="15.0" fill="rgb(225,150,33)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="623.0" y="1973" width="0.2" height="15.0" fill="rgb(253,142,1)" rx="2" ry="2" />
<text  x="626.03" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="900.4" y="2037" width="0.2" height="15.0" fill="rgb(235,202,10)" rx="2" ry="2" />
<text  x="903.36" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1106.6" y="1557" width="0.2" height="15.0" fill="rgb(252,34,37)" rx="2" ry="2" />
<text  x="1109.62" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="883.5" y="1925" width="0.2" height="15.0" fill="rgb(246,113,17)" rx="2" ry="2" />
<text  x="886.49" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1152.1" y="1941" width="0.2" height="15.0" fill="rgb(222,110,43)" rx="2" ry="2" />
<text  x="1155.08" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="132.1" y="37" width="0.2" height="15.0" fill="rgb(213,142,8)" rx="2" ry="2" />
<text  x="135.09" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="65.4" y="1941" width="0.2" height="15.0" fill="rgb(226,158,34)" rx="2" ry="2" />
<text  x="68.39" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (2 samples, 0.03%)</title><rect x="893.4" y="2005" width="0.4" height="15.0" fill="rgb(209,99,47)" rx="2" ry="2" />
<text  x="896.41" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="627.2" y="1765" width="0.2" height="15.0" fill="rgb(206,70,17)" rx="2" ry="2" />
<text  x="630.20" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="632.0" y="1989" width="0.2" height="15.0" fill="rgb(247,175,40)" rx="2" ry="2" />
<text  x="634.96" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (60 samples, 1.01%)</title><rect x="498.4" y="2005" width="11.9" height="15.0" fill="rgb(222,59,31)" rx="2" ry="2" />
<text  x="501.36" y="2015.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="646.5" y="1685" width="0.2" height="15.0" fill="rgb(216,123,33)" rx="2" ry="2" />
<text  x="649.45" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (11 samples, 0.19%)</title><rect x="240.5" y="1877" width="2.2" height="15.0" fill="rgb(240,96,13)" rx="2" ry="2" />
<text  x="243.48" y="1887.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (11 samples, 0.19%)</title><rect x="1119.3" y="1925" width="2.2" height="15.0" fill="rgb(244,18,16)" rx="2" ry="2" />
<text  x="1122.33" y="1935.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="1025.4" y="2037" width="0.2" height="15.0" fill="rgb(216,143,33)" rx="2" ry="2" />
<text  x="1028.43" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1126.9" y="2037" width="0.2" height="15.0" fill="rgb(216,124,24)" rx="2" ry="2" />
<text  x="1129.87" y="2047.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="88.6" y="1781" width="0.2" height="15.0" fill="rgb(237,147,40)" rx="2" ry="2" />
<text  x="91.61" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1002.8" y="1957" width="0.2" height="15.0" fill="rgb(219,93,28)" rx="2" ry="2" />
<text  x="1005.80" y="1967.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="392.2" y="1797" width="0.1" height="15.0" fill="rgb(224,3,28)" rx="2" ry="2" />
<text  x="395.15" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="289.3" y="1765" width="0.2" height="15.0" fill="rgb(248,54,21)" rx="2" ry="2" />
<text  x="292.32" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="459.6" y="1845" width="0.2" height="15.0" fill="rgb(237,68,39)" rx="2" ry="2" />
<text  x="462.65" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="236.3" y="1893" width="0.8" height="15.0" fill="rgb(241,171,18)" rx="2" ry="2" />
<text  x="239.31" y="1903.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1052.2" y="1973" width="0.2" height="15.0" fill="rgb(215,175,8)" rx="2" ry="2" />
<text  x="1055.23" y="1983.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="408.2" y="1653" width="0.2" height="15.0" fill="rgb(212,81,51)" rx="2" ry="2" />
<text  x="411.23" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (320 samples, 5.38%)</title><rect x="41.8" y="2005" width="63.5" height="15.0" fill="rgb(252,79,46)" rx="2" ry="2" />
<text  x="44.76" y="2015.5" >folly:..</text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="152.9" y="1941" width="0.2" height="15.0" fill="rgb(246,170,49)" rx="2" ry="2" />
<text  x="155.93" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="519.8" y="1925" width="0.4" height="15.0" fill="rgb(207,159,24)" rx="2" ry="2" />
<text  x="522.80" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (9 samples, 0.15%)</title><rect x="805.1" y="1605" width="1.8" height="15.0" fill="rgb(254,41,6)" rx="2" ry="2" />
<text  x="808.07" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="118.8" y="1317" width="19.0" height="15.0" fill="rgb(243,182,13)" rx="2" ry="2" />
<text  x="121.79" y="1327.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="844.4" y="1861" width="0.2" height="15.0" fill="rgb(215,44,32)" rx="2" ry="2" />
<text  x="847.38" y="1871.5" ></text>
</g>
<g >
<title>skb_clone (16 samples, 0.27%)</title><rect x="317.7" y="1813" width="3.2" height="15.0" fill="rgb(221,208,7)" rx="2" ry="2" />
<text  x="320.71" y="1823.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (1 samples, 0.02%)</title><rect x="688.1" y="1941" width="0.2" height="15.0" fill="rgb(219,154,17)" rx="2" ry="2" />
<text  x="691.14" y="1951.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="662.1" y="1829" width="0.2" height="15.0" fill="rgb(206,70,10)" rx="2" ry="2" />
<text  x="665.14" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="842.6" y="1669" width="0.2" height="15.0" fill="rgb(241,181,2)" rx="2" ry="2" />
<text  x="845.59" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="536.3" y="1877" width="0.4" height="15.0" fill="rgb(207,123,50)" rx="2" ry="2" />
<text  x="539.28" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="81.9" y="1877" width="0.2" height="15.0" fill="rgb(235,174,43)" rx="2" ry="2" />
<text  x="84.86" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.9" y="1797" width="0.2" height="15.0" fill="rgb(251,172,34)" rx="2" ry="2" />
<text  x="887.88" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="654.4" y="1813" width="0.2" height="15.0" fill="rgb(208,2,3)" rx="2" ry="2" />
<text  x="657.39" y="1823.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="675.0" y="1845" width="0.2" height="15.0" fill="rgb(211,133,13)" rx="2" ry="2" />
<text  x="678.04" y="1855.5" ></text>
</g>
<g >
<title>__memchr_avx2 (12 samples, 0.20%)</title><rect x="346.9" y="2037" width="2.4" height="15.0" fill="rgb(231,190,2)" rx="2" ry="2" />
<text  x="349.89" y="2047.5" ></text>
</g>
<g >
<title>__fget (23 samples, 0.39%)</title><rect x="454.3" y="1941" width="4.6" height="15.0" fill="rgb(208,188,25)" rx="2" ry="2" />
<text  x="457.29" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="818.6" y="1621" width="0.2" height="15.0" fill="rgb(248,111,26)" rx="2" ry="2" />
<text  x="821.57" y="1631.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="844.2" y="1685" width="0.2" height="15.0" fill="rgb(252,229,49)" rx="2" ry="2" />
<text  x="847.18" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="731.6" y="1429" width="0.2" height="15.0" fill="rgb(206,200,0)" rx="2" ry="2" />
<text  x="734.62" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="176.8" y="2005" width="0.4" height="15.0" fill="rgb(240,39,24)" rx="2" ry="2" />
<text  x="179.76" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="469" width="17.7" height="15.0" fill="rgb(216,198,48)" rx="2" ry="2" />
<text  x="122.19" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="135.1" y="37" width="0.8" height="15.0" fill="rgb(252,4,36)" rx="2" ry="2" />
<text  x="138.07" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (85 samples, 1.43%)</title><rect x="159.7" y="2005" width="16.9" height="15.0" fill="rgb(208,44,50)" rx="2" ry="2" />
<text  x="162.68" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="89.0" y="1941" width="0.2" height="15.0" fill="rgb(245,64,43)" rx="2" ry="2" />
<text  x="92.01" y="1951.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="522.2" y="1957" width="0.2" height="15.0" fill="rgb(249,172,9)" rx="2" ry="2" />
<text  x="525.18" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="936.5" y="1749" width="0.2" height="15.0" fill="rgb(213,221,6)" rx="2" ry="2" />
<text  x="939.49" y="1759.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="206.9" y="1717" width="0.2" height="15.0" fill="rgb(233,138,42)" rx="2" ry="2" />
<text  x="209.93" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="109.5" y="1893" width="0.2" height="15.0" fill="rgb(242,138,37)" rx="2" ry="2" />
<text  x="112.46" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (3 samples, 0.05%)</title><rect x="710.6" y="1973" width="0.6" height="15.0" fill="rgb(233,158,21)" rx="2" ry="2" />
<text  x="713.58" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="173.0" y="1893" width="0.2" height="15.0" fill="rgb(216,206,36)" rx="2" ry="2" />
<text  x="175.98" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1071.9" y="1749" width="0.4" height="15.0" fill="rgb(207,154,34)" rx="2" ry="2" />
<text  x="1074.88" y="1759.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="998.8" y="1941" width="0.2" height="15.0" fill="rgb(243,66,36)" rx="2" ry="2" />
<text  x="1001.83" y="1951.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="88.6" y="1797" width="0.2" height="15.0" fill="rgb(211,223,38)" rx="2" ry="2" />
<text  x="91.61" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="39.8" y="1909" width="0.2" height="15.0" fill="rgb(246,45,25)" rx="2" ry="2" />
<text  x="42.78" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="136.5" y="181" width="0.2" height="15.0" fill="rgb(236,185,12)" rx="2" ry="2" />
<text  x="139.46" y="191.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (1 samples, 0.02%)</title><rect x="890.4" y="1957" width="0.2" height="15.0" fill="rgb(248,84,41)" rx="2" ry="2" />
<text  x="893.43" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="104.9" y="1845" width="0.2" height="15.0" fill="rgb(225,93,41)" rx="2" ry="2" />
<text  x="107.89" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="745.9" y="1749" width="0.2" height="15.0" fill="rgb(218,114,20)" rx="2" ry="2" />
<text  x="748.91" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="196.4" y="1621" width="0.2" height="15.0" fill="rgb(224,228,32)" rx="2" ry="2" />
<text  x="199.41" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="613.1" y="1653" width="0.2" height="15.0" fill="rgb(249,40,26)" rx="2" ry="2" />
<text  x="616.10" y="1663.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="134.7" y="149" width="0.2" height="15.0" fill="rgb(251,137,2)" rx="2" ry="2" />
<text  x="137.67" y="159.5" ></text>
</g>
<g >
<title>[unknown] (64 samples, 1.08%)</title><rect x="119.2" y="69" width="12.7" height="15.0" fill="rgb(250,179,6)" rx="2" ry="2" />
<text  x="122.19" y="79.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="135.1" y="165" width="0.8" height="15.0" fill="rgb(240,229,8)" rx="2" ry="2" />
<text  x="138.07" y="175.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1106.6" y="1605" width="0.2" height="15.0" fill="rgb(246,163,25)" rx="2" ry="2" />
<text  x="1109.62" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="213.1" y="1973" width="0.2" height="15.0" fill="rgb(215,138,49)" rx="2" ry="2" />
<text  x="216.09" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.6" y="1893" width="0.2" height="15.0" fill="rgb(235,89,47)" rx="2" ry="2" />
<text  x="64.62" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (75 samples, 1.26%)</title><rect x="780.3" y="1557" width="14.8" height="15.0" fill="rgb(246,43,10)" rx="2" ry="2" />
<text  x="783.26" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="948.4" y="1973" width="0.2" height="15.0" fill="rgb(241,93,25)" rx="2" ry="2" />
<text  x="951.40" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="739.8" y="1589" width="0.2" height="15.0" fill="rgb(239,5,9)" rx="2" ry="2" />
<text  x="742.76" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="694.1" y="1877" width="0.2" height="15.0" fill="rgb(220,105,34)" rx="2" ry="2" />
<text  x="697.10" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="525.0" y="1925" width="0.4" height="15.0" fill="rgb(242,78,43)" rx="2" ry="2" />
<text  x="527.96" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.7" y="1829" width="0.2" height="15.0" fill="rgb(239,8,13)" rx="2" ry="2" />
<text  x="834.67" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="510.9" y="1957" width="0.2" height="15.0" fill="rgb(250,202,5)" rx="2" ry="2" />
<text  x="513.86" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="924.4" y="1925" width="0.2" height="15.0" fill="rgb(220,108,46)" rx="2" ry="2" />
<text  x="927.38" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (1 samples, 0.02%)</title><rect x="82.7" y="1957" width="0.2" height="15.0" fill="rgb(238,79,30)" rx="2" ry="2" />
<text  x="85.66" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="155.9" y="1877" width="0.2" height="15.0" fill="rgb(249,119,12)" rx="2" ry="2" />
<text  x="158.91" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="825.1" y="1685" width="0.2" height="15.0" fill="rgb(226,102,36)" rx="2" ry="2" />
<text  x="828.12" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="241.7" y="1685" width="0.2" height="15.0" fill="rgb(252,215,25)" rx="2" ry="2" />
<text  x="244.67" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (8 samples, 0.13%)</title><rect x="879.9" y="1925" width="1.6" height="15.0" fill="rgb(208,88,53)" rx="2" ry="2" />
<text  x="882.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="317.5" y="1797" width="0.2" height="15.0" fill="rgb(243,70,8)" rx="2" ry="2" />
<text  x="320.51" y="1807.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="458.5" y="1893" width="0.2" height="15.0" fill="rgb(251,111,1)" rx="2" ry="2" />
<text  x="461.46" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="661" width="17.9" height="15.0" fill="rgb(250,99,9)" rx="2" ry="2" />
<text  x="122.19" y="671.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="269.3" y="1637" width="0.2" height="15.0" fill="rgb(248,186,19)" rx="2" ry="2" />
<text  x="272.27" y="1647.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="961.5" y="2005" width="0.2" height="15.0" fill="rgb(212,221,38)" rx="2" ry="2" />
<text  x="964.50" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (4 samples, 0.07%)</title><rect x="860.7" y="1973" width="0.8" height="15.0" fill="rgb(248,164,0)" rx="2" ry="2" />
<text  x="863.66" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="12.6" y="1845" width="1.0" height="15.0" fill="rgb(219,221,10)" rx="2" ry="2" />
<text  x="15.58" y="1855.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="932.7" y="1829" width="0.8" height="15.0" fill="rgb(254,2,17)" rx="2" ry="2" />
<text  x="935.72" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="486.6" y="1941" width="0.4" height="15.0" fill="rgb(219,21,3)" rx="2" ry="2" />
<text  x="489.65" y="1951.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="1017.3" y="2037" width="1.2" height="15.0" fill="rgb(208,2,23)" rx="2" ry="2" />
<text  x="1020.29" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (2 samples, 0.03%)</title><rect x="910.9" y="2005" width="0.4" height="15.0" fill="rgb(246,208,49)" rx="2" ry="2" />
<text  x="913.88" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="703.2" y="1973" width="0.2" height="15.0" fill="rgb(248,11,12)" rx="2" ry="2" />
<text  x="706.23" y="1983.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.2" y="2053" width="1.0" height="15.0" fill="rgb(215,115,51)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="731.4" y="1637" width="0.4" height="15.0" fill="rgb(235,184,48)" rx="2" ry="2" />
<text  x="734.42" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1163.8" y="1925" width="0.2" height="15.0" fill="rgb(249,220,20)" rx="2" ry="2" />
<text  x="1166.80" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="665.7" y="1989" width="0.4" height="15.0" fill="rgb(245,97,12)" rx="2" ry="2" />
<text  x="668.71" y="1999.5" ></text>
</g>
<g >
<title>ep_remove (74 samples, 1.24%)</title><rect x="472.4" y="1973" width="14.6" height="15.0" fill="rgb(208,151,22)" rx="2" ry="2" />
<text  x="475.35" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="899.0" y="1989" width="0.2" height="15.0" fill="rgb(229,201,18)" rx="2" ry="2" />
<text  x="901.97" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="901.6" y="1957" width="0.3" height="15.0" fill="rgb(254,168,18)" rx="2" ry="2" />
<text  x="904.55" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="739.8" y="1333" width="0.2" height="15.0" fill="rgb(229,226,40)" rx="2" ry="2" />
<text  x="742.76" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="996.4" y="1973" width="0.2" height="15.0" fill="rgb(211,181,23)" rx="2" ry="2" />
<text  x="999.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (332 samples, 5.59%)</title><rect x="273.6" y="1893" width="65.9" height="15.0" fill="rgb(245,142,47)" rx="2" ry="2" />
<text  x="276.63" y="1903.5" >tcp_sen..</text>
</g>
<g >
<title>tcp_rearm_rto (22 samples, 0.37%)</title><rect x="802.5" y="1669" width="4.4" height="15.0" fill="rgb(220,76,18)" rx="2" ry="2" />
<text  x="805.49" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (79 samples, 1.33%)</title><rect x="160.1" y="1957" width="15.7" height="15.0" fill="rgb(225,44,32)" rx="2" ry="2" />
<text  x="163.08" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="947.4" y="1701" width="0.2" height="15.0" fill="rgb(237,27,23)" rx="2" ry="2" />
<text  x="950.41" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1079.0" y="1605" width="0.2" height="15.0" fill="rgb(251,80,30)" rx="2" ry="2" />
<text  x="1082.03" y="1615.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.34%)</title><rect x="493.8" y="2021" width="4.0" height="15.0" fill="rgb(211,125,23)" rx="2" ry="2" />
<text  x="496.79" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="163.3" y="1861" width="0.2" height="15.0" fill="rgb(206,229,45)" rx="2" ry="2" />
<text  x="166.26" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="616.3" y="1989" width="0.4" height="15.0" fill="rgb(207,54,28)" rx="2" ry="2" />
<text  x="619.28" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="988.3" y="1893" width="1.0" height="15.0" fill="rgb(213,103,13)" rx="2" ry="2" />
<text  x="991.30" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1048.7" y="1925" width="0.4" height="15.0" fill="rgb(233,67,12)" rx="2" ry="2" />
<text  x="1051.65" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="975.0" y="1973" width="0.2" height="15.0" fill="rgb(205,43,5)" rx="2" ry="2" />
<text  x="978.00" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="755.4" y="1525" width="0.2" height="15.0" fill="rgb(205,211,35)" rx="2" ry="2" />
<text  x="758.44" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1078.6" y="1701" width="0.2" height="15.0" fill="rgb(227,175,46)" rx="2" ry="2" />
<text  x="1081.63" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.7" y="1861" width="0.2" height="15.0" fill="rgb(246,143,12)" rx="2" ry="2" />
<text  x="539.67" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="733.8" y="1685" width="0.2" height="15.0" fill="rgb(210,216,17)" rx="2" ry="2" />
<text  x="736.80" y="1695.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="662.1" y="1845" width="0.2" height="15.0" fill="rgb(228,78,2)" rx="2" ry="2" />
<text  x="665.14" y="1855.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="351.5" y="2037" width="0.2" height="15.0" fill="rgb(228,131,31)" rx="2" ry="2" />
<text  x="354.45" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="903.5" y="1877" width="0.2" height="15.0" fill="rgb(217,5,1)" rx="2" ry="2" />
<text  x="906.54" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="244.7" y="1813" width="0.1" height="15.0" fill="rgb(222,193,0)" rx="2" ry="2" />
<text  x="247.65" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="837.4" y="1893" width="0.2" height="15.0" fill="rgb(217,131,34)" rx="2" ry="2" />
<text  x="840.43" y="1903.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (8 samples, 0.13%)</title><rect x="758.6" y="1701" width="1.6" height="15.0" fill="rgb(211,123,52)" rx="2" ry="2" />
<text  x="761.62" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="547.6" y="1701" width="0.2" height="15.0" fill="rgb(220,147,4)" rx="2" ry="2" />
<text  x="550.59" y="1711.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (4 samples, 0.07%)</title><rect x="409.8" y="1893" width="0.8" height="15.0" fill="rgb(219,63,53)" rx="2" ry="2" />
<text  x="412.82" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="241.7" y="1589" width="0.2" height="15.0" fill="rgb(227,100,15)" rx="2" ry="2" />
<text  x="244.67" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (12 samples, 0.20%)</title><rect x="56.5" y="1941" width="2.3" height="15.0" fill="rgb(212,167,30)" rx="2" ry="2" />
<text  x="59.45" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="662.1" y="1925" width="0.2" height="15.0" fill="rgb(221,96,35)" rx="2" ry="2" />
<text  x="665.14" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="112.2" y="2005" width="0.2" height="15.0" fill="rgb(241,118,21)" rx="2" ry="2" />
<text  x="115.24" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="224.4" y="2005" width="0.2" height="15.0" fill="rgb(218,6,24)" rx="2" ry="2" />
<text  x="227.40" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1079.0" y="1845" width="0.4" height="15.0" fill="rgb(238,109,19)" rx="2" ry="2" />
<text  x="1082.03" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="290.5" y="1781" width="0.2" height="15.0" fill="rgb(211,52,22)" rx="2" ry="2" />
<text  x="293.51" y="1791.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="968.1" y="1701" width="0.2" height="15.0" fill="rgb(235,224,2)" rx="2" ry="2" />
<text  x="971.06" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="196.4" y="1813" width="0.2" height="15.0" fill="rgb(236,227,25)" rx="2" ry="2" />
<text  x="199.41" y="1823.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="745.9" y="1397" width="0.2" height="15.0" fill="rgb(254,143,4)" rx="2" ry="2" />
<text  x="748.91" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="997" width="18.5" height="15.0" fill="rgb(232,84,15)" rx="2" ry="2" />
<text  x="121.79" y="1007.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="486.8" y="1493" width="0.2" height="15.0" fill="rgb(210,165,49)" rx="2" ry="2" />
<text  x="489.84" y="1503.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1137.0" y="2053" width="1.0" height="15.0" fill="rgb(253,226,43)" rx="2" ry="2" />
<text  x="1140.00" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="800.7" y="1525" width="0.2" height="15.0" fill="rgb(222,166,33)" rx="2" ry="2" />
<text  x="803.70" y="1535.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1018.5" y="2037" width="0.2" height="15.0" fill="rgb(250,147,46)" rx="2" ry="2" />
<text  x="1021.48" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="596.0" y="1829" width="0.6" height="15.0" fill="rgb(229,34,17)" rx="2" ry="2" />
<text  x="599.03" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="678.8" y="1941" width="0.2" height="15.0" fill="rgb(230,142,51)" rx="2" ry="2" />
<text  x="681.81" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="968.1" y="1813" width="0.2" height="15.0" fill="rgb(221,148,47)" rx="2" ry="2" />
<text  x="971.06" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (6 samples, 0.10%)</title><rect x="403.5" y="1893" width="1.2" height="15.0" fill="rgb(209,130,10)" rx="2" ry="2" />
<text  x="406.47" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (42 samples, 0.71%)</title><rect x="647.4" y="2037" width="8.4" height="15.0" fill="rgb(221,147,13)" rx="2" ry="2" />
<text  x="650.45" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="486.6" y="1909" width="0.4" height="15.0" fill="rgb(249,229,31)" rx="2" ry="2" />
<text  x="489.65" y="1919.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="301.2" y="1525" width="0.2" height="15.0" fill="rgb(251,110,27)" rx="2" ry="2" />
<text  x="304.23" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="136.7" y="261" width="0.2" height="15.0" fill="rgb(213,198,52)" rx="2" ry="2" />
<text  x="139.66" y="271.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="984.9" y="1813" width="0.2" height="15.0" fill="rgb(245,63,27)" rx="2" ry="2" />
<text  x="987.93" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="742.7" y="1685" width="0.2" height="15.0" fill="rgb(221,66,42)" rx="2" ry="2" />
<text  x="745.74" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (3 samples, 0.05%)</title><rect x="984.5" y="1909" width="0.6" height="15.0" fill="rgb(207,53,32)" rx="2" ry="2" />
<text  x="987.53" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="61.6" y="1861" width="0.2" height="15.0" fill="rgb(234,62,24)" rx="2" ry="2" />
<text  x="64.62" y="1871.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="739.8" y="1253" width="0.2" height="15.0" fill="rgb(223,14,24)" rx="2" ry="2" />
<text  x="742.76" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="676.2" y="1717" width="0.2" height="15.0" fill="rgb(244,98,48)" rx="2" ry="2" />
<text  x="679.23" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="88.6" y="1861" width="0.2" height="15.0" fill="rgb(213,118,32)" rx="2" ry="2" />
<text  x="91.61" y="1871.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="163.3" y="1525" width="0.2" height="15.0" fill="rgb(208,104,51)" rx="2" ry="2" />
<text  x="166.26" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1154.3" y="1717" width="0.2" height="15.0" fill="rgb(213,132,18)" rx="2" ry="2" />
<text  x="1157.27" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="830.5" y="1685" width="0.2" height="15.0" fill="rgb(254,85,36)" rx="2" ry="2" />
<text  x="833.48" y="1695.5" ></text>
</g>
<g >
<title>__init_waitqueue_head (2 samples, 0.03%)</title><rect x="398.9" y="1909" width="0.4" height="15.0" fill="rgb(231,119,9)" rx="2" ry="2" />
<text  x="401.90" y="1919.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (2 samples, 0.03%)</title><rect x="652.0" y="1989" width="0.4" height="15.0" fill="rgb(241,39,26)" rx="2" ry="2" />
<text  x="655.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (30 samples, 0.50%)</title><rect x="323.9" y="1829" width="5.9" height="15.0" fill="rgb(235,140,23)" rx="2" ry="2" />
<text  x="326.86" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="602.4" y="1877" width="0.2" height="15.0" fill="rgb(225,226,15)" rx="2" ry="2" />
<text  x="605.38" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="279.0" y="1685" width="0.2" height="15.0" fill="rgb(233,26,42)" rx="2" ry="2" />
<text  x="281.99" y="1695.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="854.1" y="1941" width="0.4" height="15.0" fill="rgb(248,68,42)" rx="2" ry="2" />
<text  x="857.10" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1048.9" y="1909" width="0.2" height="15.0" fill="rgb(251,137,35)" rx="2" ry="2" />
<text  x="1051.85" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="998.6" y="1973" width="0.6" height="15.0" fill="rgb(254,193,2)" rx="2" ry="2" />
<text  x="1001.63" y="1983.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="349.5" y="2037" width="0.2" height="15.0" fill="rgb(223,0,8)" rx="2" ry="2" />
<text  x="352.47" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (136 samples, 2.29%)</title><rect x="47.5" y="1989" width="27.0" height="15.0" fill="rgb(230,156,34)" rx="2" ry="2" />
<text  x="50.52" y="1999.5" >f..</text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="694.5" y="1877" width="0.8" height="15.0" fill="rgb(218,147,4)" rx="2" ry="2" />
<text  x="697.50" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(245,211,12)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1101.3" y="1877" width="0.2" height="15.0" fill="rgb(217,4,26)" rx="2" ry="2" />
<text  x="1104.26" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1106.6" y="1781" width="0.2" height="15.0" fill="rgb(217,213,6)" rx="2" ry="2" />
<text  x="1109.62" y="1791.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="966.7" y="2005" width="0.2" height="15.0" fill="rgb(208,23,43)" rx="2" ry="2" />
<text  x="969.67" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="851.3" y="1877" width="0.8" height="15.0" fill="rgb(254,45,9)" rx="2" ry="2" />
<text  x="854.33" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (7 samples, 0.12%)</title><rect x="79.1" y="1877" width="1.4" height="15.0" fill="rgb(243,217,44)" rx="2" ry="2" />
<text  x="82.08" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="925.4" y="1797" width="0.8" height="15.0" fill="rgb(211,59,39)" rx="2" ry="2" />
<text  x="928.37" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="419.0" y="1829" width="0.1" height="15.0" fill="rgb(236,19,31)" rx="2" ry="2" />
<text  x="421.95" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="659.2" y="1973" width="0.2" height="15.0" fill="rgb(223,222,31)" rx="2" ry="2" />
<text  x="662.16" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="409.6" y="1893" width="0.2" height="15.0" fill="rgb(247,94,0)" rx="2" ry="2" />
<text  x="412.62" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="72.3" y="1957" width="0.2" height="15.0" fill="rgb(249,175,1)" rx="2" ry="2" />
<text  x="75.34" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="950.8" y="2005" width="0.2" height="15.0" fill="rgb(213,44,14)" rx="2" ry="2" />
<text  x="953.78" y="2015.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="739.8" y="1269" width="0.2" height="15.0" fill="rgb(213,99,4)" rx="2" ry="2" />
<text  x="742.76" y="1279.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="483.3" y="1637" width="0.2" height="15.0" fill="rgb(246,112,19)" rx="2" ry="2" />
<text  x="486.27" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="529.3" y="1861" width="0.2" height="15.0" fill="rgb(211,80,28)" rx="2" ry="2" />
<text  x="532.33" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="134.5" y="53" width="0.2" height="15.0" fill="rgb(248,130,33)" rx="2" ry="2" />
<text  x="137.47" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="913.9" y="1893" width="0.2" height="15.0" fill="rgb(230,125,35)" rx="2" ry="2" />
<text  x="916.86" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="613.1" y="1701" width="0.2" height="15.0" fill="rgb(248,193,9)" rx="2" ry="2" />
<text  x="616.10" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="247.6" y="1957" width="0.4" height="15.0" fill="rgb(218,157,44)" rx="2" ry="2" />
<text  x="250.63" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="716.5" y="1893" width="0.2" height="15.0" fill="rgb(211,69,23)" rx="2" ry="2" />
<text  x="719.53" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (12 samples, 0.20%)</title><rect x="962.1" y="2037" width="2.4" height="15.0" fill="rgb(249,0,43)" rx="2" ry="2" />
<text  x="965.10" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="187.9" y="2005" width="0.2" height="15.0" fill="rgb(253,75,37)" rx="2" ry="2" />
<text  x="190.87" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="668.3" y="1861" width="0.2" height="15.0" fill="rgb(242,110,8)" rx="2" ry="2" />
<text  x="671.29" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="514.0" y="1941" width="0.6" height="15.0" fill="rgb(212,121,10)" rx="2" ry="2" />
<text  x="517.04" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="520.0" y="1829" width="0.2" height="15.0" fill="rgb(205,204,0)" rx="2" ry="2" />
<text  x="523.00" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="856.7" y="1557" width="0.2" height="15.0" fill="rgb(249,121,42)" rx="2" ry="2" />
<text  x="859.69" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1163.8" y="1845" width="0.2" height="15.0" fill="rgb(230,201,41)" rx="2" ry="2" />
<text  x="1166.80" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="157.5" y="1573" width="0.2" height="15.0" fill="rgb(237,181,46)" rx="2" ry="2" />
<text  x="160.50" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="898.4" y="1989" width="0.2" height="15.0" fill="rgb(233,136,38)" rx="2" ry="2" />
<text  x="901.37" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="777.5" y="1557" width="0.4" height="15.0" fill="rgb(240,184,29)" rx="2" ry="2" />
<text  x="780.48" y="1567.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (11 samples, 0.19%)</title><rect x="412.4" y="1941" width="2.2" height="15.0" fill="rgb(244,134,51)" rx="2" ry="2" />
<text  x="415.40" y="1951.5" ></text>
</g>
<g >
<title>security_file_free (12 samples, 0.20%)</title><rect x="744.9" y="1797" width="2.4" height="15.0" fill="rgb(228,93,11)" rx="2" ry="2" />
<text  x="747.92" y="1807.5" ></text>
</g>
<g >
<title>prandom_u32_state (1 samples, 0.02%)</title><rect x="857.3" y="1637" width="0.2" height="15.0" fill="rgb(205,114,31)" rx="2" ry="2" />
<text  x="860.28" y="1647.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="800.7" y="1237" width="0.2" height="15.0" fill="rgb(227,26,52)" rx="2" ry="2" />
<text  x="803.70" y="1247.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="60.0" y="1925" width="0.2" height="15.0" fill="rgb(240,107,27)" rx="2" ry="2" />
<text  x="63.03" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="459.4" y="1973" width="0.4" height="15.0" fill="rgb(231,11,6)" rx="2" ry="2" />
<text  x="462.45" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="135.9" y="149" width="0.2" height="15.0" fill="rgb(211,67,48)" rx="2" ry="2" />
<text  x="138.86" y="159.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="350.7" y="1845" width="0.2" height="15.0" fill="rgb(241,82,36)" rx="2" ry="2" />
<text  x="353.66" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="824.9" y="1829" width="0.4" height="15.0" fill="rgb(245,123,30)" rx="2" ry="2" />
<text  x="827.92" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="523.0" y="1973" width="0.2" height="15.0" fill="rgb(205,219,38)" rx="2" ry="2" />
<text  x="525.97" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="160.7" y="1941" width="0.4" height="15.0" fill="rgb(214,141,23)" rx="2" ry="2" />
<text  x="163.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (3 samples, 0.05%)</title><rect x="916.4" y="2037" width="0.6" height="15.0" fill="rgb(215,109,44)" rx="2" ry="2" />
<text  x="919.44" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="241.7" y="1637" width="0.2" height="15.0" fill="rgb(236,188,38)" rx="2" ry="2" />
<text  x="244.67" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="853" width="17.9" height="15.0" fill="rgb(227,142,13)" rx="2" ry="2" />
<text  x="122.19" y="863.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="383.4" y="1829" width="0.2" height="15.0" fill="rgb(224,190,18)" rx="2" ry="2" />
<text  x="386.42" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="443.8" y="1909" width="0.2" height="15.0" fill="rgb(206,19,45)" rx="2" ry="2" />
<text  x="446.77" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1034.6" y="1925" width="0.2" height="15.0" fill="rgb(236,192,15)" rx="2" ry="2" />
<text  x="1037.56" y="1935.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(240,90,17)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="637.1" y="1845" width="0.2" height="15.0" fill="rgb(208,67,10)" rx="2" ry="2" />
<text  x="640.12" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="156.7" y="1989" width="0.2" height="15.0" fill="rgb(238,204,49)" rx="2" ry="2" />
<text  x="159.71" y="1999.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="689.1" y="1877" width="0.2" height="15.0" fill="rgb(253,131,2)" rx="2" ry="2" />
<text  x="692.14" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="138.0" y="1093" width="0.2" height="15.0" fill="rgb(236,78,16)" rx="2" ry="2" />
<text  x="141.05" y="1103.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="842.6" y="1653" width="0.2" height="15.0" fill="rgb(245,127,0)" rx="2" ry="2" />
<text  x="845.59" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="486.6" y="1845" width="0.4" height="15.0" fill="rgb(225,17,37)" rx="2" ry="2" />
<text  x="489.65" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="725.9" y="1733" width="0.2" height="15.0" fill="rgb(224,15,38)" rx="2" ry="2" />
<text  x="728.86" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.05%)</title><rect x="1174.5" y="1973" width="0.6" height="15.0" fill="rgb(254,144,13)" rx="2" ry="2" />
<text  x="1177.52" y="1983.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="136.9" y="197" width="0.2" height="15.0" fill="rgb(211,28,0)" rx="2" ry="2" />
<text  x="139.85" y="207.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="1146.9" y="2037" width="0.2" height="15.0" fill="rgb(207,17,38)" rx="2" ry="2" />
<text  x="1149.92" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="140.6" y="1653" width="0.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="143.63" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="628.4" y="1973" width="0.2" height="15.0" fill="rgb(224,163,5)" rx="2" ry="2" />
<text  x="631.39" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="300.6" y="1445" width="0.2" height="15.0" fill="rgb(251,9,23)" rx="2" ry="2" />
<text  x="303.63" y="1455.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (1 samples, 0.02%)</title><rect x="530.7" y="2021" width="0.2" height="15.0" fill="rgb(207,35,52)" rx="2" ry="2" />
<text  x="533.72" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="541.8" y="1941" width="0.2" height="15.0" fill="rgb(210,113,38)" rx="2" ry="2" />
<text  x="544.83" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="185.1" y="2005" width="0.4" height="15.0" fill="rgb(231,185,40)" rx="2" ry="2" />
<text  x="188.09" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="863.2" y="1989" width="0.2" height="15.0" fill="rgb(213,197,24)" rx="2" ry="2" />
<text  x="866.24" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="844.4" y="1893" width="0.2" height="15.0" fill="rgb(254,117,39)" rx="2" ry="2" />
<text  x="847.38" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (16 samples, 0.27%)</title><rect x="700.3" y="1989" width="3.1" height="15.0" fill="rgb(218,20,6)" rx="2" ry="2" />
<text  x="703.25" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="571.4" y="1989" width="0.2" height="15.0" fill="rgb(226,106,26)" rx="2" ry="2" />
<text  x="574.41" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="192.6" y="1941" width="0.4" height="15.0" fill="rgb(214,100,0)" rx="2" ry="2" />
<text  x="195.64" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="81.9" y="1861" width="0.2" height="15.0" fill="rgb(240,95,26)" rx="2" ry="2" />
<text  x="84.86" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="1143.7" y="1957" width="0.2" height="15.0" fill="rgb(242,87,4)" rx="2" ry="2" />
<text  x="1146.74" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="676.2" y="1877" width="0.2" height="15.0" fill="rgb(248,102,16)" rx="2" ry="2" />
<text  x="679.23" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1127.5" y="1845" width="0.4" height="15.0" fill="rgb(244,152,50)" rx="2" ry="2" />
<text  x="1130.47" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="680.4" y="2005" width="0.4" height="15.0" fill="rgb(220,100,48)" rx="2" ry="2" />
<text  x="683.40" y="2015.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="510.1" y="1925" width="0.2" height="15.0" fill="rgb(208,50,34)" rx="2" ry="2" />
<text  x="513.07" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="188.1" y="2021" width="0.4" height="15.0" fill="rgb(249,0,47)" rx="2" ry="2" />
<text  x="191.07" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="741.7" y="1765" width="1.2" height="15.0" fill="rgb(247,227,37)" rx="2" ry="2" />
<text  x="744.74" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="163.1" y="1877" width="0.2" height="15.0" fill="rgb(218,173,30)" rx="2" ry="2" />
<text  x="166.06" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="636.1" y="1941" width="0.2" height="15.0" fill="rgb(215,40,4)" rx="2" ry="2" />
<text  x="639.13" y="1951.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="739.8" y="1301" width="0.2" height="15.0" fill="rgb(240,193,41)" rx="2" ry="2" />
<text  x="742.76" y="1311.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="581.1" y="1925" width="0.2" height="15.0" fill="rgb(225,60,0)" rx="2" ry="2" />
<text  x="584.14" y="1935.5" ></text>
</g>
<g >
<title>SYSC_getpeername (14 samples, 0.24%)</title><rect x="673.3" y="1877" width="2.7" height="15.0" fill="rgb(208,181,41)" rx="2" ry="2" />
<text  x="676.25" y="1887.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="952.6" y="2005" width="0.2" height="15.0" fill="rgb(238,6,5)" rx="2" ry="2" />
<text  x="955.57" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="772.7" y="1589" width="0.2" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="775.71" y="1599.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="520.4" y="1973" width="0.4" height="15.0" fill="rgb(230,168,33)" rx="2" ry="2" />
<text  x="523.39" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.3" y="1957" width="0.2" height="15.0" fill="rgb(205,97,4)" rx="2" ry="2" />
<text  x="943.26" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="398.5" y="1877" width="0.2" height="15.0" fill="rgb(214,120,33)" rx="2" ry="2" />
<text  x="401.50" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="581.1" y="1941" width="0.2" height="15.0" fill="rgb(246,210,27)" rx="2" ry="2" />
<text  x="584.14" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (311 samples, 5.23%)</title><rect x="356.6" y="2005" width="61.8" height="15.0" fill="rgb(230,195,46)" rx="2" ry="2" />
<text  x="359.62" y="2015.5" >do_sys..</text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="800.9" y="1685" width="0.6" height="15.0" fill="rgb(237,81,2)" rx="2" ry="2" />
<text  x="803.90" y="1695.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (11 samples, 0.19%)</title><rect x="76.5" y="1941" width="2.2" height="15.0" fill="rgb(225,224,54)" rx="2" ry="2" />
<text  x="79.50" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="577.0" y="1989" width="1.2" height="15.0" fill="rgb(251,212,0)" rx="2" ry="2" />
<text  x="579.97" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="144.2" y="1925" width="0.2" height="15.0" fill="rgb(228,175,16)" rx="2" ry="2" />
<text  x="147.20" y="1935.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="203.8" y="2021" width="0.4" height="15.0" fill="rgb(235,71,28)" rx="2" ry="2" />
<text  x="206.76" y="2031.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="330.0" y="1829" width="0.2" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="333.01" y="1839.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="100.1" y="1893" width="0.2" height="15.0" fill="rgb(209,110,5)" rx="2" ry="2" />
<text  x="103.13" y="1903.5" ></text>
</g>
<g >
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="795.9" y="1653" width="0.6" height="15.0" fill="rgb(232,61,0)" rx="2" ry="2" />
<text  x="798.94" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="918.8" y="1989" width="0.4" height="15.0" fill="rgb(213,11,0)" rx="2" ry="2" />
<text  x="921.82" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="114.8" y="1797" width="0.2" height="15.0" fill="rgb(230,108,32)" rx="2" ry="2" />
<text  x="117.82" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="316.1" y="1717" width="0.2" height="15.0" fill="rgb(246,183,20)" rx="2" ry="2" />
<text  x="319.12" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (93 samples, 1.56%)</title><rect x="681.4" y="2021" width="18.5" height="15.0" fill="rgb(244,47,8)" rx="2" ry="2" />
<text  x="684.39" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="734.4" y="1573" width="0.2" height="15.0" fill="rgb(235,114,16)" rx="2" ry="2" />
<text  x="737.40" y="1583.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="883.5" y="1797" width="0.2" height="15.0" fill="rgb(239,137,0)" rx="2" ry="2" />
<text  x="886.49" y="1807.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="67.4" y="1909" width="0.2" height="15.0" fill="rgb(218,205,50)" rx="2" ry="2" />
<text  x="70.37" y="1919.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="320.9" y="1813" width="0.2" height="15.0" fill="rgb(221,228,18)" rx="2" ry="2" />
<text  x="323.88" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1090.3" y="1829" width="0.2" height="15.0" fill="rgb(249,84,37)" rx="2" ry="2" />
<text  x="1093.34" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="135.1" y="85" width="0.8" height="15.0" fill="rgb(242,42,34)" rx="2" ry="2" />
<text  x="138.07" y="95.5" ></text>
</g>
<g >
<title>process_backlog (10 samples, 0.17%)</title><rect x="301.0" y="1653" width="2.0" height="15.0" fill="rgb(207,124,51)" rx="2" ry="2" />
<text  x="304.03" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="95.6" y="1685" width="0.2" height="15.0" fill="rgb(254,151,34)" rx="2" ry="2" />
<text  x="98.56" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="853.9" y="1765" width="0.2" height="15.0" fill="rgb(237,23,24)" rx="2" ry="2" />
<text  x="856.91" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.2" y="1957" width="0.2" height="15.0" fill="rgb(236,217,32)" rx="2" ry="2" />
<text  x="577.19" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="378.5" y="1765" width="0.2" height="15.0" fill="rgb(254,52,40)" rx="2" ry="2" />
<text  x="381.45" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="223.8" y="2021" width="0.2" height="15.0" fill="rgb(222,2,4)" rx="2" ry="2" />
<text  x="226.81" y="2031.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="800.7" y="1365" width="0.2" height="15.0" fill="rgb(226,103,48)" rx="2" ry="2" />
<text  x="803.70" y="1375.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (42 samples, 0.71%)</title><rect x="237.3" y="1909" width="8.3" height="15.0" fill="rgb(216,95,45)" rx="2" ry="2" />
<text  x="240.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="970.0" y="2021" width="0.2" height="15.0" fill="rgb(250,31,17)" rx="2" ry="2" />
<text  x="973.04" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="623.6" y="1941" width="0.4" height="15.0" fill="rgb(223,192,4)" rx="2" ry="2" />
<text  x="626.62" y="1951.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="275.2" y="1861" width="0.2" height="15.0" fill="rgb(227,81,52)" rx="2" ry="2" />
<text  x="278.22" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="534.1" y="1909" width="0.2" height="15.0" fill="rgb(235,75,10)" rx="2" ry="2" />
<text  x="537.09" y="1919.5" ></text>
</g>
<g >
<title>sys_futex (6 samples, 0.10%)</title><rect x="12.4" y="2005" width="1.2" height="15.0" fill="rgb(250,134,47)" rx="2" ry="2" />
<text  x="15.38" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (33 samples, 0.56%)</title><rect x="920.2" y="1973" width="6.6" height="15.0" fill="rgb(233,13,11)" rx="2" ry="2" />
<text  x="923.21" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="856.7" y="1589" width="0.2" height="15.0" fill="rgb(213,102,39)" rx="2" ry="2" />
<text  x="859.69" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="459.6" y="1829" width="0.2" height="15.0" fill="rgb(211,10,28)" rx="2" ry="2" />
<text  x="462.65" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (97 samples, 1.63%)</title><rect x="975.0" y="2037" width="19.3" height="15.0" fill="rgb(206,108,5)" rx="2" ry="2" />
<text  x="978.00" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="104.7" y="1973" width="0.4" height="15.0" fill="rgb(230,203,49)" rx="2" ry="2" />
<text  x="107.69" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="283.2" y="1797" width="0.4" height="15.0" fill="rgb(254,46,29)" rx="2" ry="2" />
<text  x="286.16" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="61.6" y="1845" width="0.2" height="15.0" fill="rgb(252,207,39)" rx="2" ry="2" />
<text  x="64.62" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="853.9" y="1637" width="0.2" height="15.0" fill="rgb(227,174,5)" rx="2" ry="2" />
<text  x="856.91" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="562.1" y="1509" width="0.2" height="15.0" fill="rgb(246,98,37)" rx="2" ry="2" />
<text  x="565.08" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="157.5" y="1717" width="0.2" height="15.0" fill="rgb(245,18,16)" rx="2" ry="2" />
<text  x="160.50" y="1727.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="272.8" y="1893" width="0.2" height="15.0" fill="rgb(223,216,33)" rx="2" ry="2" />
<text  x="275.84" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.7" y="1845" width="0.2" height="15.0" fill="rgb(205,226,45)" rx="2" ry="2" />
<text  x="887.68" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="378.5" y="1909" width="0.2" height="15.0" fill="rgb(232,0,28)" rx="2" ry="2" />
<text  x="381.45" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="31.8" y="1957" width="0.2" height="15.0" fill="rgb(205,130,37)" rx="2" ry="2" />
<text  x="34.84" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.2" y="2021" width="0.8" height="15.0" fill="rgb(206,59,35)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="857.3" y="1653" width="0.2" height="15.0" fill="rgb(225,89,49)" rx="2" ry="2" />
<text  x="860.28" y="1663.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="838.4" y="1637" width="0.2" height="15.0" fill="rgb(254,3,53)" rx="2" ry="2" />
<text  x="841.42" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_init_ts_off (1 samples, 0.02%)</title><rect x="419.0" y="1733" width="0.1" height="15.0" fill="rgb(210,115,13)" rx="2" ry="2" />
<text  x="421.95" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="848.1" y="1893" width="0.2" height="15.0" fill="rgb(223,107,16)" rx="2" ry="2" />
<text  x="851.15" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="950.4" y="2005" width="0.4" height="15.0" fill="rgb(215,6,1)" rx="2" ry="2" />
<text  x="953.39" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="637.1" y="1877" width="0.2" height="15.0" fill="rgb(217,225,4)" rx="2" ry="2" />
<text  x="640.12" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (2 samples, 0.03%)</title><rect x="577.8" y="1973" width="0.4" height="15.0" fill="rgb(214,162,1)" rx="2" ry="2" />
<text  x="580.77" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="196.4" y="1957" width="0.2" height="15.0" fill="rgb(206,200,35)" rx="2" ry="2" />
<text  x="199.41" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="290.5" y="1685" width="0.2" height="15.0" fill="rgb(210,168,16)" rx="2" ry="2" />
<text  x="293.51" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="875.3" y="1957" width="0.4" height="15.0" fill="rgb(216,70,7)" rx="2" ry="2" />
<text  x="878.35" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="1177.3" y="2021" width="0.2" height="15.0" fill="rgb(212,175,32)" rx="2" ry="2" />
<text  x="1180.29" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="180.3" y="2021" width="0.2" height="15.0" fill="rgb(208,177,10)" rx="2" ry="2" />
<text  x="183.33" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (114 samples, 1.92%)</title><rect x="74.5" y="1989" width="22.7" height="15.0" fill="rgb(239,104,8)" rx="2" ry="2" />
<text  x="77.52" y="1999.5" >f..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="138.0" y="1125" width="0.2" height="15.0" fill="rgb(231,137,40)" rx="2" ry="2" />
<text  x="141.05" y="1135.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="1147.1" y="2037" width="0.2" height="15.0" fill="rgb(222,207,12)" rx="2" ry="2" />
<text  x="1150.12" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="286.5" y="1797" width="0.2" height="15.0" fill="rgb(218,20,38)" rx="2" ry="2" />
<text  x="289.54" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1127.3" y="1989" width="0.6" height="15.0" fill="rgb(217,137,39)" rx="2" ry="2" />
<text  x="1130.27" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="597.6" y="1925" width="2.2" height="15.0" fill="rgb(245,137,43)" rx="2" ry="2" />
<text  x="600.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="800.7" y="1541" width="0.2" height="15.0" fill="rgb(212,51,15)" rx="2" ry="2" />
<text  x="803.70" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="490.2" y="1813" width="0.2" height="15.0" fill="rgb(228,9,4)" rx="2" ry="2" />
<text  x="493.22" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="207.3" y="2005" width="0.2" height="15.0" fill="rgb(213,96,53)" rx="2" ry="2" />
<text  x="210.33" y="2015.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="171.8" y="1877" width="0.2" height="15.0" fill="rgb(221,218,46)" rx="2" ry="2" />
<text  x="174.79" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="294.3" y="1781" width="0.2" height="15.0" fill="rgb(240,225,28)" rx="2" ry="2" />
<text  x="297.28" y="1791.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="486.8" y="1541" width="0.2" height="15.0" fill="rgb(248,6,12)" rx="2" ry="2" />
<text  x="489.84" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1002.8" y="1925" width="0.2" height="15.0" fill="rgb(207,94,8)" rx="2" ry="2" />
<text  x="1005.80" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (2 samples, 0.03%)</title><rect x="961.7" y="2037" width="0.4" height="15.0" fill="rgb(247,4,37)" rx="2" ry="2" />
<text  x="964.70" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="155.9" y="1733" width="0.2" height="15.0" fill="rgb(231,133,51)" rx="2" ry="2" />
<text  x="158.91" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="247.4" y="1845" width="0.2" height="15.0" fill="rgb(230,118,41)" rx="2" ry="2" />
<text  x="250.43" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="491.0" y="1765" width="0.2" height="15.0" fill="rgb(246,48,25)" rx="2" ry="2" />
<text  x="494.01" y="1775.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.02%)</title><rect x="406.8" y="1909" width="0.2" height="15.0" fill="rgb(218,65,1)" rx="2" ry="2" />
<text  x="409.84" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="838.4" y="1701" width="0.2" height="15.0" fill="rgb(233,178,50)" rx="2" ry="2" />
<text  x="841.42" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="838.4" y="1813" width="0.2" height="15.0" fill="rgb(212,13,23)" rx="2" ry="2" />
<text  x="841.42" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="93.0" y="1909" width="0.2" height="15.0" fill="rgb(226,31,46)" rx="2" ry="2" />
<text  x="95.98" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="73.9" y="1973" width="0.6" height="15.0" fill="rgb(235,145,14)" rx="2" ry="2" />
<text  x="76.92" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="597.4" y="1845" width="0.2" height="15.0" fill="rgb(246,206,0)" rx="2" ry="2" />
<text  x="600.42" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (8 samples, 0.13%)</title><rect x="233.7" y="1925" width="1.6" height="15.0" fill="rgb(242,91,33)" rx="2" ry="2" />
<text  x="236.73" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="88.2" y="1861" width="0.2" height="15.0" fill="rgb(206,207,54)" rx="2" ry="2" />
<text  x="91.22" y="1871.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="983.7" y="1989" width="0.2" height="15.0" fill="rgb(208,94,20)" rx="2" ry="2" />
<text  x="986.74" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="132.9" y="53" width="0.2" height="15.0" fill="rgb(208,3,25)" rx="2" ry="2" />
<text  x="135.88" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="190.9" y="1941" width="0.1" height="15.0" fill="rgb(239,33,10)" rx="2" ry="2" />
<text  x="193.85" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="61.0" y="1461" width="0.2" height="15.0" fill="rgb(240,195,12)" rx="2" ry="2" />
<text  x="64.02" y="1471.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="483.1" y="1621" width="0.2" height="15.0" fill="rgb(251,83,16)" rx="2" ry="2" />
<text  x="486.07" y="1631.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="486.8" y="1653" width="0.2" height="15.0" fill="rgb(228,117,23)" rx="2" ry="2" />
<text  x="489.84" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="995.6" y="1941" width="0.2" height="15.0" fill="rgb(250,2,54)" rx="2" ry="2" />
<text  x="998.65" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (38 samples, 0.64%)</title><rect x="1107.4" y="1685" width="7.6" height="15.0" fill="rgb(230,153,32)" rx="2" ry="2" />
<text  x="1110.42" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (1 samples, 0.02%)</title><rect x="642.3" y="1989" width="0.2" height="15.0" fill="rgb(219,39,10)" rx="2" ry="2" />
<text  x="645.28" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="662.3" y="1685" width="0.2" height="15.0" fill="rgb(220,123,30)" rx="2" ry="2" />
<text  x="665.34" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="166.4" y="1893" width="0.2" height="15.0" fill="rgb(231,88,9)" rx="2" ry="2" />
<text  x="169.43" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="528.5" y="1989" width="1.2" height="15.0" fill="rgb(207,162,35)" rx="2" ry="2" />
<text  x="531.53" y="1999.5" ></text>
</g>
<g >
<title>__sock_release (379 samples, 6.38%)</title><rect x="747.3" y="1781" width="75.2" height="15.0" fill="rgb(241,113,27)" rx="2" ry="2" />
<text  x="750.30" y="1791.5" >__sock_r..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="899.0" y="1941" width="0.2" height="15.0" fill="rgb(230,55,32)" rx="2" ry="2" />
<text  x="901.97" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="578.2" y="1989" width="0.2" height="15.0" fill="rgb(208,122,21)" rx="2" ry="2" />
<text  x="581.16" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (3 samples, 0.05%)</title><rect x="542.2" y="1973" width="0.6" height="15.0" fill="rgb(219,60,27)" rx="2" ry="2" />
<text  x="545.23" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="929.5" y="1909" width="0.2" height="15.0" fill="rgb(238,72,12)" rx="2" ry="2" />
<text  x="932.54" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="1106.6" y="1429" width="0.2" height="15.0" fill="rgb(205,26,36)" rx="2" ry="2" />
<text  x="1109.62" y="1439.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="651.8" y="1813" width="0.2" height="15.0" fill="rgb(226,98,16)" rx="2" ry="2" />
<text  x="654.81" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="969.8" y="1989" width="0.2" height="15.0" fill="rgb(205,162,17)" rx="2" ry="2" />
<text  x="972.84" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="264.7" y="1925" width="0.2" height="15.0" fill="rgb(220,5,34)" rx="2" ry="2" />
<text  x="267.70" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="1153.1" y="2053" width="0.2" height="15.0" fill="rgb(229,170,53)" rx="2" ry="2" />
<text  x="1156.08" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="903.5" y="1941" width="0.2" height="15.0" fill="rgb(225,149,3)" rx="2" ry="2" />
<text  x="906.54" y="1951.5" ></text>
</g>
<g >
<title>__destroy_inode (7 samples, 0.12%)</title><rect x="734.0" y="1685" width="1.4" height="15.0" fill="rgb(212,125,48)" rx="2" ry="2" />
<text  x="737.00" y="1695.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="283.2" y="1733" width="0.2" height="15.0" fill="rgb(236,170,1)" rx="2" ry="2" />
<text  x="286.16" y="1743.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="271.1" y="1893" width="0.2" height="15.0" fill="rgb(242,110,53)" rx="2" ry="2" />
<text  x="274.05" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (38 samples, 0.64%)</title><rect x="1107.4" y="1669" width="7.6" height="15.0" fill="rgb(235,19,8)" rx="2" ry="2" />
<text  x="1110.42" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="973.8" y="1989" width="0.2" height="15.0" fill="rgb(222,18,48)" rx="2" ry="2" />
<text  x="976.81" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (2 samples, 0.03%)</title><rect x="742.9" y="1765" width="0.4" height="15.0" fill="rgb(236,80,46)" rx="2" ry="2" />
<text  x="745.93" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1106.6" y="1749" width="0.2" height="15.0" fill="rgb(251,95,35)" rx="2" ry="2" />
<text  x="1109.62" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="136.5" y="277" width="0.2" height="15.0" fill="rgb(206,17,14)" rx="2" ry="2" />
<text  x="139.46" y="287.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="808.0" y="1685" width="0.4" height="15.0" fill="rgb(224,221,53)" rx="2" ry="2" />
<text  x="811.05" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="700.6" y="1829" width="0.2" height="15.0" fill="rgb(225,0,47)" rx="2" ry="2" />
<text  x="703.65" y="1839.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="761.0" y="1397" width="0.2" height="15.0" fill="rgb(214,113,52)" rx="2" ry="2" />
<text  x="764.00" y="1407.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1154.3" y="1845" width="0.2" height="15.0" fill="rgb(213,119,33)" rx="2" ry="2" />
<text  x="1157.27" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1017.1" y="1877" width="0.2" height="15.0" fill="rgb(250,0,47)" rx="2" ry="2" />
<text  x="1020.09" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1172.7" y="1797" width="0.2" height="15.0" fill="rgb(238,139,32)" rx="2" ry="2" />
<text  x="1175.73" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1181.1" y="1989" width="0.2" height="15.0" fill="rgb(235,116,44)" rx="2" ry="2" />
<text  x="1184.07" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="975.0" y="2021" width="19.3" height="15.0" fill="rgb(240,136,6)" rx="2" ry="2" />
<text  x="978.00" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.1" y="1893" width="0.2" height="15.0" fill="rgb(232,197,38)" rx="2" ry="2" />
<text  x="940.09" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (4 samples, 0.07%)</title><rect x="856.1" y="1957" width="0.8" height="15.0" fill="rgb(248,192,7)" rx="2" ry="2" />
<text  x="859.09" y="1967.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="992.5" y="2005" width="0.4" height="15.0" fill="rgb(221,156,51)" rx="2" ry="2" />
<text  x="995.47" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="925.0" y="1925" width="0.2" height="15.0" fill="rgb(243,186,44)" rx="2" ry="2" />
<text  x="927.98" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="118.2" y="1541" width="0.2" height="15.0" fill="rgb(206,111,42)" rx="2" ry="2" />
<text  x="121.19" y="1551.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="848.7" y="1909" width="0.2" height="15.0" fill="rgb(221,48,21)" rx="2" ry="2" />
<text  x="851.74" y="1919.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(232,161,29)" rx="2" ry="2" />
<text  x="15.38" y="2079.5" ></text>
</g>
<g >
<title>_IO_old_init (3 samples, 0.05%)</title><rect x="206.5" y="2037" width="0.6" height="15.0" fill="rgb(226,129,24)" rx="2" ry="2" />
<text  x="209.53" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="731.4" y="1669" width="0.4" height="15.0" fill="rgb(218,192,20)" rx="2" ry="2" />
<text  x="734.42" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.7" y="1861" width="0.2" height="15.0" fill="rgb(220,151,9)" rx="2" ry="2" />
<text  x="887.68" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="662.3" y="1909" width="0.2" height="15.0" fill="rgb(254,116,35)" rx="2" ry="2" />
<text  x="665.34" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1127.7" y="1797" width="0.2" height="15.0" fill="rgb(241,75,32)" rx="2" ry="2" />
<text  x="1130.66" y="1807.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="857.3" y="1957" width="0.2" height="15.0" fill="rgb(223,89,19)" rx="2" ry="2" />
<text  x="860.28" y="1967.5" ></text>
</g>
<g >
<title>import_iovec (6 samples, 0.10%)</title><rect x="267.9" y="1925" width="1.2" height="15.0" fill="rgb(214,65,52)" rx="2" ry="2" />
<text  x="270.88" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="831.9" y="1861" width="0.4" height="15.0" fill="rgb(224,120,2)" rx="2" ry="2" />
<text  x="834.87" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="976.6" y="2005" width="0.2" height="15.0" fill="rgb(253,48,45)" rx="2" ry="2" />
<text  x="979.59" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1019.9" y="1877" width="0.2" height="15.0" fill="rgb(246,185,39)" rx="2" ry="2" />
<text  x="1022.87" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (39 samples, 0.66%)</title><rect x="1107.2" y="1733" width="7.8" height="15.0" fill="rgb(233,207,6)" rx="2" ry="2" />
<text  x="1110.22" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="196.4" y="1749" width="0.2" height="15.0" fill="rgb(227,35,8)" rx="2" ry="2" />
<text  x="199.41" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="638.9" y="1909" width="0.6" height="15.0" fill="rgb(205,106,22)" rx="2" ry="2" />
<text  x="641.91" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="196.2" y="1973" width="0.2" height="15.0" fill="rgb(235,45,28)" rx="2" ry="2" />
<text  x="199.21" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="679.4" y="1861" width="0.2" height="15.0" fill="rgb(213,6,14)" rx="2" ry="2" />
<text  x="682.41" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1106.6" y="1493" width="0.2" height="15.0" fill="rgb(241,128,48)" rx="2" ry="2" />
<text  x="1109.62" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="743.1" y="1717" width="0.2" height="15.0" fill="rgb(241,28,6)" rx="2" ry="2" />
<text  x="746.13" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="743.1" y="1573" width="0.2" height="15.0" fill="rgb(230,60,46)" rx="2" ry="2" />
<text  x="746.13" y="1583.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="1182.9" y="2053" width="0.5" height="15.0" fill="rgb(233,109,20)" rx="2" ry="2" />
<text  x="1185.85" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="606.9" y="1877" width="0.2" height="15.0" fill="rgb(225,132,9)" rx="2" ry="2" />
<text  x="609.95" y="1887.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="947.4" y="1653" width="0.2" height="15.0" fill="rgb(223,159,16)" rx="2" ry="2" />
<text  x="950.41" y="1663.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="619.9" y="2021" width="0.2" height="15.0" fill="rgb(216,163,43)" rx="2" ry="2" />
<text  x="622.85" y="2031.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="136.9" y="165" width="0.2" height="15.0" fill="rgb(224,98,52)" rx="2" ry="2" />
<text  x="139.85" y="175.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1072.1" y="1685" width="0.2" height="15.0" fill="rgb(230,96,38)" rx="2" ry="2" />
<text  x="1075.08" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.08%)</title><rect x="301.8" y="1397" width="1.0" height="15.0" fill="rgb(209,45,47)" rx="2" ry="2" />
<text  x="304.82" y="1407.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="524.4" y="1957" width="0.2" height="15.0" fill="rgb(227,6,50)" rx="2" ry="2" />
<text  x="527.36" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="163.3" y="1877" width="0.2" height="15.0" fill="rgb(223,209,2)" rx="2" ry="2" />
<text  x="166.26" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="838.4" y="1749" width="0.2" height="15.0" fill="rgb(232,201,35)" rx="2" ry="2" />
<text  x="841.42" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (53 samples, 0.89%)</title><rect x="927.2" y="1973" width="10.5" height="15.0" fill="rgb(215,152,21)" rx="2" ry="2" />
<text  x="930.16" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="899.6" y="1557" width="0.2" height="15.0" fill="rgb(247,196,22)" rx="2" ry="2" />
<text  x="902.57" y="1567.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="868.0" y="1989" width="0.4" height="15.0" fill="rgb(211,59,52)" rx="2" ry="2" />
<text  x="871.00" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="569.8" y="1941" width="0.2" height="15.0" fill="rgb(252,5,0)" rx="2" ry="2" />
<text  x="572.83" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="342.7" y="1893" width="0.2" height="15.0" fill="rgb(223,61,51)" rx="2" ry="2" />
<text  x="345.72" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="838.4" y="1845" width="0.2" height="15.0" fill="rgb(245,16,25)" rx="2" ry="2" />
<text  x="841.42" y="1855.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (44 samples, 0.74%)</title><rect x="474.7" y="1957" width="8.8" height="15.0" fill="rgb(254,3,5)" rx="2" ry="2" />
<text  x="477.73" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="636.9" y="1909" width="0.2" height="15.0" fill="rgb(205,23,43)" rx="2" ry="2" />
<text  x="639.92" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="761.0" y="1461" width="0.2" height="15.0" fill="rgb(218,8,20)" rx="2" ry="2" />
<text  x="764.00" y="1471.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (1 samples, 0.02%)</title><rect x="606.9" y="1909" width="0.2" height="15.0" fill="rgb(231,220,23)" rx="2" ry="2" />
<text  x="609.95" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="838.4" y="1733" width="0.2" height="15.0" fill="rgb(219,192,20)" rx="2" ry="2" />
<text  x="841.42" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="136.1" y="133" width="0.2" height="15.0" fill="rgb(222,148,10)" rx="2" ry="2" />
<text  x="139.06" y="143.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="294.3" y="1701" width="0.2" height="15.0" fill="rgb(245,41,12)" rx="2" ry="2" />
<text  x="297.28" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="492.4" y="1973" width="0.2" height="15.0" fill="rgb(245,63,5)" rx="2" ry="2" />
<text  x="495.40" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.7" y="1973" width="0.2" height="15.0" fill="rgb(218,152,31)" rx="2" ry="2" />
<text  x="890.65" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="136.1" y="53" width="0.2" height="15.0" fill="rgb(216,157,37)" rx="2" ry="2" />
<text  x="139.06" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="753.9" y="1669" width="0.2" height="15.0" fill="rgb(250,105,35)" rx="2" ry="2" />
<text  x="756.85" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(225,25,22)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="968.1" y="1861" width="0.2" height="15.0" fill="rgb(237,169,37)" rx="2" ry="2" />
<text  x="971.06" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="407.8" y="1877" width="0.2" height="15.0" fill="rgb(234,149,12)" rx="2" ry="2" />
<text  x="410.83" y="1887.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="300.8" y="1525" width="0.2" height="15.0" fill="rgb(250,126,14)" rx="2" ry="2" />
<text  x="303.83" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="1175.3" y="1989" width="0.8" height="15.0" fill="rgb(213,157,4)" rx="2" ry="2" />
<text  x="1178.31" y="1999.5" ></text>
</g>
<g >
<title>dst_release (7 samples, 0.12%)</title><rect x="1081.4" y="1877" width="1.4" height="15.0" fill="rgb(237,143,15)" rx="2" ry="2" />
<text  x="1084.41" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="294.3" y="1749" width="0.2" height="15.0" fill="rgb(220,191,47)" rx="2" ry="2" />
<text  x="297.28" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="61.6" y="1813" width="0.2" height="15.0" fill="rgb(209,110,44)" rx="2" ry="2" />
<text  x="64.62" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (31 samples, 0.52%)</title><rect x="625.8" y="2037" width="6.2" height="15.0" fill="rgb(223,206,46)" rx="2" ry="2" />
<text  x="628.81" y="2047.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (3 samples, 0.05%)</title><rect x="29.9" y="1989" width="0.5" height="15.0" fill="rgb(254,98,7)" rx="2" ry="2" />
<text  x="32.85" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="157.5" y="1813" width="0.2" height="15.0" fill="rgb(209,189,50)" rx="2" ry="2" />
<text  x="160.50" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1016.5" y="1957" width="0.2" height="15.0" fill="rgb(216,186,41)" rx="2" ry="2" />
<text  x="1019.49" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="534.1" y="1877" width="0.2" height="15.0" fill="rgb(214,113,9)" rx="2" ry="2" />
<text  x="537.09" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="893.2" y="1973" width="0.2" height="15.0" fill="rgb(224,69,14)" rx="2" ry="2" />
<text  x="896.21" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="732.8" y="1701" width="0.2" height="15.0" fill="rgb(235,23,50)" rx="2" ry="2" />
<text  x="735.81" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="491.8" y="1797" width="0.2" height="15.0" fill="rgb(219,178,2)" rx="2" ry="2" />
<text  x="494.81" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="191.6" y="1909" width="0.2" height="15.0" fill="rgb(228,137,22)" rx="2" ry="2" />
<text  x="194.65" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="830.5" y="1589" width="0.2" height="15.0" fill="rgb(240,157,7)" rx="2" ry="2" />
<text  x="833.48" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="283.0" y="1685" width="0.2" height="15.0" fill="rgb(229,111,54)" rx="2" ry="2" />
<text  x="285.96" y="1695.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="992.3" y="1909" width="0.2" height="15.0" fill="rgb(229,84,48)" rx="2" ry="2" />
<text  x="995.27" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="70.7" y="1845" width="0.2" height="15.0" fill="rgb(242,55,41)" rx="2" ry="2" />
<text  x="73.75" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="842.2" y="1813" width="0.2" height="15.0" fill="rgb(222,204,24)" rx="2" ry="2" />
<text  x="845.19" y="1823.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1127.7" y="1733" width="0.2" height="15.0" fill="rgb(224,123,37)" rx="2" ry="2" />
<text  x="1130.66" y="1743.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (62 samples, 1.04%)</title><rect x="601.8" y="1989" width="12.3" height="15.0" fill="rgb(251,20,44)" rx="2" ry="2" />
<text  x="604.79" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="514.2" y="1909" width="0.4" height="15.0" fill="rgb(216,204,42)" rx="2" ry="2" />
<text  x="517.24" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="329.8" y="1781" width="0.2" height="15.0" fill="rgb(232,107,1)" rx="2" ry="2" />
<text  x="332.81" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (6 samples, 0.10%)</title><rect x="609.7" y="1845" width="1.2" height="15.0" fill="rgb(233,122,51)" rx="2" ry="2" />
<text  x="612.73" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="74.9" y="1845" width="0.2" height="15.0" fill="rgb(211,130,13)" rx="2" ry="2" />
<text  x="77.92" y="1855.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="289.3" y="1557" width="0.2" height="15.0" fill="rgb(245,161,42)" rx="2" ry="2" />
<text  x="292.32" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="899.6" y="1973" width="0.2" height="15.0" fill="rgb(237,72,50)" rx="2" ry="2" />
<text  x="902.57" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="491.8" y="1813" width="0.2" height="15.0" fill="rgb(213,132,41)" rx="2" ry="2" />
<text  x="494.81" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="138.0" y="1141" width="0.2" height="15.0" fill="rgb(219,107,34)" rx="2" ry="2" />
<text  x="141.05" y="1151.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="329.8" y="1749" width="0.2" height="15.0" fill="rgb(244,88,39)" rx="2" ry="2" />
<text  x="332.81" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~new_allocator (1 samples, 0.02%)</title><rect x="92.4" y="1893" width="0.2" height="15.0" fill="rgb(227,59,10)" rx="2" ry="2" />
<text  x="95.39" y="1903.5" ></text>
</g>
<g >
<title>security_socket_getpeername (1 samples, 0.02%)</title><rect x="675.4" y="1861" width="0.2" height="15.0" fill="rgb(234,180,33)" rx="2" ry="2" />
<text  x="678.44" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="740.9" y="1637" width="0.2" height="15.0" fill="rgb(215,47,17)" rx="2" ry="2" />
<text  x="743.95" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1018.3" y="1941" width="0.2" height="15.0" fill="rgb(219,156,53)" rx="2" ry="2" />
<text  x="1021.28" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="87.8" y="1941" width="0.2" height="15.0" fill="rgb(228,114,25)" rx="2" ry="2" />
<text  x="90.82" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="899.6" y="1637" width="0.2" height="15.0" fill="rgb(227,219,27)" rx="2" ry="2" />
<text  x="902.57" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="645" width="17.9" height="15.0" fill="rgb(229,59,0)" rx="2" ry="2" />
<text  x="122.19" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="733.8" y="1557" width="0.2" height="15.0" fill="rgb(221,189,2)" rx="2" ry="2" />
<text  x="736.80" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.2" y="1605" width="0.2" height="15.0" fill="rgb(246,162,4)" rx="2" ry="2" />
<text  x="121.19" y="1615.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="102.3" y="1973" width="0.4" height="15.0" fill="rgb(245,212,20)" rx="2" ry="2" />
<text  x="105.31" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="836.6" y="1877" width="0.2" height="15.0" fill="rgb(246,196,14)" rx="2" ry="2" />
<text  x="839.64" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="886.1" y="1925" width="0.6" height="15.0" fill="rgb(227,85,31)" rx="2" ry="2" />
<text  x="889.07" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="884.9" y="1909" width="0.4" height="15.0" fill="rgb(238,73,50)" rx="2" ry="2" />
<text  x="887.88" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="899.6" y="1845" width="0.2" height="15.0" fill="rgb(218,166,42)" rx="2" ry="2" />
<text  x="902.57" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="925.6" y="1781" width="0.6" height="15.0" fill="rgb(231,11,52)" rx="2" ry="2" />
<text  x="928.57" y="1791.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="745.9" y="1429" width="0.2" height="15.0" fill="rgb(238,76,39)" rx="2" ry="2" />
<text  x="748.91" y="1439.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1127.5" y="1861" width="0.4" height="15.0" fill="rgb(247,218,39)" rx="2" ry="2" />
<text  x="1130.47" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="668.3" y="1829" width="0.2" height="15.0" fill="rgb(247,95,51)" rx="2" ry="2" />
<text  x="671.29" y="1839.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (35 samples, 0.59%)</title><rect x="994.3" y="2037" width="6.9" height="15.0" fill="rgb(208,224,20)" rx="2" ry="2" />
<text  x="997.26" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.59%)</title><rect x="1156.8" y="1941" width="7.0" height="15.0" fill="rgb(243,20,2)" rx="2" ry="2" />
<text  x="1159.85" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1154.3" y="1861" width="0.2" height="15.0" fill="rgb(225,217,44)" rx="2" ry="2" />
<text  x="1157.27" y="1871.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="987.3" y="1877" width="0.2" height="15.0" fill="rgb(229,72,11)" rx="2" ry="2" />
<text  x="990.31" y="1887.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="534.1" y="1861" width="0.2" height="15.0" fill="rgb(219,85,53)" rx="2" ry="2" />
<text  x="537.09" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="694.1" y="1797" width="0.2" height="15.0" fill="rgb(238,27,8)" rx="2" ry="2" />
<text  x="697.10" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="825.9" y="1397" width="0.2" height="15.0" fill="rgb(222,12,51)" rx="2" ry="2" />
<text  x="828.92" y="1407.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1151.7" y="2005" width="0.2" height="15.0" fill="rgb(243,168,13)" rx="2" ry="2" />
<text  x="1154.69" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1181.1" y="2005" width="0.2" height="15.0" fill="rgb(225,14,12)" rx="2" ry="2" />
<text  x="1184.07" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="483.1" y="1749" width="0.4" height="15.0" fill="rgb(254,18,37)" rx="2" ry="2" />
<text  x="486.07" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_free (23 samples, 0.39%)</title><rect x="1063.7" y="1893" width="4.6" height="15.0" fill="rgb(233,104,3)" rx="2" ry="2" />
<text  x="1066.74" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="844.2" y="1717" width="0.2" height="15.0" fill="rgb(229,120,39)" rx="2" ry="2" />
<text  x="847.18" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="743.1" y="1733" width="0.2" height="15.0" fill="rgb(207,94,22)" rx="2" ry="2" />
<text  x="746.13" y="1743.5" ></text>
</g>
<g >
<title>ip_output (127 samples, 2.14%)</title><rect x="770.7" y="1637" width="25.2" height="15.0" fill="rgb(233,18,14)" rx="2" ry="2" />
<text  x="773.73" y="1647.5" >i..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="637.1" y="1717" width="0.2" height="15.0" fill="rgb(254,163,6)" rx="2" ry="2" />
<text  x="640.12" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="104.9" y="1797" width="0.2" height="15.0" fill="rgb(216,42,3)" rx="2" ry="2" />
<text  x="107.89" y="1807.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="196.4" y="1717" width="0.2" height="15.0" fill="rgb(206,82,15)" rx="2" ry="2" />
<text  x="199.41" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="218.0" y="2021" width="0.6" height="15.0" fill="rgb(227,161,14)" rx="2" ry="2" />
<text  x="221.05" y="2031.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="179.9" y="2021" width="0.2" height="15.0" fill="rgb(242,225,43)" rx="2" ry="2" />
<text  x="182.93" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (4 samples, 0.07%)</title><rect x="972.0" y="2005" width="0.8" height="15.0" fill="rgb(221,226,9)" rx="2" ry="2" />
<text  x="975.03" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="739.8" y="1621" width="0.2" height="15.0" fill="rgb(254,50,46)" rx="2" ry="2" />
<text  x="742.76" y="1631.5" ></text>
</g>
<g >
<title>__srcu_read_lock (2 samples, 0.03%)</title><rect x="734.2" y="1637" width="0.4" height="15.0" fill="rgb(230,27,40)" rx="2" ry="2" />
<text  x="737.20" y="1647.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (2 samples, 0.03%)</title><rect x="40.2" y="2005" width="0.4" height="15.0" fill="rgb(227,138,6)" rx="2" ry="2" />
<text  x="43.17" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="419.0" y="1781" width="0.1" height="15.0" fill="rgb(254,122,1)" rx="2" ry="2" />
<text  x="421.95" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="51.9" y="1925" width="0.4" height="15.0" fill="rgb(249,166,17)" rx="2" ry="2" />
<text  x="54.89" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="646.5" y="1957" width="0.2" height="15.0" fill="rgb(233,135,0)" rx="2" ry="2" />
<text  x="649.45" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="820.0" y="1637" width="0.2" height="15.0" fill="rgb(222,26,8)" rx="2" ry="2" />
<text  x="822.96" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="698.5" y="1909" width="0.2" height="15.0" fill="rgb(230,136,42)" rx="2" ry="2" />
<text  x="701.47" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (3 samples, 0.05%)</title><rect x="535.1" y="1973" width="0.6" height="15.0" fill="rgb(214,24,38)" rx="2" ry="2" />
<text  x="538.08" y="1983.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="753.9" y="1685" width="0.2" height="15.0" fill="rgb(225,119,37)" rx="2" ry="2" />
<text  x="756.85" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="330.0" y="1765" width="0.2" height="15.0" fill="rgb(207,157,30)" rx="2" ry="2" />
<text  x="333.01" y="1775.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(205,122,11)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="515.6" y="1941" width="0.2" height="15.0" fill="rgb(253,61,29)" rx="2" ry="2" />
<text  x="518.63" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 2.25%)</title><rect x="117.6" y="1941" width="26.6" height="15.0" fill="rgb(239,98,12)" rx="2" ry="2" />
<text  x="120.60" y="1951.5" >[..</text>
</g>
<g >
<title>__slab_free (11 samples, 0.19%)</title><rect x="1065.9" y="1877" width="2.2" height="15.0" fill="rgb(246,175,32)" rx="2" ry="2" />
<text  x="1068.93" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="654.4" y="1717" width="0.2" height="15.0" fill="rgb(252,223,38)" rx="2" ry="2" />
<text  x="657.39" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (4 samples, 0.07%)</title><rect x="567.8" y="2005" width="0.8" height="15.0" fill="rgb(229,195,13)" rx="2" ry="2" />
<text  x="570.84" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="646.5" y="1925" width="0.2" height="15.0" fill="rgb(228,114,13)" rx="2" ry="2" />
<text  x="649.45" y="1935.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (10 samples, 0.17%)</title><rect x="330.4" y="1877" width="2.0" height="15.0" fill="rgb(236,32,52)" rx="2" ry="2" />
<text  x="333.41" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (8 samples, 0.13%)</title><rect x="860.1" y="1989" width="1.5" height="15.0" fill="rgb(211,70,42)" rx="2" ry="2" />
<text  x="863.06" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="945.4" y="1893" width="0.2" height="15.0" fill="rgb(223,205,47)" rx="2" ry="2" />
<text  x="948.42" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="700.6" y="1909" width="0.2" height="15.0" fill="rgb(222,177,6)" rx="2" ry="2" />
<text  x="703.65" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="739.8" y="1445" width="0.2" height="15.0" fill="rgb(227,83,31)" rx="2" ry="2" />
<text  x="742.76" y="1455.5" ></text>
</g>
<g >
<title>__fput (491 samples, 8.26%)</title><rect x="725.3" y="1813" width="97.4" height="15.0" fill="rgb(246,212,34)" rx="2" ry="2" />
<text  x="728.27" y="1823.5" >__fput</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="133.1" y="37" width="0.2" height="15.0" fill="rgb(214,11,34)" rx="2" ry="2" />
<text  x="136.08" y="47.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="418.2" y="1893" width="0.2" height="15.0" fill="rgb(250,10,13)" rx="2" ry="2" />
<text  x="421.16" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="501" width="17.7" height="15.0" fill="rgb(207,186,49)" rx="2" ry="2" />
<text  x="122.19" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="234.3" y="1877" width="1.0" height="15.0" fill="rgb(226,79,8)" rx="2" ry="2" />
<text  x="237.33" y="1887.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (3 samples, 0.05%)</title><rect x="213.3" y="2037" width="0.6" height="15.0" fill="rgb(236,190,29)" rx="2" ry="2" />
<text  x="216.28" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="940.5" y="1957" width="0.2" height="15.0" fill="rgb(253,180,14)" rx="2" ry="2" />
<text  x="943.46" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="940.5" y="1669" width="0.2" height="15.0" fill="rgb(211,18,36)" rx="2" ry="2" />
<text  x="943.46" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="490.2" y="1893" width="0.2" height="15.0" fill="rgb(238,76,25)" rx="2" ry="2" />
<text  x="493.22" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="638.7" y="1861" width="0.2" height="15.0" fill="rgb(214,200,11)" rx="2" ry="2" />
<text  x="641.71" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="108.5" y="1989" width="0.2" height="15.0" fill="rgb(208,94,37)" rx="2" ry="2" />
<text  x="111.47" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="831.9" y="1845" width="0.4" height="15.0" fill="rgb(223,112,39)" rx="2" ry="2" />
<text  x="834.87" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="459.6" y="1957" width="0.2" height="15.0" fill="rgb(221,164,48)" rx="2" ry="2" />
<text  x="462.65" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="247.8" y="1797" width="0.2" height="15.0" fill="rgb(223,82,28)" rx="2" ry="2" />
<text  x="250.83" y="1807.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="765.2" y="1685" width="0.2" height="15.0" fill="rgb(210,212,24)" rx="2" ry="2" />
<text  x="768.17" y="1695.5" ></text>
</g>
<g >
<title>task_work_run (507 samples, 8.53%)</title><rect x="724.7" y="1845" width="100.6" height="15.0" fill="rgb(218,77,19)" rx="2" ry="2" />
<text  x="727.67" y="1855.5" >task_work_run</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="408.4" y="1637" width="0.2" height="15.0" fill="rgb(209,184,48)" rx="2" ry="2" />
<text  x="411.43" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="283.0" y="1653" width="0.2" height="15.0" fill="rgb(214,145,14)" rx="2" ry="2" />
<text  x="285.96" y="1663.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="984.5" y="1925" width="0.6" height="15.0" fill="rgb(223,209,29)" rx="2" ry="2" />
<text  x="987.53" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="667.7" y="1909" width="0.2" height="15.0" fill="rgb(248,187,49)" rx="2" ry="2" />
<text  x="670.70" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="300.6" y="1621" width="0.4" height="15.0" fill="rgb(241,184,50)" rx="2" ry="2" />
<text  x="303.63" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (579 samples, 9.74%)</title><rect x="716.9" y="1893" width="115.0" height="15.0" fill="rgb(212,116,23)" rx="2" ry="2" />
<text  x="719.93" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="126.9" y="37" width="0.2" height="15.0" fill="rgb(212,137,12)" rx="2" ry="2" />
<text  x="129.93" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="547.6" y="1813" width="0.2" height="15.0" fill="rgb(252,28,13)" rx="2" ry="2" />
<text  x="550.59" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="662.1" y="1893" width="0.2" height="15.0" fill="rgb(226,182,45)" rx="2" ry="2" />
<text  x="665.14" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1071.9" y="1845" width="0.4" height="15.0" fill="rgb(232,63,27)" rx="2" ry="2" />
<text  x="1074.88" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (4 samples, 0.07%)</title><rect x="661.3" y="1989" width="0.8" height="15.0" fill="rgb(229,119,42)" rx="2" ry="2" />
<text  x="664.34" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="679.4" y="1717" width="0.2" height="15.0" fill="rgb(209,63,3)" rx="2" ry="2" />
<text  x="682.41" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="62.0" y="1893" width="0.4" height="15.0" fill="rgb(219,141,46)" rx="2" ry="2" />
<text  x="65.01" y="1903.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (6 samples, 0.10%)</title><rect x="401.9" y="1877" width="1.2" height="15.0" fill="rgb(250,96,47)" rx="2" ry="2" />
<text  x="404.88" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="825.3" y="1669" width="0.8" height="15.0" fill="rgb(212,91,21)" rx="2" ry="2" />
<text  x="828.32" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="88.4" y="1925" width="0.4" height="15.0" fill="rgb(246,76,34)" rx="2" ry="2" />
<text  x="91.42" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="247.4" y="1861" width="0.2" height="15.0" fill="rgb(210,168,44)" rx="2" ry="2" />
<text  x="250.43" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="666.5" y="1941" width="2.2" height="15.0" fill="rgb(250,162,25)" rx="2" ry="2" />
<text  x="669.50" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="543.8" y="1621" width="0.2" height="15.0" fill="rgb(246,102,0)" rx="2" ry="2" />
<text  x="546.82" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1156.5" y="1925" width="0.1" height="15.0" fill="rgb(224,55,54)" rx="2" ry="2" />
<text  x="1159.45" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="159.7" y="1925" width="0.2" height="15.0" fill="rgb(228,119,35)" rx="2" ry="2" />
<text  x="162.68" y="1935.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (7 samples, 0.12%)</title><rect x="276.2" y="1861" width="1.4" height="15.0" fill="rgb(221,60,34)" rx="2" ry="2" />
<text  x="279.21" y="1871.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="739.8" y="1285" width="0.2" height="15.0" fill="rgb(249,191,16)" rx="2" ry="2" />
<text  x="742.76" y="1295.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="85.8" y="1925" width="0.2" height="15.0" fill="rgb(218,145,46)" rx="2" ry="2" />
<text  x="88.83" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="157.5" y="1781" width="0.2" height="15.0" fill="rgb(229,8,37)" rx="2" ry="2" />
<text  x="160.50" y="1791.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="94.8" y="1749" width="0.2" height="15.0" fill="rgb(207,85,23)" rx="2" ry="2" />
<text  x="97.77" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="72.1" y="1749" width="0.2" height="15.0" fill="rgb(227,24,27)" rx="2" ry="2" />
<text  x="75.14" y="1759.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="659.2" y="1669" width="0.2" height="15.0" fill="rgb(205,5,4)" rx="2" ry="2" />
<text  x="662.16" y="1679.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (2 samples, 0.03%)</title><rect x="1002.6" y="2021" width="0.4" height="15.0" fill="rgb(213,153,22)" rx="2" ry="2" />
<text  x="1005.60" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="547.6" y="1941" width="0.2" height="15.0" fill="rgb(244,50,5)" rx="2" ry="2" />
<text  x="550.59" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (96 samples, 1.62%)</title><rect x="581.9" y="2021" width="19.1" height="15.0" fill="rgb(209,147,7)" rx="2" ry="2" />
<text  x="584.93" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (3 samples, 0.05%)</title><rect x="108.1" y="2021" width="0.6" height="15.0" fill="rgb(207,118,30)" rx="2" ry="2" />
<text  x="111.07" y="2031.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="627.2" y="1717" width="0.2" height="15.0" fill="rgb(228,130,9)" rx="2" ry="2" />
<text  x="630.20" y="1727.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="543.8" y="1637" width="0.2" height="15.0" fill="rgb(250,196,46)" rx="2" ry="2" />
<text  x="546.82" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="900.6" y="2021" width="0.4" height="15.0" fill="rgb(225,7,39)" rx="2" ry="2" />
<text  x="903.56" y="2031.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="157.5" y="1669" width="0.2" height="15.0" fill="rgb(224,132,44)" rx="2" ry="2" />
<text  x="160.50" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="67.0" y="1861" width="0.2" height="15.0" fill="rgb(241,94,37)" rx="2" ry="2" />
<text  x="69.98" y="1871.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="443.0" y="1893" width="0.2" height="15.0" fill="rgb(208,207,20)" rx="2" ry="2" />
<text  x="445.97" y="1903.5" ></text>
</g>
<g >
<title>skb_free_head (36 samples, 0.61%)</title><rect x="1072.3" y="1877" width="7.1" height="15.0" fill="rgb(242,99,33)" rx="2" ry="2" />
<text  x="1075.28" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="630.4" y="1909" width="0.2" height="15.0" fill="rgb(228,101,44)" rx="2" ry="2" />
<text  x="633.37" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="831.7" y="1669" width="0.2" height="15.0" fill="rgb(222,120,31)" rx="2" ry="2" />
<text  x="834.67" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="443.8" y="1941" width="0.2" height="15.0" fill="rgb(250,103,35)" rx="2" ry="2" />
<text  x="446.77" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (7 samples, 0.12%)</title><rect x="125.1" y="37" width="1.4" height="15.0" fill="rgb(230,223,30)" rx="2" ry="2" />
<text  x="128.14" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="136.7" y="277" width="0.2" height="15.0" fill="rgb(207,137,11)" rx="2" ry="2" />
<text  x="139.66" y="287.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="870.4" y="1989" width="0.4" height="15.0" fill="rgb(246,33,51)" rx="2" ry="2" />
<text  x="873.38" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="141.8" y="1781" width="0.2" height="15.0" fill="rgb(229,215,49)" rx="2" ry="2" />
<text  x="144.82" y="1791.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="196.0" y="1925" width="0.2" height="15.0" fill="rgb(247,8,0)" rx="2" ry="2" />
<text  x="199.01" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="885.3" y="1925" width="0.2" height="15.0" fill="rgb(209,93,49)" rx="2" ry="2" />
<text  x="888.27" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="173.0" y="1877" width="0.2" height="15.0" fill="rgb(213,56,3)" rx="2" ry="2" />
<text  x="175.98" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="520.0" y="1877" width="0.2" height="15.0" fill="rgb(225,207,41)" rx="2" ry="2" />
<text  x="523.00" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="95.6" y="1749" width="0.2" height="15.0" fill="rgb(221,7,6)" rx="2" ry="2" />
<text  x="98.56" y="1759.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="474.5" y="1925" width="0.2" height="15.0" fill="rgb(237,153,23)" rx="2" ry="2" />
<text  x="477.54" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="241.9" y="1813" width="0.2" height="15.0" fill="rgb(215,8,39)" rx="2" ry="2" />
<text  x="244.87" y="1823.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (3 samples, 0.05%)</title><rect x="288.1" y="1861" width="0.6" height="15.0" fill="rgb(229,221,50)" rx="2" ry="2" />
<text  x="291.13" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="332.2" y="1781" width="0.2" height="15.0" fill="rgb(221,14,34)" rx="2" ry="2" />
<text  x="335.20" y="1791.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="675.4" y="1813" width="0.2" height="15.0" fill="rgb(241,174,31)" rx="2" ry="2" />
<text  x="678.44" y="1823.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="543.8" y="1701" width="0.2" height="15.0" fill="rgb(231,185,51)" rx="2" ry="2" />
<text  x="546.82" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (3 samples, 0.05%)</title><rect x="577.2" y="1973" width="0.6" height="15.0" fill="rgb(217,25,39)" rx="2" ry="2" />
<text  x="580.17" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="687.9" y="1877" width="0.2" height="15.0" fill="rgb(250,174,52)" rx="2" ry="2" />
<text  x="690.94" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="52.9" y="1893" width="0.2" height="15.0" fill="rgb(253,103,8)" rx="2" ry="2" />
<text  x="55.88" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="35.2" y="1941" width="0.2" height="15.0" fill="rgb(206,64,13)" rx="2" ry="2" />
<text  x="38.21" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="491.8" y="1701" width="0.2" height="15.0" fill="rgb(234,70,43)" rx="2" ry="2" />
<text  x="494.81" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="378.5" y="1861" width="0.2" height="15.0" fill="rgb(232,34,24)" rx="2" ry="2" />
<text  x="381.45" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="741.5" y="1749" width="0.2" height="15.0" fill="rgb(253,129,49)" rx="2" ry="2" />
<text  x="744.54" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="810.0" y="1717" width="0.2" height="15.0" fill="rgb(218,174,38)" rx="2" ry="2" />
<text  x="813.03" y="1727.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="982.0" y="1829" width="0.2" height="15.0" fill="rgb(215,157,16)" rx="2" ry="2" />
<text  x="984.95" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="133.9" y="101" width="0.2" height="15.0" fill="rgb(208,26,12)" rx="2" ry="2" />
<text  x="136.88" y="111.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="919.0" y="1973" width="0.2" height="15.0" fill="rgb(238,207,37)" rx="2" ry="2" />
<text  x="922.02" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="651.8" y="1845" width="0.2" height="15.0" fill="rgb(248,75,48)" rx="2" ry="2" />
<text  x="654.81" y="1855.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1034.6" y="1973" width="0.2" height="15.0" fill="rgb(236,189,8)" rx="2" ry="2" />
<text  x="1037.56" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="795.7" y="1605" width="0.2" height="15.0" fill="rgb(234,16,52)" rx="2" ry="2" />
<text  x="798.74" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.05%)</title><rect x="1174.5" y="1957" width="0.6" height="15.0" fill="rgb(248,151,8)" rx="2" ry="2" />
<text  x="1177.52" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1144.9" y="2053" width="0.2" height="15.0" fill="rgb(222,144,45)" rx="2" ry="2" />
<text  x="1147.94" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="687.9" y="1925" width="0.2" height="15.0" fill="rgb(243,123,1)" rx="2" ry="2" />
<text  x="690.94" y="1935.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="973.8" y="1973" width="0.2" height="15.0" fill="rgb(250,211,19)" rx="2" ry="2" />
<text  x="976.81" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="112.4" y="1861" width="0.2" height="15.0" fill="rgb(230,42,20)" rx="2" ry="2" />
<text  x="115.44" y="1871.5" ></text>
</g>
<g >
<title>vfprintf (20 samples, 0.34%)</title><rect x="209.3" y="2021" width="4.0" height="15.0" fill="rgb(237,165,43)" rx="2" ry="2" />
<text  x="212.31" y="2031.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="615.9" y="2005" width="0.2" height="15.0" fill="rgb(217,53,18)" rx="2" ry="2" />
<text  x="618.88" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="899.6" y="1877" width="0.2" height="15.0" fill="rgb(218,54,23)" rx="2" ry="2" />
<text  x="902.57" y="1887.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.10%)</title><rect x="12.4" y="1973" width="1.2" height="15.0" fill="rgb(210,22,15)" rx="2" ry="2" />
<text  x="15.38" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="802.9" y="1621" width="0.2" height="15.0" fill="rgb(208,63,38)" rx="2" ry="2" />
<text  x="805.89" y="1631.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="550.2" y="1941" width="0.2" height="15.0" fill="rgb(238,89,53)" rx="2" ry="2" />
<text  x="553.17" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1150.5" y="1989" width="0.2" height="15.0" fill="rgb(222,147,30)" rx="2" ry="2" />
<text  x="1153.49" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="408.4" y="1829" width="0.2" height="15.0" fill="rgb(233,207,15)" rx="2" ry="2" />
<text  x="411.43" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.7" y="325" width="0.2" height="15.0" fill="rgb(212,223,33)" rx="2" ry="2" />
<text  x="139.66" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="286.3" y="1813" width="0.4" height="15.0" fill="rgb(245,198,10)" rx="2" ry="2" />
<text  x="289.34" y="1823.5" ></text>
</g>
<g >
<title>memchr@plt (3 samples, 0.05%)</title><rect x="1018.7" y="2037" width="0.6" height="15.0" fill="rgb(205,29,38)" rx="2" ry="2" />
<text  x="1021.68" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="517.8" y="1973" width="0.2" height="15.0" fill="rgb(214,150,48)" rx="2" ry="2" />
<text  x="520.81" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1127.5" y="1925" width="0.4" height="15.0" fill="rgb(222,83,32)" rx="2" ry="2" />
<text  x="1130.47" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="329.4" y="1733" width="0.2" height="15.0" fill="rgb(245,19,15)" rx="2" ry="2" />
<text  x="332.42" y="1743.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="376.9" y="1925" width="0.2" height="15.0" fill="rgb(218,123,25)" rx="2" ry="2" />
<text  x="379.86" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="408.2" y="1877" width="0.2" height="15.0" fill="rgb(214,84,36)" rx="2" ry="2" />
<text  x="411.23" y="1887.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="854.5" y="1941" width="0.4" height="15.0" fill="rgb(247,215,14)" rx="2" ry="2" />
<text  x="857.50" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="135.9" y="197" width="0.2" height="15.0" fill="rgb(230,135,16)" rx="2" ry="2" />
<text  x="138.86" y="207.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="138.0" y="949" width="0.2" height="15.0" fill="rgb(254,48,32)" rx="2" ry="2" />
<text  x="141.05" y="959.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="96.2" y="1925" width="0.2" height="15.0" fill="rgb(243,6,18)" rx="2" ry="2" />
<text  x="99.16" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="662.3" y="1589" width="0.2" height="15.0" fill="rgb(252,134,13)" rx="2" ry="2" />
<text  x="665.34" y="1599.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="64.8" y="1909" width="0.2" height="15.0" fill="rgb(223,13,15)" rx="2" ry="2" />
<text  x="67.79" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="541.2" y="1909" width="0.4" height="15.0" fill="rgb(209,10,46)" rx="2" ry="2" />
<text  x="544.24" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="101.9" y="1941" width="0.2" height="15.0" fill="rgb(221,160,29)" rx="2" ry="2" />
<text  x="104.91" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="725.9" y="1749" width="0.2" height="15.0" fill="rgb(209,208,40)" rx="2" ry="2" />
<text  x="728.86" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="236.3" y="1909" width="1.0" height="15.0" fill="rgb(209,200,36)" rx="2" ry="2" />
<text  x="239.31" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="510.3" y="1957" width="0.2" height="15.0" fill="rgb(228,61,35)" rx="2" ry="2" />
<text  x="513.27" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (10 samples, 0.17%)</title><rect x="93.4" y="1941" width="2.0" height="15.0" fill="rgb(237,69,26)" rx="2" ry="2" />
<text  x="96.38" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="328.4" y="1589" width="0.2" height="15.0" fill="rgb(233,123,5)" rx="2" ry="2" />
<text  x="331.43" y="1599.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="731.4" y="1605" width="0.2" height="15.0" fill="rgb(231,206,8)" rx="2" ry="2" />
<text  x="734.42" y="1615.5" ></text>
</g>
<g >
<title>all (5,944 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,130,35)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="342.7" y="1845" width="0.2" height="15.0" fill="rgb(247,148,16)" rx="2" ry="2" />
<text  x="345.72" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="392.2" y="1877" width="0.1" height="15.0" fill="rgb(252,162,49)" rx="2" ry="2" />
<text  x="395.15" y="1887.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="825.5" y="1493" width="0.2" height="15.0" fill="rgb(231,71,13)" rx="2" ry="2" />
<text  x="828.52" y="1503.5" ></text>
</g>
<g >
<title>epoll_ctl (374 samples, 6.29%)</title><rect x="423.5" y="2037" width="74.3" height="15.0" fill="rgb(210,71,22)" rx="2" ry="2" />
<text  x="426.52" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="149.4" y="1941" width="0.2" height="15.0" fill="rgb(223,117,30)" rx="2" ry="2" />
<text  x="152.36" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="654.4" y="1573" width="0.2" height="15.0" fill="rgb(207,48,12)" rx="2" ry="2" />
<text  x="657.39" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (37 samples, 0.62%)</title><rect x="940.7" y="2005" width="7.3" height="15.0" fill="rgb(242,24,15)" rx="2" ry="2" />
<text  x="943.66" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="543.8" y="1733" width="0.2" height="15.0" fill="rgb(231,100,14)" rx="2" ry="2" />
<text  x="546.82" y="1743.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="94.8" y="1765" width="0.2" height="15.0" fill="rgb(222,146,41)" rx="2" ry="2" />
<text  x="97.77" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="61.0" y="1749" width="0.2" height="15.0" fill="rgb(206,138,36)" rx="2" ry="2" />
<text  x="64.02" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="206.9" y="2005" width="0.2" height="15.0" fill="rgb(220,11,12)" rx="2" ry="2" />
<text  x="209.93" y="2015.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="366.1" y="1925" width="0.2" height="15.0" fill="rgb(253,95,48)" rx="2" ry="2" />
<text  x="369.14" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="693" width="17.9" height="15.0" fill="rgb(211,51,5)" rx="2" ry="2" />
<text  x="122.19" y="703.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="547.6" y="1893" width="0.2" height="15.0" fill="rgb(253,112,37)" rx="2" ry="2" />
<text  x="550.59" y="1903.5" ></text>
</g>
<g >
<title>inet_accept (130 samples, 2.19%)</title><rect x="366.7" y="1957" width="25.8" height="15.0" fill="rgb(239,130,30)" rx="2" ry="2" />
<text  x="369.74" y="1967.5" >i..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="887.9" y="1989" width="0.2" height="15.0" fill="rgb(252,83,36)" rx="2" ry="2" />
<text  x="890.85" y="1999.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="903.5" y="1829" width="0.2" height="15.0" fill="rgb(229,121,21)" rx="2" ry="2" />
<text  x="906.54" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="61.2" y="1957" width="1.2" height="15.0" fill="rgb(228,223,47)" rx="2" ry="2" />
<text  x="64.22" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1019.9" y="1861" width="0.2" height="15.0" fill="rgb(240,106,35)" rx="2" ry="2" />
<text  x="1022.87" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="61.0" y="1557" width="0.2" height="15.0" fill="rgb(212,52,6)" rx="2" ry="2" />
<text  x="64.02" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="700.6" y="1797" width="0.2" height="15.0" fill="rgb(220,117,11)" rx="2" ry="2" />
<text  x="703.65" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="818.6" y="1669" width="0.2" height="15.0" fill="rgb(215,211,11)" rx="2" ry="2" />
<text  x="821.57" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="853.1" y="1893" width="1.0" height="15.0" fill="rgb(222,200,9)" rx="2" ry="2" />
<text  x="856.11" y="1903.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.02%)</title><rect x="830.7" y="1813" width="0.2" height="15.0" fill="rgb(207,178,31)" rx="2" ry="2" />
<text  x="833.68" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="61.6" y="1829" width="0.2" height="15.0" fill="rgb(254,107,43)" rx="2" ry="2" />
<text  x="64.62" y="1839.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="392.2" y="1813" width="0.1" height="15.0" fill="rgb(223,29,54)" rx="2" ry="2" />
<text  x="395.15" y="1823.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="820.0" y="1493" width="0.2" height="15.0" fill="rgb(236,60,16)" rx="2" ry="2" />
<text  x="822.96" y="1503.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="85.0" y="1941" width="0.2" height="15.0" fill="rgb(218,127,35)" rx="2" ry="2" />
<text  x="88.04" y="1951.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="196.4" y="1509" width="0.2" height="15.0" fill="rgb(205,8,32)" rx="2" ry="2" />
<text  x="199.41" y="1519.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="618.3" y="2005" width="0.2" height="15.0" fill="rgb(239,97,48)" rx="2" ry="2" />
<text  x="621.26" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="762.8" y="1445" width="0.2" height="15.0" fill="rgb(252,214,7)" rx="2" ry="2" />
<text  x="765.79" y="1455.5" ></text>
</g>
<g >
<title>netdev_pick_tx (5 samples, 0.08%)</title><rect x="305.4" y="1701" width="1.0" height="15.0" fill="rgb(221,107,6)" rx="2" ry="2" />
<text  x="308.40" y="1711.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (5 samples, 0.08%)</title><rect x="734.2" y="1653" width="1.0" height="15.0" fill="rgb(236,109,26)" rx="2" ry="2" />
<text  x="737.20" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="825.1" y="1637" width="0.2" height="15.0" fill="rgb(214,154,49)" rx="2" ry="2" />
<text  x="828.12" y="1647.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@plt (1 samples, 0.02%)</title><rect x="12.2" y="2053" width="0.2" height="15.0" fill="rgb(226,205,5)" rx="2" ry="2" />
<text  x="15.18" y="2063.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="700.8" y="1973" width="0.2" height="15.0" fill="rgb(246,102,36)" rx="2" ry="2" />
<text  x="703.85" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="134.9" y="117" width="0.2" height="15.0" fill="rgb(240,101,42)" rx="2" ry="2" />
<text  x="137.87" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="982.0" y="1813" width="0.2" height="15.0" fill="rgb(211,107,49)" rx="2" ry="2" />
<text  x="984.95" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="694.1" y="1637" width="0.2" height="15.0" fill="rgb(221,127,13)" rx="2" ry="2" />
<text  x="697.10" y="1647.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="932.7" y="1781" width="0.8" height="15.0" fill="rgb(238,91,41)" rx="2" ry="2" />
<text  x="935.72" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="1150.1" y="1941" width="0.2" height="15.0" fill="rgb(234,84,18)" rx="2" ry="2" />
<text  x="1153.10" y="1951.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="577.6" y="1957" width="0.2" height="15.0" fill="rgb(206,55,44)" rx="2" ry="2" />
<text  x="580.57" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="164.8" y="1909" width="0.2" height="15.0" fill="rgb(239,96,0)" rx="2" ry="2" />
<text  x="167.85" y="1919.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="907.9" y="2005" width="0.2" height="15.0" fill="rgb(228,9,32)" rx="2" ry="2" />
<text  x="910.90" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="317.5" y="1765" width="0.2" height="15.0" fill="rgb(253,225,37)" rx="2" ry="2" />
<text  x="320.51" y="1775.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="1050.8" y="1973" width="0.4" height="15.0" fill="rgb(252,93,32)" rx="2" ry="2" />
<text  x="1053.84" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="762.6" y="1477" width="0.4" height="15.0" fill="rgb(250,129,52)" rx="2" ry="2" />
<text  x="765.59" y="1487.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="112.4" y="2005" width="0.2" height="15.0" fill="rgb(248,17,8)" rx="2" ry="2" />
<text  x="115.44" y="2015.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="569.4" y="1973" width="0.2" height="15.0" fill="rgb(215,25,35)" rx="2" ry="2" />
<text  x="572.43" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="703.6" y="2021" width="0.2" height="15.0" fill="rgb(248,93,41)" rx="2" ry="2" />
<text  x="706.63" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::size (1 samples, 0.02%)</title><rect x="29.5" y="1957" width="0.2" height="15.0" fill="rgb(250,144,14)" rx="2" ry="2" />
<text  x="32.45" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="377.1" y="1925" width="1.2" height="15.0" fill="rgb(233,6,10)" rx="2" ry="2" />
<text  x="380.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="800.7" y="1429" width="0.2" height="15.0" fill="rgb(253,183,14)" rx="2" ry="2" />
<text  x="803.70" y="1439.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="772.7" y="1541" width="0.2" height="15.0" fill="rgb(228,174,16)" rx="2" ry="2" />
<text  x="775.71" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="329.4" y="1653" width="0.2" height="15.0" fill="rgb(241,31,34)" rx="2" ry="2" />
<text  x="332.42" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="250.2" y="1893" width="0.2" height="15.0" fill="rgb(244,172,39)" rx="2" ry="2" />
<text  x="253.21" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="12.4" y="2037" width="1.2" height="15.0" fill="rgb(206,199,39)" rx="2" ry="2" />
<text  x="15.38" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="70.0" y="1845" width="0.2" height="15.0" fill="rgb(214,202,24)" rx="2" ry="2" />
<text  x="72.95" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="660.0" y="2005" width="0.3" height="15.0" fill="rgb(241,25,51)" rx="2" ry="2" />
<text  x="662.95" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (23 samples, 0.39%)</title><rect x="1121.7" y="1973" width="4.6" height="15.0" fill="rgb(254,207,32)" rx="2" ry="2" />
<text  x="1124.71" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="131.7" y="37" width="0.2" height="15.0" fill="rgb(242,74,15)" rx="2" ry="2" />
<text  x="134.69" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="849.7" y="1941" width="0.2" height="15.0" fill="rgb(248,7,7)" rx="2" ry="2" />
<text  x="852.74" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="279.0" y="1813" width="0.2" height="15.0" fill="rgb(226,121,36)" rx="2" ry="2" />
<text  x="281.99" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="856.7" y="1525" width="0.2" height="15.0" fill="rgb(213,140,11)" rx="2" ry="2" />
<text  x="859.69" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="207.3" y="1941" width="0.2" height="15.0" fill="rgb(215,151,37)" rx="2" ry="2" />
<text  x="210.33" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="166.4" y="1877" width="0.2" height="15.0" fill="rgb(225,0,10)" rx="2" ry="2" />
<text  x="169.43" y="1887.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="77.9" y="1845" width="0.4" height="15.0" fill="rgb(231,27,50)" rx="2" ry="2" />
<text  x="80.89" y="1855.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="823.3" y="1813" width="0.2" height="15.0" fill="rgb(249,23,21)" rx="2" ry="2" />
<text  x="826.33" y="1823.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="689.1" y="1909" width="0.2" height="15.0" fill="rgb(233,205,37)" rx="2" ry="2" />
<text  x="692.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="136.9" y="245" width="0.2" height="15.0" fill="rgb(227,193,49)" rx="2" ry="2" />
<text  x="139.85" y="255.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="139.0" y="1477" width="0.2" height="15.0" fill="rgb(240,11,52)" rx="2" ry="2" />
<text  x="142.04" y="1487.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="594.8" y="1813" width="0.2" height="15.0" fill="rgb(254,125,12)" rx="2" ry="2" />
<text  x="597.84" y="1823.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="114.8" y="1717" width="0.2" height="15.0" fill="rgb(211,211,26)" rx="2" ry="2" />
<text  x="117.82" y="1727.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="247.4" y="1653" width="0.2" height="15.0" fill="rgb(233,203,32)" rx="2" ry="2" />
<text  x="250.43" y="1663.5" ></text>
</g>
<g >
<title>__fdget (10 samples, 0.17%)</title><rect x="340.9" y="1941" width="2.0" height="15.0" fill="rgb(216,211,8)" rx="2" ry="2" />
<text  x="343.93" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="60.2" y="1877" width="0.2" height="15.0" fill="rgb(215,223,44)" rx="2" ry="2" />
<text  x="63.23" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1172.7" y="1941" width="0.2" height="15.0" fill="rgb(245,184,13)" rx="2" ry="2" />
<text  x="1175.73" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5 samples, 0.08%)</title><rect x="158.7" y="1989" width="1.0" height="15.0" fill="rgb(216,204,35)" rx="2" ry="2" />
<text  x="161.69" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="973.8" y="1941" width="0.2" height="15.0" fill="rgb(231,121,36)" rx="2" ry="2" />
<text  x="976.81" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="947.4" y="1813" width="0.2" height="15.0" fill="rgb(240,71,10)" rx="2" ry="2" />
<text  x="950.41" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="911.9" y="2037" width="0.2" height="15.0" fill="rgb(253,6,48)" rx="2" ry="2" />
<text  x="914.87" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1145.5" y="1989" width="0.4" height="15.0" fill="rgb(238,74,42)" rx="2" ry="2" />
<text  x="1148.53" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.6" y="1909" width="0.2" height="15.0" fill="rgb(219,227,47)" rx="2" ry="2" />
<text  x="98.56" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="630.4" y="1973" width="0.2" height="15.0" fill="rgb(233,176,31)" rx="2" ry="2" />
<text  x="633.37" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="510.3" y="1877" width="0.2" height="15.0" fill="rgb(205,31,21)" rx="2" ry="2" />
<text  x="513.27" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (1 samples, 0.02%)</title><rect x="624.6" y="2005" width="0.2" height="15.0" fill="rgb(210,78,27)" rx="2" ry="2" />
<text  x="627.62" y="2015.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="61.0" y="1621" width="0.2" height="15.0" fill="rgb(211,173,47)" rx="2" ry="2" />
<text  x="64.02" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1183.1" y="1909" width="0.3" height="15.0" fill="rgb(210,183,15)" rx="2" ry="2" />
<text  x="1186.05" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="574.8" y="1973" width="0.4" height="15.0" fill="rgb(205,135,7)" rx="2" ry="2" />
<text  x="577.79" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="951.2" y="1989" width="1.2" height="15.0" fill="rgb(225,189,49)" rx="2" ry="2" />
<text  x="954.18" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="505.1" y="1621" width="0.4" height="15.0" fill="rgb(209,2,35)" rx="2" ry="2" />
<text  x="508.11" y="1631.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="926.8" y="1973" width="0.4" height="15.0" fill="rgb(210,58,46)" rx="2" ry="2" />
<text  x="929.76" y="1983.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="52.9" y="1765" width="0.2" height="15.0" fill="rgb(220,148,34)" rx="2" ry="2" />
<text  x="55.88" y="1775.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="882.9" y="1925" width="0.4" height="15.0" fill="rgb(221,222,22)" rx="2" ry="2" />
<text  x="885.89" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (13 samples, 0.22%)</title><rect x="571.8" y="1973" width="2.6" height="15.0" fill="rgb(214,104,36)" rx="2" ry="2" />
<text  x="574.81" y="1983.5" ></text>
</g>
<g >
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="314.9" y="1653" width="0.6" height="15.0" fill="rgb(232,199,11)" rx="2" ry="2" />
<text  x="317.93" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="156.3" y="1893" width="0.2" height="15.0" fill="rgb(219,7,40)" rx="2" ry="2" />
<text  x="159.31" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="241.7" y="1701" width="0.2" height="15.0" fill="rgb(237,217,19)" rx="2" ry="2" />
<text  x="244.67" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="240.5" y="1845" width="0.2" height="15.0" fill="rgb(233,220,51)" rx="2" ry="2" />
<text  x="243.48" y="1855.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="875.5" y="1941" width="0.2" height="15.0" fill="rgb(215,52,1)" rx="2" ry="2" />
<text  x="878.55" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="597.0" y="1861" width="0.2" height="15.0" fill="rgb(208,121,43)" rx="2" ry="2" />
<text  x="600.02" y="1871.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="675.6" y="1813" width="0.4" height="15.0" fill="rgb(216,63,25)" rx="2" ry="2" />
<text  x="678.64" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="138.8" y="1477" width="0.2" height="15.0" fill="rgb(243,97,35)" rx="2" ry="2" />
<text  x="141.84" y="1487.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1071.9" y="1797" width="0.4" height="15.0" fill="rgb(218,86,25)" rx="2" ry="2" />
<text  x="1074.88" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1156.5" y="1893" width="0.1" height="15.0" fill="rgb(231,21,19)" rx="2" ry="2" />
<text  x="1159.45" y="1903.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="762.8" y="1381" width="0.2" height="15.0" fill="rgb(248,43,26)" rx="2" ry="2" />
<text  x="765.79" y="1391.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="742.7" y="1749" width="0.2" height="15.0" fill="rgb(211,204,52)" rx="2" ry="2" />
<text  x="745.74" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (45 samples, 0.76%)</title><rect x="553.3" y="1957" width="9.0" height="15.0" fill="rgb(232,202,54)" rx="2" ry="2" />
<text  x="556.35" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.51%)</title><rect x="117.6" y="2005" width="29.6" height="15.0" fill="rgb(228,229,46)" rx="2" ry="2" />
<text  x="120.60" y="2015.5" >[u..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (1 samples, 0.02%)</title><rect x="899.0" y="1973" width="0.2" height="15.0" fill="rgb(215,152,11)" rx="2" ry="2" />
<text  x="901.97" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="408.2" y="1781" width="0.2" height="15.0" fill="rgb(207,209,8)" rx="2" ry="2" />
<text  x="411.23" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="141.0" y="1733" width="0.2" height="15.0" fill="rgb(216,89,36)" rx="2" ry="2" />
<text  x="144.02" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="93.8" y="1925" width="0.6" height="15.0" fill="rgb(232,167,23)" rx="2" ry="2" />
<text  x="96.78" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="626.0" y="2005" width="0.2" height="15.0" fill="rgb(216,110,17)" rx="2" ry="2" />
<text  x="629.01" y="2015.5" ></text>
</g>
<g >
<title>filp_close (18 samples, 0.30%)</title><rect x="827.3" y="1829" width="3.6" height="15.0" fill="rgb(218,226,53)" rx="2" ry="2" />
<text  x="830.30" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="609.5" y="1845" width="0.2" height="15.0" fill="rgb(252,73,30)" rx="2" ry="2" />
<text  x="612.53" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="745.9" y="1541" width="0.2" height="15.0" fill="rgb(240,58,48)" rx="2" ry="2" />
<text  x="748.91" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (187 samples, 3.15%)</title><rect x="918.2" y="2037" width="37.1" height="15.0" fill="rgb(246,92,39)" rx="2" ry="2" />
<text  x="921.23" y="2047.5" >fac..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="148.4" y="1941" width="1.0" height="15.0" fill="rgb(220,108,38)" rx="2" ry="2" />
<text  x="151.37" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="329.4" y="1525" width="0.2" height="15.0" fill="rgb(221,7,54)" rx="2" ry="2" />
<text  x="332.42" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="240.9" y="1813" width="1.0" height="15.0" fill="rgb(227,36,4)" rx="2" ry="2" />
<text  x="243.88" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="504.9" y="1829" width="0.8" height="15.0" fill="rgb(228,87,5)" rx="2" ry="2" />
<text  x="507.91" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="135.9" y="165" width="0.2" height="15.0" fill="rgb(239,114,51)" rx="2" ry="2" />
<text  x="138.86" y="175.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="155.9" y="1909" width="0.2" height="15.0" fill="rgb(237,118,52)" rx="2" ry="2" />
<text  x="158.91" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="191.6" y="1925" width="0.2" height="15.0" fill="rgb(206,176,23)" rx="2" ry="2" />
<text  x="194.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="338.7" y="1845" width="0.6" height="15.0" fill="rgb(252,11,3)" rx="2" ry="2" />
<text  x="341.75" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="172.6" y="1877" width="0.4" height="15.0" fill="rgb(222,86,18)" rx="2" ry="2" />
<text  x="175.59" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="155.3" y="1989" width="1.0" height="15.0" fill="rgb(227,68,29)" rx="2" ry="2" />
<text  x="158.32" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1019.9" y="1957" width="0.2" height="15.0" fill="rgb(225,204,53)" rx="2" ry="2" />
<text  x="1022.87" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="921.4" y="1941" width="0.2" height="15.0" fill="rgb(250,155,50)" rx="2" ry="2" />
<text  x="924.40" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="884.9" y="1669" width="0.2" height="15.0" fill="rgb(238,200,43)" rx="2" ry="2" />
<text  x="887.88" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1177.5" y="2021" width="0.2" height="15.0" fill="rgb(210,174,40)" rx="2" ry="2" />
<text  x="1180.49" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="520.0" y="1781" width="0.2" height="15.0" fill="rgb(223,138,30)" rx="2" ry="2" />
<text  x="523.00" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.34%)</title><rect x="117.6" y="1989" width="27.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="120.60" y="1999.5" >[..</text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="850.5" y="1925" width="0.2" height="15.0" fill="rgb(241,136,36)" rx="2" ry="2" />
<text  x="853.53" y="1935.5" ></text>
</g>
<g >
<title>sock_close (380 samples, 6.39%)</title><rect x="747.3" y="1797" width="75.4" height="15.0" fill="rgb(229,20,24)" rx="2" ry="2" />
<text  x="750.30" y="1807.5" >sock_close</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="250.2" y="1765" width="0.2" height="15.0" fill="rgb(234,220,3)" rx="2" ry="2" />
<text  x="253.21" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="44.5" y="1989" width="0.2" height="15.0" fill="rgb(245,62,43)" rx="2" ry="2" />
<text  x="47.54" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="71.7" y="1877" width="0.2" height="15.0" fill="rgb(232,227,32)" rx="2" ry="2" />
<text  x="74.74" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="206.9" y="1813" width="0.2" height="15.0" fill="rgb(214,30,27)" rx="2" ry="2" />
<text  x="209.93" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;folly::SocketAddress&amp;&gt; (1 samples, 0.02%)</title><rect x="36.6" y="1989" width="0.2" height="15.0" fill="rgb(214,39,22)" rx="2" ry="2" />
<text  x="39.60" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="342.7" y="1813" width="0.2" height="15.0" fill="rgb(244,126,24)" rx="2" ry="2" />
<text  x="345.72" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="569.6" y="1941" width="0.2" height="15.0" fill="rgb(248,216,35)" rx="2" ry="2" />
<text  x="572.63" y="1951.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="579.9" y="2005" width="0.2" height="15.0" fill="rgb(243,210,52)" rx="2" ry="2" />
<text  x="582.95" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1144.1" y="1909" width="0.2" height="15.0" fill="rgb(212,227,29)" rx="2" ry="2" />
<text  x="1147.14" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1019.9" y="1893" width="0.2" height="15.0" fill="rgb(216,147,50)" rx="2" ry="2" />
<text  x="1022.87" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="138.0" y="1285" width="0.2" height="15.0" fill="rgb(221,208,26)" rx="2" ry="2" />
<text  x="141.05" y="1295.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1172.7" y="1973" width="0.2" height="15.0" fill="rgb(211,175,28)" rx="2" ry="2" />
<text  x="1175.73" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="543.8" y="1605" width="0.2" height="15.0" fill="rgb(226,127,26)" rx="2" ry="2" />
<text  x="546.82" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="41.6" y="2005" width="0.2" height="15.0" fill="rgb(244,17,42)" rx="2" ry="2" />
<text  x="44.56" y="2015.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="699.1" y="1973" width="0.8" height="15.0" fill="rgb(242,114,13)" rx="2" ry="2" />
<text  x="702.06" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="156.1" y="1973" width="0.2" height="15.0" fill="rgb(254,50,32)" rx="2" ry="2" />
<text  x="159.11" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="753.9" y="1557" width="0.2" height="15.0" fill="rgb(230,19,34)" rx="2" ry="2" />
<text  x="756.85" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (20 samples, 0.34%)</title><rect x="150.4" y="1973" width="3.9" height="15.0" fill="rgb(245,54,7)" rx="2" ry="2" />
<text  x="153.35" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="156.3" y="1925" width="0.2" height="15.0" fill="rgb(217,195,42)" rx="2" ry="2" />
<text  x="159.31" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="844.4" y="1637" width="0.2" height="15.0" fill="rgb(219,102,3)" rx="2" ry="2" />
<text  x="847.38" y="1647.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="567.2" y="1845" width="0.2" height="15.0" fill="rgb(241,134,20)" rx="2" ry="2" />
<text  x="570.24" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="982.2" y="1813" width="0.1" height="15.0" fill="rgb(226,39,9)" rx="2" ry="2" />
<text  x="985.15" y="1823.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="237.1" y="1893" width="0.2" height="15.0" fill="rgb(250,192,0)" rx="2" ry="2" />
<text  x="240.11" y="1903.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="338.4" y="1845" width="0.3" height="15.0" fill="rgb(253,191,29)" rx="2" ry="2" />
<text  x="341.35" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (6 samples, 0.10%)</title><rect x="90.4" y="1925" width="1.2" height="15.0" fill="rgb(220,80,49)" rx="2" ry="2" />
<text  x="93.40" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (3 samples, 0.05%)</title><rect x="639.9" y="1941" width="0.6" height="15.0" fill="rgb(251,170,0)" rx="2" ry="2" />
<text  x="642.90" y="1951.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="561.1" y="1893" width="0.4" height="15.0" fill="rgb(211,41,18)" rx="2" ry="2" />
<text  x="564.09" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="562.3" y="1877" width="0.2" height="15.0" fill="rgb(222,212,16)" rx="2" ry="2" />
<text  x="565.28" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="800.7" y="1669" width="0.2" height="15.0" fill="rgb(253,181,11)" rx="2" ry="2" />
<text  x="803.70" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="80.1" y="1685" width="0.2" height="15.0" fill="rgb(217,219,8)" rx="2" ry="2" />
<text  x="83.08" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="329.8" y="1717" width="0.2" height="15.0" fill="rgb(243,137,2)" rx="2" ry="2" />
<text  x="332.81" y="1727.5" ></text>
</g>
<g >
<title>validate_xmit_skb (6 samples, 0.10%)</title><rect x="794.0" y="1525" width="1.1" height="15.0" fill="rgb(230,228,38)" rx="2" ry="2" />
<text  x="796.95" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="956.1" y="2005" width="0.2" height="15.0" fill="rgb(221,63,3)" rx="2" ry="2" />
<text  x="959.14" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.7" y="1925" width="0.2" height="15.0" fill="rgb(246,203,45)" rx="2" ry="2" />
<text  x="890.65" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="630.2" y="2005" width="0.2" height="15.0" fill="rgb(248,56,49)" rx="2" ry="2" />
<text  x="633.17" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="157.5" y="1797" width="0.2" height="15.0" fill="rgb(248,108,15)" rx="2" ry="2" />
<text  x="160.50" y="1807.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="957.5" y="1957" width="3.2" height="15.0" fill="rgb(232,94,34)" rx="2" ry="2" />
<text  x="960.53" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="162.7" y="1893" width="0.2" height="15.0" fill="rgb(232,213,31)" rx="2" ry="2" />
<text  x="165.66" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="196.4" y="1605" width="0.2" height="15.0" fill="rgb(209,49,12)" rx="2" ry="2" />
<text  x="199.41" y="1615.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="282.0" y="1813" width="0.2" height="15.0" fill="rgb(248,92,5)" rx="2" ry="2" />
<text  x="284.97" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1176.1" y="1989" width="0.4" height="15.0" fill="rgb(228,51,27)" rx="2" ry="2" />
<text  x="1179.10" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="95.6" y="1781" width="0.2" height="15.0" fill="rgb(242,17,10)" rx="2" ry="2" />
<text  x="98.56" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="491.0" y="1893" width="0.2" height="15.0" fill="rgb(229,165,34)" rx="2" ry="2" />
<text  x="494.01" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="676.2" y="1653" width="0.2" height="15.0" fill="rgb(205,91,21)" rx="2" ry="2" />
<text  x="679.23" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="156.5" y="2005" width="0.6" height="15.0" fill="rgb(222,222,40)" rx="2" ry="2" />
<text  x="159.51" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1021.5" y="2021" width="0.4" height="15.0" fill="rgb(243,216,5)" rx="2" ry="2" />
<text  x="1024.46" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="486.8" y="1797" width="0.2" height="15.0" fill="rgb(248,61,12)" rx="2" ry="2" />
<text  x="489.84" y="1807.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="95.6" y="1621" width="0.2" height="15.0" fill="rgb(221,33,52)" rx="2" ry="2" />
<text  x="98.56" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="947.4" y="1765" width="0.2" height="15.0" fill="rgb(239,210,31)" rx="2" ry="2" />
<text  x="950.41" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="636.5" y="1925" width="0.8" height="15.0" fill="rgb(252,229,38)" rx="2" ry="2" />
<text  x="639.53" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="136.7" y="37" width="0.2" height="15.0" fill="rgb(235,167,4)" rx="2" ry="2" />
<text  x="139.66" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="136.3" y="53" width="0.2" height="15.0" fill="rgb(220,227,34)" rx="2" ry="2" />
<text  x="139.26" y="63.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="179.3" y="2005" width="0.2" height="15.0" fill="rgb(224,12,23)" rx="2" ry="2" />
<text  x="182.34" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="838.4" y="1781" width="0.2" height="15.0" fill="rgb(229,39,26)" rx="2" ry="2" />
<text  x="841.42" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="838.6" y="1909" width="0.2" height="15.0" fill="rgb(250,188,20)" rx="2" ry="2" />
<text  x="841.62" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1127.1" y="2037" width="0.8" height="15.0" fill="rgb(212,182,26)" rx="2" ry="2" />
<text  x="1130.07" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="168.0" y="1845" width="0.2" height="15.0" fill="rgb(212,227,22)" rx="2" ry="2" />
<text  x="171.02" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="567.2" y="1893" width="0.2" height="15.0" fill="rgb(235,121,11)" rx="2" ry="2" />
<text  x="570.24" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="983.7" y="1925" width="0.2" height="15.0" fill="rgb(245,147,37)" rx="2" ry="2" />
<text  x="986.74" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1048.9" y="1845" width="0.2" height="15.0" fill="rgb(248,198,37)" rx="2" ry="2" />
<text  x="1051.85" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="945.4" y="1909" width="0.2" height="15.0" fill="rgb(214,110,34)" rx="2" ry="2" />
<text  x="948.42" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (47 samples, 0.79%)</title><rect x="63.2" y="1973" width="9.3" height="15.0" fill="rgb(244,223,8)" rx="2" ry="2" />
<text  x="66.20" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (76 samples, 1.28%)</title><rect x="664.7" y="2005" width="15.1" height="15.0" fill="rgb(221,110,21)" rx="2" ry="2" />
<text  x="667.72" y="2015.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="733.8" y="1365" width="0.2" height="15.0" fill="rgb(225,162,21)" rx="2" ry="2" />
<text  x="736.80" y="1375.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1019.9" y="1829" width="0.2" height="15.0" fill="rgb(206,119,54)" rx="2" ry="2" />
<text  x="1022.87" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="491.0" y="1861" width="0.2" height="15.0" fill="rgb(253,81,42)" rx="2" ry="2" />
<text  x="494.01" y="1871.5" ></text>
</g>
<g >
<title>[mcrouter] (127 samples, 2.14%)</title><rect x="224.4" y="2021" width="25.2" height="15.0" fill="rgb(242,157,22)" rx="2" ry="2" />
<text  x="227.40" y="2031.5" >[..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="743.1" y="1685" width="0.2" height="15.0" fill="rgb(222,200,2)" rx="2" ry="2" />
<text  x="746.13" y="1695.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (10 samples, 0.17%)</title><rect x="750.5" y="1717" width="2.0" height="15.0" fill="rgb(214,72,40)" rx="2" ry="2" />
<text  x="753.48" y="1727.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="486.8" y="1605" width="0.2" height="15.0" fill="rgb(243,207,5)" rx="2" ry="2" />
<text  x="489.84" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="191.8" y="1973" width="1.2" height="15.0" fill="rgb(217,136,54)" rx="2" ry="2" />
<text  x="194.84" y="1983.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="470.2" y="1877" width="0.2" height="15.0" fill="rgb(206,134,50)" rx="2" ry="2" />
<text  x="473.17" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (39 samples, 0.66%)</title><rect x="786.0" y="1525" width="7.8" height="15.0" fill="rgb(219,182,53)" rx="2" ry="2" />
<text  x="789.01" y="1535.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="963.9" y="2005" width="0.4" height="15.0" fill="rgb(239,189,53)" rx="2" ry="2" />
<text  x="966.89" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="739.8" y="1429" width="0.2" height="15.0" fill="rgb(247,183,6)" rx="2" ry="2" />
<text  x="742.76" y="1439.5" ></text>
</g>
<g >
<title>d_instantiate (9 samples, 0.15%)</title><rect x="414.6" y="1941" width="1.8" height="15.0" fill="rgb(219,185,42)" rx="2" ry="2" />
<text  x="417.58" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::FunctionScheduler::RepeatFunc*, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1845" width="0.2" height="15.0" fill="rgb(223,14,20)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="761.0" y="1653" width="0.2" height="15.0" fill="rgb(208,163,37)" rx="2" ry="2" />
<text  x="764.00" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (69 samples, 1.16%)</title><rect x="682.4" y="1973" width="13.7" height="15.0" fill="rgb(236,201,16)" rx="2" ry="2" />
<text  x="685.39" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="486.6" y="1925" width="0.4" height="15.0" fill="rgb(213,110,10)" rx="2" ry="2" />
<text  x="489.65" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="213.1" y="1957" width="0.2" height="15.0" fill="rgb(234,149,23)" rx="2" ry="2" />
<text  x="216.09" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="654.4" y="1701" width="0.2" height="15.0" fill="rgb(238,87,47)" rx="2" ry="2" />
<text  x="657.39" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="172.4" y="1877" width="0.2" height="15.0" fill="rgb(246,39,4)" rx="2" ry="2" />
<text  x="175.39" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="398.5" y="1829" width="0.2" height="15.0" fill="rgb(245,126,5)" rx="2" ry="2" />
<text  x="401.50" y="1839.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="492.2" y="2005" width="0.4" height="15.0" fill="rgb(218,153,6)" rx="2" ry="2" />
<text  x="495.20" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="294.3" y="1621" width="0.2" height="15.0" fill="rgb(235,58,5)" rx="2" ry="2" />
<text  x="297.28" y="1631.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="157.5" y="1701" width="0.2" height="15.0" fill="rgb(212,73,26)" rx="2" ry="2" />
<text  x="160.50" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="567.4" y="1989" width="0.2" height="15.0" fill="rgb(250,183,1)" rx="2" ry="2" />
<text  x="570.44" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="917.6" y="1909" width="0.2" height="15.0" fill="rgb(245,47,15)" rx="2" ry="2" />
<text  x="920.63" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="842.6" y="1877" width="0.2" height="15.0" fill="rgb(221,31,14)" rx="2" ry="2" />
<text  x="845.59" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="698.5" y="1877" width="0.2" height="15.0" fill="rgb(224,180,9)" rx="2" ry="2" />
<text  x="701.47" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="250.2" y="1877" width="0.2" height="15.0" fill="rgb(228,5,53)" rx="2" ry="2" />
<text  x="253.21" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="831.7" y="1717" width="0.2" height="15.0" fill="rgb(243,1,46)" rx="2" ry="2" />
<text  x="834.67" y="1727.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="509.1" y="1877" width="0.2" height="15.0" fill="rgb(207,195,42)" rx="2" ry="2" />
<text  x="512.08" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="825.1" y="1653" width="0.2" height="15.0" fill="rgb(229,145,18)" rx="2" ry="2" />
<text  x="828.12" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (3 samples, 0.05%)</title><rect x="1152.3" y="2053" width="0.6" height="15.0" fill="rgb(232,123,5)" rx="2" ry="2" />
<text  x="1155.28" y="2063.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="825.5" y="1589" width="0.2" height="15.0" fill="rgb(251,15,36)" rx="2" ry="2" />
<text  x="828.52" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (87 samples, 1.46%)</title><rect x="871.0" y="2005" width="17.3" height="15.0" fill="rgb(253,210,37)" rx="2" ry="2" />
<text  x="873.98" y="2015.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="752.9" y="1733" width="0.4" height="15.0" fill="rgb(224,10,48)" rx="2" ry="2" />
<text  x="755.86" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1078.6" y="1637" width="0.2" height="15.0" fill="rgb(231,18,49)" rx="2" ry="2" />
<text  x="1081.63" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (41 samples, 0.69%)</title><rect x="634.1" y="1973" width="8.2" height="15.0" fill="rgb(236,71,52)" rx="2" ry="2" />
<text  x="637.15" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1078.2" y="1813" width="0.2" height="15.0" fill="rgb(246,184,10)" rx="2" ry="2" />
<text  x="1081.23" y="1823.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="142.8" y="1845" width="0.2" height="15.0" fill="rgb(234,192,47)" rx="2" ry="2" />
<text  x="145.81" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="392.2" y="1909" width="0.1" height="15.0" fill="rgb(234,183,17)" rx="2" ry="2" />
<text  x="395.15" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="69.8" y="1861" width="0.4" height="15.0" fill="rgb(253,189,24)" rx="2" ry="2" />
<text  x="72.75" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="247.4" y="1909" width="0.2" height="15.0" fill="rgb(205,22,6)" rx="2" ry="2" />
<text  x="250.43" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="706.0" y="1765" width="0.2" height="15.0" fill="rgb(247,42,35)" rx="2" ry="2" />
<text  x="709.01" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (10 samples, 0.17%)</title><rect x="93.4" y="1957" width="2.0" height="15.0" fill="rgb(230,112,0)" rx="2" ry="2" />
<text  x="96.38" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (24 samples, 0.40%)</title><rect x="546.2" y="1989" width="4.8" height="15.0" fill="rgb(228,179,44)" rx="2" ry="2" />
<text  x="549.20" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="875.9" y="1957" width="0.4" height="15.0" fill="rgb(240,15,42)" rx="2" ry="2" />
<text  x="878.94" y="1967.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="844.2" y="1605" width="0.2" height="15.0" fill="rgb(207,153,35)" rx="2" ry="2" />
<text  x="847.18" y="1615.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="366.5" y="1941" width="0.2" height="15.0" fill="rgb(224,141,37)" rx="2" ry="2" />
<text  x="369.54" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (34 samples, 0.57%)</title><rect x="1108.2" y="1573" width="6.8" height="15.0" fill="rgb(243,7,7)" rx="2" ry="2" />
<text  x="1111.21" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="899.8" y="2005" width="0.4" height="15.0" fill="rgb(236,111,41)" rx="2" ry="2" />
<text  x="902.76" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (25 samples, 0.42%)</title><rect x="150.4" y="1989" width="4.9" height="15.0" fill="rgb(210,101,0)" rx="2" ry="2" />
<text  x="153.35" y="1999.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.02%)</title><rect x="820.2" y="1765" width="0.2" height="15.0" fill="rgb(228,147,4)" rx="2" ry="2" />
<text  x="823.16" y="1775.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.03%)</title><rect x="204.2" y="2021" width="0.3" height="15.0" fill="rgb(245,223,44)" rx="2" ry="2" />
<text  x="207.15" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="562.1" y="1669" width="0.2" height="15.0" fill="rgb(246,84,9)" rx="2" ry="2" />
<text  x="565.08" y="1679.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="443.0" y="1957" width="0.2" height="15.0" fill="rgb(216,104,5)" rx="2" ry="2" />
<text  x="445.97" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="600.6" y="1989" width="0.2" height="15.0" fill="rgb(230,121,48)" rx="2" ry="2" />
<text  x="603.60" y="1999.5" ></text>
</g>
<g >
<title>sock_alloc_file (61 samples, 1.03%)</title><rect x="404.7" y="1957" width="12.1" height="15.0" fill="rgb(249,194,22)" rx="2" ry="2" />
<text  x="407.66" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="61.2" y="1893" width="0.2" height="15.0" fill="rgb(245,59,8)" rx="2" ry="2" />
<text  x="64.22" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="207.3" y="1957" width="0.2" height="15.0" fill="rgb(251,101,27)" rx="2" ry="2" />
<text  x="210.33" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (44 samples, 0.74%)</title><rect x="1106.8" y="1909" width="8.8" height="15.0" fill="rgb(211,203,2)" rx="2" ry="2" />
<text  x="1109.82" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="706.0" y="1717" width="0.2" height="15.0" fill="rgb(232,75,42)" rx="2" ry="2" />
<text  x="709.01" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="443.8" y="1829" width="0.2" height="15.0" fill="rgb(216,45,26)" rx="2" ry="2" />
<text  x="446.77" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1086.8" y="1765" width="0.2" height="15.0" fill="rgb(242,3,21)" rx="2" ry="2" />
<text  x="1089.77" y="1775.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="169.6" y="1893" width="0.8" height="15.0" fill="rgb(229,153,17)" rx="2" ry="2" />
<text  x="172.61" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.99%)</title><rect x="118.0" y="1765" width="23.4" height="15.0" fill="rgb(239,0,27)" rx="2" ry="2" />
<text  x="120.99" y="1775.5" >[..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="136.3" y="133" width="0.2" height="15.0" fill="rgb(236,192,12)" rx="2" ry="2" />
<text  x="139.26" y="143.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1016.5" y="2021" width="0.4" height="15.0" fill="rgb(235,29,11)" rx="2" ry="2" />
<text  x="1019.49" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="483.1" y="1669" width="0.4" height="15.0" fill="rgb(253,70,15)" rx="2" ry="2" />
<text  x="486.07" y="1679.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="10.2" y="1941" width="0.2" height="15.0" fill="rgb(252,179,41)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="969.8" y="1973" width="0.2" height="15.0" fill="rgb(220,92,8)" rx="2" ry="2" />
<text  x="972.84" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1018.3" y="1973" width="0.2" height="15.0" fill="rgb(213,131,19)" rx="2" ry="2" />
<text  x="1021.28" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="175.0" y="1941" width="0.2" height="15.0" fill="rgb(250,223,31)" rx="2" ry="2" />
<text  x="177.97" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="825.7" y="1605" width="0.4" height="15.0" fill="rgb(216,5,54)" rx="2" ry="2" />
<text  x="828.72" y="1615.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="925.4" y="1909" width="0.8" height="15.0" fill="rgb(207,102,7)" rx="2" ry="2" />
<text  x="928.37" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="820.0" y="1653" width="0.2" height="15.0" fill="rgb(232,180,29)" rx="2" ry="2" />
<text  x="822.96" y="1663.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="562.1" y="1445" width="0.2" height="15.0" fill="rgb(228,122,44)" rx="2" ry="2" />
<text  x="565.08" y="1455.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="479.5" y="1925" width="0.2" height="15.0" fill="rgb(215,92,45)" rx="2" ry="2" />
<text  x="482.50" y="1935.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (38 samples, 0.64%)</title><rect x="279.2" y="1877" width="7.5" height="15.0" fill="rgb(206,32,46)" rx="2" ry="2" />
<text  x="282.19" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="753.9" y="1509" width="0.2" height="15.0" fill="rgb(246,110,39)" rx="2" ry="2" />
<text  x="756.85" y="1519.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="763.4" y="1701" width="0.2" height="15.0" fill="rgb(246,225,17)" rx="2" ry="2" />
<text  x="766.38" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="10.0" y="1861" width="0.2" height="15.0" fill="rgb(228,56,14)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="119.2" y="213" width="15.9" height="15.0" fill="rgb(228,159,39)" rx="2" ry="2" />
<text  x="122.19" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (7 samples, 0.12%)</title><rect x="194.8" y="1989" width="1.4" height="15.0" fill="rgb(216,48,49)" rx="2" ry="2" />
<text  x="197.82" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="170.8" y="1909" width="0.2" height="15.0" fill="rgb(235,119,15)" rx="2" ry="2" />
<text  x="173.80" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="762.6" y="1685" width="0.4" height="15.0" fill="rgb(222,166,50)" rx="2" ry="2" />
<text  x="765.59" y="1695.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (243 samples, 4.09%)</title><rect x="444.0" y="1989" width="48.2" height="15.0" fill="rgb(212,42,20)" rx="2" ry="2" />
<text  x="446.96" y="1999.5" >sys_..</text>
</g>
<g >
<title>rb_erase_cached (15 samples, 0.25%)</title><rect x="483.7" y="1957" width="2.9" height="15.0" fill="rgb(215,147,52)" rx="2" ry="2" />
<text  x="486.67" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1005.6" y="1845" width="0.2" height="15.0" fill="rgb(220,192,0)" rx="2" ry="2" />
<text  x="1008.58" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="192.0" y="1941" width="0.6" height="15.0" fill="rgb(245,136,0)" rx="2" ry="2" />
<text  x="195.04" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (78 samples, 1.31%)</title><rect x="512.1" y="2005" width="15.4" height="15.0" fill="rgb(252,107,50)" rx="2" ry="2" />
<text  x="515.06" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="163.3" y="1701" width="0.2" height="15.0" fill="rgb(221,0,31)" rx="2" ry="2" />
<text  x="166.26" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="646.5" y="1861" width="0.2" height="15.0" fill="rgb(222,104,28)" rx="2" ry="2" />
<text  x="649.45" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1156.5" y="1781" width="0.1" height="15.0" fill="rgb(213,144,16)" rx="2" ry="2" />
<text  x="1159.45" y="1791.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="12.4" y="2053" width="1.2" height="15.0" fill="rgb(237,119,41)" rx="2" ry="2" />
<text  x="15.38" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="517" width="17.7" height="15.0" fill="rgb(212,187,15)" rx="2" ry="2" />
<text  x="122.19" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1002.8" y="1989" width="0.2" height="15.0" fill="rgb(239,117,38)" rx="2" ry="2" />
<text  x="1005.80" y="1999.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="649.4" y="1973" width="0.2" height="15.0" fill="rgb(239,7,5)" rx="2" ry="2" />
<text  x="652.43" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="931.9" y="1893" width="0.6" height="15.0" fill="rgb(208,209,33)" rx="2" ry="2" />
<text  x="934.92" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="581.1" y="1909" width="0.2" height="15.0" fill="rgb(212,48,38)" rx="2" ry="2" />
<text  x="584.14" y="1919.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="146.0" y="1989" width="1.0" height="15.0" fill="rgb(218,141,21)" rx="2" ry="2" />
<text  x="148.99" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="241.7" y="1557" width="0.2" height="15.0" fill="rgb(233,124,38)" rx="2" ry="2" />
<text  x="244.67" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="875.3" y="1941" width="0.2" height="15.0" fill="rgb(228,100,7)" rx="2" ry="2" />
<text  x="878.35" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="483.1" y="1797" width="0.4" height="15.0" fill="rgb(226,1,3)" rx="2" ry="2" />
<text  x="486.07" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="755.4" y="1669" width="0.2" height="15.0" fill="rgb(225,179,51)" rx="2" ry="2" />
<text  x="758.44" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="755.4" y="1733" width="0.2" height="15.0" fill="rgb(254,0,53)" rx="2" ry="2" />
<text  x="758.44" y="1743.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="1177.1" y="1749" width="0.2" height="15.0" fill="rgb(239,26,30)" rx="2" ry="2" />
<text  x="1180.10" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (114 samples, 1.92%)</title><rect x="681.2" y="2037" width="22.6" height="15.0" fill="rgb(239,16,46)" rx="2" ry="2" />
<text  x="684.19" y="2047.5" >f..</text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="226.4" y="1941" width="0.2" height="15.0" fill="rgb(231,190,0)" rx="2" ry="2" />
<text  x="229.39" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="458.7" y="1925" width="0.2" height="15.0" fill="rgb(254,44,12)" rx="2" ry="2" />
<text  x="461.65" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="706.0" y="2021" width="0.2" height="15.0" fill="rgb(245,32,20)" rx="2" ry="2" />
<text  x="709.01" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1144.3" y="1973" width="0.2" height="15.0" fill="rgb(208,18,16)" rx="2" ry="2" />
<text  x="1147.34" y="1983.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (127 samples, 2.14%)</title><rect x="224.4" y="2037" width="25.2" height="15.0" fill="rgb(246,91,14)" rx="2" ry="2" />
<text  x="227.40" y="2047.5" >_..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="241.3" y="1797" width="0.6" height="15.0" fill="rgb(234,103,40)" rx="2" ry="2" />
<text  x="244.28" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="45.7" y="1989" width="0.2" height="15.0" fill="rgb(207,136,21)" rx="2" ry="2" />
<text  x="48.73" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (4 samples, 0.07%)</title><rect x="877.3" y="1925" width="0.8" height="15.0" fill="rgb(212,135,23)" rx="2" ry="2" />
<text  x="880.33" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="838.4" y="1653" width="0.2" height="15.0" fill="rgb(253,48,52)" rx="2" ry="2" />
<text  x="841.42" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="458.7" y="1829" width="0.2" height="15.0" fill="rgb(234,8,15)" rx="2" ry="2" />
<text  x="461.65" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1048.7" y="1973" width="0.4" height="15.0" fill="rgb(249,7,18)" rx="2" ry="2" />
<text  x="1051.65" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (20 samples, 0.34%)</title><rect x="219.8" y="2021" width="4.0" height="15.0" fill="rgb(232,56,11)" rx="2" ry="2" />
<text  x="222.84" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19 samples, 0.32%)</title><rect x="306.8" y="1685" width="3.8" height="15.0" fill="rgb(212,176,0)" rx="2" ry="2" />
<text  x="309.79" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="128.1" y="53" width="0.4" height="15.0" fill="rgb(238,138,36)" rx="2" ry="2" />
<text  x="131.12" y="63.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="483.3" y="1621" width="0.2" height="15.0" fill="rgb(209,114,47)" rx="2" ry="2" />
<text  x="486.27" y="1631.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="582.3" y="1973" width="0.2" height="15.0" fill="rgb(214,208,44)" rx="2" ry="2" />
<text  x="585.33" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="937.9" y="1941" width="0.2" height="15.0" fill="rgb(217,18,29)" rx="2" ry="2" />
<text  x="940.88" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="607.1" y="1909" width="0.4" height="15.0" fill="rgb(253,85,45)" rx="2" ry="2" />
<text  x="610.15" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="760.0" y="1685" width="0.2" height="15.0" fill="rgb(236,169,2)" rx="2" ry="2" />
<text  x="763.01" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (4 samples, 0.07%)</title><rect x="877.3" y="1941" width="0.8" height="15.0" fill="rgb(237,224,37)" rx="2" ry="2" />
<text  x="880.33" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="118.2" y="1637" width="0.2" height="15.0" fill="rgb(244,196,54)" rx="2" ry="2" />
<text  x="121.19" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="637.1" y="1861" width="0.2" height="15.0" fill="rgb(213,10,18)" rx="2" ry="2" />
<text  x="640.12" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="408.4" y="1797" width="0.2" height="15.0" fill="rgb(219,169,7)" rx="2" ry="2" />
<text  x="411.43" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="983.7" y="1909" width="0.2" height="15.0" fill="rgb(238,17,35)" rx="2" ry="2" />
<text  x="986.74" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="979.6" y="1957" width="0.6" height="15.0" fill="rgb(209,110,53)" rx="2" ry="2" />
<text  x="982.57" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (6 samples, 0.10%)</title><rect x="234.1" y="1893" width="1.2" height="15.0" fill="rgb(248,26,17)" rx="2" ry="2" />
<text  x="237.13" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="800.7" y="1397" width="0.2" height="15.0" fill="rgb(227,206,46)" rx="2" ry="2" />
<text  x="803.70" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="176.2" y="1957" width="0.2" height="15.0" fill="rgb(248,221,9)" rx="2" ry="2" />
<text  x="179.16" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="136.5" y="37" width="0.2" height="15.0" fill="rgb(207,78,0)" rx="2" ry="2" />
<text  x="139.46" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="745.9" y="1653" width="0.2" height="15.0" fill="rgb(233,136,15)" rx="2" ry="2" />
<text  x="748.91" y="1663.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="792.8" y="1509" width="0.2" height="15.0" fill="rgb(241,18,17)" rx="2" ry="2" />
<text  x="795.76" y="1519.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (39 samples, 0.66%)</title><rect x="1107.2" y="1765" width="7.8" height="15.0" fill="rgb(240,167,26)" rx="2" ry="2" />
<text  x="1110.22" y="1775.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (13 samples, 0.22%)</title><rect x="300.4" y="1701" width="2.6" height="15.0" fill="rgb(209,80,38)" rx="2" ry="2" />
<text  x="303.43" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="856.7" y="1733" width="0.2" height="15.0" fill="rgb(211,55,43)" rx="2" ry="2" />
<text  x="859.69" y="1743.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="856.7" y="1653" width="0.2" height="15.0" fill="rgb(241,140,38)" rx="2" ry="2" />
<text  x="859.69" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1000.8" y="2005" width="0.2" height="15.0" fill="rgb(205,47,33)" rx="2" ry="2" />
<text  x="1003.81" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="857.3" y="1765" width="0.2" height="15.0" fill="rgb(211,195,12)" rx="2" ry="2" />
<text  x="860.28" y="1775.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="96.2" y="1893" width="0.2" height="15.0" fill="rgb(229,171,7)" rx="2" ry="2" />
<text  x="99.16" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17 samples, 0.29%)</title><rect x="468.8" y="1909" width="3.4" height="15.0" fill="rgb(219,121,7)" rx="2" ry="2" />
<text  x="471.78" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="820.0" y="1717" width="0.2" height="15.0" fill="rgb(250,121,3)" rx="2" ry="2" />
<text  x="822.96" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (68 samples, 1.14%)</title><rect x="601.4" y="2005" width="13.5" height="15.0" fill="rgb(237,106,13)" rx="2" ry="2" />
<text  x="604.39" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (10 samples, 0.17%)</title><rect x="847.8" y="1925" width="1.9" height="15.0" fill="rgb(227,31,13)" rx="2" ry="2" />
<text  x="850.75" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="600.8" y="1957" width="0.2" height="15.0" fill="rgb(238,85,44)" rx="2" ry="2" />
<text  x="603.79" y="1967.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (4 samples, 0.07%)</title><rect x="867.0" y="1989" width="0.8" height="15.0" fill="rgb(234,74,47)" rx="2" ry="2" />
<text  x="870.01" y="1999.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="527.5" y="2005" width="0.2" height="15.0" fill="rgb(239,200,52)" rx="2" ry="2" />
<text  x="530.54" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (10 samples, 0.17%)</title><rect x="1179.7" y="2037" width="2.0" height="15.0" fill="rgb(211,203,28)" rx="2" ry="2" />
<text  x="1182.68" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="142.0" y="1781" width="0.2" height="15.0" fill="rgb(223,222,26)" rx="2" ry="2" />
<text  x="145.02" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="247.4" y="1669" width="0.2" height="15.0" fill="rgb(231,193,54)" rx="2" ry="2" />
<text  x="250.43" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="989.7" y="1893" width="0.4" height="15.0" fill="rgb(232,18,42)" rx="2" ry="2" />
<text  x="992.69" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (7 samples, 0.12%)</title><rect x="898.4" y="2037" width="1.4" height="15.0" fill="rgb(252,72,4)" rx="2" ry="2" />
<text  x="901.37" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="894.6" y="1973" width="0.2" height="15.0" fill="rgb(241,16,5)" rx="2" ry="2" />
<text  x="897.60" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="279.0" y="1589" width="0.2" height="15.0" fill="rgb(249,45,31)" rx="2" ry="2" />
<text  x="281.99" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (1 samples, 0.02%)</title><rect x="620.8" y="2005" width="0.2" height="15.0" fill="rgb(205,52,44)" rx="2" ry="2" />
<text  x="623.84" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="899.6" y="1749" width="0.2" height="15.0" fill="rgb(254,190,26)" rx="2" ry="2" />
<text  x="902.57" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="639.7" y="1893" width="0.2" height="15.0" fill="rgb(241,84,4)" rx="2" ry="2" />
<text  x="642.70" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1106.6" y="1701" width="0.2" height="15.0" fill="rgb(213,27,34)" rx="2" ry="2" />
<text  x="1109.62" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="178.9" y="1845" width="0.2" height="15.0" fill="rgb(253,5,32)" rx="2" ry="2" />
<text  x="181.94" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="654.4" y="1765" width="0.2" height="15.0" fill="rgb(250,69,14)" rx="2" ry="2" />
<text  x="657.39" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="543.8" y="1813" width="0.2" height="15.0" fill="rgb(247,124,25)" rx="2" ry="2" />
<text  x="546.82" y="1823.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="139.4" y="1525" width="0.2" height="15.0" fill="rgb(245,150,24)" rx="2" ry="2" />
<text  x="142.43" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="905.7" y="1989" width="0.6" height="15.0" fill="rgb(243,20,32)" rx="2" ry="2" />
<text  x="908.72" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="996.6" y="1973" width="0.6" height="15.0" fill="rgb(244,158,17)" rx="2" ry="2" />
<text  x="999.64" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="294.3" y="1765" width="0.2" height="15.0" fill="rgb(252,78,40)" rx="2" ry="2" />
<text  x="297.28" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="608.1" y="1893" width="0.2" height="15.0" fill="rgb(232,179,47)" rx="2" ry="2" />
<text  x="611.14" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (13 samples, 0.22%)</title><rect x="76.1" y="1957" width="2.6" height="15.0" fill="rgb(212,226,24)" rx="2" ry="2" />
<text  x="79.11" y="1967.5" ></text>
</g>
<g >
<title>event_changelist_remove_all_ (1 samples, 0.02%)</title><rect x="510.9" y="2037" width="0.2" height="15.0" fill="rgb(242,225,9)" rx="2" ry="2" />
<text  x="513.86" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="725.9" y="1637" width="0.2" height="15.0" fill="rgb(219,195,46)" rx="2" ry="2" />
<text  x="728.86" y="1647.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (8 samples, 0.13%)</title><rect x="839.8" y="1925" width="1.6" height="15.0" fill="rgb(244,187,44)" rx="2" ry="2" />
<text  x="842.81" y="1935.5" ></text>
</g>
<g >
<title>set_close_on_exec (2 samples, 0.03%)</title><rect x="561.9" y="1909" width="0.4" height="15.0" fill="rgb(231,70,14)" rx="2" ry="2" />
<text  x="564.88" y="1919.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="329.8" y="1829" width="0.2" height="15.0" fill="rgb(206,218,33)" rx="2" ry="2" />
<text  x="332.81" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="947.4" y="1957" width="0.2" height="15.0" fill="rgb(215,45,34)" rx="2" ry="2" />
<text  x="950.41" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="675.6" y="1861" width="0.4" height="15.0" fill="rgb(240,9,10)" rx="2" ry="2" />
<text  x="678.64" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="483.1" y="1861" width="0.4" height="15.0" fill="rgb(244,28,47)" rx="2" ry="2" />
<text  x="486.07" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1189.0" y="1909" width="0.2" height="15.0" fill="rgb(215,40,3)" rx="2" ry="2" />
<text  x="1192.01" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="92.4" y="1909" width="0.2" height="15.0" fill="rgb(226,70,54)" rx="2" ry="2" />
<text  x="95.39" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.8" y="1941" width="0.2" height="15.0" fill="rgb(223,204,22)" rx="2" ry="2" />
<text  x="494.81" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="651.8" y="1893" width="0.2" height="15.0" fill="rgb(238,104,25)" rx="2" ry="2" />
<text  x="654.81" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="638.5" y="1909" width="0.2" height="15.0" fill="rgb(209,222,8)" rx="2" ry="2" />
<text  x="641.51" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="536.7" y="1893" width="0.2" height="15.0" fill="rgb(229,14,46)" rx="2" ry="2" />
<text  x="539.67" y="1903.5" ></text>
</g>
<g >
<title>tcp_init_xmit_timers (1 samples, 0.02%)</title><rect x="679.4" y="1669" width="0.2" height="15.0" fill="rgb(253,39,29)" rx="2" ry="2" />
<text  x="682.41" y="1679.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (43 samples, 0.72%)</title><rect x="1106.8" y="1893" width="8.6" height="15.0" fill="rgb(213,145,17)" rx="2" ry="2" />
<text  x="1109.82" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="156.3" y="1541" width="0.2" height="15.0" fill="rgb(246,212,17)" rx="2" ry="2" />
<text  x="159.31" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="820.0" y="1525" width="0.2" height="15.0" fill="rgb(253,197,27)" rx="2" ry="2" />
<text  x="822.96" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="383.4" y="1861" width="0.2" height="15.0" fill="rgb(214,179,40)" rx="2" ry="2" />
<text  x="386.42" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="408.4" y="1621" width="0.2" height="15.0" fill="rgb(247,228,47)" rx="2" ry="2" />
<text  x="411.43" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="207.3" y="1909" width="0.2" height="15.0" fill="rgb(222,79,48)" rx="2" ry="2" />
<text  x="210.33" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="922.2" y="1925" width="1.0" height="15.0" fill="rgb(254,178,6)" rx="2" ry="2" />
<text  x="925.20" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.9" y="1829" width="0.2" height="15.0" fill="rgb(249,20,38)" rx="2" ry="2" />
<text  x="854.92" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="543.8" y="1669" width="0.2" height="15.0" fill="rgb(239,98,7)" rx="2" ry="2" />
<text  x="546.82" y="1679.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="762.6" y="1461" width="0.2" height="15.0" fill="rgb(251,140,43)" rx="2" ry="2" />
<text  x="765.59" y="1471.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="286.3" y="1765" width="0.2" height="15.0" fill="rgb(209,58,36)" rx="2" ry="2" />
<text  x="289.34" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="250.2" y="1941" width="0.2" height="15.0" fill="rgb(230,183,30)" rx="2" ry="2" />
<text  x="253.21" y="1951.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="278.8" y="1877" width="0.2" height="15.0" fill="rgb(210,48,14)" rx="2" ry="2" />
<text  x="281.80" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="60.2" y="1909" width="0.2" height="15.0" fill="rgb(225,18,28)" rx="2" ry="2" />
<text  x="63.23" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="884.9" y="1781" width="0.2" height="15.0" fill="rgb(233,200,30)" rx="2" ry="2" />
<text  x="887.88" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="654.4" y="1605" width="0.2" height="15.0" fill="rgb(228,162,36)" rx="2" ry="2" />
<text  x="657.39" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="408.4" y="1749" width="0.2" height="15.0" fill="rgb(248,90,9)" rx="2" ry="2" />
<text  x="411.43" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.03%)</title><rect x="1021.9" y="2037" width="0.4" height="15.0" fill="rgb(240,214,0)" rx="2" ry="2" />
<text  x="1024.85" y="2047.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="115.6" y="1893" width="0.2" height="15.0" fill="rgb(215,224,24)" rx="2" ry="2" />
<text  x="118.61" y="1903.5" ></text>
</g>
<g >
<title>tcp_cleanup_congestion_control (1 samples, 0.02%)</title><rect x="1072.1" y="1557" width="0.2" height="15.0" fill="rgb(228,225,28)" rx="2" ry="2" />
<text  x="1075.08" y="1567.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="936.9" y="1925" width="0.4" height="15.0" fill="rgb(240,228,45)" rx="2" ry="2" />
<text  x="939.89" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="510.3" y="1733" width="0.2" height="15.0" fill="rgb(227,190,9)" rx="2" ry="2" />
<text  x="513.27" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (30 samples, 0.50%)</title><rect x="985.1" y="1973" width="6.0" height="15.0" fill="rgb(221,201,36)" rx="2" ry="2" />
<text  x="988.13" y="1983.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1008.8" y="1973" width="0.5" height="15.0" fill="rgb(219,180,29)" rx="2" ry="2" />
<text  x="1011.75" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="70.7" y="1829" width="0.2" height="15.0" fill="rgb(227,110,45)" rx="2" ry="2" />
<text  x="73.75" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="856.7" y="1781" width="0.2" height="15.0" fill="rgb(245,140,52)" rx="2" ry="2" />
<text  x="859.69" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="408.2" y="1749" width="0.2" height="15.0" fill="rgb(252,134,19)" rx="2" ry="2" />
<text  x="411.23" y="1759.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="825.9" y="1573" width="0.2" height="15.0" fill="rgb(207,40,19)" rx="2" ry="2" />
<text  x="828.92" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="73.7" y="1909" width="0.2" height="15.0" fill="rgb(212,27,17)" rx="2" ry="2" />
<text  x="76.72" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="458.7" y="1749" width="0.2" height="15.0" fill="rgb(226,62,28)" rx="2" ry="2" />
<text  x="461.65" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="136.7" y="309" width="0.2" height="15.0" fill="rgb(231,154,33)" rx="2" ry="2" />
<text  x="139.66" y="319.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1079.0" y="1749" width="0.2" height="15.0" fill="rgb(233,24,31)" rx="2" ry="2" />
<text  x="1082.03" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (3 samples, 0.05%)</title><rect x="53.1" y="1893" width="0.6" height="15.0" fill="rgb(208,115,37)" rx="2" ry="2" />
<text  x="56.08" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="72.1" y="1653" width="0.2" height="15.0" fill="rgb(213,178,52)" rx="2" ry="2" />
<text  x="75.14" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (13 samples, 0.22%)</title><rect x="642.5" y="1989" width="2.6" height="15.0" fill="rgb(225,170,23)" rx="2" ry="2" />
<text  x="645.48" y="1999.5" ></text>
</g>
<g >
<title>free_unref_page (25 samples, 0.42%)</title><rect x="1073.9" y="1845" width="4.9" height="15.0" fill="rgb(250,211,9)" rx="2" ry="2" />
<text  x="1076.87" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="775.7" y="1317" width="0.2" height="15.0" fill="rgb(209,157,15)" rx="2" ry="2" />
<text  x="778.69" y="1327.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (3 samples, 0.05%)</title><rect x="31.4" y="1989" width="0.6" height="15.0" fill="rgb(212,46,41)" rx="2" ry="2" />
<text  x="34.44" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="206.9" y="1989" width="0.2" height="15.0" fill="rgb(238,152,1)" rx="2" ry="2" />
<text  x="209.93" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1183.1" y="1973" width="0.3" height="15.0" fill="rgb(245,203,29)" rx="2" ry="2" />
<text  x="1186.05" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="956.3" y="1877" width="0.2" height="15.0" fill="rgb(232,0,3)" rx="2" ry="2" />
<text  x="959.34" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="743.1" y="1557" width="0.2" height="15.0" fill="rgb(212,222,17)" rx="2" ry="2" />
<text  x="746.13" y="1567.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="517.4" y="1957" width="0.2" height="15.0" fill="rgb(254,141,44)" rx="2" ry="2" />
<text  x="520.42" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (12 samples, 0.20%)</title><rect x="620.2" y="2037" width="2.4" height="15.0" fill="rgb(224,106,36)" rx="2" ry="2" />
<text  x="623.25" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1182.7" y="2005" width="0.2" height="15.0" fill="rgb(207,54,22)" rx="2" ry="2" />
<text  x="1185.65" y="2015.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="652.4" y="1989" width="0.2" height="15.0" fill="rgb(237,179,45)" rx="2" ry="2" />
<text  x="655.41" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="264.7" y="1813" width="0.2" height="15.0" fill="rgb(215,188,23)" rx="2" ry="2" />
<text  x="267.70" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="851.5" y="1861" width="0.6" height="15.0" fill="rgb(231,0,49)" rx="2" ry="2" />
<text  x="854.52" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="53.7" y="1941" width="0.4" height="15.0" fill="rgb(222,104,49)" rx="2" ry="2" />
<text  x="56.67" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="459.6" y="1941" width="0.2" height="15.0" fill="rgb(207,19,6)" rx="2" ry="2" />
<text  x="462.65" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="100.7" y="1877" width="0.2" height="15.0" fill="rgb(206,26,30)" rx="2" ry="2" />
<text  x="103.72" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="761.0" y="1493" width="0.2" height="15.0" fill="rgb(245,211,40)" rx="2" ry="2" />
<text  x="764.00" y="1503.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="52.9" y="1845" width="0.2" height="15.0" fill="rgb(206,153,34)" rx="2" ry="2" />
<text  x="55.88" y="1855.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1017.1" y="1717" width="0.2" height="15.0" fill="rgb(230,33,44)" rx="2" ry="2" />
<text  x="1020.09" y="1727.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="267.5" y="1925" width="0.4" height="15.0" fill="rgb(238,151,0)" rx="2" ry="2" />
<text  x="270.48" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="52.1" y="1861" width="0.2" height="15.0" fill="rgb(233,110,36)" rx="2" ry="2" />
<text  x="55.09" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="541.2" y="1893" width="0.4" height="15.0" fill="rgb(211,220,23)" rx="2" ry="2" />
<text  x="544.24" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="269.7" y="1925" width="0.2" height="15.0" fill="rgb(218,148,27)" rx="2" ry="2" />
<text  x="272.66" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="628.6" y="2005" width="0.6" height="15.0" fill="rgb(229,148,39)" rx="2" ry="2" />
<text  x="631.59" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (25 samples, 0.42%)</title><rect x="324.9" y="1813" width="4.9" height="15.0" fill="rgb(233,110,4)" rx="2" ry="2" />
<text  x="327.85" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="753.9" y="1589" width="0.2" height="15.0" fill="rgb(225,57,8)" rx="2" ry="2" />
<text  x="756.85" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="132.5" y="37" width="0.4" height="15.0" fill="rgb(229,178,38)" rx="2" ry="2" />
<text  x="135.49" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="623.8" y="1925" width="0.2" height="15.0" fill="rgb(211,110,30)" rx="2" ry="2" />
<text  x="626.82" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="134.7" y="53" width="0.2" height="15.0" fill="rgb(221,9,2)" rx="2" ry="2" />
<text  x="137.67" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="167.0" y="1653" width="0.2" height="15.0" fill="rgb(227,11,45)" rx="2" ry="2" />
<text  x="170.03" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="837" width="17.9" height="15.0" fill="rgb(239,80,24)" rx="2" ry="2" />
<text  x="122.19" y="847.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="505.1" y="1685" width="0.4" height="15.0" fill="rgb(242,169,42)" rx="2" ry="2" />
<text  x="508.11" y="1695.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (3 samples, 0.05%)</title><rect x="38.8" y="2005" width="0.6" height="15.0" fill="rgb(217,206,23)" rx="2" ry="2" />
<text  x="41.79" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="876.1" y="1941" width="0.2" height="15.0" fill="rgb(208,24,17)" rx="2" ry="2" />
<text  x="879.14" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="990.1" y="1909" width="0.4" height="15.0" fill="rgb(219,168,24)" rx="2" ry="2" />
<text  x="993.09" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="196.4" y="1653" width="0.2" height="15.0" fill="rgb(218,15,4)" rx="2" ry="2" />
<text  x="199.41" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="142.6" y="1829" width="0.2" height="15.0" fill="rgb(233,224,22)" rx="2" ry="2" />
<text  x="145.61" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="540.4" y="1925" width="0.8" height="15.0" fill="rgb(208,109,35)" rx="2" ry="2" />
<text  x="543.44" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="637.1" y="1749" width="0.2" height="15.0" fill="rgb(211,61,22)" rx="2" ry="2" />
<text  x="640.12" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="662.1" y="1973" width="0.2" height="15.0" fill="rgb(218,56,8)" rx="2" ry="2" />
<text  x="665.14" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="831.7" y="1701" width="0.2" height="15.0" fill="rgb(224,55,20)" rx="2" ry="2" />
<text  x="834.67" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (3 samples, 0.05%)</title><rect x="34.6" y="1941" width="0.6" height="15.0" fill="rgb(248,50,53)" rx="2" ry="2" />
<text  x="37.62" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="676.2" y="1669" width="0.2" height="15.0" fill="rgb(252,85,26)" rx="2" ry="2" />
<text  x="679.23" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="118.8" y="1205" width="18.8" height="15.0" fill="rgb(219,86,37)" rx="2" ry="2" />
<text  x="121.79" y="1215.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="213.7" y="1973" width="0.2" height="15.0" fill="rgb(217,166,9)" rx="2" ry="2" />
<text  x="216.68" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="133.9" y="37" width="0.2" height="15.0" fill="rgb(223,167,5)" rx="2" ry="2" />
<text  x="136.88" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="947.4" y="1733" width="0.2" height="15.0" fill="rgb(241,120,43)" rx="2" ry="2" />
<text  x="950.41" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1018.3" y="2005" width="0.2" height="15.0" fill="rgb(232,58,28)" rx="2" ry="2" />
<text  x="1021.28" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="329.8" y="1765" width="0.2" height="15.0" fill="rgb(230,170,39)" rx="2" ry="2" />
<text  x="332.81" y="1775.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="95.8" y="1941" width="0.2" height="15.0" fill="rgb(224,87,30)" rx="2" ry="2" />
<text  x="98.76" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (20 samples, 0.34%)</title><rect x="957.5" y="2037" width="4.0" height="15.0" fill="rgb(220,29,44)" rx="2" ry="2" />
<text  x="960.53" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="247.4" y="1765" width="0.2" height="15.0" fill="rgb(239,82,39)" rx="2" ry="2" />
<text  x="250.43" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="245.0" y="1813" width="0.4" height="15.0" fill="rgb(233,161,26)" rx="2" ry="2" />
<text  x="248.05" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="155.9" y="1765" width="0.2" height="15.0" fill="rgb(239,187,13)" rx="2" ry="2" />
<text  x="158.91" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="940.5" y="1749" width="0.2" height="15.0" fill="rgb(236,52,33)" rx="2" ry="2" />
<text  x="943.46" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="190.1" y="1957" width="0.4" height="15.0" fill="rgb(252,36,51)" rx="2" ry="2" />
<text  x="193.06" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="521.4" y="1941" width="0.4" height="15.0" fill="rgb(254,7,33)" rx="2" ry="2" />
<text  x="524.39" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (6 samples, 0.10%)</title><rect x="572.6" y="1941" width="1.2" height="15.0" fill="rgb(254,178,45)" rx="2" ry="2" />
<text  x="575.60" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1002.4" y="1701" width="0.2" height="15.0" fill="rgb(236,96,46)" rx="2" ry="2" />
<text  x="1005.40" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="206.9" y="1877" width="0.2" height="15.0" fill="rgb(249,122,42)" rx="2" ry="2" />
<text  x="209.93" y="1887.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="965.3" y="2021" width="0.4" height="15.0" fill="rgb(223,158,47)" rx="2" ry="2" />
<text  x="968.28" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="61.6" y="1781" width="0.2" height="15.0" fill="rgb(216,12,12)" rx="2" ry="2" />
<text  x="64.62" y="1791.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="505.3" y="1557" width="0.2" height="15.0" fill="rgb(231,189,36)" rx="2" ry="2" />
<text  x="508.31" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="800.7" y="1445" width="0.2" height="15.0" fill="rgb(215,171,18)" rx="2" ry="2" />
<text  x="803.70" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="250.2" y="2021" width="0.2" height="15.0" fill="rgb(205,162,49)" rx="2" ry="2" />
<text  x="253.21" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="300.6" y="1477" width="0.2" height="15.0" fill="rgb(210,145,0)" rx="2" ry="2" />
<text  x="303.63" y="1487.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="606.9" y="1861" width="0.2" height="15.0" fill="rgb(231,38,41)" rx="2" ry="2" />
<text  x="609.95" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="52.9" y="1909" width="0.8" height="15.0" fill="rgb(219,84,30)" rx="2" ry="2" />
<text  x="55.88" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="196.4" y="1733" width="0.2" height="15.0" fill="rgb(248,212,6)" rx="2" ry="2" />
<text  x="199.41" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="238.5" y="1877" width="0.4" height="15.0" fill="rgb(244,208,53)" rx="2" ry="2" />
<text  x="241.50" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="630.4" y="1669" width="0.2" height="15.0" fill="rgb(230,48,47)" rx="2" ry="2" />
<text  x="633.37" y="1679.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="743.5" y="1765" width="0.2" height="15.0" fill="rgb(222,105,18)" rx="2" ry="2" />
<text  x="746.53" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="68.2" y="1925" width="0.2" height="15.0" fill="rgb(240,44,6)" rx="2" ry="2" />
<text  x="71.17" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="136.9" y="101" width="0.2" height="15.0" fill="rgb(217,7,40)" rx="2" ry="2" />
<text  x="139.85" y="111.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="136.7" y="405" width="0.2" height="15.0" fill="rgb(243,197,47)" rx="2" ry="2" />
<text  x="139.66" y="415.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="66.2" y="1893" width="0.8" height="15.0" fill="rgb(207,201,28)" rx="2" ry="2" />
<text  x="69.18" y="1903.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="955.9" y="1861" width="0.2" height="15.0" fill="rgb(246,123,28)" rx="2" ry="2" />
<text  x="958.95" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="126.5" y="37" width="0.2" height="15.0" fill="rgb(216,113,6)" rx="2" ry="2" />
<text  x="129.53" y="47.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="887.7" y="1909" width="0.2" height="15.0" fill="rgb(238,166,12)" rx="2" ry="2" />
<text  x="890.65" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="77.3" y="1909" width="0.2" height="15.0" fill="rgb(216,55,43)" rx="2" ry="2" />
<text  x="80.30" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.6" y="1925" width="0.2" height="15.0" fill="rgb(207,66,22)" rx="2" ry="2" />
<text  x="494.61" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="597.0" y="1781" width="0.2" height="15.0" fill="rgb(254,52,32)" rx="2" ry="2" />
<text  x="600.02" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (2 samples, 0.03%)</title><rect x="1173.7" y="1957" width="0.4" height="15.0" fill="rgb(236,179,0)" rx="2" ry="2" />
<text  x="1176.72" y="1967.5" ></text>
</g>
<g >
<title>fd_install (1 samples, 0.02%)</title><rect x="364.0" y="1957" width="0.2" height="15.0" fill="rgb(205,95,17)" rx="2" ry="2" />
<text  x="366.96" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="654.4" y="1861" width="0.2" height="15.0" fill="rgb(229,113,15)" rx="2" ry="2" />
<text  x="657.39" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="838.4" y="1829" width="0.2" height="15.0" fill="rgb(240,46,28)" rx="2" ry="2" />
<text  x="841.42" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="926.2" y="1957" width="0.6" height="15.0" fill="rgb(239,36,50)" rx="2" ry="2" />
<text  x="929.17" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="753.5" y="1653" width="0.2" height="15.0" fill="rgb(209,141,34)" rx="2" ry="2" />
<text  x="756.46" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="991.5" y="1973" width="0.6" height="15.0" fill="rgb(205,85,24)" rx="2" ry="2" />
<text  x="994.48" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="741.3" y="1765" width="0.4" height="15.0" fill="rgb(226,200,38)" rx="2" ry="2" />
<text  x="744.35" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="294.3" y="1669" width="0.2" height="15.0" fill="rgb(230,177,32)" rx="2" ry="2" />
<text  x="297.28" y="1679.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="929.3" y="1893" width="0.2" height="15.0" fill="rgb(252,169,15)" rx="2" ry="2" />
<text  x="932.34" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.9" y="1813" width="0.2" height="15.0" fill="rgb(234,86,13)" rx="2" ry="2" />
<text  x="887.88" y="1823.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="344.1" y="2021" width="0.4" height="15.0" fill="rgb(251,188,49)" rx="2" ry="2" />
<text  x="347.11" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1109.2" y="1461" width="0.2" height="15.0" fill="rgb(244,56,23)" rx="2" ry="2" />
<text  x="1112.20" y="1471.5" ></text>
</g>
<g >
<title>sys_epoll_wait (59 samples, 0.99%)</title><rect x="498.6" y="1989" width="11.7" height="15.0" fill="rgb(232,208,30)" rx="2" ry="2" />
<text  x="501.56" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="58.6" y="1893" width="0.2" height="15.0" fill="rgb(209,121,10)" rx="2" ry="2" />
<text  x="61.64" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="486.8" y="1717" width="0.2" height="15.0" fill="rgb(228,61,19)" rx="2" ry="2" />
<text  x="489.84" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="526.3" y="1957" width="0.6" height="15.0" fill="rgb(228,117,49)" rx="2" ry="2" />
<text  x="529.35" y="1967.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="748.5" y="1749" width="0.2" height="15.0" fill="rgb(223,8,4)" rx="2" ry="2" />
<text  x="751.49" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="600.8" y="1829" width="0.2" height="15.0" fill="rgb(230,108,41)" rx="2" ry="2" />
<text  x="603.79" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="562.1" y="1701" width="0.2" height="15.0" fill="rgb(225,185,4)" rx="2" ry="2" />
<text  x="565.08" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.2" y="1573" width="0.2" height="15.0" fill="rgb(222,2,1)" rx="2" ry="2" />
<text  x="121.19" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="269.3" y="1877" width="0.2" height="15.0" fill="rgb(243,146,46)" rx="2" ry="2" />
<text  x="272.27" y="1887.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="1164.2" y="1957" width="2.6" height="15.0" fill="rgb(231,14,34)" rx="2" ry="2" />
<text  x="1167.19" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (1 samples, 0.02%)</title><rect x="393.9" y="1941" width="0.2" height="15.0" fill="rgb(231,65,12)" rx="2" ry="2" />
<text  x="396.94" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="524.0" y="1989" width="0.2" height="15.0" fill="rgb(237,115,35)" rx="2" ry="2" />
<text  x="526.97" y="1999.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="804.9" y="1605" width="0.2" height="15.0" fill="rgb(252,141,14)" rx="2" ry="2" />
<text  x="807.87" y="1615.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="612.3" y="1861" width="0.2" height="15.0" fill="rgb(229,153,53)" rx="2" ry="2" />
<text  x="615.31" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.83%)</title><rect x="118.4" y="1621" width="21.6" height="15.0" fill="rgb(244,188,3)" rx="2" ry="2" />
<text  x="121.39" y="1631.5" >[..</text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (5 samples, 0.08%)</title><rect x="544.0" y="1989" width="1.0" height="15.0" fill="rgb(216,3,4)" rx="2" ry="2" />
<text  x="547.02" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="856.7" y="1541" width="0.2" height="15.0" fill="rgb(225,91,51)" rx="2" ry="2" />
<text  x="859.69" y="1551.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="142.4" y="1813" width="0.2" height="15.0" fill="rgb(208,156,38)" rx="2" ry="2" />
<text  x="145.41" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="529.5" y="1941" width="0.2" height="15.0" fill="rgb(217,134,31)" rx="2" ry="2" />
<text  x="532.53" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="213.1" y="1989" width="0.2" height="15.0" fill="rgb(245,141,9)" rx="2" ry="2" />
<text  x="216.09" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="940.5" y="1941" width="0.2" height="15.0" fill="rgb(218,102,27)" rx="2" ry="2" />
<text  x="943.46" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="112.2" y="1989" width="0.2" height="15.0" fill="rgb(211,77,21)" rx="2" ry="2" />
<text  x="115.24" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="654.4" y="1797" width="0.2" height="15.0" fill="rgb(218,44,24)" rx="2" ry="2" />
<text  x="657.39" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.19%)</title><rect x="953.0" y="1989" width="2.2" height="15.0" fill="rgb(224,163,44)" rx="2" ry="2" />
<text  x="955.97" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="615.7" y="1957" width="0.2" height="15.0" fill="rgb(217,95,34)" rx="2" ry="2" />
<text  x="618.68" y="1967.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="646.1" y="1765" width="0.2" height="15.0" fill="rgb(212,182,35)" rx="2" ry="2" />
<text  x="649.06" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="631.8" y="1989" width="0.2" height="15.0" fill="rgb(212,221,45)" rx="2" ry="2" />
<text  x="634.76" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="155.9" y="1829" width="0.2" height="15.0" fill="rgb(228,96,51)" rx="2" ry="2" />
<text  x="158.91" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="852.5" y="1829" width="0.2" height="15.0" fill="rgb(249,191,19)" rx="2" ry="2" />
<text  x="855.52" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="179.1" y="1973" width="0.2" height="15.0" fill="rgb(212,20,35)" rx="2" ry="2" />
<text  x="182.14" y="1983.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="383.4" y="1877" width="0.2" height="15.0" fill="rgb(243,22,35)" rx="2" ry="2" />
<text  x="386.42" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="329.4" y="1749" width="0.2" height="15.0" fill="rgb(254,160,39)" rx="2" ry="2" />
<text  x="332.42" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (17 samples, 0.29%)</title><rect x="700.3" y="2005" width="3.3" height="15.0" fill="rgb(219,87,3)" rx="2" ry="2" />
<text  x="703.25" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="627.2" y="1797" width="0.2" height="15.0" fill="rgb(207,160,13)" rx="2" ry="2" />
<text  x="630.20" y="1807.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="518.0" y="1957" width="0.4" height="15.0" fill="rgb(215,217,28)" rx="2" ry="2" />
<text  x="521.01" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="614.7" y="1957" width="0.2" height="15.0" fill="rgb(250,106,19)" rx="2" ry="2" />
<text  x="617.69" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="800.7" y="1221" width="0.2" height="15.0" fill="rgb(231,184,53)" rx="2" ry="2" />
<text  x="803.70" y="1231.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="646.5" y="1797" width="0.2" height="15.0" fill="rgb(244,176,21)" rx="2" ry="2" />
<text  x="649.45" y="1807.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="203.6" y="2021" width="0.2" height="15.0" fill="rgb(245,214,47)" rx="2" ry="2" />
<text  x="206.56" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (117 samples, 1.97%)</title><rect x="226.2" y="1973" width="23.2" height="15.0" fill="rgb(244,77,27)" rx="2" ry="2" />
<text  x="229.19" y="1983.5" >f..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="463.4" y="1877" width="0.2" height="15.0" fill="rgb(211,211,44)" rx="2" ry="2" />
<text  x="466.42" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (7 samples, 0.12%)</title><rect x="793.8" y="1541" width="1.3" height="15.0" fill="rgb(205,65,2)" rx="2" ry="2" />
<text  x="796.76" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="152.3" y="1925" width="0.2" height="15.0" fill="rgb(254,77,10)" rx="2" ry="2" />
<text  x="155.34" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="109.3" y="1973" width="0.4" height="15.0" fill="rgb(224,42,50)" rx="2" ry="2" />
<text  x="112.26" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="189.3" y="1973" width="0.2" height="15.0" fill="rgb(232,191,11)" rx="2" ry="2" />
<text  x="192.26" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1167.4" y="2021" width="0.2" height="15.0" fill="rgb(233,94,54)" rx="2" ry="2" />
<text  x="1170.37" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1019.9" y="1909" width="0.2" height="15.0" fill="rgb(224,44,42)" rx="2" ry="2" />
<text  x="1022.87" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="136.1" y="325" width="0.2" height="15.0" fill="rgb(254,180,6)" rx="2" ry="2" />
<text  x="139.06" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="960.7" y="1957" width="0.2" height="15.0" fill="rgb(237,74,18)" rx="2" ry="2" />
<text  x="963.71" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1017.1" y="1861" width="0.2" height="15.0" fill="rgb(224,2,9)" rx="2" ry="2" />
<text  x="1020.09" y="1871.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1941" width="0.2" height="15.0" fill="rgb(239,76,1)" rx="2" ry="2" />
<text  x="570.24" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="621.8" y="1957" width="0.2" height="15.0" fill="rgb(210,51,24)" rx="2" ry="2" />
<text  x="624.84" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="646.5" y="1829" width="0.2" height="15.0" fill="rgb(225,194,39)" rx="2" ry="2" />
<text  x="649.45" y="1839.5" ></text>
</g>
<g >
<title>do_fcntl (4 samples, 0.07%)</title><rect x="561.5" y="1925" width="0.8" height="15.0" fill="rgb(231,224,25)" rx="2" ry="2" />
<text  x="564.49" y="1935.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1174.1" y="1957" width="0.2" height="15.0" fill="rgb(222,52,47)" rx="2" ry="2" />
<text  x="1177.12" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="378.5" y="1781" width="0.2" height="15.0" fill="rgb(211,77,37)" rx="2" ry="2" />
<text  x="381.45" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="668.5" y="1877" width="0.2" height="15.0" fill="rgb(215,223,28)" rx="2" ry="2" />
<text  x="671.49" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="207.3" y="1989" width="0.2" height="15.0" fill="rgb(215,73,43)" rx="2" ry="2" />
<text  x="210.33" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="534.1" y="1925" width="0.2" height="15.0" fill="rgb(248,149,48)" rx="2" ry="2" />
<text  x="537.09" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="703.0" y="1957" width="0.2" height="15.0" fill="rgb(239,152,28)" rx="2" ry="2" />
<text  x="706.03" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (2 samples, 0.03%)</title><rect x="580.1" y="2021" width="0.4" height="15.0" fill="rgb(244,71,13)" rx="2" ry="2" />
<text  x="583.15" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1017.1" y="1909" width="0.2" height="15.0" fill="rgb(221,170,13)" rx="2" ry="2" />
<text  x="1020.09" y="1919.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="745.9" y="1365" width="0.2" height="15.0" fill="rgb(221,68,2)" rx="2" ry="2" />
<text  x="748.91" y="1375.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="600.8" y="1765" width="0.2" height="15.0" fill="rgb(243,201,49)" rx="2" ry="2" />
<text  x="603.79" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (313 samples, 5.27%)</title><rect x="117.4" y="2021" width="62.1" height="15.0" fill="rgb(254,0,2)" rx="2" ry="2" />
<text  x="120.40" y="2031.5" >[unkno..</text>
</g>
<g >
<title>[[vdso]] (10 samples, 0.17%)</title><rect x="221.8" y="2005" width="2.0" height="15.0" fill="rgb(206,117,32)" rx="2" ry="2" />
<text  x="224.82" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1144.1" y="1925" width="0.2" height="15.0" fill="rgb(237,127,20)" rx="2" ry="2" />
<text  x="1147.14" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="486.8" y="1749" width="0.2" height="15.0" fill="rgb(225,9,24)" rx="2" ry="2" />
<text  x="489.84" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="694.1" y="1381" width="0.2" height="15.0" fill="rgb(238,134,26)" rx="2" ry="2" />
<text  x="697.10" y="1391.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="842.2" y="1845" width="0.2" height="15.0" fill="rgb(229,37,42)" rx="2" ry="2" />
<text  x="845.19" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="247.4" y="1573" width="0.2" height="15.0" fill="rgb(242,55,47)" rx="2" ry="2" />
<text  x="250.43" y="1583.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1145.5" y="1973" width="0.4" height="15.0" fill="rgb(222,39,50)" rx="2" ry="2" />
<text  x="1148.53" y="1983.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="689.5" y="1893" width="0.4" height="15.0" fill="rgb(241,140,34)" rx="2" ry="2" />
<text  x="692.53" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1121.3" y="1909" width="0.2" height="15.0" fill="rgb(230,69,2)" rx="2" ry="2" />
<text  x="1124.31" y="1919.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="127.1" y="53" width="1.0" height="15.0" fill="rgb(225,219,38)" rx="2" ry="2" />
<text  x="130.13" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1000.6" y="1989" width="0.2" height="15.0" fill="rgb(227,177,44)" rx="2" ry="2" />
<text  x="1003.61" y="1999.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (3 samples, 0.05%)</title><rect x="979.6" y="1973" width="0.6" height="15.0" fill="rgb(252,100,34)" rx="2" ry="2" />
<text  x="982.57" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1121.3" y="1861" width="0.2" height="15.0" fill="rgb(232,122,38)" rx="2" ry="2" />
<text  x="1124.31" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="491.8" y="1717" width="0.2" height="15.0" fill="rgb(206,51,15)" rx="2" ry="2" />
<text  x="494.81" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="753.9" y="1525" width="0.2" height="15.0" fill="rgb(246,193,47)" rx="2" ry="2" />
<text  x="756.85" y="1535.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (9 samples, 0.15%)</title><rect x="106.1" y="2005" width="1.8" height="15.0" fill="rgb(238,71,14)" rx="2" ry="2" />
<text  x="109.08" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="61.0" y="1637" width="0.2" height="15.0" fill="rgb(230,160,49)" rx="2" ry="2" />
<text  x="64.02" y="1647.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (17 samples, 0.29%)</title><rect x="181.5" y="2005" width="3.4" height="15.0" fill="rgb(245,130,3)" rx="2" ry="2" />
<text  x="184.52" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (8 samples, 0.13%)</title><rect x="708.4" y="1973" width="1.6" height="15.0" fill="rgb(240,58,39)" rx="2" ry="2" />
<text  x="711.39" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1177.1" y="1861" width="0.2" height="15.0" fill="rgb(215,222,12)" rx="2" ry="2" />
<text  x="1180.10" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="167.0" y="1733" width="0.2" height="15.0" fill="rgb(249,130,30)" rx="2" ry="2" />
<text  x="170.03" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="529.5" y="1925" width="0.2" height="15.0" fill="rgb(227,105,48)" rx="2" ry="2" />
<text  x="532.53" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="329.4" y="1685" width="0.2" height="15.0" fill="rgb(226,221,1)" rx="2" ry="2" />
<text  x="332.42" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (7 samples, 0.12%)</title><rect x="861.6" y="1989" width="1.4" height="15.0" fill="rgb(231,82,46)" rx="2" ry="2" />
<text  x="864.65" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="934.7" y="1877" width="0.2" height="15.0" fill="rgb(222,156,10)" rx="2" ry="2" />
<text  x="937.70" y="1887.5" ></text>
</g>
<g >
<title>accept4 (359 samples, 6.04%)</title><rect x="351.7" y="2037" width="71.2" height="15.0" fill="rgb(219,215,1)" rx="2" ry="2" />
<text  x="354.65" y="2047.5" >accept4</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="800.7" y="1509" width="0.2" height="15.0" fill="rgb(222,213,15)" rx="2" ry="2" />
<text  x="803.70" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="283.0" y="1701" width="0.2" height="15.0" fill="rgb(234,185,39)" rx="2" ry="2" />
<text  x="285.96" y="1711.5" ></text>
</g>
<g >
<title>_copy_to_iter (20 samples, 0.34%)</title><rect x="1097.5" y="1909" width="4.0" height="15.0" fill="rgb(221,40,54)" rx="2" ry="2" />
<text  x="1100.49" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="734.4" y="1589" width="0.2" height="15.0" fill="rgb(214,120,45)" rx="2" ry="2" />
<text  x="737.40" y="1599.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="489.2" y="1941" width="0.4" height="15.0" fill="rgb(234,141,33)" rx="2" ry="2" />
<text  x="492.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="825.5" y="1605" width="0.2" height="15.0" fill="rgb(252,81,16)" rx="2" ry="2" />
<text  x="828.52" y="1615.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (1 samples, 0.02%)</title><rect x="857.5" y="1973" width="0.2" height="15.0" fill="rgb(206,109,23)" rx="2" ry="2" />
<text  x="860.48" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="687.9" y="1781" width="0.2" height="15.0" fill="rgb(250,50,4)" rx="2" ry="2" />
<text  x="690.94" y="1791.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="179.5" y="2021" width="0.2" height="15.0" fill="rgb(215,63,48)" rx="2" ry="2" />
<text  x="182.54" y="2031.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.02%)</title><rect x="239.7" y="1861" width="0.2" height="15.0" fill="rgb(250,185,2)" rx="2" ry="2" />
<text  x="242.69" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.5" y="1909" width="0.2" height="15.0" fill="rgb(219,26,31)" rx="2" ry="2" />
<text  x="160.50" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="710.2" y="1973" width="0.2" height="15.0" fill="rgb(223,125,2)" rx="2" ry="2" />
<text  x="713.18" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1017.1" y="1781" width="0.2" height="15.0" fill="rgb(230,203,1)" rx="2" ry="2" />
<text  x="1020.09" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.28%)</title><rect x="119.2" y="117" width="15.1" height="15.0" fill="rgb(231,207,3)" rx="2" ry="2" />
<text  x="122.19" y="127.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="694.3" y="1925" width="1.0" height="15.0" fill="rgb(254,146,34)" rx="2" ry="2" />
<text  x="697.30" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="534.1" y="1957" width="0.2" height="15.0" fill="rgb(238,11,46)" rx="2" ry="2" />
<text  x="537.09" y="1967.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="1106.8" y="1829" width="0.2" height="15.0" fill="rgb(220,218,51)" rx="2" ry="2" />
<text  x="1109.82" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="853.1" y="1909" width="1.0" height="15.0" fill="rgb(238,215,10)" rx="2" ry="2" />
<text  x="856.11" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="973.8" y="1909" width="0.2" height="15.0" fill="rgb(250,46,36)" rx="2" ry="2" />
<text  x="976.81" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="169.0" y="1877" width="0.2" height="15.0" fill="rgb(231,192,21)" rx="2" ry="2" />
<text  x="172.01" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="104.7" y="1941" width="0.4" height="15.0" fill="rgb(228,104,38)" rx="2" ry="2" />
<text  x="107.69" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1078.2" y="1765" width="0.2" height="15.0" fill="rgb(241,209,28)" rx="2" ry="2" />
<text  x="1081.23" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.5" y="309" width="0.2" height="15.0" fill="rgb(240,228,34)" rx="2" ry="2" />
<text  x="139.46" y="319.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="493.0" y="2021" width="0.4" height="15.0" fill="rgb(254,73,53)" rx="2" ry="2" />
<text  x="496.00" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="94.4" y="1925" width="0.6" height="15.0" fill="rgb(207,56,13)" rx="2" ry="2" />
<text  x="97.37" y="1935.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1127.5" y="1797" width="0.2" height="15.0" fill="rgb(228,91,4)" rx="2" ry="2" />
<text  x="1130.47" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1002.4" y="1749" width="0.2" height="15.0" fill="rgb(239,164,33)" rx="2" ry="2" />
<text  x="1005.40" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="242.7" y="1877" width="0.4" height="15.0" fill="rgb(247,127,45)" rx="2" ry="2" />
<text  x="245.66" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="842.2" y="1797" width="0.2" height="15.0" fill="rgb(243,74,33)" rx="2" ry="2" />
<text  x="845.19" y="1807.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="820.0" y="1509" width="0.2" height="15.0" fill="rgb(205,219,21)" rx="2" ry="2" />
<text  x="822.96" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1079.0" y="1637" width="0.2" height="15.0" fill="rgb(225,200,2)" rx="2" ry="2" />
<text  x="1082.03" y="1647.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1007.6" y="2005" width="0.2" height="15.0" fill="rgb(224,84,29)" rx="2" ry="2" />
<text  x="1010.56" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="486.6" y="1957" width="0.4" height="15.0" fill="rgb(234,100,40)" rx="2" ry="2" />
<text  x="489.65" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="78.1" y="1829" width="0.2" height="15.0" fill="rgb(236,97,49)" rx="2" ry="2" />
<text  x="81.09" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.15%)</title><rect x="728.0" y="1733" width="1.8" height="15.0" fill="rgb(223,77,1)" rx="2" ry="2" />
<text  x="731.05" y="1743.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="676.2" y="1637" width="0.2" height="15.0" fill="rgb(220,198,54)" rx="2" ry="2" />
<text  x="679.23" y="1647.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="939.1" y="1941" width="0.2" height="15.0" fill="rgb(236,199,40)" rx="2" ry="2" />
<text  x="942.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="419.0" y="1765" width="0.1" height="15.0" fill="rgb(243,163,54)" rx="2" ry="2" />
<text  x="421.95" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="39.8" y="1861" width="0.2" height="15.0" fill="rgb(229,111,48)" rx="2" ry="2" />
<text  x="42.78" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="914.1" y="1989" width="0.2" height="15.0" fill="rgb(248,66,13)" rx="2" ry="2" />
<text  x="917.06" y="1999.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="931.7" y="1893" width="0.2" height="15.0" fill="rgb(222,130,44)" rx="2" ry="2" />
<text  x="934.73" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="154.3" y="1973" width="0.4" height="15.0" fill="rgb(223,117,18)" rx="2" ry="2" />
<text  x="157.32" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="470.4" y="1877" width="0.2" height="15.0" fill="rgb(247,157,1)" rx="2" ry="2" />
<text  x="473.37" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="915.4" y="2037" width="1.0" height="15.0" fill="rgb(211,72,30)" rx="2" ry="2" />
<text  x="918.45" y="2047.5" ></text>
</g>
<g >
<title>___sys_sendmsg (378 samples, 6.36%)</title><rect x="265.3" y="1957" width="75.0" height="15.0" fill="rgb(205,46,0)" rx="2" ry="2" />
<text  x="268.30" y="1967.5" >___sys_s..</text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1145.9" y="2005" width="0.4" height="15.0" fill="rgb(246,79,9)" rx="2" ry="2" />
<text  x="1148.93" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="879.5" y="1909" width="0.2" height="15.0" fill="rgb(231,58,50)" rx="2" ry="2" />
<text  x="882.52" y="1919.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="701.4" y="1781" width="0.2" height="15.0" fill="rgb(238,13,2)" rx="2" ry="2" />
<text  x="704.44" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="638.7" y="1829" width="0.2" height="15.0" fill="rgb(222,26,13)" rx="2" ry="2" />
<text  x="641.71" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="87.4" y="1957" width="0.2" height="15.0" fill="rgb(205,14,25)" rx="2" ry="2" />
<text  x="90.42" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="597.0" y="1797" width="0.2" height="15.0" fill="rgb(253,201,42)" rx="2" ry="2" />
<text  x="600.02" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="913.9" y="1925" width="0.2" height="15.0" fill="rgb(251,132,37)" rx="2" ry="2" />
<text  x="916.86" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1175.9" y="1925" width="0.2" height="15.0" fill="rgb(217,147,33)" rx="2" ry="2" />
<text  x="1178.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="831.7" y="1845" width="0.2" height="15.0" fill="rgb(220,35,31)" rx="2" ry="2" />
<text  x="834.67" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="61.0" y="1669" width="0.2" height="15.0" fill="rgb(240,35,46)" rx="2" ry="2" />
<text  x="64.02" y="1679.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="332.0" y="1829" width="0.4" height="15.0" fill="rgb(231,165,3)" rx="2" ry="2" />
<text  x="335.00" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="511.1" y="2037" width="0.2" height="15.0" fill="rgb(206,202,7)" rx="2" ry="2" />
<text  x="514.06" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1126.1" y="1925" width="0.2" height="15.0" fill="rgb(214,186,29)" rx="2" ry="2" />
<text  x="1129.08" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="136.5" y="357" width="0.2" height="15.0" fill="rgb(210,189,46)" rx="2" ry="2" />
<text  x="139.46" y="367.5" ></text>
</g>
<g >
<title>__GI___getsockname (24 samples, 0.40%)</title><rect x="214.3" y="2037" width="4.7" height="15.0" fill="rgb(219,96,16)" rx="2" ry="2" />
<text  x="217.28" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="893.2" y="1989" width="0.2" height="15.0" fill="rgb(242,199,29)" rx="2" ry="2" />
<text  x="896.21" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (10 samples, 0.17%)</title><rect x="572.2" y="1957" width="2.0" height="15.0" fill="rgb(231,140,3)" rx="2" ry="2" />
<text  x="575.21" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="267.3" y="1701" width="0.2" height="15.0" fill="rgb(245,166,44)" rx="2" ry="2" />
<text  x="270.28" y="1711.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="825.3" y="1541" width="0.2" height="15.0" fill="rgb(245,117,20)" rx="2" ry="2" />
<text  x="828.32" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="662.3" y="1749" width="0.2" height="15.0" fill="rgb(231,145,16)" rx="2" ry="2" />
<text  x="665.34" y="1759.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="490.2" y="1669" width="0.2" height="15.0" fill="rgb(231,125,45)" rx="2" ry="2" />
<text  x="493.22" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1147.7" y="2053" width="0.2" height="15.0" fill="rgb(244,54,41)" rx="2" ry="2" />
<text  x="1150.72" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="167.0" y="1765" width="0.2" height="15.0" fill="rgb(221,124,5)" rx="2" ry="2" />
<text  x="170.03" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="755.4" y="1701" width="0.2" height="15.0" fill="rgb(236,138,4)" rx="2" ry="2" />
<text  x="758.44" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="947.4" y="1797" width="0.2" height="15.0" fill="rgb(224,89,18)" rx="2" ry="2" />
<text  x="950.41" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="317.5" y="1749" width="0.2" height="15.0" fill="rgb(212,82,43)" rx="2" ry="2" />
<text  x="320.51" y="1759.5" ></text>
</g>
<g >
<title>__fget_light (26 samples, 0.44%)</title><rect x="453.7" y="1957" width="5.2" height="15.0" fill="rgb(210,141,44)" rx="2" ry="2" />
<text  x="456.69" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (39 samples, 0.66%)</title><rect x="1107.2" y="1781" width="7.8" height="15.0" fill="rgb(216,40,52)" rx="2" ry="2" />
<text  x="1110.22" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="350.7" y="1973" width="0.2" height="15.0" fill="rgb(245,186,25)" rx="2" ry="2" />
<text  x="353.66" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="470.4" y="1893" width="0.2" height="15.0" fill="rgb(211,32,54)" rx="2" ry="2" />
<text  x="473.37" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="206.9" y="1957" width="0.2" height="15.0" fill="rgb(245,39,3)" rx="2" ry="2" />
<text  x="209.93" y="1967.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="836.2" y="1925" width="0.2" height="15.0" fill="rgb(221,106,5)" rx="2" ry="2" />
<text  x="839.24" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="302.8" y="1413" width="0.2" height="15.0" fill="rgb(228,136,32)" rx="2" ry="2" />
<text  x="305.82" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="329.8" y="1685" width="0.2" height="15.0" fill="rgb(213,166,31)" rx="2" ry="2" />
<text  x="332.81" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1127.7" y="1749" width="0.2" height="15.0" fill="rgb(206,92,44)" rx="2" ry="2" />
<text  x="1130.66" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="247.4" y="1637" width="0.2" height="15.0" fill="rgb(228,168,53)" rx="2" ry="2" />
<text  x="250.43" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="803.1" y="1509" width="0.2" height="15.0" fill="rgb(205,136,11)" rx="2" ry="2" />
<text  x="806.09" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (10 samples, 0.17%)</title><rect x="301.0" y="1621" width="2.0" height="15.0" fill="rgb(224,145,32)" rx="2" ry="2" />
<text  x="304.03" y="1631.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="408.6" y="1893" width="0.2" height="15.0" fill="rgb(233,103,37)" rx="2" ry="2" />
<text  x="411.63" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="157.5" y="1509" width="0.2" height="15.0" fill="rgb(221,18,26)" rx="2" ry="2" />
<text  x="160.50" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.78%)</title><rect x="118.8" y="1573" width="21.0" height="15.0" fill="rgb(220,207,13)" rx="2" ry="2" />
<text  x="121.79" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="852.7" y="1797" width="0.2" height="15.0" fill="rgb(206,181,23)" rx="2" ry="2" />
<text  x="855.72" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="163.3" y="1749" width="0.2" height="15.0" fill="rgb(227,46,17)" rx="2" ry="2" />
<text  x="166.26" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="852.7" y="1893" width="0.2" height="15.0" fill="rgb(220,11,53)" rx="2" ry="2" />
<text  x="855.72" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="288.5" y="1765" width="0.2" height="15.0" fill="rgb(227,209,25)" rx="2" ry="2" />
<text  x="291.52" y="1775.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="551.2" y="1973" width="0.4" height="15.0" fill="rgb(240,67,29)" rx="2" ry="2" />
<text  x="554.16" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="282.2" y="1813" width="1.0" height="15.0" fill="rgb(205,74,22)" rx="2" ry="2" />
<text  x="285.17" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1106.6" y="1845" width="0.2" height="15.0" fill="rgb(217,169,27)" rx="2" ry="2" />
<text  x="1109.62" y="1855.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="349.7" y="2037" width="0.4" height="15.0" fill="rgb(215,196,4)" rx="2" ry="2" />
<text  x="352.67" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="610.3" y="1749" width="0.2" height="15.0" fill="rgb(245,0,30)" rx="2" ry="2" />
<text  x="613.32" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (961 samples, 16.17%)</title><rect x="706.4" y="2037" width="190.8" height="15.0" fill="rgb(205,69,30)" rx="2" ry="2" />
<text  x="709.41" y="2047.5" >facebook::memcache::McSe..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="279.0" y="1829" width="0.2" height="15.0" fill="rgb(252,202,27)" rx="2" ry="2" />
<text  x="281.99" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="322.3" y="1813" width="0.6" height="15.0" fill="rgb(214,130,30)" rx="2" ry="2" />
<text  x="325.27" y="1823.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="401.5" y="1877" width="0.4" height="15.0" fill="rgb(221,24,22)" rx="2" ry="2" />
<text  x="404.48" y="1887.5" ></text>
</g>
<g >
<title>unmap_single (1 samples, 0.02%)</title><rect x="602.4" y="1813" width="0.2" height="15.0" fill="rgb(237,71,31)" rx="2" ry="2" />
<text  x="605.38" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="72.1" y="1717" width="0.2" height="15.0" fill="rgb(207,37,1)" rx="2" ry="2" />
<text  x="75.14" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="329.4" y="1493" width="0.2" height="15.0" fill="rgb(207,228,44)" rx="2" ry="2" />
<text  x="332.42" y="1503.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1115.0" y="1781" width="0.4" height="15.0" fill="rgb(221,76,2)" rx="2" ry="2" />
<text  x="1117.96" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="491.0" y="1733" width="0.2" height="15.0" fill="rgb(233,116,38)" rx="2" ry="2" />
<text  x="494.01" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (3 samples, 0.05%)</title><rect x="973.4" y="2005" width="0.6" height="15.0" fill="rgb(218,68,23)" rx="2" ry="2" />
<text  x="976.42" y="2015.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1179.5" y="2053" width="0.2" height="15.0" fill="rgb(230,44,51)" rx="2" ry="2" />
<text  x="1182.48" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="491.8" y="1781" width="0.2" height="15.0" fill="rgb(231,33,14)" rx="2" ry="2" />
<text  x="494.81" y="1791.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="606.9" y="1829" width="0.2" height="15.0" fill="rgb(250,129,28)" rx="2" ry="2" />
<text  x="609.95" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (20 samples, 0.34%)</title><rect x="310.8" y="1669" width="3.9" height="15.0" fill="rgb(250,151,16)" rx="2" ry="2" />
<text  x="313.76" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="852.1" y="1893" width="0.6" height="15.0" fill="rgb(229,210,42)" rx="2" ry="2" />
<text  x="855.12" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="753.9" y="1621" width="0.2" height="15.0" fill="rgb(241,147,15)" rx="2" ry="2" />
<text  x="756.85" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="73.7" y="1925" width="0.2" height="15.0" fill="rgb(228,135,22)" rx="2" ry="2" />
<text  x="76.72" y="1935.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="529.1" y="1877" width="0.2" height="15.0" fill="rgb(216,162,42)" rx="2" ry="2" />
<text  x="532.13" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1072.1" y="1653" width="0.2" height="15.0" fill="rgb(235,212,18)" rx="2" ry="2" />
<text  x="1075.08" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1106.6" y="1733" width="0.2" height="15.0" fill="rgb(249,122,38)" rx="2" ry="2" />
<text  x="1109.62" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="118.8" y="1397" width="19.4" height="15.0" fill="rgb(249,180,20)" rx="2" ry="2" />
<text  x="121.79" y="1407.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="283.0" y="1781" width="0.2" height="15.0" fill="rgb(213,59,9)" rx="2" ry="2" />
<text  x="285.96" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="166.8" y="1877" width="0.2" height="15.0" fill="rgb(237,195,42)" rx="2" ry="2" />
<text  x="169.83" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="486.8" y="1733" width="0.2" height="15.0" fill="rgb(231,191,13)" rx="2" ry="2" />
<text  x="489.84" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="831.7" y="1765" width="0.2" height="15.0" fill="rgb(235,33,8)" rx="2" ry="2" />
<text  x="834.67" y="1775.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="522.4" y="1957" width="0.2" height="15.0" fill="rgb(236,83,28)" rx="2" ry="2" />
<text  x="525.38" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="378.3" y="1925" width="0.4" height="15.0" fill="rgb(223,215,7)" rx="2" ry="2" />
<text  x="381.25" y="1935.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="203.2" y="2021" width="0.4" height="15.0" fill="rgb(223,23,36)" rx="2" ry="2" />
<text  x="206.16" y="2031.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="94.2" y="1877" width="0.2" height="15.0" fill="rgb(224,227,2)" rx="2" ry="2" />
<text  x="97.17" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="138.0" y="965" width="0.2" height="15.0" fill="rgb(213,69,37)" rx="2" ry="2" />
<text  x="141.05" y="975.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="700.6" y="1957" width="0.2" height="15.0" fill="rgb(252,136,29)" rx="2" ry="2" />
<text  x="703.65" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="90.6" y="1909" width="0.4" height="15.0" fill="rgb(222,127,22)" rx="2" ry="2" />
<text  x="93.60" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="753.5" y="1669" width="0.2" height="15.0" fill="rgb(223,174,17)" rx="2" ry="2" />
<text  x="756.46" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="486.8" y="1781" width="0.2" height="15.0" fill="rgb(221,203,15)" rx="2" ry="2" />
<text  x="489.84" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="277" width="16.9" height="15.0" fill="rgb(206,28,47)" rx="2" ry="2" />
<text  x="122.19" y="287.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="849.5" y="1893" width="0.2" height="15.0" fill="rgb(229,57,5)" rx="2" ry="2" />
<text  x="852.54" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="659.2" y="1701" width="0.2" height="15.0" fill="rgb(220,159,3)" rx="2" ry="2" />
<text  x="662.16" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="240.3" y="1829" width="0.2" height="15.0" fill="rgb(206,127,49)" rx="2" ry="2" />
<text  x="243.28" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="852.7" y="1909" width="0.2" height="15.0" fill="rgb(238,12,20)" rx="2" ry="2" />
<text  x="855.72" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="917.6" y="1845" width="0.2" height="15.0" fill="rgb(220,215,15)" rx="2" ry="2" />
<text  x="920.63" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="714.3" y="1941" width="0.2" height="15.0" fill="rgb(253,223,10)" rx="2" ry="2" />
<text  x="717.35" y="1951.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="855.9" y="1909" width="0.2" height="15.0" fill="rgb(252,76,18)" rx="2" ry="2" />
<text  x="858.89" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="350.7" y="1925" width="0.2" height="15.0" fill="rgb(211,26,35)" rx="2" ry="2" />
<text  x="353.66" y="1935.5" ></text>
</g>
<g >
<title>new_inode_pseudo (49 samples, 0.82%)</title><rect x="394.9" y="1941" width="9.8" height="15.0" fill="rgb(214,13,25)" rx="2" ry="2" />
<text  x="397.93" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init_header (1 samples, 0.02%)</title><rect x="162.9" y="1877" width="0.2" height="15.0" fill="rgb(252,23,16)" rx="2" ry="2" />
<text  x="165.86" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="870.8" y="1989" width="0.2" height="15.0" fill="rgb(238,197,25)" rx="2" ry="2" />
<text  x="873.78" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="472.9" y="1957" width="0.2" height="15.0" fill="rgb(227,226,26)" rx="2" ry="2" />
<text  x="475.95" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="574.6" y="1989" width="0.6" height="15.0" fill="rgb(212,201,44)" rx="2" ry="2" />
<text  x="577.59" y="1999.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (39 samples, 0.66%)</title><rect x="1107.2" y="1749" width="7.8" height="15.0" fill="rgb(242,97,45)" rx="2" ry="2" />
<text  x="1110.22" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="283.0" y="1669" width="0.2" height="15.0" fill="rgb(249,60,2)" rx="2" ry="2" />
<text  x="285.96" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="460.6" y="1973" width="0.2" height="15.0" fill="rgb(243,182,48)" rx="2" ry="2" />
<text  x="463.64" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1078.6" y="1621" width="0.2" height="15.0" fill="rgb(227,91,32)" rx="2" ry="2" />
<text  x="1081.63" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="894.6" y="1925" width="0.2" height="15.0" fill="rgb(235,156,0)" rx="2" ry="2" />
<text  x="897.60" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="178.9" y="1861" width="0.2" height="15.0" fill="rgb(227,70,52)" rx="2" ry="2" />
<text  x="181.94" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="190.5" y="1973" width="0.5" height="15.0" fill="rgb(220,159,30)" rx="2" ry="2" />
<text  x="193.45" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="459.6" y="1909" width="0.2" height="15.0" fill="rgb(208,165,3)" rx="2" ry="2" />
<text  x="462.65" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="818.8" y="1717" width="0.2" height="15.0" fill="rgb(236,128,52)" rx="2" ry="2" />
<text  x="821.77" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="739.8" y="1509" width="0.2" height="15.0" fill="rgb(215,116,18)" rx="2" ry="2" />
<text  x="742.76" y="1519.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (24 samples, 0.40%)</title><rect x="979.0" y="1989" width="4.7" height="15.0" fill="rgb(236,60,0)" rx="2" ry="2" />
<text  x="981.97" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="62.2" y="1877" width="0.2" height="15.0" fill="rgb(220,42,0)" rx="2" ry="2" />
<text  x="65.21" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="842.2" y="1749" width="0.2" height="15.0" fill="rgb(253,12,32)" rx="2" ry="2" />
<text  x="845.19" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (60 samples, 1.01%)</title><rect x="498.4" y="2021" width="11.9" height="15.0" fill="rgb(250,181,3)" rx="2" ry="2" />
<text  x="501.36" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="662.3" y="1893" width="0.2" height="15.0" fill="rgb(252,193,16)" rx="2" ry="2" />
<text  x="665.34" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.5" y="1429" width="0.2" height="15.0" fill="rgb(208,227,8)" rx="2" ry="2" />
<text  x="828.52" y="1439.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="606.9" y="1813" width="0.2" height="15.0" fill="rgb(213,129,13)" rx="2" ry="2" />
<text  x="609.95" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.6" y="1973" width="0.2" height="15.0" fill="rgb(213,92,44)" rx="2" ry="2" />
<text  x="577.59" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="662.3" y="1605" width="0.2" height="15.0" fill="rgb(236,57,16)" rx="2" ry="2" />
<text  x="665.34" y="1615.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="702.2" y="1973" width="0.2" height="15.0" fill="rgb(212,40,21)" rx="2" ry="2" />
<text  x="705.24" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="917.4" y="2005" width="0.4" height="15.0" fill="rgb(244,114,42)" rx="2" ry="2" />
<text  x="920.43" y="2015.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1113.2" y="1493" width="0.2" height="15.0" fill="rgb(246,42,21)" rx="2" ry="2" />
<text  x="1116.17" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="330.0" y="1749" width="0.2" height="15.0" fill="rgb(209,126,8)" rx="2" ry="2" />
<text  x="333.01" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="136.5" y="373" width="0.2" height="15.0" fill="rgb(221,186,0)" rx="2" ry="2" />
<text  x="139.46" y="383.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (7 samples, 0.12%)</title><rect x="965.7" y="2021" width="1.4" height="15.0" fill="rgb(206,156,50)" rx="2" ry="2" />
<text  x="968.67" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1005.6" y="1973" width="0.2" height="15.0" fill="rgb(212,167,10)" rx="2" ry="2" />
<text  x="1008.58" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="271.5" y="1877" width="0.1" height="15.0" fill="rgb(205,113,43)" rx="2" ry="2" />
<text  x="274.45" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_fin (316 samples, 5.32%)</title><rect x="756.2" y="1733" width="62.8" height="15.0" fill="rgb(213,187,12)" rx="2" ry="2" />
<text  x="759.23" y="1743.5" >tcp_se..</text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="1048.7" y="1893" width="0.2" height="15.0" fill="rgb(226,20,40)" rx="2" ry="2" />
<text  x="1051.65" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="463.4" y="1845" width="0.2" height="15.0" fill="rgb(208,91,27)" rx="2" ry="2" />
<text  x="466.42" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="128.5" y="37" width="0.2" height="15.0" fill="rgb(221,95,17)" rx="2" ry="2" />
<text  x="131.52" y="47.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="196.4" y="1557" width="0.2" height="15.0" fill="rgb(239,14,10)" rx="2" ry="2" />
<text  x="199.41" y="1567.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="936.5" y="1621" width="0.2" height="15.0" fill="rgb(220,189,26)" rx="2" ry="2" />
<text  x="939.49" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="762.6" y="1605" width="0.4" height="15.0" fill="rgb(245,190,20)" rx="2" ry="2" />
<text  x="765.59" y="1615.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="883.5" y="1845" width="0.2" height="15.0" fill="rgb(231,172,35)" rx="2" ry="2" />
<text  x="886.49" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="945.4" y="1973" width="0.2" height="15.0" fill="rgb(243,135,33)" rx="2" ry="2" />
<text  x="948.42" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (6 samples, 0.10%)</title><rect x="533.1" y="1989" width="1.2" height="15.0" fill="rgb(236,111,11)" rx="2" ry="2" />
<text  x="536.10" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="519.2" y="1941" width="0.2" height="15.0" fill="rgb(216,228,47)" rx="2" ry="2" />
<text  x="522.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="136.1" y="101" width="0.2" height="15.0" fill="rgb(242,204,8)" rx="2" ry="2" />
<text  x="139.06" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1137.2" y="2037" width="0.2" height="15.0" fill="rgb(215,41,34)" rx="2" ry="2" />
<text  x="1140.19" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="510.3" y="1925" width="0.2" height="15.0" fill="rgb(253,46,44)" rx="2" ry="2" />
<text  x="513.27" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="206.9" y="1733" width="0.2" height="15.0" fill="rgb(208,226,38)" rx="2" ry="2" />
<text  x="209.93" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1017.1" y="1845" width="0.2" height="15.0" fill="rgb(218,136,47)" rx="2" ry="2" />
<text  x="1020.09" y="1855.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (54 samples, 0.91%)</title><rect x="461.6" y="1973" width="10.8" height="15.0" fill="rgb(243,46,5)" rx="2" ry="2" />
<text  x="464.63" y="1983.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="801.1" y="1669" width="0.4" height="15.0" fill="rgb(248,121,21)" rx="2" ry="2" />
<text  x="804.10" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="646.5" y="1749" width="0.2" height="15.0" fill="rgb(235,99,16)" rx="2" ry="2" />
<text  x="649.45" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (1 samples, 0.02%)</title><rect x="1148.3" y="2053" width="0.2" height="15.0" fill="rgb(205,223,23)" rx="2" ry="2" />
<text  x="1151.31" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="731.6" y="1381" width="0.2" height="15.0" fill="rgb(210,90,44)" rx="2" ry="2" />
<text  x="734.62" y="1391.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="831.1" y="1861" width="0.2" height="15.0" fill="rgb(228,223,7)" rx="2" ry="2" />
<text  x="834.08" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="289.3" y="1797" width="0.2" height="15.0" fill="rgb(248,151,44)" rx="2" ry="2" />
<text  x="292.32" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="543.8" y="1477" width="0.2" height="15.0" fill="rgb(224,0,11)" rx="2" ry="2" />
<text  x="546.82" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="156.3" y="1973" width="0.2" height="15.0" fill="rgb(211,90,23)" rx="2" ry="2" />
<text  x="159.31" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (337 samples, 5.67%)</title><rect x="41.2" y="2021" width="66.9" height="15.0" fill="rgb(233,30,50)" rx="2" ry="2" />
<text  x="44.17" y="2031.5" >folly::..</text>
</g>
<g >
<title>do_syscall_64 (65 samples, 1.09%)</title><rect x="584.5" y="1909" width="12.9" height="15.0" fill="rgb(252,123,35)" rx="2" ry="2" />
<text  x="587.52" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1156.5" y="1797" width="0.1" height="15.0" fill="rgb(251,197,11)" rx="2" ry="2" />
<text  x="1159.45" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="247.4" y="1525" width="0.2" height="15.0" fill="rgb(236,201,19)" rx="2" ry="2" />
<text  x="250.43" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (41 samples, 0.69%)</title><rect x="188.5" y="2021" width="8.1" height="15.0" fill="rgb(224,33,41)" rx="2" ry="2" />
<text  x="191.47" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="615.5" y="1973" width="0.4" height="15.0" fill="rgb(243,225,9)" rx="2" ry="2" />
<text  x="618.48" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="136.1" y="117" width="0.2" height="15.0" fill="rgb(207,102,39)" rx="2" ry="2" />
<text  x="139.06" y="127.5" ></text>
</g>
<g >
<title>__dentry_kill (70 samples, 1.18%)</title><rect x="727.4" y="1765" width="13.9" height="15.0" fill="rgb(242,211,42)" rx="2" ry="2" />
<text  x="730.45" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1177.1" y="1925" width="0.2" height="15.0" fill="rgb(227,160,6)" rx="2" ry="2" />
<text  x="1180.10" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="170.4" y="1893" width="0.2" height="15.0" fill="rgb(237,90,0)" rx="2" ry="2" />
<text  x="173.40" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.8" y="1957" width="0.2" height="15.0" fill="rgb(243,138,27)" rx="2" ry="2" />
<text  x="578.78" y="1967.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(230,206,24)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>netdev_pick_tx (12 samples, 0.20%)</title><rect x="777.9" y="1557" width="2.4" height="15.0" fill="rgb(230,169,23)" rx="2" ry="2" />
<text  x="780.87" y="1567.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (4 samples, 0.07%)</title><rect x="57.6" y="1877" width="0.8" height="15.0" fill="rgb(247,93,13)" rx="2" ry="2" />
<text  x="60.64" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="140.8" y="1685" width="0.2" height="15.0" fill="rgb(206,189,39)" rx="2" ry="2" />
<text  x="143.82" y="1695.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.02%)</title><rect x="416.0" y="1909" width="0.2" height="15.0" fill="rgb(219,61,17)" rx="2" ry="2" />
<text  x="418.97" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="884.7" y="1557" width="0.2" height="15.0" fill="rgb(228,193,11)" rx="2" ry="2" />
<text  x="887.68" y="1567.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="734.4" y="1621" width="0.2" height="15.0" fill="rgb(233,106,16)" rx="2" ry="2" />
<text  x="737.40" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="167.0" y="1845" width="0.2" height="15.0" fill="rgb(247,141,10)" rx="2" ry="2" />
<text  x="170.03" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="662.3" y="1813" width="0.2" height="15.0" fill="rgb(250,53,1)" rx="2" ry="2" />
<text  x="665.34" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="743.1" y="1669" width="0.2" height="15.0" fill="rgb(247,167,54)" rx="2" ry="2" />
<text  x="746.13" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="269.3" y="1845" width="0.2" height="15.0" fill="rgb(232,165,13)" rx="2" ry="2" />
<text  x="272.27" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="901.2" y="1973" width="0.4" height="15.0" fill="rgb(248,46,0)" rx="2" ry="2" />
<text  x="904.15" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="1090.3" y="1717" width="0.2" height="15.0" fill="rgb(225,30,32)" rx="2" ry="2" />
<text  x="1093.34" y="1727.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="726.1" y="1797" width="0.4" height="15.0" fill="rgb(245,140,45)" rx="2" ry="2" />
<text  x="729.06" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="694.1" y="1509" width="0.2" height="15.0" fill="rgb(212,166,52)" rx="2" ry="2" />
<text  x="697.10" y="1519.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="133.3" y="37" width="0.2" height="15.0" fill="rgb(235,229,43)" rx="2" ry="2" />
<text  x="136.28" y="47.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="736.6" y="1653" width="0.6" height="15.0" fill="rgb(206,130,22)" rx="2" ry="2" />
<text  x="739.58" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="706.0" y="1957" width="0.2" height="15.0" fill="rgb(249,150,45)" rx="2" ry="2" />
<text  x="709.01" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="247.8" y="1893" width="0.2" height="15.0" fill="rgb(205,18,12)" rx="2" ry="2" />
<text  x="250.83" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.41%)</title><rect x="119.2" y="229" width="16.7" height="15.0" fill="rgb(238,7,50)" rx="2" ry="2" />
<text  x="122.19" y="239.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="86.0" y="1925" width="0.2" height="15.0" fill="rgb(207,111,30)" rx="2" ry="2" />
<text  x="89.03" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="167.0" y="1813" width="0.2" height="15.0" fill="rgb(231,56,3)" rx="2" ry="2" />
<text  x="170.03" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="822.5" y="1653" width="0.2" height="15.0" fill="rgb(239,68,21)" rx="2" ry="2" />
<text  x="825.54" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="96.6" y="1973" width="0.2" height="15.0" fill="rgb(210,126,36)" rx="2" ry="2" />
<text  x="99.55" y="1983.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="753.9" y="1701" width="0.2" height="15.0" fill="rgb(205,112,2)" rx="2" ry="2" />
<text  x="756.85" y="1711.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="676.2" y="1589" width="0.2" height="15.0" fill="rgb(221,159,16)" rx="2" ry="2" />
<text  x="679.23" y="1599.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="351.3" y="2037" width="0.2" height="15.0" fill="rgb(231,56,7)" rx="2" ry="2" />
<text  x="354.26" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="844.4" y="1717" width="0.2" height="15.0" fill="rgb(219,216,38)" rx="2" ry="2" />
<text  x="847.38" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="628.4" y="1925" width="0.2" height="15.0" fill="rgb(232,9,50)" rx="2" ry="2" />
<text  x="631.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="987.3" y="1909" width="0.4" height="15.0" fill="rgb(254,81,52)" rx="2" ry="2" />
<text  x="990.31" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (4 samples, 0.07%)</title><rect x="566.6" y="1989" width="0.8" height="15.0" fill="rgb(206,18,50)" rx="2" ry="2" />
<text  x="569.65" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="191.8" y="1957" width="1.2" height="15.0" fill="rgb(210,71,32)" rx="2" ry="2" />
<text  x="194.84" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="505.3" y="1605" width="0.2" height="15.0" fill="rgb(223,164,20)" rx="2" ry="2" />
<text  x="508.31" y="1615.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="408.4" y="1893" width="0.2" height="15.0" fill="rgb(234,163,22)" rx="2" ry="2" />
<text  x="411.43" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="986.3" y="1909" width="0.4" height="15.0" fill="rgb(207,224,47)" rx="2" ry="2" />
<text  x="989.32" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="94.8" y="1893" width="0.2" height="15.0" fill="rgb(240,202,43)" rx="2" ry="2" />
<text  x="97.77" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="118.8" y="965" width="18.3" height="15.0" fill="rgb(223,135,3)" rx="2" ry="2" />
<text  x="121.79" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="899.6" y="1797" width="0.2" height="15.0" fill="rgb(217,174,38)" rx="2" ry="2" />
<text  x="902.57" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (12 samples, 0.20%)</title><rect x="649.6" y="1989" width="2.4" height="15.0" fill="rgb(224,24,37)" rx="2" ry="2" />
<text  x="652.63" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="61.0" y="1845" width="0.2" height="15.0" fill="rgb(211,77,11)" rx="2" ry="2" />
<text  x="64.02" y="1855.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(225,181,4)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="536.5" y="1845" width="0.2" height="15.0" fill="rgb(228,67,35)" rx="2" ry="2" />
<text  x="539.47" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="676.2" y="1781" width="0.2" height="15.0" fill="rgb(238,19,53)" rx="2" ry="2" />
<text  x="679.23" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (8 samples, 0.13%)</title><rect x="578.4" y="2005" width="1.5" height="15.0" fill="rgb(208,184,42)" rx="2" ry="2" />
<text  x="581.36" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="136.5" y="85" width="0.2" height="15.0" fill="rgb(229,50,26)" rx="2" ry="2" />
<text  x="139.46" y="95.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="612.5" y="1893" width="0.2" height="15.0" fill="rgb(227,109,10)" rx="2" ry="2" />
<text  x="615.51" y="1903.5" ></text>
</g>
<g >
<title>dput (88 samples, 1.48%)</title><rect x="726.9" y="1797" width="17.4" height="15.0" fill="rgb(241,54,24)" rx="2" ry="2" />
<text  x="729.85" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="491.6" y="1893" width="0.2" height="15.0" fill="rgb(245,77,9)" rx="2" ry="2" />
<text  x="494.61" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="178.9" y="1829" width="0.2" height="15.0" fill="rgb(225,73,40)" rx="2" ry="2" />
<text  x="181.94" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="654.4" y="1941" width="0.2" height="15.0" fill="rgb(222,190,38)" rx="2" ry="2" />
<text  x="657.39" y="1951.5" ></text>
</g>
<g >
<title>sys_close (25 samples, 0.42%)</title><rect x="826.1" y="1861" width="5.0" height="15.0" fill="rgb(249,163,16)" rx="2" ry="2" />
<text  x="829.11" y="1871.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="97.7" y="1957" width="0.4" height="15.0" fill="rgb(245,149,41)" rx="2" ry="2" />
<text  x="100.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="975.0" y="2005" width="0.2" height="15.0" fill="rgb(216,193,26)" rx="2" ry="2" />
<text  x="978.00" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="898.4" y="2021" width="1.4" height="15.0" fill="rgb(217,31,43)" rx="2" ry="2" />
<text  x="901.37" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="832.1" y="1781" width="0.2" height="15.0" fill="rgb(235,88,44)" rx="2" ry="2" />
<text  x="835.07" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="85.2" y="1925" width="0.2" height="15.0" fill="rgb(253,141,2)" rx="2" ry="2" />
<text  x="88.24" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="662.3" y="1701" width="0.2" height="15.0" fill="rgb(230,217,1)" rx="2" ry="2" />
<text  x="665.34" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="241.7" y="1733" width="0.2" height="15.0" fill="rgb(224,141,5)" rx="2" ry="2" />
<text  x="244.67" y="1743.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="418.2" y="1877" width="0.2" height="15.0" fill="rgb(217,23,26)" rx="2" ry="2" />
<text  x="421.16" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="317.5" y="1781" width="0.2" height="15.0" fill="rgb(210,170,41)" rx="2" ry="2" />
<text  x="320.51" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="571.2" y="1989" width="0.2" height="15.0" fill="rgb(254,155,25)" rx="2" ry="2" />
<text  x="574.21" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="613.9" y="1973" width="0.2" height="15.0" fill="rgb(213,181,52)" rx="2" ry="2" />
<text  x="616.90" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="88.0" y="1941" width="0.4" height="15.0" fill="rgb(218,111,30)" rx="2" ry="2" />
<text  x="91.02" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2 samples, 0.03%)</title><rect x="997.4" y="1973" width="0.4" height="15.0" fill="rgb(245,121,30)" rx="2" ry="2" />
<text  x="1000.44" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="630.4" y="1765" width="0.2" height="15.0" fill="rgb(234,196,1)" rx="2" ry="2" />
<text  x="633.37" y="1775.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (42 samples, 0.71%)</title><rect x="785.4" y="1541" width="8.4" height="15.0" fill="rgb(215,122,5)" rx="2" ry="2" />
<text  x="788.42" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (14 samples, 0.24%)</title><rect x="51.3" y="1973" width="2.8" height="15.0" fill="rgb(221,88,7)" rx="2" ry="2" />
<text  x="54.29" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1078.4" y="1797" width="0.2" height="15.0" fill="rgb(213,51,19)" rx="2" ry="2" />
<text  x="1081.43" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="156.7" y="1957" width="0.2" height="15.0" fill="rgb(205,96,43)" rx="2" ry="2" />
<text  x="159.71" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="676.2" y="1925" width="0.2" height="15.0" fill="rgb(221,61,29)" rx="2" ry="2" />
<text  x="679.23" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="698.5" y="1893" width="0.2" height="15.0" fill="rgb(242,40,16)" rx="2" ry="2" />
<text  x="701.47" y="1903.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="870.0" y="1893" width="0.2" height="15.0" fill="rgb(231,125,33)" rx="2" ry="2" />
<text  x="872.99" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (15 samples, 0.25%)</title><rect x="1115.6" y="1925" width="2.9" height="15.0" fill="rgb(205,112,11)" rx="2" ry="2" />
<text  x="1118.56" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="79.9" y="1765" width="0.4" height="15.0" fill="rgb(251,42,12)" rx="2" ry="2" />
<text  x="82.88" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1182.7" y="2021" width="0.2" height="15.0" fill="rgb(241,172,4)" rx="2" ry="2" />
<text  x="1185.65" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (2 samples, 0.03%)</title><rect x="668.7" y="1957" width="0.4" height="15.0" fill="rgb(232,105,6)" rx="2" ry="2" />
<text  x="671.69" y="1967.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="675.0" y="1781" width="0.2" height="15.0" fill="rgb(246,177,42)" rx="2" ry="2" />
<text  x="678.04" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="392.2" y="1845" width="0.1" height="15.0" fill="rgb(221,106,49)" rx="2" ry="2" />
<text  x="395.15" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="134.3" y="85" width="0.2" height="15.0" fill="rgb(220,108,8)" rx="2" ry="2" />
<text  x="137.27" y="95.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="418.2" y="1957" width="0.2" height="15.0" fill="rgb(206,148,41)" rx="2" ry="2" />
<text  x="421.16" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (8 samples, 0.13%)</title><rect x="1145.3" y="2037" width="1.6" height="15.0" fill="rgb(242,66,14)" rx="2" ry="2" />
<text  x="1148.33" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="207.3" y="1973" width="0.2" height="15.0" fill="rgb(227,69,15)" rx="2" ry="2" />
<text  x="210.33" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="300.6" y="1461" width="0.2" height="15.0" fill="rgb(238,219,7)" rx="2" ry="2" />
<text  x="303.63" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="443.8" y="1877" width="0.2" height="15.0" fill="rgb(247,178,23)" rx="2" ry="2" />
<text  x="446.77" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="699.1" y="1877" width="0.8" height="15.0" fill="rgb(239,158,49)" rx="2" ry="2" />
<text  x="702.06" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="294.3" y="1605" width="0.2" height="15.0" fill="rgb(254,112,52)" rx="2" ry="2" />
<text  x="297.28" y="1615.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="156.3" y="1605" width="0.2" height="15.0" fill="rgb(213,112,20)" rx="2" ry="2" />
<text  x="159.31" y="1615.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="12.6" y="1861" width="1.0" height="15.0" fill="rgb(222,132,49)" rx="2" ry="2" />
<text  x="15.58" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="510.9" y="1941" width="0.2" height="15.0" fill="rgb(237,211,24)" rx="2" ry="2" />
<text  x="513.86" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="803.1" y="1605" width="0.2" height="15.0" fill="rgb(230,19,34)" rx="2" ry="2" />
<text  x="806.09" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="856.7" y="1749" width="0.2" height="15.0" fill="rgb(214,214,35)" rx="2" ry="2" />
<text  x="859.69" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="982.3" y="1941" width="0.8" height="15.0" fill="rgb(247,36,8)" rx="2" ry="2" />
<text  x="985.35" y="1951.5" ></text>
</g>
<g >
<title>event_assign (3 samples, 0.05%)</title><rect x="960.9" y="2005" width="0.6" height="15.0" fill="rgb(218,103,51)" rx="2" ry="2" />
<text  x="963.91" y="2015.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="138.8" y="1333" width="0.2" height="15.0" fill="rgb(247,57,54)" rx="2" ry="2" />
<text  x="141.84" y="1343.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="562.3" y="1749" width="0.2" height="15.0" fill="rgb(205,199,39)" rx="2" ry="2" />
<text  x="565.28" y="1759.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="825.3" y="1589" width="0.2" height="15.0" fill="rgb(232,21,41)" rx="2" ry="2" />
<text  x="828.32" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="491.8" y="1973" width="0.2" height="15.0" fill="rgb(207,70,5)" rx="2" ry="2" />
<text  x="494.81" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="597.0" y="1765" width="0.2" height="15.0" fill="rgb(232,116,19)" rx="2" ry="2" />
<text  x="600.02" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="822.5" y="1749" width="0.2" height="15.0" fill="rgb(234,52,50)" rx="2" ry="2" />
<text  x="825.54" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="740.9" y="1477" width="0.2" height="15.0" fill="rgb(224,195,31)" rx="2" ry="2" />
<text  x="743.95" y="1487.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (4 samples, 0.07%)</title><rect x="314.7" y="1685" width="0.8" height="15.0" fill="rgb(248,227,8)" rx="2" ry="2" />
<text  x="317.73" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (1 samples, 0.02%)</title><rect x="181.3" y="2021" width="0.2" height="15.0" fill="rgb(228,22,8)" rx="2" ry="2" />
<text  x="184.32" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="659.2" y="1989" width="0.2" height="15.0" fill="rgb(227,128,2)" rx="2" ry="2" />
<text  x="662.16" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="762.6" y="1525" width="0.4" height="15.0" fill="rgb(234,27,34)" rx="2" ry="2" />
<text  x="765.59" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (129 samples, 2.17%)</title><rect x="117.8" y="1893" width="25.6" height="15.0" fill="rgb(214,26,12)" rx="2" ry="2" />
<text  x="120.80" y="1903.5" >[..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="247.8" y="1909" width="0.2" height="15.0" fill="rgb(226,207,7)" rx="2" ry="2" />
<text  x="250.83" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (45 samples, 0.76%)</title><rect x="63.4" y="1957" width="8.9" height="15.0" fill="rgb(243,221,53)" rx="2" ry="2" />
<text  x="66.40" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="825.3" y="1653" width="0.8" height="15.0" fill="rgb(212,22,31)" rx="2" ry="2" />
<text  x="828.32" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1079.0" y="1621" width="0.2" height="15.0" fill="rgb(228,69,0)" rx="2" ry="2" />
<text  x="1082.03" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1052.0" y="1733" width="0.2" height="15.0" fill="rgb(207,48,47)" rx="2" ry="2" />
<text  x="1055.03" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="504.9" y="1877" width="0.8" height="15.0" fill="rgb(239,72,23)" rx="2" ry="2" />
<text  x="507.91" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="112.2" y="1973" width="0.2" height="15.0" fill="rgb(224,31,54)" rx="2" ry="2" />
<text  x="115.24" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="562.3" y="1861" width="0.2" height="15.0" fill="rgb(248,181,1)" rx="2" ry="2" />
<text  x="565.28" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="196.2" y="1989" width="0.2" height="15.0" fill="rgb(215,198,21)" rx="2" ry="2" />
<text  x="199.21" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="706.0" y="1941" width="0.2" height="15.0" fill="rgb(245,0,37)" rx="2" ry="2" />
<text  x="709.01" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="613.1" y="1749" width="0.2" height="15.0" fill="rgb(208,102,13)" rx="2" ry="2" />
<text  x="616.10" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="155.9" y="1941" width="0.2" height="15.0" fill="rgb(223,178,39)" rx="2" ry="2" />
<text  x="158.91" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.7" y="1877" width="0.2" height="15.0" fill="rgb(244,205,27)" rx="2" ry="2" />
<text  x="539.67" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="1152.1" y="1925" width="0.2" height="15.0" fill="rgb(228,110,18)" rx="2" ry="2" />
<text  x="1155.08" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="947.4" y="1893" width="0.2" height="15.0" fill="rgb(249,229,34)" rx="2" ry="2" />
<text  x="950.41" y="1903.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="695.9" y="1957" width="0.2" height="15.0" fill="rgb(239,73,9)" rx="2" ry="2" />
<text  x="698.88" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="848.1" y="1909" width="0.4" height="15.0" fill="rgb(210,75,1)" rx="2" ry="2" />
<text  x="851.15" y="1919.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="1026.2" y="2053" width="0.4" height="15.0" fill="rgb(251,94,43)" rx="2" ry="2" />
<text  x="1029.22" y="2063.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1109.0" y="1493" width="0.4" height="15.0" fill="rgb(228,46,15)" rx="2" ry="2" />
<text  x="1112.00" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="196.4" y="1541" width="0.2" height="15.0" fill="rgb(248,110,47)" rx="2" ry="2" />
<text  x="199.41" y="1551.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="932.7" y="1701" width="0.2" height="15.0" fill="rgb(213,90,49)" rx="2" ry="2" />
<text  x="935.72" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (5 samples, 0.08%)</title><rect x="648.6" y="1989" width="1.0" height="15.0" fill="rgb(238,122,21)" rx="2" ry="2" />
<text  x="651.64" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="934.1" y="1877" width="0.2" height="15.0" fill="rgb(242,143,15)" rx="2" ry="2" />
<text  x="937.11" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="510.3" y="2021" width="0.2" height="15.0" fill="rgb(239,36,2)" rx="2" ry="2" />
<text  x="513.27" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="533.1" y="1973" width="1.0" height="15.0" fill="rgb(221,193,41)" rx="2" ry="2" />
<text  x="536.10" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1177.1" y="1989" width="0.2" height="15.0" fill="rgb(235,63,17)" rx="2" ry="2" />
<text  x="1180.10" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="267.3" y="1829" width="0.2" height="15.0" fill="rgb(235,224,7)" rx="2" ry="2" />
<text  x="270.28" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="155.9" y="1813" width="0.2" height="15.0" fill="rgb(245,7,54)" rx="2" ry="2" />
<text  x="158.91" y="1823.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="310.4" y="1621" width="0.2" height="15.0" fill="rgb(237,209,51)" rx="2" ry="2" />
<text  x="313.36" y="1631.5" ></text>
</g>
<g >
<title>__fdget_raw (4 samples, 0.07%)</title><rect x="560.7" y="1925" width="0.8" height="15.0" fill="rgb(254,58,33)" rx="2" ry="2" />
<text  x="563.69" y="1935.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1016.5" y="1925" width="0.2" height="15.0" fill="rgb(254,194,6)" rx="2" ry="2" />
<text  x="1019.49" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (5 samples, 0.08%)</title><rect x="569.2" y="2005" width="1.0" height="15.0" fill="rgb(224,53,31)" rx="2" ry="2" />
<text  x="572.23" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="687.9" y="1733" width="0.2" height="15.0" fill="rgb(222,54,3)" rx="2" ry="2" />
<text  x="690.94" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="948.6" y="2005" width="0.4" height="15.0" fill="rgb(216,153,12)" rx="2" ry="2" />
<text  x="951.60" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="570.0" y="1957" width="0.2" height="15.0" fill="rgb(240,25,3)" rx="2" ry="2" />
<text  x="573.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="104.9" y="1749" width="0.2" height="15.0" fill="rgb(211,116,13)" rx="2" ry="2" />
<text  x="107.89" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="983.3" y="1973" width="0.4" height="15.0" fill="rgb(215,42,50)" rx="2" ry="2" />
<text  x="986.34" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="693.7" y="1861" width="0.2" height="15.0" fill="rgb(228,125,32)" rx="2" ry="2" />
<text  x="696.70" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="706.0" y="1781" width="0.2" height="15.0" fill="rgb(210,211,36)" rx="2" ry="2" />
<text  x="709.01" y="1791.5" ></text>
</g>
<g >
<title>syscall@plt (1 samples, 0.02%)</title><rect x="1166.8" y="1973" width="0.2" height="15.0" fill="rgb(242,44,40)" rx="2" ry="2" />
<text  x="1169.77" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="88.2" y="1877" width="0.2" height="15.0" fill="rgb(209,118,22)" rx="2" ry="2" />
<text  x="91.22" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="917.4" y="2021" width="0.4" height="15.0" fill="rgb(251,133,7)" rx="2" ry="2" />
<text  x="920.43" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="247.4" y="1797" width="0.2" height="15.0" fill="rgb(208,38,30)" rx="2" ry="2" />
<text  x="250.43" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="995.5" y="1957" width="0.3" height="15.0" fill="rgb(228,74,41)" rx="2" ry="2" />
<text  x="998.45" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="562.1" y="1829" width="0.2" height="15.0" fill="rgb(252,153,45)" rx="2" ry="2" />
<text  x="565.08" y="1839.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="470.2" y="1893" width="0.2" height="15.0" fill="rgb(205,72,23)" rx="2" ry="2" />
<text  x="473.17" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (4 samples, 0.07%)</title><rect x="566.6" y="1973" width="0.8" height="15.0" fill="rgb(231,199,34)" rx="2" ry="2" />
<text  x="569.65" y="1983.5" ></text>
</g>
<g >
<title>down_write (2 samples, 0.03%)</title><rect x="747.9" y="1765" width="0.4" height="15.0" fill="rgb(232,9,32)" rx="2" ry="2" />
<text  x="750.90" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(253,113,21)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (42 samples, 0.71%)</title><rect x="1107.0" y="1797" width="8.4" height="15.0" fill="rgb(216,152,39)" rx="2" ry="2" />
<text  x="1110.02" y="1807.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="138.8" y="1413" width="0.2" height="15.0" fill="rgb(217,115,51)" rx="2" ry="2" />
<text  x="141.84" y="1423.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="443.0" y="1877" width="0.2" height="15.0" fill="rgb(237,85,11)" rx="2" ry="2" />
<text  x="445.97" y="1887.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (16 samples, 0.27%)</title><rect x="109.7" y="2053" width="3.1" height="15.0" fill="rgb(241,87,18)" rx="2" ry="2" />
<text  x="112.66" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="241.7" y="1525" width="0.2" height="15.0" fill="rgb(232,94,11)" rx="2" ry="2" />
<text  x="244.67" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="325" width="16.9" height="15.0" fill="rgb(244,31,9)" rx="2" ry="2" />
<text  x="122.19" y="335.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="725" width="17.9" height="15.0" fill="rgb(242,66,13)" rx="2" ry="2" />
<text  x="122.19" y="735.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="627.2" y="1749" width="0.2" height="15.0" fill="rgb(213,149,53)" rx="2" ry="2" />
<text  x="630.20" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="982.0" y="1941" width="0.3" height="15.0" fill="rgb(233,195,16)" rx="2" ry="2" />
<text  x="984.95" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (10 samples, 0.17%)</title><rect x="51.7" y="1941" width="2.0" height="15.0" fill="rgb(226,48,46)" rx="2" ry="2" />
<text  x="54.69" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="328.4" y="1717" width="0.2" height="15.0" fill="rgb(228,205,44)" rx="2" ry="2" />
<text  x="331.43" y="1727.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1133.8" y="1973" width="0.2" height="15.0" fill="rgb(219,138,4)" rx="2" ry="2" />
<text  x="1136.82" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="132.3" y="53" width="0.6" height="15.0" fill="rgb(248,8,23)" rx="2" ry="2" />
<text  x="135.29" y="63.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="488.8" y="1957" width="0.4" height="15.0" fill="rgb(232,130,36)" rx="2" ry="2" />
<text  x="491.83" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="418.8" y="2005" width="0.3" height="15.0" fill="rgb(223,105,29)" rx="2" ry="2" />
<text  x="421.75" y="2015.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1079.2" y="1797" width="0.2" height="15.0" fill="rgb(224,200,30)" rx="2" ry="2" />
<text  x="1082.23" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="413.8" y="1877" width="0.6" height="15.0" fill="rgb(226,4,41)" rx="2" ry="2" />
<text  x="416.79" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="247.4" y="1541" width="0.2" height="15.0" fill="rgb(245,117,21)" rx="2" ry="2" />
<text  x="250.43" y="1551.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="76.3" y="1941" width="0.2" height="15.0" fill="rgb(224,143,44)" rx="2" ry="2" />
<text  x="79.31" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="189.5" y="1973" width="0.2" height="15.0" fill="rgb(225,39,28)" rx="2" ry="2" />
<text  x="192.46" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="731.6" y="1525" width="0.2" height="15.0" fill="rgb(223,205,53)" rx="2" ry="2" />
<text  x="734.62" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="825.3" y="1717" width="0.8" height="15.0" fill="rgb(234,201,41)" rx="2" ry="2" />
<text  x="828.32" y="1727.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="247.0" y="1941" width="0.4" height="15.0" fill="rgb(245,85,49)" rx="2" ry="2" />
<text  x="250.03" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (3 samples, 0.05%)</title><rect x="565.7" y="2005" width="0.6" height="15.0" fill="rgb(232,31,12)" rx="2" ry="2" />
<text  x="568.66" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="247.4" y="1877" width="0.2" height="15.0" fill="rgb(210,88,35)" rx="2" ry="2" />
<text  x="250.43" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.56%)</title><rect x="669.7" y="1925" width="6.5" height="15.0" fill="rgb(246,189,6)" rx="2" ry="2" />
<text  x="672.68" y="1935.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="351.1" y="1925" width="0.2" height="15.0" fill="rgb(243,154,52)" rx="2" ry="2" />
<text  x="354.06" y="1935.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="70.7" y="1781" width="0.2" height="15.0" fill="rgb(246,115,29)" rx="2" ry="2" />
<text  x="73.75" y="1791.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="762.6" y="1445" width="0.2" height="15.0" fill="rgb(234,193,2)" rx="2" ry="2" />
<text  x="765.59" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="624.8" y="2005" width="0.4" height="15.0" fill="rgb(213,94,32)" rx="2" ry="2" />
<text  x="627.81" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="666.1" y="1973" width="0.2" height="15.0" fill="rgb(239,29,8)" rx="2" ry="2" />
<text  x="669.11" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="824.9" y="1813" width="0.4" height="15.0" fill="rgb(242,185,3)" rx="2" ry="2" />
<text  x="827.92" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="693.1" y="1861" width="0.6" height="15.0" fill="rgb(230,120,10)" rx="2" ry="2" />
<text  x="696.11" y="1871.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (6 samples, 0.10%)</title><rect x="243.5" y="1813" width="1.2" height="15.0" fill="rgb(237,136,3)" rx="2" ry="2" />
<text  x="246.46" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="947.4" y="1909" width="0.2" height="15.0" fill="rgb(213,60,22)" rx="2" ry="2" />
<text  x="950.41" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1018.3" y="1813" width="0.2" height="15.0" fill="rgb(229,138,19)" rx="2" ry="2" />
<text  x="1021.28" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (68 samples, 1.14%)</title><rect x="1153.5" y="2037" width="13.5" height="15.0" fill="rgb(253,227,30)" rx="2" ry="2" />
<text  x="1156.47" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="178.9" y="1797" width="0.2" height="15.0" fill="rgb(231,10,54)" rx="2" ry="2" />
<text  x="181.94" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1048.9" y="1829" width="0.2" height="15.0" fill="rgb(237,206,35)" rx="2" ry="2" />
<text  x="1051.85" y="1839.5" ></text>
</g>
<g >
<title>event_add@plt (2 samples, 0.03%)</title><rect x="239.9" y="1861" width="0.4" height="15.0" fill="rgb(244,11,29)" rx="2" ry="2" />
<text  x="242.89" y="1871.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="991.1" y="1989" width="0.2" height="15.0" fill="rgb(216,173,17)" rx="2" ry="2" />
<text  x="994.08" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="864.6" y="1941" width="0.2" height="15.0" fill="rgb(242,225,51)" rx="2" ry="2" />
<text  x="867.63" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="286.3" y="1829" width="0.4" height="15.0" fill="rgb(240,26,48)" rx="2" ry="2" />
<text  x="289.34" y="1839.5" ></text>
</g>
<g >
<title>inet_recvmsg (332 samples, 5.59%)</title><rect x="1053.0" y="1957" width="65.9" height="15.0" fill="rgb(221,31,33)" rx="2" ry="2" />
<text  x="1056.02" y="1967.5" >inet_re..</text>
</g>
<g >
<title>folly::RequestContext::setContext (10 samples, 0.17%)</title><rect x="168.6" y="1909" width="2.0" height="15.0" fill="rgb(217,189,5)" rx="2" ry="2" />
<text  x="171.62" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (9 samples, 0.15%)</title><rect x="36.8" y="1989" width="1.8" height="15.0" fill="rgb(240,116,15)" rx="2" ry="2" />
<text  x="39.80" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="856.7" y="1845" width="0.2" height="15.0" fill="rgb(209,205,52)" rx="2" ry="2" />
<text  x="859.69" y="1855.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="831.7" y="1589" width="0.2" height="15.0" fill="rgb(239,209,21)" rx="2" ry="2" />
<text  x="834.67" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="853.9" y="1605" width="0.2" height="15.0" fill="rgb(221,182,45)" rx="2" ry="2" />
<text  x="856.91" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="627.2" y="1829" width="0.2" height="15.0" fill="rgb(224,45,20)" rx="2" ry="2" />
<text  x="630.20" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.05%)</title><rect x="615.3" y="2005" width="0.6" height="15.0" fill="rgb(239,139,31)" rx="2" ry="2" />
<text  x="618.29" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="940.5" y="1685" width="0.2" height="15.0" fill="rgb(216,38,31)" rx="2" ry="2" />
<text  x="943.46" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="900.2" y="2021" width="0.2" height="15.0" fill="rgb(244,47,51)" rx="2" ry="2" />
<text  x="903.16" y="2031.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="675.6" y="1845" width="0.4" height="15.0" fill="rgb(221,126,5)" rx="2" ry="2" />
<text  x="678.64" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="622.6" y="2021" width="2.0" height="15.0" fill="rgb(232,149,0)" rx="2" ry="2" />
<text  x="625.63" y="2031.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="628.4" y="1845" width="0.2" height="15.0" fill="rgb(253,208,7)" rx="2" ry="2" />
<text  x="631.39" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="163.3" y="1733" width="0.2" height="15.0" fill="rgb(235,189,39)" rx="2" ry="2" />
<text  x="166.26" y="1743.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.4" y="1925" width="0.8" height="15.0" fill="rgb(221,109,35)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1090.3" y="1893" width="0.2" height="15.0" fill="rgb(219,42,6)" rx="2" ry="2" />
<text  x="1093.34" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1176.1" y="2005" width="0.4" height="15.0" fill="rgb(212,85,54)" rx="2" ry="2" />
<text  x="1179.10" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="694.1" y="1653" width="0.2" height="15.0" fill="rgb(228,19,35)" rx="2" ry="2" />
<text  x="697.10" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="230.4" y="1957" width="0.2" height="15.0" fill="rgb(226,176,13)" rx="2" ry="2" />
<text  x="233.36" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="196.4" y="1941" width="0.2" height="15.0" fill="rgb(236,196,2)" rx="2" ry="2" />
<text  x="199.41" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="825.3" y="1765" width="0.8" height="15.0" fill="rgb(218,95,18)" rx="2" ry="2" />
<text  x="828.32" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="562.1" y="1749" width="0.2" height="15.0" fill="rgb(218,100,29)" rx="2" ry="2" />
<text  x="565.08" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="443.0" y="1989" width="0.2" height="15.0" fill="rgb(220,5,1)" rx="2" ry="2" />
<text  x="445.97" y="1999.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="675.0" y="1797" width="0.2" height="15.0" fill="rgb(252,121,41)" rx="2" ry="2" />
<text  x="678.04" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="831.7" y="1605" width="0.2" height="15.0" fill="rgb(223,144,4)" rx="2" ry="2" />
<text  x="834.67" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.82%)</title><rect x="118.6" y="1589" width="21.4" height="15.0" fill="rgb(219,11,33)" rx="2" ry="2" />
<text  x="121.59" y="1599.5" >[..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1024.0" y="1957" width="0.2" height="15.0" fill="rgb(243,189,19)" rx="2" ry="2" />
<text  x="1027.04" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="294.3" y="1653" width="0.2" height="15.0" fill="rgb(240,64,36)" rx="2" ry="2" />
<text  x="297.28" y="1663.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (22 samples, 0.37%)</title><rect x="689.9" y="1893" width="4.4" height="15.0" fill="rgb(241,207,21)" rx="2" ry="2" />
<text  x="692.93" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_accept (64 samples, 1.08%)</title><rect x="371.9" y="1941" width="12.7" height="15.0" fill="rgb(241,38,18)" rx="2" ry="2" />
<text  x="374.90" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="884.7" y="1669" width="0.2" height="15.0" fill="rgb(248,142,23)" rx="2" ry="2" />
<text  x="887.68" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="775.3" y="1477" width="0.6" height="15.0" fill="rgb(252,228,15)" rx="2" ry="2" />
<text  x="778.29" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="67.0" y="1877" width="0.2" height="15.0" fill="rgb(236,103,42)" rx="2" ry="2" />
<text  x="69.98" y="1887.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="1090.3" y="1733" width="0.2" height="15.0" fill="rgb(248,45,30)" rx="2" ry="2" />
<text  x="1093.34" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="136.9" y="501" width="0.2" height="15.0" fill="rgb(222,42,33)" rx="2" ry="2" />
<text  x="139.85" y="511.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="623.4" y="1973" width="0.6" height="15.0" fill="rgb(213,48,44)" rx="2" ry="2" />
<text  x="626.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="755.4" y="1493" width="0.2" height="15.0" fill="rgb(209,221,2)" rx="2" ry="2" />
<text  x="758.44" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="923.4" y="1909" width="0.8" height="15.0" fill="rgb(210,32,16)" rx="2" ry="2" />
<text  x="926.39" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="912.9" y="2037" width="2.5" height="15.0" fill="rgb(218,182,36)" rx="2" ry="2" />
<text  x="915.87" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="676.2" y="1829" width="0.2" height="15.0" fill="rgb(252,151,4)" rx="2" ry="2" />
<text  x="679.23" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1018.3" y="1861" width="0.2" height="15.0" fill="rgb(207,49,20)" rx="2" ry="2" />
<text  x="1021.28" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="932.5" y="1893" width="1.0" height="15.0" fill="rgb(233,29,41)" rx="2" ry="2" />
<text  x="935.52" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="224.0" y="2021" width="0.4" height="15.0" fill="rgb(233,124,3)" rx="2" ry="2" />
<text  x="227.00" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="118.8" y="1381" width="19.4" height="15.0" fill="rgb(247,182,44)" rx="2" ry="2" />
<text  x="121.79" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="408.4" y="1701" width="0.2" height="15.0" fill="rgb(248,46,22)" rx="2" ry="2" />
<text  x="411.43" y="1711.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="676.6" y="1925" width="2.2" height="15.0" fill="rgb(252,115,40)" rx="2" ry="2" />
<text  x="679.63" y="1935.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="936.7" y="1909" width="0.2" height="15.0" fill="rgb(206,149,20)" rx="2" ry="2" />
<text  x="939.69" y="1919.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (8 samples, 0.13%)</title><rect x="513.6" y="1957" width="1.6" height="15.0" fill="rgb(251,190,11)" rx="2" ry="2" />
<text  x="516.64" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (4 samples, 0.07%)</title><rect x="99.5" y="1957" width="0.8" height="15.0" fill="rgb(218,63,7)" rx="2" ry="2" />
<text  x="102.53" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="139.8" y="1557" width="0.2" height="15.0" fill="rgb(217,99,37)" rx="2" ry="2" />
<text  x="142.83" y="1567.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="411.6" y="1877" width="0.2" height="15.0" fill="rgb(245,18,3)" rx="2" ry="2" />
<text  x="414.60" y="1887.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="269.1" y="1941" width="0.2" height="15.0" fill="rgb(228,51,34)" rx="2" ry="2" />
<text  x="272.07" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="135.1" y="69" width="0.8" height="15.0" fill="rgb(248,115,8)" rx="2" ry="2" />
<text  x="138.07" y="79.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1134.0" y="2053" width="0.4" height="15.0" fill="rgb(214,105,26)" rx="2" ry="2" />
<text  x="1137.02" y="2063.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (6 samples, 0.10%)</title><rect x="79.3" y="1861" width="1.2" height="15.0" fill="rgb(211,181,4)" rx="2" ry="2" />
<text  x="82.28" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="940.5" y="1733" width="0.2" height="15.0" fill="rgb(242,118,5)" rx="2" ry="2" />
<text  x="943.46" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="701.4" y="1797" width="0.2" height="15.0" fill="rgb(232,181,4)" rx="2" ry="2" />
<text  x="704.44" y="1807.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="371.7" y="1861" width="0.2" height="15.0" fill="rgb(206,165,49)" rx="2" ry="2" />
<text  x="374.70" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="279.0" y="1733" width="0.2" height="15.0" fill="rgb(246,229,41)" rx="2" ry="2" />
<text  x="281.99" y="1743.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="520.8" y="1973" width="1.0" height="15.0" fill="rgb(222,93,31)" rx="2" ry="2" />
<text  x="523.79" y="1983.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="100.9" y="1957" width="0.4" height="15.0" fill="rgb(246,146,43)" rx="2" ry="2" />
<text  x="103.92" y="1967.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (5 samples, 0.08%)</title><rect x="382.0" y="1893" width="1.0" height="15.0" fill="rgb(212,15,39)" rx="2" ry="2" />
<text  x="385.03" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="108.5" y="2005" width="0.2" height="15.0" fill="rgb(219,166,4)" rx="2" ry="2" />
<text  x="111.47" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (5 samples, 0.08%)</title><rect x="91.8" y="1941" width="1.0" height="15.0" fill="rgb(220,139,28)" rx="2" ry="2" />
<text  x="94.79" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="163.3" y="1717" width="0.2" height="15.0" fill="rgb(213,197,37)" rx="2" ry="2" />
<text  x="166.26" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="149.0" y="1925" width="0.2" height="15.0" fill="rgb(230,158,36)" rx="2" ry="2" />
<text  x="151.96" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="884.7" y="1781" width="0.2" height="15.0" fill="rgb(207,126,33)" rx="2" ry="2" />
<text  x="887.68" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="739.8" y="1541" width="0.2" height="15.0" fill="rgb(253,212,17)" rx="2" ry="2" />
<text  x="742.76" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1034.4" y="2005" width="0.4" height="15.0" fill="rgb(214,31,52)" rx="2" ry="2" />
<text  x="1037.36" y="2015.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="145.6" y="1989" width="0.2" height="15.0" fill="rgb(205,55,43)" rx="2" ry="2" />
<text  x="148.59" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="851.5" y="1845" width="0.6" height="15.0" fill="rgb(221,129,23)" rx="2" ry="2" />
<text  x="854.52" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="991.9" y="1957" width="0.2" height="15.0" fill="rgb(212,139,0)" rx="2" ry="2" />
<text  x="994.88" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="940.5" y="1797" width="0.2" height="15.0" fill="rgb(252,147,42)" rx="2" ry="2" />
<text  x="943.46" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="443.4" y="1989" width="0.6" height="15.0" fill="rgb(249,202,40)" rx="2" ry="2" />
<text  x="446.37" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1154.3" y="1813" width="0.2" height="15.0" fill="rgb(248,217,0)" rx="2" ry="2" />
<text  x="1157.27" y="1823.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (16 samples, 0.27%)</title><rect x="275.4" y="1877" width="3.2" height="15.0" fill="rgb(223,123,39)" rx="2" ry="2" />
<text  x="278.42" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="857.1" y="1957" width="0.2" height="15.0" fill="rgb(236,60,2)" rx="2" ry="2" />
<text  x="860.08" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="138.0" y="1221" width="0.2" height="15.0" fill="rgb(226,213,11)" rx="2" ry="2" />
<text  x="141.05" y="1231.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="109.3" y="1989" width="0.4" height="15.0" fill="rgb(249,131,38)" rx="2" ry="2" />
<text  x="112.26" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="528.5" y="1941" width="0.6" height="15.0" fill="rgb(222,1,4)" rx="2" ry="2" />
<text  x="531.53" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="968.1" y="1909" width="0.2" height="15.0" fill="rgb(214,57,3)" rx="2" ry="2" />
<text  x="971.06" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="328.4" y="1749" width="0.2" height="15.0" fill="rgb(218,70,37)" rx="2" ry="2" />
<text  x="331.43" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="136.3" y="325" width="0.2" height="15.0" fill="rgb(240,106,32)" rx="2" ry="2" />
<text  x="139.26" y="335.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="753.9" y="1493" width="0.2" height="15.0" fill="rgb(210,78,3)" rx="2" ry="2" />
<text  x="756.85" y="1503.5" ></text>
</g>
<g >
<title>__close (3 samples, 0.05%)</title><rect x="223.8" y="2037" width="0.6" height="15.0" fill="rgb(253,33,18)" rx="2" ry="2" />
<text  x="226.81" y="2047.5" ></text>
</g>
<g >
<title>ip_output (42 samples, 0.71%)</title><rect x="1107.0" y="1829" width="8.4" height="15.0" fill="rgb(207,217,21)" rx="2" ry="2" />
<text  x="1110.02" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="251.8" y="2021" width="2.4" height="15.0" fill="rgb(231,140,37)" rx="2" ry="2" />
<text  x="254.80" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="932.7" y="1733" width="0.8" height="15.0" fill="rgb(244,218,54)" rx="2" ry="2" />
<text  x="935.72" y="1743.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (6 samples, 0.10%)</title><rect x="838.6" y="1925" width="1.2" height="15.0" fill="rgb(229,221,50)" rx="2" ry="2" />
<text  x="841.62" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="150.2" y="1989" width="0.2" height="15.0" fill="rgb(249,73,47)" rx="2" ry="2" />
<text  x="153.15" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="134.9" y="165" width="0.2" height="15.0" fill="rgb(208,209,16)" rx="2" ry="2" />
<text  x="137.87" y="175.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="915.1" y="1989" width="0.1" height="15.0" fill="rgb(217,179,47)" rx="2" ry="2" />
<text  x="918.05" y="1999.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="998.2" y="1973" width="0.2" height="15.0" fill="rgb(217,164,11)" rx="2" ry="2" />
<text  x="1001.23" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1005.6" y="1941" width="0.2" height="15.0" fill="rgb(236,152,38)" rx="2" ry="2" />
<text  x="1008.58" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="81.9" y="1893" width="0.2" height="15.0" fill="rgb(248,34,16)" rx="2" ry="2" />
<text  x="84.86" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="141.0" y="1749" width="0.2" height="15.0" fill="rgb(241,184,4)" rx="2" ry="2" />
<text  x="144.02" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="136.1" y="213" width="0.2" height="15.0" fill="rgb(232,137,14)" rx="2" ry="2" />
<text  x="139.06" y="223.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (20 samples, 0.34%)</title><rect x="367.9" y="1941" width="4.0" height="15.0" fill="rgb(235,37,37)" rx="2" ry="2" />
<text  x="370.93" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="830.5" y="1765" width="0.2" height="15.0" fill="rgb(252,156,37)" rx="2" ry="2" />
<text  x="833.48" y="1775.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="35.4" y="1957" width="0.2" height="15.0" fill="rgb(207,70,53)" rx="2" ry="2" />
<text  x="38.41" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="550.8" y="1973" width="0.2" height="15.0" fill="rgb(241,142,2)" rx="2" ry="2" />
<text  x="553.77" y="1983.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="302.2" y="1365" width="0.6" height="15.0" fill="rgb(248,79,2)" rx="2" ry="2" />
<text  x="305.22" y="1375.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="458.5" y="1813" width="0.2" height="15.0" fill="rgb(251,209,19)" rx="2" ry="2" />
<text  x="461.46" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="213.7" y="1877" width="0.2" height="15.0" fill="rgb(222,148,34)" rx="2" ry="2" />
<text  x="216.68" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="20.7" y="1957" width="0.2" height="15.0" fill="rgb(228,55,24)" rx="2" ry="2" />
<text  x="23.72" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="74.9" y="1797" width="0.2" height="15.0" fill="rgb(236,142,2)" rx="2" ry="2" />
<text  x="77.92" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="290.5" y="1829" width="0.2" height="15.0" fill="rgb(219,66,34)" rx="2" ry="2" />
<text  x="293.51" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="630.4" y="1925" width="0.2" height="15.0" fill="rgb(243,38,11)" rx="2" ry="2" />
<text  x="633.37" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1176.3" y="1973" width="0.2" height="15.0" fill="rgb(232,67,49)" rx="2" ry="2" />
<text  x="1179.30" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1079.0" y="1573" width="0.2" height="15.0" fill="rgb(206,1,6)" rx="2" ry="2" />
<text  x="1082.03" y="1583.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="351.1" y="1989" width="0.2" height="15.0" fill="rgb(228,199,48)" rx="2" ry="2" />
<text  x="354.06" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="775.3" y="1541" width="0.6" height="15.0" fill="rgb(244,28,46)" rx="2" ry="2" />
<text  x="778.29" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="630.4" y="1701" width="0.2" height="15.0" fill="rgb(235,52,48)" rx="2" ry="2" />
<text  x="633.37" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="140.4" y="1621" width="0.2" height="15.0" fill="rgb(244,166,52)" rx="2" ry="2" />
<text  x="143.43" y="1631.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="975.0" y="1957" width="0.2" height="15.0" fill="rgb(251,87,32)" rx="2" ry="2" />
<text  x="978.00" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="12.4" y="2021" width="1.2" height="15.0" fill="rgb(222,56,33)" rx="2" ry="2" />
<text  x="15.38" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="74.9" y="1861" width="0.2" height="15.0" fill="rgb(206,88,35)" rx="2" ry="2" />
<text  x="77.92" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="123.6" y="37" width="1.3" height="15.0" fill="rgb(224,70,36)" rx="2" ry="2" />
<text  x="126.55" y="47.5" ></text>
</g>
<g >
<title>xfrm_lookup_route (1 samples, 0.02%)</title><rect x="547.6" y="1605" width="0.2" height="15.0" fill="rgb(235,126,43)" rx="2" ry="2" />
<text  x="550.59" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (5 samples, 0.08%)</title><rect x="1145.5" y="2021" width="1.0" height="15.0" fill="rgb(210,84,17)" rx="2" ry="2" />
<text  x="1148.53" y="2031.5" ></text>
</g>
<g >
<title>__memchr_avx2 (5 samples, 0.08%)</title><rect x="1153.5" y="1973" width="1.0" height="15.0" fill="rgb(237,5,18)" rx="2" ry="2" />
<text  x="1156.47" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (25 samples, 0.42%)</title><rect x="163.5" y="1925" width="4.9" height="15.0" fill="rgb(239,135,44)" rx="2" ry="2" />
<text  x="166.46" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (64 samples, 1.08%)</title><rect x="666.3" y="1973" width="12.7" height="15.0" fill="rgb(235,164,46)" rx="2" ry="2" />
<text  x="669.31" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="528.5" y="1877" width="0.2" height="15.0" fill="rgb(245,19,26)" rx="2" ry="2" />
<text  x="531.53" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="491.8" y="1877" width="0.2" height="15.0" fill="rgb(217,43,16)" rx="2" ry="2" />
<text  x="494.81" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="520.2" y="1941" width="0.2" height="15.0" fill="rgb(214,66,29)" rx="2" ry="2" />
<text  x="523.20" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1127.9" y="2037" width="0.2" height="15.0" fill="rgb(236,60,40)" rx="2" ry="2" />
<text  x="1130.86" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="836.6" y="1845" width="0.2" height="15.0" fill="rgb(248,161,31)" rx="2" ry="2" />
<text  x="839.64" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="250.2" y="1797" width="0.2" height="15.0" fill="rgb(229,191,18)" rx="2" ry="2" />
<text  x="253.21" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="884.5" y="1941" width="0.4" height="15.0" fill="rgb(222,224,3)" rx="2" ry="2" />
<text  x="887.48" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="289.3" y="1669" width="0.2" height="15.0" fill="rgb(236,158,26)" rx="2" ry="2" />
<text  x="292.32" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="408.4" y="1781" width="0.2" height="15.0" fill="rgb(233,100,1)" rx="2" ry="2" />
<text  x="411.43" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="745.9" y="1733" width="0.2" height="15.0" fill="rgb(236,34,46)" rx="2" ry="2" />
<text  x="748.91" y="1743.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="878.7" y="1893" width="0.4" height="15.0" fill="rgb(213,153,7)" rx="2" ry="2" />
<text  x="881.72" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="132.9" y="37" width="0.2" height="15.0" fill="rgb(242,222,46)" rx="2" ry="2" />
<text  x="135.88" y="47.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="156.3" y="1669" width="0.2" height="15.0" fill="rgb(251,207,29)" rx="2" ry="2" />
<text  x="159.31" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="153.9" y="1957" width="0.4" height="15.0" fill="rgb(227,203,20)" rx="2" ry="2" />
<text  x="156.93" y="1967.5" ></text>
</g>
<g >
<title>skb_release_head_state (27 samples, 0.45%)</title><rect x="1079.4" y="1893" width="5.4" height="15.0" fill="rgb(236,186,42)" rx="2" ry="2" />
<text  x="1082.42" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="155.9" y="1925" width="0.2" height="15.0" fill="rgb(239,115,10)" rx="2" ry="2" />
<text  x="158.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="706.0" y="2005" width="0.2" height="15.0" fill="rgb(210,138,26)" rx="2" ry="2" />
<text  x="709.01" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="935.3" y="1877" width="0.2" height="15.0" fill="rgb(223,84,10)" rx="2" ry="2" />
<text  x="938.30" y="1887.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="714.9" y="1941" width="0.4" height="15.0" fill="rgb(246,180,54)" rx="2" ry="2" />
<text  x="717.94" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="350.7" y="1909" width="0.2" height="15.0" fill="rgb(224,45,43)" rx="2" ry="2" />
<text  x="353.66" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="903.5" y="1893" width="0.2" height="15.0" fill="rgb(221,78,33)" rx="2" ry="2" />
<text  x="906.54" y="1903.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="247.4" y="1621" width="0.2" height="15.0" fill="rgb(228,33,25)" rx="2" ry="2" />
<text  x="250.43" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="825.9" y="1589" width="0.2" height="15.0" fill="rgb(227,84,23)" rx="2" ry="2" />
<text  x="828.92" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1152.9" y="2053" width="0.2" height="15.0" fill="rgb(209,212,48)" rx="2" ry="2" />
<text  x="1155.88" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="283.0" y="1797" width="0.2" height="15.0" fill="rgb(239,141,12)" rx="2" ry="2" />
<text  x="285.96" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="734.4" y="1509" width="0.2" height="15.0" fill="rgb(245,10,25)" rx="2" ry="2" />
<text  x="737.40" y="1519.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="134.5" y="101" width="0.2" height="15.0" fill="rgb(209,97,36)" rx="2" ry="2" />
<text  x="137.47" y="111.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="982.0" y="1797" width="0.2" height="15.0" fill="rgb(245,97,51)" rx="2" ry="2" />
<text  x="984.95" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="267.3" y="1749" width="0.2" height="15.0" fill="rgb(242,42,3)" rx="2" ry="2" />
<text  x="270.28" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="955.9" y="1909" width="0.2" height="15.0" fill="rgb(248,110,33)" rx="2" ry="2" />
<text  x="958.95" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (38 samples, 0.64%)</title><rect x="1107.4" y="1589" width="7.6" height="15.0" fill="rgb(224,147,51)" rx="2" ry="2" />
<text  x="1110.42" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1078.2" y="1781" width="0.2" height="15.0" fill="rgb(251,40,52)" rx="2" ry="2" />
<text  x="1081.23" y="1791.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1175.9" y="1861" width="0.2" height="15.0" fill="rgb(246,25,42)" rx="2" ry="2" />
<text  x="1178.91" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="242.1" y="1845" width="0.2" height="15.0" fill="rgb(225,202,54)" rx="2" ry="2" />
<text  x="245.07" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="443.0" y="1973" width="0.2" height="15.0" fill="rgb(215,81,19)" rx="2" ry="2" />
<text  x="445.97" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="646.5" y="1893" width="0.2" height="15.0" fill="rgb(243,202,51)" rx="2" ry="2" />
<text  x="649.45" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="775.3" y="1397" width="0.6" height="15.0" fill="rgb(205,25,50)" rx="2" ry="2" />
<text  x="778.29" y="1407.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="694.1" y="1525" width="0.2" height="15.0" fill="rgb(225,173,19)" rx="2" ry="2" />
<text  x="697.10" y="1535.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (3 samples, 0.05%)</title><rect x="1007.0" y="2005" width="0.6" height="15.0" fill="rgb(252,62,8)" rx="2" ry="2" />
<text  x="1009.97" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.3" y="277" width="0.2" height="15.0" fill="rgb(251,55,0)" rx="2" ry="2" />
<text  x="139.26" y="287.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="832.1" y="1797" width="0.2" height="15.0" fill="rgb(242,223,1)" rx="2" ry="2" />
<text  x="835.07" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="80.1" y="1653" width="0.2" height="15.0" fill="rgb(227,7,54)" rx="2" ry="2" />
<text  x="83.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="118.8" y="1141" width="18.6" height="15.0" fill="rgb(234,158,50)" rx="2" ry="2" />
<text  x="121.79" y="1151.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="127.9" y="37" width="0.2" height="15.0" fill="rgb(250,175,19)" rx="2" ry="2" />
<text  x="130.92" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="602.4" y="1829" width="0.2" height="15.0" fill="rgb(254,82,26)" rx="2" ry="2" />
<text  x="605.38" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="366.3" y="1925" width="0.2" height="15.0" fill="rgb(237,10,24)" rx="2" ry="2" />
<text  x="369.34" y="1935.5" ></text>
</g>
<g >
<title>ip_copy_addrs (5 samples, 0.08%)</title><rect x="293.5" y="1813" width="1.0" height="15.0" fill="rgb(224,51,41)" rx="2" ry="2" />
<text  x="296.49" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="755.4" y="1429" width="0.2" height="15.0" fill="rgb(224,89,39)" rx="2" ry="2" />
<text  x="758.44" y="1439.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="562.3" y="1973" width="0.2" height="15.0" fill="rgb(242,121,47)" rx="2" ry="2" />
<text  x="565.28" y="1983.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="1073.7" y="1845" width="0.2" height="15.0" fill="rgb(206,173,19)" rx="2" ry="2" />
<text  x="1076.67" y="1855.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="300.6" y="1429" width="0.2" height="15.0" fill="rgb(237,215,10)" rx="2" ry="2" />
<text  x="303.63" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="902.9" y="1973" width="0.4" height="15.0" fill="rgb(246,88,43)" rx="2" ry="2" />
<text  x="905.94" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="187.3" y="2021" width="0.8" height="15.0" fill="rgb(250,16,51)" rx="2" ry="2" />
<text  x="190.28" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1156.5" y="1909" width="0.1" height="15.0" fill="rgb(237,202,16)" rx="2" ry="2" />
<text  x="1159.45" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="510.9" y="1877" width="0.2" height="15.0" fill="rgb(241,119,53)" rx="2" ry="2" />
<text  x="513.86" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="567.2" y="1909" width="0.2" height="15.0" fill="rgb(227,102,7)" rx="2" ry="2" />
<text  x="570.24" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.31%)</title><rect x="632.0" y="2021" width="15.4" height="15.0" fill="rgb(212,207,43)" rx="2" ry="2" />
<text  x="634.96" y="2031.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="384.4" y="1925" width="0.2" height="15.0" fill="rgb(234,184,23)" rx="2" ry="2" />
<text  x="387.41" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="463.4" y="1861" width="0.2" height="15.0" fill="rgb(231,45,34)" rx="2" ry="2" />
<text  x="466.42" y="1871.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="136.5" y="69" width="0.2" height="15.0" fill="rgb(214,137,32)" rx="2" ry="2" />
<text  x="139.46" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="562.3" y="1909" width="0.2" height="15.0" fill="rgb(214,200,47)" rx="2" ry="2" />
<text  x="565.28" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="884.7" y="1685" width="0.2" height="15.0" fill="rgb(238,175,26)" rx="2" ry="2" />
<text  x="887.68" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="706.0" y="1925" width="0.2" height="15.0" fill="rgb(208,73,48)" rx="2" ry="2" />
<text  x="709.01" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (3 samples, 0.05%)</title><rect x="624.6" y="2037" width="0.6" height="15.0" fill="rgb(241,165,19)" rx="2" ry="2" />
<text  x="627.62" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="479.3" y="1893" width="0.2" height="15.0" fill="rgb(219,108,19)" rx="2" ry="2" />
<text  x="482.30" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="659.2" y="1829" width="0.2" height="15.0" fill="rgb(247,154,42)" rx="2" ry="2" />
<text  x="662.16" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1154.3" y="1925" width="0.2" height="15.0" fill="rgb(237,179,41)" rx="2" ry="2" />
<text  x="1157.27" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="136.5" y="197" width="0.2" height="15.0" fill="rgb(233,94,22)" rx="2" ry="2" />
<text  x="139.46" y="207.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="911.3" y="2005" width="0.6" height="15.0" fill="rgb(237,106,51)" rx="2" ry="2" />
<text  x="914.28" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="654.4" y="1973" width="0.2" height="15.0" fill="rgb(209,58,52)" rx="2" ry="2" />
<text  x="657.39" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="622.0" y="2005" width="0.2" height="15.0" fill="rgb(230,229,10)" rx="2" ry="2" />
<text  x="625.04" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="740.9" y="1525" width="0.2" height="15.0" fill="rgb(241,52,20)" rx="2" ry="2" />
<text  x="743.95" y="1535.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="612.3" y="1845" width="0.2" height="15.0" fill="rgb(226,5,32)" rx="2" ry="2" />
<text  x="615.31" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::close (4 samples, 0.07%)</title><rect x="854.9" y="1941" width="0.8" height="15.0" fill="rgb(227,33,15)" rx="2" ry="2" />
<text  x="857.90" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="163.3" y="1845" width="0.2" height="15.0" fill="rgb(210,70,23)" rx="2" ry="2" />
<text  x="166.26" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="579.9" y="1989" width="0.2" height="15.0" fill="rgb(234,105,53)" rx="2" ry="2" />
<text  x="582.95" y="1999.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="1174.5" y="1941" width="0.6" height="15.0" fill="rgb(212,145,16)" rx="2" ry="2" />
<text  x="1177.52" y="1951.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="322.3" y="1797" width="0.6" height="15.0" fill="rgb(228,172,12)" rx="2" ry="2" />
<text  x="325.27" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="162.7" y="1909" width="0.2" height="15.0" fill="rgb(254,221,35)" rx="2" ry="2" />
<text  x="165.66" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="562.1" y="1653" width="0.2" height="15.0" fill="rgb(209,35,51)" rx="2" ry="2" />
<text  x="565.08" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="922.2" y="1909" width="0.2" height="15.0" fill="rgb(240,21,41)" rx="2" ry="2" />
<text  x="925.20" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1054.0" y="1941" width="0.2" height="15.0" fill="rgb(208,13,10)" rx="2" ry="2" />
<text  x="1057.01" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="899.6" y="1765" width="0.2" height="15.0" fill="rgb(220,117,44)" rx="2" ry="2" />
<text  x="902.57" y="1775.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="87.6" y="1957" width="0.2" height="15.0" fill="rgb(232,106,33)" rx="2" ry="2" />
<text  x="90.62" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="594.8" y="1797" width="0.2" height="15.0" fill="rgb(246,163,30)" rx="2" ry="2" />
<text  x="597.84" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="761.0" y="1477" width="0.2" height="15.0" fill="rgb(221,114,17)" rx="2" ry="2" />
<text  x="764.00" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="136.7" y="213" width="0.2" height="15.0" fill="rgb(236,113,3)" rx="2" ry="2" />
<text  x="139.66" y="223.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="857.3" y="1685" width="0.2" height="15.0" fill="rgb(238,33,54)" rx="2" ry="2" />
<text  x="860.28" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (10 samples, 0.17%)</title><rect x="850.9" y="1925" width="2.0" height="15.0" fill="rgb(239,83,27)" rx="2" ry="2" />
<text  x="853.93" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="483.1" y="1765" width="0.4" height="15.0" fill="rgb(215,224,20)" rx="2" ry="2" />
<text  x="486.07" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="1169.2" y="2021" width="2.3" height="15.0" fill="rgb(242,163,12)" rx="2" ry="2" />
<text  x="1172.16" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1183.1" y="1845" width="0.2" height="15.0" fill="rgb(223,129,2)" rx="2" ry="2" />
<text  x="1186.05" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (7 samples, 0.12%)</title><rect x="79.1" y="1909" width="1.4" height="15.0" fill="rgb(225,161,28)" rx="2" ry="2" />
<text  x="82.08" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (6 samples, 0.10%)</title><rect x="528.5" y="1973" width="1.2" height="15.0" fill="rgb(245,165,25)" rx="2" ry="2" />
<text  x="531.53" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (3 samples, 0.05%)</title><rect x="1002.0" y="2021" width="0.6" height="15.0" fill="rgb(241,69,6)" rx="2" ry="2" />
<text  x="1005.00" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="868.4" y="1989" width="0.2" height="15.0" fill="rgb(231,62,2)" rx="2" ry="2" />
<text  x="871.40" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="562.1" y="1733" width="0.2" height="15.0" fill="rgb(223,139,47)" rx="2" ry="2" />
<text  x="565.08" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="95.0" y="1909" width="0.2" height="15.0" fill="rgb(236,92,45)" rx="2" ry="2" />
<text  x="97.97" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (10 samples, 0.17%)</title><rect x="171.2" y="1909" width="2.0" height="15.0" fill="rgb(237,93,46)" rx="2" ry="2" />
<text  x="174.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="289.5" y="1845" width="0.2" height="15.0" fill="rgb(224,165,1)" rx="2" ry="2" />
<text  x="292.52" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1048.5" y="1941" width="0.2" height="15.0" fill="rgb(217,160,5)" rx="2" ry="2" />
<text  x="1051.46" y="1951.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="687.9" y="1669" width="0.2" height="15.0" fill="rgb(227,133,8)" rx="2" ry="2" />
<text  x="690.94" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.24%)</title><rect x="119.2" y="101" width="14.7" height="15.0" fill="rgb(206,23,13)" rx="2" ry="2" />
<text  x="122.19" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="947.4" y="1845" width="0.2" height="15.0" fill="rgb(233,18,53)" rx="2" ry="2" />
<text  x="950.41" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="710.6" y="1877" width="0.6" height="15.0" fill="rgb(240,163,21)" rx="2" ry="2" />
<text  x="713.58" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="167.0" y="1861" width="0.2" height="15.0" fill="rgb(210,91,7)" rx="2" ry="2" />
<text  x="170.03" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="698.5" y="1957" width="0.2" height="15.0" fill="rgb(236,91,19)" rx="2" ry="2" />
<text  x="701.47" y="1967.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="364.0" y="1941" width="0.2" height="15.0" fill="rgb(244,43,11)" rx="2" ry="2" />
<text  x="366.96" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="324.9" y="1765" width="0.2" height="15.0" fill="rgb(229,20,0)" rx="2" ry="2" />
<text  x="327.85" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="820.0" y="1541" width="0.2" height="15.0" fill="rgb(237,106,50)" rx="2" ry="2" />
<text  x="822.96" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="294.3" y="1557" width="0.2" height="15.0" fill="rgb(210,16,36)" rx="2" ry="2" />
<text  x="297.28" y="1567.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="246.2" y="1877" width="0.2" height="15.0" fill="rgb(216,93,7)" rx="2" ry="2" />
<text  x="249.24" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="458.7" y="1909" width="0.2" height="15.0" fill="rgb(233,133,8)" rx="2" ry="2" />
<text  x="461.65" y="1919.5" ></text>
</g>
<g >
<title>mod_timer (18 samples, 0.30%)</title><rect x="803.3" y="1621" width="3.6" height="15.0" fill="rgb(213,174,23)" rx="2" ry="2" />
<text  x="806.28" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="852.7" y="1813" width="0.2" height="15.0" fill="rgb(209,98,42)" rx="2" ry="2" />
<text  x="855.72" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="988.9" y="1877" width="0.4" height="15.0" fill="rgb(244,49,16)" rx="2" ry="2" />
<text  x="991.90" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (9 samples, 0.15%)</title><rect x="1111.4" y="1429" width="1.8" height="15.0" fill="rgb(206,15,49)" rx="2" ry="2" />
<text  x="1114.39" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="95.6" y="1797" width="0.2" height="15.0" fill="rgb(218,60,45)" rx="2" ry="2" />
<text  x="98.56" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="832.1" y="1749" width="0.2" height="15.0" fill="rgb(216,229,46)" rx="2" ry="2" />
<text  x="835.07" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="743.1" y="1493" width="0.2" height="15.0" fill="rgb(208,229,29)" rx="2" ry="2" />
<text  x="746.13" y="1503.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="924.8" y="1941" width="0.2" height="15.0" fill="rgb(235,118,8)" rx="2" ry="2" />
<text  x="927.78" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="725.9" y="1717" width="0.2" height="15.0" fill="rgb(240,131,28)" rx="2" ry="2" />
<text  x="728.86" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="320.7" y="1781" width="0.2" height="15.0" fill="rgb(215,119,6)" rx="2" ry="2" />
<text  x="323.68" y="1791.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="65.2" y="1893" width="0.2" height="15.0" fill="rgb(206,204,34)" rx="2" ry="2" />
<text  x="68.19" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="742.7" y="1733" width="0.2" height="15.0" fill="rgb(227,137,14)" rx="2" ry="2" />
<text  x="745.74" y="1743.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="328.4" y="1733" width="0.2" height="15.0" fill="rgb(213,174,30)" rx="2" ry="2" />
<text  x="331.43" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1005.6" y="1781" width="0.2" height="15.0" fill="rgb(222,132,54)" rx="2" ry="2" />
<text  x="1008.58" y="1791.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (2 samples, 0.03%)</title><rect x="1009.0" y="1957" width="0.3" height="15.0" fill="rgb(243,75,4)" rx="2" ry="2" />
<text  x="1011.95" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getSecurityProtocol[abi:cxx11] (1 samples, 0.02%)</title><rect x="247.4" y="1957" width="0.2" height="15.0" fill="rgb(240,130,16)" rx="2" ry="2" />
<text  x="250.43" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="247.4" y="1509" width="0.2" height="15.0" fill="rgb(216,207,34)" rx="2" ry="2" />
<text  x="250.43" y="1519.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="694.1" y="1429" width="0.2" height="15.0" fill="rgb(218,219,17)" rx="2" ry="2" />
<text  x="697.10" y="1439.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.7" y="1973" width="0.2" height="15.0" fill="rgb(225,43,39)" rx="2" ry="2" />
<text  x="940.68" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (5 samples, 0.08%)</title><rect x="836.8" y="1925" width="1.0" height="15.0" fill="rgb(230,144,38)" rx="2" ry="2" />
<text  x="839.83" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="93.0" y="1877" width="0.2" height="15.0" fill="rgb(223,141,36)" rx="2" ry="2" />
<text  x="95.98" y="1887.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="247.4" y="1589" width="0.2" height="15.0" fill="rgb(249,92,25)" rx="2" ry="2" />
<text  x="250.43" y="1599.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="35.6" y="1957" width="0.2" height="15.0" fill="rgb(218,52,10)" rx="2" ry="2" />
<text  x="38.61" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1127.5" y="1909" width="0.4" height="15.0" fill="rgb(231,203,24)" rx="2" ry="2" />
<text  x="1130.47" y="1919.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="1138.0" y="2053" width="0.2" height="15.0" fill="rgb(213,49,34)" rx="2" ry="2" />
<text  x="1140.99" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="408.2" y="1717" width="0.2" height="15.0" fill="rgb(213,51,32)" rx="2" ry="2" />
<text  x="411.23" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="552.8" y="1973" width="0.3" height="15.0" fill="rgb(244,222,43)" rx="2" ry="2" />
<text  x="555.75" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="459.6" y="1877" width="0.2" height="15.0" fill="rgb(243,184,6)" rx="2" ry="2" />
<text  x="462.65" y="1887.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="180.1" y="2021" width="0.2" height="15.0" fill="rgb(240,88,26)" rx="2" ry="2" />
<text  x="183.13" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="398.5" y="1845" width="0.2" height="15.0" fill="rgb(224,45,36)" rx="2" ry="2" />
<text  x="401.50" y="1855.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="276.0" y="1861" width="0.2" height="15.0" fill="rgb(223,46,1)" rx="2" ry="2" />
<text  x="279.02" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="74.9" y="1781" width="0.2" height="15.0" fill="rgb(233,154,43)" rx="2" ry="2" />
<text  x="77.92" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="33.6" y="1957" width="1.8" height="15.0" fill="rgb(218,130,28)" rx="2" ry="2" />
<text  x="36.62" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="269.3" y="1829" width="0.2" height="15.0" fill="rgb(247,53,32)" rx="2" ry="2" />
<text  x="272.27" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="825.3" y="1733" width="0.8" height="15.0" fill="rgb(247,146,17)" rx="2" ry="2" />
<text  x="828.32" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (12 samples, 0.20%)</title><rect x="243.1" y="1845" width="2.3" height="15.0" fill="rgb(250,6,47)" rx="2" ry="2" />
<text  x="246.06" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="844.2" y="1733" width="0.2" height="15.0" fill="rgb(240,229,24)" rx="2" ry="2" />
<text  x="847.18" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (2 samples, 0.03%)</title><rect x="995.8" y="1941" width="0.4" height="15.0" fill="rgb(234,211,19)" rx="2" ry="2" />
<text  x="998.85" y="1951.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1168.6" y="2037" width="0.6" height="15.0" fill="rgb(234,139,49)" rx="2" ry="2" />
<text  x="1171.56" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1135.6" y="2005" width="0.4" height="15.0" fill="rgb(237,113,20)" rx="2" ry="2" />
<text  x="1138.61" y="2015.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="612.3" y="1877" width="0.2" height="15.0" fill="rgb(251,11,46)" rx="2" ry="2" />
<text  x="615.31" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="761.0" y="1557" width="0.2" height="15.0" fill="rgb(230,136,0)" rx="2" ry="2" />
<text  x="764.00" y="1567.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="112.2" y="1957" width="0.2" height="15.0" fill="rgb(205,225,28)" rx="2" ry="2" />
<text  x="115.24" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (3 samples, 0.05%)</title><rect x="892.4" y="1973" width="0.6" height="15.0" fill="rgb(226,137,10)" rx="2" ry="2" />
<text  x="895.42" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (1 samples, 0.02%)</title><rect x="891.6" y="1941" width="0.2" height="15.0" fill="rgb(239,46,17)" rx="2" ry="2" />
<text  x="894.63" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="328.4" y="1701" width="0.2" height="15.0" fill="rgb(231,157,37)" rx="2" ry="2" />
<text  x="331.43" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="830.5" y="1573" width="0.2" height="15.0" fill="rgb(228,196,0)" rx="2" ry="2" />
<text  x="833.48" y="1583.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29 samples, 0.49%)</title><rect x="1128.1" y="2037" width="5.7" height="15.0" fill="rgb(244,18,30)" rx="2" ry="2" />
<text  x="1131.06" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="701.6" y="1973" width="0.2" height="15.0" fill="rgb(223,142,10)" rx="2" ry="2" />
<text  x="704.64" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="85.8" y="1909" width="0.2" height="15.0" fill="rgb(220,222,41)" rx="2" ry="2" />
<text  x="88.83" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (9 samples, 0.15%)</title><rect x="341.1" y="1925" width="1.8" height="15.0" fill="rgb(240,111,21)" rx="2" ry="2" />
<text  x="344.13" y="1935.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="894.8" y="2005" width="0.4" height="15.0" fill="rgb(250,67,3)" rx="2" ry="2" />
<text  x="897.80" y="2015.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="1156.5" y="1733" width="0.1" height="15.0" fill="rgb(237,34,31)" rx="2" ry="2" />
<text  x="1159.45" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="936.5" y="1653" width="0.2" height="15.0" fill="rgb(231,161,11)" rx="2" ry="2" />
<text  x="939.49" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="491.0" y="1749" width="0.2" height="15.0" fill="rgb(224,46,37)" rx="2" ry="2" />
<text  x="494.01" y="1759.5" ></text>
</g>
<g >
<title>sock_alloc_inode (21 samples, 0.35%)</title><rect x="400.5" y="1909" width="4.2" height="15.0" fill="rgb(234,116,21)" rx="2" ry="2" />
<text  x="403.49" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="627.0" y="1861" width="0.2" height="15.0" fill="rgb(218,111,43)" rx="2" ry="2" />
<text  x="630.00" y="1871.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="648.2" y="2005" width="0.2" height="15.0" fill="rgb(234,59,42)" rx="2" ry="2" />
<text  x="651.24" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="743.1" y="1541" width="0.2" height="15.0" fill="rgb(233,41,0)" rx="2" ry="2" />
<text  x="746.13" y="1551.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="844.4" y="1621" width="0.2" height="15.0" fill="rgb(251,204,54)" rx="2" ry="2" />
<text  x="847.38" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="825.1" y="1797" width="0.2" height="15.0" fill="rgb(238,159,41)" rx="2" ry="2" />
<text  x="828.12" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="80.1" y="1701" width="0.2" height="15.0" fill="rgb(251,194,46)" rx="2" ry="2" />
<text  x="83.08" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="72.1" y="1733" width="0.2" height="15.0" fill="rgb(218,145,12)" rx="2" ry="2" />
<text  x="75.14" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="876.1" y="1893" width="0.2" height="15.0" fill="rgb(225,163,44)" rx="2" ry="2" />
<text  x="879.14" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (15 samples, 0.25%)</title><rect x="534.3" y="2005" width="3.0" height="15.0" fill="rgb(252,52,1)" rx="2" ry="2" />
<text  x="537.29" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="486.8" y="1701" width="0.2" height="15.0" fill="rgb(217,140,19)" rx="2" ry="2" />
<text  x="489.84" y="1711.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.05%)</title><rect x="775.3" y="1557" width="0.6" height="15.0" fill="rgb(225,202,31)" rx="2" ry="2" />
<text  x="778.29" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="936.5" y="1797" width="0.2" height="15.0" fill="rgb(244,216,20)" rx="2" ry="2" />
<text  x="939.49" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="775.3" y="1493" width="0.6" height="15.0" fill="rgb(230,44,2)" rx="2" ry="2" />
<text  x="778.29" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1048.9" y="1797" width="0.2" height="15.0" fill="rgb(233,15,29)" rx="2" ry="2" />
<text  x="1051.85" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="768.9" y="1669" width="0.2" height="15.0" fill="rgb(231,102,6)" rx="2" ry="2" />
<text  x="771.94" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="956.3" y="1893" width="0.2" height="15.0" fill="rgb(206,187,43)" rx="2" ry="2" />
<text  x="959.34" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="179.7" y="2021" width="0.2" height="15.0" fill="rgb(240,78,37)" rx="2" ry="2" />
<text  x="182.73" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="825.5" y="1397" width="0.2" height="15.0" fill="rgb(237,81,51)" rx="2" ry="2" />
<text  x="828.52" y="1407.5" ></text>
</g>
<g >
<title>__wake_up_common (7 samples, 0.12%)</title><rect x="301.6" y="1445" width="1.4" height="15.0" fill="rgb(210,39,44)" rx="2" ry="2" />
<text  x="304.63" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="676.2" y="1893" width="0.2" height="15.0" fill="rgb(211,91,12)" rx="2" ry="2" />
<text  x="679.23" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (33 samples, 0.56%)</title><rect x="1108.4" y="1541" width="6.6" height="15.0" fill="rgb(234,61,22)" rx="2" ry="2" />
<text  x="1111.41" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (442 samples, 7.44%)</title><rect x="255.2" y="2005" width="87.7" height="15.0" fill="rgb(232,75,32)" rx="2" ry="2" />
<text  x="258.17" y="2015.5" >do_syscall..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="876.1" y="1909" width="0.2" height="15.0" fill="rgb(220,89,40)" rx="2" ry="2" />
<text  x="879.14" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="250.2" y="2005" width="0.2" height="15.0" fill="rgb(228,96,24)" rx="2" ry="2" />
<text  x="253.21" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="998.0" y="1973" width="0.2" height="15.0" fill="rgb(238,80,51)" rx="2" ry="2" />
<text  x="1001.03" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1017.1" y="1797" width="0.2" height="15.0" fill="rgb(222,57,6)" rx="2" ry="2" />
<text  x="1020.09" y="1807.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(206,123,22)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="101.3" y="1957" width="1.0" height="15.0" fill="rgb(241,168,18)" rx="2" ry="2" />
<text  x="104.32" y="1967.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="883.7" y="1957" width="0.2" height="15.0" fill="rgb(248,172,9)" rx="2" ry="2" />
<text  x="886.68" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="856.7" y="1861" width="0.2" height="15.0" fill="rgb(240,120,30)" rx="2" ry="2" />
<text  x="859.69" y="1871.5" ></text>
</g>
<g >
<title>SYSC_accept4 (285 samples, 4.79%)</title><rect x="361.2" y="1973" width="56.6" height="15.0" fill="rgb(241,206,0)" rx="2" ry="2" />
<text  x="364.18" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="133.9" y="69" width="0.2" height="15.0" fill="rgb(254,40,11)" rx="2" ry="2" />
<text  x="136.88" y="79.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="310.8" y="1653" width="0.2" height="15.0" fill="rgb(253,113,38)" rx="2" ry="2" />
<text  x="313.76" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="613.1" y="1877" width="0.2" height="15.0" fill="rgb(241,193,51)" rx="2" ry="2" />
<text  x="616.10" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="136.5" y="149" width="0.2" height="15.0" fill="rgb(254,39,46)" rx="2" ry="2" />
<text  x="139.46" y="159.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="936.5" y="1525" width="0.2" height="15.0" fill="rgb(246,147,21)" rx="2" ry="2" />
<text  x="939.49" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="913.9" y="1845" width="0.2" height="15.0" fill="rgb(225,49,5)" rx="2" ry="2" />
<text  x="916.86" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="196.4" y="1797" width="0.2" height="15.0" fill="rgb(207,152,46)" rx="2" ry="2" />
<text  x="199.41" y="1807.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="973.6" y="1989" width="0.2" height="15.0" fill="rgb(245,83,51)" rx="2" ry="2" />
<text  x="976.61" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (7 samples, 0.12%)</title><rect x="650.4" y="1973" width="1.4" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="653.42" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1078.4" y="1829" width="0.4" height="15.0" fill="rgb(223,16,0)" rx="2" ry="2" />
<text  x="1081.43" y="1839.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1164.0" y="1957" width="0.2" height="15.0" fill="rgb(240,33,15)" rx="2" ry="2" />
<text  x="1166.99" y="1967.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="699.1" y="1845" width="0.2" height="15.0" fill="rgb(235,32,36)" rx="2" ry="2" />
<text  x="702.06" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="462.0" y="1957" width="0.2" height="15.0" fill="rgb(208,52,8)" rx="2" ry="2" />
<text  x="465.03" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="705.0" y="2037" width="0.2" height="15.0" fill="rgb(239,108,41)" rx="2" ry="2" />
<text  x="708.02" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (2 samples, 0.03%)</title><rect x="161.7" y="1941" width="0.4" height="15.0" fill="rgb(249,79,3)" rx="2" ry="2" />
<text  x="164.67" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="136.9" y="341" width="0.2" height="15.0" fill="rgb(247,227,22)" rx="2" ry="2" />
<text  x="139.85" y="351.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="646.1" y="1861" width="0.2" height="15.0" fill="rgb(211,14,14)" rx="2" ry="2" />
<text  x="649.06" y="1871.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="400.1" y="1877" width="0.2" height="15.0" fill="rgb(254,138,33)" rx="2" ry="2" />
<text  x="403.09" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (18 samples, 0.30%)</title><rect x="636.3" y="1941" width="3.6" height="15.0" fill="rgb(225,87,45)" rx="2" ry="2" />
<text  x="639.33" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="401.5" y="1861" width="0.4" height="15.0" fill="rgb(226,152,10)" rx="2" ry="2" />
<text  x="404.48" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="226.6" y="1941" width="0.4" height="15.0" fill="rgb(206,117,21)" rx="2" ry="2" />
<text  x="229.58" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="543.8" y="1749" width="0.2" height="15.0" fill="rgb(248,59,29)" rx="2" ry="2" />
<text  x="546.82" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="483.1" y="1717" width="0.4" height="15.0" fill="rgb(207,169,48)" rx="2" ry="2" />
<text  x="486.07" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::AsyncWriter (1 samples, 0.02%)</title><rect x="566.5" y="1989" width="0.1" height="15.0" fill="rgb(233,221,19)" rx="2" ry="2" />
<text  x="569.45" y="1999.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.03%)</title><rect x="492.6" y="2021" width="0.4" height="15.0" fill="rgb(247,118,44)" rx="2" ry="2" />
<text  x="495.60" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="830.5" y="1669" width="0.2" height="15.0" fill="rgb(243,140,5)" rx="2" ry="2" />
<text  x="833.48" y="1679.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="932.7" y="1797" width="0.8" height="15.0" fill="rgb(207,74,23)" rx="2" ry="2" />
<text  x="935.72" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="651.8" y="1861" width="0.2" height="15.0" fill="rgb(239,50,3)" rx="2" ry="2" />
<text  x="654.81" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="61.8" y="1909" width="0.6" height="15.0" fill="rgb(221,184,9)" rx="2" ry="2" />
<text  x="64.81" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (2 samples, 0.03%)</title><rect x="795.1" y="1557" width="0.4" height="15.0" fill="rgb(238,150,15)" rx="2" ry="2" />
<text  x="798.14" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="138.0" y="1237" width="0.2" height="15.0" fill="rgb(246,24,33)" rx="2" ry="2" />
<text  x="141.05" y="1247.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="81.9" y="1845" width="0.2" height="15.0" fill="rgb(239,102,48)" rx="2" ry="2" />
<text  x="84.86" y="1855.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="982.2" y="1653" width="0.1" height="15.0" fill="rgb(215,76,54)" rx="2" ry="2" />
<text  x="985.15" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="204.5" y="2021" width="0.6" height="15.0" fill="rgb(226,90,36)" rx="2" ry="2" />
<text  x="207.55" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="733.8" y="1493" width="0.2" height="15.0" fill="rgb(224,62,10)" rx="2" ry="2" />
<text  x="736.80" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="135.9" y="85" width="0.2" height="15.0" fill="rgb(205,87,36)" rx="2" ry="2" />
<text  x="138.86" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="241.7" y="1621" width="0.2" height="15.0" fill="rgb(219,16,8)" rx="2" ry="2" />
<text  x="244.67" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="264.7" y="1973" width="0.2" height="15.0" fill="rgb(216,221,41)" rx="2" ry="2" />
<text  x="267.70" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="594.8" y="1781" width="0.2" height="15.0" fill="rgb(222,74,22)" rx="2" ry="2" />
<text  x="597.84" y="1791.5" ></text>
</g>
<g >
<title>sock_close (3 samples, 0.05%)</title><rect x="823.5" y="1813" width="0.6" height="15.0" fill="rgb(238,178,11)" rx="2" ry="2" />
<text  x="826.53" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="968.1" y="1765" width="0.2" height="15.0" fill="rgb(234,56,43)" rx="2" ry="2" />
<text  x="971.06" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (2 samples, 0.03%)</title><rect x="82.1" y="1941" width="0.4" height="15.0" fill="rgb(222,10,7)" rx="2" ry="2" />
<text  x="85.06" y="1951.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="611.5" y="1861" width="0.4" height="15.0" fill="rgb(227,187,34)" rx="2" ry="2" />
<text  x="614.51" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="659.2" y="1797" width="0.2" height="15.0" fill="rgb(247,4,1)" rx="2" ry="2" />
<text  x="662.16" y="1807.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="638.7" y="1845" width="0.2" height="15.0" fill="rgb(247,164,18)" rx="2" ry="2" />
<text  x="641.71" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="176.0" y="1957" width="0.2" height="15.0" fill="rgb(208,183,3)" rx="2" ry="2" />
<text  x="178.96" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1086.6" y="1829" width="0.2" height="15.0" fill="rgb(210,204,3)" rx="2" ry="2" />
<text  x="1089.57" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="504.9" y="1765" width="0.6" height="15.0" fill="rgb(212,54,25)" rx="2" ry="2" />
<text  x="507.91" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="240.3" y="1861" width="0.2" height="15.0" fill="rgb(216,224,51)" rx="2" ry="2" />
<text  x="243.28" y="1871.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (4 samples, 0.07%)</title><rect x="569.4" y="1989" width="0.8" height="15.0" fill="rgb(235,43,23)" rx="2" ry="2" />
<text  x="572.43" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="651.8" y="1925" width="0.2" height="15.0" fill="rgb(214,45,23)" rx="2" ry="2" />
<text  x="654.81" y="1935.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="1183.1" y="1733" width="0.2" height="15.0" fill="rgb(222,179,53)" rx="2" ry="2" />
<text  x="1186.05" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="905.7" y="1973" width="0.4" height="15.0" fill="rgb(247,114,26)" rx="2" ry="2" />
<text  x="908.72" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="92.4" y="1925" width="0.4" height="15.0" fill="rgb(245,102,44)" rx="2" ry="2" />
<text  x="95.39" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="699.1" y="1925" width="0.8" height="15.0" fill="rgb(245,96,14)" rx="2" ry="2" />
<text  x="702.06" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (9 samples, 0.15%)</title><rect x="513.4" y="1973" width="1.8" height="15.0" fill="rgb(215,64,12)" rx="2" ry="2" />
<text  x="516.45" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="1180.3" y="2005" width="0.8" height="15.0" fill="rgb(217,212,14)" rx="2" ry="2" />
<text  x="1183.27" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (3 samples, 0.05%)</title><rect x="973.4" y="2037" width="0.6" height="15.0" fill="rgb(223,23,40)" rx="2" ry="2" />
<text  x="976.42" y="2047.5" ></text>
</g>
<g >
<title>sk_reset_timer (20 samples, 0.34%)</title><rect x="802.9" y="1637" width="4.0" height="15.0" fill="rgb(217,85,26)" rx="2" ry="2" />
<text  x="805.89" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (3 samples, 0.05%)</title><rect x="704.4" y="2037" width="0.6" height="15.0" fill="rgb(227,58,38)" rx="2" ry="2" />
<text  x="707.42" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1052.0" y="1765" width="0.2" height="15.0" fill="rgb(206,94,6)" rx="2" ry="2" />
<text  x="1055.03" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="134.5" y="133" width="0.2" height="15.0" fill="rgb(242,47,35)" rx="2" ry="2" />
<text  x="137.47" y="143.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="291.7" y="1829" width="0.2" height="15.0" fill="rgb(251,6,17)" rx="2" ry="2" />
<text  x="294.70" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="821" width="17.9" height="15.0" fill="rgb(231,60,52)" rx="2" ry="2" />
<text  x="122.19" y="831.5" ></text>
</g>
<g >
<title>[unknown] (125 samples, 2.10%)</title><rect x="117.8" y="1829" width="24.8" height="15.0" fill="rgb(206,139,0)" rx="2" ry="2" />
<text  x="120.80" y="1839.5" >[..</text>
</g>
<g >
<title>_mix_pool_bytes (1 samples, 0.02%)</title><rect x="351.1" y="1893" width="0.2" height="15.0" fill="rgb(233,132,13)" rx="2" ry="2" />
<text  x="354.06" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="167.0" y="1701" width="0.2" height="15.0" fill="rgb(224,163,22)" rx="2" ry="2" />
<text  x="170.03" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="843.8" y="1877" width="0.4" height="15.0" fill="rgb(227,137,40)" rx="2" ry="2" />
<text  x="846.78" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="134.1" y="69" width="0.2" height="15.0" fill="rgb(216,53,6)" rx="2" ry="2" />
<text  x="137.07" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.9" y="469" width="0.2" height="15.0" fill="rgb(213,47,39)" rx="2" ry="2" />
<text  x="139.85" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="343.3" y="2005" width="0.8" height="15.0" fill="rgb(243,106,21)" rx="2" ry="2" />
<text  x="346.31" y="2015.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="144.8" y="1957" width="0.2" height="15.0" fill="rgb(248,17,17)" rx="2" ry="2" />
<text  x="147.79" y="1967.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1106.6" y="1589" width="0.2" height="15.0" fill="rgb(241,170,27)" rx="2" ry="2" />
<text  x="1109.62" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="955.9" y="1925" width="0.2" height="15.0" fill="rgb(214,119,42)" rx="2" ry="2" />
<text  x="958.95" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="156.3" y="1989" width="0.2" height="15.0" fill="rgb(219,183,3)" rx="2" ry="2" />
<text  x="159.31" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="982.0" y="1909" width="0.3" height="15.0" fill="rgb(218,187,18)" rx="2" ry="2" />
<text  x="984.95" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="198.2" y="2021" width="0.2" height="15.0" fill="rgb(222,41,18)" rx="2" ry="2" />
<text  x="201.20" y="2031.5" ></text>
</g>
<g >
<title>remove_wait_queue (19 samples, 0.32%)</title><rect x="479.7" y="1941" width="3.8" height="15.0" fill="rgb(235,8,43)" rx="2" ry="2" />
<text  x="482.70" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="646.1" y="1845" width="0.2" height="15.0" fill="rgb(253,140,42)" rx="2" ry="2" />
<text  x="649.06" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="72.1" y="1829" width="0.2" height="15.0" fill="rgb(227,31,12)" rx="2" ry="2" />
<text  x="75.14" y="1839.5" ></text>
</g>
<g >
<title>__d_instantiate (7 samples, 0.12%)</title><rect x="414.8" y="1925" width="1.4" height="15.0" fill="rgb(241,100,18)" rx="2" ry="2" />
<text  x="417.78" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="149.2" y="1925" width="0.2" height="15.0" fill="rgb(248,93,27)" rx="2" ry="2" />
<text  x="152.16" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="115.6" y="1957" width="0.2" height="15.0" fill="rgb(250,170,25)" rx="2" ry="2" />
<text  x="118.61" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="628.0" y="2005" width="0.6" height="15.0" fill="rgb(207,12,31)" rx="2" ry="2" />
<text  x="630.99" y="2015.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="932.3" y="1861" width="0.2" height="15.0" fill="rgb(237,188,13)" rx="2" ry="2" />
<text  x="935.32" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (49 samples, 0.82%)</title><rect x="927.8" y="1957" width="9.7" height="15.0" fill="rgb(251,13,24)" rx="2" ry="2" />
<text  x="930.76" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="989.5" y="1893" width="0.2" height="15.0" fill="rgb(232,155,3)" rx="2" ry="2" />
<text  x="992.50" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="916.2" y="1989" width="0.2" height="15.0" fill="rgb(250,147,5)" rx="2" ry="2" />
<text  x="919.24" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="178.9" y="1909" width="0.2" height="15.0" fill="rgb(217,229,52)" rx="2" ry="2" />
<text  x="181.94" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (15 samples, 0.25%)</title><rect x="1148.9" y="2021" width="3.0" height="15.0" fill="rgb(230,184,23)" rx="2" ry="2" />
<text  x="1151.91" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1093" width="18.5" height="15.0" fill="rgb(245,50,54)" rx="2" ry="2" />
<text  x="121.79" y="1103.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="762.6" y="1589" width="0.4" height="15.0" fill="rgb(222,180,43)" rx="2" ry="2" />
<text  x="765.59" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="163.3" y="1797" width="0.2" height="15.0" fill="rgb(206,174,43)" rx="2" ry="2" />
<text  x="166.26" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="61.6" y="1717" width="0.2" height="15.0" fill="rgb(217,87,45)" rx="2" ry="2" />
<text  x="64.62" y="1727.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="458.5" y="1797" width="0.2" height="15.0" fill="rgb(237,19,49)" rx="2" ry="2" />
<text  x="461.46" y="1807.5" ></text>
</g>
<g >
<title>tcp_poll (18 samples, 0.30%)</title><rect x="505.7" y="1893" width="3.6" height="15.0" fill="rgb(235,170,50)" rx="2" ry="2" />
<text  x="508.70" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="289.3" y="1685" width="0.2" height="15.0" fill="rgb(233,196,47)" rx="2" ry="2" />
<text  x="292.32" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1106.4" y="1893" width="0.4" height="15.0" fill="rgb(233,142,27)" rx="2" ry="2" />
<text  x="1109.42" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="138.0" y="981" width="0.2" height="15.0" fill="rgb(237,124,6)" rx="2" ry="2" />
<text  x="141.05" y="991.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="842.2" y="1765" width="0.2" height="15.0" fill="rgb(208,181,15)" rx="2" ry="2" />
<text  x="845.19" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="597.0" y="1813" width="0.2" height="15.0" fill="rgb(218,220,50)" rx="2" ry="2" />
<text  x="600.02" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="443.8" y="1957" width="0.2" height="15.0" fill="rgb(232,81,31)" rx="2" ry="2" />
<text  x="446.77" y="1967.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="807.7" y="1685" width="0.3" height="15.0" fill="rgb(214,38,27)" rx="2" ry="2" />
<text  x="810.65" y="1695.5" ></text>
</g>
<g >
<title>folly::canNallocx (1 samples, 0.02%)</title><rect x="649.2" y="1973" width="0.2" height="15.0" fill="rgb(206,210,43)" rx="2" ry="2" />
<text  x="652.23" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="652.6" y="2005" width="0.2" height="15.0" fill="rgb(244,223,28)" rx="2" ry="2" />
<text  x="655.61" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (22 samples, 0.37%)</title><rect x="546.4" y="1973" width="4.4" height="15.0" fill="rgb(231,114,39)" rx="2" ry="2" />
<text  x="549.40" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="547.8" y="1957" width="0.6" height="15.0" fill="rgb(232,220,19)" rx="2" ry="2" />
<text  x="550.79" y="1967.5" ></text>
</g>
<g >
<title>ip_send_check (3 samples, 0.05%)</title><rect x="770.1" y="1621" width="0.6" height="15.0" fill="rgb(214,70,41)" rx="2" ry="2" />
<text  x="773.13" y="1631.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="135.1" y="101" width="0.8" height="15.0" fill="rgb(254,146,25)" rx="2" ry="2" />
<text  x="138.07" y="111.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1605" width="0.2" height="15.0" fill="rgb(242,64,16)" rx="2" ry="2" />
<text  x="828.12" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1106.6" y="1669" width="0.2" height="15.0" fill="rgb(226,165,46)" rx="2" ry="2" />
<text  x="1109.62" y="1679.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="772.7" y="1557" width="0.2" height="15.0" fill="rgb(228,97,36)" rx="2" ry="2" />
<text  x="775.71" y="1567.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="676.4" y="1925" width="0.2" height="15.0" fill="rgb(236,208,19)" rx="2" ry="2" />
<text  x="679.43" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="61.8" y="1893" width="0.2" height="15.0" fill="rgb(253,106,10)" rx="2" ry="2" />
<text  x="64.81" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1018.3" y="1909" width="0.2" height="15.0" fill="rgb(223,208,9)" rx="2" ry="2" />
<text  x="1021.28" y="1919.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(248,154,25)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (1 samples, 0.02%)</title><rect x="161.1" y="1941" width="0.2" height="15.0" fill="rgb(221,179,43)" rx="2" ry="2" />
<text  x="164.07" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (131 samples, 2.20%)</title><rect x="769.9" y="1653" width="26.0" height="15.0" fill="rgb(249,11,0)" rx="2" ry="2" />
<text  x="772.93" y="1663.5" >i..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="622.6" y="2005" width="0.6" height="15.0" fill="rgb(237,103,26)" rx="2" ry="2" />
<text  x="625.63" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="119.2" y="373" width="17.3" height="15.0" fill="rgb(219,40,22)" rx="2" ry="2" />
<text  x="122.19" y="383.5" ></text>
</g>
<g >
<title>ip_rcv_finish (38 samples, 0.64%)</title><rect x="1107.4" y="1637" width="7.6" height="15.0" fill="rgb(217,211,54)" rx="2" ry="2" />
<text  x="1110.42" y="1647.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="928.5" y="1925" width="1.2" height="15.0" fill="rgb(251,35,23)" rx="2" ry="2" />
<text  x="931.55" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1176.9" y="2021" width="0.4" height="15.0" fill="rgb(252,178,37)" rx="2" ry="2" />
<text  x="1179.90" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="418.2" y="1925" width="0.2" height="15.0" fill="rgb(231,48,42)" rx="2" ry="2" />
<text  x="421.16" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="982.0" y="1877" width="0.3" height="15.0" fill="rgb(207,6,45)" rx="2" ry="2" />
<text  x="984.95" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="408.4" y="1653" width="0.2" height="15.0" fill="rgb(250,185,6)" rx="2" ry="2" />
<text  x="411.43" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="149.8" y="1957" width="0.2" height="15.0" fill="rgb(252,181,53)" rx="2" ry="2" />
<text  x="152.76" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="115.6" y="1877" width="0.2" height="15.0" fill="rgb(232,13,23)" rx="2" ry="2" />
<text  x="118.61" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="844.4" y="1781" width="0.2" height="15.0" fill="rgb(219,70,5)" rx="2" ry="2" />
<text  x="847.38" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="724.5" y="1845" width="0.2" height="15.0" fill="rgb(221,39,43)" rx="2" ry="2" />
<text  x="727.47" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="185.9" y="1973" width="0.6" height="15.0" fill="rgb(225,121,8)" rx="2" ry="2" />
<text  x="188.89" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1154.3" y="1701" width="0.2" height="15.0" fill="rgb(207,228,27)" rx="2" ry="2" />
<text  x="1157.27" y="1711.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="413.0" y="1909" width="0.2" height="15.0" fill="rgb(226,88,17)" rx="2" ry="2" />
<text  x="415.99" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="600.8" y="2005" width="0.2" height="15.0" fill="rgb(208,80,33)" rx="2" ry="2" />
<text  x="603.79" y="2015.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="293.3" y="1813" width="0.2" height="15.0" fill="rgb(249,130,12)" rx="2" ry="2" />
<text  x="296.29" y="1823.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="759.8" y="1653" width="0.2" height="15.0" fill="rgb(235,18,33)" rx="2" ry="2" />
<text  x="762.81" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.0" y="1957" width="0.2" height="15.0" fill="rgb(217,227,45)" rx="2" ry="2" />
<text  x="577.99" y="1967.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="248.0" y="1957" width="0.4" height="15.0" fill="rgb(246,159,6)" rx="2" ry="2" />
<text  x="251.02" y="1967.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="866.4" y="1989" width="0.6" height="15.0" fill="rgb(230,151,40)" rx="2" ry="2" />
<text  x="869.41" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="706.0" y="1653" width="0.2" height="15.0" fill="rgb(252,103,28)" rx="2" ry="2" />
<text  x="709.01" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (8 samples, 0.13%)</title><rect x="233.7" y="1909" width="1.6" height="15.0" fill="rgb(244,191,42)" rx="2" ry="2" />
<text  x="236.73" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="533.7" y="1941" width="0.4" height="15.0" fill="rgb(218,114,30)" rx="2" ry="2" />
<text  x="536.69" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.7" y="1893" width="0.2" height="15.0" fill="rgb(221,149,48)" rx="2" ry="2" />
<text  x="887.68" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="745.9" y="1685" width="0.2" height="15.0" fill="rgb(243,67,5)" rx="2" ry="2" />
<text  x="748.91" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="135.1" y="197" width="0.8" height="15.0" fill="rgb(221,164,19)" rx="2" ry="2" />
<text  x="138.07" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="838.4" y="1909" width="0.2" height="15.0" fill="rgb(253,39,39)" rx="2" ry="2" />
<text  x="841.42" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="118.8" y="1253" width="18.8" height="15.0" fill="rgb(245,178,2)" rx="2" ry="2" />
<text  x="121.79" y="1263.5" ></text>
</g>
<g >
<title>__GI___getpeername (48 samples, 0.81%)</title><rect x="669.3" y="1941" width="9.5" height="15.0" fill="rgb(249,163,29)" rx="2" ry="2" />
<text  x="672.28" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="174.6" y="1941" width="0.4" height="15.0" fill="rgb(246,15,25)" rx="2" ry="2" />
<text  x="177.57" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (2 samples, 0.03%)</title><rect x="1151.1" y="1989" width="0.4" height="15.0" fill="rgb(250,213,48)" rx="2" ry="2" />
<text  x="1154.09" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="844.2" y="1909" width="0.2" height="15.0" fill="rgb(243,228,3)" rx="2" ry="2" />
<text  x="847.18" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="242.3" y="1861" width="0.4" height="15.0" fill="rgb(207,185,34)" rx="2" ry="2" />
<text  x="245.27" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="581.1" y="2005" width="0.2" height="15.0" fill="rgb(246,216,46)" rx="2" ry="2" />
<text  x="584.14" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="662.3" y="1717" width="0.2" height="15.0" fill="rgb(244,200,32)" rx="2" ry="2" />
<text  x="665.34" y="1727.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="145.8" y="1989" width="0.2" height="15.0" fill="rgb(224,116,35)" rx="2" ry="2" />
<text  x="148.79" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="83.5" y="1957" width="0.2" height="15.0" fill="rgb(211,155,36)" rx="2" ry="2" />
<text  x="86.45" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1048.5" y="1957" width="0.2" height="15.0" fill="rgb(208,11,34)" rx="2" ry="2" />
<text  x="1051.46" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (1 samples, 0.02%)</title><rect x="565.5" y="1989" width="0.2" height="15.0" fill="rgb(238,206,2)" rx="2" ry="2" />
<text  x="568.46" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="167.2" y="1893" width="0.6" height="15.0" fill="rgb(246,32,11)" rx="2" ry="2" />
<text  x="170.23" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (30 samples, 0.50%)</title><rect x="985.1" y="1957" width="6.0" height="15.0" fill="rgb(216,153,5)" rx="2" ry="2" />
<text  x="988.13" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.59%)</title><rect x="1156.8" y="1957" width="7.0" height="15.0" fill="rgb(215,99,33)" rx="2" ry="2" />
<text  x="1159.85" y="1967.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="443.6" y="1941" width="0.2" height="15.0" fill="rgb(247,75,2)" rx="2" ry="2" />
<text  x="446.57" y="1951.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="800.1" y="1653" width="0.4" height="15.0" fill="rgb(215,96,40)" rx="2" ry="2" />
<text  x="803.11" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="483.1" y="1877" width="0.4" height="15.0" fill="rgb(240,182,47)" rx="2" ry="2" />
<text  x="486.07" y="1887.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="746.9" y="1749" width="0.4" height="15.0" fill="rgb(215,200,16)" rx="2" ry="2" />
<text  x="749.90" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="692.1" y="1877" width="0.4" height="15.0" fill="rgb(221,215,51)" rx="2" ry="2" />
<text  x="695.11" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="547.6" y="1829" width="0.2" height="15.0" fill="rgb(235,218,29)" rx="2" ry="2" />
<text  x="550.59" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="408.2" y="1829" width="0.2" height="15.0" fill="rgb(235,149,52)" rx="2" ry="2" />
<text  x="411.23" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="535.7" y="1925" width="0.2" height="15.0" fill="rgb(226,204,13)" rx="2" ry="2" />
<text  x="538.68" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="406.6" y="1909" width="0.2" height="15.0" fill="rgb(214,219,46)" rx="2" ry="2" />
<text  x="409.64" y="1919.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="138.0" y="1013" width="0.2" height="15.0" fill="rgb(219,59,19)" rx="2" ry="2" />
<text  x="141.05" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (113 samples, 1.90%)</title><rect x="118.2" y="1653" width="22.4" height="15.0" fill="rgb(243,133,14)" rx="2" ry="2" />
<text  x="121.19" y="1663.5" >[..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.77%)</title><rect x="553.1" y="1973" width="9.2" height="15.0" fill="rgb(246,105,42)" rx="2" ry="2" />
<text  x="556.15" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1054.0" y="1909" width="0.2" height="15.0" fill="rgb(225,220,20)" rx="2" ry="2" />
<text  x="1057.01" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1002.4" y="1973" width="0.2" height="15.0" fill="rgb(236,223,18)" rx="2" ry="2" />
<text  x="1005.40" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="74.9" y="1765" width="0.2" height="15.0" fill="rgb(221,123,28)" rx="2" ry="2" />
<text  x="77.92" y="1775.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="772.7" y="1477" width="0.2" height="15.0" fill="rgb(241,185,49)" rx="2" ry="2" />
<text  x="775.71" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="627.2" y="1733" width="0.2" height="15.0" fill="rgb(250,205,48)" rx="2" ry="2" />
<text  x="630.20" y="1743.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="264.7" y="1717" width="0.2" height="15.0" fill="rgb(248,211,51)" rx="2" ry="2" />
<text  x="267.70" y="1727.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (20 samples, 0.34%)</title><rect x="468.2" y="1925" width="4.0" height="15.0" fill="rgb(235,170,48)" rx="2" ry="2" />
<text  x="471.18" y="1935.5" ></text>
</g>
<g >
<title>common_interrupt (3 samples, 0.05%)</title><rect x="254.2" y="2021" width="0.6" height="15.0" fill="rgb(230,84,11)" rx="2" ry="2" />
<text  x="257.18" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1701" width="0.2" height="15.0" fill="rgb(208,83,21)" rx="2" ry="2" />
<text  x="847.38" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="20.9" y="1925" width="0.2" height="15.0" fill="rgb(240,195,33)" rx="2" ry="2" />
<text  x="23.92" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="104.9" y="1781" width="0.2" height="15.0" fill="rgb(217,120,49)" rx="2" ry="2" />
<text  x="107.89" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (127 samples, 2.14%)</title><rect x="117.8" y="1861" width="25.2" height="15.0" fill="rgb(237,114,22)" rx="2" ry="2" />
<text  x="120.80" y="1871.5" >[..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="983.7" y="1941" width="0.2" height="15.0" fill="rgb(210,204,34)" rx="2" ry="2" />
<text  x="986.74" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="74.9" y="1717" width="0.2" height="15.0" fill="rgb(207,93,47)" rx="2" ry="2" />
<text  x="77.92" y="1727.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="936.5" y="1573" width="0.2" height="15.0" fill="rgb(254,184,30)" rx="2" ry="2" />
<text  x="939.49" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="762.6" y="1573" width="0.4" height="15.0" fill="rgb(242,109,39)" rx="2" ry="2" />
<text  x="765.59" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="175.2" y="1925" width="0.2" height="15.0" fill="rgb(205,112,47)" rx="2" ry="2" />
<text  x="178.17" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="957.5" y="2005" width="3.4" height="15.0" fill="rgb(234,3,33)" rx="2" ry="2" />
<text  x="960.53" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="149.6" y="1941" width="0.2" height="15.0" fill="rgb(251,206,26)" rx="2" ry="2" />
<text  x="152.56" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="753.9" y="1637" width="0.2" height="15.0" fill="rgb(211,210,42)" rx="2" ry="2" />
<text  x="756.85" y="1647.5" ></text>
</g>
<g >
<title>security_inode_alloc (1 samples, 0.02%)</title><rect x="400.3" y="1909" width="0.2" height="15.0" fill="rgb(241,7,30)" rx="2" ry="2" />
<text  x="403.29" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (3 samples, 0.05%)</title><rect x="927.8" y="1941" width="0.6" height="15.0" fill="rgb(223,90,13)" rx="2" ry="2" />
<text  x="930.76" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="846.6" y="1893" width="0.6" height="15.0" fill="rgb(243,210,31)" rx="2" ry="2" />
<text  x="849.56" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="825.1" y="1717" width="0.2" height="15.0" fill="rgb(240,170,33)" rx="2" ry="2" />
<text  x="828.12" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="863.0" y="1989" width="0.2" height="15.0" fill="rgb(249,90,0)" rx="2" ry="2" />
<text  x="866.04" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="633.9" y="1973" width="0.2" height="15.0" fill="rgb(228,223,44)" rx="2" ry="2" />
<text  x="636.95" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="119.0" y="869" width="0.2" height="15.0" fill="rgb(229,49,5)" rx="2" ry="2" />
<text  x="121.99" y="879.5" ></text>
</g>
<g >
<title>skb_free_head (13 samples, 0.22%)</title><rect x="1110.6" y="1461" width="2.6" height="15.0" fill="rgb(213,83,6)" rx="2" ry="2" />
<text  x="1113.59" y="1471.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (2 samples, 0.03%)</title><rect x="724.1" y="1845" width="0.4" height="15.0" fill="rgb(233,126,0)" rx="2" ry="2" />
<text  x="727.07" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="818.6" y="1701" width="0.2" height="15.0" fill="rgb(212,210,26)" rx="2" ry="2" />
<text  x="821.57" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="510.9" y="1845" width="0.2" height="15.0" fill="rgb(214,122,42)" rx="2" ry="2" />
<text  x="513.86" y="1855.5" ></text>
</g>
<g >
<title>memset_erms (3 samples, 0.05%)</title><rect x="411.8" y="1893" width="0.6" height="15.0" fill="rgb(253,141,19)" rx="2" ry="2" />
<text  x="414.80" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="322.9" y="1797" width="0.2" height="15.0" fill="rgb(223,229,31)" rx="2" ry="2" />
<text  x="325.87" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="118.8" y="1365" width="19.4" height="15.0" fill="rgb(210,156,46)" rx="2" ry="2" />
<text  x="121.79" y="1375.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="629.2" y="2005" width="0.2" height="15.0" fill="rgb(211,124,19)" rx="2" ry="2" />
<text  x="632.18" y="2015.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="668.5" y="1925" width="0.2" height="15.0" fill="rgb(239,87,50)" rx="2" ry="2" />
<text  x="671.49" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (10 samples, 0.17%)</title><rect x="157.7" y="2005" width="2.0" height="15.0" fill="rgb(216,53,26)" rx="2" ry="2" />
<text  x="160.70" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="114.8" y="1733" width="0.2" height="15.0" fill="rgb(234,84,30)" rx="2" ry="2" />
<text  x="117.82" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="136.9" y="405" width="0.2" height="15.0" fill="rgb(243,55,7)" rx="2" ry="2" />
<text  x="139.85" y="415.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="133.5" y="69" width="0.4" height="15.0" fill="rgb(227,147,7)" rx="2" ry="2" />
<text  x="136.48" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="88.6" y="1909" width="0.2" height="15.0" fill="rgb(209,205,3)" rx="2" ry="2" />
<text  x="91.61" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (15 samples, 0.25%)</title><rect x="1168.6" y="2053" width="2.9" height="15.0" fill="rgb(242,148,50)" rx="2" ry="2" />
<text  x="1171.56" y="2063.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="384.6" y="1925" width="0.4" height="15.0" fill="rgb(235,87,33)" rx="2" ry="2" />
<text  x="387.61" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (7 samples, 0.12%)</title><rect x="890.6" y="1957" width="1.4" height="15.0" fill="rgb(218,118,8)" rx="2" ry="2" />
<text  x="893.63" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="659.2" y="1845" width="0.2" height="15.0" fill="rgb(247,198,19)" rx="2" ry="2" />
<text  x="662.16" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="247.4" y="1893" width="0.2" height="15.0" fill="rgb(228,224,0)" rx="2" ry="2" />
<text  x="250.43" y="1903.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="489.0" y="1941" width="0.2" height="15.0" fill="rgb(231,24,53)" rx="2" ry="2" />
<text  x="492.03" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="392.7" y="1941" width="0.2" height="15.0" fill="rgb(246,199,10)" rx="2" ry="2" />
<text  x="395.75" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="628.4" y="1941" width="0.2" height="15.0" fill="rgb(236,125,33)" rx="2" ry="2" />
<text  x="631.39" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="842.6" y="1733" width="0.2" height="15.0" fill="rgb(223,179,25)" rx="2" ry="2" />
<text  x="845.59" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (9 samples, 0.15%)</title><rect x="89.8" y="1941" width="1.8" height="15.0" fill="rgb(206,50,8)" rx="2" ry="2" />
<text  x="92.80" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="700.6" y="1781" width="0.2" height="15.0" fill="rgb(248,76,15)" rx="2" ry="2" />
<text  x="703.65" y="1791.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="945.4" y="1925" width="0.2" height="15.0" fill="rgb(236,207,7)" rx="2" ry="2" />
<text  x="948.42" y="1935.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(252,205,16)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="907.5" y="2005" width="0.4" height="15.0" fill="rgb(247,81,14)" rx="2" ry="2" />
<text  x="910.51" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.13%)</title><rect x="851.1" y="1909" width="1.6" height="15.0" fill="rgb(221,86,9)" rx="2" ry="2" />
<text  x="854.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="118.8" y="1269" width="19.0" height="15.0" fill="rgb(238,32,0)" rx="2" ry="2" />
<text  x="121.79" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="701.4" y="1829" width="0.2" height="15.0" fill="rgb(227,100,31)" rx="2" ry="2" />
<text  x="704.44" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="491.0" y="1701" width="0.2" height="15.0" fill="rgb(232,132,2)" rx="2" ry="2" />
<text  x="494.01" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="899.6" y="1589" width="0.2" height="15.0" fill="rgb(214,51,40)" rx="2" ry="2" />
<text  x="902.57" y="1599.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="135.1" y="53" width="0.8" height="15.0" fill="rgb(219,191,8)" rx="2" ry="2" />
<text  x="138.07" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="528.7" y="1893" width="0.2" height="15.0" fill="rgb(254,29,46)" rx="2" ry="2" />
<text  x="531.73" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::FibersPoolResizer::run (2 samples, 0.03%)</title><rect x="20.7" y="2005" width="0.4" height="15.0" fill="rgb(223,53,23)" rx="2" ry="2" />
<text  x="23.72" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="428.5" y="1989" width="0.2" height="15.0" fill="rgb(227,219,26)" rx="2" ry="2" />
<text  x="431.48" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (2 samples, 0.03%)</title><rect x="543.6" y="1989" width="0.4" height="15.0" fill="rgb(207,120,15)" rx="2" ry="2" />
<text  x="546.62" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="350.7" y="1829" width="0.2" height="15.0" fill="rgb(253,118,49)" rx="2" ry="2" />
<text  x="353.66" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="483.3" y="1653" width="0.2" height="15.0" fill="rgb(208,153,17)" rx="2" ry="2" />
<text  x="486.27" y="1663.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (5 samples, 0.08%)</title><rect x="98.1" y="1957" width="1.0" height="15.0" fill="rgb(241,215,16)" rx="2" ry="2" />
<text  x="101.14" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (6 samples, 0.10%)</title><rect x="995.3" y="1973" width="1.1" height="15.0" fill="rgb(227,215,27)" rx="2" ry="2" />
<text  x="998.25" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="168.0" y="1893" width="0.2" height="15.0" fill="rgb(206,158,51)" rx="2" ry="2" />
<text  x="171.02" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (76 samples, 1.28%)</title><rect x="977.4" y="2005" width="15.1" height="15.0" fill="rgb(213,80,3)" rx="2" ry="2" />
<text  x="980.39" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="851.3" y="1893" width="0.8" height="15.0" fill="rgb(246,93,37)" rx="2" ry="2" />
<text  x="854.33" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="913.9" y="1829" width="0.2" height="15.0" fill="rgb(208,83,30)" rx="2" ry="2" />
<text  x="916.86" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="505.3" y="1589" width="0.2" height="15.0" fill="rgb(236,50,15)" rx="2" ry="2" />
<text  x="508.31" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="196.4" y="1893" width="0.2" height="15.0" fill="rgb(247,186,14)" rx="2" ry="2" />
<text  x="199.41" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1151.5" y="1989" width="0.2" height="15.0" fill="rgb(220,133,43)" rx="2" ry="2" />
<text  x="1154.49" y="1999.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.02%)</title><rect x="100.7" y="1845" width="0.2" height="15.0" fill="rgb(240,195,5)" rx="2" ry="2" />
<text  x="103.72" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="168.0" y="1877" width="0.2" height="15.0" fill="rgb(249,158,9)" rx="2" ry="2" />
<text  x="171.02" y="1887.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="180.9" y="2021" width="0.2" height="15.0" fill="rgb(231,147,44)" rx="2" ry="2" />
<text  x="183.93" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="679.4" y="1701" width="0.2" height="15.0" fill="rgb(223,69,32)" rx="2" ry="2" />
<text  x="682.41" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1086.8" y="1861" width="0.2" height="15.0" fill="rgb(254,93,12)" rx="2" ry="2" />
<text  x="1089.77" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1079.0" y="1813" width="0.4" height="15.0" fill="rgb(212,141,43)" rx="2" ry="2" />
<text  x="1082.03" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="870.8" y="1925" width="0.2" height="15.0" fill="rgb(211,152,30)" rx="2" ry="2" />
<text  x="873.78" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="114.8" y="1909" width="0.2" height="15.0" fill="rgb(232,219,30)" rx="2" ry="2" />
<text  x="117.82" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="443.0" y="1941" width="0.2" height="15.0" fill="rgb(246,25,47)" rx="2" ry="2" />
<text  x="445.97" y="1951.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="799.9" y="1653" width="0.2" height="15.0" fill="rgb(215,78,39)" rx="2" ry="2" />
<text  x="802.91" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (3 samples, 0.05%)</title><rect x="197.2" y="2021" width="0.6" height="15.0" fill="rgb(221,140,42)" rx="2" ry="2" />
<text  x="200.20" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="623.2" y="2005" width="0.8" height="15.0" fill="rgb(224,37,53)" rx="2" ry="2" />
<text  x="626.23" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1106.6" y="1861" width="0.2" height="15.0" fill="rgb(247,192,36)" rx="2" ry="2" />
<text  x="1109.62" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="662.3" y="1957" width="0.2" height="15.0" fill="rgb(243,23,18)" rx="2" ry="2" />
<text  x="665.34" y="1967.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="755.6" y="1733" width="0.2" height="15.0" fill="rgb(219,112,5)" rx="2" ry="2" />
<text  x="758.64" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="528.9" y="1893" width="0.2" height="15.0" fill="rgb(233,122,13)" rx="2" ry="2" />
<text  x="531.93" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="332.0" y="1845" width="0.4" height="15.0" fill="rgb(215,175,26)" rx="2" ry="2" />
<text  x="335.00" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="654.4" y="1781" width="0.2" height="15.0" fill="rgb(237,117,39)" rx="2" ry="2" />
<text  x="657.39" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="800.7" y="1301" width="0.2" height="15.0" fill="rgb(205,60,6)" rx="2" ry="2" />
<text  x="803.70" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="739.8" y="1349" width="0.2" height="15.0" fill="rgb(252,22,8)" rx="2" ry="2" />
<text  x="742.76" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="709" width="17.9" height="15.0" fill="rgb(219,206,11)" rx="2" ry="2" />
<text  x="122.19" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="269.3" y="1797" width="0.2" height="15.0" fill="rgb(239,145,40)" rx="2" ry="2" />
<text  x="272.27" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1765" width="0.2" height="15.0" fill="rgb(243,126,35)" rx="2" ry="2" />
<text  x="847.38" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="630.4" y="1845" width="0.2" height="15.0" fill="rgb(214,55,50)" rx="2" ry="2" />
<text  x="633.37" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="810.0" y="1669" width="0.2" height="15.0" fill="rgb(212,129,47)" rx="2" ry="2" />
<text  x="813.03" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="568.8" y="1989" width="0.2" height="15.0" fill="rgb(247,167,39)" rx="2" ry="2" />
<text  x="571.83" y="1999.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="249.6" y="2037" width="0.2" height="15.0" fill="rgb(243,105,43)" rx="2" ry="2" />
<text  x="252.61" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="562.3" y="1813" width="0.2" height="15.0" fill="rgb(213,163,52)" rx="2" ry="2" />
<text  x="565.28" y="1823.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="117.4" y="2005" width="0.2" height="15.0" fill="rgb(242,114,40)" rx="2" ry="2" />
<text  x="120.40" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1172.7" y="1925" width="0.2" height="15.0" fill="rgb(244,123,40)" rx="2" ry="2" />
<text  x="1175.73" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="342.7" y="1861" width="0.2" height="15.0" fill="rgb(206,151,19)" rx="2" ry="2" />
<text  x="345.72" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.41%)</title><rect x="119.2" y="245" width="16.7" height="15.0" fill="rgb(245,80,2)" rx="2" ry="2" />
<text  x="122.19" y="255.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="510.9" y="1909" width="0.2" height="15.0" fill="rgb(224,130,2)" rx="2" ry="2" />
<text  x="513.86" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="899.0" y="1925" width="0.2" height="15.0" fill="rgb(251,112,2)" rx="2" ry="2" />
<text  x="901.97" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="732.6" y="1701" width="0.2" height="15.0" fill="rgb(250,74,24)" rx="2" ry="2" />
<text  x="735.61" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1177.1" y="1797" width="0.2" height="15.0" fill="rgb(251,212,41)" rx="2" ry="2" />
<text  x="1180.10" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="156.3" y="1637" width="0.2" height="15.0" fill="rgb(214,24,4)" rx="2" ry="2" />
<text  x="159.31" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="408.2" y="1861" width="0.2" height="15.0" fill="rgb(245,226,33)" rx="2" ry="2" />
<text  x="411.23" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (2 samples, 0.03%)</title><rect x="75.7" y="1957" width="0.4" height="15.0" fill="rgb(233,193,8)" rx="2" ry="2" />
<text  x="78.71" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::recv (6 samples, 0.10%)</title><rect x="72.5" y="1973" width="1.2" height="15.0" fill="rgb(214,52,8)" rx="2" ry="2" />
<text  x="75.53" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="135.9" y="53" width="0.2" height="15.0" fill="rgb(241,163,8)" rx="2" ry="2" />
<text  x="138.86" y="63.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="948.4" y="1909" width="0.2" height="15.0" fill="rgb(248,53,38)" rx="2" ry="2" />
<text  x="951.40" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (7 samples, 0.12%)</title><rect x="880.1" y="1909" width="1.4" height="15.0" fill="rgb(238,118,19)" rx="2" ry="2" />
<text  x="883.11" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="637.5" y="1909" width="0.4" height="15.0" fill="rgb(218,179,38)" rx="2" ry="2" />
<text  x="640.52" y="1919.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="646.5" y="1717" width="0.2" height="15.0" fill="rgb(218,81,2)" rx="2" ry="2" />
<text  x="649.45" y="1727.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="270.9" y="1893" width="0.2" height="15.0" fill="rgb(246,28,12)" rx="2" ry="2" />
<text  x="273.85" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="881.5" y="1925" width="0.2" height="15.0" fill="rgb(230,214,10)" rx="2" ry="2" />
<text  x="884.50" y="1935.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="1048.9" y="1701" width="0.2" height="15.0" fill="rgb(206,158,10)" rx="2" ry="2" />
<text  x="1051.85" y="1711.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="753.7" y="1733" width="1.1" height="15.0" fill="rgb(249,179,32)" rx="2" ry="2" />
<text  x="756.65" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="899.6" y="1813" width="0.2" height="15.0" fill="rgb(216,83,1)" rx="2" ry="2" />
<text  x="902.57" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="133.7" y="37" width="0.2" height="15.0" fill="rgb(209,195,42)" rx="2" ry="2" />
<text  x="136.68" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="418.4" y="2021" width="0.4" height="15.0" fill="rgb(226,163,8)" rx="2" ry="2" />
<text  x="421.35" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="61.0" y="1685" width="0.2" height="15.0" fill="rgb(214,128,51)" rx="2" ry="2" />
<text  x="64.02" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1052.0" y="1941" width="0.2" height="15.0" fill="rgb(242,62,51)" rx="2" ry="2" />
<text  x="1055.03" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (7 samples, 0.12%)</title><rect x="566.3" y="2005" width="1.3" height="15.0" fill="rgb(205,182,29)" rx="2" ry="2" />
<text  x="569.25" y="2015.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="825.3" y="1621" width="0.2" height="15.0" fill="rgb(229,158,15)" rx="2" ry="2" />
<text  x="828.32" y="1631.5" ></text>
</g>
<g >
<title>skb_push (2 samples, 0.03%)</title><rect x="799.5" y="1669" width="0.4" height="15.0" fill="rgb(210,86,8)" rx="2" ry="2" />
<text  x="802.51" y="1679.5" ></text>
</g>
<g >
<title>kfree_skbmem (23 samples, 0.39%)</title><rect x="1063.7" y="1909" width="4.6" height="15.0" fill="rgb(225,95,10)" rx="2" ry="2" />
<text  x="1066.74" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (53 samples, 0.89%)</title><rect x="1068.9" y="1893" width="10.5" height="15.0" fill="rgb(244,27,17)" rx="2" ry="2" />
<text  x="1071.90" y="1903.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="917.4" y="1909" width="0.2" height="15.0" fill="rgb(243,29,40)" rx="2" ry="2" />
<text  x="920.43" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="630.4" y="1557" width="0.2" height="15.0" fill="rgb(233,39,25)" rx="2" ry="2" />
<text  x="633.37" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="630.4" y="1717" width="0.2" height="15.0" fill="rgb(216,218,49)" rx="2" ry="2" />
<text  x="633.37" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1002.4" y="1909" width="0.2" height="15.0" fill="rgb(214,125,23)" rx="2" ry="2" />
<text  x="1005.40" y="1919.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="699.1" y="1957" width="0.8" height="15.0" fill="rgb(238,172,6)" rx="2" ry="2" />
<text  x="702.06" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="178.9" y="1733" width="0.2" height="15.0" fill="rgb(245,173,54)" rx="2" ry="2" />
<text  x="181.94" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1005.6" y="1893" width="0.2" height="15.0" fill="rgb(205,174,2)" rx="2" ry="2" />
<text  x="1008.58" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="831.7" y="1733" width="0.2" height="15.0" fill="rgb(226,116,17)" rx="2" ry="2" />
<text  x="834.67" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="490.2" y="1829" width="0.2" height="15.0" fill="rgb(228,1,19)" rx="2" ry="2" />
<text  x="493.22" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="139.2" y="1493" width="0.2" height="15.0" fill="rgb(238,53,36)" rx="2" ry="2" />
<text  x="142.24" y="1503.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1136.0" y="2053" width="0.2" height="15.0" fill="rgb(253,195,30)" rx="2" ry="2" />
<text  x="1139.00" y="2063.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="140.0" y="1621" width="0.2" height="15.0" fill="rgb(219,39,17)" rx="2" ry="2" />
<text  x="143.03" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="1154.5" y="1973" width="0.2" height="15.0" fill="rgb(205,95,27)" rx="2" ry="2" />
<text  x="1157.47" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="96.8" y="1973" width="0.2" height="15.0" fill="rgb(220,222,30)" rx="2" ry="2" />
<text  x="99.75" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="12.6" y="1893" width="1.0" height="15.0" fill="rgb(224,25,46)" rx="2" ry="2" />
<text  x="15.58" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="118.8" y="1349" width="19.2" height="15.0" fill="rgb(206,25,36)" rx="2" ry="2" />
<text  x="121.79" y="1359.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="206.9" y="1797" width="0.2" height="15.0" fill="rgb(233,77,52)" rx="2" ry="2" />
<text  x="209.93" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="543.8" y="1797" width="0.2" height="15.0" fill="rgb(218,42,34)" rx="2" ry="2" />
<text  x="546.82" y="1807.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="332.2" y="1765" width="0.2" height="15.0" fill="rgb(254,109,53)" rx="2" ry="2" />
<text  x="335.20" y="1775.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="917.4" y="1893" width="0.2" height="15.0" fill="rgb(217,87,18)" rx="2" ry="2" />
<text  x="920.43" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (571 samples, 9.61%)</title><rect x="717.9" y="1877" width="113.4" height="15.0" fill="rgb(218,30,29)" rx="2" ry="2" />
<text  x="720.92" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="492.4" y="1989" width="0.2" height="15.0" fill="rgb(236,128,29)" rx="2" ry="2" />
<text  x="495.40" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="490.2" y="1781" width="0.2" height="15.0" fill="rgb(210,104,16)" rx="2" ry="2" />
<text  x="493.22" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="136.5" y="117" width="0.2" height="15.0" fill="rgb(218,192,21)" rx="2" ry="2" />
<text  x="139.46" y="127.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (85 samples, 1.43%)</title><rect x="230.6" y="1957" width="16.8" height="15.0" fill="rgb(227,203,4)" rx="2" ry="2" />
<text  x="233.56" y="1967.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="850.7" y="1925" width="0.2" height="15.0" fill="rgb(208,220,15)" rx="2" ry="2" />
<text  x="853.73" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="100.7" y="1925" width="0.2" height="15.0" fill="rgb(245,195,50)" rx="2" ry="2" />
<text  x="103.72" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.0" y="1925" width="0.2" height="15.0" fill="rgb(246,121,48)" rx="2" ry="2" />
<text  x="64.02" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1079.0" y="1733" width="0.2" height="15.0" fill="rgb(250,134,15)" rx="2" ry="2" />
<text  x="1082.03" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="73.7" y="1893" width="0.2" height="15.0" fill="rgb(250,224,44)" rx="2" ry="2" />
<text  x="76.72" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="700.6" y="1877" width="0.2" height="15.0" fill="rgb(208,60,4)" rx="2" ry="2" />
<text  x="703.65" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="831.7" y="1749" width="0.2" height="15.0" fill="rgb(250,187,33)" rx="2" ry="2" />
<text  x="834.67" y="1759.5" ></text>
</g>
<g >
<title>sock_poll (50 samples, 0.84%)</title><rect x="500.1" y="1909" width="10.0" height="15.0" fill="rgb(254,94,30)" rx="2" ry="2" />
<text  x="503.14" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="654.4" y="1669" width="0.2" height="15.0" fill="rgb(225,194,24)" rx="2" ry="2" />
<text  x="657.39" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1079.0" y="1797" width="0.2" height="15.0" fill="rgb(243,57,46)" rx="2" ry="2" />
<text  x="1082.03" y="1807.5" ></text>
</g>
<g >
<title>sys_fcntl (11 samples, 0.19%)</title><rect x="560.1" y="1941" width="2.2" height="15.0" fill="rgb(233,215,13)" rx="2" ry="2" />
<text  x="563.10" y="1951.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="894.6" y="1893" width="0.2" height="15.0" fill="rgb(223,110,1)" rx="2" ry="2" />
<text  x="897.60" y="1903.5" ></text>
</g>
<g >
<title>evmap_io_del_ (4 samples, 0.07%)</title><rect x="115.0" y="2005" width="0.8" height="15.0" fill="rgb(232,40,44)" rx="2" ry="2" />
<text  x="118.02" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="842.8" y="1893" width="0.4" height="15.0" fill="rgb(222,76,48)" rx="2" ry="2" />
<text  x="845.79" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (9 samples, 0.15%)</title><rect x="57.0" y="1909" width="1.8" height="15.0" fill="rgb(233,47,33)" rx="2" ry="2" />
<text  x="60.05" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="853.9" y="1685" width="0.2" height="15.0" fill="rgb(226,214,16)" rx="2" ry="2" />
<text  x="856.91" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1177.1" y="1829" width="0.2" height="15.0" fill="rgb(213,185,46)" rx="2" ry="2" />
<text  x="1180.10" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="606.9" y="1845" width="0.2" height="15.0" fill="rgb(239,1,18)" rx="2" ry="2" />
<text  x="609.95" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="163.3" y="1589" width="0.2" height="15.0" fill="rgb(224,160,24)" rx="2" ry="2" />
<text  x="166.26" y="1599.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="542.0" y="1957" width="0.2" height="15.0" fill="rgb(206,206,40)" rx="2" ry="2" />
<text  x="545.03" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="740.9" y="1685" width="0.2" height="15.0" fill="rgb(248,39,35)" rx="2" ry="2" />
<text  x="743.95" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="190.9" y="1957" width="0.1" height="15.0" fill="rgb(227,206,25)" rx="2" ry="2" />
<text  x="193.85" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="136.3" y="213" width="0.2" height="15.0" fill="rgb(211,31,26)" rx="2" ry="2" />
<text  x="139.26" y="223.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="668.5" y="1909" width="0.2" height="15.0" fill="rgb(244,199,6)" rx="2" ry="2" />
<text  x="671.49" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="491.6" y="1877" width="0.2" height="15.0" fill="rgb(249,185,21)" rx="2" ry="2" />
<text  x="494.61" y="1887.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="94.8" y="1733" width="0.2" height="15.0" fill="rgb(254,5,24)" rx="2" ry="2" />
<text  x="97.77" y="1743.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (5 samples, 0.08%)</title><rect x="183.7" y="1989" width="1.0" height="15.0" fill="rgb(228,134,39)" rx="2" ry="2" />
<text  x="186.70" y="1999.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="825.9" y="1541" width="0.2" height="15.0" fill="rgb(215,229,23)" rx="2" ry="2" />
<text  x="828.92" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="628.4" y="1861" width="0.2" height="15.0" fill="rgb(223,26,13)" rx="2" ry="2" />
<text  x="631.39" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="61.0" y="1813" width="0.2" height="15.0" fill="rgb(212,132,42)" rx="2" ry="2" />
<text  x="64.02" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="269.3" y="1813" width="0.2" height="15.0" fill="rgb(211,22,45)" rx="2" ry="2" />
<text  x="272.27" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="240.3" y="1797" width="0.2" height="15.0" fill="rgb(215,32,3)" rx="2" ry="2" />
<text  x="243.28" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1183.1" y="1829" width="0.2" height="15.0" fill="rgb(227,75,41)" rx="2" ry="2" />
<text  x="1186.05" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="95.6" y="1701" width="0.2" height="15.0" fill="rgb(229,228,16)" rx="2" ry="2" />
<text  x="98.56" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="52.1" y="1909" width="0.2" height="15.0" fill="rgb(216,91,5)" rx="2" ry="2" />
<text  x="55.09" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="830.5" y="1605" width="0.2" height="15.0" fill="rgb(234,194,48)" rx="2" ry="2" />
<text  x="833.48" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="520.0" y="1893" width="0.2" height="15.0" fill="rgb(235,41,13)" rx="2" ry="2" />
<text  x="523.00" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="638.9" y="1925" width="0.6" height="15.0" fill="rgb(242,223,18)" rx="2" ry="2" />
<text  x="641.91" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (484 samples, 8.14%)</title><rect x="13.6" y="2053" width="96.1" height="15.0" fill="rgb(240,0,52)" rx="2" ry="2" />
<text  x="16.57" y="2063.5" >[libevent-2..</text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="437" width="17.7" height="15.0" fill="rgb(238,41,30)" rx="2" ry="2" />
<text  x="122.19" y="447.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="740.9" y="1669" width="0.2" height="15.0" fill="rgb(206,161,49)" rx="2" ry="2" />
<text  x="743.95" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="94.8" y="1861" width="0.2" height="15.0" fill="rgb(246,12,20)" rx="2" ry="2" />
<text  x="97.77" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="745.9" y="1493" width="0.2" height="15.0" fill="rgb(228,122,12)" rx="2" ry="2" />
<text  x="748.91" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="136.3" y="85" width="0.2" height="15.0" fill="rgb(250,69,36)" rx="2" ry="2" />
<text  x="139.26" y="95.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="70.2" y="1877" width="0.7" height="15.0" fill="rgb(221,166,20)" rx="2" ry="2" />
<text  x="73.15" y="1887.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="323.7" y="1813" width="0.2" height="15.0" fill="rgb(242,220,51)" rx="2" ry="2" />
<text  x="326.66" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (4 samples, 0.07%)</title><rect x="231.7" y="1941" width="0.8" height="15.0" fill="rgb(213,131,26)" rx="2" ry="2" />
<text  x="234.75" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="491.8" y="1829" width="0.2" height="15.0" fill="rgb(218,155,37)" rx="2" ry="2" />
<text  x="494.81" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="898.6" y="1989" width="0.2" height="15.0" fill="rgb(240,178,51)" rx="2" ry="2" />
<text  x="901.57" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="443.4" y="1941" width="0.2" height="15.0" fill="rgb(205,43,34)" rx="2" ry="2" />
<text  x="446.37" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="731.6" y="1605" width="0.2" height="15.0" fill="rgb(239,18,49)" rx="2" ry="2" />
<text  x="734.62" y="1615.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="514.0" y="1925" width="0.6" height="15.0" fill="rgb(239,143,49)" rx="2" ry="2" />
<text  x="517.04" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="984.9" y="1845" width="0.2" height="15.0" fill="rgb(227,101,45)" rx="2" ry="2" />
<text  x="987.93" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="606.9" y="1781" width="0.2" height="15.0" fill="rgb(219,34,38)" rx="2" ry="2" />
<text  x="609.95" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="844.4" y="1829" width="0.2" height="15.0" fill="rgb(247,135,3)" rx="2" ry="2" />
<text  x="847.38" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="600.8" y="1877" width="0.2" height="15.0" fill="rgb(250,151,51)" rx="2" ry="2" />
<text  x="603.79" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (6 samples, 0.10%)</title><rect x="66.2" y="1909" width="1.2" height="15.0" fill="rgb(243,97,14)" rx="2" ry="2" />
<text  x="69.18" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="526.7" y="1941" width="0.2" height="15.0" fill="rgb(214,139,31)" rx="2" ry="2" />
<text  x="529.75" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1016.9" y="1941" width="0.4" height="15.0" fill="rgb(237,93,43)" rx="2" ry="2" />
<text  x="1019.89" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="236.5" y="1877" width="0.6" height="15.0" fill="rgb(210,88,22)" rx="2" ry="2" />
<text  x="239.51" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="31.0" y="1973" width="0.2" height="15.0" fill="rgb(231,179,10)" rx="2" ry="2" />
<text  x="34.04" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (138 samples, 2.32%)</title><rect x="117.6" y="1973" width="27.4" height="15.0" fill="rgb(229,83,54)" rx="2" ry="2" />
<text  x="120.60" y="1983.5" >[..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1177.1" y="1941" width="0.2" height="15.0" fill="rgb(207,214,46)" rx="2" ry="2" />
<text  x="1180.10" y="1951.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.13%)</title><rect x="1088.8" y="1925" width="1.5" height="15.0" fill="rgb(214,176,49)" rx="2" ry="2" />
<text  x="1091.76" y="1935.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (2 samples, 0.03%)</title><rect x="344.5" y="2021" width="0.4" height="15.0" fill="rgb(236,161,47)" rx="2" ry="2" />
<text  x="347.51" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="532.5" y="2005" width="0.2" height="15.0" fill="rgb(245,4,6)" rx="2" ry="2" />
<text  x="535.50" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (4 samples, 0.07%)</title><rect x="83.7" y="1957" width="0.7" height="15.0" fill="rgb(244,99,29)" rx="2" ry="2" />
<text  x="86.65" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (1 samples, 0.02%)</title><rect x="897.2" y="2005" width="0.2" height="15.0" fill="rgb(247,135,44)" rx="2" ry="2" />
<text  x="900.18" y="2015.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1127.5" y="1781" width="0.2" height="15.0" fill="rgb(246,142,30)" rx="2" ry="2" />
<text  x="1130.47" y="1791.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="81.9" y="1829" width="0.2" height="15.0" fill="rgb(241,147,20)" rx="2" ry="2" />
<text  x="84.86" y="1839.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (59 samples, 0.99%)</title><rect x="498.6" y="1957" width="11.7" height="15.0" fill="rgb(209,16,2)" rx="2" ry="2" />
<text  x="501.56" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="339.5" y="1909" width="0.8" height="15.0" fill="rgb(221,62,14)" rx="2" ry="2" />
<text  x="342.54" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="830.5" y="1653" width="0.2" height="15.0" fill="rgb(214,208,11)" rx="2" ry="2" />
<text  x="833.48" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="682.0" y="2005" width="0.2" height="15.0" fill="rgb(238,0,16)" rx="2" ry="2" />
<text  x="684.99" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (38 samples, 0.64%)</title><rect x="1107.4" y="1621" width="7.6" height="15.0" fill="rgb(233,88,35)" rx="2" ry="2" />
<text  x="1110.42" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="533" width="17.7" height="15.0" fill="rgb(246,129,54)" rx="2" ry="2" />
<text  x="122.19" y="543.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="972.8" y="2037" width="0.2" height="15.0" fill="rgb(249,31,15)" rx="2" ry="2" />
<text  x="975.82" y="2047.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="85.6" y="1941" width="0.4" height="15.0" fill="rgb(246,191,10)" rx="2" ry="2" />
<text  x="88.64" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="831.9" y="1813" width="0.4" height="15.0" fill="rgb(216,14,24)" rx="2" ry="2" />
<text  x="834.87" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="541.2" y="1925" width="0.4" height="15.0" fill="rgb(221,66,47)" rx="2" ry="2" />
<text  x="544.24" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="662.3" y="1669" width="0.2" height="15.0" fill="rgb(236,113,35)" rx="2" ry="2" />
<text  x="665.34" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="378.5" y="1717" width="0.2" height="15.0" fill="rgb(225,73,41)" rx="2" ry="2" />
<text  x="381.45" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (3 samples, 0.05%)</title><rect x="995.8" y="1957" width="0.6" height="15.0" fill="rgb(215,50,3)" rx="2" ry="2" />
<text  x="998.85" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="156.3" y="1557" width="0.2" height="15.0" fill="rgb(233,54,4)" rx="2" ry="2" />
<text  x="159.31" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="72.1" y="1765" width="0.2" height="15.0" fill="rgb(231,4,11)" rx="2" ry="2" />
<text  x="75.14" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="165.2" y="1893" width="0.4" height="15.0" fill="rgb(214,150,48)" rx="2" ry="2" />
<text  x="168.24" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (1 samples, 0.02%)</title><rect x="569.0" y="2005" width="0.2" height="15.0" fill="rgb(237,198,10)" rx="2" ry="2" />
<text  x="572.03" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="899.8" y="1989" width="0.4" height="15.0" fill="rgb(240,211,34)" rx="2" ry="2" />
<text  x="902.76" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (129 samples, 2.17%)</title><rect x="117.8" y="1909" width="25.6" height="15.0" fill="rgb(209,155,29)" rx="2" ry="2" />
<text  x="120.80" y="1919.5" >[..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="880.3" y="1893" width="1.2" height="15.0" fill="rgb(224,162,48)" rx="2" ry="2" />
<text  x="883.31" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (14 samples, 0.24%)</title><rect x="571.6" y="1989" width="2.8" height="15.0" fill="rgb(250,37,7)" rx="2" ry="2" />
<text  x="574.61" y="1999.5" ></text>
</g>
<g >
<title>init_timer_key (1 samples, 0.02%)</title><rect x="1172.7" y="1669" width="0.2" height="15.0" fill="rgb(241,140,15)" rx="2" ry="2" />
<text  x="1175.73" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (8 samples, 0.13%)</title><rect x="576.8" y="2005" width="1.6" height="15.0" fill="rgb(242,122,32)" rx="2" ry="2" />
<text  x="579.77" y="2015.5" ></text>
</g>
<g >
<title>__sys_sendmsg (392 samples, 6.59%)</title><rect x="265.1" y="1973" width="77.8" height="15.0" fill="rgb(235,194,45)" rx="2" ry="2" />
<text  x="268.10" y="1983.5" >__sys_se..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="79.1" y="1893" width="1.4" height="15.0" fill="rgb(253,201,54)" rx="2" ry="2" />
<text  x="82.08" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1034.6" y="1909" width="0.2" height="15.0" fill="rgb(229,176,44)" rx="2" ry="2" />
<text  x="1037.56" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="772.7" y="1525" width="0.2" height="15.0" fill="rgb(224,180,39)" rx="2" ry="2" />
<text  x="775.71" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="630.4" y="1733" width="0.2" height="15.0" fill="rgb(213,82,48)" rx="2" ry="2" />
<text  x="633.37" y="1743.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="88.8" y="1893" width="0.2" height="15.0" fill="rgb(232,68,36)" rx="2" ry="2" />
<text  x="91.81" y="1903.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1127.7" y="1765" width="0.2" height="15.0" fill="rgb(247,33,2)" rx="2" ry="2" />
<text  x="1130.66" y="1775.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="954.4" y="1973" width="0.8" height="15.0" fill="rgb(206,136,54)" rx="2" ry="2" />
<text  x="957.36" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="169.0" y="1829" width="0.2" height="15.0" fill="rgb(254,33,29)" rx="2" ry="2" />
<text  x="172.01" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="95.6" y="1669" width="0.2" height="15.0" fill="rgb(246,126,4)" rx="2" ry="2" />
<text  x="98.56" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="250.2" y="1845" width="0.2" height="15.0" fill="rgb(241,33,15)" rx="2" ry="2" />
<text  x="253.21" y="1855.5" ></text>
</g>
<g >
<title>retint_kernel (1 samples, 0.02%)</title><rect x="342.9" y="2005" width="0.2" height="15.0" fill="rgb(235,141,18)" rx="2" ry="2" />
<text  x="345.92" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="1147.3" y="2053" width="0.4" height="15.0" fill="rgb(205,61,13)" rx="2" ry="2" />
<text  x="1150.32" y="2063.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (27 samples, 0.45%)</title><rect x="801.5" y="1685" width="5.4" height="15.0" fill="rgb(247,77,23)" rx="2" ry="2" />
<text  x="804.50" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="687.9" y="1765" width="0.2" height="15.0" fill="rgb(231,136,32)" rx="2" ry="2" />
<text  x="690.94" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (1 samples, 0.02%)</title><rect x="249.4" y="1989" width="0.2" height="15.0" fill="rgb(236,188,51)" rx="2" ry="2" />
<text  x="252.41" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="841.4" y="1909" width="0.2" height="15.0" fill="rgb(216,130,3)" rx="2" ry="2" />
<text  x="844.40" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="284.0" y="1845" width="0.6" height="15.0" fill="rgb(231,189,7)" rx="2" ry="2" />
<text  x="286.96" y="1855.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="65.2" y="1909" width="0.2" height="15.0" fill="rgb(214,181,49)" rx="2" ry="2" />
<text  x="68.19" y="1919.5" ></text>
</g>
<g >
<title>malloc (29 samples, 0.49%)</title><rect x="1183.4" y="2053" width="5.8" height="15.0" fill="rgb(244,184,36)" rx="2" ry="2" />
<text  x="1186.45" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="214.1" y="2021" width="0.2" height="15.0" fill="rgb(249,104,43)" rx="2" ry="2" />
<text  x="217.08" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="119.0" y="901" width="18.1" height="15.0" fill="rgb(234,7,16)" rx="2" ry="2" />
<text  x="121.99" y="911.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="458.7" y="1861" width="0.2" height="15.0" fill="rgb(206,79,7)" rx="2" ry="2" />
<text  x="461.65" y="1871.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (5 samples, 0.08%)</title><rect x="730.8" y="1717" width="1.0" height="15.0" fill="rgb(235,126,13)" rx="2" ry="2" />
<text  x="733.82" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="332.2" y="1797" width="0.2" height="15.0" fill="rgb(253,207,45)" rx="2" ry="2" />
<text  x="335.20" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (1 samples, 0.02%)</title><rect x="906.1" y="1973" width="0.2" height="15.0" fill="rgb(250,224,51)" rx="2" ry="2" />
<text  x="909.12" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1005.6" y="1765" width="0.2" height="15.0" fill="rgb(243,77,41)" rx="2" ry="2" />
<text  x="1008.58" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="562.3" y="1925" width="0.2" height="15.0" fill="rgb(230,175,32)" rx="2" ry="2" />
<text  x="565.28" y="1935.5" ></text>
</g>
<g >
<title>free (8 samples, 0.13%)</title><rect x="177.7" y="2005" width="1.6" height="15.0" fill="rgb(231,40,22)" rx="2" ry="2" />
<text  x="180.75" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="757" width="17.9" height="15.0" fill="rgb(225,217,26)" rx="2" ry="2" />
<text  x="122.19" y="767.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="392.3" y="1909" width="0.2" height="15.0" fill="rgb(224,2,29)" rx="2" ry="2" />
<text  x="395.35" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (1 samples, 0.02%)</title><rect x="968.8" y="2037" width="0.2" height="15.0" fill="rgb(228,47,41)" rx="2" ry="2" />
<text  x="971.85" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1078.2" y="1797" width="0.2" height="15.0" fill="rgb(206,62,1)" rx="2" ry="2" />
<text  x="1081.23" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1106.6" y="1477" width="0.2" height="15.0" fill="rgb(235,116,52)" rx="2" ry="2" />
<text  x="1109.62" y="1487.5" ></text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.02%)</title><rect x="12.6" y="1829" width="0.2" height="15.0" fill="rgb(235,29,29)" rx="2" ry="2" />
<text  x="15.58" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="138.0" y="1189" width="0.2" height="15.0" fill="rgb(216,18,19)" rx="2" ry="2" />
<text  x="141.05" y="1199.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="651.8" y="1797" width="0.2" height="15.0" fill="rgb(205,89,33)" rx="2" ry="2" />
<text  x="654.81" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="206.9" y="1941" width="0.2" height="15.0" fill="rgb(209,105,3)" rx="2" ry="2" />
<text  x="209.93" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="762.6" y="1509" width="0.4" height="15.0" fill="rgb(231,228,26)" rx="2" ry="2" />
<text  x="765.59" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="95.6" y="1829" width="0.2" height="15.0" fill="rgb(208,154,9)" rx="2" ry="2" />
<text  x="98.56" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (3 samples, 0.05%)</title><rect x="652.8" y="2005" width="0.6" height="15.0" fill="rgb(226,26,54)" rx="2" ry="2" />
<text  x="655.81" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (2 samples, 0.03%)</title><rect x="893.0" y="2005" width="0.4" height="15.0" fill="rgb(220,48,43)" rx="2" ry="2" />
<text  x="896.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="620.1" y="2037" width="0.1" height="15.0" fill="rgb(207,206,50)" rx="2" ry="2" />
<text  x="623.05" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="827.1" y="1829" width="0.2" height="15.0" fill="rgb(226,18,19)" rx="2" ry="2" />
<text  x="830.11" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="39.8" y="1973" width="0.2" height="15.0" fill="rgb(222,203,23)" rx="2" ry="2" />
<text  x="42.78" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="156.3" y="1813" width="0.2" height="15.0" fill="rgb(207,38,39)" rx="2" ry="2" />
<text  x="159.31" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1086.8" y="1845" width="0.2" height="15.0" fill="rgb(237,68,34)" rx="2" ry="2" />
<text  x="1089.77" y="1855.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.02%)</title><rect x="761.0" y="1365" width="0.2" height="15.0" fill="rgb(244,69,27)" rx="2" ry="2" />
<text  x="764.00" y="1375.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="675.0" y="1861" width="0.2" height="15.0" fill="rgb(208,50,32)" rx="2" ry="2" />
<text  x="678.04" y="1871.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="521.8" y="1973" width="0.4" height="15.0" fill="rgb(228,171,19)" rx="2" ry="2" />
<text  x="524.78" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="986.7" y="1909" width="0.6" height="15.0" fill="rgb(216,17,6)" rx="2" ry="2" />
<text  x="989.72" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="283.4" y="1733" width="0.2" height="15.0" fill="rgb(240,26,9)" rx="2" ry="2" />
<text  x="286.36" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="597.0" y="1845" width="0.2" height="15.0" fill="rgb(219,213,28)" rx="2" ry="2" />
<text  x="600.02" y="1855.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="486.8" y="1589" width="0.2" height="15.0" fill="rgb(223,200,8)" rx="2" ry="2" />
<text  x="489.84" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="968.1" y="1797" width="0.2" height="15.0" fill="rgb(210,107,11)" rx="2" ry="2" />
<text  x="971.06" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="196.4" y="1925" width="0.2" height="15.0" fill="rgb(248,196,36)" rx="2" ry="2" />
<text  x="199.41" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="580.9" y="2021" width="0.2" height="15.0" fill="rgb(226,226,17)" rx="2" ry="2" />
<text  x="583.94" y="2031.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="491.0" y="1653" width="0.2" height="15.0" fill="rgb(214,85,4)" rx="2" ry="2" />
<text  x="494.01" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="984.9" y="1829" width="0.2" height="15.0" fill="rgb(217,214,35)" rx="2" ry="2" />
<text  x="987.93" y="1839.5" ></text>
</g>
<g >
<title>____fput (498 samples, 8.38%)</title><rect x="725.3" y="1829" width="98.8" height="15.0" fill="rgb(208,106,34)" rx="2" ry="2" />
<text  x="728.27" y="1839.5" >____fput</text>
</g>
<g >
<title>tcp_recvmsg (325 samples, 5.47%)</title><rect x="1054.4" y="1941" width="64.5" height="15.0" fill="rgb(254,128,14)" rx="2" ry="2" />
<text  x="1057.41" y="1951.5" >tcp_rec..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="740.9" y="1461" width="0.2" height="15.0" fill="rgb(254,122,8)" rx="2" ry="2" />
<text  x="743.95" y="1471.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="659.2" y="1909" width="0.2" height="15.0" fill="rgb(251,178,17)" rx="2" ry="2" />
<text  x="662.16" y="1919.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="1048.9" y="1749" width="0.2" height="15.0" fill="rgb(227,9,51)" rx="2" ry="2" />
<text  x="1051.85" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="668.5" y="1893" width="0.2" height="15.0" fill="rgb(254,153,54)" rx="2" ry="2" />
<text  x="671.49" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="630.4" y="1621" width="0.2" height="15.0" fill="rgb(245,157,23)" rx="2" ry="2" />
<text  x="633.37" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (7 samples, 0.12%)</title><rect x="121.8" y="37" width="1.4" height="15.0" fill="rgb(209,170,10)" rx="2" ry="2" />
<text  x="124.77" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (2 samples, 0.03%)</title><rect x="82.1" y="1957" width="0.4" height="15.0" fill="rgb(239,195,24)" rx="2" ry="2" />
<text  x="85.06" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="79.9" y="1813" width="0.4" height="15.0" fill="rgb(253,61,29)" rx="2" ry="2" />
<text  x="82.88" y="1823.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1118.3" y="1893" width="0.2" height="15.0" fill="rgb(241,168,10)" rx="2" ry="2" />
<text  x="1121.33" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="562.3" y="1957" width="0.2" height="15.0" fill="rgb(249,17,21)" rx="2" ry="2" />
<text  x="565.28" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="279.0" y="1765" width="0.2" height="15.0" fill="rgb(209,114,1)" rx="2" ry="2" />
<text  x="281.99" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="114.8" y="1973" width="0.2" height="15.0" fill="rgb(244,14,39)" rx="2" ry="2" />
<text  x="117.82" y="1983.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="104.7" y="1877" width="0.2" height="15.0" fill="rgb(222,107,27)" rx="2" ry="2" />
<text  x="107.69" y="1887.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="542.8" y="1973" width="0.2" height="15.0" fill="rgb(224,88,28)" rx="2" ry="2" />
<text  x="545.83" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="408.2" y="1669" width="0.2" height="15.0" fill="rgb(232,113,39)" rx="2" ry="2" />
<text  x="411.23" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="486.8" y="1573" width="0.2" height="15.0" fill="rgb(227,89,49)" rx="2" ry="2" />
<text  x="489.84" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="269.3" y="1925" width="0.2" height="15.0" fill="rgb(234,15,43)" rx="2" ry="2" />
<text  x="272.27" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="699.1" y="1861" width="0.8" height="15.0" fill="rgb(248,137,2)" rx="2" ry="2" />
<text  x="702.06" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1071.9" y="1877" width="0.4" height="15.0" fill="rgb(230,179,3)" rx="2" ry="2" />
<text  x="1074.88" y="1887.5" ></text>
</g>
<g >
<title>inet_sendmsg (351 samples, 5.91%)</title><rect x="269.9" y="1925" width="69.6" height="15.0" fill="rgb(230,181,33)" rx="2" ry="2" />
<text  x="272.86" y="1935.5" >inet_se..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1078.6" y="1781" width="0.2" height="15.0" fill="rgb(237,180,27)" rx="2" ry="2" />
<text  x="1081.63" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="493.2" y="1893" width="0.2" height="15.0" fill="rgb(242,71,10)" rx="2" ry="2" />
<text  x="496.20" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (10 samples, 0.17%)</title><rect x="778.3" y="1525" width="2.0" height="15.0" fill="rgb(254,25,3)" rx="2" ry="2" />
<text  x="781.27" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="969.8" y="1957" width="0.2" height="15.0" fill="rgb(254,43,36)" rx="2" ry="2" />
<text  x="972.84" y="1967.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="1024.0" y="1909" width="0.2" height="15.0" fill="rgb(220,16,6)" rx="2" ry="2" />
<text  x="1027.04" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="646.5" y="1637" width="0.2" height="15.0" fill="rgb(222,28,46)" rx="2" ry="2" />
<text  x="649.45" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1002.8" y="1973" width="0.2" height="15.0" fill="rgb(245,155,0)" rx="2" ry="2" />
<text  x="1005.80" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="547.6" y="1765" width="0.2" height="15.0" fill="rgb(207,71,21)" rx="2" ry="2" />
<text  x="550.59" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="838.4" y="1717" width="0.2" height="15.0" fill="rgb(210,186,19)" rx="2" ry="2" />
<text  x="841.42" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="825.5" y="1621" width="0.6" height="15.0" fill="rgb(232,180,29)" rx="2" ry="2" />
<text  x="828.52" y="1631.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="118.6" y="1573" width="0.2" height="15.0" fill="rgb(249,146,42)" rx="2" ry="2" />
<text  x="121.59" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="459.8" y="1973" width="0.8" height="15.0" fill="rgb(241,98,22)" rx="2" ry="2" />
<text  x="462.85" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1150.7" y="1989" width="0.2" height="15.0" fill="rgb(212,61,46)" rx="2" ry="2" />
<text  x="1153.69" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (7 samples, 0.12%)</title><rect x="151.1" y="1957" width="1.4" height="15.0" fill="rgb(240,76,3)" rx="2" ry="2" />
<text  x="154.15" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1002.4" y="1925" width="0.2" height="15.0" fill="rgb(212,28,22)" rx="2" ry="2" />
<text  x="1005.40" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="755.4" y="1685" width="0.2" height="15.0" fill="rgb(209,154,10)" rx="2" ry="2" />
<text  x="758.44" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (3 samples, 0.05%)</title><rect x="911.3" y="2037" width="0.6" height="15.0" fill="rgb(219,178,32)" rx="2" ry="2" />
<text  x="914.28" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="940.5" y="1973" width="0.2" height="15.0" fill="rgb(236,134,24)" rx="2" ry="2" />
<text  x="943.46" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="408.4" y="1877" width="0.2" height="15.0" fill="rgb(218,83,41)" rx="2" ry="2" />
<text  x="411.43" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (6 samples, 0.10%)</title><rect x="626.2" y="2005" width="1.2" height="15.0" fill="rgb(237,37,46)" rx="2" ry="2" />
<text  x="629.20" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="247.4" y="1557" width="0.2" height="15.0" fill="rgb(253,169,39)" rx="2" ry="2" />
<text  x="250.43" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="329.8" y="1813" width="0.2" height="15.0" fill="rgb(239,7,49)" rx="2" ry="2" />
<text  x="332.81" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="700.6" y="1861" width="0.2" height="15.0" fill="rgb(233,81,23)" rx="2" ry="2" />
<text  x="703.65" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="676.2" y="1845" width="0.2" height="15.0" fill="rgb(229,27,53)" rx="2" ry="2" />
<text  x="679.23" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="574.0" y="1925" width="0.2" height="15.0" fill="rgb(209,142,49)" rx="2" ry="2" />
<text  x="576.99" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="739.8" y="1557" width="0.2" height="15.0" fill="rgb(254,210,2)" rx="2" ry="2" />
<text  x="742.76" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="973.4" y="2021" width="0.6" height="15.0" fill="rgb(234,224,33)" rx="2" ry="2" />
<text  x="976.42" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="838.4" y="1685" width="0.2" height="15.0" fill="rgb(233,70,45)" rx="2" ry="2" />
<text  x="841.42" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="820.0" y="1701" width="0.2" height="15.0" fill="rgb(222,190,48)" rx="2" ry="2" />
<text  x="822.96" y="1711.5" ></text>
</g>
<g >
<title>folly::netops::recv (10 samples, 0.17%)</title><rect x="58.8" y="1957" width="2.0" height="15.0" fill="rgb(234,31,4)" rx="2" ry="2" />
<text  x="61.84" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="824.7" y="1829" width="0.2" height="15.0" fill="rgb(210,69,51)" rx="2" ry="2" />
<text  x="827.72" y="1839.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="966.9" y="2005" width="0.2" height="15.0" fill="rgb(234,168,21)" rx="2" ry="2" />
<text  x="969.86" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1106.6" y="1509" width="0.2" height="15.0" fill="rgb(237,216,12)" rx="2" ry="2" />
<text  x="1109.62" y="1519.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="948.4" y="1957" width="0.2" height="15.0" fill="rgb(220,55,9)" rx="2" ry="2" />
<text  x="951.40" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="897.0" y="1989" width="0.2" height="15.0" fill="rgb(236,95,50)" rx="2" ry="2" />
<text  x="899.99" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1018.3" y="2021" width="0.2" height="15.0" fill="rgb(248,189,8)" rx="2" ry="2" />
<text  x="1021.28" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="294.3" y="1637" width="0.2" height="15.0" fill="rgb(229,42,49)" rx="2" ry="2" />
<text  x="297.28" y="1647.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="699.3" y="1845" width="0.6" height="15.0" fill="rgb(244,142,52)" rx="2" ry="2" />
<text  x="702.26" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="885.7" y="1877" width="0.4" height="15.0" fill="rgb(253,215,27)" rx="2" ry="2" />
<text  x="888.67" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="300.6" y="1493" width="0.2" height="15.0" fill="rgb(226,170,54)" rx="2" ry="2" />
<text  x="303.63" y="1503.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="142.8" y="1829" width="0.2" height="15.0" fill="rgb(228,194,4)" rx="2" ry="2" />
<text  x="145.81" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1018.3" y="1829" width="0.2" height="15.0" fill="rgb(227,27,16)" rx="2" ry="2" />
<text  x="1021.28" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="803.1" y="1525" width="0.2" height="15.0" fill="rgb(206,137,4)" rx="2" ry="2" />
<text  x="806.09" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1072.1" y="1717" width="0.2" height="15.0" fill="rgb(252,79,12)" rx="2" ry="2" />
<text  x="1075.08" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="535.9" y="1925" width="0.2" height="15.0" fill="rgb(219,107,53)" rx="2" ry="2" />
<text  x="538.88" y="1935.5" ></text>
</g>
<g >
<title>sys_getsockname (34 samples, 0.57%)</title><rect x="590.7" y="1893" width="6.7" height="15.0" fill="rgb(223,172,36)" rx="2" ry="2" />
<text  x="593.67" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="418.8" y="2021" width="0.3" height="15.0" fill="rgb(209,36,2)" rx="2" ry="2" />
<text  x="421.75" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="825.3" y="1781" width="0.8" height="15.0" fill="rgb(248,26,42)" rx="2" ry="2" />
<text  x="828.32" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="936.5" y="1861" width="0.2" height="15.0" fill="rgb(219,65,12)" rx="2" ry="2" />
<text  x="939.49" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="272.6" y="1861" width="0.2" height="15.0" fill="rgb(249,143,19)" rx="2" ry="2" />
<text  x="275.64" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (456 samples, 7.67%)</title><rect x="1035.9" y="2021" width="90.6" height="15.0" fill="rgb(227,215,42)" rx="2" ry="2" />
<text  x="1038.95" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="745.9" y="1765" width="0.2" height="15.0" fill="rgb(208,98,9)" rx="2" ry="2" />
<text  x="748.91" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="884.7" y="1589" width="0.2" height="15.0" fill="rgb(206,166,50)" rx="2" ry="2" />
<text  x="887.68" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="543.8" y="1573" width="0.2" height="15.0" fill="rgb(213,204,21)" rx="2" ry="2" />
<text  x="546.82" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="679.4" y="1797" width="0.2" height="15.0" fill="rgb(240,227,28)" rx="2" ry="2" />
<text  x="682.41" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="207.3" y="1925" width="0.2" height="15.0" fill="rgb(208,209,53)" rx="2" ry="2" />
<text  x="210.33" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="136.1" y="245" width="0.2" height="15.0" fill="rgb(206,97,2)" rx="2" ry="2" />
<text  x="139.06" y="255.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1052.6" y="1957" width="0.4" height="15.0" fill="rgb(244,18,6)" rx="2" ry="2" />
<text  x="1055.62" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="976.6" y="1925" width="0.2" height="15.0" fill="rgb(234,57,48)" rx="2" ry="2" />
<text  x="979.59" y="1935.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="339.1" y="1829" width="0.2" height="15.0" fill="rgb(206,204,8)" rx="2" ry="2" />
<text  x="342.15" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="175.6" y="1941" width="0.2" height="15.0" fill="rgb(228,80,25)" rx="2" ry="2" />
<text  x="178.57" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="185.9" y="1989" width="0.6" height="15.0" fill="rgb(212,171,16)" rx="2" ry="2" />
<text  x="188.89" y="1999.5" ></text>
</g>
<g >
<title>free_pcp_prepare (3 samples, 0.05%)</title><rect x="1074.1" y="1829" width="0.6" height="15.0" fill="rgb(229,9,53)" rx="2" ry="2" />
<text  x="1077.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (30 samples, 0.50%)</title><rect x="1108.4" y="1525" width="6.0" height="15.0" fill="rgb(254,227,4)" rx="2" ry="2" />
<text  x="1111.41" y="1535.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="23.9" y="2005" width="0.4" height="15.0" fill="rgb(236,106,29)" rx="2" ry="2" />
<text  x="26.90" y="2015.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1025.4" y="2021" width="0.2" height="15.0" fill="rgb(234,9,4)" rx="2" ry="2" />
<text  x="1028.43" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="659.2" y="1893" width="0.2" height="15.0" fill="rgb(230,203,51)" rx="2" ry="2" />
<text  x="662.16" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="279.0" y="1797" width="0.2" height="15.0" fill="rgb(248,63,31)" rx="2" ry="2" />
<text  x="281.99" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="350.7" y="2021" width="0.2" height="15.0" fill="rgb(230,68,18)" rx="2" ry="2" />
<text  x="353.66" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (125 samples, 2.10%)</title><rect x="224.8" y="2005" width="24.8" height="15.0" fill="rgb(249,210,15)" rx="2" ry="2" />
<text  x="227.80" y="2015.5" >f..</text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="194.2" y="1957" width="0.2" height="15.0" fill="rgb(234,220,27)" rx="2" ry="2" />
<text  x="197.23" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="517.6" y="1925" width="0.2" height="15.0" fill="rgb(206,136,19)" rx="2" ry="2" />
<text  x="520.61" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1189.0" y="1941" width="0.2" height="15.0" fill="rgb(249,83,51)" rx="2" ry="2" />
<text  x="1192.01" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="528.7" y="1877" width="0.2" height="15.0" fill="rgb(222,49,44)" rx="2" ry="2" />
<text  x="531.73" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (2 samples, 0.03%)</title><rect x="899.8" y="2037" width="0.4" height="15.0" fill="rgb(214,216,53)" rx="2" ry="2" />
<text  x="902.76" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="160.9" y="1909" width="0.2" height="15.0" fill="rgb(244,193,19)" rx="2" ry="2" />
<text  x="163.87" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="134.9" y="53" width="0.2" height="15.0" fill="rgb(220,201,3)" rx="2" ry="2" />
<text  x="137.87" y="63.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="848.5" y="1909" width="0.2" height="15.0" fill="rgb(248,157,11)" rx="2" ry="2" />
<text  x="851.55" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="241.7" y="1509" width="0.2" height="15.0" fill="rgb(252,33,0)" rx="2" ry="2" />
<text  x="244.67" y="1519.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="870.0" y="1909" width="0.2" height="15.0" fill="rgb(209,190,48)" rx="2" ry="2" />
<text  x="872.99" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (31 samples, 0.52%)</title><rect x="1003.2" y="2021" width="6.1" height="15.0" fill="rgb(249,116,14)" rx="2" ry="2" />
<text  x="1006.19" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1172.7" y="1701" width="0.2" height="15.0" fill="rgb(250,207,29)" rx="2" ry="2" />
<text  x="1175.73" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1127.5" y="1813" width="0.4" height="15.0" fill="rgb(215,67,17)" rx="2" ry="2" />
<text  x="1130.47" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="562.1" y="1477" width="0.2" height="15.0" fill="rgb(236,54,4)" rx="2" ry="2" />
<text  x="565.08" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1018.3" y="1845" width="0.2" height="15.0" fill="rgb(235,72,26)" rx="2" ry="2" />
<text  x="1021.28" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1152.1" y="2005" width="0.2" height="15.0" fill="rgb(227,132,50)" rx="2" ry="2" />
<text  x="1155.08" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="247.4" y="1941" width="0.2" height="15.0" fill="rgb(213,29,47)" rx="2" ry="2" />
<text  x="250.43" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="733.8" y="1605" width="0.2" height="15.0" fill="rgb(237,18,51)" rx="2" ry="2" />
<text  x="736.80" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1182.7" y="2037" width="0.2" height="15.0" fill="rgb(214,114,5)" rx="2" ry="2" />
<text  x="1185.65" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="250.2" y="1973" width="0.2" height="15.0" fill="rgb(235,31,17)" rx="2" ry="2" />
<text  x="253.21" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="622.6" y="1957" width="0.2" height="15.0" fill="rgb(224,113,24)" rx="2" ry="2" />
<text  x="625.63" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="350.7" y="1893" width="0.2" height="15.0" fill="rgb(218,172,25)" rx="2" ry="2" />
<text  x="353.66" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="341" width="16.9" height="15.0" fill="rgb(219,205,12)" rx="2" ry="2" />
<text  x="122.19" y="351.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="897.2" y="2021" width="1.0" height="15.0" fill="rgb(248,54,37)" rx="2" ry="2" />
<text  x="900.18" y="2031.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="733.8" y="1429" width="0.2" height="15.0" fill="rgb(247,43,53)" rx="2" ry="2" />
<text  x="736.80" y="1439.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="733.8" y="1637" width="0.2" height="15.0" fill="rgb(219,228,37)" rx="2" ry="2" />
<text  x="736.80" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="853.9" y="1861" width="0.2" height="15.0" fill="rgb(208,176,52)" rx="2" ry="2" />
<text  x="856.91" y="1871.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="333.4" y="1861" width="0.4" height="15.0" fill="rgb(229,19,32)" rx="2" ry="2" />
<text  x="336.39" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="724.5" y="1829" width="0.2" height="15.0" fill="rgb(205,209,20)" rx="2" ry="2" />
<text  x="727.47" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="213.7" y="1845" width="0.2" height="15.0" fill="rgb(228,175,34)" rx="2" ry="2" />
<text  x="216.68" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="366.3" y="1893" width="0.2" height="15.0" fill="rgb(225,11,27)" rx="2" ry="2" />
<text  x="369.34" y="1903.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (2 samples, 0.03%)</title><rect x="1021.5" y="2037" width="0.4" height="15.0" fill="rgb(241,61,49)" rx="2" ry="2" />
<text  x="1024.46" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="67.0" y="1829" width="0.2" height="15.0" fill="rgb(223,46,22)" rx="2" ry="2" />
<text  x="69.98" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="142.2" y="1797" width="0.2" height="15.0" fill="rgb(241,3,42)" rx="2" ry="2" />
<text  x="145.21" y="1807.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="835.6" y="1909" width="0.2" height="15.0" fill="rgb(231,166,47)" rx="2" ry="2" />
<text  x="838.64" y="1919.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (25 samples, 0.42%)</title><rect x="689.3" y="1925" width="5.0" height="15.0" fill="rgb(251,155,3)" rx="2" ry="2" />
<text  x="692.33" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (261 samples, 4.39%)</title><rect x="529.7" y="2037" width="51.8" height="15.0" fill="rgb(227,70,29)" rx="2" ry="2" />
<text  x="532.72" y="2047.5" >faceb..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="948.0" y="1989" width="0.2" height="15.0" fill="rgb(222,226,9)" rx="2" ry="2" />
<text  x="951.00" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="654.4" y="1829" width="0.2" height="15.0" fill="rgb(230,136,52)" rx="2" ry="2" />
<text  x="657.39" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="112.2" y="2037" width="0.2" height="15.0" fill="rgb(254,80,17)" rx="2" ry="2" />
<text  x="115.24" y="2047.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_cpu (1 samples, 0.02%)</title><rect x="818.6" y="1605" width="0.2" height="15.0" fill="rgb(241,83,5)" rx="2" ry="2" />
<text  x="821.57" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="136.1" y="197" width="0.2" height="15.0" fill="rgb(217,61,5)" rx="2" ry="2" />
<text  x="139.06" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="196.4" y="1861" width="0.2" height="15.0" fill="rgb(216,133,1)" rx="2" ry="2" />
<text  x="199.41" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="99.1" y="1957" width="0.4" height="15.0" fill="rgb(214,95,6)" rx="2" ry="2" />
<text  x="102.14" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="668.5" y="1861" width="0.2" height="15.0" fill="rgb(243,163,18)" rx="2" ry="2" />
<text  x="671.49" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="961.5" y="2037" width="0.2" height="15.0" fill="rgb(244,33,11)" rx="2" ry="2" />
<text  x="964.50" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="623.8" y="1909" width="0.2" height="15.0" fill="rgb(248,148,21)" rx="2" ry="2" />
<text  x="626.82" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1016.7" y="1925" width="0.2" height="15.0" fill="rgb(253,213,31)" rx="2" ry="2" />
<text  x="1019.69" y="1935.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="371.7" y="1845" width="0.2" height="15.0" fill="rgb(246,60,13)" rx="2" ry="2" />
<text  x="374.70" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1183.1" y="1781" width="0.2" height="15.0" fill="rgb(251,206,19)" rx="2" ry="2" />
<text  x="1186.05" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="706.0" y="1877" width="0.2" height="15.0" fill="rgb(221,15,4)" rx="2" ry="2" />
<text  x="709.01" y="1887.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (58 samples, 0.98%)</title><rect x="729.8" y="1749" width="11.5" height="15.0" fill="rgb(238,122,9)" rx="2" ry="2" />
<text  x="732.83" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="662.3" y="1861" width="0.2" height="15.0" fill="rgb(244,193,49)" rx="2" ry="2" />
<text  x="665.34" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="857.3" y="1781" width="0.2" height="15.0" fill="rgb(222,171,1)" rx="2" ry="2" />
<text  x="860.28" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="443.8" y="1845" width="0.2" height="15.0" fill="rgb(223,137,36)" rx="2" ry="2" />
<text  x="446.77" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (3 samples, 0.05%)</title><rect x="600.0" y="1973" width="0.6" height="15.0" fill="rgb(238,222,17)" rx="2" ry="2" />
<text  x="603.00" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="936.5" y="1813" width="0.2" height="15.0" fill="rgb(214,224,16)" rx="2" ry="2" />
<text  x="939.49" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="762.6" y="1493" width="0.4" height="15.0" fill="rgb(207,44,48)" rx="2" ry="2" />
<text  x="765.59" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="627.0" y="1957" width="0.4" height="15.0" fill="rgb(217,126,22)" rx="2" ry="2" />
<text  x="630.00" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (8 samples, 0.13%)</title><rect x="869.4" y="2005" width="1.6" height="15.0" fill="rgb(246,48,3)" rx="2" ry="2" />
<text  x="872.39" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="743.1" y="1637" width="0.2" height="15.0" fill="rgb(232,63,2)" rx="2" ry="2" />
<text  x="746.13" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="881.7" y="1925" width="0.2" height="15.0" fill="rgb(206,194,44)" rx="2" ry="2" />
<text  x="884.70" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="935.3" y="1813" width="0.2" height="15.0" fill="rgb(242,175,35)" rx="2" ry="2" />
<text  x="938.30" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="559.9" y="1893" width="0.2" height="15.0" fill="rgb(206,210,54)" rx="2" ry="2" />
<text  x="562.90" y="1903.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (13 samples, 0.22%)</title><rect x="1118.9" y="1957" width="2.6" height="15.0" fill="rgb(212,221,2)" rx="2" ry="2" />
<text  x="1121.93" y="1967.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (56 samples, 0.94%)</title><rect x="1090.5" y="1925" width="11.2" height="15.0" fill="rgb(235,58,1)" rx="2" ry="2" />
<text  x="1093.54" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="982.2" y="1685" width="0.1" height="15.0" fill="rgb(229,223,16)" rx="2" ry="2" />
<text  x="985.15" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="836.0" y="1909" width="0.2" height="15.0" fill="rgb(245,122,44)" rx="2" ry="2" />
<text  x="839.04" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (649 samples, 10.92%)</title><rect x="715.3" y="1941" width="128.9" height="15.0" fill="rgb(245,120,18)" rx="2" ry="2" />
<text  x="718.34" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="289.7" y="1877" width="0.2" height="15.0" fill="rgb(250,5,33)" rx="2" ry="2" />
<text  x="292.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (5 samples, 0.08%)</title><rect x="1022.3" y="2037" width="0.9" height="15.0" fill="rgb(238,13,47)" rx="2" ry="2" />
<text  x="1025.25" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="38.6" y="2005" width="0.2" height="15.0" fill="rgb(218,9,1)" rx="2" ry="2" />
<text  x="41.59" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="955.5" y="1989" width="0.6" height="15.0" fill="rgb(239,63,6)" rx="2" ry="2" />
<text  x="958.55" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="734.4" y="1605" width="0.2" height="15.0" fill="rgb(238,70,32)" rx="2" ry="2" />
<text  x="737.40" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="134.9" y="85" width="0.2" height="15.0" fill="rgb(213,120,47)" rx="2" ry="2" />
<text  x="137.87" y="95.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (2 samples, 0.03%)</title><rect x="25.1" y="2005" width="0.4" height="15.0" fill="rgb(216,31,53)" rx="2" ry="2" />
<text  x="28.09" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="516.8" y="1957" width="0.2" height="15.0" fill="rgb(245,110,20)" rx="2" ry="2" />
<text  x="519.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="562.3" y="1829" width="0.2" height="15.0" fill="rgb(206,24,26)" rx="2" ry="2" />
<text  x="565.28" y="1839.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="282.2" y="1797" width="0.8" height="15.0" fill="rgb(228,84,16)" rx="2" ry="2" />
<text  x="285.17" y="1807.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="1146.5" y="2021" width="0.4" height="15.0" fill="rgb(228,128,38)" rx="2" ry="2" />
<text  x="1149.52" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (9 samples, 0.15%)</title><rect x="301.2" y="1573" width="1.8" height="15.0" fill="rgb(212,41,7)" rx="2" ry="2" />
<text  x="304.23" y="1583.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="794.2" y="1509" width="0.2" height="15.0" fill="rgb(213,121,31)" rx="2" ry="2" />
<text  x="797.15" y="1519.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="865.6" y="1989" width="0.4" height="15.0" fill="rgb(228,122,28)" rx="2" ry="2" />
<text  x="868.62" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.5" y="1861" width="0.2" height="15.0" fill="rgb(248,228,7)" rx="2" ry="2" />
<text  x="539.47" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="844.4" y="1733" width="0.2" height="15.0" fill="rgb(216,25,40)" rx="2" ry="2" />
<text  x="847.38" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="163.3" y="1765" width="0.2" height="15.0" fill="rgb(208,166,8)" rx="2" ry="2" />
<text  x="166.26" y="1775.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="627.0" y="1877" width="0.2" height="15.0" fill="rgb(223,177,17)" rx="2" ry="2" />
<text  x="630.00" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="947.4" y="1925" width="0.2" height="15.0" fill="rgb(227,152,9)" rx="2" ry="2" />
<text  x="950.41" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1156.5" y="1861" width="0.1" height="15.0" fill="rgb(226,67,22)" rx="2" ry="2" />
<text  x="1159.45" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="856.7" y="1877" width="0.2" height="15.0" fill="rgb(219,138,23)" rx="2" ry="2" />
<text  x="859.69" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="12.6" y="1877" width="1.0" height="15.0" fill="rgb(214,138,54)" rx="2" ry="2" />
<text  x="15.58" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="351.1" y="2005" width="0.2" height="15.0" fill="rgb(205,220,42)" rx="2" ry="2" />
<text  x="354.06" y="2015.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="472.2" y="1941" width="0.2" height="15.0" fill="rgb(226,19,20)" rx="2" ry="2" />
<text  x="475.15" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="330.0" y="1781" width="0.2" height="15.0" fill="rgb(253,60,7)" rx="2" ry="2" />
<text  x="333.01" y="1791.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="284.2" y="1813" width="0.2" height="15.0" fill="rgb(223,52,24)" rx="2" ry="2" />
<text  x="287.16" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="899.6" y="1957" width="0.2" height="15.0" fill="rgb(225,117,41)" rx="2" ry="2" />
<text  x="902.57" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.9" y="1829" width="0.2" height="15.0" fill="rgb(244,131,18)" rx="2" ry="2" />
<text  x="887.88" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="955.9" y="1957" width="0.2" height="15.0" fill="rgb(235,67,19)" rx="2" ry="2" />
<text  x="958.95" y="1967.5" ></text>
</g>
<g >
<title>_IO_no_init (4 samples, 0.07%)</title><rect x="205.7" y="2037" width="0.8" height="15.0" fill="rgb(223,150,26)" rx="2" ry="2" />
<text  x="208.74" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (3 samples, 0.05%)</title><rect x="1181.1" y="2021" width="0.6" height="15.0" fill="rgb(246,169,47)" rx="2" ry="2" />
<text  x="1184.07" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="755.4" y="1573" width="0.2" height="15.0" fill="rgb(251,169,54)" rx="2" ry="2" />
<text  x="758.44" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="169.0" y="1797" width="0.2" height="15.0" fill="rgb(222,131,33)" rx="2" ry="2" />
<text  x="172.01" y="1807.5" ></text>
</g>
<g >
<title>syscall (57 samples, 0.96%)</title><rect x="1155.5" y="1973" width="11.3" height="15.0" fill="rgb(238,128,20)" rx="2" ry="2" />
<text  x="1158.46" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="119.2" y="405" width="17.5" height="15.0" fill="rgb(226,155,22)" rx="2" ry="2" />
<text  x="122.19" y="415.5" ></text>
</g>
<g >
<title>__GI___getsockname (82 samples, 1.38%)</title><rect x="583.5" y="1941" width="16.3" height="15.0" fill="rgb(217,176,50)" rx="2" ry="2" />
<text  x="586.52" y="1951.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="100.7" y="1893" width="0.2" height="15.0" fill="rgb(247,202,23)" rx="2" ry="2" />
<text  x="103.72" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="627.0" y="1909" width="0.4" height="15.0" fill="rgb(205,171,32)" rx="2" ry="2" />
<text  x="630.00" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1029" width="18.5" height="15.0" fill="rgb(210,191,36)" rx="2" ry="2" />
<text  x="121.79" y="1039.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (50 samples, 0.84%)</title><rect x="669.1" y="1957" width="9.9" height="15.0" fill="rgb(241,31,32)" rx="2" ry="2" />
<text  x="672.08" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1087.8" y="1909" width="0.2" height="15.0" fill="rgb(252,94,3)" rx="2" ry="2" />
<text  x="1090.76" y="1919.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="145.2" y="1989" width="0.2" height="15.0" fill="rgb(251,20,46)" rx="2" ry="2" />
<text  x="148.19" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="643.7" y="1973" width="0.2" height="15.0" fill="rgb(253,34,10)" rx="2" ry="2" />
<text  x="646.67" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="574.4" y="2005" width="0.8" height="15.0" fill="rgb(228,159,6)" rx="2" ry="2" />
<text  x="577.39" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (7 samples, 0.12%)</title><rect x="1143.0" y="2005" width="1.3" height="15.0" fill="rgb(245,101,42)" rx="2" ry="2" />
<text  x="1145.95" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (5 samples, 0.08%)</title><rect x="999.8" y="2005" width="1.0" height="15.0" fill="rgb(213,82,9)" rx="2" ry="2" />
<text  x="1002.82" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (2 samples, 0.03%)</title><rect x="1167.2" y="2053" width="0.4" height="15.0" fill="rgb(220,169,19)" rx="2" ry="2" />
<text  x="1170.17" y="2063.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="662.3" y="1573" width="0.2" height="15.0" fill="rgb(229,36,47)" rx="2" ry="2" />
<text  x="665.34" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="136.7" y="357" width="0.2" height="15.0" fill="rgb(219,125,41)" rx="2" ry="2" />
<text  x="139.66" y="367.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="910.7" y="2021" width="0.6" height="15.0" fill="rgb(218,111,30)" rx="2" ry="2" />
<text  x="913.68" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (19 samples, 0.32%)</title><rect x="699.9" y="2021" width="3.7" height="15.0" fill="rgb(213,13,24)" rx="2" ry="2" />
<text  x="702.86" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="635.7" y="1957" width="0.2" height="15.0" fill="rgb(211,97,41)" rx="2" ry="2" />
<text  x="638.73" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="968.1" y="1845" width="0.2" height="15.0" fill="rgb(205,185,11)" rx="2" ry="2" />
<text  x="971.06" y="1855.5" ></text>
</g>
<g >
<title>iov_iter_advance (5 samples, 0.08%)</title><rect x="277.6" y="1861" width="1.0" height="15.0" fill="rgb(249,199,21)" rx="2" ry="2" />
<text  x="280.60" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (32 samples, 0.54%)</title><rect x="786.4" y="1509" width="6.4" height="15.0" fill="rgb(236,65,31)" rx="2" ry="2" />
<text  x="789.41" y="1519.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="286.3" y="1797" width="0.2" height="15.0" fill="rgb(229,50,25)" rx="2" ry="2" />
<text  x="289.34" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="913.9" y="1957" width="0.2" height="15.0" fill="rgb(244,85,1)" rx="2" ry="2" />
<text  x="916.86" y="1967.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="595.0" y="1845" width="0.2" height="15.0" fill="rgb(219,145,44)" rx="2" ry="2" />
<text  x="598.04" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.9" y="1893" width="0.2" height="15.0" fill="rgb(239,154,36)" rx="2" ry="2" />
<text  x="77.92" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="884.7" y="1717" width="0.2" height="15.0" fill="rgb(243,136,49)" rx="2" ry="2" />
<text  x="887.68" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="701.4" y="1861" width="0.2" height="15.0" fill="rgb(226,84,47)" rx="2" ry="2" />
<text  x="704.44" y="1871.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="139.8" y="1573" width="0.2" height="15.0" fill="rgb(218,154,53)" rx="2" ry="2" />
<text  x="142.83" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="913.9" y="1861" width="0.2" height="15.0" fill="rgb(214,101,5)" rx="2" ry="2" />
<text  x="916.86" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="856.7" y="1685" width="0.2" height="15.0" fill="rgb(232,211,16)" rx="2" ry="2" />
<text  x="859.69" y="1695.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="328.4" y="1605" width="0.2" height="15.0" fill="rgb(244,203,50)" rx="2" ry="2" />
<text  x="331.43" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="947.4" y="1877" width="0.2" height="15.0" fill="rgb(208,161,19)" rx="2" ry="2" />
<text  x="950.41" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="762.6" y="1669" width="0.4" height="15.0" fill="rgb(216,206,26)" rx="2" ry="2" />
<text  x="765.59" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="820.0" y="1589" width="0.2" height="15.0" fill="rgb(239,54,21)" rx="2" ry="2" />
<text  x="822.96" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="924.6" y="1909" width="0.2" height="15.0" fill="rgb(219,181,32)" rx="2" ry="2" />
<text  x="927.58" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (11 samples, 0.19%)</title><rect x="778.1" y="1541" width="2.2" height="15.0" fill="rgb(237,107,17)" rx="2" ry="2" />
<text  x="781.07" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="870.8" y="1973" width="0.2" height="15.0" fill="rgb(209,9,35)" rx="2" ry="2" />
<text  x="873.78" y="1983.5" ></text>
</g>
<g >
<title>inode_init_always (5 samples, 0.08%)</title><rect x="399.3" y="1909" width="1.0" height="15.0" fill="rgb(238,9,17)" rx="2" ry="2" />
<text  x="402.30" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="830.5" y="1701" width="0.2" height="15.0" fill="rgb(224,18,15)" rx="2" ry="2" />
<text  x="833.48" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="777.1" y="1557" width="0.2" height="15.0" fill="rgb(252,153,32)" rx="2" ry="2" />
<text  x="780.08" y="1567.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="134.1" y="85" width="0.2" height="15.0" fill="rgb(231,150,43)" rx="2" ry="2" />
<text  x="137.07" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="820.0" y="1621" width="0.2" height="15.0" fill="rgb(247,35,34)" rx="2" ry="2" />
<text  x="822.96" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="169.0" y="1813" width="0.2" height="15.0" fill="rgb(254,91,5)" rx="2" ry="2" />
<text  x="172.01" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="702.4" y="1973" width="0.8" height="15.0" fill="rgb(218,190,27)" rx="2" ry="2" />
<text  x="705.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="562.1" y="1589" width="0.2" height="15.0" fill="rgb(229,56,30)" rx="2" ry="2" />
<text  x="565.08" y="1599.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (8 samples, 0.13%)</title><rect x="77.1" y="1925" width="1.6" height="15.0" fill="rgb(243,101,31)" rx="2" ry="2" />
<text  x="80.10" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="992.3" y="1973" width="0.2" height="15.0" fill="rgb(209,224,9)" rx="2" ry="2" />
<text  x="995.27" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="913.9" y="1909" width="0.2" height="15.0" fill="rgb(220,198,9)" rx="2" ry="2" />
<text  x="916.86" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (42 samples, 0.71%)</title><rect x="901.2" y="2037" width="8.3" height="15.0" fill="rgb(234,188,54)" rx="2" ry="2" />
<text  x="904.15" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="600.8" y="1893" width="0.2" height="15.0" fill="rgb(250,90,22)" rx="2" ry="2" />
<text  x="603.79" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="138.4" y="1477" width="0.2" height="15.0" fill="rgb(251,5,3)" rx="2" ry="2" />
<text  x="141.44" y="1487.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="861.5" y="1957" width="0.1" height="15.0" fill="rgb(222,35,18)" rx="2" ry="2" />
<text  x="864.45" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="825.1" y="1733" width="0.2" height="15.0" fill="rgb(252,54,27)" rx="2" ry="2" />
<text  x="828.12" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="998.4" y="1989" width="0.2" height="15.0" fill="rgb(214,197,39)" rx="2" ry="2" />
<text  x="1001.43" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="294.3" y="1493" width="0.2" height="15.0" fill="rgb(251,196,12)" rx="2" ry="2" />
<text  x="297.28" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.08%)</title><rect x="838.8" y="1893" width="1.0" height="15.0" fill="rgb(224,32,8)" rx="2" ry="2" />
<text  x="841.82" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.2" y="1557" width="0.2" height="15.0" fill="rgb(215,44,41)" rx="2" ry="2" />
<text  x="121.19" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="213.7" y="1829" width="0.2" height="15.0" fill="rgb(213,111,28)" rx="2" ry="2" />
<text  x="216.68" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="156.3" y="1909" width="0.2" height="15.0" fill="rgb(209,198,37)" rx="2" ry="2" />
<text  x="159.31" y="1919.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="762.8" y="1413" width="0.2" height="15.0" fill="rgb(210,175,22)" rx="2" ry="2" />
<text  x="765.79" y="1423.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1005.6" y="1957" width="0.2" height="15.0" fill="rgb(212,153,6)" rx="2" ry="2" />
<text  x="1008.58" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="264.7" y="1941" width="0.2" height="15.0" fill="rgb(210,73,11)" rx="2" ry="2" />
<text  x="267.70" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="947.4" y="1781" width="0.2" height="15.0" fill="rgb(230,156,29)" rx="2" ry="2" />
<text  x="950.41" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="614.7" y="1973" width="0.2" height="15.0" fill="rgb(223,112,30)" rx="2" ry="2" />
<text  x="617.69" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(239,36,1)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1173.1" y="1973" width="0.2" height="15.0" fill="rgb(252,20,17)" rx="2" ry="2" />
<text  x="1176.13" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="268.3" y="1877" width="0.2" height="15.0" fill="rgb(242,74,3)" rx="2" ry="2" />
<text  x="271.27" y="1887.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="117.6" y="1909" width="0.2" height="15.0" fill="rgb(244,148,48)" rx="2" ry="2" />
<text  x="120.60" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="659.2" y="1925" width="0.2" height="15.0" fill="rgb(229,189,19)" rx="2" ry="2" />
<text  x="662.16" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="234.3" y="1861" width="0.6" height="15.0" fill="rgb(223,165,1)" rx="2" ry="2" />
<text  x="237.33" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1090.3" y="1749" width="0.2" height="15.0" fill="rgb(233,46,11)" rx="2" ry="2" />
<text  x="1093.34" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="85.4" y="1941" width="0.2" height="15.0" fill="rgb(217,216,45)" rx="2" ry="2" />
<text  x="88.44" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="240.7" y="1829" width="0.2" height="15.0" fill="rgb(245,210,2)" rx="2" ry="2" />
<text  x="243.68" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="272.4" y="1877" width="0.4" height="15.0" fill="rgb(205,41,49)" rx="2" ry="2" />
<text  x="275.44" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1121.3" y="1877" width="0.2" height="15.0" fill="rgb(244,146,12)" rx="2" ry="2" />
<text  x="1124.31" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (24 samples, 0.40%)</title><rect x="888.3" y="2005" width="4.7" height="15.0" fill="rgb(232,20,12)" rx="2" ry="2" />
<text  x="891.25" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt;&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1829" width="0.2" height="15.0" fill="rgb(250,41,25)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="837.2" y="1893" width="0.2" height="15.0" fill="rgb(238,54,48)" rx="2" ry="2" />
<text  x="840.23" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="141.4" y="1765" width="0.4" height="15.0" fill="rgb(254,191,8)" rx="2" ry="2" />
<text  x="144.42" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="562.3" y="1845" width="0.2" height="15.0" fill="rgb(221,166,19)" rx="2" ry="2" />
<text  x="565.28" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="343.5" y="1941" width="0.6" height="15.0" fill="rgb(235,50,20)" rx="2" ry="2" />
<text  x="346.51" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="924.6" y="1925" width="0.2" height="15.0" fill="rgb(234,99,12)" rx="2" ry="2" />
<text  x="927.58" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1135.8" y="1925" width="0.2" height="15.0" fill="rgb(219,141,9)" rx="2" ry="2" />
<text  x="1138.80" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (4 samples, 0.07%)</title><rect x="972.0" y="2037" width="0.8" height="15.0" fill="rgb(244,21,39)" rx="2" ry="2" />
<text  x="975.03" y="2047.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (4 samples, 0.07%)</title><rect x="1173.7" y="1973" width="0.8" height="15.0" fill="rgb(209,23,7)" rx="2" ry="2" />
<text  x="1176.72" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="543.8" y="1685" width="0.2" height="15.0" fill="rgb(222,125,24)" rx="2" ry="2" />
<text  x="546.82" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="956.3" y="1973" width="0.2" height="15.0" fill="rgb(229,15,52)" rx="2" ry="2" />
<text  x="959.34" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="699.1" y="2005" width="0.8" height="15.0" fill="rgb(211,137,16)" rx="2" ry="2" />
<text  x="702.06" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1143.7" y="1973" width="0.2" height="15.0" fill="rgb(213,102,16)" rx="2" ry="2" />
<text  x="1146.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (1 samples, 0.02%)</title><rect x="901.0" y="2037" width="0.2" height="15.0" fill="rgb(221,61,34)" rx="2" ry="2" />
<text  x="903.96" y="2047.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1016.7" y="1957" width="0.2" height="15.0" fill="rgb(207,19,25)" rx="2" ry="2" />
<text  x="1019.69" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1144.5" y="1957" width="0.2" height="15.0" fill="rgb(223,8,20)" rx="2" ry="2" />
<text  x="1147.54" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="753.9" y="1573" width="0.2" height="15.0" fill="rgb(243,187,22)" rx="2" ry="2" />
<text  x="756.85" y="1583.5" ></text>
</g>
<g >
<title>lock_sock_nested (18 samples, 0.30%)</title><rect x="384.6" y="1941" width="3.6" height="15.0" fill="rgb(212,79,9)" rx="2" ry="2" />
<text  x="387.61" y="1951.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="562.1" y="1461" width="0.2" height="15.0" fill="rgb(206,9,25)" rx="2" ry="2" />
<text  x="565.08" y="1471.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="694.1" y="1413" width="0.2" height="15.0" fill="rgb(217,77,20)" rx="2" ry="2" />
<text  x="697.10" y="1423.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="264.9" y="1973" width="0.2" height="15.0" fill="rgb(248,94,38)" rx="2" ry="2" />
<text  x="267.90" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.5" y="1445" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="828.52" y="1455.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="1068.1" y="1781" width="0.2" height="15.0" fill="rgb(248,27,44)" rx="2" ry="2" />
<text  x="1071.11" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="161.3" y="1941" width="0.4" height="15.0" fill="rgb(235,187,47)" rx="2" ry="2" />
<text  x="164.27" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="69.4" y="1861" width="0.4" height="15.0" fill="rgb(235,162,24)" rx="2" ry="2" />
<text  x="72.36" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="662.3" y="1781" width="0.2" height="15.0" fill="rgb(248,118,0)" rx="2" ry="2" />
<text  x="665.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="528.5" y="2021" width="1.2" height="15.0" fill="rgb(232,161,22)" rx="2" ry="2" />
<text  x="531.53" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="95.6" y="1845" width="0.2" height="15.0" fill="rgb(213,69,54)" rx="2" ry="2" />
<text  x="98.56" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1135.8" y="1893" width="0.2" height="15.0" fill="rgb(223,41,38)" rx="2" ry="2" />
<text  x="1138.80" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="562.3" y="1701" width="0.2" height="15.0" fill="rgb(236,27,11)" rx="2" ry="2" />
<text  x="565.28" y="1711.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="1138.6" y="2053" width="0.4" height="15.0" fill="rgb(220,143,7)" rx="2" ry="2" />
<text  x="1141.58" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="739.8" y="1605" width="0.2" height="15.0" fill="rgb(235,14,41)" rx="2" ry="2" />
<text  x="742.76" y="1615.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="61.2" y="1877" width="0.2" height="15.0" fill="rgb(220,201,27)" rx="2" ry="2" />
<text  x="64.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="213.7" y="1749" width="0.2" height="15.0" fill="rgb(247,9,18)" rx="2" ry="2" />
<text  x="216.68" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1048.9" y="1781" width="0.2" height="15.0" fill="rgb(253,228,9)" rx="2" ry="2" />
<text  x="1051.85" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1135.6" y="1957" width="0.4" height="15.0" fill="rgb(245,213,32)" rx="2" ry="2" />
<text  x="1138.61" y="1967.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="884.7" y="1573" width="0.2" height="15.0" fill="rgb(236,35,51)" rx="2" ry="2" />
<text  x="887.68" y="1583.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="825.5" y="1509" width="0.2" height="15.0" fill="rgb(239,14,33)" rx="2" ry="2" />
<text  x="828.52" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="294.3" y="1733" width="0.2" height="15.0" fill="rgb(206,154,11)" rx="2" ry="2" />
<text  x="297.28" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="562.3" y="1717" width="0.2" height="15.0" fill="rgb(232,180,35)" rx="2" ry="2" />
<text  x="565.28" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.7" y="1877" width="0.2" height="15.0" fill="rgb(223,122,38)" rx="2" ry="2" />
<text  x="887.68" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="398.5" y="1861" width="0.2" height="15.0" fill="rgb(225,69,5)" rx="2" ry="2" />
<text  x="401.50" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1048.5" y="2005" width="0.6" height="15.0" fill="rgb(245,135,2)" rx="2" ry="2" />
<text  x="1051.46" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="831.9" y="1893" width="0.4" height="15.0" fill="rgb(206,207,37)" rx="2" ry="2" />
<text  x="834.87" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="925.2" y="1925" width="0.2" height="15.0" fill="rgb(217,90,27)" rx="2" ry="2" />
<text  x="928.17" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="901.9" y="1989" width="0.2" height="15.0" fill="rgb(247,156,49)" rx="2" ry="2" />
<text  x="904.95" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="662.3" y="1925" width="0.2" height="15.0" fill="rgb(246,98,30)" rx="2" ry="2" />
<text  x="665.34" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (1 samples, 0.02%)</title><rect x="970.0" y="2037" width="0.2" height="15.0" fill="rgb(210,24,34)" rx="2" ry="2" />
<text  x="973.04" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (5 samples, 0.08%)</title><rect x="151.5" y="1941" width="1.0" height="15.0" fill="rgb(210,117,20)" rx="2" ry="2" />
<text  x="154.54" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="94.8" y="1813" width="0.2" height="15.0" fill="rgb(245,86,24)" rx="2" ry="2" />
<text  x="97.77" y="1823.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="1115.0" y="1765" width="0.4" height="15.0" fill="rgb(225,202,10)" rx="2" ry="2" />
<text  x="1117.96" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="289.3" y="1845" width="0.2" height="15.0" fill="rgb(224,152,9)" rx="2" ry="2" />
<text  x="292.32" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="562.3" y="1781" width="0.2" height="15.0" fill="rgb(206,180,54)" rx="2" ry="2" />
<text  x="565.28" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (9 samples, 0.15%)</title><rect x="69.2" y="1909" width="1.7" height="15.0" fill="rgb(232,190,48)" rx="2" ry="2" />
<text  x="72.16" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="61.0" y="1493" width="0.2" height="15.0" fill="rgb(214,171,35)" rx="2" ry="2" />
<text  x="64.02" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="848.1" y="1829" width="0.2" height="15.0" fill="rgb(221,100,11)" rx="2" ry="2" />
<text  x="851.15" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="935.3" y="1845" width="0.2" height="15.0" fill="rgb(245,82,47)" rx="2" ry="2" />
<text  x="938.30" y="1855.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="340.9" y="1957" width="2.0" height="15.0" fill="rgb(209,12,27)" rx="2" ry="2" />
<text  x="343.93" y="1967.5" ></text>
</g>
<g >
<title>destroy_inode (30 samples, 0.50%)</title><rect x="734.0" y="1701" width="6.0" height="15.0" fill="rgb(234,12,10)" rx="2" ry="2" />
<text  x="737.00" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="269.3" y="1749" width="0.2" height="15.0" fill="rgb(247,167,1)" rx="2" ry="2" />
<text  x="272.27" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="654.4" y="1909" width="0.2" height="15.0" fill="rgb(205,8,28)" rx="2" ry="2" />
<text  x="657.39" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="491.6" y="1941" width="0.2" height="15.0" fill="rgb(245,175,9)" rx="2" ry="2" />
<text  x="494.61" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="240.9" y="1829" width="1.2" height="15.0" fill="rgb(223,223,14)" rx="2" ry="2" />
<text  x="243.88" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1106.6" y="1829" width="0.2" height="15.0" fill="rgb(242,156,34)" rx="2" ry="2" />
<text  x="1109.62" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="269.3" y="1861" width="0.2" height="15.0" fill="rgb(212,208,4)" rx="2" ry="2" />
<text  x="272.27" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="775.3" y="1349" width="0.2" height="15.0" fill="rgb(222,152,13)" rx="2" ry="2" />
<text  x="778.29" y="1359.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="279.0" y="1877" width="0.2" height="15.0" fill="rgb(248,160,1)" rx="2" ry="2" />
<text  x="281.99" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="731.6" y="1477" width="0.2" height="15.0" fill="rgb(219,9,44)" rx="2" ry="2" />
<text  x="734.62" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="74.9" y="1749" width="0.2" height="15.0" fill="rgb(208,204,24)" rx="2" ry="2" />
<text  x="77.92" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="529.1" y="1925" width="0.4" height="15.0" fill="rgb(253,61,51)" rx="2" ry="2" />
<text  x="532.13" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="857.3" y="1669" width="0.2" height="15.0" fill="rgb(246,3,7)" rx="2" ry="2" />
<text  x="860.28" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="136.7" y="53" width="0.2" height="15.0" fill="rgb(229,155,4)" rx="2" ry="2" />
<text  x="139.66" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="547.6" y="1717" width="0.2" height="15.0" fill="rgb(216,37,47)" rx="2" ry="2" />
<text  x="550.59" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (34 samples, 0.57%)</title><rect x="929.9" y="1909" width="6.8" height="15.0" fill="rgb(223,67,22)" rx="2" ry="2" />
<text  x="932.94" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1003.0" y="2021" width="0.2" height="15.0" fill="rgb(249,115,18)" rx="2" ry="2" />
<text  x="1005.99" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="976.6" y="1941" width="0.2" height="15.0" fill="rgb(221,117,15)" rx="2" ry="2" />
<text  x="979.59" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="132.9" y="69" width="0.2" height="15.0" fill="rgb(205,186,32)" rx="2" ry="2" />
<text  x="135.88" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="820.0" y="1685" width="0.2" height="15.0" fill="rgb(218,71,29)" rx="2" ry="2" />
<text  x="822.96" y="1695.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="855.7" y="1941" width="0.2" height="15.0" fill="rgb(211,92,44)" rx="2" ry="2" />
<text  x="858.69" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="398.5" y="1797" width="0.2" height="15.0" fill="rgb(231,68,10)" rx="2" ry="2" />
<text  x="401.50" y="1807.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="912.9" y="1989" width="0.2" height="15.0" fill="rgb(227,73,40)" rx="2" ry="2" />
<text  x="915.87" y="1999.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="1181.7" y="2053" width="0.4" height="15.0" fill="rgb(212,221,47)" rx="2" ry="2" />
<text  x="1184.66" y="2063.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="793.6" y="1509" width="0.2" height="15.0" fill="rgb(245,108,18)" rx="2" ry="2" />
<text  x="796.56" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="825.3" y="1637" width="0.8" height="15.0" fill="rgb(218,109,46)" rx="2" ry="2" />
<text  x="828.32" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="483.1" y="1813" width="0.4" height="15.0" fill="rgb(211,182,29)" rx="2" ry="2" />
<text  x="486.07" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="131.1" y="37" width="0.2" height="15.0" fill="rgb(207,179,37)" rx="2" ry="2" />
<text  x="134.10" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="955.3" y="2005" width="0.8" height="15.0" fill="rgb(242,137,4)" rx="2" ry="2" />
<text  x="958.35" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="706.0" y="1637" width="0.2" height="15.0" fill="rgb(226,33,16)" rx="2" ry="2" />
<text  x="709.01" y="1647.5" ></text>
</g>
<g >
<title>task_work_add (8 samples, 0.13%)</title><rect x="828.3" y="1797" width="1.6" height="15.0" fill="rgb(241,110,9)" rx="2" ry="2" />
<text  x="831.30" y="1807.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="613.1" y="1669" width="0.2" height="15.0" fill="rgb(208,228,18)" rx="2" ry="2" />
<text  x="616.10" y="1679.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="112.2" y="1925" width="0.2" height="15.0" fill="rgb(238,104,6)" rx="2" ry="2" />
<text  x="115.24" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="489.6" y="1957" width="0.2" height="15.0" fill="rgb(214,148,17)" rx="2" ry="2" />
<text  x="492.62" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1162.6" y="1925" width="0.2" height="15.0" fill="rgb(236,61,29)" rx="2" ry="2" />
<text  x="1165.60" y="1935.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1106.6" y="1461" width="0.2" height="15.0" fill="rgb(254,182,24)" rx="2" ry="2" />
<text  x="1109.62" y="1471.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1154.3" y="1669" width="0.2" height="15.0" fill="rgb(220,223,46)" rx="2" ry="2" />
<text  x="1157.27" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="428.5" y="1973" width="0.2" height="15.0" fill="rgb(210,213,40)" rx="2" ry="2" />
<text  x="431.48" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="1149.5" y="1973" width="0.4" height="15.0" fill="rgb(253,69,3)" rx="2" ry="2" />
<text  x="1152.50" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1005.6" y="1989" width="0.2" height="15.0" fill="rgb(237,105,7)" rx="2" ry="2" />
<text  x="1008.58" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="279.0" y="1717" width="0.2" height="15.0" fill="rgb(211,158,23)" rx="2" ry="2" />
<text  x="281.99" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="490.2" y="1749" width="0.2" height="15.0" fill="rgb(233,167,34)" rx="2" ry="2" />
<text  x="493.22" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (34 samples, 0.57%)</title><rect x="97.3" y="1989" width="6.8" height="15.0" fill="rgb(212,27,53)" rx="2" ry="2" />
<text  x="100.35" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1061" width="18.5" height="15.0" fill="rgb(216,72,25)" rx="2" ry="2" />
<text  x="121.79" y="1071.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="691.9" y="1877" width="0.2" height="15.0" fill="rgb(232,67,35)" rx="2" ry="2" />
<text  x="694.91" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 2.04%)</title><rect x="117.8" y="1781" width="24.0" height="15.0" fill="rgb(235,23,36)" rx="2" ry="2" />
<text  x="120.80" y="1791.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="267.3" y="1765" width="0.2" height="15.0" fill="rgb(223,36,29)" rx="2" ry="2" />
<text  x="270.28" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="269.3" y="1717" width="0.2" height="15.0" fill="rgb(217,131,10)" rx="2" ry="2" />
<text  x="272.27" y="1727.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="762.8" y="1461" width="0.2" height="15.0" fill="rgb(236,181,54)" rx="2" ry="2" />
<text  x="765.79" y="1471.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="582.7" y="1941" width="0.8" height="15.0" fill="rgb(219,136,46)" rx="2" ry="2" />
<text  x="585.73" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="825.5" y="1541" width="0.2" height="15.0" fill="rgb(234,31,51)" rx="2" ry="2" />
<text  x="828.52" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1183.1" y="1941" width="0.3" height="15.0" fill="rgb(211,53,45)" rx="2" ry="2" />
<text  x="1186.05" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="852.7" y="1877" width="0.2" height="15.0" fill="rgb(233,7,33)" rx="2" ry="2" />
<text  x="855.72" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="832.1" y="1717" width="0.2" height="15.0" fill="rgb(234,99,7)" rx="2" ry="2" />
<text  x="835.07" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="694.1" y="1861" width="0.2" height="15.0" fill="rgb(205,178,50)" rx="2" ry="2" />
<text  x="697.10" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="733.8" y="1509" width="0.2" height="15.0" fill="rgb(232,0,17)" rx="2" ry="2" />
<text  x="736.80" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="52.1" y="1893" width="0.2" height="15.0" fill="rgb(223,123,5)" rx="2" ry="2" />
<text  x="55.09" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1143.5" y="1973" width="0.2" height="15.0" fill="rgb(233,106,47)" rx="2" ry="2" />
<text  x="1146.55" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1034.2" y="1989" width="0.2" height="15.0" fill="rgb(207,145,9)" rx="2" ry="2" />
<text  x="1037.16" y="1999.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="94.8" y="1781" width="0.2" height="15.0" fill="rgb(219,164,44)" rx="2" ry="2" />
<text  x="97.77" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="510.3" y="1909" width="0.2" height="15.0" fill="rgb(243,112,1)" rx="2" ry="2" />
<text  x="513.27" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1126.1" y="1861" width="0.2" height="15.0" fill="rgb(243,113,41)" rx="2" ry="2" />
<text  x="1129.08" y="1871.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1163.8" y="1829" width="0.2" height="15.0" fill="rgb(230,100,34)" rx="2" ry="2" />
<text  x="1166.80" y="1839.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="491.8" y="1637" width="0.2" height="15.0" fill="rgb(220,134,5)" rx="2" ry="2" />
<text  x="494.81" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="526.2" y="1957" width="0.1" height="15.0" fill="rgb(210,203,0)" rx="2" ry="2" />
<text  x="529.15" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="195.6" y="1941" width="0.6" height="15.0" fill="rgb(225,51,25)" rx="2" ry="2" />
<text  x="198.62" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="559.9" y="1941" width="0.2" height="15.0" fill="rgb(213,18,48)" rx="2" ry="2" />
<text  x="562.90" y="1951.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="302.2" y="1381" width="0.6" height="15.0" fill="rgb(252,106,28)" rx="2" ry="2" />
<text  x="305.22" y="1391.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="528.9" y="1909" width="0.2" height="15.0" fill="rgb(214,60,37)" rx="2" ry="2" />
<text  x="531.93" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1086.6" y="1845" width="0.2" height="15.0" fill="rgb(238,56,42)" rx="2" ry="2" />
<text  x="1089.57" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="836.6" y="1829" width="0.2" height="15.0" fill="rgb(248,186,41)" rx="2" ry="2" />
<text  x="839.64" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output (89 samples, 1.50%)</title><rect x="298.6" y="1765" width="17.7" height="15.0" fill="rgb(227,62,53)" rx="2" ry="2" />
<text  x="301.65" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="428.7" y="2021" width="0.4" height="15.0" fill="rgb(213,146,6)" rx="2" ry="2" />
<text  x="431.68" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1669" width="0.2" height="15.0" fill="rgb(213,101,41)" rx="2" ry="2" />
<text  x="828.12" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="136.3" y="293" width="0.2" height="15.0" fill="rgb(249,188,4)" rx="2" ry="2" />
<text  x="139.26" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="541.2" y="1861" width="0.4" height="15.0" fill="rgb(211,152,53)" rx="2" ry="2" />
<text  x="544.24" y="1871.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="328.4" y="1637" width="0.2" height="15.0" fill="rgb(241,116,20)" rx="2" ry="2" />
<text  x="331.43" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1018.3" y="1925" width="0.2" height="15.0" fill="rgb(235,17,52)" rx="2" ry="2" />
<text  x="1021.28" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="168.2" y="1909" width="0.2" height="15.0" fill="rgb(224,60,5)" rx="2" ry="2" />
<text  x="171.22" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="562.3" y="1733" width="0.2" height="15.0" fill="rgb(208,71,8)" rx="2" ry="2" />
<text  x="565.28" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="415.6" y="1909" width="0.4" height="15.0" fill="rgb(251,114,8)" rx="2" ry="2" />
<text  x="418.58" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="858.9" y="1973" width="0.4" height="15.0" fill="rgb(235,72,43)" rx="2" ry="2" />
<text  x="861.87" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1163.8" y="1893" width="0.2" height="15.0" fill="rgb(218,115,30)" rx="2" ry="2" />
<text  x="1166.80" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1052.0" y="1797" width="0.2" height="15.0" fill="rgb(240,143,25)" rx="2" ry="2" />
<text  x="1055.03" y="1807.5" ></text>
</g>
<g >
<title>__GI___setsockopt (82 samples, 1.38%)</title><rect x="682.2" y="1989" width="16.3" height="15.0" fill="rgb(247,40,48)" rx="2" ry="2" />
<text  x="685.19" y="1999.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="138.8" y="1349" width="0.2" height="15.0" fill="rgb(220,161,51)" rx="2" ry="2" />
<text  x="141.84" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="136.9" y="309" width="0.2" height="15.0" fill="rgb(237,66,36)" rx="2" ry="2" />
<text  x="139.85" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="820.0" y="1733" width="0.2" height="15.0" fill="rgb(253,74,51)" rx="2" ry="2" />
<text  x="822.96" y="1743.5" ></text>
</g>
<g >
<title>tcp_push (204 samples, 3.43%)</title><rect x="289.9" y="1877" width="40.5" height="15.0" fill="rgb(254,98,54)" rx="2" ry="2" />
<text  x="292.91" y="1887.5" >tcp..</text>
</g>
<g >
<title>[unknown] (4,598 samples, 77.36%)</title><rect x="112.8" y="2053" width="912.8" height="15.0" fill="rgb(241,34,29)" rx="2" ry="2" />
<text  x="115.83" y="2063.5" >[unknown]</text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="491.8" y="1669" width="0.2" height="15.0" fill="rgb(249,214,23)" rx="2" ry="2" />
<text  x="494.81" y="1679.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1150.5" y="1957" width="0.2" height="15.0" fill="rgb(216,171,22)" rx="2" ry="2" />
<text  x="1153.49" y="1967.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="133.1" y="69" width="0.2" height="15.0" fill="rgb(208,124,27)" rx="2" ry="2" />
<text  x="136.08" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="831.7" y="1861" width="0.2" height="15.0" fill="rgb(211,148,33)" rx="2" ry="2" />
<text  x="834.67" y="1871.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="87.8" y="1925" width="0.2" height="15.0" fill="rgb(229,22,27)" rx="2" ry="2" />
<text  x="90.82" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="752.7" y="1733" width="0.2" height="15.0" fill="rgb(236,120,53)" rx="2" ry="2" />
<text  x="755.66" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="983.7" y="1957" width="0.2" height="15.0" fill="rgb(223,158,5)" rx="2" ry="2" />
<text  x="986.74" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="745.9" y="1477" width="0.2" height="15.0" fill="rgb(221,129,45)" rx="2" ry="2" />
<text  x="748.91" y="1487.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1071.9" y="1781" width="0.4" height="15.0" fill="rgb(213,65,51)" rx="2" ry="2" />
<text  x="1074.88" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="568.6" y="2005" width="0.2" height="15.0" fill="rgb(212,6,45)" rx="2" ry="2" />
<text  x="571.63" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.9" y="1957" width="0.2" height="15.0" fill="rgb(213,26,9)" rx="2" ry="2" />
<text  x="77.92" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="279.0" y="1781" width="0.2" height="15.0" fill="rgb(243,177,13)" rx="2" ry="2" />
<text  x="281.99" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="355.6" y="2021" width="0.2" height="15.0" fill="rgb(248,182,13)" rx="2" ry="2" />
<text  x="358.62" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="213.7" y="1765" width="0.2" height="15.0" fill="rgb(208,123,19)" rx="2" ry="2" />
<text  x="216.68" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="119.0" y="933" width="18.1" height="15.0" fill="rgb(217,93,4)" rx="2" ry="2" />
<text  x="121.99" y="943.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1106.6" y="1573" width="0.2" height="15.0" fill="rgb(235,202,21)" rx="2" ry="2" />
<text  x="1109.62" y="1583.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="662.1" y="1877" width="0.2" height="15.0" fill="rgb(214,82,20)" rx="2" ry="2" />
<text  x="665.14" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="822.5" y="1621" width="0.2" height="15.0" fill="rgb(216,112,49)" rx="2" ry="2" />
<text  x="825.54" y="1631.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="755.2" y="1733" width="0.2" height="15.0" fill="rgb(217,132,32)" rx="2" ry="2" />
<text  x="758.24" y="1743.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="731.6" y="1365" width="0.2" height="15.0" fill="rgb(226,176,48)" rx="2" ry="2" />
<text  x="734.62" y="1375.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="342.7" y="1797" width="0.2" height="15.0" fill="rgb(237,190,41)" rx="2" ry="2" />
<text  x="345.72" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="627.2" y="1861" width="0.2" height="15.0" fill="rgb(231,35,6)" rx="2" ry="2" />
<text  x="630.20" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="698.5" y="1925" width="0.2" height="15.0" fill="rgb(239,10,26)" rx="2" ry="2" />
<text  x="701.47" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="94.8" y="1845" width="0.2" height="15.0" fill="rgb(241,183,25)" rx="2" ry="2" />
<text  x="97.77" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="155.9" y="1845" width="0.2" height="15.0" fill="rgb(225,92,34)" rx="2" ry="2" />
<text  x="158.91" y="1855.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="126.9" y="53" width="0.2" height="15.0" fill="rgb(206,197,52)" rx="2" ry="2" />
<text  x="129.93" y="63.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="96.2" y="1941" width="0.2" height="15.0" fill="rgb(236,40,16)" rx="2" ry="2" />
<text  x="99.16" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="831.7" y="1781" width="0.2" height="15.0" fill="rgb(218,31,34)" rx="2" ry="2" />
<text  x="834.67" y="1791.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="486.8" y="1509" width="0.2" height="15.0" fill="rgb(210,91,42)" rx="2" ry="2" />
<text  x="489.84" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="740.9" y="1589" width="0.2" height="15.0" fill="rgb(216,38,52)" rx="2" ry="2" />
<text  x="743.95" y="1599.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="156.3" y="1653" width="0.2" height="15.0" fill="rgb(242,191,10)" rx="2" ry="2" />
<text  x="159.31" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="196.4" y="1845" width="0.2" height="15.0" fill="rgb(246,123,53)" rx="2" ry="2" />
<text  x="199.41" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="81.9" y="1909" width="0.2" height="15.0" fill="rgb(209,143,43)" rx="2" ry="2" />
<text  x="84.86" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="109.5" y="1877" width="0.2" height="15.0" fill="rgb(219,94,7)" rx="2" ry="2" />
<text  x="112.46" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="504.9" y="1861" width="0.8" height="15.0" fill="rgb(238,181,13)" rx="2" ry="2" />
<text  x="507.91" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="547.6" y="1621" width="0.2" height="15.0" fill="rgb(249,119,14)" rx="2" ry="2" />
<text  x="550.59" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="88.2" y="1925" width="0.2" height="15.0" fill="rgb(229,90,17)" rx="2" ry="2" />
<text  x="91.22" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="114.8" y="1989" width="0.2" height="15.0" fill="rgb(217,143,50)" rx="2" ry="2" />
<text  x="117.82" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="516.6" y="1973" width="0.4" height="15.0" fill="rgb(241,6,45)" rx="2" ry="2" />
<text  x="519.62" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="419.0" y="1749" width="0.1" height="15.0" fill="rgb(218,60,41)" rx="2" ry="2" />
<text  x="421.95" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1176.9" y="1989" width="0.2" height="15.0" fill="rgb(221,201,0)" rx="2" ry="2" />
<text  x="1179.90" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="264.7" y="1797" width="0.2" height="15.0" fill="rgb(223,89,0)" rx="2" ry="2" />
<text  x="267.70" y="1807.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="142.0" y="1797" width="0.2" height="15.0" fill="rgb(219,199,28)" rx="2" ry="2" />
<text  x="145.02" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (23 samples, 0.39%)</title><rect x="67.6" y="1941" width="4.5" height="15.0" fill="rgb(217,200,46)" rx="2" ry="2" />
<text  x="70.57" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="755.4" y="1509" width="0.2" height="15.0" fill="rgb(220,47,10)" rx="2" ry="2" />
<text  x="758.44" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="288.5" y="1813" width="0.2" height="15.0" fill="rgb(241,12,29)" rx="2" ry="2" />
<text  x="291.52" y="1823.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="918.4" y="2005" width="0.2" height="15.0" fill="rgb(233,146,0)" rx="2" ry="2" />
<text  x="921.43" y="2015.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="249.8" y="2037" width="0.6" height="15.0" fill="rgb(207,160,2)" rx="2" ry="2" />
<text  x="252.81" y="2047.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="182.9" y="1989" width="0.4" height="15.0" fill="rgb(215,93,25)" rx="2" ry="2" />
<text  x="185.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="118.8" y="1333" width="19.2" height="15.0" fill="rgb(213,78,2)" rx="2" ry="2" />
<text  x="121.79" y="1343.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="510.5" y="2021" width="0.2" height="15.0" fill="rgb(213,95,48)" rx="2" ry="2" />
<text  x="513.47" y="2031.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="460.8" y="1973" width="0.8" height="15.0" fill="rgb(244,43,31)" rx="2" ry="2" />
<text  x="463.84" y="1983.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="793.8" y="1525" width="0.2" height="15.0" fill="rgb(243,67,18)" rx="2" ry="2" />
<text  x="796.76" y="1535.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="491.8" y="1621" width="0.2" height="15.0" fill="rgb(217,17,26)" rx="2" ry="2" />
<text  x="494.81" y="1631.5" ></text>
</g>
<g >
<title>ip_queue_xmit (116 samples, 1.95%)</title><rect x="294.5" y="1813" width="23.0" height="15.0" fill="rgb(233,54,0)" rx="2" ry="2" />
<text  x="297.48" y="1823.5" >i..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="884.9" y="1637" width="0.2" height="15.0" fill="rgb(207,41,5)" rx="2" ry="2" />
<text  x="887.88" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="627.2" y="1781" width="0.2" height="15.0" fill="rgb(205,124,23)" rx="2" ry="2" />
<text  x="630.20" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="761.0" y="1621" width="0.2" height="15.0" fill="rgb(242,141,48)" rx="2" ry="2" />
<text  x="764.00" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="491.0" y="1877" width="0.2" height="15.0" fill="rgb(237,94,17)" rx="2" ry="2" />
<text  x="494.01" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="294.3" y="1573" width="0.2" height="15.0" fill="rgb(227,27,38)" rx="2" ry="2" />
<text  x="297.28" y="1583.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="733.8" y="1381" width="0.2" height="15.0" fill="rgb(219,193,53)" rx="2" ry="2" />
<text  x="736.80" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="483.1" y="1685" width="0.4" height="15.0" fill="rgb(215,34,54)" rx="2" ry="2" />
<text  x="486.07" y="1695.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="936.5" y="1541" width="0.2" height="15.0" fill="rgb(213,137,11)" rx="2" ry="2" />
<text  x="939.49" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1167.6" y="2053" width="0.2" height="15.0" fill="rgb(240,171,53)" rx="2" ry="2" />
<text  x="1170.57" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (30 samples, 0.50%)</title><rect x="985.1" y="1989" width="6.0" height="15.0" fill="rgb(235,64,17)" rx="2" ry="2" />
<text  x="988.13" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="925.4" y="1925" width="0.8" height="15.0" fill="rgb(208,161,3)" rx="2" ry="2" />
<text  x="928.37" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="206.9" y="1845" width="0.2" height="15.0" fill="rgb(206,17,10)" rx="2" ry="2" />
<text  x="209.93" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1152.1" y="1957" width="0.2" height="15.0" fill="rgb(209,205,44)" rx="2" ry="2" />
<text  x="1155.08" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="491.0" y="1781" width="0.2" height="15.0" fill="rgb(245,25,9)" rx="2" ry="2" />
<text  x="494.01" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="290.5" y="1717" width="0.2" height="15.0" fill="rgb(214,174,31)" rx="2" ry="2" />
<text  x="293.51" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="169.8" y="1877" width="0.6" height="15.0" fill="rgb(222,189,37)" rx="2" ry="2" />
<text  x="172.81" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="562.1" y="1621" width="0.2" height="15.0" fill="rgb(241,206,36)" rx="2" ry="2" />
<text  x="565.08" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="95.6" y="1717" width="0.2" height="15.0" fill="rgb(237,115,19)" rx="2" ry="2" />
<text  x="98.56" y="1727.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (3 samples, 0.05%)</title><rect x="734.6" y="1621" width="0.6" height="15.0" fill="rgb(234,120,24)" rx="2" ry="2" />
<text  x="737.60" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="408.2" y="1813" width="0.2" height="15.0" fill="rgb(224,222,27)" rx="2" ry="2" />
<text  x="411.23" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="305.8" y="1685" width="0.6" height="15.0" fill="rgb(217,126,19)" rx="2" ry="2" />
<text  x="308.79" y="1695.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="527.7" y="1989" width="0.2" height="15.0" fill="rgb(219,38,46)" rx="2" ry="2" />
<text  x="530.74" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="885.7" y="1893" width="0.4" height="15.0" fill="rgb(221,222,27)" rx="2" ry="2" />
<text  x="888.67" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1154.3" y="1797" width="0.2" height="15.0" fill="rgb(213,27,53)" rx="2" ry="2" />
<text  x="1157.27" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="706.0" y="1525" width="0.2" height="15.0" fill="rgb(239,0,2)" rx="2" ry="2" />
<text  x="709.01" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (16 samples, 0.27%)</title><rect x="889.8" y="1989" width="3.2" height="15.0" fill="rgb(248,33,3)" rx="2" ry="2" />
<text  x="892.84" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="94.8" y="1877" width="0.2" height="15.0" fill="rgb(252,88,6)" rx="2" ry="2" />
<text  x="97.77" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="879.3" y="1893" width="0.2" height="15.0" fill="rgb(243,229,8)" rx="2" ry="2" />
<text  x="882.32" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="71.3" y="1893" width="0.6" height="15.0" fill="rgb(240,135,24)" rx="2" ry="2" />
<text  x="74.34" y="1903.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="646.5" y="1701" width="0.2" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="649.45" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="613" width="17.9" height="15.0" fill="rgb(229,69,54)" rx="2" ry="2" />
<text  x="122.19" y="623.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="169.0" y="1893" width="0.2" height="15.0" fill="rgb(239,109,54)" rx="2" ry="2" />
<text  x="172.01" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="659.2" y="1813" width="0.2" height="15.0" fill="rgb(205,87,53)" rx="2" ry="2" />
<text  x="662.16" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="825.9" y="1557" width="0.2" height="15.0" fill="rgb(244,76,14)" rx="2" ry="2" />
<text  x="828.92" y="1567.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1114.2" y="1509" width="0.2" height="15.0" fill="rgb(214,100,18)" rx="2" ry="2" />
<text  x="1117.17" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1005.6" y="1909" width="0.2" height="15.0" fill="rgb(244,53,27)" rx="2" ry="2" />
<text  x="1008.58" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="646.5" y="1733" width="0.2" height="15.0" fill="rgb(230,119,23)" rx="2" ry="2" />
<text  x="649.45" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="743.1" y="1621" width="0.2" height="15.0" fill="rgb(251,2,51)" rx="2" ry="2" />
<text  x="746.13" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="637.1" y="1765" width="0.2" height="15.0" fill="rgb(208,21,25)" rx="2" ry="2" />
<text  x="640.12" y="1775.5" ></text>
</g>
<g >
<title>sch_direct_xmit (46 samples, 0.77%)</title><rect x="306.4" y="1701" width="9.1" height="15.0" fill="rgb(207,14,17)" rx="2" ry="2" />
<text  x="309.39" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1024.0" y="2005" width="0.2" height="15.0" fill="rgb(232,57,41)" rx="2" ry="2" />
<text  x="1027.04" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (11 samples, 0.19%)</title><rect x="981.0" y="1957" width="2.1" height="15.0" fill="rgb(250,122,6)" rx="2" ry="2" />
<text  x="983.96" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="269.3" y="1909" width="0.2" height="15.0" fill="rgb(221,100,9)" rx="2" ry="2" />
<text  x="272.27" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="138.8" y="1397" width="0.2" height="15.0" fill="rgb(223,156,51)" rx="2" ry="2" />
<text  x="141.84" y="1407.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="52.7" y="1909" width="0.2" height="15.0" fill="rgb(229,219,1)" rx="2" ry="2" />
<text  x="55.68" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="505.1" y="1701" width="0.4" height="15.0" fill="rgb(248,91,48)" rx="2" ry="2" />
<text  x="508.11" y="1711.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="739.6" y="1637" width="0.2" height="15.0" fill="rgb(208,146,23)" rx="2" ry="2" />
<text  x="742.56" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="247.8" y="1781" width="0.2" height="15.0" fill="rgb(212,137,42)" rx="2" ry="2" />
<text  x="250.83" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="134.7" y="133" width="0.2" height="15.0" fill="rgb(237,200,43)" rx="2" ry="2" />
<text  x="137.67" y="143.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="213.7" y="1909" width="0.2" height="15.0" fill="rgb(238,81,54)" rx="2" ry="2" />
<text  x="216.68" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="167.4" y="1861" width="0.4" height="15.0" fill="rgb(211,19,51)" rx="2" ry="2" />
<text  x="170.43" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="910.5" y="2037" width="0.2" height="15.0" fill="rgb(227,35,11)" rx="2" ry="2" />
<text  x="913.48" y="2047.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="596.4" y="1813" width="0.2" height="15.0" fill="rgb(228,37,45)" rx="2" ry="2" />
<text  x="599.43" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1017.1" y="1829" width="0.2" height="15.0" fill="rgb(214,147,43)" rx="2" ry="2" />
<text  x="1020.09" y="1839.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="520.2" y="1973" width="0.2" height="15.0" fill="rgb(210,83,41)" rx="2" ry="2" />
<text  x="523.20" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="162.9" y="1893" width="0.6" height="15.0" fill="rgb(205,120,25)" rx="2" ry="2" />
<text  x="165.86" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="755.4" y="1557" width="0.2" height="15.0" fill="rgb(224,24,38)" rx="2" ry="2" />
<text  x="758.44" y="1567.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="675.4" y="1845" width="0.2" height="15.0" fill="rgb(235,55,36)" rx="2" ry="2" />
<text  x="678.44" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="753.3" y="1717" width="0.4" height="15.0" fill="rgb(224,177,25)" rx="2" ry="2" />
<text  x="756.26" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="844.4" y="1653" width="0.2" height="15.0" fill="rgb(236,209,31)" rx="2" ry="2" />
<text  x="847.38" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="343.9" y="1925" width="0.2" height="15.0" fill="rgb(252,13,43)" rx="2" ry="2" />
<text  x="346.91" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (3 samples, 0.05%)</title><rect x="679.0" y="1973" width="0.6" height="15.0" fill="rgb(220,83,25)" rx="2" ry="2" />
<text  x="682.01" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="899.6" y="1573" width="0.2" height="15.0" fill="rgb(233,182,44)" rx="2" ry="2" />
<text  x="902.57" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="899.6" y="2005" width="0.2" height="15.0" fill="rgb(206,149,49)" rx="2" ry="2" />
<text  x="902.57" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="493.2" y="1877" width="0.2" height="15.0" fill="rgb(216,212,23)" rx="2" ry="2" />
<text  x="496.20" y="1887.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="912.9" y="1973" width="0.2" height="15.0" fill="rgb(252,128,45)" rx="2" ry="2" />
<text  x="915.87" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="983.9" y="1973" width="1.2" height="15.0" fill="rgb(214,76,3)" rx="2" ry="2" />
<text  x="986.94" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="982.2" y="1781" width="0.1" height="15.0" fill="rgb(213,174,31)" rx="2" ry="2" />
<text  x="985.15" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="94.6" y="1909" width="0.4" height="15.0" fill="rgb(226,204,16)" rx="2" ry="2" />
<text  x="97.57" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1019.9" y="1797" width="0.2" height="15.0" fill="rgb(223,55,25)" rx="2" ry="2" />
<text  x="1022.87" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (8 samples, 0.13%)</title><rect x="69.4" y="1893" width="1.5" height="15.0" fill="rgb(218,73,4)" rx="2" ry="2" />
<text  x="72.36" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="486.6" y="1877" width="0.4" height="15.0" fill="rgb(215,118,7)" rx="2" ry="2" />
<text  x="489.65" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="180.1" y="2005" width="0.2" height="15.0" fill="rgb(231,10,37)" rx="2" ry="2" />
<text  x="183.13" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.2" y="1941" width="0.2" height="15.0" fill="rgb(205,229,4)" rx="2" ry="2" />
<text  x="64.22" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="134.5" y="69" width="0.2" height="15.0" fill="rgb(232,112,46)" rx="2" ry="2" />
<text  x="137.47" y="79.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="114.8" y="1813" width="0.2" height="15.0" fill="rgb(245,44,6)" rx="2" ry="2" />
<text  x="117.82" y="1823.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="71.3" y="1861" width="0.4" height="15.0" fill="rgb(213,194,54)" rx="2" ry="2" />
<text  x="74.34" y="1871.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1002.4" y="1733" width="0.2" height="15.0" fill="rgb(220,116,28)" rx="2" ry="2" />
<text  x="1005.40" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="330.2" y="1829" width="0.2" height="15.0" fill="rgb(218,196,52)" rx="2" ry="2" />
<text  x="333.21" y="1839.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="35.8" y="1973" width="0.2" height="15.0" fill="rgb(207,181,19)" rx="2" ry="2" />
<text  x="38.81" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1018.3" y="1957" width="0.2" height="15.0" fill="rgb(222,40,37)" rx="2" ry="2" />
<text  x="1021.28" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="168.0" y="1813" width="0.2" height="15.0" fill="rgb(217,229,23)" rx="2" ry="2" />
<text  x="171.02" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="984.3" y="1941" width="0.8" height="15.0" fill="rgb(208,186,41)" rx="2" ry="2" />
<text  x="987.33" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="831.7" y="1685" width="0.2" height="15.0" fill="rgb(213,62,24)" rx="2" ry="2" />
<text  x="834.67" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="662.3" y="1733" width="0.2" height="15.0" fill="rgb(219,224,26)" rx="2" ry="2" />
<text  x="665.34" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="687.9" y="1845" width="0.2" height="15.0" fill="rgb(249,162,32)" rx="2" ry="2" />
<text  x="690.94" y="1855.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="706.0" y="1669" width="0.2" height="15.0" fill="rgb(249,23,17)" rx="2" ry="2" />
<text  x="709.01" y="1679.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="856.7" y="1509" width="0.2" height="15.0" fill="rgb(243,209,26)" rx="2" ry="2" />
<text  x="859.69" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1106.6" y="1813" width="0.2" height="15.0" fill="rgb(216,16,3)" rx="2" ry="2" />
<text  x="1109.62" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="775.3" y="1365" width="0.6" height="15.0" fill="rgb(216,24,14)" rx="2" ry="2" />
<text  x="778.29" y="1375.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (248 samples, 4.17%)</title><rect x="530.9" y="2021" width="49.2" height="15.0" fill="rgb(243,144,45)" rx="2" ry="2" />
<text  x="533.92" y="2031.5" >foll..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="884.9" y="1717" width="0.2" height="15.0" fill="rgb(205,219,2)" rx="2" ry="2" />
<text  x="887.88" y="1727.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="136.9" y="117" width="0.2" height="15.0" fill="rgb(237,192,17)" rx="2" ry="2" />
<text  x="139.85" y="127.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (3 samples, 0.05%)</title><rect x="976.0" y="2005" width="0.6" height="15.0" fill="rgb(208,70,32)" rx="2" ry="2" />
<text  x="979.00" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="651.8" y="1877" width="0.2" height="15.0" fill="rgb(246,173,46)" rx="2" ry="2" />
<text  x="654.81" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="241.7" y="1573" width="0.2" height="15.0" fill="rgb(252,52,25)" rx="2" ry="2" />
<text  x="244.67" y="1583.5" ></text>
</g>
<g >
<title>ip_local_out (42 samples, 0.71%)</title><rect x="1107.0" y="1845" width="8.4" height="15.0" fill="rgb(226,118,6)" rx="2" ry="2" />
<text  x="1110.02" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="761.0" y="1541" width="0.2" height="15.0" fill="rgb(224,163,25)" rx="2" ry="2" />
<text  x="764.00" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="700.6" y="1717" width="0.2" height="15.0" fill="rgb(217,185,48)" rx="2" ry="2" />
<text  x="703.65" y="1727.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="624.2" y="2005" width="0.2" height="15.0" fill="rgb(220,16,53)" rx="2" ry="2" />
<text  x="627.22" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="581.1" y="1973" width="0.2" height="15.0" fill="rgb(226,57,36)" rx="2" ry="2" />
<text  x="584.14" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="88.8" y="1909" width="0.2" height="15.0" fill="rgb(242,97,44)" rx="2" ry="2" />
<text  x="91.81" y="1919.5" ></text>
</g>
<g >
<title>calloc@plt (4 samples, 0.07%)</title><rect x="208.5" y="2021" width="0.8" height="15.0" fill="rgb(246,198,31)" rx="2" ry="2" />
<text  x="211.52" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1110.6" y="1445" width="0.2" height="15.0" fill="rgb(240,36,1)" rx="2" ry="2" />
<text  x="1113.59" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1086.8" y="1829" width="0.2" height="15.0" fill="rgb(209,88,35)" rx="2" ry="2" />
<text  x="1089.77" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="343.3" y="2021" width="0.8" height="15.0" fill="rgb(227,58,26)" rx="2" ry="2" />
<text  x="346.31" y="2031.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="489.2" y="1957" width="0.4" height="15.0" fill="rgb(237,90,9)" rx="2" ry="2" />
<text  x="492.23" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="289.3" y="1541" width="0.2" height="15.0" fill="rgb(229,39,41)" rx="2" ry="2" />
<text  x="292.32" y="1551.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="710.6" y="1893" width="0.6" height="15.0" fill="rgb(206,138,6)" rx="2" ry="2" />
<text  x="713.58" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="701.0" y="1973" width="0.4" height="15.0" fill="rgb(206,54,29)" rx="2" ry="2" />
<text  x="704.05" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="88.2" y="1845" width="0.2" height="15.0" fill="rgb(218,174,42)" rx="2" ry="2" />
<text  x="91.22" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="492.4" y="1941" width="0.2" height="15.0" fill="rgb(207,1,6)" rx="2" ry="2" />
<text  x="495.40" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1109.0" y="1477" width="0.4" height="15.0" fill="rgb(215,130,31)" rx="2" ry="2" />
<text  x="1112.00" y="1487.5" ></text>
</g>
<g >
<title>__clock_gettime (24 samples, 0.40%)</title><rect x="219.0" y="2037" width="4.8" height="15.0" fill="rgb(225,126,22)" rx="2" ry="2" />
<text  x="222.04" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="527.9" y="1989" width="0.2" height="15.0" fill="rgb(253,28,39)" rx="2" ry="2" />
<text  x="530.94" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="144.0" y="1925" width="0.2" height="15.0" fill="rgb(245,44,4)" rx="2" ry="2" />
<text  x="147.00" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="725.9" y="1653" width="0.2" height="15.0" fill="rgb(219,11,38)" rx="2" ry="2" />
<text  x="728.86" y="1663.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="571.4" y="2005" width="0.2" height="15.0" fill="rgb(228,213,23)" rx="2" ry="2" />
<text  x="574.41" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1152.1" y="1973" width="0.2" height="15.0" fill="rgb(212,71,9)" rx="2" ry="2" />
<text  x="1155.08" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="912.9" y="2021" width="2.5" height="15.0" fill="rgb(250,131,0)" rx="2" ry="2" />
<text  x="915.87" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (3 samples, 0.05%)</title><rect x="165.0" y="1909" width="0.6" height="15.0" fill="rgb(218,111,16)" rx="2" ry="2" />
<text  x="168.04" y="1919.5" ></text>
</g>
<g >
<title>dentry_free (11 samples, 0.19%)</title><rect x="727.6" y="1749" width="2.2" height="15.0" fill="rgb(206,221,41)" rx="2" ry="2" />
<text  x="730.65" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="903.5" y="1845" width="0.2" height="15.0" fill="rgb(230,35,20)" rx="2" ry="2" />
<text  x="906.54" y="1855.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="378.5" y="1877" width="0.2" height="15.0" fill="rgb(216,48,29)" rx="2" ry="2" />
<text  x="381.45" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="136.7" y="101" width="0.2" height="15.0" fill="rgb(239,191,26)" rx="2" ry="2" />
<text  x="139.66" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (4 samples, 0.07%)</title><rect x="37.2" y="1973" width="0.8" height="15.0" fill="rgb(240,26,7)" rx="2" ry="2" />
<text  x="40.20" y="1983.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(211,167,17)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14 samples, 0.24%)</title><rect x="300.2" y="1733" width="2.8" height="15.0" fill="rgb(214,9,3)" rx="2" ry="2" />
<text  x="303.24" y="1743.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (7 samples, 0.12%)</title><rect x="535.7" y="1973" width="1.4" height="15.0" fill="rgb(228,149,49)" rx="2" ry="2" />
<text  x="538.68" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="755.4" y="1477" width="0.2" height="15.0" fill="rgb(231,99,4)" rx="2" ry="2" />
<text  x="758.44" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="163.1" y="1861" width="0.2" height="15.0" fill="rgb(222,208,38)" rx="2" ry="2" />
<text  x="166.06" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="39.8" y="1797" width="0.2" height="15.0" fill="rgb(224,66,1)" rx="2" ry="2" />
<text  x="42.78" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="666.5" y="1925" width="2.0" height="15.0" fill="rgb(226,219,30)" rx="2" ry="2" />
<text  x="669.50" y="1935.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="491.2" y="1973" width="0.6" height="15.0" fill="rgb(222,121,5)" rx="2" ry="2" />
<text  x="494.21" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="178.9" y="1893" width="0.2" height="15.0" fill="rgb(212,20,31)" rx="2" ry="2" />
<text  x="181.94" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="95.6" y="1877" width="0.2" height="15.0" fill="rgb(206,47,36)" rx="2" ry="2" />
<text  x="98.56" y="1887.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="323.3" y="1813" width="0.4" height="15.0" fill="rgb(210,123,33)" rx="2" ry="2" />
<text  x="326.26" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="493.2" y="1909" width="0.2" height="15.0" fill="rgb(209,78,53)" rx="2" ry="2" />
<text  x="496.20" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="654.4" y="1685" width="0.2" height="15.0" fill="rgb(228,187,4)" rx="2" ry="2" />
<text  x="657.39" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="913.1" y="1989" width="0.4" height="15.0" fill="rgb(228,7,21)" rx="2" ry="2" />
<text  x="916.07" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="510.3" y="1989" width="0.2" height="15.0" fill="rgb(251,29,44)" rx="2" ry="2" />
<text  x="513.27" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="161.3" y="1909" width="0.2" height="15.0" fill="rgb(227,144,15)" rx="2" ry="2" />
<text  x="164.27" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="694.1" y="1669" width="0.2" height="15.0" fill="rgb(227,140,43)" rx="2" ry="2" />
<text  x="697.10" y="1679.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(238,161,28)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1163.8" y="1957" width="0.2" height="15.0" fill="rgb(253,133,18)" rx="2" ry="2" />
<text  x="1166.80" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="856.7" y="1941" width="0.2" height="15.0" fill="rgb(242,192,38)" rx="2" ry="2" />
<text  x="859.69" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="136.1" y="229" width="0.2" height="15.0" fill="rgb(244,111,38)" rx="2" ry="2" />
<text  x="139.06" y="239.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="613.1" y="1685" width="0.2" height="15.0" fill="rgb(220,94,0)" rx="2" ry="2" />
<text  x="616.10" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="129.9" y="37" width="0.2" height="15.0" fill="rgb(226,219,44)" rx="2" ry="2" />
<text  x="132.91" y="47.5" ></text>
</g>
<g >
<title>sock_gen_put (1 samples, 0.02%)</title><rect x="842.2" y="1717" width="0.2" height="15.0" fill="rgb(221,78,30)" rx="2" ry="2" />
<text  x="845.19" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1078.6" y="1653" width="0.2" height="15.0" fill="rgb(236,1,9)" rx="2" ry="2" />
<text  x="1081.63" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="857.3" y="1701" width="0.2" height="15.0" fill="rgb(223,159,35)" rx="2" ry="2" />
<text  x="860.28" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="443.4" y="1957" width="0.4" height="15.0" fill="rgb(214,10,43)" rx="2" ry="2" />
<text  x="446.37" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="630.4" y="1893" width="0.2" height="15.0" fill="rgb(212,35,15)" rx="2" ry="2" />
<text  x="633.37" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="213.7" y="1893" width="0.2" height="15.0" fill="rgb(210,72,28)" rx="2" ry="2" />
<text  x="216.68" y="1903.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="294.3" y="1509" width="0.2" height="15.0" fill="rgb(230,27,38)" rx="2" ry="2" />
<text  x="297.28" y="1519.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="534.1" y="1845" width="0.2" height="15.0" fill="rgb(216,192,37)" rx="2" ry="2" />
<text  x="537.09" y="1855.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="100.3" y="1957" width="0.6" height="15.0" fill="rgb(253,126,40)" rx="2" ry="2" />
<text  x="103.33" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (2 samples, 0.03%)</title><rect x="1007.2" y="1973" width="0.4" height="15.0" fill="rgb(205,159,41)" rx="2" ry="2" />
<text  x="1010.16" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1090.3" y="1765" width="0.2" height="15.0" fill="rgb(209,55,44)" rx="2" ry="2" />
<text  x="1093.34" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="997.8" y="1989" width="0.6" height="15.0" fill="rgb(205,222,7)" rx="2" ry="2" />
<text  x="1000.83" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="969.8" y="1941" width="0.2" height="15.0" fill="rgb(238,161,40)" rx="2" ry="2" />
<text  x="972.84" y="1951.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.02%)</title><rect x="1034.2" y="1909" width="0.2" height="15.0" fill="rgb(216,180,52)" rx="2" ry="2" />
<text  x="1037.16" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1086.8" y="1781" width="0.2" height="15.0" fill="rgb(222,224,22)" rx="2" ry="2" />
<text  x="1089.77" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (17 samples, 0.29%)</title><rect x="1148.5" y="2053" width="3.4" height="15.0" fill="rgb(232,27,40)" rx="2" ry="2" />
<text  x="1151.51" y="2063.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="329.4" y="1445" width="0.2" height="15.0" fill="rgb(218,87,53)" rx="2" ry="2" />
<text  x="332.42" y="1455.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1152.1" y="1909" width="0.2" height="15.0" fill="rgb(216,65,30)" rx="2" ry="2" />
<text  x="1155.08" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1079.0" y="1669" width="0.2" height="15.0" fill="rgb(244,109,25)" rx="2" ry="2" />
<text  x="1082.03" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1072.1" y="1669" width="0.2" height="15.0" fill="rgb(242,10,43)" rx="2" ry="2" />
<text  x="1075.08" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="1167.8" y="2053" width="0.4" height="15.0" fill="rgb(207,70,16)" rx="2" ry="2" />
<text  x="1170.77" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="706.0" y="1909" width="0.2" height="15.0" fill="rgb(211,85,15)" rx="2" ry="2" />
<text  x="709.01" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="419.0" y="1925" width="0.1" height="15.0" fill="rgb(244,157,17)" rx="2" ry="2" />
<text  x="421.95" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="510.9" y="1989" width="0.2" height="15.0" fill="rgb(234,123,44)" rx="2" ry="2" />
<text  x="513.86" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="172.4" y="1893" width="0.6" height="15.0" fill="rgb(247,80,12)" rx="2" ry="2" />
<text  x="175.39" y="1903.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (5 samples, 0.08%)</title><rect x="1162.8" y="1909" width="1.0" height="15.0" fill="rgb(215,127,30)" rx="2" ry="2" />
<text  x="1165.80" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="844.4" y="1749" width="0.2" height="15.0" fill="rgb(216,186,36)" rx="2" ry="2" />
<text  x="847.38" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="491.8" y="1605" width="0.2" height="15.0" fill="rgb(239,227,18)" rx="2" ry="2" />
<text  x="494.81" y="1615.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="1146.7" y="2005" width="0.2" height="15.0" fill="rgb(251,209,31)" rx="2" ry="2" />
<text  x="1149.72" y="2015.5" ></text>
</g>
<g >
<title>clear_inode (4 samples, 0.07%)</title><rect x="733.2" y="1701" width="0.8" height="15.0" fill="rgb(212,224,8)" rx="2" ry="2" />
<text  x="736.21" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (21 samples, 0.35%)</title><rect x="388.2" y="1925" width="4.1" height="15.0" fill="rgb(244,163,4)" rx="2" ry="2" />
<text  x="391.18" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="725.9" y="1669" width="0.2" height="15.0" fill="rgb(254,190,53)" rx="2" ry="2" />
<text  x="728.86" y="1679.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="522.2" y="1973" width="0.4" height="15.0" fill="rgb(254,112,30)" rx="2" ry="2" />
<text  x="525.18" y="1983.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (13 samples, 0.22%)</title><rect x="300.4" y="1717" width="2.6" height="15.0" fill="rgb(248,107,20)" rx="2" ry="2" />
<text  x="303.43" y="1727.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="868.6" y="2005" width="0.6" height="15.0" fill="rgb(234,75,33)" rx="2" ry="2" />
<text  x="871.60" y="2015.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1118.7" y="1925" width="0.2" height="15.0" fill="rgb(211,93,35)" rx="2" ry="2" />
<text  x="1121.73" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="283.4" y="1749" width="0.2" height="15.0" fill="rgb(205,69,16)" rx="2" ry="2" />
<text  x="286.36" y="1759.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="753.5" y="1685" width="0.2" height="15.0" fill="rgb(211,160,13)" rx="2" ry="2" />
<text  x="756.46" y="1695.5" ></text>
</g>
<g >
<title>rb_first (2 samples, 0.03%)</title><rect x="1113.8" y="1509" width="0.4" height="15.0" fill="rgb(228,19,40)" rx="2" ry="2" />
<text  x="1116.77" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="940.5" y="1717" width="0.2" height="15.0" fill="rgb(210,221,4)" rx="2" ry="2" />
<text  x="943.46" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1175.9" y="1957" width="0.2" height="15.0" fill="rgb(247,73,28)" rx="2" ry="2" />
<text  x="1178.91" y="1967.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="646.5" y="1669" width="0.2" height="15.0" fill="rgb(225,178,6)" rx="2" ry="2" />
<text  x="649.45" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1127.5" y="1829" width="0.4" height="15.0" fill="rgb(221,222,14)" rx="2" ry="2" />
<text  x="1130.47" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="61.6" y="1877" width="0.2" height="15.0" fill="rgb(228,153,35)" rx="2" ry="2" />
<text  x="64.62" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="613.1" y="1893" width="0.2" height="15.0" fill="rgb(207,25,51)" rx="2" ry="2" />
<text  x="616.10" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1002.4" y="1685" width="0.2" height="15.0" fill="rgb(215,44,31)" rx="2" ry="2" />
<text  x="1005.40" y="1695.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (3 samples, 0.05%)</title><rect x="968.3" y="2021" width="0.5" height="15.0" fill="rgb(215,118,34)" rx="2" ry="2" />
<text  x="971.25" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1079.0" y="1701" width="0.2" height="15.0" fill="rgb(226,42,47)" rx="2" ry="2" />
<text  x="1082.03" y="1711.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="866.8" y="1957" width="0.2" height="15.0" fill="rgb(215,88,15)" rx="2" ry="2" />
<text  x="869.81" y="1967.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="945.4" y="1877" width="0.2" height="15.0" fill="rgb(229,138,8)" rx="2" ry="2" />
<text  x="948.42" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (7 samples, 0.12%)</title><rect x="52.3" y="1925" width="1.4" height="15.0" fill="rgb(224,26,1)" rx="2" ry="2" />
<text  x="55.28" y="1935.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="832.1" y="1685" width="0.2" height="15.0" fill="rgb(222,0,48)" rx="2" ry="2" />
<text  x="835.07" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (9 samples, 0.15%)</title><rect x="933.5" y="1893" width="1.8" height="15.0" fill="rgb(224,65,25)" rx="2" ry="2" />
<text  x="936.51" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="645.3" y="1973" width="1.4" height="15.0" fill="rgb(223,78,14)" rx="2" ry="2" />
<text  x="648.26" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="800.7" y="1621" width="0.2" height="15.0" fill="rgb(211,104,32)" rx="2" ry="2" />
<text  x="803.70" y="1631.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (25 samples, 0.42%)</title><rect x="324.9" y="1797" width="4.9" height="15.0" fill="rgb(216,123,48)" rx="2" ry="2" />
<text  x="327.85" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="901.6" y="1973" width="0.3" height="15.0" fill="rgb(250,76,28)" rx="2" ry="2" />
<text  x="904.55" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="351.1" y="2021" width="0.2" height="15.0" fill="rgb(226,201,21)" rx="2" ry="2" />
<text  x="354.06" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="761.0" y="1381" width="0.2" height="15.0" fill="rgb(227,187,26)" rx="2" ry="2" />
<text  x="764.00" y="1391.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="706.0" y="1749" width="0.2" height="15.0" fill="rgb(232,35,52)" rx="2" ry="2" />
<text  x="709.01" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="982.2" y="1733" width="0.1" height="15.0" fill="rgb(242,114,33)" rx="2" ry="2" />
<text  x="985.15" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="803.1" y="1541" width="0.2" height="15.0" fill="rgb(247,150,3)" rx="2" ry="2" />
<text  x="806.09" y="1551.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1068.1" y="1829" width="0.2" height="15.0" fill="rgb(212,118,43)" rx="2" ry="2" />
<text  x="1071.11" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1749" width="0.2" height="15.0" fill="rgb(249,55,48)" rx="2" ry="2" />
<text  x="267.70" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="133.9" y="85" width="0.2" height="15.0" fill="rgb(214,24,43)" rx="2" ry="2" />
<text  x="136.88" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (4 samples, 0.07%)</title><rect x="189.7" y="1973" width="0.8" height="15.0" fill="rgb(213,169,34)" rx="2" ry="2" />
<text  x="192.66" y="1983.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.02%)</title><rect x="870.0" y="1877" width="0.2" height="15.0" fill="rgb(214,42,38)" rx="2" ry="2" />
<text  x="872.99" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1048.9" y="1685" width="0.2" height="15.0" fill="rgb(225,174,7)" rx="2" ry="2" />
<text  x="1051.85" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="838.4" y="1669" width="0.2" height="15.0" fill="rgb(249,156,36)" rx="2" ry="2" />
<text  x="841.42" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="167.0" y="1749" width="0.2" height="15.0" fill="rgb(227,206,5)" rx="2" ry="2" />
<text  x="170.03" y="1759.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1107.8" y="1557" width="0.2" height="15.0" fill="rgb(225,10,19)" rx="2" ry="2" />
<text  x="1110.81" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1002.4" y="1765" width="0.2" height="15.0" fill="rgb(224,178,31)" rx="2" ry="2" />
<text  x="1005.40" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1054.0" y="1877" width="0.2" height="15.0" fill="rgb(223,204,35)" rx="2" ry="2" />
<text  x="1057.01" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="178.9" y="1717" width="0.2" height="15.0" fill="rgb(246,219,14)" rx="2" ry="2" />
<text  x="181.94" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="660.7" y="2037" width="0.6" height="15.0" fill="rgb(243,50,41)" rx="2" ry="2" />
<text  x="663.75" y="2047.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="739.8" y="1317" width="0.2" height="15.0" fill="rgb(231,144,52)" rx="2" ry="2" />
<text  x="742.76" y="1327.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1034.2" y="2021" width="0.6" height="15.0" fill="rgb(214,190,41)" rx="2" ry="2" />
<text  x="1037.16" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="143.8" y="1909" width="0.2" height="15.0" fill="rgb(225,114,18)" rx="2" ry="2" />
<text  x="146.80" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (446 samples, 7.50%)</title><rect x="254.8" y="2021" width="88.5" height="15.0" fill="rgb(223,175,26)" rx="2" ry="2" />
<text  x="257.77" y="2031.5" >entry_SYSC..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="742.7" y="1717" width="0.2" height="15.0" fill="rgb(225,0,54)" rx="2" ry="2" />
<text  x="745.74" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="533.1" y="1957" width="1.0" height="15.0" fill="rgb(240,122,3)" rx="2" ry="2" />
<text  x="536.10" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="968.1" y="2005" width="0.2" height="15.0" fill="rgb(241,3,20)" rx="2" ry="2" />
<text  x="971.06" y="2015.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="825.1" y="1493" width="0.2" height="15.0" fill="rgb(212,192,35)" rx="2" ry="2" />
<text  x="828.12" y="1503.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="161.3" y="1893" width="0.2" height="15.0" fill="rgb(242,199,54)" rx="2" ry="2" />
<text  x="164.27" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1183.1" y="1957" width="0.3" height="15.0" fill="rgb(247,136,33)" rx="2" ry="2" />
<text  x="1186.05" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="983.1" y="1957" width="0.2" height="15.0" fill="rgb(241,157,40)" rx="2" ry="2" />
<text  x="986.14" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="207.3" y="1877" width="0.2" height="15.0" fill="rgb(237,165,7)" rx="2" ry="2" />
<text  x="210.33" y="1887.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="316.3" y="1781" width="0.2" height="15.0" fill="rgb(254,49,19)" rx="2" ry="2" />
<text  x="319.32" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (2 samples, 0.03%)</title><rect x="237.3" y="1893" width="0.4" height="15.0" fill="rgb(218,23,11)" rx="2" ry="2" />
<text  x="240.30" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="329.4" y="1605" width="0.2" height="15.0" fill="rgb(209,15,43)" rx="2" ry="2" />
<text  x="332.42" y="1615.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.07%)</title><rect x="740.6" y="1701" width="0.7" height="15.0" fill="rgb(252,175,17)" rx="2" ry="2" />
<text  x="743.55" y="1711.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="115.6" y="1941" width="0.2" height="15.0" fill="rgb(254,167,49)" rx="2" ry="2" />
<text  x="118.61" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1183.1" y="1813" width="0.2" height="15.0" fill="rgb(217,194,4)" rx="2" ry="2" />
<text  x="1186.05" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="170.6" y="1909" width="0.2" height="15.0" fill="rgb(230,20,50)" rx="2" ry="2" />
<text  x="173.60" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="136.3" y="341" width="0.2" height="15.0" fill="rgb(214,72,38)" rx="2" ry="2" />
<text  x="139.26" y="351.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="120.4" y="37" width="0.4" height="15.0" fill="rgb(246,101,26)" rx="2" ry="2" />
<text  x="123.38" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="491.8" y="1957" width="0.2" height="15.0" fill="rgb(236,201,20)" rx="2" ry="2" />
<text  x="494.81" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="643.9" y="1973" width="1.2" height="15.0" fill="rgb(237,183,46)" rx="2" ry="2" />
<text  x="646.87" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="61.0" y="1477" width="0.2" height="15.0" fill="rgb(249,168,46)" rx="2" ry="2" />
<text  x="64.02" y="1487.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1016.5" y="1973" width="0.2" height="15.0" fill="rgb(234,167,30)" rx="2" ry="2" />
<text  x="1019.49" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="196.4" y="1829" width="0.2" height="15.0" fill="rgb(207,98,10)" rx="2" ry="2" />
<text  x="199.41" y="1839.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="134.5" y="37" width="0.2" height="15.0" fill="rgb(227,27,36)" rx="2" ry="2" />
<text  x="137.47" y="47.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="91.6" y="1941" width="0.2" height="15.0" fill="rgb(209,136,48)" rx="2" ry="2" />
<text  x="94.59" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.92%)</title><rect x="118.2" y="1685" width="22.6" height="15.0" fill="rgb(240,148,13)" rx="2" ry="2" />
<text  x="121.19" y="1695.5" >[..</text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.02%)</title><rect x="726.5" y="1797" width="0.2" height="15.0" fill="rgb(216,166,9)" rx="2" ry="2" />
<text  x="729.46" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="654.4" y="1637" width="0.2" height="15.0" fill="rgb(226,75,43)" rx="2" ry="2" />
<text  x="657.39" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="562.1" y="1397" width="0.2" height="15.0" fill="rgb(253,84,11)" rx="2" ry="2" />
<text  x="565.08" y="1407.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="205.5" y="2021" width="0.2" height="15.0" fill="rgb(205,147,15)" rx="2" ry="2" />
<text  x="208.54" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (13 samples, 0.22%)</title><rect x="51.5" y="1957" width="2.6" height="15.0" fill="rgb(214,169,23)" rx="2" ry="2" />
<text  x="54.49" y="1967.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1957" width="0.2" height="15.0" fill="rgb(242,158,40)" rx="2" ry="2" />
<text  x="570.24" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="527.3" y="1957" width="0.2" height="15.0" fill="rgb(253,152,34)" rx="2" ry="2" />
<text  x="530.34" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1154.3" y="1941" width="0.2" height="15.0" fill="rgb(234,5,0)" rx="2" ry="2" />
<text  x="1157.27" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="936.5" y="1589" width="0.2" height="15.0" fill="rgb(226,60,27)" rx="2" ry="2" />
<text  x="939.49" y="1599.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="706.0" y="1557" width="0.2" height="15.0" fill="rgb(253,142,10)" rx="2" ry="2" />
<text  x="709.01" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="825.3" y="1861" width="0.8" height="15.0" fill="rgb(220,58,35)" rx="2" ry="2" />
<text  x="828.32" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="630.4" y="1989" width="0.2" height="15.0" fill="rgb(247,67,38)" rx="2" ry="2" />
<text  x="633.37" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="917.4" y="1941" width="0.4" height="15.0" fill="rgb(229,94,16)" rx="2" ry="2" />
<text  x="920.43" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="800.7" y="1653" width="0.2" height="15.0" fill="rgb(232,229,22)" rx="2" ry="2" />
<text  x="803.70" y="1663.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.05%)</title><rect x="489.8" y="1973" width="0.6" height="15.0" fill="rgb(232,191,28)" rx="2" ry="2" />
<text  x="492.82" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1090.3" y="1781" width="0.2" height="15.0" fill="rgb(253,184,46)" rx="2" ry="2" />
<text  x="1093.34" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1179.9" y="1989" width="0.2" height="15.0" fill="rgb(220,85,47)" rx="2" ry="2" />
<text  x="1182.88" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="988.5" y="1877" width="0.4" height="15.0" fill="rgb(233,44,38)" rx="2" ry="2" />
<text  x="991.50" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (817 samples, 13.74%)</title><rect x="706.4" y="2005" width="162.2" height="15.0" fill="rgb(208,164,42)" rx="2" ry="2" />
<text  x="709.41" y="2015.5" >[unknown]</text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="762.8" y="1397" width="0.2" height="15.0" fill="rgb(252,68,13)" rx="2" ry="2" />
<text  x="765.79" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="800.7" y="1685" width="0.2" height="15.0" fill="rgb(221,115,35)" rx="2" ry="2" />
<text  x="803.70" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="104.7" y="1957" width="0.4" height="15.0" fill="rgb(247,159,3)" rx="2" ry="2" />
<text  x="107.69" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="284.2" y="1829" width="0.2" height="15.0" fill="rgb(245,177,38)" rx="2" ry="2" />
<text  x="287.16" y="1839.5" ></text>
</g>
<g >
<title>ep_poll (59 samples, 0.99%)</title><rect x="498.6" y="1973" width="11.7" height="15.0" fill="rgb(247,85,29)" rx="2" ry="2" />
<text  x="501.56" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1005.6" y="1829" width="0.2" height="15.0" fill="rgb(213,182,17)" rx="2" ry="2" />
<text  x="1008.58" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (445 samples, 7.49%)</title><rect x="117.4" y="2037" width="88.3" height="15.0" fill="rgb(231,216,17)" rx="2" ry="2" />
<text  x="120.40" y="2047.5" >[unknown]</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="913.9" y="1797" width="0.2" height="15.0" fill="rgb(212,28,32)" rx="2" ry="2" />
<text  x="916.86" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (28 samples, 0.47%)</title><rect x="635.9" y="1957" width="5.6" height="15.0" fill="rgb(213,3,39)" rx="2" ry="2" />
<text  x="638.93" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="775.3" y="1301" width="0.2" height="15.0" fill="rgb(228,3,30)" rx="2" ry="2" />
<text  x="778.29" y="1311.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="692.5" y="1877" width="0.4" height="15.0" fill="rgb(238,69,44)" rx="2" ry="2" />
<text  x="695.51" y="1887.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="662.1" y="1861" width="0.2" height="15.0" fill="rgb(222,10,36)" rx="2" ry="2" />
<text  x="665.14" y="1871.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="94.8" y="1797" width="0.2" height="15.0" fill="rgb(243,182,47)" rx="2" ry="2" />
<text  x="97.77" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="483.1" y="1781" width="0.4" height="15.0" fill="rgb(221,130,12)" rx="2" ry="2" />
<text  x="486.07" y="1791.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="836.6" y="1909" width="0.2" height="15.0" fill="rgb(214,110,53)" rx="2" ry="2" />
<text  x="839.64" y="1919.5" ></text>
</g>
<g >
<title>__mix_pool_bytes (1 samples, 0.02%)</title><rect x="638.7" y="1781" width="0.2" height="15.0" fill="rgb(240,211,47)" rx="2" ry="2" />
<text  x="641.71" y="1791.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="136.9" y="69" width="0.2" height="15.0" fill="rgb(209,66,43)" rx="2" ry="2" />
<text  x="139.85" y="79.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="992.3" y="1957" width="0.2" height="15.0" fill="rgb(214,46,50)" rx="2" ry="2" />
<text  x="995.27" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="61.0" y="1509" width="0.2" height="15.0" fill="rgb(213,199,18)" rx="2" ry="2" />
<text  x="64.02" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="11.2" y="2037" width="0.8" height="15.0" fill="rgb(211,42,14)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="408.2" y="1701" width="0.2" height="15.0" fill="rgb(240,24,35)" rx="2" ry="2" />
<text  x="411.23" y="1711.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="12.6" y="1925" width="1.0" height="15.0" fill="rgb(250,163,5)" rx="2" ry="2" />
<text  x="15.58" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="541.6" y="1941" width="0.2" height="15.0" fill="rgb(223,213,6)" rx="2" ry="2" />
<text  x="544.64" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (14 samples, 0.24%)</title><rect x="534.5" y="1989" width="2.8" height="15.0" fill="rgb(242,181,49)" rx="2" ry="2" />
<text  x="537.49" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="654.4" y="1925" width="0.2" height="15.0" fill="rgb(232,105,38)" rx="2" ry="2" />
<text  x="657.39" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="562.3" y="1797" width="0.2" height="15.0" fill="rgb(219,96,37)" rx="2" ry="2" />
<text  x="565.28" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="932.1" y="1861" width="0.2" height="15.0" fill="rgb(209,178,10)" rx="2" ry="2" />
<text  x="935.12" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="136.9" y="389" width="0.2" height="15.0" fill="rgb(237,178,54)" rx="2" ry="2" />
<text  x="139.85" y="399.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="936.5" y="1685" width="0.2" height="15.0" fill="rgb(215,206,52)" rx="2" ry="2" />
<text  x="939.49" y="1695.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (5 samples, 0.08%)</title><rect x="970.4" y="2037" width="1.0" height="15.0" fill="rgb(205,69,49)" rx="2" ry="2" />
<text  x="973.44" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="1150.3" y="1925" width="0.2" height="15.0" fill="rgb(249,15,0)" rx="2" ry="2" />
<text  x="1153.30" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="694.1" y="1461" width="0.2" height="15.0" fill="rgb(232,31,2)" rx="2" ry="2" />
<text  x="697.10" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="600.8" y="1797" width="0.2" height="15.0" fill="rgb(224,92,15)" rx="2" ry="2" />
<text  x="603.79" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="491.0" y="1717" width="0.2" height="15.0" fill="rgb(235,113,37)" rx="2" ry="2" />
<text  x="494.01" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="240.5" y="1861" width="1.8" height="15.0" fill="rgb(242,58,11)" rx="2" ry="2" />
<text  x="243.48" y="1871.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="493.2" y="1829" width="0.2" height="15.0" fill="rgb(236,212,9)" rx="2" ry="2" />
<text  x="496.20" y="1839.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (70 samples, 1.18%)</title><rect x="1101.7" y="1925" width="13.9" height="15.0" fill="rgb(241,13,17)" rx="2" ry="2" />
<text  x="1104.66" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="491.8" y="1733" width="0.2" height="15.0" fill="rgb(231,140,22)" rx="2" ry="2" />
<text  x="494.81" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="486.8" y="1477" width="0.2" height="15.0" fill="rgb(235,186,47)" rx="2" ry="2" />
<text  x="489.84" y="1487.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="71.3" y="1877" width="0.4" height="15.0" fill="rgb(207,101,3)" rx="2" ry="2" />
<text  x="74.34" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="825.7" y="1557" width="0.2" height="15.0" fill="rgb(241,72,8)" rx="2" ry="2" />
<text  x="828.72" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.9" y="1861" width="0.2" height="15.0" fill="rgb(225,116,27)" rx="2" ry="2" />
<text  x="887.88" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="800.7" y="1589" width="0.2" height="15.0" fill="rgb(216,94,16)" rx="2" ry="2" />
<text  x="803.70" y="1599.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="825.1" y="1509" width="0.2" height="15.0" fill="rgb(218,15,27)" rx="2" ry="2" />
<text  x="828.12" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="493.0" y="1973" width="0.4" height="15.0" fill="rgb(238,125,2)" rx="2" ry="2" />
<text  x="496.00" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (440 samples, 7.40%)</title><rect x="21.9" y="2037" width="87.4" height="15.0" fill="rgb(254,29,17)" rx="2" ry="2" />
<text  x="24.91" y="2047.5" >folly::Eve..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="491.8" y="1893" width="0.2" height="15.0" fill="rgb(215,74,9)" rx="2" ry="2" />
<text  x="494.81" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="687.9" y="1717" width="0.2" height="15.0" fill="rgb(211,215,11)" rx="2" ry="2" />
<text  x="690.94" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="761.0" y="1637" width="0.2" height="15.0" fill="rgb(208,227,31)" rx="2" ry="2" />
<text  x="764.00" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="800.7" y="1317" width="0.2" height="15.0" fill="rgb(241,2,53)" rx="2" ry="2" />
<text  x="803.70" y="1327.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="1048.5" y="1877" width="0.2" height="15.0" fill="rgb(235,162,34)" rx="2" ry="2" />
<text  x="1051.46" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (12 samples, 0.20%)</title><rect x="380.6" y="1909" width="2.4" height="15.0" fill="rgb(232,41,34)" rx="2" ry="2" />
<text  x="383.64" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="727.8" y="1733" width="0.2" height="15.0" fill="rgb(251,74,11)" rx="2" ry="2" />
<text  x="730.85" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="136.9" y="421" width="0.2" height="15.0" fill="rgb(224,171,6)" rx="2" ry="2" />
<text  x="139.85" y="431.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="662.3" y="1941" width="0.2" height="15.0" fill="rgb(248,120,9)" rx="2" ry="2" />
<text  x="665.34" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1068.1" y="1877" width="0.2" height="15.0" fill="rgb(223,141,11)" rx="2" ry="2" />
<text  x="1071.11" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="662.3" y="1621" width="0.2" height="15.0" fill="rgb(249,98,32)" rx="2" ry="2" />
<text  x="665.34" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="842.6" y="1781" width="0.2" height="15.0" fill="rgb(241,13,43)" rx="2" ry="2" />
<text  x="845.59" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="39.8" y="1845" width="0.2" height="15.0" fill="rgb(217,128,31)" rx="2" ry="2" />
<text  x="42.78" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1175.7" y="1957" width="0.2" height="15.0" fill="rgb(245,20,4)" rx="2" ry="2" />
<text  x="1178.71" y="1967.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="646.1" y="1829" width="0.2" height="15.0" fill="rgb(212,142,13)" rx="2" ry="2" />
<text  x="649.06" y="1839.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="748.1" y="1749" width="0.2" height="15.0" fill="rgb(205,12,6)" rx="2" ry="2" />
<text  x="751.10" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.05%)</title><rect x="612.7" y="1925" width="0.6" height="15.0" fill="rgb(237,160,43)" rx="2" ry="2" />
<text  x="615.71" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="515.4" y="1973" width="0.2" height="15.0" fill="rgb(230,170,30)" rx="2" ry="2" />
<text  x="518.43" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.8" y="2021" width="0.4" height="15.0" fill="rgb(242,104,0)" rx="2" ry="2" />
<text  x="902.76" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="739.8" y="1525" width="0.2" height="15.0" fill="rgb(238,87,46)" rx="2" ry="2" />
<text  x="742.76" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="418.2" y="1909" width="0.2" height="15.0" fill="rgb(254,48,7)" rx="2" ry="2" />
<text  x="421.16" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1150.5" y="1973" width="0.2" height="15.0" fill="rgb(243,4,40)" rx="2" ry="2" />
<text  x="1153.49" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="912.9" y="2005" width="2.5" height="15.0" fill="rgb(245,190,53)" rx="2" ry="2" />
<text  x="915.87" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (7 samples, 0.12%)</title><rect x="525.8" y="1989" width="1.3" height="15.0" fill="rgb(230,207,8)" rx="2" ry="2" />
<text  x="528.75" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="543.8" y="1493" width="0.2" height="15.0" fill="rgb(207,141,0)" rx="2" ry="2" />
<text  x="546.82" y="1503.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="825.5" y="1413" width="0.2" height="15.0" fill="rgb(247,171,54)" rx="2" ry="2" />
<text  x="828.52" y="1423.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1107.8" y="1573" width="0.2" height="15.0" fill="rgb(247,227,53)" rx="2" ry="2" />
<text  x="1110.81" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1071.9" y="1861" width="0.4" height="15.0" fill="rgb(233,27,17)" rx="2" ry="2" />
<text  x="1074.88" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="887.3" y="1973" width="0.2" height="15.0" fill="rgb(241,74,16)" rx="2" ry="2" />
<text  x="890.26" y="1983.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (3 samples, 0.05%)</title><rect x="1114.4" y="1525" width="0.6" height="15.0" fill="rgb(249,63,20)" rx="2" ry="2" />
<text  x="1117.36" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="135.9" y="101" width="0.2" height="15.0" fill="rgb(227,71,19)" rx="2" ry="2" />
<text  x="138.86" y="111.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="136.7" y="117" width="0.2" height="15.0" fill="rgb(227,179,2)" rx="2" ry="2" />
<text  x="139.66" y="127.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="329.8" y="1733" width="0.2" height="15.0" fill="rgb(210,10,23)" rx="2" ry="2" />
<text  x="332.81" y="1743.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="646.7" y="1989" width="0.7" height="15.0" fill="rgb(208,147,51)" rx="2" ry="2" />
<text  x="649.65" y="1999.5" ></text>
</g>
<g >
<title>SYSC_getsockname (31 samples, 0.52%)</title><rect x="590.7" y="1877" width="6.1" height="15.0" fill="rgb(236,152,51)" rx="2" ry="2" />
<text  x="593.67" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="936.5" y="1829" width="0.2" height="15.0" fill="rgb(226,227,2)" rx="2" ry="2" />
<text  x="939.49" y="1839.5" ></text>
</g>
<g >
<title>epoll_wait (62 samples, 1.04%)</title><rect x="498.4" y="2037" width="12.3" height="15.0" fill="rgb(222,100,12)" rx="2" ry="2" />
<text  x="501.36" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="510.9" y="1925" width="0.2" height="15.0" fill="rgb(239,133,48)" rx="2" ry="2" />
<text  x="513.86" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="662.3" y="1637" width="0.2" height="15.0" fill="rgb(228,103,0)" rx="2" ry="2" />
<text  x="665.34" y="1647.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="135.1" y="117" width="0.8" height="15.0" fill="rgb(253,93,48)" rx="2" ry="2" />
<text  x="138.07" y="127.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="646.5" y="1765" width="0.2" height="15.0" fill="rgb(209,164,38)" rx="2" ry="2" />
<text  x="649.45" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="240.3" y="1781" width="0.2" height="15.0" fill="rgb(217,42,35)" rx="2" ry="2" />
<text  x="243.28" y="1791.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1017.1" y="1733" width="0.2" height="15.0" fill="rgb(232,13,19)" rx="2" ry="2" />
<text  x="1020.09" y="1743.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="627.0" y="1845" width="0.2" height="15.0" fill="rgb(212,171,52)" rx="2" ry="2" />
<text  x="630.00" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="491.0" y="1941" width="0.2" height="15.0" fill="rgb(228,101,30)" rx="2" ry="2" />
<text  x="494.01" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="72.1" y="1797" width="0.2" height="15.0" fill="rgb(223,122,26)" rx="2" ry="2" />
<text  x="75.14" y="1807.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.02%)</title><rect x="416.2" y="1925" width="0.2" height="15.0" fill="rgb(209,60,52)" rx="2" ry="2" />
<text  x="419.17" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="108.5" y="1925" width="0.2" height="15.0" fill="rgb(237,227,5)" rx="2" ry="2" />
<text  x="111.47" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="240.3" y="1845" width="0.2" height="15.0" fill="rgb(251,134,47)" rx="2" ry="2" />
<text  x="243.28" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="899.6" y="1733" width="0.2" height="15.0" fill="rgb(223,63,52)" rx="2" ry="2" />
<text  x="902.57" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="504.9" y="1797" width="0.6" height="15.0" fill="rgb(253,7,31)" rx="2" ry="2" />
<text  x="507.91" y="1807.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="775.7" y="1269" width="0.2" height="15.0" fill="rgb(226,182,18)" rx="2" ry="2" />
<text  x="778.69" y="1279.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="61.6" y="1733" width="0.2" height="15.0" fill="rgb(254,45,40)" rx="2" ry="2" />
<text  x="64.62" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="135.9" y="245" width="0.2" height="15.0" fill="rgb(210,113,0)" rx="2" ry="2" />
<text  x="138.86" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="852.5" y="1797" width="0.2" height="15.0" fill="rgb(229,193,6)" rx="2" ry="2" />
<text  x="855.52" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="856.7" y="1925" width="0.2" height="15.0" fill="rgb(239,49,18)" rx="2" ry="2" />
<text  x="859.69" y="1935.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="137.8" y="1317" width="0.2" height="15.0" fill="rgb(210,3,45)" rx="2" ry="2" />
<text  x="140.85" y="1327.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (7 samples, 0.12%)</title><rect x="532.9" y="2005" width="1.4" height="15.0" fill="rgb(248,103,3)" rx="2" ry="2" />
<text  x="535.90" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="283.0" y="1749" width="0.2" height="15.0" fill="rgb(220,11,9)" rx="2" ry="2" />
<text  x="285.96" y="1759.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="411.0" y="1877" width="0.6" height="15.0" fill="rgb(253,123,43)" rx="2" ry="2" />
<text  x="414.01" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="934.3" y="1877" width="0.2" height="15.0" fill="rgb(206,190,8)" rx="2" ry="2" />
<text  x="937.31" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1177.1" y="2005" width="0.2" height="15.0" fill="rgb(254,80,15)" rx="2" ry="2" />
<text  x="1180.10" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="279.0" y="1861" width="0.2" height="15.0" fill="rgb(219,168,6)" rx="2" ry="2" />
<text  x="281.99" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="170.4" y="1877" width="0.2" height="15.0" fill="rgb(244,168,7)" rx="2" ry="2" />
<text  x="173.40" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="178.9" y="1941" width="0.2" height="15.0" fill="rgb(225,137,18)" rx="2" ry="2" />
<text  x="181.94" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init_header (1 samples, 0.02%)</title><rect x="160.3" y="1925" width="0.2" height="15.0" fill="rgb(243,173,8)" rx="2" ry="2" />
<text  x="163.28" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="937.3" y="1941" width="0.2" height="15.0" fill="rgb(213,127,20)" rx="2" ry="2" />
<text  x="940.28" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="109.3" y="1957" width="0.4" height="15.0" fill="rgb(229,175,45)" rx="2" ry="2" />
<text  x="112.26" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="900.6" y="2005" width="0.4" height="15.0" fill="rgb(254,178,40)" rx="2" ry="2" />
<text  x="903.56" y="2015.5" ></text>
</g>
<g >
<title>__skb_clone (15 samples, 0.25%)</title><rect x="317.9" y="1797" width="3.0" height="15.0" fill="rgb(230,117,42)" rx="2" ry="2" />
<text  x="320.90" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="659.2" y="1781" width="0.2" height="15.0" fill="rgb(210,103,26)" rx="2" ry="2" />
<text  x="662.16" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="616.7" y="2021" width="1.4" height="15.0" fill="rgb(206,37,29)" rx="2" ry="2" />
<text  x="619.68" y="2031.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="802.3" y="1653" width="0.2" height="15.0" fill="rgb(248,125,33)" rx="2" ry="2" />
<text  x="805.29" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="181.1" y="2021" width="0.2" height="15.0" fill="rgb(231,190,2)" rx="2" ry="2" />
<text  x="184.12" y="2031.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="881.5" y="1909" width="0.2" height="15.0" fill="rgb(236,201,46)" rx="2" ry="2" />
<text  x="884.50" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="679.4" y="1845" width="0.2" height="15.0" fill="rgb(219,158,17)" rx="2" ry="2" />
<text  x="682.41" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (4 samples, 0.07%)</title><rect x="191.0" y="1957" width="0.8" height="15.0" fill="rgb(218,102,39)" rx="2" ry="2" />
<text  x="194.05" y="1967.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="269.3" y="1605" width="0.2" height="15.0" fill="rgb(219,2,27)" rx="2" ry="2" />
<text  x="272.27" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="937.3" y="1925" width="0.2" height="15.0" fill="rgb(212,202,4)" rx="2" ry="2" />
<text  x="940.28" y="1935.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="267.1" y="1925" width="0.4" height="15.0" fill="rgb(221,36,46)" rx="2" ry="2" />
<text  x="270.08" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (27 samples, 0.45%)</title><rect x="942.2" y="1989" width="5.4" height="15.0" fill="rgb(247,60,13)" rx="2" ry="2" />
<text  x="945.25" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="100.7" y="1909" width="0.2" height="15.0" fill="rgb(205,163,25)" rx="2" ry="2" />
<text  x="103.72" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1183.1" y="1861" width="0.3" height="15.0" fill="rgb(218,22,9)" rx="2" ry="2" />
<text  x="1186.05" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="520.0" y="1749" width="0.2" height="15.0" fill="rgb(214,184,24)" rx="2" ry="2" />
<text  x="523.00" y="1759.5" ></text>
</g>
<g >
<title>import_single_range (3 samples, 0.05%)</title><rect x="1051.4" y="1973" width="0.6" height="15.0" fill="rgb(208,62,4)" rx="2" ry="2" />
<text  x="1054.43" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="667.3" y="1893" width="0.2" height="15.0" fill="rgb(233,130,1)" rx="2" ry="2" />
<text  x="670.30" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.9" y="1925" width="0.2" height="15.0" fill="rgb(222,107,7)" rx="2" ry="2" />
<text  x="77.92" y="1935.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(238,187,44)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="118.8" y="1285" width="19.0" height="15.0" fill="rgb(229,44,0)" rx="2" ry="2" />
<text  x="121.79" y="1295.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="714.5" y="1941" width="0.4" height="15.0" fill="rgb(251,116,24)" rx="2" ry="2" />
<text  x="717.55" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1002.4" y="2005" width="0.2" height="15.0" fill="rgb(208,193,44)" rx="2" ry="2" />
<text  x="1005.40" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (36 samples, 0.61%)</title><rect x="647.6" y="2021" width="7.2" height="15.0" fill="rgb(233,123,18)" rx="2" ry="2" />
<text  x="650.64" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6 samples, 0.10%)</title><rect x="1020.3" y="2037" width="1.2" height="15.0" fill="rgb(224,56,1)" rx="2" ry="2" />
<text  x="1023.27" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="510.3" y="2005" width="0.2" height="15.0" fill="rgb(252,32,17)" rx="2" ry="2" />
<text  x="513.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="710.0" y="1973" width="0.2" height="15.0" fill="rgb(210,136,9)" rx="2" ry="2" />
<text  x="712.98" y="1983.5" ></text>
</g>
<g >
<title>event_add_nolock_ (2 samples, 0.03%)</title><rect x="1138.2" y="2053" width="0.4" height="15.0" fill="rgb(210,30,23)" rx="2" ry="2" />
<text  x="1141.19" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="937.9" y="1957" width="0.2" height="15.0" fill="rgb(210,47,15)" rx="2" ry="2" />
<text  x="940.88" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="483.1" y="1733" width="0.4" height="15.0" fill="rgb(254,222,28)" rx="2" ry="2" />
<text  x="486.07" y="1743.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1016.7" y="1909" width="0.2" height="15.0" fill="rgb(206,158,45)" rx="2" ry="2" />
<text  x="1019.69" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="241.7" y="1717" width="0.2" height="15.0" fill="rgb(223,38,26)" rx="2" ry="2" />
<text  x="244.67" y="1727.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (2 samples, 0.03%)</title><rect x="1006.0" y="2005" width="0.4" height="15.0" fill="rgb(243,90,46)" rx="2" ry="2" />
<text  x="1008.97" y="2015.5" ></text>
</g>
<g >
<title>tcp_sendmsg (349 samples, 5.87%)</title><rect x="270.3" y="1909" width="69.2" height="15.0" fill="rgb(240,174,25)" rx="2" ry="2" />
<text  x="273.26" y="1919.5" >tcp_sen..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="820.0" y="1573" width="0.2" height="15.0" fill="rgb(233,138,51)" rx="2" ry="2" />
<text  x="822.96" y="1583.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="104.5" y="1957" width="0.2" height="15.0" fill="rgb(248,118,39)" rx="2" ry="2" />
<text  x="107.50" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="118.8" y="1509" width="20.6" height="15.0" fill="rgb(208,177,37)" rx="2" ry="2" />
<text  x="121.79" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="458.7" y="1877" width="0.2" height="15.0" fill="rgb(249,209,16)" rx="2" ry="2" />
<text  x="461.65" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="884.9" y="1605" width="0.2" height="15.0" fill="rgb(244,116,1)" rx="2" ry="2" />
<text  x="887.88" y="1615.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="472.7" y="1957" width="0.2" height="15.0" fill="rgb(232,161,13)" rx="2" ry="2" />
<text  x="475.75" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="740.9" y="1493" width="0.2" height="15.0" fill="rgb(251,59,45)" rx="2" ry="2" />
<text  x="743.95" y="1503.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="46.7" y="1973" width="0.8" height="15.0" fill="rgb(230,62,43)" rx="2" ry="2" />
<text  x="49.73" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="39.8" y="1893" width="0.2" height="15.0" fill="rgb(215,73,16)" rx="2" ry="2" />
<text  x="42.78" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="130.1" y="37" width="0.2" height="15.0" fill="rgb(245,104,12)" rx="2" ry="2" />
<text  x="133.10" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1180.1" y="2005" width="0.2" height="15.0" fill="rgb(218,157,36)" rx="2" ry="2" />
<text  x="1183.07" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="61.2" y="1909" width="0.2" height="15.0" fill="rgb(245,99,37)" rx="2" ry="2" />
<text  x="64.22" y="1919.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="853.9" y="1573" width="0.2" height="15.0" fill="rgb(227,137,2)" rx="2" ry="2" />
<text  x="856.91" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="247.4" y="1813" width="0.2" height="15.0" fill="rgb(230,174,32)" rx="2" ry="2" />
<text  x="250.43" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="961.5" y="2021" width="0.2" height="15.0" fill="rgb(237,100,52)" rx="2" ry="2" />
<text  x="964.50" y="2031.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="737.2" y="1653" width="0.2" height="15.0" fill="rgb(252,223,32)" rx="2" ry="2" />
<text  x="740.18" y="1663.5" ></text>
</g>
<g >
<title>close@plt (1 samples, 0.02%)</title><rect x="835.8" y="1909" width="0.2" height="15.0" fill="rgb(251,228,32)" rx="2" ry="2" />
<text  x="838.84" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1134.4" y="2053" width="0.2" height="15.0" fill="rgb(242,123,50)" rx="2" ry="2" />
<text  x="1137.41" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="880.9" y="1877" width="0.6" height="15.0" fill="rgb(226,135,32)" rx="2" ry="2" />
<text  x="883.91" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.13%)</title><rect x="938.3" y="1957" width="1.6" height="15.0" fill="rgb(213,211,38)" rx="2" ry="2" />
<text  x="941.28" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="458.7" y="1813" width="0.2" height="15.0" fill="rgb(234,18,33)" rx="2" ry="2" />
<text  x="461.65" y="1823.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="825.7" y="1573" width="0.2" height="15.0" fill="rgb(227,92,32)" rx="2" ry="2" />
<text  x="828.72" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="133.1" y="53" width="0.2" height="15.0" fill="rgb(236,35,54)" rx="2" ry="2" />
<text  x="136.08" y="63.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1054.2" y="1941" width="0.2" height="15.0" fill="rgb(246,66,43)" rx="2" ry="2" />
<text  x="1057.21" y="1951.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="932.7" y="1813" width="0.8" height="15.0" fill="rgb(241,202,15)" rx="2" ry="2" />
<text  x="935.72" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="596.6" y="1845" width="0.2" height="15.0" fill="rgb(218,164,33)" rx="2" ry="2" />
<text  x="599.63" y="1855.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="279.0" y="1605" width="0.2" height="15.0" fill="rgb(216,109,46)" rx="2" ry="2" />
<text  x="281.99" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1048.9" y="1877" width="0.2" height="15.0" fill="rgb(224,38,39)" rx="2" ry="2" />
<text  x="1051.85" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="818.6" y="1685" width="0.2" height="15.0" fill="rgb(244,113,40)" rx="2" ry="2" />
<text  x="821.57" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="489.6" y="1941" width="0.2" height="15.0" fill="rgb(233,192,37)" rx="2" ry="2" />
<text  x="492.62" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="173.2" y="1909" width="0.4" height="15.0" fill="rgb(239,72,12)" rx="2" ry="2" />
<text  x="176.18" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="968.8" y="2005" width="0.2" height="15.0" fill="rgb(231,28,21)" rx="2" ry="2" />
<text  x="971.85" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="698.5" y="1941" width="0.2" height="15.0" fill="rgb(239,151,8)" rx="2" ry="2" />
<text  x="701.47" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1078.4" y="1733" width="0.2" height="15.0" fill="rgb(235,108,26)" rx="2" ry="2" />
<text  x="1081.43" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (10 samples, 0.17%)</title><rect x="191.0" y="1989" width="2.0" height="15.0" fill="rgb(209,60,54)" rx="2" ry="2" />
<text  x="194.05" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="745.9" y="1509" width="0.2" height="15.0" fill="rgb(206,15,41)" rx="2" ry="2" />
<text  x="748.91" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="419.0" y="1813" width="0.1" height="15.0" fill="rgb(233,28,12)" rx="2" ry="2" />
<text  x="421.95" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="775.3" y="1445" width="0.6" height="15.0" fill="rgb(223,126,9)" rx="2" ry="2" />
<text  x="778.29" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="134.3" y="117" width="0.2" height="15.0" fill="rgb(242,188,37)" rx="2" ry="2" />
<text  x="137.27" y="127.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="543.8" y="1877" width="0.2" height="15.0" fill="rgb(248,184,37)" rx="2" ry="2" />
<text  x="546.82" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="108.5" y="1957" width="0.2" height="15.0" fill="rgb(219,52,11)" rx="2" ry="2" />
<text  x="111.47" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="562.1" y="1413" width="0.2" height="15.0" fill="rgb(248,12,30)" rx="2" ry="2" />
<text  x="565.08" y="1423.5" ></text>
</g>
<g >
<title>call_rcu_sched (8 samples, 0.13%)</title><rect x="473.1" y="1957" width="1.6" height="15.0" fill="rgb(251,205,5)" rx="2" ry="2" />
<text  x="476.15" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="984.9" y="1877" width="0.2" height="15.0" fill="rgb(215,188,31)" rx="2" ry="2" />
<text  x="987.93" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1045" width="18.5" height="15.0" fill="rgb(209,218,51)" rx="2" ry="2" />
<text  x="121.79" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1180.5" y="1989" width="0.6" height="15.0" fill="rgb(247,0,47)" rx="2" ry="2" />
<text  x="1183.47" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="853.9" y="1717" width="0.2" height="15.0" fill="rgb(209,198,21)" rx="2" ry="2" />
<text  x="856.91" y="1727.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (4 samples, 0.07%)</title><rect x="1005.0" y="2005" width="0.8" height="15.0" fill="rgb(246,67,13)" rx="2" ry="2" />
<text  x="1007.98" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="166.8" y="1861" width="0.2" height="15.0" fill="rgb(206,40,21)" rx="2" ry="2" />
<text  x="169.83" y="1871.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="581.3" y="2021" width="0.2" height="15.0" fill="rgb(216,53,51)" rx="2" ry="2" />
<text  x="584.34" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="443.4" y="1909" width="0.2" height="15.0" fill="rgb(227,189,41)" rx="2" ry="2" />
<text  x="446.37" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1016.9" y="1989" width="0.4" height="15.0" fill="rgb(230,11,40)" rx="2" ry="2" />
<text  x="1019.89" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="924.2" y="1941" width="0.6" height="15.0" fill="rgb(250,134,17)" rx="2" ry="2" />
<text  x="927.18" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="925.4" y="1941" width="0.8" height="15.0" fill="rgb(248,136,10)" rx="2" ry="2" />
<text  x="928.37" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (66 samples, 1.11%)</title><rect x="25.5" y="2005" width="13.1" height="15.0" fill="rgb(227,169,45)" rx="2" ry="2" />
<text  x="28.48" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="706.0" y="1621" width="0.2" height="15.0" fill="rgb(237,197,39)" rx="2" ry="2" />
<text  x="709.01" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="289.3" y="1637" width="0.2" height="15.0" fill="rgb(224,136,28)" rx="2" ry="2" />
<text  x="292.32" y="1647.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="82.5" y="1957" width="0.2" height="15.0" fill="rgb(248,79,39)" rx="2" ry="2" />
<text  x="85.46" y="1967.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="801.3" y="1653" width="0.2" height="15.0" fill="rgb(237,117,36)" rx="2" ry="2" />
<text  x="804.30" y="1663.5" ></text>
</g>
<g >
<title>mcrouter (5,926 samples, 99.70%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(222,181,41)" rx="2" ry="2" />
<text  x="16.57" y="2079.5" >mcrouter</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2 samples, 0.03%)</title><rect x="205.1" y="2021" width="0.4" height="15.0" fill="rgb(213,9,15)" rx="2" ry="2" />
<text  x="208.14" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="504.9" y="1749" width="0.6" height="15.0" fill="rgb(225,107,14)" rx="2" ry="2" />
<text  x="507.91" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8 samples, 0.13%)</title><rect x="301.4" y="1525" width="1.6" height="15.0" fill="rgb(248,197,28)" rx="2" ry="2" />
<text  x="304.43" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="968.1" y="1781" width="0.2" height="15.0" fill="rgb(207,35,11)" rx="2" ry="2" />
<text  x="971.06" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="458.5" y="1925" width="0.2" height="15.0" fill="rgb(231,148,25)" rx="2" ry="2" />
<text  x="461.46" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="310.4" y="1653" width="0.2" height="15.0" fill="rgb(228,77,20)" rx="2" ry="2" />
<text  x="313.36" y="1663.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="131.9" y="53" width="0.4" height="15.0" fill="rgb(231,69,29)" rx="2" ry="2" />
<text  x="134.89" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="857.3" y="1941" width="0.2" height="15.0" fill="rgb(229,223,30)" rx="2" ry="2" />
<text  x="860.28" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="879.3" y="1909" width="0.2" height="15.0" fill="rgb(212,93,9)" rx="2" ry="2" />
<text  x="882.32" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="537.1" y="1973" width="0.2" height="15.0" fill="rgb(224,81,5)" rx="2" ry="2" />
<text  x="540.07" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="543.8" y="1925" width="0.2" height="15.0" fill="rgb(237,66,16)" rx="2" ry="2" />
<text  x="546.82" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="20.9" y="1909" width="0.2" height="15.0" fill="rgb(219,127,41)" rx="2" ry="2" />
<text  x="23.92" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="800.7" y="1349" width="0.2" height="15.0" fill="rgb(206,120,16)" rx="2" ry="2" />
<text  x="803.70" y="1359.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="694.1" y="1765" width="0.2" height="15.0" fill="rgb(243,118,4)" rx="2" ry="2" />
<text  x="697.10" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="118.8" y="981" width="18.3" height="15.0" fill="rgb(243,111,23)" rx="2" ry="2" />
<text  x="121.79" y="991.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="940.5" y="1893" width="0.2" height="15.0" fill="rgb(241,186,2)" rx="2" ry="2" />
<text  x="943.46" y="1903.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.02%)</title><rect x="732.4" y="1701" width="0.2" height="15.0" fill="rgb(213,211,28)" rx="2" ry="2" />
<text  x="735.41" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="917.4" y="1989" width="0.4" height="15.0" fill="rgb(219,4,3)" rx="2" ry="2" />
<text  x="920.43" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (2 samples, 0.03%)</title><rect x="197.8" y="2021" width="0.4" height="15.0" fill="rgb(226,86,28)" rx="2" ry="2" />
<text  x="200.80" y="2031.5" ></text>
</g>
<g >
<title>ipv4_mtu (7 samples, 0.12%)</title><rect x="808.4" y="1717" width="1.4" height="15.0" fill="rgb(252,111,14)" rx="2" ry="2" />
<text  x="811.45" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1019.9" y="1989" width="0.2" height="15.0" fill="rgb(238,18,9)" rx="2" ry="2" />
<text  x="1022.87" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="700.5" y="1973" width="0.3" height="15.0" fill="rgb(207,70,20)" rx="2" ry="2" />
<text  x="703.45" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (14 samples, 0.24%)</title><rect x="539.3" y="1957" width="2.7" height="15.0" fill="rgb(248,69,19)" rx="2" ry="2" />
<text  x="542.25" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="392.3" y="1925" width="0.2" height="15.0" fill="rgb(223,62,6)" rx="2" ry="2" />
<text  x="395.35" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="191.0" y="1973" width="0.8" height="15.0" fill="rgb(209,73,34)" rx="2" ry="2" />
<text  x="194.05" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="72.1" y="1909" width="0.2" height="15.0" fill="rgb(246,51,4)" rx="2" ry="2" />
<text  x="75.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="940.5" y="1765" width="0.2" height="15.0" fill="rgb(247,50,12)" rx="2" ry="2" />
<text  x="943.46" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="104.9" y="1877" width="0.2" height="15.0" fill="rgb(241,104,13)" rx="2" ry="2" />
<text  x="107.89" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="159.7" y="1909" width="0.2" height="15.0" fill="rgb(253,168,16)" rx="2" ry="2" />
<text  x="162.68" y="1919.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (4 samples, 0.07%)</title><rect x="1077.6" y="1829" width="0.8" height="15.0" fill="rgb(237,20,20)" rx="2" ry="2" />
<text  x="1080.64" y="1839.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="659.2" y="1749" width="0.2" height="15.0" fill="rgb(238,137,18)" rx="2" ry="2" />
<text  x="662.16" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="761.0" y="1525" width="0.2" height="15.0" fill="rgb(206,209,41)" rx="2" ry="2" />
<text  x="764.00" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="136.5" y="261" width="0.2" height="15.0" fill="rgb(219,103,23)" rx="2" ry="2" />
<text  x="139.46" y="271.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="1001.2" y="2037" width="0.2" height="15.0" fill="rgb(247,43,31)" rx="2" ry="2" />
<text  x="1004.21" y="2047.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="295.9" y="1797" width="0.2" height="15.0" fill="rgb(234,122,7)" rx="2" ry="2" />
<text  x="298.87" y="1807.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::getEventBase (2 samples, 0.03%)</title><rect x="662.1" y="1989" width="0.4" height="15.0" fill="rgb(209,174,36)" rx="2" ry="2" />
<text  x="665.14" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="745.9" y="1701" width="0.2" height="15.0" fill="rgb(223,158,39)" rx="2" ry="2" />
<text  x="748.91" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="247.8" y="1829" width="0.2" height="15.0" fill="rgb(253,87,32)" rx="2" ry="2" />
<text  x="250.83" y="1839.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1002.4" y="1669" width="0.2" height="15.0" fill="rgb(232,79,5)" rx="2" ry="2" />
<text  x="1005.40" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1169.0" y="2021" width="0.2" height="15.0" fill="rgb(235,50,0)" rx="2" ry="2" />
<text  x="1171.96" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="1144.5" y="1925" width="0.2" height="15.0" fill="rgb(217,116,51)" rx="2" ry="2" />
<text  x="1147.54" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="743.1" y="1525" width="0.2" height="15.0" fill="rgb(240,119,32)" rx="2" ry="2" />
<text  x="746.13" y="1535.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="746.7" y="1765" width="0.6" height="15.0" fill="rgb(212,200,29)" rx="2" ry="2" />
<text  x="749.71" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="12.4" y="1957" width="0.2" height="15.0" fill="rgb(228,198,54)" rx="2" ry="2" />
<text  x="15.38" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="115.6" y="1925" width="0.2" height="15.0" fill="rgb(233,182,20)" rx="2" ry="2" />
<text  x="118.61" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="694.1" y="1557" width="0.2" height="15.0" fill="rgb(216,32,41)" rx="2" ry="2" />
<text  x="697.10" y="1567.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="112.2" y="1893" width="0.2" height="15.0" fill="rgb(244,88,50)" rx="2" ry="2" />
<text  x="115.24" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="283.0" y="1637" width="0.2" height="15.0" fill="rgb(245,197,37)" rx="2" ry="2" />
<text  x="285.96" y="1647.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (40 samples, 0.67%)</title><rect x="237.7" y="1893" width="7.9" height="15.0" fill="rgb(234,98,19)" rx="2" ry="2" />
<text  x="240.70" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1017.1" y="1925" width="0.2" height="15.0" fill="rgb(235,106,51)" rx="2" ry="2" />
<text  x="1020.09" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="956.3" y="1957" width="0.2" height="15.0" fill="rgb(244,149,42)" rx="2" ry="2" />
<text  x="959.34" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="134.1" y="37" width="0.2" height="15.0" fill="rgb(234,219,9)" rx="2" ry="2" />
<text  x="137.07" y="47.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="559.9" y="1781" width="0.2" height="15.0" fill="rgb(236,186,18)" rx="2" ry="2" />
<text  x="562.90" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="733.8" y="1589" width="0.2" height="15.0" fill="rgb(209,198,10)" rx="2" ry="2" />
<text  x="736.80" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1016.9" y="2005" width="0.4" height="15.0" fill="rgb(254,218,33)" rx="2" ry="2" />
<text  x="1019.89" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="947.4" y="1637" width="0.2" height="15.0" fill="rgb(207,96,33)" rx="2" ry="2" />
<text  x="950.41" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1078.4" y="1813" width="0.4" height="15.0" fill="rgb(225,48,42)" rx="2" ry="2" />
<text  x="1081.43" y="1823.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="596.0" y="1845" width="0.6" height="15.0" fill="rgb(228,191,53)" rx="2" ry="2" />
<text  x="599.03" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="899.6" y="1941" width="0.2" height="15.0" fill="rgb(250,222,47)" rx="2" ry="2" />
<text  x="902.57" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="505.1" y="1637" width="0.4" height="15.0" fill="rgb(221,81,31)" rx="2" ry="2" />
<text  x="508.11" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="61.6" y="1925" width="0.8" height="15.0" fill="rgb(227,4,26)" rx="2" ry="2" />
<text  x="64.62" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1024.0" y="1893" width="0.2" height="15.0" fill="rgb(217,52,47)" rx="2" ry="2" />
<text  x="1027.04" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1089.4" y="1909" width="0.5" height="15.0" fill="rgb(207,220,46)" rx="2" ry="2" />
<text  x="1092.35" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (4 samples, 0.07%)</title><rect x="897.4" y="2005" width="0.8" height="15.0" fill="rgb(249,122,23)" rx="2" ry="2" />
<text  x="900.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="133.5" y="85" width="0.4" height="15.0" fill="rgb(225,212,8)" rx="2" ry="2" />
<text  x="136.48" y="95.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="135.9" y="133" width="0.2" height="15.0" fill="rgb(231,148,36)" rx="2" ry="2" />
<text  x="138.86" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="52.1" y="1845" width="0.2" height="15.0" fill="rgb(244,97,13)" rx="2" ry="2" />
<text  x="55.09" y="1855.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="735.2" y="1669" width="0.2" height="15.0" fill="rgb(234,45,42)" rx="2" ry="2" />
<text  x="738.19" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="884.7" y="1765" width="0.2" height="15.0" fill="rgb(228,101,43)" rx="2" ry="2" />
<text  x="887.68" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="241.7" y="1765" width="0.2" height="15.0" fill="rgb(246,188,19)" rx="2" ry="2" />
<text  x="244.67" y="1775.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="52.9" y="1781" width="0.2" height="15.0" fill="rgb(234,156,1)" rx="2" ry="2" />
<text  x="55.88" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="135.9" y="213" width="0.2" height="15.0" fill="rgb(246,169,46)" rx="2" ry="2" />
<text  x="138.86" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="611.3" y="1861" width="0.2" height="15.0" fill="rgb(234,130,40)" rx="2" ry="2" />
<text  x="614.32" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="852.1" y="1877" width="0.6" height="15.0" fill="rgb(252,160,26)" rx="2" ry="2" />
<text  x="855.12" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="350.7" y="1989" width="0.2" height="15.0" fill="rgb(239,2,54)" rx="2" ry="2" />
<text  x="353.66" y="1999.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="595.0" y="1829" width="0.2" height="15.0" fill="rgb(254,33,11)" rx="2" ry="2" />
<text  x="598.04" y="1839.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="518.0" y="1941" width="0.4" height="15.0" fill="rgb(224,41,33)" rx="2" ry="2" />
<text  x="521.01" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="559.9" y="1797" width="0.2" height="15.0" fill="rgb(213,10,34)" rx="2" ry="2" />
<text  x="562.90" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="383.4" y="1813" width="0.2" height="15.0" fill="rgb(206,97,3)" rx="2" ry="2" />
<text  x="386.42" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1071.9" y="1765" width="0.4" height="15.0" fill="rgb(208,205,52)" rx="2" ry="2" />
<text  x="1074.88" y="1775.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (1 samples, 0.02%)</title><rect x="969.0" y="2037" width="0.2" height="15.0" fill="rgb(216,164,51)" rx="2" ry="2" />
<text  x="972.05" y="2047.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1150.9" y="1989" width="0.2" height="15.0" fill="rgb(239,144,18)" rx="2" ry="2" />
<text  x="1153.89" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="665.9" y="1957" width="0.2" height="15.0" fill="rgb(237,153,54)" rx="2" ry="2" />
<text  x="668.91" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1150.1" y="1957" width="0.2" height="15.0" fill="rgb(238,189,23)" rx="2" ry="2" />
<text  x="1153.10" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="300.6" y="1509" width="0.2" height="15.0" fill="rgb(242,124,11)" rx="2" ry="2" />
<text  x="303.63" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1183.1" y="2037" width="0.3" height="15.0" fill="rgb(249,215,47)" rx="2" ry="2" />
<text  x="1186.05" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="478.7" y="1925" width="0.8" height="15.0" fill="rgb(254,160,26)" rx="2" ry="2" />
<text  x="481.70" y="1935.5" ></text>
</g>
<g >
<title>skb_defer_rx_timestamp (1 samples, 0.02%)</title><rect x="463.4" y="1829" width="0.2" height="15.0" fill="rgb(226,127,50)" rx="2" ry="2" />
<text  x="466.42" y="1839.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="845.0" y="1861" width="0.2" height="15.0" fill="rgb(246,43,38)" rx="2" ry="2" />
<text  x="847.97" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="289.3" y="1813" width="0.2" height="15.0" fill="rgb(208,209,10)" rx="2" ry="2" />
<text  x="292.32" y="1823.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="136.9" y="85" width="0.2" height="15.0" fill="rgb(223,147,43)" rx="2" ry="2" />
<text  x="139.85" y="95.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="109.5" y="1941" width="0.2" height="15.0" fill="rgb(217,34,35)" rx="2" ry="2" />
<text  x="112.46" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="740.9" y="1621" width="0.2" height="15.0" fill="rgb(208,183,50)" rx="2" ry="2" />
<text  x="743.95" y="1631.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="700.6" y="1685" width="0.2" height="15.0" fill="rgb(227,177,48)" rx="2" ry="2" />
<text  x="703.65" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="136.1" y="309" width="0.2" height="15.0" fill="rgb(245,1,7)" rx="2" ry="2" />
<text  x="139.06" y="319.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="936.3" y="1893" width="0.2" height="15.0" fill="rgb(227,114,3)" rx="2" ry="2" />
<text  x="939.29" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1175.9" y="1941" width="0.2" height="15.0" fill="rgb(252,216,28)" rx="2" ry="2" />
<text  x="1178.91" y="1951.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="960.7" y="1973" width="0.2" height="15.0" fill="rgb(237,51,0)" rx="2" ry="2" />
<text  x="963.71" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="976.6" y="1989" width="0.2" height="15.0" fill="rgb(213,137,28)" rx="2" ry="2" />
<text  x="979.59" y="1999.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="329.4" y="1413" width="0.2" height="15.0" fill="rgb(230,220,38)" rx="2" ry="2" />
<text  x="332.42" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="841.6" y="1909" width="0.8" height="15.0" fill="rgb(243,143,48)" rx="2" ry="2" />
<text  x="844.60" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="627.2" y="1877" width="0.2" height="15.0" fill="rgb(241,160,18)" rx="2" ry="2" />
<text  x="630.20" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="543.8" y="1717" width="0.2" height="15.0" fill="rgb(234,123,31)" rx="2" ry="2" />
<text  x="546.82" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="668.3" y="1893" width="0.2" height="15.0" fill="rgb(205,65,36)" rx="2" ry="2" />
<text  x="671.29" y="1903.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="733.8" y="1413" width="0.2" height="15.0" fill="rgb(217,54,41)" rx="2" ry="2" />
<text  x="736.80" y="1423.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="800.7" y="1253" width="0.2" height="15.0" fill="rgb(223,64,2)" rx="2" ry="2" />
<text  x="803.70" y="1263.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="909.5" y="2037" width="0.8" height="15.0" fill="rgb(232,97,10)" rx="2" ry="2" />
<text  x="912.49" y="2047.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1034.2" y="1941" width="0.2" height="15.0" fill="rgb(243,197,6)" rx="2" ry="2" />
<text  x="1037.16" y="1951.5" ></text>
</g>
<g >
<title>_find_next_bit (2 samples, 0.03%)</title><rect x="365.7" y="1925" width="0.4" height="15.0" fill="rgb(243,48,8)" rx="2" ry="2" />
<text  x="368.75" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="675.6" y="1829" width="0.4" height="15.0" fill="rgb(248,106,34)" rx="2" ry="2" />
<text  x="678.64" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="561.9" y="1893" width="0.4" height="15.0" fill="rgb(211,47,2)" rx="2" ry="2" />
<text  x="564.88" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (10 samples, 0.17%)</title><rect x="65.6" y="1941" width="2.0" height="15.0" fill="rgb(215,150,41)" rx="2" ry="2" />
<text  x="68.59" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1173.3" y="1957" width="0.4" height="15.0" fill="rgb(243,91,1)" rx="2" ry="2" />
<text  x="1176.32" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="264.7" y="1957" width="0.2" height="15.0" fill="rgb(217,186,15)" rx="2" ry="2" />
<text  x="267.70" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="528.5" y="2005" width="1.2" height="15.0" fill="rgb(241,209,5)" rx="2" ry="2" />
<text  x="531.53" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="171.8" y="1893" width="0.2" height="15.0" fill="rgb(238,180,26)" rx="2" ry="2" />
<text  x="174.79" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="844.4" y="1813" width="0.2" height="15.0" fill="rgb(233,83,0)" rx="2" ry="2" />
<text  x="847.38" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="825.3" y="1685" width="0.8" height="15.0" fill="rgb(249,77,23)" rx="2" ry="2" />
<text  x="828.32" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="677" width="17.9" height="15.0" fill="rgb(232,19,4)" rx="2" ry="2" />
<text  x="122.19" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="371.7" y="1893" width="0.2" height="15.0" fill="rgb(219,127,35)" rx="2" ry="2" />
<text  x="374.70" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1150.3" y="1973" width="0.2" height="15.0" fill="rgb(224,16,51)" rx="2" ry="2" />
<text  x="1153.30" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_free (13 samples, 0.22%)</title><rect x="737.4" y="1669" width="2.6" height="15.0" fill="rgb(244,168,49)" rx="2" ry="2" />
<text  x="740.38" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="844.2" y="1845" width="0.2" height="15.0" fill="rgb(241,0,37)" rx="2" ry="2" />
<text  x="847.18" y="1855.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="759.8" y="1669" width="0.2" height="15.0" fill="rgb(247,85,26)" rx="2" ry="2" />
<text  x="762.81" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="687.9" y="1685" width="0.2" height="15.0" fill="rgb(247,153,13)" rx="2" ry="2" />
<text  x="690.94" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="112.4" y="1957" width="0.2" height="15.0" fill="rgb(234,208,11)" rx="2" ry="2" />
<text  x="115.44" y="1967.5" ></text>
</g>
<g >
<title>__mutex_init (1 samples, 0.02%)</title><rect x="404.9" y="1925" width="0.2" height="15.0" fill="rgb(224,163,3)" rx="2" ry="2" />
<text  x="407.86" y="1935.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="845.2" y="1893" width="0.2" height="15.0" fill="rgb(229,158,16)" rx="2" ry="2" />
<text  x="848.17" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_init_xmit_timers (1 samples, 0.02%)</title><rect x="627.2" y="1685" width="0.2" height="15.0" fill="rgb(216,19,54)" rx="2" ry="2" />
<text  x="630.20" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="493.0" y="1941" width="0.4" height="15.0" fill="rgb(213,213,2)" rx="2" ry="2" />
<text  x="496.00" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="676.2" y="1861" width="0.2" height="15.0" fill="rgb(235,218,2)" rx="2" ry="2" />
<text  x="679.23" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="581.1" y="1957" width="0.2" height="15.0" fill="rgb(221,227,1)" rx="2" ry="2" />
<text  x="584.14" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (105 samples, 1.77%)</title><rect x="75.1" y="1973" width="20.9" height="15.0" fill="rgb(225,20,24)" rx="2" ry="2" />
<text  x="78.11" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="856.7" y="1669" width="0.2" height="15.0" fill="rgb(235,12,17)" rx="2" ry="2" />
<text  x="859.69" y="1679.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="243.5" y="1829" width="1.3" height="15.0" fill="rgb(232,18,48)" rx="2" ry="2" />
<text  x="246.46" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.9" y="1877" width="0.2" height="15.0" fill="rgb(218,115,2)" rx="2" ry="2" />
<text  x="887.88" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (2 samples, 0.03%)</title><rect x="654.8" y="2021" width="0.4" height="15.0" fill="rgb(245,161,30)" rx="2" ry="2" />
<text  x="657.79" y="2031.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="825.3" y="1573" width="0.2" height="15.0" fill="rgb(245,216,43)" rx="2" ry="2" />
<text  x="828.32" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="899.0" y="1957" width="0.2" height="15.0" fill="rgb(246,122,18)" rx="2" ry="2" />
<text  x="901.97" y="1967.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="92.6" y="1909" width="0.2" height="15.0" fill="rgb(249,43,27)" rx="2" ry="2" />
<text  x="95.58" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="119.2" y="389" width="17.3" height="15.0" fill="rgb(208,19,19)" rx="2" ry="2" />
<text  x="122.19" y="399.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1078.2" y="1749" width="0.2" height="15.0" fill="rgb(206,173,6)" rx="2" ry="2" />
<text  x="1081.23" y="1759.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="156.3" y="1717" width="0.2" height="15.0" fill="rgb(248,182,41)" rx="2" ry="2" />
<text  x="159.31" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="121.2" y="37" width="0.4" height="15.0" fill="rgb(238,2,22)" rx="2" ry="2" />
<text  x="124.17" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="60.8" y="1957" width="0.4" height="15.0" fill="rgb(210,221,15)" rx="2" ry="2" />
<text  x="63.82" y="1967.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="762.6" y="1429" width="0.2" height="15.0" fill="rgb(248,20,1)" rx="2" ry="2" />
<text  x="765.59" y="1439.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="945.6" y="1973" width="1.4" height="15.0" fill="rgb(248,181,43)" rx="2" ry="2" />
<text  x="948.62" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="1026.6" y="2053" width="1.2" height="15.0" fill="rgb(214,27,4)" rx="2" ry="2" />
<text  x="1029.62" y="2063.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="754.8" y="1733" width="0.4" height="15.0" fill="rgb(247,116,54)" rx="2" ry="2" />
<text  x="757.85" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="269.3" y="1765" width="0.2" height="15.0" fill="rgb(213,132,14)" rx="2" ry="2" />
<text  x="272.27" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="378.5" y="1845" width="0.2" height="15.0" fill="rgb(211,124,49)" rx="2" ry="2" />
<text  x="381.45" y="1855.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="698.5" y="1861" width="0.2" height="15.0" fill="rgb(253,5,37)" rx="2" ry="2" />
<text  x="701.47" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="639.5" y="1925" width="0.4" height="15.0" fill="rgb(239,144,0)" rx="2" ry="2" />
<text  x="642.51" y="1935.5" ></text>
</g>
<g >
<title>tcp_established_options (9 samples, 0.15%)</title><rect x="816.8" y="1701" width="1.8" height="15.0" fill="rgb(206,226,36)" rx="2" ry="2" />
<text  x="819.78" y="1711.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="398.5" y="1781" width="0.2" height="15.0" fill="rgb(209,191,23)" rx="2" ry="2" />
<text  x="401.50" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.8" y="1925" width="0.2" height="15.0" fill="rgb(253,147,11)" rx="2" ry="2" />
<text  x="494.81" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="71.9" y="1925" width="0.2" height="15.0" fill="rgb(236,68,5)" rx="2" ry="2" />
<text  x="74.94" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="583.7" y="1925" width="0.2" height="15.0" fill="rgb(236,217,50)" rx="2" ry="2" />
<text  x="586.72" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="830.5" y="1733" width="0.2" height="15.0" fill="rgb(235,108,24)" rx="2" ry="2" />
<text  x="833.48" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="109.5" y="1925" width="0.2" height="15.0" fill="rgb(231,191,15)" rx="2" ry="2" />
<text  x="112.46" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="178.9" y="1685" width="0.2" height="15.0" fill="rgb(216,4,22)" rx="2" ry="2" />
<text  x="181.94" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="706.0" y="2037" width="0.2" height="15.0" fill="rgb(244,98,19)" rx="2" ry="2" />
<text  x="709.01" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1016.5" y="1989" width="0.2" height="15.0" fill="rgb(226,15,1)" rx="2" ry="2" />
<text  x="1019.49" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="906.3" y="1989" width="0.6" height="15.0" fill="rgb(206,193,44)" rx="2" ry="2" />
<text  x="909.32" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="645.7" y="1957" width="0.6" height="15.0" fill="rgb(213,3,47)" rx="2" ry="2" />
<text  x="648.66" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="79.9" y="1733" width="0.2" height="15.0" fill="rgb(205,226,54)" rx="2" ry="2" />
<text  x="82.88" y="1743.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="80.1" y="1621" width="0.2" height="15.0" fill="rgb(244,206,38)" rx="2" ry="2" />
<text  x="83.08" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="610.3" y="1765" width="0.2" height="15.0" fill="rgb(240,8,5)" rx="2" ry="2" />
<text  x="613.32" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="70.7" y="1813" width="0.2" height="15.0" fill="rgb(222,172,35)" rx="2" ry="2" />
<text  x="73.75" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="156.3" y="1525" width="0.2" height="15.0" fill="rgb(240,159,44)" rx="2" ry="2" />
<text  x="159.31" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="80.1" y="1637" width="0.2" height="15.0" fill="rgb(215,167,5)" rx="2" ry="2" />
<text  x="83.08" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="659.2" y="1941" width="0.2" height="15.0" fill="rgb(210,4,12)" rx="2" ry="2" />
<text  x="662.16" y="1951.5" ></text>
</g>
<g >
<title>__libc_sendmsg (484 samples, 8.14%)</title><rect x="250.8" y="2037" width="96.1" height="15.0" fill="rgb(238,208,22)" rx="2" ry="2" />
<text  x="253.80" y="2047.5" >__libc_send..</text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="173.6" y="1909" width="0.2" height="15.0" fill="rgb(214,148,36)" rx="2" ry="2" />
<text  x="176.58" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="67.0" y="1845" width="0.2" height="15.0" fill="rgb(228,152,13)" rx="2" ry="2" />
<text  x="69.98" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="680.8" y="2021" width="0.2" height="15.0" fill="rgb(232,168,43)" rx="2" ry="2" />
<text  x="683.80" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="701.4" y="1813" width="0.2" height="15.0" fill="rgb(229,24,5)" rx="2" ry="2" />
<text  x="704.44" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="351.1" y="1941" width="0.2" height="15.0" fill="rgb(225,228,5)" rx="2" ry="2" />
<text  x="354.06" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="241.7" y="1605" width="0.2" height="15.0" fill="rgb(223,183,24)" rx="2" ry="2" />
<text  x="244.67" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (1 samples, 0.02%)</title><rect x="29.5" y="1973" width="0.2" height="15.0" fill="rgb(232,72,49)" rx="2" ry="2" />
<text  x="32.45" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="132.3" y="37" width="0.2" height="15.0" fill="rgb(231,83,10)" rx="2" ry="2" />
<text  x="135.29" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="947.0" y="1973" width="0.4" height="15.0" fill="rgb(239,92,3)" rx="2" ry="2" />
<text  x="950.01" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="627.0" y="1829" width="0.2" height="15.0" fill="rgb(205,203,4)" rx="2" ry="2" />
<text  x="630.00" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="830.5" y="1637" width="0.2" height="15.0" fill="rgb(235,229,25)" rx="2" ry="2" />
<text  x="833.48" y="1647.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="597.2" y="1877" width="0.2" height="15.0" fill="rgb(225,115,31)" rx="2" ry="2" />
<text  x="600.22" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.7" y="1941" width="0.2" height="15.0" fill="rgb(238,147,11)" rx="2" ry="2" />
<text  x="890.65" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="514.6" y="1941" width="0.6" height="15.0" fill="rgb(233,99,32)" rx="2" ry="2" />
<text  x="517.64" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="699.1" y="1893" width="0.8" height="15.0" fill="rgb(214,187,35)" rx="2" ry="2" />
<text  x="702.06" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="917.6" y="1877" width="0.2" height="15.0" fill="rgb(236,227,26)" rx="2" ry="2" />
<text  x="920.63" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="93.0" y="1925" width="0.2" height="15.0" fill="rgb(220,57,34)" rx="2" ry="2" />
<text  x="95.98" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="755.4" y="1621" width="0.2" height="15.0" fill="rgb(253,13,38)" rx="2" ry="2" />
<text  x="758.44" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (5 samples, 0.08%)</title><rect x="578.6" y="1989" width="1.0" height="15.0" fill="rgb(240,126,36)" rx="2" ry="2" />
<text  x="581.56" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="998.6" y="1957" width="0.2" height="15.0" fill="rgb(215,25,14)" rx="2" ry="2" />
<text  x="1001.63" y="1967.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="581.1" y="2021" width="0.2" height="15.0" fill="rgb(218,174,38)" rx="2" ry="2" />
<text  x="584.14" y="2031.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (44 samples, 0.74%)</title><rect x="1001.4" y="2037" width="8.7" height="15.0" fill="rgb(246,134,35)" rx="2" ry="2" />
<text  x="1004.41" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="952.8" y="2005" width="2.4" height="15.0" fill="rgb(237,39,48)" rx="2" ry="2" />
<text  x="955.77" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="852.7" y="1829" width="0.2" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="855.72" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="136.5" y="229" width="0.2" height="15.0" fill="rgb(246,4,44)" rx="2" ry="2" />
<text  x="139.46" y="239.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="623.6" y="1957" width="0.4" height="15.0" fill="rgb(221,77,37)" rx="2" ry="2" />
<text  x="626.62" y="1967.5" ></text>
</g>
<g >
<title>security_file_alloc (14 samples, 0.24%)</title><rect x="409.6" y="1909" width="2.8" height="15.0" fill="rgb(235,57,26)" rx="2" ry="2" />
<text  x="412.62" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="948.0" y="2005" width="0.2" height="15.0" fill="rgb(207,80,43)" rx="2" ry="2" />
<text  x="951.00" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="70.7" y="1861" width="0.2" height="15.0" fill="rgb(250,0,46)" rx="2" ry="2" />
<text  x="73.75" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="453" width="17.7" height="15.0" fill="rgb(242,4,5)" rx="2" ry="2" />
<text  x="122.19" y="463.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1002.8" y="1941" width="0.2" height="15.0" fill="rgb(219,145,14)" rx="2" ry="2" />
<text  x="1005.80" y="1951.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="610.9" y="1845" width="0.4" height="15.0" fill="rgb(242,93,41)" rx="2" ry="2" />
<text  x="613.92" y="1855.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="822.5" y="1781" width="0.2" height="15.0" fill="rgb(207,46,29)" rx="2" ry="2" />
<text  x="825.54" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="955.9" y="1941" width="0.2" height="15.0" fill="rgb(246,116,41)" rx="2" ry="2" />
<text  x="958.95" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="753.7" y="1717" width="0.4" height="15.0" fill="rgb(230,34,4)" rx="2" ry="2" />
<text  x="756.65" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="320.7" y="1765" width="0.2" height="15.0" fill="rgb(220,113,36)" rx="2" ry="2" />
<text  x="323.68" y="1775.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="12.6" y="1941" width="1.0" height="15.0" fill="rgb(231,147,7)" rx="2" ry="2" />
<text  x="15.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1177.1" y="1813" width="0.2" height="15.0" fill="rgb(232,212,23)" rx="2" ry="2" />
<text  x="1180.10" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (78 samples, 1.31%)</title><rect x="632.0" y="2037" width="15.4" height="15.0" fill="rgb(250,190,26)" rx="2" ry="2" />
<text  x="634.96" y="2047.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="293.1" y="1813" width="0.2" height="15.0" fill="rgb(229,194,23)" rx="2" ry="2" />
<text  x="296.09" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="264.7" y="1781" width="0.2" height="15.0" fill="rgb(207,99,13)" rx="2" ry="2" />
<text  x="267.70" y="1791.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1068.1" y="1845" width="0.2" height="15.0" fill="rgb(210,106,23)" rx="2" ry="2" />
<text  x="1071.11" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (3 samples, 0.05%)</title><rect x="667.9" y="1909" width="0.6" height="15.0" fill="rgb(241,228,47)" rx="2" ry="2" />
<text  x="670.89" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="857.3" y="1877" width="0.2" height="15.0" fill="rgb(205,75,4)" rx="2" ry="2" />
<text  x="860.28" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="378.5" y="1797" width="0.2" height="15.0" fill="rgb(239,153,38)" rx="2" ry="2" />
<text  x="381.45" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1090.3" y="1797" width="0.2" height="15.0" fill="rgb(229,63,10)" rx="2" ry="2" />
<text  x="1093.34" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="60.2" y="1893" width="0.2" height="15.0" fill="rgb(211,146,47)" rx="2" ry="2" />
<text  x="63.23" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="548.8" y="1957" width="0.4" height="15.0" fill="rgb(229,87,35)" rx="2" ry="2" />
<text  x="551.78" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="163.3" y="1813" width="0.2" height="15.0" fill="rgb(253,141,13)" rx="2" ry="2" />
<text  x="166.26" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="982.2" y="1717" width="0.1" height="15.0" fill="rgb(243,22,24)" rx="2" ry="2" />
<text  x="985.15" y="1727.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (6 samples, 0.10%)</title><rect x="85.4" y="1957" width="1.2" height="15.0" fill="rgb(253,20,2)" rx="2" ry="2" />
<text  x="88.44" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="630.4" y="1957" width="0.2" height="15.0" fill="rgb(223,43,47)" rx="2" ry="2" />
<text  x="633.37" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="856.7" y="1765" width="0.2" height="15.0" fill="rgb(238,45,27)" rx="2" ry="2" />
<text  x="859.69" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="269.3" y="1685" width="0.2" height="15.0" fill="rgb(208,118,37)" rx="2" ry="2" />
<text  x="272.27" y="1695.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="883.5" y="1813" width="0.2" height="15.0" fill="rgb(221,27,0)" rx="2" ry="2" />
<text  x="886.49" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="856.7" y="1573" width="0.2" height="15.0" fill="rgb(244,48,0)" rx="2" ry="2" />
<text  x="859.69" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="844.4" y="1797" width="0.2" height="15.0" fill="rgb(217,89,5)" rx="2" ry="2" />
<text  x="847.38" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="940.5" y="1909" width="0.2" height="15.0" fill="rgb(208,72,22)" rx="2" ry="2" />
<text  x="943.46" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="606.9" y="1797" width="0.2" height="15.0" fill="rgb(242,216,48)" rx="2" ry="2" />
<text  x="609.95" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="992.3" y="1989" width="0.2" height="15.0" fill="rgb(253,56,15)" rx="2" ry="2" />
<text  x="995.27" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="241.3" y="1781" width="0.6" height="15.0" fill="rgb(236,96,39)" rx="2" ry="2" />
<text  x="244.28" y="1791.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="610.3" y="1717" width="0.2" height="15.0" fill="rgb(221,123,21)" rx="2" ry="2" />
<text  x="613.32" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="533.7" y="1925" width="0.4" height="15.0" fill="rgb(245,155,26)" rx="2" ry="2" />
<text  x="536.69" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="701.4" y="1941" width="0.2" height="15.0" fill="rgb(237,133,46)" rx="2" ry="2" />
<text  x="704.44" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="668.5" y="1845" width="0.2" height="15.0" fill="rgb(209,2,37)" rx="2" ry="2" />
<text  x="671.49" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (76 samples, 1.28%)</title><rect x="601.0" y="2021" width="15.1" height="15.0" fill="rgb(225,64,24)" rx="2" ry="2" />
<text  x="603.99" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="147.0" y="1989" width="0.2" height="15.0" fill="rgb(251,69,38)" rx="2" ry="2" />
<text  x="149.98" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (4 samples, 0.07%)</title><rect x="666.9" y="1909" width="0.8" height="15.0" fill="rgb(238,95,25)" rx="2" ry="2" />
<text  x="669.90" y="1919.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="825.1" y="1541" width="0.2" height="15.0" fill="rgb(248,160,1)" rx="2" ry="2" />
<text  x="828.12" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="974.0" y="2037" width="0.4" height="15.0" fill="rgb(232,182,22)" rx="2" ry="2" />
<text  x="977.01" y="2047.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="1189.2" y="2053" width="0.2" height="15.0" fill="rgb(223,106,26)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="902.5" y="1973" width="0.4" height="15.0" fill="rgb(234,133,3)" rx="2" ry="2" />
<text  x="905.54" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="310.4" y="1589" width="0.2" height="15.0" fill="rgb(246,83,43)" rx="2" ry="2" />
<text  x="313.36" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="646.5" y="1909" width="0.2" height="15.0" fill="rgb(216,104,30)" rx="2" ry="2" />
<text  x="649.45" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="687.9" y="1861" width="0.2" height="15.0" fill="rgb(228,197,2)" rx="2" ry="2" />
<text  x="690.94" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1146.3" y="1989" width="0.2" height="15.0" fill="rgb(212,157,10)" rx="2" ry="2" />
<text  x="1149.33" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="551.0" y="1989" width="1.0" height="15.0" fill="rgb(244,225,11)" rx="2" ry="2" />
<text  x="553.97" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="176.6" y="2005" width="0.2" height="15.0" fill="rgb(252,57,17)" rx="2" ry="2" />
<text  x="179.56" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="44.5" y="1973" width="0.2" height="15.0" fill="rgb(210,88,0)" rx="2" ry="2" />
<text  x="47.54" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1189.0" y="2037" width="0.2" height="15.0" fill="rgb(239,214,2)" rx="2" ry="2" />
<text  x="1192.01" y="2047.5" ></text>
</g>
<g >
<title>tcp_close (353 samples, 5.94%)</title><rect x="749.1" y="1749" width="70.1" height="15.0" fill="rgb(225,144,41)" rx="2" ry="2" />
<text  x="752.09" y="1759.5" >tcp_close</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="559.9" y="1909" width="0.2" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="562.90" y="1919.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="917.4" y="1877" width="0.2" height="15.0" fill="rgb(236,50,9)" rx="2" ry="2" />
<text  x="920.43" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="58.4" y="1861" width="0.2" height="15.0" fill="rgb(214,219,27)" rx="2" ry="2" />
<text  x="61.44" y="1871.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="583.3" y="1925" width="0.2" height="15.0" fill="rgb(238,177,17)" rx="2" ry="2" />
<text  x="586.32" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="136.9" y="133" width="0.2" height="15.0" fill="rgb(210,16,20)" rx="2" ry="2" />
<text  x="139.85" y="143.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="884.9" y="1653" width="0.2" height="15.0" fill="rgb(252,17,20)" rx="2" ry="2" />
<text  x="887.88" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="289.3" y="1653" width="0.2" height="15.0" fill="rgb(205,44,27)" rx="2" ry="2" />
<text  x="292.32" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 0.22%)</title><rect x="300.4" y="1685" width="2.6" height="15.0" fill="rgb(250,132,11)" rx="2" ry="2" />
<text  x="303.43" y="1695.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="983.7" y="1845" width="0.2" height="15.0" fill="rgb(210,11,3)" rx="2" ry="2" />
<text  x="986.74" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="838.4" y="1797" width="0.2" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="841.42" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="865.2" y="1989" width="0.4" height="15.0" fill="rgb(213,15,51)" rx="2" ry="2" />
<text  x="868.22" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="755.4" y="1413" width="0.2" height="15.0" fill="rgb(206,60,27)" rx="2" ry="2" />
<text  x="758.44" y="1423.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="418.8" y="1941" width="0.3" height="15.0" fill="rgb(223,90,32)" rx="2" ry="2" />
<text  x="421.75" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="487.4" y="1973" width="2.4" height="15.0" fill="rgb(249,205,31)" rx="2" ry="2" />
<text  x="490.44" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="213.7" y="1957" width="0.2" height="15.0" fill="rgb(214,191,38)" rx="2" ry="2" />
<text  x="216.68" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="241.7" y="1653" width="0.2" height="15.0" fill="rgb(211,21,8)" rx="2" ry="2" />
<text  x="244.67" y="1663.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="329.4" y="1509" width="0.2" height="15.0" fill="rgb(212,26,16)" rx="2" ry="2" />
<text  x="332.42" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1019.9" y="1973" width="0.2" height="15.0" fill="rgb(252,3,42)" rx="2" ry="2" />
<text  x="1022.87" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="179.1" y="1989" width="0.2" height="15.0" fill="rgb(226,190,37)" rx="2" ry="2" />
<text  x="182.14" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (22 samples, 0.37%)</title><rect x="378.8" y="1925" width="4.4" height="15.0" fill="rgb(214,191,29)" rx="2" ry="2" />
<text  x="381.85" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="899.6" y="1669" width="0.2" height="15.0" fill="rgb(220,9,54)" rx="2" ry="2" />
<text  x="902.57" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="493.2" y="1925" width="0.2" height="15.0" fill="rgb(241,209,7)" rx="2" ry="2" />
<text  x="496.20" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="1072.1" y="1589" width="0.2" height="15.0" fill="rgb(240,102,40)" rx="2" ry="2" />
<text  x="1075.08" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="743.1" y="1589" width="0.2" height="15.0" fill="rgb(214,73,26)" rx="2" ry="2" />
<text  x="746.13" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="775.7" y="1253" width="0.2" height="15.0" fill="rgb(223,209,33)" rx="2" ry="2" />
<text  x="778.69" y="1263.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (1 samples, 0.02%)</title><rect x="197.0" y="2021" width="0.2" height="15.0" fill="rgb(211,215,40)" rx="2" ry="2" />
<text  x="200.01" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1054.0" y="1861" width="0.2" height="15.0" fill="rgb(235,57,36)" rx="2" ry="2" />
<text  x="1057.01" y="1871.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="939.7" y="1941" width="0.2" height="15.0" fill="rgb(229,45,32)" rx="2" ry="2" />
<text  x="942.67" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="294.3" y="1685" width="0.2" height="15.0" fill="rgb(225,2,9)" rx="2" ry="2" />
<text  x="297.28" y="1695.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (57 samples, 0.96%)</title><rect x="602.4" y="1941" width="11.3" height="15.0" fill="rgb(235,7,13)" rx="2" ry="2" />
<text  x="605.38" y="1951.5" ></text>
</g>
<g >
<title>security_socket_getsockname (3 samples, 0.05%)</title><rect x="595.2" y="1861" width="0.6" height="15.0" fill="rgb(240,128,50)" rx="2" ry="2" />
<text  x="598.24" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="97.0" y="1973" width="0.2" height="15.0" fill="rgb(232,112,27)" rx="2" ry="2" />
<text  x="99.95" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="33.2" y="1957" width="0.2" height="15.0" fill="rgb(250,33,50)" rx="2" ry="2" />
<text  x="36.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1765" width="0.2" height="15.0" fill="rgb(217,197,30)" rx="2" ry="2" />
<text  x="267.70" y="1775.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="35.6" y="1973" width="0.2" height="15.0" fill="rgb(211,124,32)" rx="2" ry="2" />
<text  x="38.61" y="1983.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="825.1" y="1525" width="0.2" height="15.0" fill="rgb(251,220,40)" rx="2" ry="2" />
<text  x="828.12" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="917.6" y="1861" width="0.2" height="15.0" fill="rgb(242,110,50)" rx="2" ry="2" />
<text  x="920.63" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="167.0" y="1781" width="0.2" height="15.0" fill="rgb(215,79,42)" rx="2" ry="2" />
<text  x="170.03" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (5 samples, 0.08%)</title><rect x="844.6" y="1941" width="1.0" height="15.0" fill="rgb(205,228,29)" rx="2" ry="2" />
<text  x="847.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="95.0" y="1925" width="0.2" height="15.0" fill="rgb(222,181,53)" rx="2" ry="2" />
<text  x="97.97" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="136.9" y="37" width="0.2" height="15.0" fill="rgb(250,47,35)" rx="2" ry="2" />
<text  x="139.85" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="582.5" y="1957" width="1.0" height="15.0" fill="rgb(211,66,29)" rx="2" ry="2" />
<text  x="585.53" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1048.5" y="1893" width="0.2" height="15.0" fill="rgb(254,112,8)" rx="2" ry="2" />
<text  x="1051.46" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="955.2" y="2005" width="0.1" height="15.0" fill="rgb(211,189,12)" rx="2" ry="2" />
<text  x="958.15" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="706.0" y="1797" width="0.2" height="15.0" fill="rgb(206,97,7)" rx="2" ry="2" />
<text  x="709.01" y="1807.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="392.5" y="1957" width="0.8" height="15.0" fill="rgb(238,16,35)" rx="2" ry="2" />
<text  x="395.55" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1144.5" y="1989" width="0.2" height="15.0" fill="rgb(227,1,44)" rx="2" ry="2" />
<text  x="1147.54" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="526.0" y="1973" width="1.1" height="15.0" fill="rgb(224,3,7)" rx="2" ry="2" />
<text  x="528.95" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="119.2" y="149" width="15.3" height="15.0" fill="rgb(207,106,51)" rx="2" ry="2" />
<text  x="122.19" y="159.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.5" y="1973" width="0.2" height="15.0" fill="rgb(248,93,37)" rx="2" ry="2" />
<text  x="160.50" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="628.4" y="1909" width="0.2" height="15.0" fill="rgb(210,64,15)" rx="2" ry="2" />
<text  x="631.39" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="247.4" y="1733" width="0.2" height="15.0" fill="rgb(209,2,22)" rx="2" ry="2" />
<text  x="250.43" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1002.8" y="2005" width="0.2" height="15.0" fill="rgb(211,100,36)" rx="2" ry="2" />
<text  x="1005.80" y="2015.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (202 samples, 3.40%)</title><rect x="290.3" y="1861" width="40.1" height="15.0" fill="rgb(212,197,11)" rx="2" ry="2" />
<text  x="293.31" y="1871.5" >__t..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="317.5" y="1813" width="0.2" height="15.0" fill="rgb(213,211,5)" rx="2" ry="2" />
<text  x="320.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="119.2" y="197" width="15.9" height="15.0" fill="rgb(217,172,24)" rx="2" ry="2" />
<text  x="122.19" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="398.5" y="1909" width="0.2" height="15.0" fill="rgb(229,203,19)" rx="2" ry="2" />
<text  x="401.50" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="825.5" y="1477" width="0.2" height="15.0" fill="rgb(219,12,28)" rx="2" ry="2" />
<text  x="828.52" y="1487.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="404.3" y="1877" width="0.4" height="15.0" fill="rgb(246,181,4)" rx="2" ry="2" />
<text  x="407.26" y="1887.5" ></text>
</g>
<g >
<title>__init_waitqueue_head (1 samples, 0.02%)</title><rect x="72.1" y="1637" width="0.2" height="15.0" fill="rgb(211,157,36)" rx="2" ry="2" />
<text  x="75.14" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="706.0" y="1845" width="0.2" height="15.0" fill="rgb(231,224,46)" rx="2" ry="2" />
<text  x="709.01" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="264.7" y="1909" width="0.2" height="15.0" fill="rgb(220,95,48)" rx="2" ry="2" />
<text  x="267.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (3 samples, 0.05%)</title><rect x="910.7" y="2037" width="0.6" height="15.0" fill="rgb(222,1,45)" rx="2" ry="2" />
<text  x="913.68" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="844.2" y="1813" width="0.2" height="15.0" fill="rgb(208,192,30)" rx="2" ry="2" />
<text  x="847.18" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="543.8" y="1973" width="0.2" height="15.0" fill="rgb(252,187,2)" rx="2" ry="2" />
<text  x="546.82" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="844.4" y="1909" width="0.2" height="15.0" fill="rgb(249,197,51)" rx="2" ry="2" />
<text  x="847.38" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (15 samples, 0.25%)</title><rect x="68.4" y="1925" width="2.9" height="15.0" fill="rgb(238,162,50)" rx="2" ry="2" />
<text  x="71.36" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="990.5" y="1909" width="0.2" height="15.0" fill="rgb(237,5,17)" rx="2" ry="2" />
<text  x="993.49" y="1919.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="622.8" y="1973" width="0.2" height="15.0" fill="rgb(220,63,16)" rx="2" ry="2" />
<text  x="625.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="458.7" y="1733" width="0.2" height="15.0" fill="rgb(225,29,10)" rx="2" ry="2" />
<text  x="461.65" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="662.3" y="1797" width="0.2" height="15.0" fill="rgb(251,213,49)" rx="2" ry="2" />
<text  x="665.34" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1144.3" y="1989" width="0.2" height="15.0" fill="rgb(245,163,0)" rx="2" ry="2" />
<text  x="1147.34" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="582.9" y="1909" width="0.4" height="15.0" fill="rgb(223,223,6)" rx="2" ry="2" />
<text  x="585.93" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1181.7" y="2021" width="0.2" height="15.0" fill="rgb(235,136,3)" rx="2" ry="2" />
<text  x="1184.66" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="371.7" y="1925" width="0.2" height="15.0" fill="rgb(253,199,40)" rx="2" ry="2" />
<text  x="374.70" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (38 samples, 0.64%)</title><rect x="188.9" y="2005" width="7.5" height="15.0" fill="rgb(219,139,9)" rx="2" ry="2" />
<text  x="191.87" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="157.5" y="1525" width="0.2" height="15.0" fill="rgb(236,64,3)" rx="2" ry="2" />
<text  x="160.50" y="1535.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="825.5" y="1461" width="0.2" height="15.0" fill="rgb(226,183,5)" rx="2" ry="2" />
<text  x="828.52" y="1471.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="156.9" y="1989" width="0.2" height="15.0" fill="rgb(235,219,43)" rx="2" ry="2" />
<text  x="159.90" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (17 samples, 0.29%)</title><rect x="957.5" y="1989" width="3.4" height="15.0" fill="rgb(210,179,23)" rx="2" ry="2" />
<text  x="960.53" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="624.0" y="1973" width="0.2" height="15.0" fill="rgb(243,21,40)" rx="2" ry="2" />
<text  x="627.02" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="998.8" y="1957" width="0.4" height="15.0" fill="rgb(225,81,21)" rx="2" ry="2" />
<text  x="1001.83" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (3 samples, 0.05%)</title><rect x="632.2" y="1989" width="0.6" height="15.0" fill="rgb(221,61,0)" rx="2" ry="2" />
<text  x="635.16" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1144.5" y="1973" width="0.2" height="15.0" fill="rgb(249,62,50)" rx="2" ry="2" />
<text  x="1147.54" y="1983.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="825.1" y="1573" width="0.2" height="15.0" fill="rgb(209,57,43)" rx="2" ry="2" />
<text  x="828.12" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="408.4" y="1733" width="0.2" height="15.0" fill="rgb(226,70,54)" rx="2" ry="2" />
<text  x="411.43" y="1743.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="118.0" y="1717" width="0.2" height="15.0" fill="rgb(245,178,23)" rx="2" ry="2" />
<text  x="120.99" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1150.3" y="1941" width="0.2" height="15.0" fill="rgb(246,107,13)" rx="2" ry="2" />
<text  x="1153.30" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="104.9" y="1829" width="0.2" height="15.0" fill="rgb(211,74,34)" rx="2" ry="2" />
<text  x="107.89" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="630.6" y="1989" width="1.2" height="15.0" fill="rgb(218,188,38)" rx="2" ry="2" />
<text  x="633.57" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="376.7" y="1925" width="0.2" height="15.0" fill="rgb(246,82,51)" rx="2" ry="2" />
<text  x="379.67" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (8 samples, 0.13%)</title><rect x="115.8" y="2037" width="1.6" height="15.0" fill="rgb(215,89,41)" rx="2" ry="2" />
<text  x="118.81" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="213.7" y="1989" width="0.2" height="15.0" fill="rgb(205,90,28)" rx="2" ry="2" />
<text  x="216.68" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="156.3" y="1733" width="0.2" height="15.0" fill="rgb(254,205,39)" rx="2" ry="2" />
<text  x="159.31" y="1743.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="315.9" y="1717" width="0.2" height="15.0" fill="rgb(247,97,48)" rx="2" ry="2" />
<text  x="318.92" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="630.4" y="1781" width="0.2" height="15.0" fill="rgb(239,4,25)" rx="2" ry="2" />
<text  x="633.37" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="940.5" y="1829" width="0.2" height="15.0" fill="rgb(254,23,53)" rx="2" ry="2" />
<text  x="943.46" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="140.2" y="1621" width="0.2" height="15.0" fill="rgb(242,116,8)" rx="2" ry="2" />
<text  x="143.23" y="1631.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_device (1 samples, 0.02%)</title><rect x="505.5" y="1797" width="0.2" height="15.0" fill="rgb(250,40,43)" rx="2" ry="2" />
<text  x="508.50" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="606.9" y="1893" width="0.2" height="15.0" fill="rgb(205,120,47)" rx="2" ry="2" />
<text  x="609.95" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="136.1" y="37" width="0.2" height="15.0" fill="rgb(246,138,43)" rx="2" ry="2" />
<text  x="139.06" y="47.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.2" y="1925" width="0.8" height="15.0" fill="rgb(231,106,6)" rx="2" ry="2" />
<text  x="14.19" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1002.4" y="1845" width="0.2" height="15.0" fill="rgb(211,97,37)" rx="2" ry="2" />
<text  x="1005.40" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.2" y="1829" width="0.8" height="15.0" fill="rgb(205,37,32)" rx="2" ry="2" />
<text  x="14.19" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="196.4" y="1989" width="0.2" height="15.0" fill="rgb(205,126,46)" rx="2" ry="2" />
<text  x="199.41" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.92%)</title><rect x="118.2" y="1701" width="22.6" height="15.0" fill="rgb(211,148,37)" rx="2" ry="2" />
<text  x="121.19" y="1711.5" >[..</text>
</g>
<g >
<title>@plt (1 samples, 0.02%)</title><rect x="208.3" y="2021" width="0.2" height="15.0" fill="rgb(235,209,36)" rx="2" ry="2" />
<text  x="211.32" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="491.8" y="1685" width="0.2" height="15.0" fill="rgb(253,24,40)" rx="2" ry="2" />
<text  x="494.81" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="196.4" y="2005" width="0.2" height="15.0" fill="rgb(241,85,52)" rx="2" ry="2" />
<text  x="199.41" y="2015.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="775.7" y="1301" width="0.2" height="15.0" fill="rgb(232,93,0)" rx="2" ry="2" />
<text  x="778.69" y="1311.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="878.9" y="1877" width="0.2" height="15.0" fill="rgb(215,1,25)" rx="2" ry="2" />
<text  x="881.92" y="1887.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(250,200,29)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1002.4" y="1877" width="0.2" height="15.0" fill="rgb(244,85,31)" rx="2" ry="2" />
<text  x="1005.40" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="459.6" y="1813" width="0.2" height="15.0" fill="rgb(214,87,35)" rx="2" ry="2" />
<text  x="462.65" y="1823.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1054.0" y="1813" width="0.2" height="15.0" fill="rgb(212,101,42)" rx="2" ry="2" />
<text  x="1057.01" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="1178.3" y="2053" width="1.2" height="15.0" fill="rgb(252,78,42)" rx="2" ry="2" />
<text  x="1181.29" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="350.7" y="2005" width="0.2" height="15.0" fill="rgb(207,73,51)" rx="2" ry="2" />
<text  x="353.66" y="2015.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.2" y="1973" width="0.8" height="15.0" fill="rgb(219,98,47)" rx="2" ry="2" />
<text  x="14.19" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1172.7" y="1717" width="0.2" height="15.0" fill="rgb(239,138,10)" rx="2" ry="2" />
<text  x="1175.73" y="1727.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="772.7" y="1493" width="0.2" height="15.0" fill="rgb(242,58,8)" rx="2" ry="2" />
<text  x="775.71" y="1503.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="1182.1" y="2053" width="0.2" height="15.0" fill="rgb(232,15,17)" rx="2" ry="2" />
<text  x="1185.06" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="160.9" y="1925" width="0.2" height="15.0" fill="rgb(221,174,0)" rx="2" ry="2" />
<text  x="163.87" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="706.0" y="1589" width="0.2" height="15.0" fill="rgb(253,74,33)" rx="2" ry="2" />
<text  x="709.01" y="1599.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="885.1" y="1877" width="0.2" height="15.0" fill="rgb(248,212,24)" rx="2" ry="2" />
<text  x="888.07" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="136.7" y="245" width="0.2" height="15.0" fill="rgb(242,14,29)" rx="2" ry="2" />
<text  x="139.66" y="255.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="646.1" y="1925" width="0.2" height="15.0" fill="rgb(240,2,30)" rx="2" ry="2" />
<text  x="649.06" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="196.4" y="1573" width="0.2" height="15.0" fill="rgb(217,142,51)" rx="2" ry="2" />
<text  x="199.41" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1189.4" y="2005" width="0.2" height="15.0" fill="rgb(238,77,9)" rx="2" ry="2" />
<text  x="1192.40" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1019.9" y="1813" width="0.2" height="15.0" fill="rgb(240,126,52)" rx="2" ry="2" />
<text  x="1022.87" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="112.2" y="2021" width="0.2" height="15.0" fill="rgb(205,45,43)" rx="2" ry="2" />
<text  x="115.24" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="289.3" y="1621" width="0.2" height="15.0" fill="rgb(230,145,12)" rx="2" ry="2" />
<text  x="292.32" y="1631.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="562.5" y="1973" width="3.0" height="15.0" fill="rgb(246,110,41)" rx="2" ry="2" />
<text  x="565.48" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="524.4" y="1973" width="1.0" height="15.0" fill="rgb(240,224,36)" rx="2" ry="2" />
<text  x="527.36" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="157.5" y="1653" width="0.2" height="15.0" fill="rgb(211,109,13)" rx="2" ry="2" />
<text  x="160.50" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="973.8" y="1957" width="0.2" height="15.0" fill="rgb(234,176,41)" rx="2" ry="2" />
<text  x="976.81" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="936.5" y="1669" width="0.2" height="15.0" fill="rgb(234,9,11)" rx="2" ry="2" />
<text  x="939.49" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (17 samples, 0.29%)</title><rect x="608.5" y="1877" width="3.4" height="15.0" fill="rgb(205,138,3)" rx="2" ry="2" />
<text  x="611.54" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="853.9" y="1557" width="0.2" height="15.0" fill="rgb(246,50,17)" rx="2" ry="2" />
<text  x="856.91" y="1567.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="428.5" y="2005" width="0.2" height="15.0" fill="rgb(247,206,34)" rx="2" ry="2" />
<text  x="431.48" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="283.0" y="1589" width="0.2" height="15.0" fill="rgb(210,147,47)" rx="2" ry="2" />
<text  x="285.96" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="803.1" y="1589" width="0.2" height="15.0" fill="rgb(220,46,22)" rx="2" ry="2" />
<text  x="806.09" y="1599.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1154.3" y="1685" width="0.2" height="15.0" fill="rgb(229,171,44)" rx="2" ry="2" />
<text  x="1157.27" y="1695.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="161.3" y="1861" width="0.2" height="15.0" fill="rgb(225,209,32)" rx="2" ry="2" />
<text  x="164.27" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (738 samples, 12.42%)</title><rect x="711.2" y="1989" width="146.5" height="15.0" fill="rgb(244,15,7)" rx="2" ry="2" />
<text  x="714.17" y="1999.5" >facebook::memcache..</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="84.8" y="1957" width="0.6" height="15.0" fill="rgb(242,79,4)" rx="2" ry="2" />
<text  x="87.84" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="775.5" y="1333" width="0.4" height="15.0" fill="rgb(217,118,2)" rx="2" ry="2" />
<text  x="778.49" y="1343.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="34.4" y="1941" width="0.2" height="15.0" fill="rgb(239,56,16)" rx="2" ry="2" />
<text  x="37.42" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="138.8" y="1461" width="0.2" height="15.0" fill="rgb(213,163,40)" rx="2" ry="2" />
<text  x="141.84" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (20 samples, 0.34%)</title><rect x="181.5" y="2021" width="4.0" height="15.0" fill="rgb(242,93,21)" rx="2" ry="2" />
<text  x="184.52" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1048.5" y="1989" width="0.6" height="15.0" fill="rgb(217,145,49)" rx="2" ry="2" />
<text  x="1051.46" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="136.7" y="133" width="0.2" height="15.0" fill="rgb(228,153,31)" rx="2" ry="2" />
<text  x="139.66" y="143.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="404.5" y="1861" width="0.2" height="15.0" fill="rgb(231,133,7)" rx="2" ry="2" />
<text  x="407.46" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="894.6" y="1941" width="0.2" height="15.0" fill="rgb(251,130,32)" rx="2" ry="2" />
<text  x="897.60" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="81.3" y="1909" width="0.4" height="15.0" fill="rgb(205,165,48)" rx="2" ry="2" />
<text  x="84.27" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="168.0" y="1829" width="0.2" height="15.0" fill="rgb(252,142,43)" rx="2" ry="2" />
<text  x="171.02" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="170.0" y="1861" width="0.4" height="15.0" fill="rgb(239,110,50)" rx="2" ry="2" />
<text  x="173.01" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="169.2" y="1893" width="0.2" height="15.0" fill="rgb(252,27,37)" rx="2" ry="2" />
<text  x="172.21" y="1903.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="835.2" y="1909" width="0.4" height="15.0" fill="rgb(210,160,43)" rx="2" ry="2" />
<text  x="838.25" y="1919.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1087.2" y="1909" width="0.2" height="15.0" fill="rgb(224,134,22)" rx="2" ry="2" />
<text  x="1090.17" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="92.2" y="1925" width="0.2" height="15.0" fill="rgb(250,179,22)" rx="2" ry="2" />
<text  x="95.19" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="917.6" y="1893" width="0.2" height="15.0" fill="rgb(252,12,0)" rx="2" ry="2" />
<text  x="920.63" y="1903.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (5 samples, 0.08%)</title><rect x="470.8" y="1893" width="1.0" height="15.0" fill="rgb(216,185,16)" rx="2" ry="2" />
<text  x="473.76" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="842.6" y="1813" width="0.2" height="15.0" fill="rgb(206,195,8)" rx="2" ry="2" />
<text  x="845.59" y="1823.5" ></text>
</g>
<g >
<title>tcp_try_fastopen (1 samples, 0.02%)</title><rect x="213.7" y="1717" width="0.2" height="15.0" fill="rgb(214,157,34)" rx="2" ry="2" />
<text  x="216.68" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="79.9" y="1829" width="0.4" height="15.0" fill="rgb(210,13,34)" rx="2" ry="2" />
<text  x="82.88" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="235.1" y="1845" width="0.2" height="15.0" fill="rgb(227,128,45)" rx="2" ry="2" />
<text  x="238.12" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="898.2" y="2021" width="0.2" height="15.0" fill="rgb(215,217,53)" rx="2" ry="2" />
<text  x="901.18" y="2031.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.2" y="2005" width="0.8" height="15.0" fill="rgb(222,44,37)" rx="2" ry="2" />
<text  x="14.19" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="157.5" y="1845" width="0.2" height="15.0" fill="rgb(212,22,39)" rx="2" ry="2" />
<text  x="160.50" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="525.0" y="1941" width="0.4" height="15.0" fill="rgb(210,109,21)" rx="2" ry="2" />
<text  x="527.96" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1051.2" y="1973" width="0.2" height="15.0" fill="rgb(233,201,34)" rx="2" ry="2" />
<text  x="1054.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="904.1" y="1973" width="0.6" height="15.0" fill="rgb(243,157,4)" rx="2" ry="2" />
<text  x="907.13" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="847.2" y="1909" width="0.4" height="15.0" fill="rgb(235,127,41)" rx="2" ry="2" />
<text  x="850.16" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="250.2" y="1861" width="0.2" height="15.0" fill="rgb(231,31,33)" rx="2" ry="2" />
<text  x="253.21" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="694.1" y="1845" width="0.2" height="15.0" fill="rgb(242,172,6)" rx="2" ry="2" />
<text  x="697.10" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1153.3" y="2053" width="0.2" height="15.0" fill="rgb(232,105,13)" rx="2" ry="2" />
<text  x="1156.27" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="157.5" y="1733" width="0.2" height="15.0" fill="rgb(217,24,23)" rx="2" ry="2" />
<text  x="160.50" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (732 samples, 12.31%)</title><rect x="712.2" y="1973" width="145.3" height="15.0" fill="rgb(245,125,54)" rx="2" ry="2" />
<text  x="715.16" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="187.9" y="1989" width="0.2" height="15.0" fill="rgb(251,95,4)" rx="2" ry="2" />
<text  x="190.87" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="570.2" y="2005" width="0.2" height="15.0" fill="rgb(249,135,22)" rx="2" ry="2" />
<text  x="573.22" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="104.9" y="1861" width="0.2" height="15.0" fill="rgb(222,62,52)" rx="2" ry="2" />
<text  x="107.89" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="620.2" y="2021" width="2.4" height="15.0" fill="rgb(224,49,2)" rx="2" ry="2" />
<text  x="623.25" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="140.8" y="1701" width="0.2" height="15.0" fill="rgb(213,135,53)" rx="2" ry="2" />
<text  x="143.82" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="77.5" y="1893" width="1.2" height="15.0" fill="rgb(244,211,42)" rx="2" ry="2" />
<text  x="80.50" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="213.7" y="1733" width="0.2" height="15.0" fill="rgb(241,172,35)" rx="2" ry="2" />
<text  x="216.68" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="911.3" y="2021" width="0.6" height="15.0" fill="rgb(213,33,41)" rx="2" ry="2" />
<text  x="914.28" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="940.5" y="1925" width="0.2" height="15.0" fill="rgb(233,181,37)" rx="2" ry="2" />
<text  x="943.46" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="408.4" y="1861" width="0.2" height="15.0" fill="rgb(225,2,16)" rx="2" ry="2" />
<text  x="411.43" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="676.2" y="1765" width="0.2" height="15.0" fill="rgb(236,115,27)" rx="2" ry="2" />
<text  x="679.23" y="1775.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="891.4" y="1925" width="0.2" height="15.0" fill="rgb(250,92,21)" rx="2" ry="2" />
<text  x="894.43" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="80.3" y="1829" width="0.2" height="15.0" fill="rgb(224,148,6)" rx="2" ry="2" />
<text  x="83.28" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="193.6" y="1957" width="0.4" height="15.0" fill="rgb(207,164,54)" rx="2" ry="2" />
<text  x="196.63" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1052.0" y="1861" width="0.2" height="15.0" fill="rgb(239,49,37)" rx="2" ry="2" />
<text  x="1055.03" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="289.3" y="1717" width="0.2" height="15.0" fill="rgb(250,62,48)" rx="2" ry="2" />
<text  x="292.32" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="419.0" y="1861" width="0.1" height="15.0" fill="rgb(248,105,35)" rx="2" ry="2" />
<text  x="421.95" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="886.1" y="1877" width="0.6" height="15.0" fill="rgb(216,165,11)" rx="2" ry="2" />
<text  x="889.07" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="244.8" y="1829" width="0.6" height="15.0" fill="rgb(230,207,27)" rx="2" ry="2" />
<text  x="247.85" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="124.9" y="37" width="0.2" height="15.0" fill="rgb(225,204,30)" rx="2" ry="2" />
<text  x="127.94" y="47.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="470.6" y="1893" width="0.2" height="15.0" fill="rgb(206,10,51)" rx="2" ry="2" />
<text  x="473.57" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="822.9" y="1813" width="0.2" height="15.0" fill="rgb(213,125,3)" rx="2" ry="2" />
<text  x="825.94" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (461 samples, 7.76%)</title><rect x="1035.4" y="2037" width="91.5" height="15.0" fill="rgb(248,18,8)" rx="2" ry="2" />
<text  x="1038.35" y="2047.5" >entry_SYSC..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="842.6" y="1765" width="0.2" height="15.0" fill="rgb(225,46,37)" rx="2" ry="2" />
<text  x="845.59" y="1775.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="271.5" y="1893" width="0.5" height="15.0" fill="rgb(233,91,14)" rx="2" ry="2" />
<text  x="274.45" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="740.9" y="1653" width="0.2" height="15.0" fill="rgb(223,56,12)" rx="2" ry="2" />
<text  x="743.95" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="856.7" y="1829" width="0.2" height="15.0" fill="rgb(213,5,7)" rx="2" ry="2" />
<text  x="859.69" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="637.1" y="1685" width="0.2" height="15.0" fill="rgb(236,32,38)" rx="2" ry="2" />
<text  x="640.12" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1019.9" y="2021" width="0.2" height="15.0" fill="rgb(253,64,2)" rx="2" ry="2" />
<text  x="1022.87" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1086.6" y="1861" width="0.2" height="15.0" fill="rgb(216,47,40)" rx="2" ry="2" />
<text  x="1089.57" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="114.8" y="1701" width="0.2" height="15.0" fill="rgb(247,229,34)" rx="2" ry="2" />
<text  x="117.82" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="73.7" y="1941" width="0.2" height="15.0" fill="rgb(248,62,24)" rx="2" ry="2" />
<text  x="76.72" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (2 samples, 0.03%)</title><rect x="522.6" y="1989" width="0.4" height="15.0" fill="rgb(239,209,17)" rx="2" ry="2" />
<text  x="525.58" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="294.3" y="1717" width="0.2" height="15.0" fill="rgb(210,68,37)" rx="2" ry="2" />
<text  x="297.28" y="1727.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (16 samples, 0.27%)</title><rect x="280.8" y="1845" width="3.2" height="15.0" fill="rgb(252,221,44)" rx="2" ry="2" />
<text  x="283.78" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="693.7" y="1845" width="0.2" height="15.0" fill="rgb(248,33,17)" rx="2" ry="2" />
<text  x="696.70" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="863.4" y="1989" width="1.4" height="15.0" fill="rgb(254,85,19)" rx="2" ry="2" />
<text  x="866.44" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1156.5" y="1877" width="0.1" height="15.0" fill="rgb(248,33,7)" rx="2" ry="2" />
<text  x="1159.45" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="77.9" y="1877" width="0.8" height="15.0" fill="rgb(226,136,51)" rx="2" ry="2" />
<text  x="80.89" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="659.2" y="1733" width="0.2" height="15.0" fill="rgb(224,148,44)" rx="2" ry="2" />
<text  x="662.16" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="913.9" y="1973" width="0.2" height="15.0" fill="rgb(249,62,33)" rx="2" ry="2" />
<text  x="916.86" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="510.3" y="1765" width="0.2" height="15.0" fill="rgb(214,43,36)" rx="2" ry="2" />
<text  x="513.27" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="167.0" y="1717" width="0.2" height="15.0" fill="rgb(251,105,46)" rx="2" ry="2" />
<text  x="170.03" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1079.0" y="1829" width="0.4" height="15.0" fill="rgb(233,188,40)" rx="2" ry="2" />
<text  x="1082.03" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1172.7" y="1861" width="0.2" height="15.0" fill="rgb(229,204,43)" rx="2" ry="2" />
<text  x="1175.73" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1052.0" y="1957" width="0.2" height="15.0" fill="rgb(224,11,47)" rx="2" ry="2" />
<text  x="1055.03" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (30 samples, 0.50%)</title><rect x="537.7" y="1989" width="5.9" height="15.0" fill="rgb(242,53,2)" rx="2" ry="2" />
<text  x="540.66" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="601.2" y="2005" width="0.2" height="15.0" fill="rgb(231,189,44)" rx="2" ry="2" />
<text  x="604.19" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (94 samples, 1.58%)</title><rect x="582.1" y="2005" width="18.7" height="15.0" fill="rgb(220,203,1)" rx="2" ry="2" />
<text  x="585.13" y="2015.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="968.1" y="1685" width="0.2" height="15.0" fill="rgb(246,16,18)" rx="2" ry="2" />
<text  x="971.06" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="39.8" y="1877" width="0.2" height="15.0" fill="rgb(211,46,34)" rx="2" ry="2" />
<text  x="42.78" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="940.5" y="1813" width="0.2" height="15.0" fill="rgb(245,200,54)" rx="2" ry="2" />
<text  x="943.46" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="264.7" y="1989" width="0.2" height="15.0" fill="rgb(213,175,40)" rx="2" ry="2" />
<text  x="267.70" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="662.3" y="1765" width="0.2" height="15.0" fill="rgb(243,36,1)" rx="2" ry="2" />
<text  x="665.34" y="1775.5" ></text>
</g>
<g >
<title>tcp_setsockopt (3 samples, 0.05%)</title><rect x="695.3" y="1925" width="0.6" height="15.0" fill="rgb(211,203,19)" rx="2" ry="2" />
<text  x="698.29" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1086.6" y="1877" width="0.2" height="15.0" fill="rgb(226,16,43)" rx="2" ry="2" />
<text  x="1089.57" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="932.9" y="1701" width="0.6" height="15.0" fill="rgb(237,62,2)" rx="2" ry="2" />
<text  x="935.92" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="206.9" y="1765" width="0.2" height="15.0" fill="rgb(215,188,23)" rx="2" ry="2" />
<text  x="209.93" y="1775.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="310.4" y="1605" width="0.2" height="15.0" fill="rgb(224,102,48)" rx="2" ry="2" />
<text  x="313.36" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="565" width="17.9" height="15.0" fill="rgb(205,123,36)" rx="2" ry="2" />
<text  x="122.19" y="575.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="899.6" y="1701" width="0.2" height="15.0" fill="rgb(211,58,43)" rx="2" ry="2" />
<text  x="902.57" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1002.4" y="1957" width="0.2" height="15.0" fill="rgb(238,112,25)" rx="2" ry="2" />
<text  x="1005.40" y="1967.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="284.4" y="1829" width="0.2" height="15.0" fill="rgb(232,16,28)" rx="2" ry="2" />
<text  x="287.35" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="956.3" y="1941" width="0.2" height="15.0" fill="rgb(213,32,35)" rx="2" ry="2" />
<text  x="959.34" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="660.2" y="1989" width="0.1" height="15.0" fill="rgb(240,161,32)" rx="2" ry="2" />
<text  x="663.15" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="706.2" y="2037" width="0.2" height="15.0" fill="rgb(206,127,26)" rx="2" ry="2" />
<text  x="709.21" y="2047.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="853.7" y="1861" width="0.2" height="15.0" fill="rgb(241,201,46)" rx="2" ry="2" />
<text  x="856.71" y="1871.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="676.2" y="1573" width="0.2" height="15.0" fill="rgb(216,111,32)" rx="2" ry="2" />
<text  x="679.23" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="247.8" y="1845" width="0.2" height="15.0" fill="rgb(212,56,30)" rx="2" ry="2" />
<text  x="250.83" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="955.9" y="1893" width="0.2" height="15.0" fill="rgb(220,128,27)" rx="2" ry="2" />
<text  x="958.95" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="112.6" y="2037" width="0.2" height="15.0" fill="rgb(218,192,28)" rx="2" ry="2" />
<text  x="115.63" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="93.0" y="1893" width="0.2" height="15.0" fill="rgb(205,81,34)" rx="2" ry="2" />
<text  x="95.98" y="1903.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="822.7" y="1813" width="0.2" height="15.0" fill="rgb(212,119,29)" rx="2" ry="2" />
<text  x="825.74" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="136.3" y="101" width="0.2" height="15.0" fill="rgb(240,148,2)" rx="2" ry="2" />
<text  x="139.26" y="111.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="367.5" y="1941" width="0.4" height="15.0" fill="rgb(252,166,13)" rx="2" ry="2" />
<text  x="370.53" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="61.0" y="1765" width="0.2" height="15.0" fill="rgb(208,125,0)" rx="2" ry="2" />
<text  x="64.02" y="1775.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="643.3" y="1973" width="0.2" height="15.0" fill="rgb(231,58,24)" rx="2" ry="2" />
<text  x="646.28" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (64 samples, 1.08%)</title><rect x="303.0" y="1717" width="12.7" height="15.0" fill="rgb(245,88,50)" rx="2" ry="2" />
<text  x="306.01" y="1727.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="866.0" y="1989" width="0.4" height="15.0" fill="rgb(205,196,5)" rx="2" ry="2" />
<text  x="869.02" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="109.3" y="2005" width="0.4" height="15.0" fill="rgb(244,103,28)" rx="2" ry="2" />
<text  x="112.26" y="2015.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (4 samples, 0.07%)</title><rect x="30.4" y="1989" width="0.8" height="15.0" fill="rgb(223,205,11)" rx="2" ry="2" />
<text  x="33.45" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="853.5" y="1829" width="0.2" height="15.0" fill="rgb(236,219,9)" rx="2" ry="2" />
<text  x="856.51" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="733.4" y="1685" width="0.4" height="15.0" fill="rgb(233,5,28)" rx="2" ry="2" />
<text  x="736.41" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="160.5" y="1941" width="0.2" height="15.0" fill="rgb(222,208,25)" rx="2" ry="2" />
<text  x="163.48" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.7" y="1829" width="0.2" height="15.0" fill="rgb(250,109,1)" rx="2" ry="2" />
<text  x="887.68" y="1839.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="378.7" y="1925" width="0.1" height="15.0" fill="rgb(214,131,3)" rx="2" ry="2" />
<text  x="381.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="842.6" y="1637" width="0.2" height="15.0" fill="rgb(223,61,49)" rx="2" ry="2" />
<text  x="845.59" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="755.4" y="1541" width="0.2" height="15.0" fill="rgb(225,121,2)" rx="2" ry="2" />
<text  x="758.44" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="857.3" y="1749" width="0.2" height="15.0" fill="rgb(221,196,22)" rx="2" ry="2" />
<text  x="860.28" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="343.3" y="1925" width="0.2" height="15.0" fill="rgb(238,71,5)" rx="2" ry="2" />
<text  x="346.31" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="143.0" y="1861" width="0.2" height="15.0" fill="rgb(225,148,23)" rx="2" ry="2" />
<text  x="146.01" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="329.0" y="1733" width="0.4" height="15.0" fill="rgb(242,16,45)" rx="2" ry="2" />
<text  x="332.02" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="241.7" y="1749" width="0.2" height="15.0" fill="rgb(252,47,10)" rx="2" ry="2" />
<text  x="244.67" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="844.4" y="1845" width="0.2" height="15.0" fill="rgb(216,47,53)" rx="2" ry="2" />
<text  x="847.38" y="1855.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="538.5" y="1973" width="0.2" height="15.0" fill="rgb(225,91,53)" rx="2" ry="2" />
<text  x="541.46" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="745.9" y="1669" width="0.2" height="15.0" fill="rgb(208,201,29)" rx="2" ry="2" />
<text  x="748.91" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (116 samples, 1.95%)</title><rect x="118.0" y="1733" width="23.0" height="15.0" fill="rgb(207,225,12)" rx="2" ry="2" />
<text  x="120.99" y="1743.5" >[..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="917.4" y="1973" width="0.4" height="15.0" fill="rgb(247,35,8)" rx="2" ry="2" />
<text  x="920.43" y="1983.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="646.1" y="1797" width="0.2" height="15.0" fill="rgb(209,12,52)" rx="2" ry="2" />
<text  x="649.06" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="775.7" y="1285" width="0.2" height="15.0" fill="rgb(229,215,17)" rx="2" ry="2" />
<text  x="778.69" y="1295.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="350.7" y="1797" width="0.2" height="15.0" fill="rgb(253,196,38)" rx="2" ry="2" />
<text  x="353.66" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="676.2" y="1733" width="0.2" height="15.0" fill="rgb(230,225,49)" rx="2" ry="2" />
<text  x="679.23" y="1743.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="667.5" y="1893" width="0.2" height="15.0" fill="rgb(223,90,12)" rx="2" ry="2" />
<text  x="670.50" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="703.8" y="2037" width="0.2" height="15.0" fill="rgb(221,150,29)" rx="2" ry="2" />
<text  x="706.83" y="2047.5" ></text>
</g>
<g >
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="725.7" y="1797" width="0.4" height="15.0" fill="rgb(205,69,0)" rx="2" ry="2" />
<text  x="728.66" y="1807.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="366.1" y="1909" width="0.2" height="15.0" fill="rgb(243,8,6)" rx="2" ry="2" />
<text  x="369.14" y="1919.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="894.4" y="2005" width="0.4" height="15.0" fill="rgb(221,178,41)" rx="2" ry="2" />
<text  x="897.40" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (137 samples, 2.30%)</title><rect x="117.6" y="1957" width="27.2" height="15.0" fill="rgb(246,62,21)" rx="2" ry="2" />
<text  x="120.60" y="1967.5" >[..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="777.3" y="1557" width="0.2" height="15.0" fill="rgb(249,197,30)" rx="2" ry="2" />
<text  x="780.28" y="1567.5" ></text>
</g>
<g >
<title>ipv4_dst_check (5 samples, 0.08%)</title><rect x="316.5" y="1797" width="1.0" height="15.0" fill="rgb(226,143,28)" rx="2" ry="2" />
<text  x="319.51" y="1807.5" ></text>
</g>
<g >
<title>__check_object_size (14 samples, 0.24%)</title><rect x="1094.7" y="1909" width="2.8" height="15.0" fill="rgb(223,199,12)" rx="2" ry="2" />
<text  x="1097.71" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="968.1" y="1877" width="0.2" height="15.0" fill="rgb(226,8,12)" rx="2" ry="2" />
<text  x="971.06" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="343.3" y="1989" width="0.8" height="15.0" fill="rgb(243,72,43)" rx="2" ry="2" />
<text  x="346.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (5 samples, 0.08%)</title><rect x="897.2" y="2037" width="1.0" height="15.0" fill="rgb(244,60,40)" rx="2" ry="2" />
<text  x="900.18" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="527.1" y="1989" width="0.4" height="15.0" fill="rgb(222,116,4)" rx="2" ry="2" />
<text  x="530.14" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="676.2" y="1797" width="0.2" height="15.0" fill="rgb(249,19,41)" rx="2" ry="2" />
<text  x="679.23" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (15 samples, 0.25%)</title><rect x="78.7" y="1957" width="3.0" height="15.0" fill="rgb(216,96,2)" rx="2" ry="2" />
<text  x="81.69" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="628.4" y="1893" width="0.2" height="15.0" fill="rgb(207,8,6)" rx="2" ry="2" />
<text  x="631.39" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="882.3" y="1941" width="1.2" height="15.0" fill="rgb(217,220,27)" rx="2" ry="2" />
<text  x="885.29" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="491.6" y="1957" width="0.2" height="15.0" fill="rgb(239,159,47)" rx="2" ry="2" />
<text  x="494.61" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="627.0" y="1941" width="0.4" height="15.0" fill="rgb(223,71,50)" rx="2" ry="2" />
<text  x="630.00" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="884.5" y="1925" width="0.4" height="15.0" fill="rgb(231,122,9)" rx="2" ry="2" />
<text  x="887.48" y="1935.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="329.4" y="1461" width="0.2" height="15.0" fill="rgb(226,24,17)" rx="2" ry="2" />
<text  x="332.42" y="1471.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="875.3" y="1925" width="0.2" height="15.0" fill="rgb(217,108,11)" rx="2" ry="2" />
<text  x="878.35" y="1935.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="947.4" y="1685" width="0.2" height="15.0" fill="rgb(225,34,2)" rx="2" ry="2" />
<text  x="950.41" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="857.3" y="1893" width="0.2" height="15.0" fill="rgb(239,203,28)" rx="2" ry="2" />
<text  x="860.28" y="1903.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.05%)</title><rect x="402.5" y="1861" width="0.6" height="15.0" fill="rgb(243,144,1)" rx="2" ry="2" />
<text  x="405.47" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="935.3" y="1797" width="0.2" height="15.0" fill="rgb(237,118,14)" rx="2" ry="2" />
<text  x="938.30" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1172.7" y="1829" width="0.2" height="15.0" fill="rgb(228,58,23)" rx="2" ry="2" />
<text  x="1175.73" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="290.5" y="1813" width="0.2" height="15.0" fill="rgb(250,139,6)" rx="2" ry="2" />
<text  x="293.51" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9 samples, 0.15%)</title><rect x="938.1" y="1973" width="1.8" height="15.0" fill="rgb(214,41,40)" rx="2" ry="2" />
<text  x="941.08" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="419.0" y="1797" width="0.1" height="15.0" fill="rgb(206,5,2)" rx="2" ry="2" />
<text  x="421.95" y="1807.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="610.3" y="1733" width="0.2" height="15.0" fill="rgb(252,61,14)" rx="2" ry="2" />
<text  x="613.32" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="665.1" y="1989" width="0.6" height="15.0" fill="rgb(206,104,44)" rx="2" ry="2" />
<text  x="668.11" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="968.1" y="1957" width="0.2" height="15.0" fill="rgb(254,215,47)" rx="2" ry="2" />
<text  x="971.06" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="701.8" y="1973" width="0.4" height="15.0" fill="rgb(237,159,38)" rx="2" ry="2" />
<text  x="704.84" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="615.3" y="1989" width="0.6" height="15.0" fill="rgb(229,192,43)" rx="2" ry="2" />
<text  x="618.29" y="1999.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="591.1" y="1861" width="0.2" height="15.0" fill="rgb(246,75,47)" rx="2" ry="2" />
<text  x="594.07" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="483.3" y="1605" width="0.2" height="15.0" fill="rgb(227,165,27)" rx="2" ry="2" />
<text  x="486.27" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (1 samples, 0.02%)</title><rect x="246.4" y="1925" width="0.2" height="15.0" fill="rgb(250,228,43)" rx="2" ry="2" />
<text  x="249.44" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="899.6" y="1685" width="0.2" height="15.0" fill="rgb(244,0,7)" rx="2" ry="2" />
<text  x="902.57" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (10 samples, 0.17%)</title><rect x="56.9" y="1925" width="1.9" height="15.0" fill="rgb(215,128,52)" rx="2" ry="2" />
<text  x="59.85" y="1935.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="315.7" y="1717" width="0.2" height="15.0" fill="rgb(252,150,14)" rx="2" ry="2" />
<text  x="318.72" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (18 samples, 0.30%)</title><rect x="32.0" y="1989" width="3.6" height="15.0" fill="rgb(210,155,11)" rx="2" ry="2" />
<text  x="35.04" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="983.7" y="1893" width="0.2" height="15.0" fill="rgb(231,92,19)" rx="2" ry="2" />
<text  x="986.74" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="906.9" y="1957" width="0.2" height="15.0" fill="rgb(213,49,26)" rx="2" ry="2" />
<text  x="909.91" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="624.0" y="2005" width="0.2" height="15.0" fill="rgb(228,19,17)" rx="2" ry="2" />
<text  x="627.02" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="490.2" y="1877" width="0.2" height="15.0" fill="rgb(234,51,53)" rx="2" ry="2" />
<text  x="493.22" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="825.1" y="1765" width="0.2" height="15.0" fill="rgb(237,94,14)" rx="2" ry="2" />
<text  x="828.12" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="294.3" y="1797" width="0.2" height="15.0" fill="rgb(225,16,7)" rx="2" ry="2" />
<text  x="297.28" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="114.8" y="1765" width="0.2" height="15.0" fill="rgb(231,32,19)" rx="2" ry="2" />
<text  x="117.82" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="128.1" y="37" width="0.4" height="15.0" fill="rgb(232,195,43)" rx="2" ry="2" />
<text  x="131.12" y="47.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1007.0" y="1989" width="0.6" height="15.0" fill="rgb(213,106,50)" rx="2" ry="2" />
<text  x="1009.97" y="1999.5" ></text>
</g>
<g >
<title>sock_sendmsg (357 samples, 6.01%)</title><rect x="269.5" y="1941" width="70.8" height="15.0" fill="rgb(208,171,6)" rx="2" ry="2" />
<text  x="272.47" y="1951.5" >sock_sen..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="408.0" y="1877" width="0.2" height="15.0" fill="rgb(221,215,40)" rx="2" ry="2" />
<text  x="411.03" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (8 samples, 0.13%)</title><rect x="618.5" y="2037" width="1.6" height="15.0" fill="rgb(238,47,38)" rx="2" ry="2" />
<text  x="621.46" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="562.1" y="1781" width="0.2" height="15.0" fill="rgb(234,184,11)" rx="2" ry="2" />
<text  x="565.08" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="81.9" y="1941" width="0.2" height="15.0" fill="rgb(211,74,45)" rx="2" ry="2" />
<text  x="84.86" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="912.7" y="2037" width="0.2" height="15.0" fill="rgb(228,93,9)" rx="2" ry="2" />
<text  x="915.67" y="2047.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (5 samples, 0.08%)</title><rect x="841.4" y="1925" width="1.0" height="15.0" fill="rgb(241,89,18)" rx="2" ry="2" />
<text  x="844.40" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="825.1" y="1701" width="0.2" height="15.0" fill="rgb(216,189,13)" rx="2" ry="2" />
<text  x="828.12" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="138.0" y="1109" width="0.2" height="15.0" fill="rgb(212,30,6)" rx="2" ry="2" />
<text  x="141.05" y="1119.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1861" width="0.2" height="15.0" fill="rgb(240,200,18)" rx="2" ry="2" />
<text  x="216.68" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="973.0" y="2037" width="0.4" height="15.0" fill="rgb(215,91,38)" rx="2" ry="2" />
<text  x="976.02" y="2047.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="903.5" y="1909" width="0.2" height="15.0" fill="rgb(207,76,23)" rx="2" ry="2" />
<text  x="906.54" y="1919.5" ></text>
</g>
<g >
<title>__fdget (26 samples, 0.44%)</title><rect x="453.7" y="1973" width="5.2" height="15.0" fill="rgb(229,13,16)" rx="2" ry="2" />
<text  x="456.69" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (42 samples, 0.71%)</title><rect x="1107.0" y="1877" width="8.4" height="15.0" fill="rgb(250,35,7)" rx="2" ry="2" />
<text  x="1110.02" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="630.0" y="2005" width="0.2" height="15.0" fill="rgb(227,45,50)" rx="2" ry="2" />
<text  x="632.98" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="857.3" y="1909" width="0.2" height="15.0" fill="rgb(223,43,6)" rx="2" ry="2" />
<text  x="860.28" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="659.4" y="2021" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="662.36" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1149.9" y="1973" width="0.2" height="15.0" fill="rgb(215,64,38)" rx="2" ry="2" />
<text  x="1152.90" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="739.8" y="1461" width="0.2" height="15.0" fill="rgb(215,157,19)" rx="2" ry="2" />
<text  x="742.76" y="1471.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="234.9" y="1861" width="0.4" height="15.0" fill="rgb(217,92,24)" rx="2" ry="2" />
<text  x="237.92" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="739.8" y="1573" width="0.2" height="15.0" fill="rgb(224,213,21)" rx="2" ry="2" />
<text  x="742.76" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="213.1" y="1941" width="0.2" height="15.0" fill="rgb(222,64,27)" rx="2" ry="2" />
<text  x="216.09" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1016.5" y="1941" width="0.2" height="15.0" fill="rgb(250,163,32)" rx="2" ry="2" />
<text  x="1019.49" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="250.2" y="1957" width="0.2" height="15.0" fill="rgb(245,71,33)" rx="2" ry="2" />
<text  x="253.21" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="599.8" y="1941" width="0.2" height="15.0" fill="rgb(214,29,11)" rx="2" ry="2" />
<text  x="602.80" y="1951.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="491.0" y="1669" width="0.2" height="15.0" fill="rgb(252,158,27)" rx="2" ry="2" />
<text  x="494.01" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="88.8" y="1925" width="0.2" height="15.0" fill="rgb(219,189,21)" rx="2" ry="2" />
<text  x="91.81" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="694.1" y="1781" width="0.2" height="15.0" fill="rgb(230,157,37)" rx="2" ry="2" />
<text  x="697.10" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1048.9" y="1893" width="0.2" height="15.0" fill="rgb(240,201,52)" rx="2" ry="2" />
<text  x="1051.85" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="562.3" y="1893" width="0.2" height="15.0" fill="rgb(243,86,0)" rx="2" ry="2" />
<text  x="565.28" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="279.0" y="1653" width="0.2" height="15.0" fill="rgb(212,1,35)" rx="2" ry="2" />
<text  x="281.99" y="1663.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="967.9" y="2005" width="0.2" height="15.0" fill="rgb(251,136,30)" rx="2" ry="2" />
<text  x="970.86" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="274.8" y="1877" width="0.6" height="15.0" fill="rgb(219,161,20)" rx="2" ry="2" />
<text  x="277.83" y="1887.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (3 samples, 0.05%)</title><rect x="1182.3" y="2053" width="0.6" height="15.0" fill="rgb(249,177,17)" rx="2" ry="2" />
<text  x="1185.26" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="600.8" y="1941" width="0.2" height="15.0" fill="rgb(209,110,0)" rx="2" ry="2" />
<text  x="603.79" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1137.4" y="2037" width="0.6" height="15.0" fill="rgb(240,159,10)" rx="2" ry="2" />
<text  x="1140.39" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="622.6" y="1941" width="0.2" height="15.0" fill="rgb(210,103,13)" rx="2" ry="2" />
<text  x="625.63" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="178.9" y="1989" width="0.2" height="15.0" fill="rgb(240,3,27)" rx="2" ry="2" />
<text  x="181.94" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="283.2" y="1765" width="0.2" height="15.0" fill="rgb(218,131,44)" rx="2" ry="2" />
<text  x="286.16" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="196.4" y="1877" width="0.2" height="15.0" fill="rgb(244,43,7)" rx="2" ry="2" />
<text  x="199.41" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="119.2" y="165" width="15.7" height="15.0" fill="rgb(207,140,48)" rx="2" ry="2" />
<text  x="122.19" y="175.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="836.6" y="1861" width="0.2" height="15.0" fill="rgb(252,152,29)" rx="2" ry="2" />
<text  x="839.64" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="525.4" y="1957" width="0.4" height="15.0" fill="rgb(251,173,35)" rx="2" ry="2" />
<text  x="528.36" y="1967.5" ></text>
</g>
<g >
<title>sys_recvfrom (2 samples, 0.03%)</title><rect x="1126.5" y="2021" width="0.4" height="15.0" fill="rgb(208,195,51)" rx="2" ry="2" />
<text  x="1129.47" y="2031.5" ></text>
</g>
<g >
<title>kfree_call_rcu (5 samples, 0.08%)</title><rect x="736.4" y="1669" width="1.0" height="15.0" fill="rgb(243,65,33)" rx="2" ry="2" />
<text  x="739.38" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="936.5" y="1893" width="0.2" height="15.0" fill="rgb(215,41,33)" rx="2" ry="2" />
<text  x="939.49" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1078.6" y="1717" width="0.2" height="15.0" fill="rgb(222,32,12)" rx="2" ry="2" />
<text  x="1081.63" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="742.7" y="1653" width="0.2" height="15.0" fill="rgb(218,93,36)" rx="2" ry="2" />
<text  x="745.74" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="739.8" y="1413" width="0.2" height="15.0" fill="rgb(241,17,52)" rx="2" ry="2" />
<text  x="742.76" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="536.1" y="1893" width="0.6" height="15.0" fill="rgb(232,97,21)" rx="2" ry="2" />
<text  x="539.08" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (9 samples, 0.15%)</title><rect x="301.2" y="1589" width="1.8" height="15.0" fill="rgb(205,2,34)" rx="2" ry="2" />
<text  x="304.23" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="560.7" y="1909" width="0.8" height="15.0" fill="rgb(227,29,43)" rx="2" ry="2" />
<text  x="563.69" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.8" y="1829" width="0.8" height="15.0" fill="rgb(252,106,54)" rx="2" ry="2" />
<text  x="15.78" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="378.5" y="1749" width="0.2" height="15.0" fill="rgb(253,148,17)" rx="2" ry="2" />
<text  x="381.45" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="886.3" y="1861" width="0.4" height="15.0" fill="rgb(252,218,53)" rx="2" ry="2" />
<text  x="889.27" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (9 samples, 0.15%)</title><rect x="148.2" y="1989" width="1.8" height="15.0" fill="rgb(226,59,37)" rx="2" ry="2" />
<text  x="151.17" y="1999.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="523.4" y="1989" width="0.2" height="15.0" fill="rgb(214,198,4)" rx="2" ry="2" />
<text  x="526.37" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="915.4" y="2005" width="0.2" height="15.0" fill="rgb(236,92,41)" rx="2" ry="2" />
<text  x="918.45" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="102.1" y="1941" width="0.2" height="15.0" fill="rgb(232,80,22)" rx="2" ry="2" />
<text  x="105.11" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="61.0" y="1605" width="0.2" height="15.0" fill="rgb(231,70,44)" rx="2" ry="2" />
<text  x="64.02" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="118.8" y="1445" width="19.6" height="15.0" fill="rgb(209,22,7)" rx="2" ry="2" />
<text  x="121.79" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="899.0" y="1909" width="0.2" height="15.0" fill="rgb(211,93,52)" rx="2" ry="2" />
<text  x="901.97" y="1919.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="842.6" y="1621" width="0.2" height="15.0" fill="rgb(247,0,33)" rx="2" ry="2" />
<text  x="845.59" y="1631.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="168.0" y="1797" width="0.2" height="15.0" fill="rgb(230,186,9)" rx="2" ry="2" />
<text  x="171.02" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (16 samples, 0.27%)</title><rect x="1141.8" y="2053" width="3.1" height="15.0" fill="rgb(250,174,32)" rx="2" ry="2" />
<text  x="1144.76" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (3 samples, 0.05%)</title><rect x="976.8" y="2005" width="0.6" height="15.0" fill="rgb(212,220,18)" rx="2" ry="2" />
<text  x="979.79" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="694.1" y="1717" width="0.2" height="15.0" fill="rgb(253,3,38)" rx="2" ry="2" />
<text  x="697.10" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="975.4" y="2005" width="0.2" height="15.0" fill="rgb(226,180,29)" rx="2" ry="2" />
<text  x="978.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="844.4" y="1669" width="0.2" height="15.0" fill="rgb(245,201,28)" rx="2" ry="2" />
<text  x="847.38" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="300.4" y="1653" width="0.6" height="15.0" fill="rgb(207,208,7)" rx="2" ry="2" />
<text  x="303.43" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="96.2" y="1957" width="0.2" height="15.0" fill="rgb(233,52,8)" rx="2" ry="2" />
<text  x="99.16" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="947.4" y="1941" width="0.2" height="15.0" fill="rgb(253,185,27)" rx="2" ry="2" />
<text  x="950.41" y="1951.5" ></text>
</g>
<g >
<title>sock_recvmsg (349 samples, 5.87%)</title><rect x="1052.4" y="1973" width="69.3" height="15.0" fill="rgb(226,205,10)" rx="2" ry="2" />
<text  x="1055.43" y="1983.5" >sock_re..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (15 samples, 0.25%)</title><rect x="479.9" y="1925" width="3.0" height="15.0" fill="rgb(208,57,3)" rx="2" ry="2" />
<text  x="482.90" y="1935.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="903.5" y="1861" width="0.2" height="15.0" fill="rgb(239,211,31)" rx="2" ry="2" />
<text  x="906.54" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="344.1" y="2005" width="0.4" height="15.0" fill="rgb(205,18,22)" rx="2" ry="2" />
<text  x="347.11" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (10 samples, 0.17%)</title><rect x="513.2" y="1989" width="2.0" height="15.0" fill="rgb(246,127,7)" rx="2" ry="2" />
<text  x="516.25" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (20 samples, 0.34%)</title><rect x="603.0" y="1909" width="3.9" height="15.0" fill="rgb(207,161,33)" rx="2" ry="2" />
<text  x="605.98" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="523.8" y="1989" width="0.2" height="15.0" fill="rgb(218,162,7)" rx="2" ry="2" />
<text  x="526.77" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="610.3" y="1781" width="0.2" height="15.0" fill="rgb(207,216,50)" rx="2" ry="2" />
<text  x="613.32" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="328.4" y="1653" width="0.2" height="15.0" fill="rgb(238,227,31)" rx="2" ry="2" />
<text  x="331.43" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="883.5" y="1877" width="0.2" height="15.0" fill="rgb(232,11,37)" rx="2" ry="2" />
<text  x="886.49" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="772.7" y="1509" width="0.2" height="15.0" fill="rgb(225,124,18)" rx="2" ry="2" />
<text  x="775.71" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="637.1" y="1829" width="0.2" height="15.0" fill="rgb(233,173,42)" rx="2" ry="2" />
<text  x="640.12" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.1" y="293" width="0.2" height="15.0" fill="rgb(239,84,16)" rx="2" ry="2" />
<text  x="139.06" y="303.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1005.6" y="1813" width="0.2" height="15.0" fill="rgb(225,45,41)" rx="2" ry="2" />
<text  x="1008.58" y="1823.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="289.3" y="1573" width="0.2" height="15.0" fill="rgb(231,126,18)" rx="2" ry="2" />
<text  x="292.32" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="919.2" y="2005" width="0.4" height="15.0" fill="rgb(229,186,14)" rx="2" ry="2" />
<text  x="922.22" y="2015.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="340.3" y="1957" width="0.2" height="15.0" fill="rgb(223,102,3)" rx="2" ry="2" />
<text  x="343.34" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="694.1" y="1749" width="0.2" height="15.0" fill="rgb(233,36,12)" rx="2" ry="2" />
<text  x="697.10" y="1759.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="61.0" y="1589" width="0.2" height="15.0" fill="rgb(215,100,26)" rx="2" ry="2" />
<text  x="64.02" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="196.4" y="1765" width="0.2" height="15.0" fill="rgb(247,149,25)" rx="2" ry="2" />
<text  x="199.41" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="107.9" y="2005" width="0.2" height="15.0" fill="rgb(240,98,7)" rx="2" ry="2" />
<text  x="110.87" y="2015.5" ></text>
</g>
<g >
<title>sys_sendmsg (393 samples, 6.61%)</title><rect x="264.9" y="1989" width="78.0" height="15.0" fill="rgb(247,102,43)" rx="2" ry="2" />
<text  x="267.90" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="830.5" y="1525" width="0.2" height="15.0" fill="rgb(231,163,24)" rx="2" ry="2" />
<text  x="833.48" y="1535.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="143.4" y="1893" width="0.4" height="15.0" fill="rgb(224,95,1)" rx="2" ry="2" />
<text  x="146.41" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="646.5" y="1781" width="0.2" height="15.0" fill="rgb(225,111,11)" rx="2" ry="2" />
<text  x="649.45" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="510.3" y="1973" width="0.2" height="15.0" fill="rgb(223,155,10)" rx="2" ry="2" />
<text  x="513.27" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="706.0" y="1861" width="0.2" height="15.0" fill="rgb(252,12,46)" rx="2" ry="2" />
<text  x="709.01" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (39 samples, 0.66%)</title><rect x="537.3" y="2005" width="7.7" height="15.0" fill="rgb(229,6,25)" rx="2" ry="2" />
<text  x="540.27" y="2015.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="891.4" y="1941" width="0.2" height="15.0" fill="rgb(231,172,49)" rx="2" ry="2" />
<text  x="894.43" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1034.2" y="1957" width="0.2" height="15.0" fill="rgb(246,107,24)" rx="2" ry="2" />
<text  x="1037.16" y="1967.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1004.8" y="2005" width="0.2" height="15.0" fill="rgb(244,103,12)" rx="2" ry="2" />
<text  x="1007.78" y="2015.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="527.7" y="2005" width="0.2" height="15.0" fill="rgb(253,177,39)" rx="2" ry="2" />
<text  x="530.74" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (19 samples, 0.32%)</title><rect x="1109.4" y="1493" width="3.8" height="15.0" fill="rgb(213,18,27)" rx="2" ry="2" />
<text  x="1112.40" y="1503.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="118.4" y="1605" width="0.2" height="15.0" fill="rgb(240,107,6)" rx="2" ry="2" />
<text  x="121.39" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="911.3" y="1989" width="0.6" height="15.0" fill="rgb(245,122,13)" rx="2" ry="2" />
<text  x="914.28" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1150.3" y="1989" width="0.2" height="15.0" fill="rgb(248,23,6)" rx="2" ry="2" />
<text  x="1153.30" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="982.2" y="1845" width="0.1" height="15.0" fill="rgb(211,68,35)" rx="2" ry="2" />
<text  x="985.15" y="1855.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1175.9" y="1877" width="0.2" height="15.0" fill="rgb(247,58,49)" rx="2" ry="2" />
<text  x="1178.91" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="178.9" y="1973" width="0.2" height="15.0" fill="rgb(216,12,42)" rx="2" ry="2" />
<text  x="181.94" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="350.7" y="1941" width="0.2" height="15.0" fill="rgb(210,198,28)" rx="2" ry="2" />
<text  x="353.66" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="549.2" y="1957" width="0.2" height="15.0" fill="rgb(225,83,21)" rx="2" ry="2" />
<text  x="552.18" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="293" width="16.9" height="15.0" fill="rgb(212,81,40)" rx="2" ry="2" />
<text  x="122.19" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="166.6" y="1877" width="0.2" height="15.0" fill="rgb(221,216,49)" rx="2" ry="2" />
<text  x="169.63" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="668.5" y="1829" width="0.2" height="15.0" fill="rgb(211,40,43)" rx="2" ry="2" />
<text  x="671.49" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="857.3" y="1845" width="0.2" height="15.0" fill="rgb(230,185,50)" rx="2" ry="2" />
<text  x="860.28" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (6 samples, 0.10%)</title><rect x="658.2" y="2021" width="1.2" height="15.0" fill="rgb(206,151,36)" rx="2" ry="2" />
<text  x="661.17" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="443.8" y="1893" width="0.2" height="15.0" fill="rgb(230,28,51)" rx="2" ry="2" />
<text  x="446.77" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (12 samples, 0.20%)</title><rect x="987.7" y="1909" width="2.4" height="15.0" fill="rgb(239,184,54)" rx="2" ry="2" />
<text  x="990.71" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="832.1" y="1733" width="0.2" height="15.0" fill="rgb(221,71,7)" rx="2" ry="2" />
<text  x="835.07" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="70.0" y="1829" width="0.2" height="15.0" fill="rgb(252,204,31)" rx="2" ry="2" />
<text  x="72.95" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="206.9" y="2021" width="0.2" height="15.0" fill="rgb(233,108,16)" rx="2" ry="2" />
<text  x="209.93" y="2031.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="1156.5" y="1749" width="0.1" height="15.0" fill="rgb(220,109,4)" rx="2" ry="2" />
<text  x="1159.45" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="196.4" y="1909" width="0.2" height="15.0" fill="rgb(241,129,27)" rx="2" ry="2" />
<text  x="199.41" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="675.0" y="1813" width="0.2" height="15.0" fill="rgb(212,78,15)" rx="2" ry="2" />
<text  x="678.04" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.92%)</title><rect x="118.2" y="1669" width="22.6" height="15.0" fill="rgb(226,181,23)" rx="2" ry="2" />
<text  x="121.19" y="1679.5" >[..</text>
</g>
<g >
<title>tcp_check_oom (1 samples, 0.02%)</title><rect x="748.9" y="1749" width="0.2" height="15.0" fill="rgb(254,182,31)" rx="2" ry="2" />
<text  x="751.89" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1016.7" y="1973" width="0.2" height="15.0" fill="rgb(252,80,42)" rx="2" ry="2" />
<text  x="1019.69" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="856.7" y="1797" width="0.2" height="15.0" fill="rgb(217,85,18)" rx="2" ry="2" />
<text  x="859.69" y="1807.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="875.3" y="1909" width="0.2" height="15.0" fill="rgb(213,34,1)" rx="2" ry="2" />
<text  x="878.35" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="483.1" y="1637" width="0.2" height="15.0" fill="rgb(218,84,23)" rx="2" ry="2" />
<text  x="486.07" y="1647.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="487.0" y="1973" width="0.4" height="15.0" fill="rgb(254,55,0)" rx="2" ry="2" />
<text  x="490.04" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="934.5" y="1877" width="0.2" height="15.0" fill="rgb(247,136,25)" rx="2" ry="2" />
<text  x="937.51" y="1887.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="442.8" y="1989" width="0.2" height="15.0" fill="rgb(224,229,48)" rx="2" ry="2" />
<text  x="445.77" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (1 samples, 0.02%)</title><rect x="864.8" y="1989" width="0.2" height="15.0" fill="rgb(252,203,9)" rx="2" ry="2" />
<text  x="867.83" y="1999.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.19%)</title><rect x="1084.8" y="1893" width="2.2" height="15.0" fill="rgb(241,38,52)" rx="2" ry="2" />
<text  x="1087.78" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="701.4" y="1877" width="0.2" height="15.0" fill="rgb(247,117,3)" rx="2" ry="2" />
<text  x="704.44" y="1887.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="939.9" y="1973" width="0.6" height="15.0" fill="rgb(206,198,52)" rx="2" ry="2" />
<text  x="942.87" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="178.9" y="1749" width="0.2" height="15.0" fill="rgb(209,108,5)" rx="2" ry="2" />
<text  x="181.94" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="886.1" y="1893" width="0.6" height="15.0" fill="rgb(218,34,11)" rx="2" ry="2" />
<text  x="889.07" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="948.2" y="2005" width="0.4" height="15.0" fill="rgb(227,40,21)" rx="2" ry="2" />
<text  x="951.20" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="149.8" y="1941" width="0.2" height="15.0" fill="rgb(234,101,26)" rx="2" ry="2" />
<text  x="152.76" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="844.2" y="1797" width="0.2" height="15.0" fill="rgb(245,68,47)" rx="2" ry="2" />
<text  x="847.18" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="103.9" y="1973" width="0.2" height="15.0" fill="rgb(230,136,38)" rx="2" ry="2" />
<text  x="106.90" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="551.6" y="1973" width="0.4" height="15.0" fill="rgb(238,59,2)" rx="2" ry="2" />
<text  x="554.56" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="842.2" y="1781" width="0.2" height="15.0" fill="rgb(212,158,38)" rx="2" ry="2" />
<text  x="845.19" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="998.6" y="1989" width="0.8" height="15.0" fill="rgb(249,159,49)" rx="2" ry="2" />
<text  x="1001.63" y="1999.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="408.2" y="1685" width="0.2" height="15.0" fill="rgb(214,200,27)" rx="2" ry="2" />
<text  x="411.23" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="458.7" y="1765" width="0.2" height="15.0" fill="rgb(226,81,52)" rx="2" ry="2" />
<text  x="461.65" y="1775.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (20 samples, 0.34%)</title><rect x="706.4" y="1989" width="4.0" height="15.0" fill="rgb(211,123,26)" rx="2" ry="2" />
<text  x="709.41" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="95.6" y="1813" width="0.2" height="15.0" fill="rgb(254,100,24)" rx="2" ry="2" />
<text  x="98.56" y="1823.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="61.0" y="1525" width="0.2" height="15.0" fill="rgb(210,173,14)" rx="2" ry="2" />
<text  x="64.02" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="109.3" y="2037" width="0.4" height="15.0" fill="rgb(231,153,8)" rx="2" ry="2" />
<text  x="112.26" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (2 samples, 0.03%)</title><rect x="971.4" y="2037" width="0.4" height="15.0" fill="rgb(247,3,32)" rx="2" ry="2" />
<text  x="974.43" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="831.7" y="1637" width="0.2" height="15.0" fill="rgb(210,18,47)" rx="2" ry="2" />
<text  x="834.67" y="1647.5" ></text>
</g>
<g >
<title>__skb_clone (14 samples, 0.24%)</title><rect x="796.7" y="1653" width="2.8" height="15.0" fill="rgb(212,0,12)" rx="2" ry="2" />
<text  x="799.73" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="206.9" y="1861" width="0.2" height="15.0" fill="rgb(230,48,38)" rx="2" ry="2" />
<text  x="209.93" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="613.1" y="1733" width="0.2" height="15.0" fill="rgb(248,110,31)" rx="2" ry="2" />
<text  x="616.10" y="1743.5" ></text>
</g>
<g >
<title>trigger_dyntick_cpu.isra.35 (1 samples, 0.02%)</title><rect x="329.6" y="1765" width="0.2" height="15.0" fill="rgb(217,76,45)" rx="2" ry="2" />
<text  x="332.62" y="1775.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (16 samples, 0.27%)</title><rect x="980.2" y="1973" width="3.1" height="15.0" fill="rgb(222,210,44)" rx="2" ry="2" />
<text  x="983.16" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="206.9" y="1829" width="0.2" height="15.0" fill="rgb(237,22,21)" rx="2" ry="2" />
<text  x="209.93" y="1839.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="925.4" y="1893" width="0.8" height="15.0" fill="rgb(253,42,44)" rx="2" ry="2" />
<text  x="928.37" y="1903.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1136.2" y="2037" width="0.2" height="15.0" fill="rgb(208,165,44)" rx="2" ry="2" />
<text  x="1139.20" y="2047.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="510.3" y="1717" width="0.2" height="15.0" fill="rgb(210,68,0)" rx="2" ry="2" />
<text  x="513.27" y="1727.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (17 samples, 0.29%)</title><rect x="1098.1" y="1893" width="3.4" height="15.0" fill="rgb(230,143,11)" rx="2" ry="2" />
<text  x="1101.09" y="1903.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="135.1" y="149" width="0.8" height="15.0" fill="rgb(248,111,29)" rx="2" ry="2" />
<text  x="138.07" y="159.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="936.5" y="1557" width="0.2" height="15.0" fill="rgb(224,142,46)" rx="2" ry="2" />
<text  x="939.49" y="1567.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="523.2" y="1973" width="0.2" height="15.0" fill="rgb(224,141,44)" rx="2" ry="2" />
<text  x="526.17" y="1983.5" ></text>
</g>
<g >
<title>ipv4_default_advmss (1 samples, 0.02%)</title><rect x="510.3" y="1701" width="0.2" height="15.0" fill="rgb(253,202,30)" rx="2" ry="2" />
<text  x="513.27" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (2 samples, 0.03%)</title><rect x="579.6" y="1989" width="0.3" height="15.0" fill="rgb(218,59,42)" rx="2" ry="2" />
<text  x="582.55" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="490.2" y="1861" width="0.2" height="15.0" fill="rgb(234,169,45)" rx="2" ry="2" />
<text  x="493.22" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="157.5" y="1621" width="0.2" height="15.0" fill="rgb(229,172,7)" rx="2" ry="2" />
<text  x="160.50" y="1631.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="744.3" y="1797" width="0.2" height="15.0" fill="rgb(245,168,41)" rx="2" ry="2" />
<text  x="747.32" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.3" y="261" width="0.2" height="15.0" fill="rgb(241,28,32)" rx="2" ry="2" />
<text  x="139.26" y="271.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="95.6" y="1765" width="0.2" height="15.0" fill="rgb(249,158,36)" rx="2" ry="2" />
<text  x="98.56" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="630.4" y="1861" width="0.2" height="15.0" fill="rgb(212,74,8)" rx="2" ry="2" />
<text  x="633.37" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="138.0" y="1029" width="0.2" height="15.0" fill="rgb(241,110,40)" rx="2" ry="2" />
<text  x="141.05" y="1039.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1189.0" y="1861" width="0.2" height="15.0" fill="rgb(208,183,41)" rx="2" ry="2" />
<text  x="1192.01" y="1871.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="628.4" y="1877" width="0.2" height="15.0" fill="rgb(208,176,50)" rx="2" ry="2" />
<text  x="631.39" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="20.9" y="1941" width="0.2" height="15.0" fill="rgb(229,110,48)" rx="2" ry="2" />
<text  x="23.92" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (8 samples, 0.13%)</title><rect x="45.9" y="1989" width="1.6" height="15.0" fill="rgb(213,124,15)" rx="2" ry="2" />
<text  x="48.93" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="279.0" y="1669" width="0.2" height="15.0" fill="rgb(206,200,8)" rx="2" ry="2" />
<text  x="281.99" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (13 samples, 0.22%)</title><rect x="243.1" y="1861" width="2.5" height="15.0" fill="rgb(234,227,35)" rx="2" ry="2" />
<text  x="246.06" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1174.3" y="1957" width="0.2" height="15.0" fill="rgb(248,228,6)" rx="2" ry="2" />
<text  x="1177.32" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="94.8" y="1829" width="0.2" height="15.0" fill="rgb(230,80,19)" rx="2" ry="2" />
<text  x="97.77" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1002.4" y="1813" width="0.2" height="15.0" fill="rgb(234,146,31)" rx="2" ry="2" />
<text  x="1005.40" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="935.3" y="1829" width="0.2" height="15.0" fill="rgb(251,10,28)" rx="2" ry="2" />
<text  x="938.30" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1018.3" y="1781" width="0.2" height="15.0" fill="rgb(212,48,16)" rx="2" ry="2" />
<text  x="1021.28" y="1791.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="411.2" y="1861" width="0.4" height="15.0" fill="rgb(229,218,17)" rx="2" ry="2" />
<text  x="414.21" y="1871.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="848.7" y="1893" width="0.2" height="15.0" fill="rgb(233,4,34)" rx="2" ry="2" />
<text  x="851.74" y="1903.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="895.2" y="2005" width="0.4" height="15.0" fill="rgb(233,192,24)" rx="2" ry="2" />
<text  x="898.20" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="528.5" y="1957" width="1.2" height="15.0" fill="rgb(243,18,12)" rx="2" ry="2" />
<text  x="531.53" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="646.1" y="1941" width="0.2" height="15.0" fill="rgb(233,37,44)" rx="2" ry="2" />
<text  x="649.06" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="638.3" y="1925" width="0.6" height="15.0" fill="rgb(254,33,34)" rx="2" ry="2" />
<text  x="641.31" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="831.7" y="1653" width="0.2" height="15.0" fill="rgb(214,91,34)" rx="2" ry="2" />
<text  x="834.67" y="1663.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1126.1" y="1893" width="0.2" height="15.0" fill="rgb(238,30,27)" rx="2" ry="2" />
<text  x="1129.08" y="1903.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="945.4" y="1861" width="0.2" height="15.0" fill="rgb(209,224,14)" rx="2" ry="2" />
<text  x="948.42" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="844.4" y="1941" width="0.2" height="15.0" fill="rgb(222,125,36)" rx="2" ry="2" />
<text  x="847.38" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="156.3" y="1573" width="0.2" height="15.0" fill="rgb(251,105,44)" rx="2" ry="2" />
<text  x="159.31" y="1583.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="442.6" y="1989" width="0.2" height="15.0" fill="rgb(222,73,28)" rx="2" ry="2" />
<text  x="445.57" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="196.4" y="1781" width="0.2" height="15.0" fill="rgb(222,134,28)" rx="2" ry="2" />
<text  x="199.41" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="884.7" y="1797" width="0.2" height="15.0" fill="rgb(248,169,43)" rx="2" ry="2" />
<text  x="887.68" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(231,62,14)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1052.0" y="1877" width="0.2" height="15.0" fill="rgb(221,139,35)" rx="2" ry="2" />
<text  x="1055.03" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="639.7" y="1909" width="0.2" height="15.0" fill="rgb(228,219,42)" rx="2" ry="2" />
<text  x="642.70" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="95.8" y="1957" width="0.2" height="15.0" fill="rgb(213,136,22)" rx="2" ry="2" />
<text  x="98.76" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.19%)</title><rect x="609.1" y="1861" width="2.2" height="15.0" fill="rgb(205,60,44)" rx="2" ry="2" />
<text  x="612.13" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="852.7" y="1861" width="0.2" height="15.0" fill="rgb(212,169,1)" rx="2" ry="2" />
<text  x="855.72" y="1871.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (5 samples, 0.08%)</title><rect x="819.2" y="1765" width="1.0" height="15.0" fill="rgb(205,162,2)" rx="2" ry="2" />
<text  x="822.17" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="267.3" y="1797" width="0.2" height="15.0" fill="rgb(209,8,24)" rx="2" ry="2" />
<text  x="270.28" y="1807.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (5 samples, 0.08%)</title><rect x="102.7" y="1973" width="1.0" height="15.0" fill="rgb(218,226,0)" rx="2" ry="2" />
<text  x="105.71" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="136.9" y="149" width="0.2" height="15.0" fill="rgb(240,180,37)" rx="2" ry="2" />
<text  x="139.85" y="159.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="39.8" y="1781" width="0.2" height="15.0" fill="rgb(230,73,41)" rx="2" ry="2" />
<text  x="42.78" y="1791.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1189.4" y="2037" width="0.2" height="15.0" fill="rgb(244,22,5)" rx="2" ry="2" />
<text  x="1192.40" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="655.8" y="2037" width="0.2" height="15.0" fill="rgb(230,153,2)" rx="2" ry="2" />
<text  x="658.78" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="67.2" y="1893" width="0.2" height="15.0" fill="rgb(210,102,16)" rx="2" ry="2" />
<text  x="70.17" y="1903.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="138.2" y="1429" width="0.2" height="15.0" fill="rgb(211,48,43)" rx="2" ry="2" />
<text  x="141.24" y="1439.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="184.7" y="1989" width="0.2" height="15.0" fill="rgb(211,146,48)" rx="2" ry="2" />
<text  x="187.70" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="925.4" y="1781" width="0.2" height="15.0" fill="rgb(223,8,42)" rx="2" ry="2" />
<text  x="928.37" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="136.5" y="165" width="0.2" height="15.0" fill="rgb(232,138,19)" rx="2" ry="2" />
<text  x="139.46" y="175.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="156.3" y="1589" width="0.2" height="15.0" fill="rgb(206,47,52)" rx="2" ry="2" />
<text  x="159.31" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="870.0" y="1973" width="0.2" height="15.0" fill="rgb(245,19,7)" rx="2" ry="2" />
<text  x="872.99" y="1983.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="521.4" y="1925" width="0.4" height="15.0" fill="rgb(254,226,46)" rx="2" ry="2" />
<text  x="524.39" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (64 samples, 1.08%)</title><rect x="874.0" y="1973" width="12.7" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="876.96" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="100.7" y="1941" width="0.2" height="15.0" fill="rgb(240,161,39)" rx="2" ry="2" />
<text  x="103.72" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (82 samples, 1.38%)</title><rect x="664.5" y="2021" width="16.3" height="15.0" fill="rgb(236,40,4)" rx="2" ry="2" />
<text  x="667.52" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1135.8" y="1909" width="0.2" height="15.0" fill="rgb(229,114,29)" rx="2" ry="2" />
<text  x="1138.80" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="482.9" y="1893" width="0.6" height="15.0" fill="rgb(215,209,39)" rx="2" ry="2" />
<text  x="485.87" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="692.7" y="1861" width="0.2" height="15.0" fill="rgb(233,42,0)" rx="2" ry="2" />
<text  x="695.71" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="458.5" y="1845" width="0.2" height="15.0" fill="rgb(233,86,0)" rx="2" ry="2" />
<text  x="461.46" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="115.6" y="1973" width="0.2" height="15.0" fill="rgb(212,39,18)" rx="2" ry="2" />
<text  x="118.61" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="459.6" y="1861" width="0.2" height="15.0" fill="rgb(242,122,53)" rx="2" ry="2" />
<text  x="462.65" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="687.9" y="1893" width="0.2" height="15.0" fill="rgb(246,13,42)" rx="2" ry="2" />
<text  x="690.94" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="668.3" y="1797" width="0.2" height="15.0" fill="rgb(249,42,43)" rx="2" ry="2" />
<text  x="671.29" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="534.1" y="1893" width="0.2" height="15.0" fill="rgb(228,221,21)" rx="2" ry="2" />
<text  x="537.09" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="820.0" y="1749" width="0.2" height="15.0" fill="rgb(210,138,38)" rx="2" ry="2" />
<text  x="822.96" y="1759.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="729.2" y="1717" width="0.6" height="15.0" fill="rgb(238,137,51)" rx="2" ry="2" />
<text  x="732.24" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="520.0" y="1813" width="0.2" height="15.0" fill="rgb(223,143,21)" rx="2" ry="2" />
<text  x="523.00" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="842.6" y="1829" width="0.2" height="15.0" fill="rgb(217,77,14)" rx="2" ry="2" />
<text  x="845.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.78%)</title><rect x="118.8" y="1541" width="21.0" height="15.0" fill="rgb(210,43,33)" rx="2" ry="2" />
<text  x="121.79" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="893.2" y="1957" width="0.2" height="15.0" fill="rgb(235,85,44)" rx="2" ry="2" />
<text  x="896.21" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="136.9" y="437" width="0.2" height="15.0" fill="rgb(236,34,30)" rx="2" ry="2" />
<text  x="139.85" y="447.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="646.3" y="1957" width="0.2" height="15.0" fill="rgb(241,168,17)" rx="2" ry="2" />
<text  x="649.26" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="95.6" y="1733" width="0.2" height="15.0" fill="rgb(227,123,49)" rx="2" ry="2" />
<text  x="98.56" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1019.9" y="1845" width="0.2" height="15.0" fill="rgb(217,138,20)" rx="2" ry="2" />
<text  x="1022.87" y="1855.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="548.0" y="1941" width="0.4" height="15.0" fill="rgb(240,218,35)" rx="2" ry="2" />
<text  x="550.99" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="853.9" y="1829" width="0.2" height="15.0" fill="rgb(230,33,2)" rx="2" ry="2" />
<text  x="856.91" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="841.2" y="1893" width="0.2" height="15.0" fill="rgb(223,139,29)" rx="2" ry="2" />
<text  x="844.20" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="863.8" y="1973" width="1.0" height="15.0" fill="rgb(230,6,33)" rx="2" ry="2" />
<text  x="866.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="856.7" y="1717" width="0.2" height="15.0" fill="rgb(254,25,52)" rx="2" ry="2" />
<text  x="859.69" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="947.4" y="1749" width="0.2" height="15.0" fill="rgb(234,50,26)" rx="2" ry="2" />
<text  x="950.41" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="136.3" y="245" width="0.2" height="15.0" fill="rgb(235,204,23)" rx="2" ry="2" />
<text  x="139.26" y="255.5" ></text>
</g>
<g >
<title>__fget (9 samples, 0.15%)</title><rect x="341.1" y="1909" width="1.8" height="15.0" fill="rgb(253,65,46)" rx="2" ry="2" />
<text  x="344.13" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="855.9" y="1941" width="0.2" height="15.0" fill="rgb(212,184,28)" rx="2" ry="2" />
<text  x="858.89" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="575.4" y="1989" width="0.6" height="15.0" fill="rgb(245,68,3)" rx="2" ry="2" />
<text  x="578.38" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1144.3" y="1957" width="0.2" height="15.0" fill="rgb(223,17,25)" rx="2" ry="2" />
<text  x="1147.34" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="822.5" y="1733" width="0.2" height="15.0" fill="rgb(215,130,13)" rx="2" ry="2" />
<text  x="825.54" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="131.9" y="37" width="0.2" height="15.0" fill="rgb(205,78,34)" rx="2" ry="2" />
<text  x="134.89" y="47.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="61.0" y="1541" width="0.2" height="15.0" fill="rgb(210,169,22)" rx="2" ry="2" />
<text  x="64.02" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="543.8" y="1845" width="0.2" height="15.0" fill="rgb(205,35,24)" rx="2" ry="2" />
<text  x="546.82" y="1855.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="825.5" y="1557" width="0.2" height="15.0" fill="rgb(233,151,21)" rx="2" ry="2" />
<text  x="828.52" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="879.3" y="1925" width="0.4" height="15.0" fill="rgb(236,65,44)" rx="2" ry="2" />
<text  x="882.32" y="1935.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="844.2" y="1653" width="0.2" height="15.0" fill="rgb(244,101,52)" rx="2" ry="2" />
<text  x="847.18" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="61.4" y="1941" width="1.0" height="15.0" fill="rgb(222,28,23)" rx="2" ry="2" />
<text  x="64.42" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="571.6" y="1973" width="0.2" height="15.0" fill="rgb(238,78,30)" rx="2" ry="2" />
<text  x="574.61" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (2 samples, 0.03%)</title><rect x="183.3" y="1989" width="0.4" height="15.0" fill="rgb(247,158,8)" rx="2" ry="2" />
<text  x="186.31" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="486.8" y="1765" width="0.2" height="15.0" fill="rgb(226,44,3)" rx="2" ry="2" />
<text  x="489.84" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="627.4" y="2005" width="0.6" height="15.0" fill="rgb(236,127,19)" rx="2" ry="2" />
<text  x="630.40" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.7" y="341" width="0.2" height="15.0" fill="rgb(222,192,29)" rx="2" ry="2" />
<text  x="139.66" y="351.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="166.8" y="1797" width="0.2" height="15.0" fill="rgb(236,145,43)" rx="2" ry="2" />
<text  x="169.83" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (124 samples, 2.09%)</title><rect x="117.8" y="1813" width="24.6" height="15.0" fill="rgb(242,191,6)" rx="2" ry="2" />
<text  x="120.80" y="1823.5" >[..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="486.8" y="1525" width="0.2" height="15.0" fill="rgb(251,133,10)" rx="2" ry="2" />
<text  x="489.84" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="846.2" y="1909" width="0.4" height="15.0" fill="rgb(206,130,2)" rx="2" ry="2" />
<text  x="849.16" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="267.3" y="1877" width="0.2" height="15.0" fill="rgb(252,134,13)" rx="2" ry="2" />
<text  x="270.28" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="547.6" y="1925" width="0.2" height="15.0" fill="rgb(210,20,12)" rx="2" ry="2" />
<text  x="550.59" y="1935.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (4 samples, 0.07%)</title><rect x="183.9" y="1973" width="0.8" height="15.0" fill="rgb(253,211,7)" rx="2" ry="2" />
<text  x="186.90" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="659.2" y="1957" width="0.2" height="15.0" fill="rgb(231,135,11)" rx="2" ry="2" />
<text  x="662.16" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1071.9" y="1829" width="0.4" height="15.0" fill="rgb(253,104,54)" rx="2" ry="2" />
<text  x="1074.88" y="1839.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.10%)</title><rect x="296.7" y="1781" width="1.2" height="15.0" fill="rgb(221,46,52)" rx="2" ry="2" />
<text  x="299.66" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1024.0" y="2021" width="0.2" height="15.0" fill="rgb(240,31,17)" rx="2" ry="2" />
<text  x="1027.04" y="2031.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="698.7" y="2005" width="0.4" height="15.0" fill="rgb(219,48,29)" rx="2" ry="2" />
<text  x="701.66" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="762.4" y="1701" width="0.2" height="15.0" fill="rgb(234,212,11)" rx="2" ry="2" />
<text  x="765.39" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="844.2" y="1877" width="0.2" height="15.0" fill="rgb(237,167,31)" rx="2" ry="2" />
<text  x="847.18" y="1887.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="641.3" y="1941" width="0.2" height="15.0" fill="rgb(207,64,0)" rx="2" ry="2" />
<text  x="644.29" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1172.7" y="1989" width="0.2" height="15.0" fill="rgb(229,99,31)" rx="2" ry="2" />
<text  x="1175.73" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1154.3" y="1637" width="0.2" height="15.0" fill="rgb(207,193,5)" rx="2" ry="2" />
<text  x="1157.27" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1054.0" y="1845" width="0.2" height="15.0" fill="rgb(214,29,32)" rx="2" ry="2" />
<text  x="1057.01" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="700.6" y="1941" width="0.2" height="15.0" fill="rgb(245,224,8)" rx="2" ry="2" />
<text  x="703.65" y="1951.5" ></text>
</g>
<g >
<title>sys_close (3 samples, 0.05%)</title><rect x="831.3" y="1877" width="0.6" height="15.0" fill="rgb(205,23,1)" rx="2" ry="2" />
<text  x="834.28" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (7 samples, 0.12%)</title><rect x="413.2" y="1909" width="1.4" height="15.0" fill="rgb(222,159,44)" rx="2" ry="2" />
<text  x="416.19" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="166.2" y="1893" width="0.2" height="15.0" fill="rgb(227,62,31)" rx="2" ry="2" />
<text  x="169.23" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="61.6" y="1797" width="0.2" height="15.0" fill="rgb(217,91,14)" rx="2" ry="2" />
<text  x="64.62" y="1807.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (15 samples, 0.25%)</title><rect x="171.0" y="1925" width="3.0" height="15.0" fill="rgb(250,182,12)" rx="2" ry="2" />
<text  x="174.00" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="837.6" y="1909" width="0.2" height="15.0" fill="rgb(213,145,40)" rx="2" ry="2" />
<text  x="840.63" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="523.0" y="1989" width="0.4" height="15.0" fill="rgb(248,94,52)" rx="2" ry="2" />
<text  x="525.97" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="157.5" y="1749" width="0.2" height="15.0" fill="rgb(207,189,46)" rx="2" ry="2" />
<text  x="160.50" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1079.0" y="1589" width="0.2" height="15.0" fill="rgb(246,227,22)" rx="2" ry="2" />
<text  x="1082.03" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="622.2" y="2005" width="0.4" height="15.0" fill="rgb(241,118,13)" rx="2" ry="2" />
<text  x="625.23" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="617.5" y="2005" width="0.6" height="15.0" fill="rgb(216,157,29)" rx="2" ry="2" />
<text  x="620.47" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="109.5" y="1909" width="0.2" height="15.0" fill="rgb(235,97,26)" rx="2" ry="2" />
<text  x="112.46" y="1919.5" ></text>
</g>
<g >
<title>dput.part.26 (84 samples, 1.41%)</title><rect x="727.1" y="1781" width="16.6" height="15.0" fill="rgb(232,17,3)" rx="2" ry="2" />
<text  x="730.05" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="134.1" y="53" width="0.2" height="15.0" fill="rgb(249,199,8)" rx="2" ry="2" />
<text  x="137.07" y="63.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="85.2" y="1941" width="0.2" height="15.0" fill="rgb(221,139,41)" rx="2" ry="2" />
<text  x="88.24" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="537.1" y="1925" width="0.2" height="15.0" fill="rgb(212,3,2)" rx="2" ry="2" />
<text  x="540.07" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="644.3" y="1957" width="0.8" height="15.0" fill="rgb(240,128,39)" rx="2" ry="2" />
<text  x="647.27" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="510.3" y="1861" width="0.2" height="15.0" fill="rgb(253,51,32)" rx="2" ry="2" />
<text  x="513.27" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="118.8" y="1429" width="19.4" height="15.0" fill="rgb(241,92,34)" rx="2" ry="2" />
<text  x="121.79" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (2 samples, 0.03%)</title><rect x="159.7" y="1941" width="0.4" height="15.0" fill="rgb(241,88,35)" rx="2" ry="2" />
<text  x="162.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="120.0" y="37" width="0.4" height="15.0" fill="rgb(205,79,18)" rx="2" ry="2" />
<text  x="122.98" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1167.0" y="2053" width="0.2" height="15.0" fill="rgb(210,161,40)" rx="2" ry="2" />
<text  x="1169.97" y="2063.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="759.0" y="1685" width="1.0" height="15.0" fill="rgb(236,5,26)" rx="2" ry="2" />
<text  x="762.01" y="1695.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1072.3" y="1861" width="0.2" height="15.0" fill="rgb(227,132,28)" rx="2" ry="2" />
<text  x="1075.28" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (6 samples, 0.10%)</title><rect x="967.1" y="2021" width="1.2" height="15.0" fill="rgb(233,85,12)" rx="2" ry="2" />
<text  x="970.06" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="136.1" y="149" width="0.2" height="15.0" fill="rgb(233,11,27)" rx="2" ry="2" />
<text  x="139.06" y="159.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="842.6" y="1861" width="0.2" height="15.0" fill="rgb(248,170,25)" rx="2" ry="2" />
<text  x="845.59" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="597.4" y="1829" width="0.2" height="15.0" fill="rgb(222,3,1)" rx="2" ry="2" />
<text  x="600.42" y="1839.5" ></text>
</g>
<g >
<title>dput.part.26 (1 samples, 0.02%)</title><rect x="726.7" y="1797" width="0.2" height="15.0" fill="rgb(226,24,6)" rx="2" ry="2" />
<text  x="729.66" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (3 samples, 0.05%)</title><rect x="710.6" y="1925" width="0.6" height="15.0" fill="rgb(209,14,5)" rx="2" ry="2" />
<text  x="713.58" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1162.6" y="1877" width="0.2" height="15.0" fill="rgb(232,38,0)" rx="2" ry="2" />
<text  x="1165.60" y="1887.5" ></text>
</g>
<g >
<title>__madvise (1 samples, 0.02%)</title><rect x="1133.8" y="2053" width="0.2" height="15.0" fill="rgb(207,70,51)" rx="2" ry="2" />
<text  x="1136.82" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="856.7" y="1813" width="0.2" height="15.0" fill="rgb(224,63,15)" rx="2" ry="2" />
<text  x="859.69" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="753.9" y="1461" width="0.2" height="15.0" fill="rgb(232,11,42)" rx="2" ry="2" />
<text  x="756.85" y="1471.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="134.9" y="101" width="0.2" height="15.0" fill="rgb(223,212,36)" rx="2" ry="2" />
<text  x="137.87" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="800.7" y="1637" width="0.2" height="15.0" fill="rgb(217,125,29)" rx="2" ry="2" />
<text  x="803.70" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="679.4" y="1957" width="0.2" height="15.0" fill="rgb(209,198,51)" rx="2" ry="2" />
<text  x="682.41" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="637.1" y="1781" width="0.2" height="15.0" fill="rgb(221,172,46)" rx="2" ry="2" />
<text  x="640.12" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1090.3" y="1877" width="0.2" height="15.0" fill="rgb(215,142,1)" rx="2" ry="2" />
<text  x="1093.34" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="479.3" y="1909" width="0.2" height="15.0" fill="rgb(228,188,34)" rx="2" ry="2" />
<text  x="482.30" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="637.1" y="1733" width="0.2" height="15.0" fill="rgb(223,46,14)" rx="2" ry="2" />
<text  x="640.12" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="909.3" y="2005" width="0.2" height="15.0" fill="rgb(214,42,40)" rx="2" ry="2" />
<text  x="912.29" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="458.5" y="1861" width="0.2" height="15.0" fill="rgb(244,155,9)" rx="2" ry="2" />
<text  x="461.46" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="72.1" y="1925" width="0.2" height="15.0" fill="rgb(226,128,46)" rx="2" ry="2" />
<text  x="75.14" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="853.9" y="1701" width="0.2" height="15.0" fill="rgb(246,110,9)" rx="2" ry="2" />
<text  x="856.91" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="743.1" y="1701" width="0.2" height="15.0" fill="rgb(233,207,26)" rx="2" ry="2" />
<text  x="746.13" y="1711.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="172.2" y="1893" width="0.2" height="15.0" fill="rgb(216,3,7)" rx="2" ry="2" />
<text  x="175.19" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="137.1" y="981" width="0.2" height="15.0" fill="rgb(252,64,4)" rx="2" ry="2" />
<text  x="140.05" y="991.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="163.3" y="1781" width="0.2" height="15.0" fill="rgb(228,91,31)" rx="2" ry="2" />
<text  x="166.26" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1177.1" y="1893" width="0.2" height="15.0" fill="rgb(205,144,44)" rx="2" ry="2" />
<text  x="1180.10" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.8" y="1941" width="0.4" height="15.0" fill="rgb(228,22,44)" rx="2" ry="2" />
<text  x="576.80" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="894.6" y="1957" width="0.2" height="15.0" fill="rgb(231,209,7)" rx="2" ry="2" />
<text  x="897.60" y="1967.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="562.1" y="1429" width="0.2" height="15.0" fill="rgb(240,207,41)" rx="2" ry="2" />
<text  x="565.08" y="1439.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="339.9" y="1877" width="0.4" height="15.0" fill="rgb(251,60,37)" rx="2" ry="2" />
<text  x="342.94" y="1887.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.17%)</title><rect x="1179.7" y="2053" width="2.0" height="15.0" fill="rgb(206,150,47)" rx="2" ry="2" />
<text  x="1182.68" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="883.5" y="1829" width="0.2" height="15.0" fill="rgb(245,58,24)" rx="2" ry="2" />
<text  x="886.49" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="20.7" y="1973" width="0.2" height="15.0" fill="rgb(230,210,10)" rx="2" ry="2" />
<text  x="23.72" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="857.3" y="1717" width="0.2" height="15.0" fill="rgb(237,180,21)" rx="2" ry="2" />
<text  x="860.28" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1175.9" y="1893" width="0.2" height="15.0" fill="rgb(245,141,25)" rx="2" ry="2" />
<text  x="1178.91" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="317.5" y="1733" width="0.2" height="15.0" fill="rgb(214,175,10)" rx="2" ry="2" />
<text  x="320.51" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (52 samples, 0.87%)</title><rect x="235.3" y="1925" width="10.3" height="15.0" fill="rgb(237,140,13)" rx="2" ry="2" />
<text  x="238.32" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.9" y="1941" width="0.2" height="15.0" fill="rgb(205,55,39)" rx="2" ry="2" />
<text  x="77.92" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (5 samples, 0.08%)</title><rect x="44.7" y="1989" width="1.0" height="15.0" fill="rgb(237,224,34)" rx="2" ry="2" />
<text  x="47.74" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="114.8" y="1941" width="0.2" height="15.0" fill="rgb(253,92,32)" rx="2" ry="2" />
<text  x="117.82" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="458.5" y="1909" width="0.2" height="15.0" fill="rgb(207,156,51)" rx="2" ry="2" />
<text  x="461.46" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="247.4" y="1605" width="0.2" height="15.0" fill="rgb(231,12,16)" rx="2" ry="2" />
<text  x="250.43" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="350.7" y="1813" width="0.2" height="15.0" fill="rgb(237,95,41)" rx="2" ry="2" />
<text  x="353.66" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="421" width="17.7" height="15.0" fill="rgb(248,103,37)" rx="2" ry="2" />
<text  x="122.19" y="431.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="227.2" y="1941" width="3.2" height="15.0" fill="rgb(233,45,2)" rx="2" ry="2" />
<text  x="230.18" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1016.9" y="1973" width="0.4" height="15.0" fill="rgb(210,62,18)" rx="2" ry="2" />
<text  x="1019.89" y="1983.5" ></text>
</g>
<g >
<title>free (36 samples, 0.61%)</title><rect x="1010.1" y="2037" width="7.2" height="15.0" fill="rgb(250,190,16)" rx="2" ry="2" />
<text  x="1013.14" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="289.3" y="1589" width="0.2" height="15.0" fill="rgb(247,69,45)" rx="2" ry="2" />
<text  x="292.32" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="547.6" y="1781" width="0.2" height="15.0" fill="rgb(217,167,43)" rx="2" ry="2" />
<text  x="550.59" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1048.5" y="1973" width="0.2" height="15.0" fill="rgb(210,50,37)" rx="2" ry="2" />
<text  x="1051.46" y="1983.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1019.3" y="2037" width="0.8" height="15.0" fill="rgb(241,207,45)" rx="2" ry="2" />
<text  x="1022.27" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (2 samples, 0.03%)</title><rect x="123.2" y="37" width="0.4" height="15.0" fill="rgb(234,137,33)" rx="2" ry="2" />
<text  x="126.16" y="47.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="1149.5" y="1957" width="0.4" height="15.0" fill="rgb(215,153,49)" rx="2" ry="2" />
<text  x="1152.50" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (5 samples, 0.08%)</title><rect x="653.6" y="2005" width="1.0" height="15.0" fill="rgb(222,215,16)" rx="2" ry="2" />
<text  x="656.60" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="519.2" y="1957" width="0.2" height="15.0" fill="rgb(246,61,13)" rx="2" ry="2" />
<text  x="522.20" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(248,135,29)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1127.3" y="2021" width="0.6" height="15.0" fill="rgb(217,42,52)" rx="2" ry="2" />
<text  x="1130.27" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1126.1" y="1941" width="0.2" height="15.0" fill="rgb(208,60,8)" rx="2" ry="2" />
<text  x="1129.08" y="1951.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="112.2" y="1941" width="0.2" height="15.0" fill="rgb(246,43,19)" rx="2" ry="2" />
<text  x="115.24" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="694.1" y="1813" width="0.2" height="15.0" fill="rgb(242,64,24)" rx="2" ry="2" />
<text  x="697.10" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="917.4" y="1957" width="0.4" height="15.0" fill="rgb(224,93,43)" rx="2" ry="2" />
<text  x="920.43" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="46.9" y="1957" width="0.4" height="15.0" fill="rgb(237,188,35)" rx="2" ry="2" />
<text  x="49.92" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="878.7" y="1909" width="0.4" height="15.0" fill="rgb(248,17,10)" rx="2" ry="2" />
<text  x="881.72" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="472.0" y="1893" width="0.2" height="15.0" fill="rgb(248,186,49)" rx="2" ry="2" />
<text  x="474.95" y="1903.5" ></text>
</g>
<g >
<title>process_backlog (39 samples, 0.66%)</title><rect x="1107.2" y="1701" width="7.8" height="15.0" fill="rgb(219,21,6)" rx="2" ry="2" />
<text  x="1110.22" y="1711.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="141.2" y="1749" width="0.2" height="15.0" fill="rgb(252,84,37)" rx="2" ry="2" />
<text  x="144.22" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="899.6" y="1909" width="0.2" height="15.0" fill="rgb(224,144,28)" rx="2" ry="2" />
<text  x="902.57" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="800.7" y="1269" width="0.2" height="15.0" fill="rgb(223,78,13)" rx="2" ry="2" />
<text  x="803.70" y="1279.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (4 samples, 0.07%)</title><rect x="991.3" y="1989" width="0.8" height="15.0" fill="rgb(218,163,41)" rx="2" ry="2" />
<text  x="994.28" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;folly::SocketAddress&amp;&gt; (2 samples, 0.03%)</title><rect x="40.6" y="2005" width="0.4" height="15.0" fill="rgb(221,77,0)" rx="2" ry="2" />
<text  x="43.57" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="39.6" y="2005" width="0.4" height="15.0" fill="rgb(237,3,42)" rx="2" ry="2" />
<text  x="42.58" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1048.7" y="1957" width="0.4" height="15.0" fill="rgb(232,16,9)" rx="2" ry="2" />
<text  x="1051.65" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (21 samples, 0.35%)</title><rect x="518.4" y="1989" width="4.2" height="15.0" fill="rgb(232,201,28)" rx="2" ry="2" />
<text  x="521.41" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="853.9" y="1813" width="0.2" height="15.0" fill="rgb(238,224,13)" rx="2" ry="2" />
<text  x="856.91" y="1823.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="600.8" y="1781" width="0.2" height="15.0" fill="rgb(238,7,27)" rx="2" ry="2" />
<text  x="603.79" y="1791.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="628.4" y="1829" width="0.2" height="15.0" fill="rgb(205,51,10)" rx="2" ry="2" />
<text  x="631.39" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="761.0" y="1589" width="0.2" height="15.0" fill="rgb(253,46,49)" rx="2" ry="2" />
<text  x="764.00" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (4 samples, 0.07%)</title><rect x="917.0" y="2037" width="0.8" height="15.0" fill="rgb(230,98,0)" rx="2" ry="2" />
<text  x="920.04" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="982.0" y="1925" width="0.3" height="15.0" fill="rgb(218,56,22)" rx="2" ry="2" />
<text  x="984.95" y="1935.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="823.1" y="1813" width="0.2" height="15.0" fill="rgb(223,90,47)" rx="2" ry="2" />
<text  x="826.14" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (8 samples, 0.13%)</title><rect x="575.2" y="2005" width="1.6" height="15.0" fill="rgb(217,225,48)" rx="2" ry="2" />
<text  x="578.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="129.1" y="37" width="0.8" height="15.0" fill="rgb(232,224,25)" rx="2" ry="2" />
<text  x="132.11" y="47.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1025.8" y="2053" width="0.2" height="15.0" fill="rgb(247,218,22)" rx="2" ry="2" />
<text  x="1028.82" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1000.4" y="1989" width="0.2" height="15.0" fill="rgb(226,98,13)" rx="2" ry="2" />
<text  x="1003.41" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="525.4" y="1973" width="0.4" height="15.0" fill="rgb(246,13,22)" rx="2" ry="2" />
<text  x="528.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="119.2" y="133" width="15.3" height="15.0" fill="rgb(253,103,8)" rx="2" ry="2" />
<text  x="122.19" y="143.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="637.3" y="1925" width="1.0" height="15.0" fill="rgb(229,12,38)" rx="2" ry="2" />
<text  x="640.32" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="731.4" y="1685" width="0.4" height="15.0" fill="rgb(213,17,13)" rx="2" ry="2" />
<text  x="734.42" y="1695.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1118.3" y="1877" width="0.2" height="15.0" fill="rgb(245,91,51)" rx="2" ry="2" />
<text  x="1121.33" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="543.8" y="1541" width="0.2" height="15.0" fill="rgb(241,59,30)" rx="2" ry="2" />
<text  x="546.82" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="159.9" y="1925" width="0.2" height="15.0" fill="rgb(250,221,38)" rx="2" ry="2" />
<text  x="162.88" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="510.3" y="1813" width="0.2" height="15.0" fill="rgb(217,183,39)" rx="2" ry="2" />
<text  x="513.27" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="169.0" y="1845" width="0.2" height="15.0" fill="rgb(234,195,30)" rx="2" ry="2" />
<text  x="172.01" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="247.8" y="1861" width="0.2" height="15.0" fill="rgb(230,113,29)" rx="2" ry="2" />
<text  x="250.83" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="838.4" y="1893" width="0.2" height="15.0" fill="rgb(210,103,32)" rx="2" ry="2" />
<text  x="841.42" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="830.5" y="1781" width="0.2" height="15.0" fill="rgb(216,210,31)" rx="2" ry="2" />
<text  x="833.48" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="88.6" y="1813" width="0.2" height="15.0" fill="rgb(248,15,40)" rx="2" ry="2" />
<text  x="91.61" y="1823.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="982.0" y="1781" width="0.2" height="15.0" fill="rgb(205,100,41)" rx="2" ry="2" />
<text  x="984.95" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.5" y="1989" width="0.2" height="15.0" fill="rgb(235,178,2)" rx="2" ry="2" />
<text  x="160.50" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="196.4" y="1669" width="0.2" height="15.0" fill="rgb(237,74,37)" rx="2" ry="2" />
<text  x="199.41" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="88.6" y="1893" width="0.2" height="15.0" fill="rgb(253,150,16)" rx="2" ry="2" />
<text  x="91.61" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1078.4" y="1765" width="0.2" height="15.0" fill="rgb(248,198,2)" rx="2" ry="2" />
<text  x="1081.43" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (10 samples, 0.17%)</title><rect x="1145.3" y="2053" width="2.0" height="15.0" fill="rgb(247,170,15)" rx="2" ry="2" />
<text  x="1148.33" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="883.5" y="1893" width="0.2" height="15.0" fill="rgb(229,23,26)" rx="2" ry="2" />
<text  x="886.49" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="837.4" y="1813" width="0.2" height="15.0" fill="rgb(211,147,48)" rx="2" ry="2" />
<text  x="840.43" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="185.7" y="2005" width="0.2" height="15.0" fill="rgb(245,178,23)" rx="2" ry="2" />
<text  x="188.69" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="668.3" y="1813" width="0.2" height="15.0" fill="rgb(221,59,21)" rx="2" ry="2" />
<text  x="671.29" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="40.0" y="2005" width="0.2" height="15.0" fill="rgb(221,179,48)" rx="2" ry="2" />
<text  x="42.98" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1071.9" y="1733" width="0.4" height="15.0" fill="rgb(252,146,13)" rx="2" ry="2" />
<text  x="1074.88" y="1743.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="238.3" y="1877" width="0.2" height="15.0" fill="rgb(213,175,54)" rx="2" ry="2" />
<text  x="241.30" y="1887.5" ></text>
</g>
<g >
<title>isspace@plt (2 samples, 0.03%)</title><rect x="1009.7" y="2021" width="0.4" height="15.0" fill="rgb(236,148,6)" rx="2" ry="2" />
<text  x="1012.74" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1189.0" y="1845" width="0.2" height="15.0" fill="rgb(241,2,36)" rx="2" ry="2" />
<text  x="1192.01" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="830.5" y="1749" width="0.2" height="15.0" fill="rgb(225,203,23)" rx="2" ry="2" />
<text  x="833.48" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="463.4" y="1893" width="0.2" height="15.0" fill="rgb(238,30,25)" rx="2" ry="2" />
<text  x="466.42" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="983.7" y="1973" width="0.2" height="15.0" fill="rgb(252,91,12)" rx="2" ry="2" />
<text  x="986.74" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (3 samples, 0.05%)</title><rect x="38.0" y="1973" width="0.6" height="15.0" fill="rgb(235,173,44)" rx="2" ry="2" />
<text  x="40.99" y="1983.5" ></text>
</g>
<g >
<title>sys_recvfrom (390 samples, 6.56%)</title><rect x="1049.1" y="2005" width="77.4" height="15.0" fill="rgb(228,104,1)" rx="2" ry="2" />
<text  x="1052.05" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="177.2" y="2005" width="0.5" height="15.0" fill="rgb(246,146,11)" rx="2" ry="2" />
<text  x="180.15" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="543.8" y="1909" width="0.2" height="15.0" fill="rgb(219,211,18)" rx="2" ry="2" />
<text  x="546.82" y="1919.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="840.2" y="1909" width="0.4" height="15.0" fill="rgb(252,151,1)" rx="2" ry="2" />
<text  x="843.21" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="156.3" y="1957" width="0.2" height="15.0" fill="rgb(248,202,17)" rx="2" ry="2" />
<text  x="159.31" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="956.3" y="1909" width="0.2" height="15.0" fill="rgb(245,33,41)" rx="2" ry="2" />
<text  x="959.34" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1087.0" y="1909" width="0.2" height="15.0" fill="rgb(224,98,34)" rx="2" ry="2" />
<text  x="1089.97" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.9" y="485" width="0.2" height="15.0" fill="rgb(226,2,40)" rx="2" ry="2" />
<text  x="139.85" y="495.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="936.1" y="1893" width="0.2" height="15.0" fill="rgb(208,181,54)" rx="2" ry="2" />
<text  x="939.09" y="1903.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1054.0" y="1829" width="0.2" height="15.0" fill="rgb(230,77,14)" rx="2" ry="2" />
<text  x="1057.01" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="351.1" y="1973" width="0.2" height="15.0" fill="rgb(254,225,32)" rx="2" ry="2" />
<text  x="354.06" y="1983.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="803.1" y="1621" width="0.2" height="15.0" fill="rgb(206,148,29)" rx="2" ry="2" />
<text  x="806.09" y="1631.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.0" y="1861" width="0.2" height="15.0" fill="rgb(248,103,4)" rx="2" ry="2" />
<text  x="544.04" y="1871.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="1090.3" y="1701" width="0.2" height="15.0" fill="rgb(211,207,18)" rx="2" ry="2" />
<text  x="1093.34" y="1711.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="654.4" y="1653" width="0.2" height="15.0" fill="rgb(227,38,54)" rx="2" ry="2" />
<text  x="657.39" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.4" y="1973" width="0.2" height="15.0" fill="rgb(220,218,12)" rx="2" ry="2" />
<text  x="578.38" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1182.7" y="1989" width="0.2" height="15.0" fill="rgb(210,19,50)" rx="2" ry="2" />
<text  x="1185.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (6 samples, 0.10%)</title><rect x="661.3" y="2037" width="1.2" height="15.0" fill="rgb(247,183,40)" rx="2" ry="2" />
<text  x="664.34" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="289.3" y="1733" width="0.2" height="15.0" fill="rgb(214,37,29)" rx="2" ry="2" />
<text  x="292.32" y="1743.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="398.5" y="1813" width="0.2" height="15.0" fill="rgb(225,176,10)" rx="2" ry="2" />
<text  x="401.50" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1106.6" y="1717" width="0.2" height="15.0" fill="rgb(247,123,45)" rx="2" ry="2" />
<text  x="1109.62" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="491.8" y="1861" width="0.2" height="15.0" fill="rgb(236,209,45)" rx="2" ry="2" />
<text  x="494.81" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="547.6" y="1877" width="0.2" height="15.0" fill="rgb(215,194,50)" rx="2" ry="2" />
<text  x="550.59" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::coalesceAndGetRange (1 samples, 0.02%)</title><rect x="975.6" y="2005" width="0.2" height="15.0" fill="rgb(248,14,4)" rx="2" ry="2" />
<text  x="978.60" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="982.2" y="1829" width="0.1" height="15.0" fill="rgb(207,163,3)" rx="2" ry="2" />
<text  x="985.15" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="899.6" y="1829" width="0.2" height="15.0" fill="rgb(237,186,43)" rx="2" ry="2" />
<text  x="902.57" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1189.4" y="2053" width="0.2" height="15.0" fill="rgb(232,201,46)" rx="2" ry="2" />
<text  x="1192.40" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="510.9" y="2021" width="0.2" height="15.0" fill="rgb(254,27,13)" rx="2" ry="2" />
<text  x="513.86" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="145.2" y="1973" width="0.2" height="15.0" fill="rgb(225,229,14)" rx="2" ry="2" />
<text  x="148.19" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="268.3" y="1893" width="0.2" height="15.0" fill="rgb(218,69,31)" rx="2" ry="2" />
<text  x="271.27" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="279.0" y="1621" width="0.2" height="15.0" fill="rgb(236,74,22)" rx="2" ry="2" />
<text  x="281.99" y="1631.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="134.5" y="85" width="0.2" height="15.0" fill="rgb(246,178,33)" rx="2" ry="2" />
<text  x="137.47" y="95.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="662.1" y="1957" width="0.2" height="15.0" fill="rgb(230,48,48)" rx="2" ry="2" />
<text  x="665.14" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1176.9" y="2005" width="0.2" height="15.0" fill="rgb(248,37,13)" rx="2" ry="2" />
<text  x="1179.90" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="314.7" y="1653" width="0.2" height="15.0" fill="rgb(213,217,8)" rx="2" ry="2" />
<text  x="317.73" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1021.5" y="2005" width="0.2" height="15.0" fill="rgb(248,135,35)" rx="2" ry="2" />
<text  x="1024.46" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="800.7" y="1413" width="0.2" height="15.0" fill="rgb(205,209,52)" rx="2" ry="2" />
<text  x="803.70" y="1423.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="115.6" y="1989" width="0.2" height="15.0" fill="rgb(237,24,23)" rx="2" ry="2" />
<text  x="118.61" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="392.2" y="1893" width="0.1" height="15.0" fill="rgb(228,211,21)" rx="2" ry="2" />
<text  x="395.15" y="1903.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1088.6" y="1925" width="0.2" height="15.0" fill="rgb(245,199,30)" rx="2" ry="2" />
<text  x="1091.56" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="760.6" y="1669" width="0.2" height="15.0" fill="rgb(211,160,50)" rx="2" ry="2" />
<text  x="763.60" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="800.7" y="1381" width="0.2" height="15.0" fill="rgb(251,126,11)" rx="2" ry="2" />
<text  x="803.70" y="1391.5" ></text>
</g>
<g >
<title>__fdget (19 samples, 0.32%)</title><rect x="1122.1" y="1957" width="3.8" height="15.0" fill="rgb(242,220,18)" rx="2" ry="2" />
<text  x="1125.11" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="887.5" y="1957" width="0.2" height="15.0" fill="rgb(253,0,5)" rx="2" ry="2" />
<text  x="890.46" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="936.9" y="1909" width="0.4" height="15.0" fill="rgb(227,188,19)" rx="2" ry="2" />
<text  x="939.89" y="1919.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="745.9" y="1413" width="0.2" height="15.0" fill="rgb(224,156,47)" rx="2" ry="2" />
<text  x="748.91" y="1423.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="184.5" y="1957" width="0.2" height="15.0" fill="rgb(215,116,5)" rx="2" ry="2" />
<text  x="187.50" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="694.1" y="1541" width="0.2" height="15.0" fill="rgb(225,209,41)" rx="2" ry="2" />
<text  x="697.10" y="1551.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="654.4" y="1733" width="0.2" height="15.0" fill="rgb(252,100,5)" rx="2" ry="2" />
<text  x="657.39" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1052.0" y="1925" width="0.2" height="15.0" fill="rgb(243,128,49)" rx="2" ry="2" />
<text  x="1055.03" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="938.9" y="1925" width="0.2" height="15.0" fill="rgb(239,106,35)" rx="2" ry="2" />
<text  x="941.87" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="902.1" y="1989" width="3.6" height="15.0" fill="rgb(220,205,22)" rx="2" ry="2" />
<text  x="905.15" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="562.3" y="1685" width="0.2" height="15.0" fill="rgb(222,84,27)" rx="2" ry="2" />
<text  x="565.28" y="1695.5" ></text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="744.7" y="1797" width="0.2" height="15.0" fill="rgb(229,91,21)" rx="2" ry="2" />
<text  x="747.72" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="825.3" y="1525" width="0.2" height="15.0" fill="rgb(206,199,7)" rx="2" ry="2" />
<text  x="828.32" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="136.1" y="277" width="0.2" height="15.0" fill="rgb(213,123,45)" rx="2" ry="2" />
<text  x="139.06" y="287.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="134.9" y="133" width="0.2" height="15.0" fill="rgb(219,113,13)" rx="2" ry="2" />
<text  x="137.87" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="995.1" y="1973" width="0.2" height="15.0" fill="rgb(212,45,39)" rx="2" ry="2" />
<text  x="998.05" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="320.7" y="1733" width="0.2" height="15.0" fill="rgb(208,63,43)" rx="2" ry="2" />
<text  x="323.68" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="136.1" y="85" width="0.2" height="15.0" fill="rgb(249,209,41)" rx="2" ry="2" />
<text  x="139.06" y="95.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="955.9" y="1973" width="0.2" height="15.0" fill="rgb(229,74,25)" rx="2" ry="2" />
<text  x="958.95" y="1983.5" ></text>
</g>
<g >
<title>__alloc_fd (10 samples, 0.17%)</title><rect x="364.6" y="1941" width="1.9" height="15.0" fill="rgb(228,61,24)" rx="2" ry="2" />
<text  x="367.56" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (6 samples, 0.10%)</title><rect x="885.5" y="1941" width="1.2" height="15.0" fill="rgb(215,146,4)" rx="2" ry="2" />
<text  x="888.47" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="267.3" y="1909" width="0.2" height="15.0" fill="rgb(221,100,15)" rx="2" ry="2" />
<text  x="270.28" y="1919.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="731.6" y="1349" width="0.2" height="15.0" fill="rgb(248,153,37)" rx="2" ry="2" />
<text  x="734.62" y="1359.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="136.3" y="149" width="0.2" height="15.0" fill="rgb(209,171,39)" rx="2" ry="2" />
<text  x="139.26" y="159.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="247.4" y="1701" width="0.2" height="15.0" fill="rgb(234,33,7)" rx="2" ry="2" />
<text  x="250.43" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="70.0" y="1813" width="0.2" height="15.0" fill="rgb(239,85,43)" rx="2" ry="2" />
<text  x="72.95" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (3 samples, 0.05%)</title><rect x="185.9" y="2005" width="0.6" height="15.0" fill="rgb(207,205,47)" rx="2" ry="2" />
<text  x="188.89" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="207.3" y="1861" width="0.2" height="15.0" fill="rgb(253,56,31)" rx="2" ry="2" />
<text  x="210.33" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="856.9" y="1957" width="0.2" height="15.0" fill="rgb(248,102,54)" rx="2" ry="2" />
<text  x="859.88" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="739.8" y="1381" width="0.2" height="15.0" fill="rgb(248,202,26)" rx="2" ry="2" />
<text  x="742.76" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="924.6" y="1893" width="0.2" height="15.0" fill="rgb(215,68,30)" rx="2" ry="2" />
<text  x="927.58" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="136.3" y="69" width="0.2" height="15.0" fill="rgb(233,200,14)" rx="2" ry="2" />
<text  x="139.26" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="61.0" y="1701" width="0.2" height="15.0" fill="rgb(211,95,50)" rx="2" ry="2" />
<text  x="64.02" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="651.8" y="1781" width="0.2" height="15.0" fill="rgb(223,25,39)" rx="2" ry="2" />
<text  x="654.81" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="536.1" y="1909" width="0.6" height="15.0" fill="rgb(214,177,1)" rx="2" ry="2" />
<text  x="539.08" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="156.3" y="1781" width="0.2" height="15.0" fill="rgb(217,183,13)" rx="2" ry="2" />
<text  x="159.31" y="1791.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (4 samples, 0.07%)</title><rect x="836.8" y="1909" width="0.8" height="15.0" fill="rgb(211,32,21)" rx="2" ry="2" />
<text  x="839.83" y="1919.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="932.7" y="1877" width="0.8" height="15.0" fill="rgb(244,110,13)" rx="2" ry="2" />
<text  x="935.72" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (87 samples, 1.46%)</title><rect x="511.3" y="2037" width="17.2" height="15.0" fill="rgb(242,52,40)" rx="2" ry="2" />
<text  x="514.26" y="2047.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="12.6" y="1957" width="1.0" height="15.0" fill="rgb(254,128,6)" rx="2" ry="2" />
<text  x="15.58" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="934.1" y="1861" width="0.2" height="15.0" fill="rgb(236,28,15)" rx="2" ry="2" />
<text  x="937.11" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1052.0" y="1813" width="0.2" height="15.0" fill="rgb(237,212,8)" rx="2" ry="2" />
<text  x="1055.03" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="246.2" y="1893" width="0.2" height="15.0" fill="rgb(240,223,39)" rx="2" ry="2" />
<text  x="249.24" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="104.5" y="1973" width="0.2" height="15.0" fill="rgb(229,147,3)" rx="2" ry="2" />
<text  x="107.50" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="366.3" y="1877" width="0.2" height="15.0" fill="rgb(213,49,44)" rx="2" ry="2" />
<text  x="369.34" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1156.5" y="1829" width="0.1" height="15.0" fill="rgb(207,91,4)" rx="2" ry="2" />
<text  x="1159.45" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="156.3" y="1861" width="0.2" height="15.0" fill="rgb(237,23,19)" rx="2" ry="2" />
<text  x="159.31" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="547.6" y="1909" width="0.2" height="15.0" fill="rgb(213,162,44)" rx="2" ry="2" />
<text  x="550.59" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="61.0" y="1797" width="0.2" height="15.0" fill="rgb(218,106,54)" rx="2" ry="2" />
<text  x="64.02" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1143.5" y="1957" width="0.2" height="15.0" fill="rgb(215,84,2)" rx="2" ry="2" />
<text  x="1146.55" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="700.6" y="1813" width="0.2" height="15.0" fill="rgb(230,95,33)" rx="2" ry="2" />
<text  x="703.65" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="842.6" y="1685" width="0.2" height="15.0" fill="rgb(237,80,39)" rx="2" ry="2" />
<text  x="845.59" y="1695.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="486.8" y="1637" width="0.2" height="15.0" fill="rgb(244,168,37)" rx="2" ry="2" />
<text  x="489.84" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="733.8" y="1461" width="0.2" height="15.0" fill="rgb(234,186,20)" rx="2" ry="2" />
<text  x="736.80" y="1471.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="138.6" y="1477" width="0.2" height="15.0" fill="rgb(229,46,10)" rx="2" ry="2" />
<text  x="141.64" y="1487.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="56.9" y="1909" width="0.1" height="15.0" fill="rgb(219,15,14)" rx="2" ry="2" />
<text  x="59.85" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="486.8" y="1557" width="0.2" height="15.0" fill="rgb(244,44,25)" rx="2" ry="2" />
<text  x="489.84" y="1567.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="1177.9" y="2053" width="0.2" height="15.0" fill="rgb(221,94,38)" rx="2" ry="2" />
<text  x="1180.89" y="2063.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="610.5" y="1813" width="0.4" height="15.0" fill="rgb(224,40,48)" rx="2" ry="2" />
<text  x="613.52" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="114.8" y="1781" width="0.2" height="15.0" fill="rgb(234,73,0)" rx="2" ry="2" />
<text  x="117.82" y="1791.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="393.7" y="1941" width="0.2" height="15.0" fill="rgb(244,48,46)" rx="2" ry="2" />
<text  x="396.74" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="417.0" y="1925" width="0.8" height="15.0" fill="rgb(229,171,8)" rx="2" ry="2" />
<text  x="419.97" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="112.4" y="1925" width="0.2" height="15.0" fill="rgb(217,109,7)" rx="2" ry="2" />
<text  x="115.44" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="613.1" y="1909" width="0.2" height="15.0" fill="rgb(207,151,24)" rx="2" ry="2" />
<text  x="616.10" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1086.8" y="1797" width="0.2" height="15.0" fill="rgb(252,213,28)" rx="2" ry="2" />
<text  x="1089.77" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="627.2" y="1845" width="0.2" height="15.0" fill="rgb(214,125,10)" rx="2" ry="2" />
<text  x="630.20" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="952.8" y="1989" width="0.2" height="15.0" fill="rgb(254,205,39)" rx="2" ry="2" />
<text  x="955.77" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="529.3" y="1877" width="0.2" height="15.0" fill="rgb(227,94,28)" rx="2" ry="2" />
<text  x="532.33" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="119.2" y="357" width="17.1" height="15.0" fill="rgb(235,45,37)" rx="2" ry="2" />
<text  x="122.19" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="923.2" y="1925" width="1.0" height="15.0" fill="rgb(207,113,48)" rx="2" ry="2" />
<text  x="926.19" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="166.8" y="1813" width="0.2" height="15.0" fill="rgb(242,176,25)" rx="2" ry="2" />
<text  x="169.83" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="723.9" y="1845" width="0.2" height="15.0" fill="rgb(214,189,45)" rx="2" ry="2" />
<text  x="726.88" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="317.5" y="1717" width="0.2" height="15.0" fill="rgb(227,12,36)" rx="2" ry="2" />
<text  x="320.51" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1135.6" y="2037" width="0.4" height="15.0" fill="rgb(239,128,51)" rx="2" ry="2" />
<text  x="1138.61" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1162.6" y="1893" width="0.2" height="15.0" fill="rgb(252,216,5)" rx="2" ry="2" />
<text  x="1165.60" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="127.1" y="37" width="0.8" height="15.0" fill="rgb(217,115,27)" rx="2" ry="2" />
<text  x="130.13" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (2 samples, 0.03%)</title><rect x="580.5" y="2021" width="0.4" height="15.0" fill="rgb(239,12,6)" rx="2" ry="2" />
<text  x="583.55" y="2031.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="207.1" y="2037" width="0.4" height="15.0" fill="rgb(207,221,2)" rx="2" ry="2" />
<text  x="210.13" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="613.1" y="1717" width="0.2" height="15.0" fill="rgb(223,44,26)" rx="2" ry="2" />
<text  x="616.10" y="1727.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="733.8" y="1445" width="0.2" height="15.0" fill="rgb(223,173,46)" rx="2" ry="2" />
<text  x="736.80" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="654.4" y="1957" width="0.2" height="15.0" fill="rgb(245,10,54)" rx="2" ry="2" />
<text  x="657.39" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1088.2" y="1909" width="0.2" height="15.0" fill="rgb(247,179,29)" rx="2" ry="2" />
<text  x="1091.16" y="1919.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="1048.9" y="1733" width="0.2" height="15.0" fill="rgb(223,36,33)" rx="2" ry="2" />
<text  x="1051.85" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="937.9" y="1973" width="0.2" height="15.0" fill="rgb(239,93,42)" rx="2" ry="2" />
<text  x="940.88" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="701.4" y="1957" width="0.2" height="15.0" fill="rgb(230,222,5)" rx="2" ry="2" />
<text  x="704.44" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1163.8" y="1941" width="0.2" height="15.0" fill="rgb(250,10,53)" rx="2" ry="2" />
<text  x="1166.80" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="870.0" y="1989" width="0.2" height="15.0" fill="rgb(232,109,46)" rx="2" ry="2" />
<text  x="872.99" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.3" y="1941" width="0.2" height="15.0" fill="rgb(236,106,10)" rx="2" ry="2" />
<text  x="59.26" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="155.5" y="1973" width="0.2" height="15.0" fill="rgb(239,197,30)" rx="2" ry="2" />
<text  x="158.51" y="1983.5" ></text>
</g>
<g >
<title>sock_alloc (53 samples, 0.89%)</title><rect x="394.1" y="1957" width="10.6" height="15.0" fill="rgb(247,223,48)" rx="2" ry="2" />
<text  x="397.14" y="1967.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="729.8" y="1733" width="0.2" height="15.0" fill="rgb(234,106,49)" rx="2" ry="2" />
<text  x="732.83" y="1743.5" ></text>
</g>
<g >
<title>get_empty_filp (1 samples, 0.02%)</title><rect x="416.4" y="1941" width="0.2" height="15.0" fill="rgb(231,124,11)" rx="2" ry="2" />
<text  x="419.37" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="800.7" y="1573" width="0.2" height="15.0" fill="rgb(243,203,36)" rx="2" ry="2" />
<text  x="803.70" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="269.3" y="1733" width="0.2" height="15.0" fill="rgb(225,212,4)" rx="2" ry="2" />
<text  x="272.27" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="267.3" y="1861" width="0.2" height="15.0" fill="rgb(234,59,9)" rx="2" ry="2" />
<text  x="270.28" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="419.0" y="1877" width="0.1" height="15.0" fill="rgb(244,37,20)" rx="2" ry="2" />
<text  x="421.95" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="138.0" y="1317" width="0.2" height="15.0" fill="rgb(226,22,50)" rx="2" ry="2" />
<text  x="141.05" y="1327.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="688.7" y="1925" width="0.2" height="15.0" fill="rgb(222,86,1)" rx="2" ry="2" />
<text  x="691.74" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="968.8" y="2021" width="0.2" height="15.0" fill="rgb(208,63,15)" rx="2" ry="2" />
<text  x="971.85" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="992.3" y="1941" width="0.2" height="15.0" fill="rgb(243,34,34)" rx="2" ry="2" />
<text  x="995.27" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="179.9" y="2005" width="0.2" height="15.0" fill="rgb(227,71,32)" rx="2" ry="2" />
<text  x="182.93" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="884.9" y="1701" width="0.2" height="15.0" fill="rgb(249,150,15)" rx="2" ry="2" />
<text  x="887.88" y="1711.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="753.5" y="1701" width="0.2" height="15.0" fill="rgb(223,185,53)" rx="2" ry="2" />
<text  x="756.46" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="134.9" y="149" width="0.2" height="15.0" fill="rgb(211,41,4)" rx="2" ry="2" />
<text  x="137.87" y="159.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="630.4" y="1813" width="0.2" height="15.0" fill="rgb(233,65,6)" rx="2" ry="2" />
<text  x="633.37" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="968.1" y="1989" width="0.2" height="15.0" fill="rgb(232,96,20)" rx="2" ry="2" />
<text  x="971.06" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="104.7" y="1989" width="0.4" height="15.0" fill="rgb(243,141,0)" rx="2" ry="2" />
<text  x="107.69" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="300.6" y="1605" width="0.4" height="15.0" fill="rgb(246,28,49)" rx="2" ry="2" />
<text  x="303.63" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="706.0" y="1813" width="0.2" height="15.0" fill="rgb(219,166,4)" rx="2" ry="2" />
<text  x="709.01" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="167.0" y="1877" width="0.2" height="15.0" fill="rgb(228,191,19)" rx="2" ry="2" />
<text  x="170.03" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="36.2" y="1989" width="0.4" height="15.0" fill="rgb(206,66,7)" rx="2" ry="2" />
<text  x="39.20" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="978.4" y="1989" width="0.4" height="15.0" fill="rgb(224,189,1)" rx="2" ry="2" />
<text  x="981.38" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1172.7" y="1893" width="0.2" height="15.0" fill="rgb(248,160,18)" rx="2" ry="2" />
<text  x="1175.73" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="899.2" y="1973" width="0.2" height="15.0" fill="rgb(243,144,43)" rx="2" ry="2" />
<text  x="902.17" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (13 samples, 0.22%)</title><rect x="89.2" y="1957" width="2.6" height="15.0" fill="rgb(228,195,21)" rx="2" ry="2" />
<text  x="92.21" y="1967.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="180.5" y="2021" width="0.4" height="15.0" fill="rgb(235,220,29)" rx="2" ry="2" />
<text  x="183.53" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="755.4" y="1605" width="0.2" height="15.0" fill="rgb(238,119,44)" rx="2" ry="2" />
<text  x="758.44" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="562.1" y="1845" width="0.2" height="15.0" fill="rgb(207,96,12)" rx="2" ry="2" />
<text  x="565.08" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="290.5" y="1765" width="0.2" height="15.0" fill="rgb(227,85,3)" rx="2" ry="2" />
<text  x="293.51" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="139.4" y="1509" width="0.2" height="15.0" fill="rgb(220,220,23)" rx="2" ry="2" />
<text  x="142.43" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="701.4" y="1925" width="0.2" height="15.0" fill="rgb(209,179,30)" rx="2" ry="2" />
<text  x="704.44" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="879.1" y="1941" width="0.6" height="15.0" fill="rgb(246,211,22)" rx="2" ry="2" />
<text  x="882.12" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (3 samples, 0.05%)</title><rect x="82.9" y="1957" width="0.6" height="15.0" fill="rgb(253,80,40)" rx="2" ry="2" />
<text  x="85.86" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1024.0" y="1941" width="0.2" height="15.0" fill="rgb(208,185,53)" rx="2" ry="2" />
<text  x="1027.04" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="163.3" y="1605" width="0.2" height="15.0" fill="rgb(239,7,46)" rx="2" ry="2" />
<text  x="166.26" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="128.5" y="53" width="2.6" height="15.0" fill="rgb(225,167,16)" rx="2" ry="2" />
<text  x="131.52" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="532.5" y="1973" width="0.2" height="15.0" fill="rgb(225,70,25)" rx="2" ry="2" />
<text  x="535.50" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1068.1" y="1797" width="0.2" height="15.0" fill="rgb(247,112,50)" rx="2" ry="2" />
<text  x="1071.11" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="630.4" y="1589" width="0.2" height="15.0" fill="rgb(240,28,30)" rx="2" ry="2" />
<text  x="633.37" y="1599.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="861.5" y="1973" width="0.1" height="15.0" fill="rgb(250,69,4)" rx="2" ry="2" />
<text  x="864.45" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="950.2" y="1973" width="0.2" height="15.0" fill="rgb(242,227,29)" rx="2" ry="2" />
<text  x="953.19" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="630.4" y="1685" width="0.2" height="15.0" fill="rgb(205,91,7)" rx="2" ry="2" />
<text  x="633.37" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (13 samples, 0.22%)</title><rect x="921.6" y="1941" width="2.6" height="15.0" fill="rgb(243,96,22)" rx="2" ry="2" />
<text  x="924.60" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (320 samples, 5.38%)</title><rect x="429.1" y="2021" width="63.5" height="15.0" fill="rgb(231,163,50)" rx="2" ry="2" />
<text  x="432.07" y="2031.5" >entry_..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1002.4" y="1797" width="0.2" height="15.0" fill="rgb(253,144,31)" rx="2" ry="2" />
<text  x="1005.40" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="74.9" y="1701" width="0.2" height="15.0" fill="rgb(242,112,32)" rx="2" ry="2" />
<text  x="77.92" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1052.0" y="1781" width="0.2" height="15.0" fill="rgb(254,142,42)" rx="2" ry="2" />
<text  x="1055.03" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (2 samples, 0.03%)</title><rect x="1149.9" y="1989" width="0.4" height="15.0" fill="rgb(219,52,4)" rx="2" ry="2" />
<text  x="1152.90" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="534.1" y="1941" width="0.2" height="15.0" fill="rgb(245,3,27)" rx="2" ry="2" />
<text  x="537.09" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1019.9" y="1925" width="0.2" height="15.0" fill="rgb(215,6,28)" rx="2" ry="2" />
<text  x="1022.87" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="539.8" y="1941" width="1.8" height="15.0" fill="rgb(246,146,12)" rx="2" ry="2" />
<text  x="542.85" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="149.8" y="1973" width="0.2" height="15.0" fill="rgb(252,61,24)" rx="2" ry="2" />
<text  x="152.76" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1017.1" y="1813" width="0.2" height="15.0" fill="rgb(232,79,53)" rx="2" ry="2" />
<text  x="1020.09" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="520.0" y="1717" width="0.2" height="15.0" fill="rgb(250,83,41)" rx="2" ry="2" />
<text  x="523.00" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="156.3" y="1829" width="0.2" height="15.0" fill="rgb(207,36,42)" rx="2" ry="2" />
<text  x="159.31" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (3 samples, 0.05%)</title><rect x="528.5" y="1925" width="0.6" height="15.0" fill="rgb(234,92,13)" rx="2" ry="2" />
<text  x="531.53" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="883.5" y="1909" width="0.2" height="15.0" fill="rgb(246,223,10)" rx="2" ry="2" />
<text  x="886.49" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="109.1" y="2021" width="0.2" height="15.0" fill="rgb(218,214,51)" rx="2" ry="2" />
<text  x="112.06" y="2031.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="145.4" y="1989" width="0.2" height="15.0" fill="rgb(221,2,47)" rx="2" ry="2" />
<text  x="148.39" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="974.4" y="2037" width="0.6" height="15.0" fill="rgb(244,3,45)" rx="2" ry="2" />
<text  x="977.41" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="842.6" y="1845" width="0.2" height="15.0" fill="rgb(223,12,33)" rx="2" ry="2" />
<text  x="845.59" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="130.3" y="37" width="0.4" height="15.0" fill="rgb(254,30,30)" rx="2" ry="2" />
<text  x="133.30" y="47.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (4 samples, 0.07%)</title><rect x="1008.6" y="1989" width="0.7" height="15.0" fill="rgb(241,215,39)" rx="2" ry="2" />
<text  x="1011.55" y="1999.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="1005.6" y="1717" width="0.2" height="15.0" fill="rgb(240,171,9)" rx="2" ry="2" />
<text  x="1008.58" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="755.4" y="1653" width="0.2" height="15.0" fill="rgb(232,108,28)" rx="2" ry="2" />
<text  x="758.44" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="701.4" y="1845" width="0.2" height="15.0" fill="rgb(215,227,39)" rx="2" ry="2" />
<text  x="704.44" y="1855.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.02%)</title><rect x="1034.2" y="1925" width="0.2" height="15.0" fill="rgb(238,67,48)" rx="2" ry="2" />
<text  x="1037.16" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="283.0" y="1605" width="0.2" height="15.0" fill="rgb(238,80,20)" rx="2" ry="2" />
<text  x="285.96" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="901.2" y="1989" width="0.7" height="15.0" fill="rgb(246,111,51)" rx="2" ry="2" />
<text  x="904.15" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.2" y="1973" width="0.2" height="15.0" fill="rgb(242,179,53)" rx="2" ry="2" />
<text  x="1002.22" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1002.4" y="1717" width="0.2" height="15.0" fill="rgb(251,15,0)" rx="2" ry="2" />
<text  x="1005.40" y="1727.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1154.3" y="1653" width="0.2" height="15.0" fill="rgb(228,115,14)" rx="2" ry="2" />
<text  x="1157.27" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="1178.1" y="2053" width="0.2" height="15.0" fill="rgb(238,15,18)" rx="2" ry="2" />
<text  x="1181.09" y="2063.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="631.8" y="2005" width="0.2" height="15.0" fill="rgb(242,207,7)" rx="2" ry="2" />
<text  x="634.76" y="2015.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="1121.3" y="1845" width="0.2" height="15.0" fill="rgb(254,34,20)" rx="2" ry="2" />
<text  x="1124.31" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (93 samples, 1.56%)</title><rect x="662.7" y="2037" width="18.5" height="15.0" fill="rgb(243,225,35)" rx="2" ry="2" />
<text  x="665.73" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="139.6" y="1525" width="0.2" height="15.0" fill="rgb(254,1,50)" rx="2" ry="2" />
<text  x="142.63" y="1535.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="825.3" y="1557" width="0.2" height="15.0" fill="rgb(224,109,31)" rx="2" ry="2" />
<text  x="828.32" y="1567.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (3 samples, 0.05%)</title><rect x="793.0" y="1509" width="0.6" height="15.0" fill="rgb(230,198,48)" rx="2" ry="2" />
<text  x="795.96" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="602.4" y="1893" width="0.2" height="15.0" fill="rgb(249,8,19)" rx="2" ry="2" />
<text  x="605.38" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="145.0" y="1973" width="0.2" height="15.0" fill="rgb(209,18,45)" rx="2" ry="2" />
<text  x="147.99" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="305.0" y="1701" width="0.4" height="15.0" fill="rgb(208,213,25)" rx="2" ry="2" />
<text  x="308.00" y="1711.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="492.0" y="1973" width="0.2" height="15.0" fill="rgb(244,129,13)" rx="2" ry="2" />
<text  x="495.01" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.12%)</title><rect x="1179.7" y="2021" width="1.4" height="15.0" fill="rgb(254,57,41)" rx="2" ry="2" />
<text  x="1182.68" y="2031.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="761.2" y="1701" width="1.2" height="15.0" fill="rgb(252,40,52)" rx="2" ry="2" />
<text  x="764.20" y="1711.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="113.8" y="2005" width="0.2" height="15.0" fill="rgb(236,131,2)" rx="2" ry="2" />
<text  x="116.83" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="490.2" y="1765" width="0.2" height="15.0" fill="rgb(239,139,16)" rx="2" ry="2" />
<text  x="493.22" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="141.4" y="1749" width="0.4" height="15.0" fill="rgb(223,187,36)" rx="2" ry="2" />
<text  x="144.42" y="1759.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="792.4" y="1493" width="0.4" height="15.0" fill="rgb(209,50,34)" rx="2" ry="2" />
<text  x="795.37" y="1503.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="883.3" y="1925" width="0.2" height="15.0" fill="rgb(236,131,13)" rx="2" ry="2" />
<text  x="886.29" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (1 samples, 0.02%)</title><rect x="602.4" y="1925" width="0.2" height="15.0" fill="rgb(235,117,54)" rx="2" ry="2" />
<text  x="605.38" y="1935.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(237,104,6)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="800.7" y="1493" width="0.2" height="15.0" fill="rgb(243,182,44)" rx="2" ry="2" />
<text  x="803.70" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="613.1" y="1845" width="0.2" height="15.0" fill="rgb(231,55,15)" rx="2" ry="2" />
<text  x="616.10" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="1174.5" y="1989" width="0.8" height="15.0" fill="rgb(237,102,1)" rx="2" ry="2" />
<text  x="1177.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="95.2" y="1925" width="0.2" height="15.0" fill="rgb(240,84,51)" rx="2" ry="2" />
<text  x="98.16" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="136.7" y="293" width="0.2" height="15.0" fill="rgb(248,175,41)" rx="2" ry="2" />
<text  x="139.66" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="742.7" y="1701" width="0.2" height="15.0" fill="rgb(252,163,30)" rx="2" ry="2" />
<text  x="745.74" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="844.2" y="1701" width="0.2" height="15.0" fill="rgb(248,168,27)" rx="2" ry="2" />
<text  x="847.18" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1797" width="0.2" height="15.0" fill="rgb(237,86,39)" rx="2" ry="2" />
<text  x="216.68" y="1807.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="414.0" y="1861" width="0.2" height="15.0" fill="rgb(232,227,18)" rx="2" ry="2" />
<text  x="416.99" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1072.1" y="1637" width="0.2" height="15.0" fill="rgb(253,7,22)" rx="2" ry="2" />
<text  x="1075.08" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="196.4" y="1525" width="0.2" height="15.0" fill="rgb(238,54,7)" rx="2" ry="2" />
<text  x="199.41" y="1535.5" ></text>
</g>
<g >
<title>skb_clone (15 samples, 0.25%)</title><rect x="796.5" y="1669" width="3.0" height="15.0" fill="rgb(228,143,39)" rx="2" ry="2" />
<text  x="799.53" y="1679.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="1106.6" y="1445" width="0.2" height="15.0" fill="rgb(233,104,15)" rx="2" ry="2" />
<text  x="1109.62" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="679.4" y="1829" width="0.2" height="15.0" fill="rgb(228,66,7)" rx="2" ry="2" />
<text  x="682.41" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="510.3" y="1781" width="0.2" height="15.0" fill="rgb(230,66,2)" rx="2" ry="2" />
<text  x="513.27" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="515.6" y="1973" width="0.4" height="15.0" fill="rgb(246,164,23)" rx="2" ry="2" />
<text  x="518.63" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (10 samples, 0.17%)</title><rect x="845.6" y="1941" width="2.0" height="15.0" fill="rgb(240,155,50)" rx="2" ry="2" />
<text  x="848.57" y="1951.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1006.2" y="1973" width="0.2" height="15.0" fill="rgb(214,139,36)" rx="2" ry="2" />
<text  x="1009.17" y="1983.5" ></text>
</g>
<g >
<title>sock_edemux (1 samples, 0.02%)</title><rect x="842.2" y="1733" width="0.2" height="15.0" fill="rgb(213,4,21)" rx="2" ry="2" />
<text  x="845.19" y="1743.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="855.9" y="1893" width="0.2" height="15.0" fill="rgb(220,1,13)" rx="2" ry="2" />
<text  x="858.89" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="138.0" y="1333" width="0.2" height="15.0" fill="rgb(215,191,7)" rx="2" ry="2" />
<text  x="141.05" y="1343.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (12 samples, 0.20%)</title><rect x="281.2" y="1829" width="2.4" height="15.0" fill="rgb(210,190,53)" rx="2" ry="2" />
<text  x="284.18" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="12.0" y="2037" width="0.2" height="15.0" fill="rgb(216,219,42)" rx="2" ry="2" />
<text  x="14.99" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="214.3" y="2021" width="3.7" height="15.0" fill="rgb(233,187,11)" rx="2" ry="2" />
<text  x="217.28" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (10 samples, 0.17%)</title><rect x="845.6" y="1925" width="2.0" height="15.0" fill="rgb(252,33,4)" rx="2" ry="2" />
<text  x="848.57" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="407.8" y="1893" width="0.2" height="15.0" fill="rgb(237,154,53)" rx="2" ry="2" />
<text  x="410.83" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="135.9" y="69" width="0.2" height="15.0" fill="rgb(207,213,42)" rx="2" ry="2" />
<text  x="138.86" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (5 samples, 0.08%)</title><rect x="760.2" y="1701" width="1.0" height="15.0" fill="rgb(241,218,45)" rx="2" ry="2" />
<text  x="763.21" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1052.0" y="1909" width="0.2" height="15.0" fill="rgb(207,65,25)" rx="2" ry="2" />
<text  x="1055.03" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="894.6" y="1909" width="0.2" height="15.0" fill="rgb(254,209,7)" rx="2" ry="2" />
<text  x="897.60" y="1919.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="752.5" y="1733" width="0.2" height="15.0" fill="rgb(231,80,22)" rx="2" ry="2" />
<text  x="755.46" y="1743.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="870.0" y="1861" width="0.2" height="15.0" fill="rgb(228,60,30)" rx="2" ry="2" />
<text  x="872.99" y="1871.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (1 samples, 0.02%)</title><rect x="532.7" y="2005" width="0.2" height="15.0" fill="rgb(220,199,41)" rx="2" ry="2" />
<text  x="535.70" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="136.3" y="181" width="0.2" height="15.0" fill="rgb(217,53,45)" rx="2" ry="2" />
<text  x="139.26" y="191.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="144.4" y="1941" width="0.2" height="15.0" fill="rgb(217,22,48)" rx="2" ry="2" />
<text  x="147.40" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="651.8" y="1957" width="0.2" height="15.0" fill="rgb(224,52,16)" rx="2" ry="2" />
<text  x="654.81" y="1967.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1048.5" y="1909" width="0.2" height="15.0" fill="rgb(218,72,1)" rx="2" ry="2" />
<text  x="1051.46" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="831.9" y="1877" width="0.4" height="15.0" fill="rgb(215,27,44)" rx="2" ry="2" />
<text  x="834.87" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="142.4" y="1797" width="0.2" height="15.0" fill="rgb(233,213,33)" rx="2" ry="2" />
<text  x="145.41" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="775.3" y="1461" width="0.6" height="15.0" fill="rgb(212,62,0)" rx="2" ry="2" />
<text  x="778.29" y="1471.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="800.7" y="1333" width="0.2" height="15.0" fill="rgb(254,111,30)" rx="2" ry="2" />
<text  x="803.70" y="1343.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="875.7" y="1957" width="0.2" height="15.0" fill="rgb(227,36,52)" rx="2" ry="2" />
<text  x="878.74" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="162.9" y="1925" width="0.6" height="15.0" fill="rgb(245,49,28)" rx="2" ry="2" />
<text  x="165.86" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="837.4" y="1829" width="0.2" height="15.0" fill="rgb(240,96,44)" rx="2" ry="2" />
<text  x="840.43" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1048.7" y="1877" width="0.2" height="15.0" fill="rgb(226,106,37)" rx="2" ry="2" />
<text  x="1051.65" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="483.1" y="1653" width="0.2" height="15.0" fill="rgb(222,224,54)" rx="2" ry="2" />
<text  x="486.07" y="1663.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="408.8" y="1909" width="0.2" height="15.0" fill="rgb(229,189,53)" rx="2" ry="2" />
<text  x="411.83" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="164.6" y="1909" width="0.2" height="15.0" fill="rgb(245,183,1)" rx="2" ry="2" />
<text  x="167.65" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="289.3" y="1701" width="0.2" height="15.0" fill="rgb(214,148,34)" rx="2" ry="2" />
<text  x="292.32" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="112.4" y="1877" width="0.2" height="15.0" fill="rgb(248,124,44)" rx="2" ry="2" />
<text  x="115.44" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="196.4" y="1685" width="0.2" height="15.0" fill="rgb(250,13,50)" rx="2" ry="2" />
<text  x="199.41" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="245.6" y="1925" width="0.8" height="15.0" fill="rgb(216,44,19)" rx="2" ry="2" />
<text  x="248.64" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="947.6" y="1989" width="0.4" height="15.0" fill="rgb(229,193,39)" rx="2" ry="2" />
<text  x="950.61" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="537.1" y="1861" width="0.2" height="15.0" fill="rgb(236,202,5)" rx="2" ry="2" />
<text  x="540.07" y="1871.5" ></text>
</g>
<g >
<title>__snprintf (2 samples, 0.03%)</title><rect x="350.9" y="2037" width="0.4" height="15.0" fill="rgb(237,153,6)" rx="2" ry="2" />
<text  x="353.86" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="1143.7" y="1989" width="0.2" height="15.0" fill="rgb(254,18,22)" rx="2" ry="2" />
<text  x="1146.74" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1189.0" y="1877" width="0.2" height="15.0" fill="rgb(230,154,30)" rx="2" ry="2" />
<text  x="1192.01" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1048.9" y="1669" width="0.2" height="15.0" fill="rgb(232,27,44)" rx="2" ry="2" />
<text  x="1051.85" y="1679.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="646.1" y="1877" width="0.2" height="15.0" fill="rgb(206,91,31)" rx="2" ry="2" />
<text  x="649.06" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (19 samples, 0.32%)</title><rect x="850.3" y="1941" width="3.8" height="15.0" fill="rgb(215,181,50)" rx="2" ry="2" />
<text  x="853.33" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="844.4" y="1877" width="0.2" height="15.0" fill="rgb(219,193,12)" rx="2" ry="2" />
<text  x="847.38" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="884.7" y="1621" width="0.2" height="15.0" fill="rgb(246,102,38)" rx="2" ry="2" />
<text  x="887.68" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="526.5" y="1941" width="0.2" height="15.0" fill="rgb(232,65,43)" rx="2" ry="2" />
<text  x="529.55" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="537.1" y="1957" width="0.2" height="15.0" fill="rgb(207,69,27)" rx="2" ry="2" />
<text  x="540.07" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="69.4" y="1877" width="0.8" height="15.0" fill="rgb(239,49,10)" rx="2" ry="2" />
<text  x="72.36" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (4 samples, 0.07%)</title><rect x="576.0" y="1989" width="0.8" height="15.0" fill="rgb(239,3,50)" rx="2" ry="2" />
<text  x="578.98" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="267.3" y="1781" width="0.2" height="15.0" fill="rgb(246,39,0)" rx="2" ry="2" />
<text  x="270.28" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="894.6" y="1989" width="0.2" height="15.0" fill="rgb(254,41,16)" rx="2" ry="2" />
<text  x="897.60" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="332.0" y="1861" width="0.4" height="15.0" fill="rgb(205,91,7)" rx="2" ry="2" />
<text  x="335.00" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="825.1" y="1749" width="0.2" height="15.0" fill="rgb(222,39,29)" rx="2" ry="2" />
<text  x="828.12" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (14 samples, 0.24%)</title><rect x="571.6" y="2005" width="2.8" height="15.0" fill="rgb(247,59,4)" rx="2" ry="2" />
<text  x="574.61" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1106.6" y="1525" width="0.2" height="15.0" fill="rgb(205,80,3)" rx="2" ry="2" />
<text  x="1109.62" y="1535.5" ></text>
</g>
<g >
<title>sock_alloc (1 samples, 0.02%)</title><rect x="417.8" y="1973" width="0.2" height="15.0" fill="rgb(217,194,52)" rx="2" ry="2" />
<text  x="420.76" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="616.3" y="2005" width="0.4" height="15.0" fill="rgb(243,166,20)" rx="2" ry="2" />
<text  x="619.28" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="886.1" y="1909" width="0.6" height="15.0" fill="rgb(249,10,34)" rx="2" ry="2" />
<text  x="889.07" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="81.9" y="1925" width="0.2" height="15.0" fill="rgb(246,131,41)" rx="2" ry="2" />
<text  x="84.86" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="279.0" y="1749" width="0.2" height="15.0" fill="rgb(222,46,13)" rx="2" ry="2" />
<text  x="281.99" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (29 samples, 0.49%)</title><rect x="985.1" y="1925" width="5.8" height="15.0" fill="rgb(229,205,47)" rx="2" ry="2" />
<text  x="988.13" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::close (608 samples, 10.23%)</title><rect x="715.5" y="1925" width="120.7" height="15.0" fill="rgb(210,18,18)" rx="2" ry="2" />
<text  x="718.54" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="136.1" y="69" width="0.2" height="15.0" fill="rgb(215,72,11)" rx="2" ry="2" />
<text  x="139.06" y="79.5" ></text>
</g>
<g >
<title>ep_poll_callback (7 samples, 0.12%)</title><rect x="301.6" y="1429" width="1.4" height="15.0" fill="rgb(253,226,35)" rx="2" ry="2" />
<text  x="304.63" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="490.2" y="1717" width="0.2" height="15.0" fill="rgb(230,144,7)" rx="2" ry="2" />
<text  x="493.22" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1090.3" y="1813" width="0.2" height="15.0" fill="rgb(236,154,3)" rx="2" ry="2" />
<text  x="1093.34" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1133.8" y="2037" width="0.2" height="15.0" fill="rgb(209,202,7)" rx="2" ry="2" />
<text  x="1136.82" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="137.3" y="1109" width="0.1" height="15.0" fill="rgb(250,134,16)" rx="2" ry="2" />
<text  x="140.25" y="1119.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="206.9" y="1973" width="0.2" height="15.0" fill="rgb(242,104,47)" rx="2" ry="2" />
<text  x="209.93" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="463.4" y="1909" width="0.2" height="15.0" fill="rgb(233,149,14)" rx="2" ry="2" />
<text  x="466.42" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1183.1" y="1925" width="0.3" height="15.0" fill="rgb(248,114,7)" rx="2" ry="2" />
<text  x="1186.05" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (119 samples, 2.00%)</title><rect x="1063.7" y="1925" width="23.7" height="15.0" fill="rgb(254,5,35)" rx="2" ry="2" />
<text  x="1066.74" y="1935.5" >_..</text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="458.7" y="1717" width="0.2" height="15.0" fill="rgb(251,51,16)" rx="2" ry="2" />
<text  x="461.65" y="1727.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (5 samples, 0.08%)</title><rect x="268.1" y="1909" width="1.0" height="15.0" fill="rgb(238,51,35)" rx="2" ry="2" />
<text  x="271.08" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="491.0" y="1813" width="0.2" height="15.0" fill="rgb(211,156,7)" rx="2" ry="2" />
<text  x="494.01" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="524.2" y="1989" width="1.2" height="15.0" fill="rgb(216,68,15)" rx="2" ry="2" />
<text  x="527.17" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="328.4" y="1621" width="0.2" height="15.0" fill="rgb(237,92,51)" rx="2" ry="2" />
<text  x="331.43" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1071.9" y="1813" width="0.4" height="15.0" fill="rgb(233,104,2)" rx="2" ry="2" />
<text  x="1074.88" y="1823.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="294.3" y="1525" width="0.2" height="15.0" fill="rgb(244,193,26)" rx="2" ry="2" />
<text  x="297.28" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="167.0" y="1797" width="0.2" height="15.0" fill="rgb(210,54,35)" rx="2" ry="2" />
<text  x="170.03" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="700.6" y="1749" width="0.2" height="15.0" fill="rgb(246,134,37)" rx="2" ry="2" />
<text  x="703.65" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (2 samples, 0.03%)</title><rect x="900.6" y="2037" width="0.4" height="15.0" fill="rgb(241,4,18)" rx="2" ry="2" />
<text  x="903.56" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="825.9" y="1413" width="0.2" height="15.0" fill="rgb(224,148,6)" rx="2" ry="2" />
<text  x="828.92" y="1423.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1127.9" y="2021" width="0.2" height="15.0" fill="rgb(243,6,0)" rx="2" ry="2" />
<text  x="1130.86" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.0" y="1941" width="0.2" height="15.0" fill="rgb(223,209,19)" rx="2" ry="2" />
<text  x="64.02" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (177 samples, 2.98%)</title><rect x="581.5" y="2037" width="35.2" height="15.0" fill="rgb(235,198,21)" rx="2" ry="2" />
<text  x="584.54" y="2047.5" >fa..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="173.8" y="1909" width="0.2" height="15.0" fill="rgb(249,155,49)" rx="2" ry="2" />
<text  x="176.78" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="157.5" y="1605" width="0.2" height="15.0" fill="rgb(220,209,8)" rx="2" ry="2" />
<text  x="160.50" y="1615.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="818.4" y="1685" width="0.2" height="15.0" fill="rgb(223,195,37)" rx="2" ry="2" />
<text  x="821.37" y="1695.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="138.0" y="1349" width="0.2" height="15.0" fill="rgb(244,12,14)" rx="2" ry="2" />
<text  x="141.05" y="1359.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="206.9" y="1749" width="0.2" height="15.0" fill="rgb(253,34,2)" rx="2" ry="2" />
<text  x="209.93" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="825.3" y="1829" width="0.8" height="15.0" fill="rgb(246,116,53)" rx="2" ry="2" />
<text  x="828.32" y="1839.5" ></text>
</g>
<g >
<title>tcp_check_oom (1 samples, 0.02%)</title><rect x="756.0" y="1733" width="0.2" height="15.0" fill="rgb(243,157,18)" rx="2" ry="2" />
<text  x="759.04" y="1743.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1139.0" y="2053" width="0.2" height="15.0" fill="rgb(208,99,5)" rx="2" ry="2" />
<text  x="1141.98" y="2063.5" ></text>
</g>
<g >
<title>tcp_poll (43 samples, 0.72%)</title><rect x="463.6" y="1941" width="8.6" height="15.0" fill="rgb(243,108,34)" rx="2" ry="2" />
<text  x="466.62" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="899.4" y="1973" width="0.2" height="15.0" fill="rgb(205,122,13)" rx="2" ry="2" />
<text  x="902.37" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="699.1" y="1941" width="0.8" height="15.0" fill="rgb(246,5,42)" rx="2" ry="2" />
<text  x="702.06" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="88.6" y="1829" width="0.2" height="15.0" fill="rgb(232,122,11)" rx="2" ry="2" />
<text  x="91.61" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="646.5" y="1813" width="0.2" height="15.0" fill="rgb(237,220,50)" rx="2" ry="2" />
<text  x="649.45" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="706.0" y="1973" width="0.2" height="15.0" fill="rgb(214,41,5)" rx="2" ry="2" />
<text  x="709.01" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (23 samples, 0.39%)</title><rect x="1172.3" y="2021" width="4.6" height="15.0" fill="rgb(237,3,39)" rx="2" ry="2" />
<text  x="1175.33" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="694.1" y="1701" width="0.2" height="15.0" fill="rgb(247,28,38)" rx="2" ry="2" />
<text  x="697.10" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="733.8" y="1669" width="0.2" height="15.0" fill="rgb(208,193,34)" rx="2" ry="2" />
<text  x="736.80" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="679.4" y="1877" width="0.2" height="15.0" fill="rgb(222,217,52)" rx="2" ry="2" />
<text  x="682.41" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="597.4" y="1925" width="0.2" height="15.0" fill="rgb(243,170,23)" rx="2" ry="2" />
<text  x="600.42" y="1935.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(218,122,40)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1154.3" y="1877" width="0.2" height="15.0" fill="rgb(230,42,48)" rx="2" ry="2" />
<text  x="1157.27" y="1887.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="428.5" y="1957" width="0.2" height="15.0" fill="rgb(220,180,49)" rx="2" ry="2" />
<text  x="431.48" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1150.1" y="1925" width="0.2" height="15.0" fill="rgb(222,26,28)" rx="2" ry="2" />
<text  x="1153.10" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="581" width="17.9" height="15.0" fill="rgb(244,167,5)" rx="2" ry="2" />
<text  x="122.19" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="830.9" y="1845" width="0.2" height="15.0" fill="rgb(223,156,47)" rx="2" ry="2" />
<text  x="833.88" y="1855.5" ></text>
</g>
<g >
<title>free_unref_page_commit (15 samples, 0.25%)</title><rect x="1074.7" y="1829" width="2.9" height="15.0" fill="rgb(227,56,11)" rx="2" ry="2" />
<text  x="1077.66" y="1839.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="178.9" y="1701" width="0.2" height="15.0" fill="rgb(236,99,6)" rx="2" ry="2" />
<text  x="181.94" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="761.0" y="1605" width="0.2" height="15.0" fill="rgb(251,213,15)" rx="2" ry="2" />
<text  x="764.00" y="1615.5" ></text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="1139.2" y="2053" width="0.2" height="15.0" fill="rgb(248,127,17)" rx="2" ry="2" />
<text  x="1142.18" y="2063.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="36.0" y="1989" width="0.2" height="15.0" fill="rgb(211,159,3)" rx="2" ry="2" />
<text  x="39.01" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="825.7" y="1541" width="0.2" height="15.0" fill="rgb(247,64,17)" rx="2" ry="2" />
<text  x="828.72" y="1551.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="940.5" y="1701" width="0.2" height="15.0" fill="rgb(217,200,54)" rx="2" ry="2" />
<text  x="943.46" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1088.0" y="1909" width="0.2" height="15.0" fill="rgb(243,116,4)" rx="2" ry="2" />
<text  x="1090.96" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="570.4" y="1989" width="0.8" height="15.0" fill="rgb(214,183,54)" rx="2" ry="2" />
<text  x="573.42" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="206.9" y="1909" width="0.2" height="15.0" fill="rgb(227,193,28)" rx="2" ry="2" />
<text  x="209.93" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="155.9" y="1781" width="0.2" height="15.0" fill="rgb(250,185,40)" rx="2" ry="2" />
<text  x="158.91" y="1791.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1118.5" y="1925" width="0.2" height="15.0" fill="rgb(223,56,29)" rx="2" ry="2" />
<text  x="1121.53" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="178.9" y="1957" width="0.2" height="15.0" fill="rgb(233,197,43)" rx="2" ry="2" />
<text  x="181.94" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="922.4" y="1909" width="0.8" height="15.0" fill="rgb(207,158,24)" rx="2" ry="2" />
<text  x="925.40" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1020.1" y="2037" width="0.2" height="15.0" fill="rgb(241,21,0)" rx="2" ry="2" />
<text  x="1023.07" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="424.7" y="2021" width="3.8" height="15.0" fill="rgb(232,76,14)" rx="2" ry="2" />
<text  x="427.71" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="543.8" y="1893" width="0.2" height="15.0" fill="rgb(214,4,4)" rx="2" ry="2" />
<text  x="546.82" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="491.0" y="1845" width="0.2" height="15.0" fill="rgb(226,183,43)" rx="2" ry="2" />
<text  x="494.01" y="1855.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="100.7" y="1861" width="0.2" height="15.0" fill="rgb(242,143,31)" rx="2" ry="2" />
<text  x="103.72" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="903.7" y="1973" width="0.4" height="15.0" fill="rgb(247,191,9)" rx="2" ry="2" />
<text  x="906.73" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="489.6" y="1925" width="0.2" height="15.0" fill="rgb(223,220,40)" rx="2" ry="2" />
<text  x="492.62" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1086.8" y="1877" width="0.2" height="15.0" fill="rgb(243,49,33)" rx="2" ry="2" />
<text  x="1089.77" y="1887.5" ></text>
</g>
<g >
<title>up_write (11 samples, 0.19%)</title><rect x="820.4" y="1765" width="2.1" height="15.0" fill="rgb(235,151,30)" rx="2" ry="2" />
<text  x="823.36" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="100.1" y="1925" width="0.2" height="15.0" fill="rgb(209,92,5)" rx="2" ry="2" />
<text  x="103.13" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="149.4" y="1925" width="0.2" height="15.0" fill="rgb(208,124,17)" rx="2" ry="2" />
<text  x="152.36" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="138.0" y="1077" width="0.2" height="15.0" fill="rgb(213,206,24)" rx="2" ry="2" />
<text  x="141.05" y="1087.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="154.9" y="1973" width="0.2" height="15.0" fill="rgb(216,46,48)" rx="2" ry="2" />
<text  x="157.92" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="39.8" y="1829" width="0.2" height="15.0" fill="rgb(236,196,22)" rx="2" ry="2" />
<text  x="42.78" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb (22 samples, 0.37%)</title><rect x="1109.0" y="1509" width="4.4" height="15.0" fill="rgb(232,196,46)" rx="2" ry="2" />
<text  x="1112.00" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="247.8" y="1813" width="0.2" height="15.0" fill="rgb(238,18,50)" rx="2" ry="2" />
<text  x="250.83" y="1823.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1034.2" y="2037" width="0.6" height="15.0" fill="rgb(250,191,31)" rx="2" ry="2" />
<text  x="1037.16" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="136.1" y="261" width="0.2" height="15.0" fill="rgb(220,207,41)" rx="2" ry="2" />
<text  x="139.06" y="271.5" ></text>
</g>
<g >
<title>memcg_kmem_uncharge (1 samples, 0.02%)</title><rect x="646.1" y="1781" width="0.2" height="15.0" fill="rgb(211,33,18)" rx="2" ry="2" />
<text  x="649.06" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (12 samples, 0.20%)</title><rect x="27.5" y="1989" width="2.4" height="15.0" fill="rgb(227,187,22)" rx="2" ry="2" />
<text  x="30.47" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="906.9" y="1989" width="0.2" height="15.0" fill="rgb(222,166,41)" rx="2" ry="2" />
<text  x="909.91" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="867.8" y="1989" width="0.2" height="15.0" fill="rgb(226,139,14)" rx="2" ry="2" />
<text  x="870.80" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (71 samples, 1.19%)</title><rect x="873.6" y="1989" width="14.1" height="15.0" fill="rgb(221,155,16)" rx="2" ry="2" />
<text  x="876.56" y="1999.5" ></text>
</g>
<g >
<title>free (22 samples, 0.37%)</title><rect x="198.6" y="2021" width="4.4" height="15.0" fill="rgb(223,206,6)" rx="2" ry="2" />
<text  x="201.59" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1172.7" y="1845" width="0.2" height="15.0" fill="rgb(241,65,31)" rx="2" ry="2" />
<text  x="1175.73" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="419.0" y="1893" width="0.1" height="15.0" fill="rgb(225,143,10)" rx="2" ry="2" />
<text  x="421.95" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="459.6" y="1797" width="0.2" height="15.0" fill="rgb(220,64,54)" rx="2" ry="2" />
<text  x="462.65" y="1807.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(246,0,25)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="178.9" y="1765" width="0.2" height="15.0" fill="rgb(245,172,16)" rx="2" ry="2" />
<text  x="181.94" y="1775.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="489.6" y="1909" width="0.2" height="15.0" fill="rgb(211,63,11)" rx="2" ry="2" />
<text  x="492.62" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="267.3" y="1717" width="0.2" height="15.0" fill="rgb(246,176,23)" rx="2" ry="2" />
<text  x="270.28" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="195.0" y="1957" width="1.2" height="15.0" fill="rgb(217,84,50)" rx="2" ry="2" />
<text  x="198.02" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (1 samples, 0.02%)</title><rect x="511.3" y="2021" width="0.2" height="15.0" fill="rgb(218,113,7)" rx="2" ry="2" />
<text  x="514.26" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="72.1" y="1685" width="0.2" height="15.0" fill="rgb(218,214,38)" rx="2" ry="2" />
<text  x="75.14" y="1695.5" ></text>
</g>
<g >
<title>sys_getpeername (15 samples, 0.25%)</title><rect x="673.3" y="1893" width="2.9" height="15.0" fill="rgb(214,25,38)" rx="2" ry="2" />
<text  x="676.25" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="170.4" y="1861" width="0.2" height="15.0" fill="rgb(227,156,49)" rx="2" ry="2" />
<text  x="173.40" y="1871.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="534.1" y="1829" width="0.2" height="15.0" fill="rgb(212,11,38)" rx="2" ry="2" />
<text  x="537.09" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1172.7" y="1749" width="0.2" height="15.0" fill="rgb(228,77,49)" rx="2" ry="2" />
<text  x="1175.73" y="1759.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (177 samples, 2.98%)</title><rect x="765.4" y="1685" width="35.1" height="15.0" fill="rgb(244,92,53)" rx="2" ry="2" />
<text  x="768.37" y="1695.5" >__..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="283.2" y="1813" width="0.4" height="15.0" fill="rgb(245,172,16)" rx="2" ry="2" />
<text  x="286.16" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="698.5" y="1973" width="0.2" height="15.0" fill="rgb(212,180,28)" rx="2" ry="2" />
<text  x="701.47" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="992.3" y="1925" width="0.2" height="15.0" fill="rgb(211,210,0)" rx="2" ry="2" />
<text  x="995.27" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="77.5" y="1909" width="1.2" height="15.0" fill="rgb(250,226,2)" rx="2" ry="2" />
<text  x="80.50" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="162.9" y="1909" width="0.6" height="15.0" fill="rgb(244,80,19)" rx="2" ry="2" />
<text  x="165.86" y="1919.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="77.9" y="1861" width="0.8" height="15.0" fill="rgb(229,23,9)" rx="2" ry="2" />
<text  x="80.89" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="72.1" y="1877" width="0.2" height="15.0" fill="rgb(230,95,49)" rx="2" ry="2" />
<text  x="75.14" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="322.9" y="1781" width="0.2" height="15.0" fill="rgb(220,107,49)" rx="2" ry="2" />
<text  x="325.87" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="195.4" y="1941" width="0.2" height="15.0" fill="rgb(208,19,35)" rx="2" ry="2" />
<text  x="198.42" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="852.7" y="1845" width="0.2" height="15.0" fill="rgb(211,193,25)" rx="2" ry="2" />
<text  x="855.72" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="825.3" y="1845" width="0.8" height="15.0" fill="rgb(244,163,31)" rx="2" ry="2" />
<text  x="828.32" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="842.4" y="1909" width="1.8" height="15.0" fill="rgb(247,173,27)" rx="2" ry="2" />
<text  x="845.39" y="1919.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="825.1" y="1557" width="0.2" height="15.0" fill="rgb(223,66,52)" rx="2" ry="2" />
<text  x="828.12" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (9 samples, 0.15%)</title><rect x="301.2" y="1557" width="1.8" height="15.0" fill="rgb(231,157,40)" rx="2" ry="2" />
<text  x="304.23" y="1567.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="104.3" y="1989" width="0.4" height="15.0" fill="rgb(246,61,52)" rx="2" ry="2" />
<text  x="107.30" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="763.0" y="1717" width="0.2" height="15.0" fill="rgb(253,115,49)" rx="2" ry="2" />
<text  x="765.98" y="1727.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="892.0" y="1957" width="0.2" height="15.0" fill="rgb(248,82,16)" rx="2" ry="2" />
<text  x="895.02" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1106.4" y="1861" width="0.2" height="15.0" fill="rgb(214,21,3)" rx="2" ry="2" />
<text  x="1109.42" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="745.9" y="1717" width="0.2" height="15.0" fill="rgb(241,51,53)" rx="2" ry="2" />
<text  x="748.91" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="990.7" y="1909" width="0.2" height="15.0" fill="rgb(245,161,36)" rx="2" ry="2" />
<text  x="993.69" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="968.1" y="1733" width="0.2" height="15.0" fill="rgb(231,25,42)" rx="2" ry="2" />
<text  x="971.06" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="613.1" y="1765" width="0.2" height="15.0" fill="rgb(207,213,21)" rx="2" ry="2" />
<text  x="616.10" y="1775.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1101.3" y="1845" width="0.2" height="15.0" fill="rgb(250,94,34)" rx="2" ry="2" />
<text  x="1104.26" y="1855.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="848.0" y="1909" width="0.1" height="15.0" fill="rgb(217,43,52)" rx="2" ry="2" />
<text  x="850.95" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="761.0" y="1413" width="0.2" height="15.0" fill="rgb(230,135,11)" rx="2" ry="2" />
<text  x="764.00" y="1423.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="443.4" y="1925" width="0.2" height="15.0" fill="rgb(229,169,10)" rx="2" ry="2" />
<text  x="446.37" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="332.0" y="1797" width="0.2" height="15.0" fill="rgb(250,51,42)" rx="2" ry="2" />
<text  x="335.00" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="167.2" y="1877" width="0.6" height="15.0" fill="rgb(205,206,29)" rx="2" ry="2" />
<text  x="170.23" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="830.5" y="1541" width="0.2" height="15.0" fill="rgb(216,188,24)" rx="2" ry="2" />
<text  x="833.48" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (315 samples, 5.30%)</title><rect x="355.8" y="2021" width="62.6" height="15.0" fill="rgb(243,199,21)" rx="2" ry="2" />
<text  x="358.82" y="2031.5" >entry_..</text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="286.3" y="1781" width="0.2" height="15.0" fill="rgb(237,54,52)" rx="2" ry="2" />
<text  x="289.34" y="1791.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (22 samples, 0.37%)</title><rect x="802.5" y="1653" width="4.4" height="15.0" fill="rgb(223,222,22)" rx="2" ry="2" />
<text  x="805.49" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="884.9" y="1749" width="0.2" height="15.0" fill="rgb(238,109,13)" rx="2" ry="2" />
<text  x="887.88" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="330.0" y="1813" width="0.2" height="15.0" fill="rgb(221,111,9)" rx="2" ry="2" />
<text  x="333.01" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="947.4" y="1829" width="0.2" height="15.0" fill="rgb(246,161,41)" rx="2" ry="2" />
<text  x="950.41" y="1839.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="143.4" y="1909" width="0.4" height="15.0" fill="rgb(232,122,2)" rx="2" ry="2" />
<text  x="146.41" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1078.6" y="1765" width="0.2" height="15.0" fill="rgb(250,136,36)" rx="2" ry="2" />
<text  x="1081.63" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="136.3" y="117" width="0.2" height="15.0" fill="rgb(241,60,41)" rx="2" ry="2" />
<text  x="139.26" y="127.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="310.4" y="1637" width="0.2" height="15.0" fill="rgb(211,199,54)" rx="2" ry="2" />
<text  x="313.36" y="1647.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4 samples, 0.07%)</title><rect x="745.3" y="1781" width="0.8" height="15.0" fill="rgb(224,152,46)" rx="2" ry="2" />
<text  x="748.32" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1101.3" y="1797" width="0.2" height="15.0" fill="rgb(245,5,53)" rx="2" ry="2" />
<text  x="1104.26" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="761.0" y="1509" width="0.2" height="15.0" fill="rgb(240,109,35)" rx="2" ry="2" />
<text  x="764.00" y="1519.5" ></text>
</g>
<g >
<title>tcp_write_xmit (226 samples, 3.80%)</title><rect x="763.6" y="1701" width="44.8" height="15.0" fill="rgb(207,197,37)" rx="2" ry="2" />
<text  x="766.58" y="1711.5" >tcp_..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="947.4" y="1973" width="0.2" height="15.0" fill="rgb(235,67,48)" rx="2" ry="2" />
<text  x="950.41" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1180.7" y="1973" width="0.2" height="15.0" fill="rgb(230,22,5)" rx="2" ry="2" />
<text  x="1183.67" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="940.5" y="1877" width="0.2" height="15.0" fill="rgb(205,43,34)" rx="2" ry="2" />
<text  x="943.46" y="1887.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="490.8" y="1973" width="0.2" height="15.0" fill="rgb(229,16,5)" rx="2" ry="2" />
<text  x="493.81" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8 samples, 0.13%)</title><rect x="895.6" y="2005" width="1.6" height="15.0" fill="rgb(217,226,24)" rx="2" ry="2" />
<text  x="898.60" y="2015.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="72.1" y="1669" width="0.2" height="15.0" fill="rgb(219,122,42)" rx="2" ry="2" />
<text  x="75.14" y="1679.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="550.4" y="1957" width="0.4" height="15.0" fill="rgb(252,22,34)" rx="2" ry="2" />
<text  x="553.37" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="290.5" y="1733" width="0.2" height="15.0" fill="rgb(251,163,10)" rx="2" ry="2" />
<text  x="293.51" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="969.8" y="2005" width="0.2" height="15.0" fill="rgb(207,216,39)" rx="2" ry="2" />
<text  x="972.84" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="543.8" y="1589" width="0.2" height="15.0" fill="rgb(227,29,52)" rx="2" ry="2" />
<text  x="546.82" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="733.8" y="1541" width="0.2" height="15.0" fill="rgb(250,96,0)" rx="2" ry="2" />
<text  x="736.80" y="1551.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="706.0" y="1733" width="0.2" height="15.0" fill="rgb(251,161,15)" rx="2" ry="2" />
<text  x="709.01" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="999.4" y="1989" width="0.2" height="15.0" fill="rgb(218,85,30)" rx="2" ry="2" />
<text  x="1002.42" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1079.0" y="1685" width="0.2" height="15.0" fill="rgb(224,65,52)" rx="2" ry="2" />
<text  x="1082.03" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="629" width="17.9" height="15.0" fill="rgb(240,150,28)" rx="2" ry="2" />
<text  x="122.19" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="997.2" y="1957" width="0.2" height="15.0" fill="rgb(233,89,11)" rx="2" ry="2" />
<text  x="1000.24" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="250.2" y="1925" width="0.2" height="15.0" fill="rgb(236,67,37)" rx="2" ry="2" />
<text  x="253.21" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="733.0" y="1701" width="0.2" height="15.0" fill="rgb(231,33,3)" rx="2" ry="2" />
<text  x="736.01" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="290.5" y="1701" width="0.2" height="15.0" fill="rgb(213,104,47)" rx="2" ry="2" />
<text  x="293.51" y="1711.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="329.4" y="1429" width="0.2" height="15.0" fill="rgb(231,169,31)" rx="2" ry="2" />
<text  x="332.42" y="1439.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="409.0" y="1909" width="0.2" height="15.0" fill="rgb(223,57,45)" rx="2" ry="2" />
<text  x="412.02" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="128.9" y="37" width="0.2" height="15.0" fill="rgb(226,64,41)" rx="2" ry="2" />
<text  x="131.91" y="47.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="315.5" y="1701" width="0.2" height="15.0" fill="rgb(253,43,1)" rx="2" ry="2" />
<text  x="318.52" y="1711.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (11 samples, 0.19%)</title><rect x="266.9" y="1941" width="2.2" height="15.0" fill="rgb(234,127,45)" rx="2" ry="2" />
<text  x="269.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="625.8" y="2021" width="6.2" height="15.0" fill="rgb(208,75,6)" rx="2" ry="2" />
<text  x="628.81" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="39.8" y="1989" width="0.2" height="15.0" fill="rgb(207,73,37)" rx="2" ry="2" />
<text  x="42.78" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="52.9" y="1797" width="0.2" height="15.0" fill="rgb(212,89,4)" rx="2" ry="2" />
<text  x="55.88" y="1807.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1121.5" y="1957" width="0.2" height="15.0" fill="rgb(233,226,41)" rx="2" ry="2" />
<text  x="1124.51" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="918.6" y="2005" width="0.6" height="15.0" fill="rgb(215,119,22)" rx="2" ry="2" />
<text  x="921.62" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1024.0" y="1973" width="0.2" height="15.0" fill="rgb(224,181,51)" rx="2" ry="2" />
<text  x="1027.04" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="822.5" y="1701" width="0.2" height="15.0" fill="rgb(211,174,28)" rx="2" ry="2" />
<text  x="825.54" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="491.8" y="1845" width="0.2" height="15.0" fill="rgb(220,48,44)" rx="2" ry="2" />
<text  x="494.81" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="10.0" y="1877" width="0.2" height="15.0" fill="rgb(206,134,40)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>tcp_current_mss (28 samples, 0.47%)</title><rect x="333.8" y="1861" width="5.5" height="15.0" fill="rgb(229,199,33)" rx="2" ry="2" />
<text  x="336.79" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_locked (5 samples, 0.08%)</title><rect x="301.8" y="1413" width="1.0" height="15.0" fill="rgb(213,149,53)" rx="2" ry="2" />
<text  x="304.82" y="1423.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="108.5" y="1973" width="0.2" height="15.0" fill="rgb(242,170,36)" rx="2" ry="2" />
<text  x="111.47" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.03%)</title><rect x="842.0" y="1893" width="0.4" height="15.0" fill="rgb(243,89,40)" rx="2" ry="2" />
<text  x="845.00" y="1903.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="175.4" y="1941" width="0.2" height="15.0" fill="rgb(221,91,25)" rx="2" ry="2" />
<text  x="178.37" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="94.0" y="1909" width="0.4" height="15.0" fill="rgb(211,209,7)" rx="2" ry="2" />
<text  x="96.97" y="1919.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="535.5" y="1957" width="0.2" height="15.0" fill="rgb(235,1,12)" rx="2" ry="2" />
<text  x="538.48" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="529.5" y="1909" width="0.2" height="15.0" fill="rgb(213,216,50)" rx="2" ry="2" />
<text  x="532.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="831.7" y="1621" width="0.2" height="15.0" fill="rgb(229,134,30)" rx="2" ry="2" />
<text  x="834.67" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="148.4" y="1957" width="1.4" height="15.0" fill="rgb(252,198,0)" rx="2" ry="2" />
<text  x="151.37" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="134.1" y="101" width="0.2" height="15.0" fill="rgb(243,78,19)" rx="2" ry="2" />
<text  x="137.07" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="20.9" y="1957" width="0.2" height="15.0" fill="rgb(205,173,5)" rx="2" ry="2" />
<text  x="23.92" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.87%)</title><rect x="118.4" y="1637" width="22.0" height="15.0" fill="rgb(211,226,5)" rx="2" ry="2" />
<text  x="121.39" y="1647.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="630.4" y="1829" width="0.2" height="15.0" fill="rgb(225,209,45)" rx="2" ry="2" />
<text  x="633.37" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="705.2" y="2037" width="0.2" height="15.0" fill="rgb(229,220,28)" rx="2" ry="2" />
<text  x="708.22" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="135.9" y="229" width="0.2" height="15.0" fill="rgb(229,199,17)" rx="2" ry="2" />
<text  x="138.86" y="239.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="350.7" y="1877" width="0.2" height="15.0" fill="rgb(232,177,34)" rx="2" ry="2" />
<text  x="353.66" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="241.7" y="1493" width="0.2" height="15.0" fill="rgb(221,202,23)" rx="2" ry="2" />
<text  x="244.67" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (2 samples, 0.03%)</title><rect x="908.7" y="2005" width="0.4" height="15.0" fill="rgb(238,115,1)" rx="2" ry="2" />
<text  x="911.70" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1144.1" y="1973" width="0.2" height="15.0" fill="rgb(236,2,33)" rx="2" ry="2" />
<text  x="1147.14" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="637.1" y="1893" width="0.2" height="15.0" fill="rgb(252,46,42)" rx="2" ry="2" />
<text  x="640.12" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1079.0" y="1653" width="0.2" height="15.0" fill="rgb(236,165,52)" rx="2" ry="2" />
<text  x="1082.03" y="1663.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1181.9" y="2021" width="0.2" height="15.0" fill="rgb(228,187,33)" rx="2" ry="2" />
<text  x="1184.86" y="2031.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="884.9" y="1589" width="0.2" height="15.0" fill="rgb(209,117,2)" rx="2" ry="2" />
<text  x="887.88" y="1599.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="978.8" y="1989" width="0.2" height="15.0" fill="rgb(210,43,48)" rx="2" ry="2" />
<text  x="981.78" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="61.0" y="1893" width="0.2" height="15.0" fill="rgb(209,67,29)" rx="2" ry="2" />
<text  x="64.02" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="613.1" y="1637" width="0.2" height="15.0" fill="rgb(246,164,11)" rx="2" ry="2" />
<text  x="616.10" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="289.3" y="1781" width="0.2" height="15.0" fill="rgb(238,182,43)" rx="2" ry="2" />
<text  x="292.32" y="1791.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (10 samples, 0.17%)</title><rect x="750.5" y="1733" width="2.0" height="15.0" fill="rgb(212,190,27)" rx="2" ry="2" />
<text  x="753.48" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="853.9" y="1589" width="0.2" height="15.0" fill="rgb(246,115,18)" rx="2" ry="2" />
<text  x="856.91" y="1599.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="548.4" y="1957" width="0.2" height="15.0" fill="rgb(218,191,23)" rx="2" ry="2" />
<text  x="551.38" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="459.6" y="1925" width="0.2" height="15.0" fill="rgb(248,89,52)" rx="2" ry="2" />
<text  x="462.65" y="1935.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="414.2" y="1861" width="0.2" height="15.0" fill="rgb(232,25,54)" rx="2" ry="2" />
<text  x="417.19" y="1871.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="970.2" y="2037" width="0.2" height="15.0" fill="rgb(236,51,6)" rx="2" ry="2" />
<text  x="973.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_mss (35 samples, 0.59%)</title><rect x="332.4" y="1877" width="6.9" height="15.0" fill="rgb(213,122,35)" rx="2" ry="2" />
<text  x="335.40" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="1177.7" y="2053" width="0.2" height="15.0" fill="rgb(209,49,14)" rx="2" ry="2" />
<text  x="1180.69" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="780.3" y="1541" width="0.2" height="15.0" fill="rgb(225,184,5)" rx="2" ry="2" />
<text  x="783.26" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="61.0" y="1781" width="0.2" height="15.0" fill="rgb(235,167,49)" rx="2" ry="2" />
<text  x="64.02" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="104.7" y="1909" width="0.4" height="15.0" fill="rgb(244,184,38)" rx="2" ry="2" />
<text  x="107.69" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::reply_type facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="121.6" y="37" width="0.2" height="15.0" fill="rgb(239,61,40)" rx="2" ry="2" />
<text  x="124.57" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="247.8" y="1925" width="0.2" height="15.0" fill="rgb(205,28,4)" rx="2" ry="2" />
<text  x="250.83" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="898.2" y="2005" width="0.2" height="15.0" fill="rgb(231,148,24)" rx="2" ry="2" />
<text  x="901.18" y="2015.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (22 samples, 0.37%)</title><rect x="964.5" y="2037" width="4.3" height="15.0" fill="rgb(228,138,24)" rx="2" ry="2" />
<text  x="967.48" y="2047.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(238,69,49)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="329.4" y="1701" width="0.2" height="15.0" fill="rgb(244,172,20)" rx="2" ry="2" />
<text  x="332.42" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="286.5" y="1781" width="0.2" height="15.0" fill="rgb(243,163,27)" rx="2" ry="2" />
<text  x="289.54" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="910.3" y="2037" width="0.2" height="15.0" fill="rgb(230,76,47)" rx="2" ry="2" />
<text  x="913.29" y="2047.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="562.1" y="1557" width="0.2" height="15.0" fill="rgb(208,137,40)" rx="2" ry="2" />
<text  x="565.08" y="1567.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="136.9" y="181" width="0.2" height="15.0" fill="rgb(236,223,46)" rx="2" ry="2" />
<text  x="139.85" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="250.2" y="1989" width="0.2" height="15.0" fill="rgb(247,189,27)" rx="2" ry="2" />
<text  x="253.21" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="378.5" y="1829" width="0.2" height="15.0" fill="rgb(229,176,6)" rx="2" ry="2" />
<text  x="381.45" y="1839.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="802.3" y="1669" width="0.2" height="15.0" fill="rgb(251,138,45)" rx="2" ry="2" />
<text  x="805.29" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="884.7" y="1749" width="0.2" height="15.0" fill="rgb(244,67,49)" rx="2" ry="2" />
<text  x="887.68" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="247.8" y="1877" width="0.2" height="15.0" fill="rgb(232,154,19)" rx="2" ry="2" />
<text  x="250.83" y="1887.5" ></text>
</g>
<g >
<title>isspace (2 samples, 0.03%)</title><rect x="1009.3" y="2021" width="0.4" height="15.0" fill="rgb(250,44,35)" rx="2" ry="2" />
<text  x="1012.35" y="2031.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="795.5" y="1605" width="0.2" height="15.0" fill="rgb(206,27,53)" rx="2" ry="2" />
<text  x="798.54" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.73%)</title><rect x="118.8" y="1493" width="20.4" height="15.0" fill="rgb(221,131,51)" rx="2" ry="2" />
<text  x="121.79" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (4 samples, 0.07%)</title><rect x="711.4" y="1973" width="0.8" height="15.0" fill="rgb(209,167,53)" rx="2" ry="2" />
<text  x="714.37" y="1983.5" ></text>
</g>
<g >
<title>ep_send_events_proc (59 samples, 0.99%)</title><rect x="498.6" y="1941" width="11.7" height="15.0" fill="rgb(237,6,9)" rx="2" ry="2" />
<text  x="501.56" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1034.4" y="1989" width="0.4" height="15.0" fill="rgb(239,198,51)" rx="2" ry="2" />
<text  x="1037.36" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="493.0" y="1957" width="0.4" height="15.0" fill="rgb(224,184,11)" rx="2" ry="2" />
<text  x="496.00" y="1967.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="268.5" y="1893" width="0.2" height="15.0" fill="rgb(240,18,41)" rx="2" ry="2" />
<text  x="271.47" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1177.1" y="1845" width="0.2" height="15.0" fill="rgb(247,60,51)" rx="2" ry="2" />
<text  x="1180.10" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="138.8" y="1445" width="0.2" height="15.0" fill="rgb(230,103,17)" rx="2" ry="2" />
<text  x="141.84" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="968.1" y="1925" width="0.2" height="15.0" fill="rgb(251,12,18)" rx="2" ry="2" />
<text  x="971.06" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="490.2" y="1925" width="0.2" height="15.0" fill="rgb(217,176,10)" rx="2" ry="2" />
<text  x="493.22" y="1935.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="659.2" y="1717" width="0.2" height="15.0" fill="rgb(220,91,12)" rx="2" ry="2" />
<text  x="662.16" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="493.0" y="2005" width="0.4" height="15.0" fill="rgb(251,24,6)" rx="2" ry="2" />
<text  x="496.00" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="666.5" y="1957" width="2.2" height="15.0" fill="rgb(236,191,14)" rx="2" ry="2" />
<text  x="669.50" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="458.7" y="1781" width="0.2" height="15.0" fill="rgb(239,50,43)" rx="2" ry="2" />
<text  x="461.65" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.56%)</title><rect x="669.7" y="1909" width="6.5" height="15.0" fill="rgb(235,71,24)" rx="2" ry="2" />
<text  x="672.68" y="1919.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="877.5" y="1909" width="0.4" height="15.0" fill="rgb(215,55,52)" rx="2" ry="2" />
<text  x="880.53" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1001.0" y="2005" width="0.2" height="15.0" fill="rgb(238,182,4)" rx="2" ry="2" />
<text  x="1004.01" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="810.0" y="1701" width="0.2" height="15.0" fill="rgb(224,60,47)" rx="2" ry="2" />
<text  x="813.03" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="136.9" y="277" width="0.2" height="15.0" fill="rgb(227,212,42)" rx="2" ry="2" />
<text  x="139.85" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="651.8" y="1973" width="0.2" height="15.0" fill="rgb(229,193,4)" rx="2" ry="2" />
<text  x="654.81" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1135.8" y="1941" width="0.2" height="15.0" fill="rgb(242,223,29)" rx="2" ry="2" />
<text  x="1138.80" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (13 samples, 0.22%)</title><rect x="300.4" y="1669" width="2.6" height="15.0" fill="rgb(253,137,37)" rx="2" ry="2" />
<text  x="303.43" y="1679.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="1052.0" y="1973" width="0.2" height="15.0" fill="rgb(234,27,21)" rx="2" ry="2" />
<text  x="1055.03" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="638.7" y="1893" width="0.2" height="15.0" fill="rgb(219,12,3)" rx="2" ry="2" />
<text  x="641.71" y="1903.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="975.0" y="1989" width="0.2" height="15.0" fill="rgb(240,57,16)" rx="2" ry="2" />
<text  x="978.00" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1135.6" y="1973" width="0.4" height="15.0" fill="rgb(214,106,52)" rx="2" ry="2" />
<text  x="1138.61" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="490.2" y="1909" width="0.2" height="15.0" fill="rgb(239,215,4)" rx="2" ry="2" />
<text  x="493.22" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="984.1" y="1957" width="1.0" height="15.0" fill="rgb(208,46,14)" rx="2" ry="2" />
<text  x="987.14" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="74.9" y="1813" width="0.2" height="15.0" fill="rgb(235,176,51)" rx="2" ry="2" />
<text  x="77.92" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="971.8" y="2021" width="0.2" height="15.0" fill="rgb(252,182,43)" rx="2" ry="2" />
<text  x="974.83" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="884.9" y="1733" width="0.2" height="15.0" fill="rgb(243,184,15)" rx="2" ry="2" />
<text  x="887.88" y="1743.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="907.1" y="1989" width="0.4" height="15.0" fill="rgb(252,71,38)" rx="2" ry="2" />
<text  x="910.11" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="600.8" y="1813" width="0.2" height="15.0" fill="rgb(233,164,47)" rx="2" ry="2" />
<text  x="603.79" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (85 samples, 1.43%)</title><rect x="159.7" y="1989" width="16.9" height="15.0" fill="rgb(248,23,0)" rx="2" ry="2" />
<text  x="162.68" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="136.7" y="85" width="0.2" height="15.0" fill="rgb(246,144,35)" rx="2" ry="2" />
<text  x="139.66" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="527.9" y="2005" width="0.2" height="15.0" fill="rgb(236,84,31)" rx="2" ry="2" />
<text  x="530.94" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1016.7" y="1989" width="0.2" height="15.0" fill="rgb(225,209,2)" rx="2" ry="2" />
<text  x="1019.69" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="687.9" y="1797" width="0.2" height="15.0" fill="rgb(254,23,3)" rx="2" ry="2" />
<text  x="690.94" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="800.7" y="1477" width="0.2" height="15.0" fill="rgb(245,72,50)" rx="2" ry="2" />
<text  x="803.70" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="625.2" y="2037" width="0.2" height="15.0" fill="rgb(209,162,41)" rx="2" ry="2" />
<text  x="628.21" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="213.7" y="1813" width="0.2" height="15.0" fill="rgb(206,62,9)" rx="2" ry="2" />
<text  x="216.68" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="899.8" y="1973" width="0.4" height="15.0" fill="rgb(236,137,1)" rx="2" ry="2" />
<text  x="902.76" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="378.5" y="1813" width="0.2" height="15.0" fill="rgb(216,105,9)" rx="2" ry="2" />
<text  x="381.45" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1189.0" y="2005" width="0.2" height="15.0" fill="rgb(250,72,41)" rx="2" ry="2" />
<text  x="1192.01" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="640.7" y="1925" width="0.4" height="15.0" fill="rgb(216,19,29)" rx="2" ry="2" />
<text  x="643.70" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="740.4" y="1685" width="0.2" height="15.0" fill="rgb(254,50,28)" rx="2" ry="2" />
<text  x="743.35" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="570.8" y="1973" width="0.4" height="15.0" fill="rgb(216,223,35)" rx="2" ry="2" />
<text  x="573.82" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="659.2" y="1861" width="0.2" height="15.0" fill="rgb(217,27,43)" rx="2" ry="2" />
<text  x="662.16" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="853.9" y="1781" width="0.2" height="15.0" fill="rgb(230,112,7)" rx="2" ry="2" />
<text  x="856.91" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1143.5" y="1989" width="0.2" height="15.0" fill="rgb(247,59,41)" rx="2" ry="2" />
<text  x="1146.55" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="842.2" y="1829" width="0.2" height="15.0" fill="rgb(242,153,20)" rx="2" ry="2" />
<text  x="845.19" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="881.9" y="1941" width="0.2" height="15.0" fill="rgb(214,210,18)" rx="2" ry="2" />
<text  x="884.90" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="112.6" y="2021" width="0.2" height="15.0" fill="rgb(245,125,2)" rx="2" ry="2" />
<text  x="115.63" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (7 samples, 0.12%)</title><rect x="616.7" y="2037" width="1.4" height="15.0" fill="rgb(235,187,1)" rx="2" ry="2" />
<text  x="619.68" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="753.9" y="1653" width="0.2" height="15.0" fill="rgb(242,183,16)" rx="2" ry="2" />
<text  x="756.85" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="609.5" y="1829" width="0.2" height="15.0" fill="rgb(206,117,38)" rx="2" ry="2" />
<text  x="612.53" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="136.9" y="453" width="0.2" height="15.0" fill="rgb(227,209,52)" rx="2" ry="2" />
<text  x="139.85" y="463.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="174.0" y="1941" width="0.2" height="15.0" fill="rgb(236,214,50)" rx="2" ry="2" />
<text  x="176.98" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="52.9" y="1829" width="0.2" height="15.0" fill="rgb(228,54,12)" rx="2" ry="2" />
<text  x="55.88" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (1 samples, 0.02%)</title><rect x="892.2" y="1973" width="0.2" height="15.0" fill="rgb(206,102,14)" rx="2" ry="2" />
<text  x="895.22" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="119.2" y="37" width="0.2" height="15.0" fill="rgb(245,199,46)" rx="2" ry="2" />
<text  x="122.19" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="39.8" y="1941" width="0.2" height="15.0" fill="rgb(223,178,13)" rx="2" ry="2" />
<text  x="42.78" y="1951.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="615.7" y="1941" width="0.2" height="15.0" fill="rgb(224,215,9)" rx="2" ry="2" />
<text  x="618.68" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="207.3" y="1893" width="0.2" height="15.0" fill="rgb(224,83,0)" rx="2" ry="2" />
<text  x="210.33" y="1903.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="343.1" y="2005" width="0.2" height="15.0" fill="rgb(224,197,43)" rx="2" ry="2" />
<text  x="346.12" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="739.8" y="1637" width="0.2" height="15.0" fill="rgb(242,136,6)" rx="2" ry="2" />
<text  x="742.76" y="1647.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="701.4" y="1765" width="0.2" height="15.0" fill="rgb(248,23,37)" rx="2" ry="2" />
<text  x="704.44" y="1775.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="156.3" y="1621" width="0.2" height="15.0" fill="rgb(230,19,54)" rx="2" ry="2" />
<text  x="159.31" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.4" y="2021" width="0.2" height="15.0" fill="rgb(218,68,25)" rx="2" ry="2" />
<text  x="918.45" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="537.1" y="1941" width="0.2" height="15.0" fill="rgb(254,86,31)" rx="2" ry="2" />
<text  x="540.07" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="740.9" y="1573" width="0.2" height="15.0" fill="rgb(229,3,0)" rx="2" ry="2" />
<text  x="743.95" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="152.5" y="1957" width="0.6" height="15.0" fill="rgb(222,34,24)" rx="2" ry="2" />
<text  x="155.54" y="1967.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="777.9" y="1541" width="0.2" height="15.0" fill="rgb(239,151,44)" rx="2" ry="2" />
<text  x="780.87" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="329.4" y="1621" width="0.2" height="15.0" fill="rgb(214,109,19)" rx="2" ry="2" />
<text  x="332.42" y="1631.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(242,45,38)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="213.1" y="2005" width="0.2" height="15.0" fill="rgb(207,84,1)" rx="2" ry="2" />
<text  x="216.09" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (4 samples, 0.07%)</title><rect x="243.9" y="1797" width="0.8" height="15.0" fill="rgb(243,119,42)" rx="2" ry="2" />
<text  x="246.86" y="1807.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="471.8" y="1893" width="0.2" height="15.0" fill="rgb(206,123,23)" rx="2" ry="2" />
<text  x="474.76" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="240.3" y="1813" width="0.2" height="15.0" fill="rgb(217,147,28)" rx="2" ry="2" />
<text  x="243.28" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="661.3" y="2005" width="1.2" height="15.0" fill="rgb(210,181,3)" rx="2" ry="2" />
<text  x="664.34" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="271.3" y="1893" width="0.2" height="15.0" fill="rgb(233,23,11)" rx="2" ry="2" />
<text  x="274.25" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="624.0" y="1989" width="0.2" height="15.0" fill="rgb(221,89,40)" rx="2" ry="2" />
<text  x="627.02" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1106.6" y="1765" width="0.2" height="15.0" fill="rgb(212,4,38)" rx="2" ry="2" />
<text  x="1109.62" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="733.8" y="1573" width="0.2" height="15.0" fill="rgb(252,135,20)" rx="2" ry="2" />
<text  x="736.80" y="1583.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="856.7" y="1621" width="0.2" height="15.0" fill="rgb(242,210,19)" rx="2" ry="2" />
<text  x="859.69" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="134.3" y="101" width="0.2" height="15.0" fill="rgb(237,170,12)" rx="2" ry="2" />
<text  x="137.27" y="111.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (3 samples, 0.05%)</title><rect x="710.6" y="1909" width="0.6" height="15.0" fill="rgb(210,68,20)" rx="2" ry="2" />
<text  x="713.58" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="857.3" y="1925" width="0.2" height="15.0" fill="rgb(223,105,14)" rx="2" ry="2" />
<text  x="860.28" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="136.9" y="533" width="0.2" height="15.0" fill="rgb(212,181,4)" rx="2" ry="2" />
<text  x="139.85" y="543.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="856.7" y="1461" width="0.2" height="15.0" fill="rgb(211,178,46)" rx="2" ry="2" />
<text  x="859.69" y="1471.5" ></text>
</g>
<g >
<title>dev_queue_xmit (99 samples, 1.67%)</title><rect x="775.9" y="1589" width="19.6" height="15.0" fill="rgb(249,207,3)" rx="2" ry="2" />
<text  x="778.89" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="870.0" y="1941" width="0.2" height="15.0" fill="rgb(247,213,24)" rx="2" ry="2" />
<text  x="872.99" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.9" y="1877" width="0.2" height="15.0" fill="rgb(250,0,4)" rx="2" ry="2" />
<text  x="77.92" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="745.9" y="1605" width="0.2" height="15.0" fill="rgb(227,4,46)" rx="2" ry="2" />
<text  x="748.91" y="1615.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="971.8" y="2037" width="0.2" height="15.0" fill="rgb(246,5,49)" rx="2" ry="2" />
<text  x="974.83" y="2047.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (9 samples, 0.15%)</title><rect x="962.1" y="2005" width="1.8" height="15.0" fill="rgb(250,227,0)" rx="2" ry="2" />
<text  x="965.10" y="2015.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="112.2" y="1909" width="0.2" height="15.0" fill="rgb(237,183,42)" rx="2" ry="2" />
<text  x="115.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="547.6" y="1653" width="0.2" height="15.0" fill="rgb(207,36,13)" rx="2" ry="2" />
<text  x="550.59" y="1663.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (2 samples, 0.03%)</title><rect x="518.0" y="1989" width="0.4" height="15.0" fill="rgb(246,227,31)" rx="2" ry="2" />
<text  x="521.01" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="630.4" y="1941" width="0.2" height="15.0" fill="rgb(243,131,20)" rx="2" ry="2" />
<text  x="633.37" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="882.7" y="1925" width="0.2" height="15.0" fill="rgb(225,27,4)" rx="2" ry="2" />
<text  x="885.69" y="1935.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="490.4" y="1973" width="0.4" height="15.0" fill="rgb(214,161,40)" rx="2" ry="2" />
<text  x="493.42" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="990.9" y="1925" width="0.2" height="15.0" fill="rgb(225,28,54)" rx="2" ry="2" />
<text  x="993.88" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="775.3" y="1509" width="0.6" height="15.0" fill="rgb(212,207,0)" rx="2" ry="2" />
<text  x="778.29" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="651.8" y="1909" width="0.2" height="15.0" fill="rgb(222,43,29)" rx="2" ry="2" />
<text  x="654.81" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="982.2" y="1749" width="0.1" height="15.0" fill="rgb(243,95,2)" rx="2" ry="2" />
<text  x="985.15" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="163.3" y="1573" width="0.2" height="15.0" fill="rgb(224,2,31)" rx="2" ry="2" />
<text  x="166.26" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="172.2" y="1877" width="0.2" height="15.0" fill="rgb(247,62,10)" rx="2" ry="2" />
<text  x="175.19" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="247.4" y="1925" width="0.2" height="15.0" fill="rgb(246,61,45)" rx="2" ry="2" />
<text  x="250.43" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="547.6" y="1733" width="0.2" height="15.0" fill="rgb(214,125,23)" rx="2" ry="2" />
<text  x="550.59" y="1743.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="844.2" y="1669" width="0.2" height="15.0" fill="rgb(220,170,46)" rx="2" ry="2" />
<text  x="847.18" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="680.6" y="1989" width="0.2" height="15.0" fill="rgb(243,130,49)" rx="2" ry="2" />
<text  x="683.60" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="81.3" y="1925" width="0.4" height="15.0" fill="rgb(231,196,53)" rx="2" ry="2" />
<text  x="84.27" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="600.8" y="1925" width="0.2" height="15.0" fill="rgb(226,83,5)" rx="2" ry="2" />
<text  x="603.79" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (9 samples, 0.15%)</title><rect x="407.0" y="1909" width="1.8" height="15.0" fill="rgb(229,132,9)" rx="2" ry="2" />
<text  x="410.04" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (2 samples, 0.03%)</title><rect x="1023.2" y="2037" width="0.4" height="15.0" fill="rgb(249,173,23)" rx="2" ry="2" />
<text  x="1026.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1172.7" y="1765" width="0.2" height="15.0" fill="rgb(236,124,32)" rx="2" ry="2" />
<text  x="1175.73" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="119.0" y="949" width="18.1" height="15.0" fill="rgb(228,220,54)" rx="2" ry="2" />
<text  x="121.99" y="959.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="80.1" y="1669" width="0.2" height="15.0" fill="rgb(222,193,26)" rx="2" ry="2" />
<text  x="83.08" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="772.7" y="1573" width="0.2" height="15.0" fill="rgb(208,21,21)" rx="2" ry="2" />
<text  x="775.71" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="60.2" y="1861" width="0.2" height="15.0" fill="rgb(221,103,51)" rx="2" ry="2" />
<text  x="63.23" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="138.8" y="1381" width="0.2" height="15.0" fill="rgb(241,212,8)" rx="2" ry="2" />
<text  x="141.84" y="1391.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (3 samples, 0.05%)</title><rect x="497.8" y="2037" width="0.6" height="15.0" fill="rgb(252,93,1)" rx="2" ry="2" />
<text  x="500.76" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="1024.2" y="2021" width="1.2" height="15.0" fill="rgb(236,9,10)" rx="2" ry="2" />
<text  x="1027.24" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="562.1" y="1637" width="0.2" height="15.0" fill="rgb(249,149,25)" rx="2" ry="2" />
<text  x="565.08" y="1647.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1106.6" y="1637" width="0.2" height="15.0" fill="rgb(245,200,18)" rx="2" ry="2" />
<text  x="1109.62" y="1647.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="322.1" y="1813" width="0.2" height="15.0" fill="rgb(213,83,24)" rx="2" ry="2" />
<text  x="325.07" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="676.2" y="1621" width="0.2" height="15.0" fill="rgb(232,103,37)" rx="2" ry="2" />
<text  x="679.23" y="1631.5" ></text>
</g>
<g >
<title>accept4 (4 samples, 0.07%)</title><rect x="24.3" y="2005" width="0.8" height="15.0" fill="rgb(244,83,15)" rx="2" ry="2" />
<text  x="27.29" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="637.1" y="1909" width="0.2" height="15.0" fill="rgb(241,216,30)" rx="2" ry="2" />
<text  x="640.12" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="932.7" y="1717" width="0.8" height="15.0" fill="rgb(231,50,38)" rx="2" ry="2" />
<text  x="935.72" y="1727.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (15 samples, 0.25%)</title><rect x="112.8" y="2037" width="3.0" height="15.0" fill="rgb(211,4,7)" rx="2" ry="2" />
<text  x="115.83" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="638.7" y="1813" width="0.2" height="15.0" fill="rgb(252,169,13)" rx="2" ry="2" />
<text  x="641.71" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="733.8" y="1653" width="0.2" height="15.0" fill="rgb(218,4,26)" rx="2" ry="2" />
<text  x="736.80" y="1663.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="117.8" y="1765" width="0.2" height="15.0" fill="rgb(207,172,27)" rx="2" ry="2" />
<text  x="120.80" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="731.6" y="1413" width="0.2" height="15.0" fill="rgb(244,219,17)" rx="2" ry="2" />
<text  x="734.62" y="1423.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="213.7" y="2021" width="0.2" height="15.0" fill="rgb(213,5,33)" rx="2" ry="2" />
<text  x="216.68" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1172.7" y="1813" width="0.2" height="15.0" fill="rgb(245,161,31)" rx="2" ry="2" />
<text  x="1175.73" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="842.6" y="1717" width="0.2" height="15.0" fill="rgb(245,110,33)" rx="2" ry="2" />
<text  x="845.59" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="186.1" y="1909" width="0.2" height="15.0" fill="rgb(209,198,6)" rx="2" ry="2" />
<text  x="189.09" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (4 samples, 0.07%)</title><rect x="614.1" y="1989" width="0.8" height="15.0" fill="rgb(240,222,0)" rx="2" ry="2" />
<text  x="617.09" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="745.9" y="1637" width="0.2" height="15.0" fill="rgb(217,215,25)" rx="2" ry="2" />
<text  x="748.91" y="1647.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (5 samples, 0.08%)</title><rect x="288.7" y="1861" width="1.0" height="15.0" fill="rgb(223,205,10)" rx="2" ry="2" />
<text  x="291.72" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="294.3" y="1541" width="0.2" height="15.0" fill="rgb(254,121,29)" rx="2" ry="2" />
<text  x="297.28" y="1551.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="894.0" y="2005" width="0.4" height="15.0" fill="rgb(212,77,15)" rx="2" ry="2" />
<text  x="897.01" y="2015.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="825.9" y="1429" width="0.2" height="15.0" fill="rgb(215,177,51)" rx="2" ry="2" />
<text  x="828.92" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="39.8" y="1765" width="0.2" height="15.0" fill="rgb(250,14,13)" rx="2" ry="2" />
<text  x="42.78" y="1775.5" ></text>
</g>
<g >
<title>__close_fd (23 samples, 0.39%)</title><rect x="826.3" y="1845" width="4.6" height="15.0" fill="rgb(211,100,40)" rx="2" ry="2" />
<text  x="829.31" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="832.1" y="1701" width="0.2" height="15.0" fill="rgb(217,42,7)" rx="2" ry="2" />
<text  x="835.07" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="515.6" y="1957" width="0.2" height="15.0" fill="rgb(242,75,4)" rx="2" ry="2" />
<text  x="518.63" y="1967.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="491.0" y="1685" width="0.2" height="15.0" fill="rgb(212,160,23)" rx="2" ry="2" />
<text  x="494.01" y="1695.5" ></text>
</g>
<g >
<title>release_sock (22 samples, 0.37%)</title><rect x="388.2" y="1941" width="4.3" height="15.0" fill="rgb(241,41,1)" rx="2" ry="2" />
<text  x="391.18" y="1951.5" ></text>
</g>
<g >
<title>rb_erase_cached (1 samples, 0.02%)</title><rect x="491.0" y="1973" width="0.2" height="15.0" fill="rgb(210,120,29)" rx="2" ry="2" />
<text  x="494.01" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="754.1" y="1717" width="0.7" height="15.0" fill="rgb(213,155,53)" rx="2" ry="2" />
<text  x="757.05" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="112.4" y="1909" width="0.2" height="15.0" fill="rgb(246,45,45)" rx="2" ry="2" />
<text  x="115.44" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="493.2" y="1861" width="0.2" height="15.0" fill="rgb(209,157,9)" rx="2" ry="2" />
<text  x="496.20" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (68 samples, 1.14%)</title><rect x="1153.5" y="2005" width="13.5" height="15.0" fill="rgb(224,112,20)" rx="2" ry="2" />
<text  x="1156.47" y="2015.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="137.3" y="1125" width="0.1" height="15.0" fill="rgb(216,187,46)" rx="2" ry="2" />
<text  x="140.25" y="1135.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="537.1" y="1877" width="0.2" height="15.0" fill="rgb(211,6,52)" rx="2" ry="2" />
<text  x="540.07" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1177.1" y="1877" width="0.2" height="15.0" fill="rgb(210,222,7)" rx="2" ry="2" />
<text  x="1180.10" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="279.0" y="1573" width="0.2" height="15.0" fill="rgb(226,84,46)" rx="2" ry="2" />
<text  x="281.99" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="186.9" y="2021" width="0.4" height="15.0" fill="rgb(214,127,27)" rx="2" ry="2" />
<text  x="189.88" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="486.6" y="1861" width="0.4" height="15.0" fill="rgb(214,119,34)" rx="2" ry="2" />
<text  x="489.65" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="520.0" y="1909" width="0.2" height="15.0" fill="rgb(252,197,36)" rx="2" ry="2" />
<text  x="523.00" y="1919.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="1048.7" y="1909" width="0.2" height="15.0" fill="rgb(249,122,11)" rx="2" ry="2" />
<text  x="1051.65" y="1919.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="66.2" y="1861" width="0.2" height="15.0" fill="rgb(225,85,5)" rx="2" ry="2" />
<text  x="69.18" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="267.3" y="1845" width="0.2" height="15.0" fill="rgb(225,131,44)" rx="2" ry="2" />
<text  x="270.28" y="1855.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1179.3" y="2005" width="0.2" height="15.0" fill="rgb(246,13,25)" rx="2" ry="2" />
<text  x="1182.28" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1154.3" y="1733" width="0.2" height="15.0" fill="rgb(214,92,48)" rx="2" ry="2" />
<text  x="1157.27" y="1743.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="492.4" y="1957" width="0.2" height="15.0" fill="rgb(209,168,20)" rx="2" ry="2" />
<text  x="495.40" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="733.8" y="1525" width="0.2" height="15.0" fill="rgb(224,225,21)" rx="2" ry="2" />
<text  x="736.80" y="1535.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="562.3" y="1653" width="0.2" height="15.0" fill="rgb(209,176,27)" rx="2" ry="2" />
<text  x="565.28" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8 samples, 0.13%)</title><rect x="1172.9" y="1989" width="1.6" height="15.0" fill="rgb(221,22,7)" rx="2" ry="2" />
<text  x="1175.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="31.4" y="1973" width="0.2" height="15.0" fill="rgb(217,46,53)" rx="2" ry="2" />
<text  x="34.44" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="716.7" y="1893" width="0.2" height="15.0" fill="rgb(207,120,2)" rx="2" ry="2" />
<text  x="719.73" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="329.4" y="1557" width="0.2" height="15.0" fill="rgb(226,194,27)" rx="2" ry="2" />
<text  x="332.42" y="1567.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1109.2" y="1445" width="0.2" height="15.0" fill="rgb(237,165,38)" rx="2" ry="2" />
<text  x="1112.20" y="1455.5" ></text>
</g>
<g >
<title>_mix_pool_bytes (1 samples, 0.02%)</title><rect x="638.7" y="1765" width="0.2" height="15.0" fill="rgb(216,146,37)" rx="2" ry="2" />
<text  x="641.71" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="163.3" y="1653" width="0.2" height="15.0" fill="rgb(220,168,18)" rx="2" ry="2" />
<text  x="166.26" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="329.4" y="1573" width="0.2" height="15.0" fill="rgb(216,131,2)" rx="2" ry="2" />
<text  x="332.42" y="1583.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="925.4" y="1845" width="0.8" height="15.0" fill="rgb(237,141,12)" rx="2" ry="2" />
<text  x="928.37" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="849.9" y="1941" width="0.4" height="15.0" fill="rgb(210,165,33)" rx="2" ry="2" />
<text  x="852.94" y="1951.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1106.8" y="1861" width="0.2" height="15.0" fill="rgb(221,63,32)" rx="2" ry="2" />
<text  x="1109.82" y="1871.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (2 samples, 0.03%)</title><rect x="86.2" y="1941" width="0.4" height="15.0" fill="rgb(213,198,28)" rx="2" ry="2" />
<text  x="89.23" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="249.0" y="1957" width="0.4" height="15.0" fill="rgb(213,135,14)" rx="2" ry="2" />
<text  x="252.02" y="1967.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="744.5" y="1797" width="0.2" height="15.0" fill="rgb(248,55,33)" rx="2" ry="2" />
<text  x="747.52" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="661.3" y="2021" width="1.2" height="15.0" fill="rgb(248,118,17)" rx="2" ry="2" />
<text  x="664.34" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="283.4" y="1781" width="0.2" height="15.0" fill="rgb(224,84,23)" rx="2" ry="2" />
<text  x="286.36" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="267.3" y="1813" width="0.2" height="15.0" fill="rgb(251,67,16)" rx="2" ry="2" />
<text  x="270.28" y="1823.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="140.4" y="1637" width="0.2" height="15.0" fill="rgb(207,16,30)" rx="2" ry="2" />
<text  x="143.43" y="1647.5" ></text>
</g>
<g >
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="350.7" y="1781" width="0.2" height="15.0" fill="rgb(230,124,8)" rx="2" ry="2" />
<text  x="353.66" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="540.4" y="1861" width="0.6" height="15.0" fill="rgb(217,214,16)" rx="2" ry="2" />
<text  x="543.44" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="134.9" y="181" width="0.2" height="15.0" fill="rgb(206,110,10)" rx="2" ry="2" />
<text  x="137.87" y="191.5" ></text>
</g>
<g >
<title>kick_process (1 samples, 0.02%)</title><rect x="829.7" y="1781" width="0.2" height="15.0" fill="rgb(225,183,6)" rx="2" ry="2" />
<text  x="832.69" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="900.2" y="2037" width="0.2" height="15.0" fill="rgb(214,36,47)" rx="2" ry="2" />
<text  x="903.16" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="72.1" y="1845" width="0.2" height="15.0" fill="rgb(229,140,5)" rx="2" ry="2" />
<text  x="75.14" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="245.6" y="1909" width="0.8" height="15.0" fill="rgb(253,196,24)" rx="2" ry="2" />
<text  x="248.64" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="968.1" y="1973" width="0.2" height="15.0" fill="rgb(228,49,31)" rx="2" ry="2" />
<text  x="971.06" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="984.9" y="1797" width="0.2" height="15.0" fill="rgb(249,38,20)" rx="2" ry="2" />
<text  x="987.93" y="1807.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="688.9" y="1925" width="0.2" height="15.0" fill="rgb(251,75,29)" rx="2" ry="2" />
<text  x="691.94" y="1935.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="891.8" y="1941" width="0.2" height="15.0" fill="rgb(226,201,6)" rx="2" ry="2" />
<text  x="894.82" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="936.5" y="1637" width="0.2" height="15.0" fill="rgb(252,23,40)" rx="2" ry="2" />
<text  x="939.49" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="762.6" y="1557" width="0.4" height="15.0" fill="rgb(248,8,28)" rx="2" ry="2" />
<text  x="765.59" y="1567.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="417.0" y="1941" width="0.8" height="15.0" fill="rgb(249,110,14)" rx="2" ry="2" />
<text  x="419.97" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (3 samples, 0.05%)</title><rect x="76.5" y="1925" width="0.6" height="15.0" fill="rgb(214,189,28)" rx="2" ry="2" />
<text  x="79.50" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="852.5" y="1845" width="0.2" height="15.0" fill="rgb(209,65,1)" rx="2" ry="2" />
<text  x="855.52" y="1855.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="569.6" y="1957" width="0.4" height="15.0" fill="rgb(235,213,31)" rx="2" ry="2" />
<text  x="572.63" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="842.6" y="1797" width="0.2" height="15.0" fill="rgb(245,177,0)" rx="2" ry="2" />
<text  x="845.59" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="136.7" y="69" width="0.2" height="15.0" fill="rgb(236,155,18)" rx="2" ry="2" />
<text  x="139.66" y="79.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="570.4" y="2005" width="1.0" height="15.0" fill="rgb(234,25,18)" rx="2" ry="2" />
<text  x="573.42" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (6 samples, 0.10%)</title><rect x="858.1" y="1989" width="1.2" height="15.0" fill="rgb(240,210,18)" rx="2" ry="2" />
<text  x="861.08" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="567.6" y="2005" width="0.2" height="15.0" fill="rgb(225,178,50)" rx="2" ry="2" />
<text  x="570.64" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (3 samples, 0.05%)</title><rect x="92.8" y="1941" width="0.6" height="15.0" fill="rgb(233,41,39)" rx="2" ry="2" />
<text  x="95.78" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="114.8" y="1829" width="0.2" height="15.0" fill="rgb(239,177,27)" rx="2" ry="2" />
<text  x="117.82" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="12.6" y="1909" width="1.0" height="15.0" fill="rgb(243,4,4)" rx="2" ry="2" />
<text  x="15.58" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (721 samples, 12.13%)</title><rect x="713.0" y="1957" width="143.1" height="15.0" fill="rgb(230,211,9)" rx="2" ry="2" />
<text  x="715.96" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1106.4" y="1909" width="0.4" height="15.0" fill="rgb(237,21,41)" rx="2" ry="2" />
<text  x="1109.42" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="947.4" y="1717" width="0.2" height="15.0" fill="rgb(208,57,54)" rx="2" ry="2" />
<text  x="950.41" y="1727.5" ></text>
</g>
<g >
<title>__libc_fcntl (1 samples, 0.02%)</title><rect x="532.5" y="1989" width="0.2" height="15.0" fill="rgb(238,158,52)" rx="2" ry="2" />
<text  x="535.50" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="403.1" y="1877" width="0.4" height="15.0" fill="rgb(231,29,31)" rx="2" ry="2" />
<text  x="406.07" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (68 samples, 1.14%)</title><rect x="1153.5" y="1989" width="13.5" height="15.0" fill="rgb(252,25,8)" rx="2" ry="2" />
<text  x="1156.47" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="114.8" y="1957" width="0.2" height="15.0" fill="rgb(248,57,35)" rx="2" ry="2" />
<text  x="117.82" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1121.3" y="1893" width="0.2" height="15.0" fill="rgb(209,165,12)" rx="2" ry="2" />
<text  x="1124.31" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1168.4" y="2053" width="0.2" height="15.0" fill="rgb(223,99,11)" rx="2" ry="2" />
<text  x="1171.36" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1019.9" y="2005" width="0.2" height="15.0" fill="rgb(240,128,30)" rx="2" ry="2" />
<text  x="1022.87" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="581.1" y="1989" width="0.2" height="15.0" fill="rgb(247,51,30)" rx="2" ry="2" />
<text  x="584.14" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="79.9" y="1749" width="0.4" height="15.0" fill="rgb(219,156,45)" rx="2" ry="2" />
<text  x="82.88" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.7" y="1989" width="0.2" height="15.0" fill="rgb(249,100,32)" rx="2" ry="2" />
<text  x="890.65" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1106.6" y="1685" width="0.2" height="15.0" fill="rgb(227,132,19)" rx="2" ry="2" />
<text  x="1109.62" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="113.8" y="2021" width="2.0" height="15.0" fill="rgb(235,120,19)" rx="2" ry="2" />
<text  x="116.83" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="543.0" y="1973" width="0.2" height="15.0" fill="rgb(241,208,25)" rx="2" ry="2" />
<text  x="546.02" y="1983.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (2 samples, 0.03%)</title><rect x="1155.1" y="1973" width="0.4" height="15.0" fill="rgb(207,226,18)" rx="2" ry="2" />
<text  x="1158.06" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (3 samples, 0.05%)</title><rect x="956.9" y="2037" width="0.6" height="15.0" fill="rgb(251,79,16)" rx="2" ry="2" />
<text  x="959.94" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (4 samples, 0.07%)</title><rect x="710.4" y="1989" width="0.8" height="15.0" fill="rgb(215,103,19)" rx="2" ry="2" />
<text  x="713.38" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="314.3" y="1637" width="0.4" height="15.0" fill="rgb(222,226,49)" rx="2" ry="2" />
<text  x="317.33" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="70.9" y="1909" width="0.4" height="15.0" fill="rgb(244,11,50)" rx="2" ry="2" />
<text  x="73.95" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="515.8" y="1957" width="0.2" height="15.0" fill="rgb(241,187,10)" rx="2" ry="2" />
<text  x="518.83" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="1156.5" y="1765" width="0.1" height="15.0" fill="rgb(224,3,23)" rx="2" ry="2" />
<text  x="1159.45" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.5" y="1957" width="0.2" height="15.0" fill="rgb(206,77,14)" rx="2" ry="2" />
<text  x="160.50" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="174.8" y="1909" width="0.2" height="15.0" fill="rgb(218,128,42)" rx="2" ry="2" />
<text  x="177.77" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="163.3" y="1621" width="0.2" height="15.0" fill="rgb(223,108,24)" rx="2" ry="2" />
<text  x="166.26" y="1631.5" ></text>
</g>
<g >
<title>__libc_fcntl (12 samples, 0.20%)</title><rect x="1169.2" y="2037" width="2.3" height="15.0" fill="rgb(244,191,53)" rx="2" ry="2" />
<text  x="1172.16" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="543.8" y="1781" width="0.2" height="15.0" fill="rgb(252,54,52)" rx="2" ry="2" />
<text  x="546.82" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (69 samples, 1.16%)</title><rect x="552.0" y="2005" width="13.7" height="15.0" fill="rgb(248,141,15)" rx="2" ry="2" />
<text  x="554.96" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="687.9" y="1909" width="0.2" height="15.0" fill="rgb(254,176,46)" rx="2" ry="2" />
<text  x="690.94" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="743.1" y="1509" width="0.2" height="15.0" fill="rgb(236,56,8)" rx="2" ry="2" />
<text  x="746.13" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="843.2" y="1893" width="1.0" height="15.0" fill="rgb(248,161,43)" rx="2" ry="2" />
<text  x="846.19" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="160.9" y="1877" width="0.2" height="15.0" fill="rgb(229,206,44)" rx="2" ry="2" />
<text  x="163.87" y="1887.5" ></text>
</g>
<g >
<title>__raise_softirq_irqoff (1 samples, 0.02%)</title><rect x="1048.5" y="1861" width="0.2" height="15.0" fill="rgb(229,204,23)" rx="2" ry="2" />
<text  x="1051.46" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="825.9" y="1493" width="0.2" height="15.0" fill="rgb(230,190,49)" rx="2" ry="2" />
<text  x="828.92" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (3 samples, 0.05%)</title><rect x="884.9" y="1941" width="0.6" height="15.0" fill="rgb(254,120,50)" rx="2" ry="2" />
<text  x="887.88" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1175.5" y="1973" width="0.6" height="15.0" fill="rgb(251,194,35)" rx="2" ry="2" />
<text  x="1178.51" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="517.6" y="1941" width="0.2" height="15.0" fill="rgb(244,28,28)" rx="2" ry="2" />
<text  x="520.61" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (59 samples, 0.99%)</title><rect x="602.0" y="1973" width="11.7" height="15.0" fill="rgb(219,80,51)" rx="2" ry="2" />
<text  x="604.99" y="1983.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="59.6" y="1941" width="0.8" height="15.0" fill="rgb(220,69,14)" rx="2" ry="2" />
<text  x="62.63" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="136.9" y="357" width="0.2" height="15.0" fill="rgb(229,125,45)" rx="2" ry="2" />
<text  x="139.85" y="367.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="898.4" y="2005" width="1.2" height="15.0" fill="rgb(253,207,35)" rx="2" ry="2" />
<text  x="901.37" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="383.4" y="1845" width="0.2" height="15.0" fill="rgb(208,28,47)" rx="2" ry="2" />
<text  x="386.42" y="1855.5" ></text>
</g>
<g >
<title>alloc_inode (30 samples, 0.50%)</title><rect x="398.7" y="1925" width="6.0" height="15.0" fill="rgb(209,226,31)" rx="2" ry="2" />
<text  x="401.70" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (83 samples, 1.40%)</title><rect x="583.5" y="1957" width="16.5" height="15.0" fill="rgb(206,0,19)" rx="2" ry="2" />
<text  x="586.52" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="699.1" y="1909" width="0.8" height="15.0" fill="rgb(232,190,11)" rx="2" ry="2" />
<text  x="702.06" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="283.2" y="1781" width="0.2" height="15.0" fill="rgb(236,66,22)" rx="2" ry="2" />
<text  x="286.16" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (4 samples, 0.07%)</title><rect x="956.1" y="2037" width="0.8" height="15.0" fill="rgb(253,224,21)" rx="2" ry="2" />
<text  x="959.14" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="543.8" y="1765" width="0.2" height="15.0" fill="rgb(242,188,51)" rx="2" ry="2" />
<text  x="546.82" y="1775.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="279.0" y="1637" width="0.2" height="15.0" fill="rgb(249,95,21)" rx="2" ry="2" />
<text  x="281.99" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="856.7" y="1701" width="0.2" height="15.0" fill="rgb(226,134,24)" rx="2" ry="2" />
<text  x="859.69" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (25 samples, 0.42%)</title><rect x="607.7" y="1909" width="5.0" height="15.0" fill="rgb(225,98,38)" rx="2" ry="2" />
<text  x="610.74" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="206.9" y="1893" width="0.2" height="15.0" fill="rgb(246,198,13)" rx="2" ry="2" />
<text  x="209.93" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1172.1" y="2037" width="0.2" height="15.0" fill="rgb(229,142,17)" rx="2" ry="2" />
<text  x="1175.13" y="2047.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="340.5" y="1957" width="0.4" height="15.0" fill="rgb(254,150,29)" rx="2" ry="2" />
<text  x="343.53" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="520.0" y="1797" width="0.2" height="15.0" fill="rgb(247,96,12)" rx="2" ry="2" />
<text  x="523.00" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1167.4" y="2037" width="0.2" height="15.0" fill="rgb(234,6,49)" rx="2" ry="2" />
<text  x="1170.37" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="269.3" y="1781" width="0.2" height="15.0" fill="rgb(221,177,31)" rx="2" ry="2" />
<text  x="272.27" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(243,96,51)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.9" y="1909" width="0.2" height="15.0" fill="rgb(206,224,35)" rx="2" ry="2" />
<text  x="77.92" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="775.3" y="1429" width="0.6" height="15.0" fill="rgb(213,196,35)" rx="2" ry="2" />
<text  x="778.29" y="1439.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="870.0" y="1925" width="0.2" height="15.0" fill="rgb(246,141,52)" rx="2" ry="2" />
<text  x="872.99" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="955.3" y="2021" width="0.8" height="15.0" fill="rgb(217,114,13)" rx="2" ry="2" />
<text  x="958.35" y="2031.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1167.4" y="2005" width="0.2" height="15.0" fill="rgb(215,126,43)" rx="2" ry="2" />
<text  x="1170.37" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="128.7" y="37" width="0.2" height="15.0" fill="rgb(223,166,27)" rx="2" ry="2" />
<text  x="131.71" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="136.5" y="341" width="0.2" height="15.0" fill="rgb(245,183,14)" rx="2" ry="2" />
<text  x="139.46" y="351.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="344.9" y="2021" width="2.0" height="15.0" fill="rgb(207,150,12)" rx="2" ry="2" />
<text  x="347.90" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="227.0" y="1941" width="0.2" height="15.0" fill="rgb(240,44,38)" rx="2" ry="2" />
<text  x="229.98" y="1951.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1078.8" y="1845" width="0.2" height="15.0" fill="rgb(235,93,2)" rx="2" ry="2" />
<text  x="1081.83" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="283.0" y="1573" width="0.2" height="15.0" fill="rgb(231,197,42)" rx="2" ry="2" />
<text  x="285.96" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="134.7" y="117" width="0.2" height="15.0" fill="rgb(216,184,6)" rx="2" ry="2" />
<text  x="137.67" y="127.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="984.9" y="1893" width="0.2" height="15.0" fill="rgb(230,171,5)" rx="2" ry="2" />
<text  x="987.93" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="725.9" y="1685" width="0.2" height="15.0" fill="rgb(237,225,21)" rx="2" ry="2" />
<text  x="728.86" y="1695.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="383.0" y="1909" width="0.2" height="15.0" fill="rgb(241,219,37)" rx="2" ry="2" />
<text  x="386.02" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (315 samples, 5.30%)</title><rect x="429.7" y="2005" width="62.5" height="15.0" fill="rgb(208,93,5)" rx="2" ry="2" />
<text  x="432.67" y="2015.5" >do_sys..</text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="511.7" y="2005" width="0.4" height="15.0" fill="rgb(251,79,37)" rx="2" ry="2" />
<text  x="514.66" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="317.5" y="1701" width="0.2" height="15.0" fill="rgb(249,226,30)" rx="2" ry="2" />
<text  x="320.51" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="118.8" y="1413" width="19.4" height="15.0" fill="rgb(247,72,25)" rx="2" ry="2" />
<text  x="121.79" y="1423.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.2" y="1861" width="0.8" height="15.0" fill="rgb(247,183,2)" rx="2" ry="2" />
<text  x="14.19" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="490.2" y="1797" width="0.2" height="15.0" fill="rgb(251,226,52)" rx="2" ry="2" />
<text  x="493.22" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="869" width="17.9" height="15.0" fill="rgb(240,178,16)" rx="2" ry="2" />
<text  x="122.19" y="879.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="72.1" y="1701" width="0.2" height="15.0" fill="rgb(231,131,53)" rx="2" ry="2" />
<text  x="75.14" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="207.3" y="2021" width="0.2" height="15.0" fill="rgb(251,92,32)" rx="2" ry="2" />
<text  x="210.33" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="837.4" y="1877" width="0.2" height="15.0" fill="rgb(222,213,19)" rx="2" ry="2" />
<text  x="840.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="819.0" y="1733" width="0.2" height="15.0" fill="rgb(232,16,43)" rx="2" ry="2" />
<text  x="821.97" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="174.6" y="1925" width="0.4" height="15.0" fill="rgb(250,228,45)" rx="2" ry="2" />
<text  x="177.57" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="831.7" y="1813" width="0.2" height="15.0" fill="rgb(243,54,52)" rx="2" ry="2" />
<text  x="834.67" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="534.1" y="1973" width="0.2" height="15.0" fill="rgb(252,181,20)" rx="2" ry="2" />
<text  x="537.09" y="1983.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="925.4" y="1829" width="0.8" height="15.0" fill="rgb(246,30,17)" rx="2" ry="2" />
<text  x="928.37" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="39.8" y="1957" width="0.2" height="15.0" fill="rgb(212,142,22)" rx="2" ry="2" />
<text  x="42.78" y="1967.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="595.0" y="1861" width="0.2" height="15.0" fill="rgb(231,134,19)" rx="2" ry="2" />
<text  x="598.04" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1154.3" y="1829" width="0.2" height="15.0" fill="rgb(254,27,17)" rx="2" ry="2" />
<text  x="1157.27" y="1839.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="800.7" y="1285" width="0.2" height="15.0" fill="rgb(233,42,33)" rx="2" ry="2" />
<text  x="803.70" y="1295.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (2 samples, 0.03%)</title><rect x="618.1" y="2037" width="0.4" height="15.0" fill="rgb(223,124,27)" rx="2" ry="2" />
<text  x="621.07" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="950.2" y="1989" width="0.2" height="15.0" fill="rgb(224,107,46)" rx="2" ry="2" />
<text  x="953.19" y="1999.5" ></text>
</g>
<g >
<title>skb_entail (15 samples, 0.25%)</title><rect x="286.7" y="1877" width="3.0" height="15.0" fill="rgb(223,164,33)" rx="2" ry="2" />
<text  x="289.74" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="775.3" y="1589" width="0.6" height="15.0" fill="rgb(217,46,26)" rx="2" ry="2" />
<text  x="778.29" y="1599.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="856.7" y="1605" width="0.2" height="15.0" fill="rgb(241,171,25)" rx="2" ry="2" />
<text  x="859.69" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="853.9" y="1797" width="0.2" height="15.0" fill="rgb(208,129,48)" rx="2" ry="2" />
<text  x="856.91" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="118.8" y="1237" width="18.8" height="15.0" fill="rgb(233,34,20)" rx="2" ry="2" />
<text  x="121.79" y="1247.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="637.1" y="1813" width="0.2" height="15.0" fill="rgb(233,55,51)" rx="2" ry="2" />
<text  x="640.12" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="562.1" y="1685" width="0.2" height="15.0" fill="rgb(247,13,14)" rx="2" ry="2" />
<text  x="565.08" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="104.7" y="1893" width="0.4" height="15.0" fill="rgb(208,214,26)" rx="2" ry="2" />
<text  x="107.69" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1127.3" y="2005" width="0.6" height="15.0" fill="rgb(245,178,49)" rx="2" ry="2" />
<text  x="1130.27" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="969.8" y="2021" width="0.2" height="15.0" fill="rgb(235,110,11)" rx="2" ry="2" />
<text  x="972.84" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1127.7" y="1781" width="0.2" height="15.0" fill="rgb(222,216,1)" rx="2" ry="2" />
<text  x="1130.66" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="114.8" y="1877" width="0.2" height="15.0" fill="rgb(209,199,32)" rx="2" ry="2" />
<text  x="117.82" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="1178.7" y="2021" width="0.6" height="15.0" fill="rgb(248,195,46)" rx="2" ry="2" />
<text  x="1181.68" y="2031.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="676.4" y="1909" width="0.2" height="15.0" fill="rgb(207,206,40)" rx="2" ry="2" />
<text  x="679.43" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="856.7" y="1909" width="0.2" height="15.0" fill="rgb(211,177,12)" rx="2" ry="2" />
<text  x="859.69" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="659.2" y="1877" width="0.2" height="15.0" fill="rgb(240,58,45)" rx="2" ry="2" />
<text  x="662.16" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1781" width="0.2" height="15.0" fill="rgb(211,154,31)" rx="2" ry="2" />
<text  x="216.68" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="443.8" y="1813" width="0.2" height="15.0" fill="rgb(227,60,30)" rx="2" ry="2" />
<text  x="446.77" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="194.0" y="1957" width="0.2" height="15.0" fill="rgb(218,152,31)" rx="2" ry="2" />
<text  x="197.03" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="34.0" y="1941" width="0.4" height="15.0" fill="rgb(212,6,5)" rx="2" ry="2" />
<text  x="37.02" y="1951.5" ></text>
</g>
<g >
<title>tcp_init_xmit_timers (1 samples, 0.02%)</title><rect x="627.2" y="1701" width="0.2" height="15.0" fill="rgb(241,129,6)" rx="2" ry="2" />
<text  x="630.20" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.30%)</title><rect x="608.3" y="1893" width="3.6" height="15.0" fill="rgb(246,26,42)" rx="2" ry="2" />
<text  x="611.34" y="1903.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="272.0" y="1893" width="0.8" height="15.0" fill="rgb(239,174,0)" rx="2" ry="2" />
<text  x="275.05" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="840.6" y="1909" width="0.8" height="15.0" fill="rgb(215,11,51)" rx="2" ry="2" />
<text  x="843.61" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="39.8" y="1813" width="0.2" height="15.0" fill="rgb(211,218,13)" rx="2" ry="2" />
<text  x="42.78" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="731.6" y="1541" width="0.2" height="15.0" fill="rgb(241,20,12)" rx="2" ry="2" />
<text  x="734.62" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="250.6" y="2021" width="0.2" height="15.0" fill="rgb(250,28,3)" rx="2" ry="2" />
<text  x="253.61" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="156.3" y="1877" width="0.2" height="15.0" fill="rgb(206,102,24)" rx="2" ry="2" />
<text  x="159.31" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="830.5" y="1717" width="0.2" height="15.0" fill="rgb(229,122,40)" rx="2" ry="2" />
<text  x="833.48" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="641.1" y="1925" width="0.2" height="15.0" fill="rgb(225,219,0)" rx="2" ry="2" />
<text  x="644.09" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="540.4" y="1893" width="0.8" height="15.0" fill="rgb(208,4,41)" rx="2" ry="2" />
<text  x="543.44" y="1903.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="104.1" y="1989" width="0.2" height="15.0" fill="rgb(216,188,33)" rx="2" ry="2" />
<text  x="107.10" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="136.5" y="325" width="0.2" height="15.0" fill="rgb(213,131,52)" rx="2" ry="2" />
<text  x="139.46" y="335.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="882.3" y="1957" width="1.2" height="15.0" fill="rgb(252,222,16)" rx="2" ry="2" />
<text  x="885.29" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="936.5" y="1733" width="0.2" height="15.0" fill="rgb(211,0,4)" rx="2" ry="2" />
<text  x="939.49" y="1743.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="643.5" y="1973" width="0.2" height="15.0" fill="rgb(238,36,49)" rx="2" ry="2" />
<text  x="646.48" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="848.9" y="1909" width="0.8" height="15.0" fill="rgb(211,142,19)" rx="2" ry="2" />
<text  x="851.94" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1078.6" y="1749" width="0.2" height="15.0" fill="rgb(243,165,52)" rx="2" ry="2" />
<text  x="1081.63" y="1759.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="163.3" y="1541" width="0.2" height="15.0" fill="rgb(238,201,17)" rx="2" ry="2" />
<text  x="166.26" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="194.8" y="1973" width="1.4" height="15.0" fill="rgb(228,84,13)" rx="2" ry="2" />
<text  x="197.82" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="100.1" y="1941" width="0.2" height="15.0" fill="rgb(235,36,54)" rx="2" ry="2" />
<text  x="103.13" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="703.4" y="1989" width="0.2" height="15.0" fill="rgb(244,121,11)" rx="2" ry="2" />
<text  x="706.43" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1163.8" y="1861" width="0.2" height="15.0" fill="rgb(244,223,52)" rx="2" ry="2" />
<text  x="1166.80" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (24 samples, 0.40%)</title><rect x="656.0" y="2037" width="4.7" height="15.0" fill="rgb(223,83,29)" rx="2" ry="2" />
<text  x="658.98" y="2047.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="157.5" y="1557" width="0.2" height="15.0" fill="rgb(217,165,39)" rx="2" ry="2" />
<text  x="160.50" y="1567.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (29 samples, 0.49%)</title><rect x="207.5" y="2037" width="5.8" height="15.0" fill="rgb(237,143,4)" rx="2" ry="2" />
<text  x="210.53" y="2047.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (30 samples, 0.50%)</title><rect x="810.2" y="1717" width="6.0" height="15.0" fill="rgb(230,14,14)" rx="2" ry="2" />
<text  x="813.23" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.0" y="1909" width="0.2" height="15.0" fill="rgb(245,59,12)" rx="2" ry="2" />
<text  x="494.01" y="1919.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="763.2" y="1701" width="0.2" height="15.0" fill="rgb(242,48,18)" rx="2" ry="2" />
<text  x="766.18" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="104.9" y="1765" width="0.2" height="15.0" fill="rgb(224,141,27)" rx="2" ry="2" />
<text  x="107.89" y="1775.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1106.6" y="1621" width="0.2" height="15.0" fill="rgb(230,50,49)" rx="2" ry="2" />
<text  x="1109.62" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="504.9" y="1781" width="0.6" height="15.0" fill="rgb(247,176,8)" rx="2" ry="2" />
<text  x="507.91" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="93.0" y="1845" width="0.2" height="15.0" fill="rgb(210,156,40)" rx="2" ry="2" />
<text  x="95.98" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="131.7" y="53" width="0.2" height="15.0" fill="rgb(251,197,41)" rx="2" ry="2" />
<text  x="134.69" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="651.8" y="1941" width="0.2" height="15.0" fill="rgb(253,152,36)" rx="2" ry="2" />
<text  x="654.81" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="136.1" y="181" width="0.2" height="15.0" fill="rgb(213,197,43)" rx="2" ry="2" />
<text  x="139.06" y="191.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="288.5" y="1829" width="0.2" height="15.0" fill="rgb(238,61,45)" rx="2" ry="2" />
<text  x="291.52" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1154.3" y="1749" width="0.2" height="15.0" fill="rgb(223,126,3)" rx="2" ry="2" />
<text  x="1157.27" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="112.4" y="2021" width="0.2" height="15.0" fill="rgb(239,73,12)" rx="2" ry="2" />
<text  x="115.44" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="594.8" y="1845" width="0.2" height="15.0" fill="rgb(236,98,48)" rx="2" ry="2" />
<text  x="597.84" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (36 samples, 0.61%)</title><rect x="929.7" y="1925" width="7.2" height="15.0" fill="rgb(238,190,35)" rx="2" ry="2" />
<text  x="932.74" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1150.1" y="1973" width="0.2" height="15.0" fill="rgb(230,90,19)" rx="2" ry="2" />
<text  x="1153.10" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="328.4" y="1669" width="0.2" height="15.0" fill="rgb(210,149,0)" rx="2" ry="2" />
<text  x="331.43" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="136.3" y="309" width="0.2" height="15.0" fill="rgb(223,139,8)" rx="2" ry="2" />
<text  x="139.26" y="319.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="983.7" y="1861" width="0.2" height="15.0" fill="rgb(206,96,16)" rx="2" ry="2" />
<text  x="986.74" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="135.1" y="181" width="0.8" height="15.0" fill="rgb(207,77,49)" rx="2" ry="2" />
<text  x="138.07" y="191.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="169.0" y="1861" width="0.2" height="15.0" fill="rgb(250,213,38)" rx="2" ry="2" />
<text  x="172.01" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="329.4" y="1589" width="0.2" height="15.0" fill="rgb(234,215,1)" rx="2" ry="2" />
<text  x="332.42" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="136.9" y="213" width="0.2" height="15.0" fill="rgb(218,21,47)" rx="2" ry="2" />
<text  x="139.85" y="223.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1189.0" y="1893" width="0.2" height="15.0" fill="rgb(217,206,19)" rx="2" ry="2" />
<text  x="1192.01" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1152.1" y="1989" width="0.2" height="15.0" fill="rgb(246,181,11)" rx="2" ry="2" />
<text  x="1155.08" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="543.4" y="1941" width="0.2" height="15.0" fill="rgb(254,217,26)" rx="2" ry="2" />
<text  x="546.42" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (13 samples, 0.22%)</title><rect x="168.4" y="1925" width="2.6" height="15.0" fill="rgb(242,37,27)" rx="2" ry="2" />
<text  x="171.42" y="1935.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (3 samples, 0.05%)</title><rect x="350.3" y="2037" width="0.6" height="15.0" fill="rgb(237,206,40)" rx="2" ry="2" />
<text  x="353.26" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="637.1" y="1797" width="0.2" height="15.0" fill="rgb(244,15,4)" rx="2" ry="2" />
<text  x="640.12" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="138.0" y="997" width="0.2" height="15.0" fill="rgb(222,81,43)" rx="2" ry="2" />
<text  x="141.05" y="1007.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="559.9" y="1861" width="0.2" height="15.0" fill="rgb(223,11,21)" rx="2" ry="2" />
<text  x="562.90" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="753.9" y="1605" width="0.2" height="15.0" fill="rgb(219,38,24)" rx="2" ry="2" />
<text  x="756.85" y="1615.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="775.5" y="1317" width="0.2" height="15.0" fill="rgb(247,93,2)" rx="2" ry="2" />
<text  x="778.49" y="1327.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="844.6" y="1909" width="0.8" height="15.0" fill="rgb(242,135,22)" rx="2" ry="2" />
<text  x="847.58" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="418.8" y="1973" width="0.3" height="15.0" fill="rgb(236,140,2)" rx="2" ry="2" />
<text  x="421.75" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="156.3" y="1797" width="0.2" height="15.0" fill="rgb(248,48,41)" rx="2" ry="2" />
<text  x="159.31" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="58.4" y="1877" width="0.2" height="15.0" fill="rgb(239,13,23)" rx="2" ry="2" />
<text  x="61.44" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (88 samples, 1.48%)</title><rect x="298.8" y="1749" width="17.5" height="15.0" fill="rgb(230,68,19)" rx="2" ry="2" />
<text  x="301.85" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (2 samples, 0.03%)</title><rect x="81.7" y="1957" width="0.4" height="15.0" fill="rgb(247,119,38)" rx="2" ry="2" />
<text  x="84.67" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="613.1" y="1861" width="0.2" height="15.0" fill="rgb(234,194,40)" rx="2" ry="2" />
<text  x="616.10" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="546.0" y="1989" width="0.2" height="15.0" fill="rgb(207,170,2)" rx="2" ry="2" />
<text  x="549.00" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="694.1" y="1445" width="0.2" height="15.0" fill="rgb(225,79,46)" rx="2" ry="2" />
<text  x="697.10" y="1455.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="61.0" y="1861" width="0.2" height="15.0" fill="rgb(238,78,43)" rx="2" ry="2" />
<text  x="64.02" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="408.4" y="1685" width="0.2" height="15.0" fill="rgb(245,81,32)" rx="2" ry="2" />
<text  x="411.43" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="528.1" y="2021" width="0.4" height="15.0" fill="rgb(241,166,34)" rx="2" ry="2" />
<text  x="531.14" y="2031.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="443.2" y="1989" width="0.2" height="15.0" fill="rgb(247,76,12)" rx="2" ry="2" />
<text  x="446.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::clear (2 samples, 0.03%)</title><rect x="196.6" y="2021" width="0.4" height="15.0" fill="rgb(250,83,26)" rx="2" ry="2" />
<text  x="199.61" y="2031.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="297.7" y="1765" width="0.2" height="15.0" fill="rgb(235,183,50)" rx="2" ry="2" />
<text  x="300.65" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="463.4" y="1941" width="0.2" height="15.0" fill="rgb(219,116,18)" rx="2" ry="2" />
<text  x="466.42" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="870.0" y="1957" width="0.2" height="15.0" fill="rgb(224,11,41)" rx="2" ry="2" />
<text  x="872.99" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="155.9" y="1957" width="0.2" height="15.0" fill="rgb(231,221,49)" rx="2" ry="2" />
<text  x="158.91" y="1967.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (3 samples, 0.05%)</title><rect x="462.8" y="1941" width="0.6" height="15.0" fill="rgb(246,139,11)" rx="2" ry="2" />
<text  x="465.82" y="1951.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="283.2" y="1749" width="0.2" height="15.0" fill="rgb(219,189,5)" rx="2" ry="2" />
<text  x="286.16" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1054.0" y="1925" width="0.2" height="15.0" fill="rgb(210,105,34)" rx="2" ry="2" />
<text  x="1057.01" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="870.2" y="1989" width="0.2" height="15.0" fill="rgb(206,82,43)" rx="2" ry="2" />
<text  x="873.19" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="279.0" y="1557" width="0.2" height="15.0" fill="rgb(251,35,17)" rx="2" ry="2" />
<text  x="281.99" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1173.3" y="1973" width="0.4" height="15.0" fill="rgb(232,175,53)" rx="2" ry="2" />
<text  x="1176.32" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="597.4" y="1861" width="0.2" height="15.0" fill="rgb(223,122,26)" rx="2" ry="2" />
<text  x="600.42" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1156.5" y="1957" width="0.1" height="15.0" fill="rgb(213,70,9)" rx="2" ry="2" />
<text  x="1159.45" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="848.1" y="1877" width="0.2" height="15.0" fill="rgb(225,100,8)" rx="2" ry="2" />
<text  x="851.15" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="882.1" y="1941" width="0.2" height="15.0" fill="rgb(218,138,42)" rx="2" ry="2" />
<text  x="885.10" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="913.9" y="1941" width="0.2" height="15.0" fill="rgb(243,83,54)" rx="2" ry="2" />
<text  x="916.86" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1087.4" y="1925" width="0.2" height="15.0" fill="rgb(237,113,8)" rx="2" ry="2" />
<text  x="1090.37" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="134.3" y="53" width="0.2" height="15.0" fill="rgb(234,38,48)" rx="2" ry="2" />
<text  x="137.27" y="63.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (93 samples, 1.56%)</title><rect x="582.1" y="1989" width="18.5" height="15.0" fill="rgb(220,48,20)" rx="2" ry="2" />
<text  x="585.13" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="408.4" y="1765" width="0.2" height="15.0" fill="rgb(225,187,43)" rx="2" ry="2" />
<text  x="411.43" y="1775.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="144.2" y="1941" width="0.2" height="15.0" fill="rgb(240,165,2)" rx="2" ry="2" />
<text  x="147.20" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="267.3" y="1893" width="0.2" height="15.0" fill="rgb(237,189,54)" rx="2" ry="2" />
<text  x="270.28" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="486.8" y="1461" width="0.2" height="15.0" fill="rgb(213,170,12)" rx="2" ry="2" />
<text  x="489.84" y="1471.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="884.9" y="1925" width="0.4" height="15.0" fill="rgb(233,153,7)" rx="2" ry="2" />
<text  x="887.88" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="114.8" y="1749" width="0.2" height="15.0" fill="rgb(216,10,29)" rx="2" ry="2" />
<text  x="117.82" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="61.0" y="1573" width="0.2" height="15.0" fill="rgb(222,36,4)" rx="2" ry="2" />
<text  x="64.02" y="1583.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="595.8" y="1861" width="1.0" height="15.0" fill="rgb(243,155,11)" rx="2" ry="2" />
<text  x="598.83" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="762.6" y="1621" width="0.4" height="15.0" fill="rgb(218,46,30)" rx="2" ry="2" />
<text  x="765.59" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="288.5" y="1845" width="0.2" height="15.0" fill="rgb(224,95,46)" rx="2" ry="2" />
<text  x="291.52" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (24 samples, 0.40%)</title><rect x="97.5" y="1973" width="4.8" height="15.0" fill="rgb(253,67,20)" rx="2" ry="2" />
<text  x="100.55" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="984.9" y="1781" width="0.2" height="15.0" fill="rgb(230,23,26)" rx="2" ry="2" />
<text  x="987.93" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="870.6" y="1973" width="0.2" height="15.0" fill="rgb(242,15,15)" rx="2" ry="2" />
<text  x="873.58" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="528.5" y="1909" width="0.2" height="15.0" fill="rgb(249,214,3)" rx="2" ry="2" />
<text  x="531.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="731.6" y="1445" width="0.2" height="15.0" fill="rgb(243,52,9)" rx="2" ry="2" />
<text  x="734.62" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="982.2" y="1797" width="0.1" height="15.0" fill="rgb(232,199,48)" rx="2" ry="2" />
<text  x="985.15" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="136.5" y="101" width="0.2" height="15.0" fill="rgb(237,205,5)" rx="2" ry="2" />
<text  x="139.46" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="491.0" y="1829" width="0.2" height="15.0" fill="rgb(231,42,34)" rx="2" ry="2" />
<text  x="494.01" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="156.7" y="1973" width="0.2" height="15.0" fill="rgb(215,61,25)" rx="2" ry="2" />
<text  x="159.71" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="627.0" y="1893" width="0.2" height="15.0" fill="rgb(226,80,41)" rx="2" ry="2" />
<text  x="630.00" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="745.9" y="1621" width="0.2" height="15.0" fill="rgb(230,229,54)" rx="2" ry="2" />
<text  x="748.91" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="329.4" y="1637" width="0.2" height="15.0" fill="rgb(211,133,21)" rx="2" ry="2" />
<text  x="332.42" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="956.3" y="1989" width="0.2" height="15.0" fill="rgb(234,35,50)" rx="2" ry="2" />
<text  x="959.34" y="1999.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="1048.9" y="1765" width="0.2" height="15.0" fill="rgb(252,47,18)" rx="2" ry="2" />
<text  x="1051.85" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (133 samples, 2.24%)</title><rect x="117.6" y="1925" width="26.4" height="15.0" fill="rgb(236,72,51)" rx="2" ry="2" />
<text  x="120.60" y="1935.5" >[..</text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="32.8" y="1973" width="2.8" height="15.0" fill="rgb(229,174,7)" rx="2" ry="2" />
<text  x="35.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="884.7" y="1605" width="0.2" height="15.0" fill="rgb(253,165,42)" rx="2" ry="2" />
<text  x="887.68" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (10 samples, 0.17%)</title><rect x="622.6" y="2037" width="2.0" height="15.0" fill="rgb(242,172,18)" rx="2" ry="2" />
<text  x="625.63" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="163.3" y="1829" width="0.2" height="15.0" fill="rgb(211,192,40)" rx="2" ry="2" />
<text  x="166.26" y="1839.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="349.3" y="2037" width="0.2" height="15.0" fill="rgb(249,67,51)" rx="2" ry="2" />
<text  x="352.27" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="136.7" y="389" width="0.2" height="15.0" fill="rgb(238,153,13)" rx="2" ry="2" />
<text  x="139.66" y="399.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="859.3" y="1989" width="0.8" height="15.0" fill="rgb(229,11,52)" rx="2" ry="2" />
<text  x="862.27" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="136.3" y="37" width="0.2" height="15.0" fill="rgb(207,65,42)" rx="2" ry="2" />
<text  x="139.26" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="837.8" y="1925" width="0.2" height="15.0" fill="rgb(254,72,1)" rx="2" ry="2" />
<text  x="840.83" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="838.4" y="1861" width="0.2" height="15.0" fill="rgb(221,135,47)" rx="2" ry="2" />
<text  x="841.42" y="1871.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="969.2" y="2037" width="0.8" height="15.0" fill="rgb(210,71,2)" rx="2" ry="2" />
<text  x="972.25" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="742.7" y="1669" width="0.2" height="15.0" fill="rgb(206,116,37)" rx="2" ry="2" />
<text  x="745.74" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="179.5" y="2005" width="0.2" height="15.0" fill="rgb(241,142,43)" rx="2" ry="2" />
<text  x="182.54" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="676.2" y="1685" width="0.2" height="15.0" fill="rgb(254,94,38)" rx="2" ry="2" />
<text  x="679.23" y="1695.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="759.8" y="1637" width="0.2" height="15.0" fill="rgb(239,153,25)" rx="2" ry="2" />
<text  x="762.81" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="955.3" y="2037" width="0.8" height="15.0" fill="rgb(219,116,5)" rx="2" ry="2" />
<text  x="958.35" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="279.0" y="1845" width="0.2" height="15.0" fill="rgb(219,53,35)" rx="2" ry="2" />
<text  x="281.99" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1090.3" y="1845" width="0.2" height="15.0" fill="rgb(224,100,24)" rx="2" ry="2" />
<text  x="1093.34" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="679.4" y="1749" width="0.2" height="15.0" fill="rgb(237,207,6)" rx="2" ry="2" />
<text  x="682.41" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (2 samples, 0.03%)</title><rect x="108.7" y="2021" width="0.4" height="15.0" fill="rgb(226,114,27)" rx="2" ry="2" />
<text  x="111.66" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="378.5" y="1733" width="0.2" height="15.0" fill="rgb(227,135,35)" rx="2" ry="2" />
<text  x="381.45" y="1743.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="844.2" y="1621" width="0.2" height="15.0" fill="rgb(248,45,45)" rx="2" ry="2" />
<text  x="847.18" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="984.9" y="1861" width="0.2" height="15.0" fill="rgb(254,186,41)" rx="2" ry="2" />
<text  x="987.93" y="1871.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="964.3" y="2005" width="0.2" height="15.0" fill="rgb(231,192,14)" rx="2" ry="2" />
<text  x="967.28" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="725.9" y="1765" width="0.2" height="15.0" fill="rgb(209,13,15)" rx="2" ry="2" />
<text  x="728.86" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="660.0" y="2021" width="0.3" height="15.0" fill="rgb(231,149,9)" rx="2" ry="2" />
<text  x="662.95" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="491.0" y="1957" width="0.2" height="15.0" fill="rgb(212,0,35)" rx="2" ry="2" />
<text  x="494.01" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="906.9" y="1973" width="0.2" height="15.0" fill="rgb(235,56,2)" rx="2" ry="2" />
<text  x="909.91" y="1983.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (3 samples, 0.05%)</title><rect x="775.3" y="1573" width="0.6" height="15.0" fill="rgb(234,208,13)" rx="2" ry="2" />
<text  x="778.29" y="1583.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="975.8" y="2005" width="0.2" height="15.0" fill="rgb(220,167,53)" rx="2" ry="2" />
<text  x="978.80" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="98.7" y="1941" width="0.4" height="15.0" fill="rgb(218,27,18)" rx="2" ry="2" />
<text  x="101.74" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="694.1" y="1829" width="0.2" height="15.0" fill="rgb(246,16,16)" rx="2" ry="2" />
<text  x="697.10" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1183.1" y="1893" width="0.3" height="15.0" fill="rgb(246,0,38)" rx="2" ry="2" />
<text  x="1186.05" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (38 samples, 0.64%)</title><rect x="1107.4" y="1653" width="7.6" height="15.0" fill="rgb(221,214,26)" rx="2" ry="2" />
<text  x="1110.42" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="418.8" y="1957" width="0.3" height="15.0" fill="rgb(250,71,9)" rx="2" ry="2" />
<text  x="421.75" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="486.6" y="1813" width="0.4" height="15.0" fill="rgb(215,201,23)" rx="2" ry="2" />
<text  x="489.65" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1154.3" y="1957" width="0.2" height="15.0" fill="rgb(212,64,47)" rx="2" ry="2" />
<text  x="1157.27" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="524.6" y="1957" width="0.8" height="15.0" fill="rgb(214,131,8)" rx="2" ry="2" />
<text  x="527.56" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="857.3" y="1733" width="0.2" height="15.0" fill="rgb(231,66,36)" rx="2" ry="2" />
<text  x="860.28" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (3 samples, 0.05%)</title><rect x="655.2" y="2021" width="0.6" height="15.0" fill="rgb(243,201,6)" rx="2" ry="2" />
<text  x="658.19" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="662.3" y="1973" width="0.2" height="15.0" fill="rgb(208,184,35)" rx="2" ry="2" />
<text  x="665.34" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="543.8" y="1509" width="0.2" height="15.0" fill="rgb(219,41,11)" rx="2" ry="2" />
<text  x="546.82" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="910.7" y="2005" width="0.2" height="15.0" fill="rgb(218,201,31)" rx="2" ry="2" />
<text  x="913.68" y="2015.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1156.6" y="1957" width="0.2" height="15.0" fill="rgb(244,14,24)" rx="2" ry="2" />
<text  x="1159.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="339.3" y="1877" width="0.2" height="15.0" fill="rgb(225,215,49)" rx="2" ry="2" />
<text  x="342.34" y="1887.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (2 samples, 0.03%)</title><rect x="1006.0" y="1989" width="0.4" height="15.0" fill="rgb(212,72,15)" rx="2" ry="2" />
<text  x="1008.97" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="857.3" y="1861" width="0.2" height="15.0" fill="rgb(239,71,54)" rx="2" ry="2" />
<text  x="860.28" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (8 samples, 0.13%)</title><rect x="238.9" y="1877" width="1.6" height="15.0" fill="rgb(246,168,2)" rx="2" ry="2" />
<text  x="241.89" y="1887.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="755.4" y="1461" width="0.2" height="15.0" fill="rgb(211,195,33)" rx="2" ry="2" />
<text  x="758.44" y="1471.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="88.4" y="1941" width="0.6" height="15.0" fill="rgb(217,125,22)" rx="2" ry="2" />
<text  x="91.42" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="264.7" y="1733" width="0.2" height="15.0" fill="rgb(241,206,34)" rx="2" ry="2" />
<text  x="267.70" y="1743.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="654.6" y="2005" width="0.2" height="15.0" fill="rgb(222,215,20)" rx="2" ry="2" />
<text  x="657.59" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="283.6" y="1829" width="0.4" height="15.0" fill="rgb(239,32,52)" rx="2" ry="2" />
<text  x="286.56" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="343.3" y="1909" width="0.2" height="15.0" fill="rgb(209,189,7)" rx="2" ry="2" />
<text  x="346.31" y="1919.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="131.9" y="69" width="0.4" height="15.0" fill="rgb(231,44,22)" rx="2" ry="2" />
<text  x="134.89" y="79.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="676.2" y="1813" width="0.2" height="15.0" fill="rgb(208,127,1)" rx="2" ry="2" />
<text  x="679.23" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="134.5" y="149" width="0.2" height="15.0" fill="rgb(210,138,42)" rx="2" ry="2" />
<text  x="137.47" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="196.2" y="1957" width="0.2" height="15.0" fill="rgb(230,112,42)" rx="2" ry="2" />
<text  x="199.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="160.5" y="1909" width="0.2" height="15.0" fill="rgb(211,30,35)" rx="2" ry="2" />
<text  x="163.48" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="701.4" y="1893" width="0.2" height="15.0" fill="rgb(244,120,23)" rx="2" ry="2" />
<text  x="704.44" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="118.8" y="949" width="0.2" height="15.0" fill="rgb(211,24,10)" rx="2" ry="2" />
<text  x="121.79" y="959.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="491.8" y="1909" width="0.2" height="15.0" fill="rgb(223,11,43)" rx="2" ry="2" />
<text  x="494.81" y="1919.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="733.8" y="1397" width="0.2" height="15.0" fill="rgb(218,16,2)" rx="2" ry="2" />
<text  x="736.80" y="1407.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (4 samples, 0.07%)</title><rect x="1136.2" y="2053" width="0.8" height="15.0" fill="rgb(239,200,13)" rx="2" ry="2" />
<text  x="1139.20" y="2063.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="1016.5" y="1877" width="0.2" height="15.0" fill="rgb(235,51,9)" rx="2" ry="2" />
<text  x="1019.49" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="119.0" y="885" width="18.1" height="15.0" fill="rgb(211,145,40)" rx="2" ry="2" />
<text  x="121.99" y="895.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="418.0" y="1973" width="0.4" height="15.0" fill="rgb(208,118,37)" rx="2" ry="2" />
<text  x="420.96" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="114.8" y="1925" width="0.2" height="15.0" fill="rgb(252,85,45)" rx="2" ry="2" />
<text  x="117.82" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="517.6" y="1957" width="0.2" height="15.0" fill="rgb(233,58,41)" rx="2" ry="2" />
<text  x="520.61" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1168.6" y="2021" width="0.4" height="15.0" fill="rgb(225,88,52)" rx="2" ry="2" />
<text  x="1171.56" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="597.0" y="1829" width="0.2" height="15.0" fill="rgb(239,183,43)" rx="2" ry="2" />
<text  x="600.02" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="740.9" y="1557" width="0.2" height="15.0" fill="rgb(248,34,28)" rx="2" ry="2" />
<text  x="743.95" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="753.9" y="1541" width="0.2" height="15.0" fill="rgb(205,4,7)" rx="2" ry="2" />
<text  x="756.85" y="1551.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="877.7" y="1893" width="0.2" height="15.0" fill="rgb(232,148,41)" rx="2" ry="2" />
<text  x="880.73" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="134.9" y="37" width="0.2" height="15.0" fill="rgb(251,112,53)" rx="2" ry="2" />
<text  x="137.87" y="47.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="145.0" y="1957" width="0.2" height="15.0" fill="rgb(218,110,20)" rx="2" ry="2" />
<text  x="147.99" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="61.0" y="1877" width="0.2" height="15.0" fill="rgb(239,171,48)" rx="2" ry="2" />
<text  x="64.02" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="761.0" y="1685" width="0.2" height="15.0" fill="rgb(250,96,34)" rx="2" ry="2" />
<text  x="764.00" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="1077.2" y="1797" width="0.4" height="15.0" fill="rgb(230,222,36)" rx="2" ry="2" />
<text  x="1080.24" y="1807.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="844.2" y="1589" width="0.2" height="15.0" fill="rgb(236,5,34)" rx="2" ry="2" />
<text  x="847.18" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="135.9" y="181" width="0.2" height="15.0" fill="rgb(248,218,17)" rx="2" ry="2" />
<text  x="138.86" y="191.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="156.3" y="1685" width="0.2" height="15.0" fill="rgb(218,224,33)" rx="2" ry="2" />
<text  x="159.31" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4 samples, 0.07%)</title><rect x="86.6" y="1957" width="0.8" height="15.0" fill="rgb(248,113,43)" rx="2" ry="2" />
<text  x="89.63" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8 samples, 0.13%)</title><rect x="301.4" y="1509" width="1.6" height="15.0" fill="rgb(234,186,41)" rx="2" ry="2" />
<text  x="304.43" y="1519.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="982.2" y="1669" width="0.1" height="15.0" fill="rgb(210,182,42)" rx="2" ry="2" />
<text  x="985.15" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="562.3" y="1669" width="0.2" height="15.0" fill="rgb(220,229,49)" rx="2" ry="2" />
<text  x="565.28" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="597.0" y="1733" width="0.2" height="15.0" fill="rgb(248,122,37)" rx="2" ry="2" />
<text  x="600.02" y="1743.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="794.9" y="1493" width="0.2" height="15.0" fill="rgb(248,182,0)" rx="2" ry="2" />
<text  x="797.95" y="1503.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="760.6" y="1685" width="0.2" height="15.0" fill="rgb(243,181,36)" rx="2" ry="2" />
<text  x="763.60" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1146.3" y="2005" width="0.2" height="15.0" fill="rgb(247,211,45)" rx="2" ry="2" />
<text  x="1149.33" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="884.7" y="1653" width="0.2" height="15.0" fill="rgb(251,19,19)" rx="2" ry="2" />
<text  x="887.68" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="136.5" y="53" width="0.2" height="15.0" fill="rgb(212,2,46)" rx="2" ry="2" />
<text  x="139.46" y="63.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="789" width="17.9" height="15.0" fill="rgb(240,175,20)" rx="2" ry="2" />
<text  x="122.19" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1089.9" y="1909" width="0.4" height="15.0" fill="rgb(226,169,42)" rx="2" ry="2" />
<text  x="1092.95" y="1919.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="630.4" y="1573" width="0.2" height="15.0" fill="rgb(218,80,6)" rx="2" ry="2" />
<text  x="633.37" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="940.5" y="1989" width="0.2" height="15.0" fill="rgb(241,170,4)" rx="2" ry="2" />
<text  x="943.46" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1154.3" y="1781" width="0.2" height="15.0" fill="rgb(243,207,38)" rx="2" ry="2" />
<text  x="1157.27" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="743.1" y="1749" width="0.2" height="15.0" fill="rgb(246,170,15)" rx="2" ry="2" />
<text  x="746.13" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="899.2" y="1989" width="0.2" height="15.0" fill="rgb(215,57,7)" rx="2" ry="2" />
<text  x="902.17" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="706.0" y="1829" width="0.2" height="15.0" fill="rgb(214,11,17)" rx="2" ry="2" />
<text  x="709.01" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="853.9" y="1749" width="0.2" height="15.0" fill="rgb(249,62,30)" rx="2" ry="2" />
<text  x="856.91" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1183.1" y="1989" width="0.3" height="15.0" fill="rgb(241,153,13)" rx="2" ry="2" />
<text  x="1186.05" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="213.7" y="1925" width="0.2" height="15.0" fill="rgb(212,74,44)" rx="2" ry="2" />
<text  x="216.68" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="659.8" y="2005" width="0.2" height="15.0" fill="rgb(229,65,51)" rx="2" ry="2" />
<text  x="662.75" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1078.6" y="1797" width="0.2" height="15.0" fill="rgb(253,139,38)" rx="2" ry="2" />
<text  x="1081.63" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="404.3" y="1861" width="0.2" height="15.0" fill="rgb(208,102,0)" rx="2" ry="2" />
<text  x="407.26" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="136.9" y="373" width="0.2" height="15.0" fill="rgb(235,196,38)" rx="2" ry="2" />
<text  x="139.85" y="383.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="674.8" y="1861" width="0.2" height="15.0" fill="rgb(252,195,40)" rx="2" ry="2" />
<text  x="677.84" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="575.6" y="1973" width="0.4" height="15.0" fill="rgb(205,196,50)" rx="2" ry="2" />
<text  x="578.58" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="132.3" y="69" width="0.6" height="15.0" fill="rgb(249,91,0)" rx="2" ry="2" />
<text  x="135.29" y="79.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="547.6" y="1861" width="0.2" height="15.0" fill="rgb(238,32,4)" rx="2" ry="2" />
<text  x="550.59" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="597.0" y="1717" width="0.2" height="15.0" fill="rgb(225,32,3)" rx="2" ry="2" />
<text  x="600.02" y="1727.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="830.5" y="1509" width="0.2" height="15.0" fill="rgb(225,25,49)" rx="2" ry="2" />
<text  x="833.48" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="761.0" y="1445" width="0.2" height="15.0" fill="rgb(206,155,45)" rx="2" ry="2" />
<text  x="764.00" y="1455.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="899.6" y="1893" width="0.2" height="15.0" fill="rgb(214,63,50)" rx="2" ry="2" />
<text  x="902.57" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="831.7" y="1797" width="0.2" height="15.0" fill="rgb(209,217,25)" rx="2" ry="2" />
<text  x="834.67" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="505.1" y="1733" width="0.4" height="15.0" fill="rgb(243,112,19)" rx="2" ry="2" />
<text  x="508.11" y="1743.5" ></text>
</g>
<g >
<title>sock_def_readable (7 samples, 0.12%)</title><rect x="301.6" y="1493" width="1.4" height="15.0" fill="rgb(246,3,42)" rx="2" ry="2" />
<text  x="304.63" y="1503.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="703.8" y="2021" width="0.2" height="15.0" fill="rgb(218,51,9)" rx="2" ry="2" />
<text  x="706.83" y="2031.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="268.7" y="1893" width="0.4" height="15.0" fill="rgb(224,11,28)" rx="2" ry="2" />
<text  x="271.67" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="112.4" y="1973" width="0.2" height="15.0" fill="rgb(239,178,34)" rx="2" ry="2" />
<text  x="115.44" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="600.8" y="1973" width="0.2" height="15.0" fill="rgb(213,91,4)" rx="2" ry="2" />
<text  x="603.79" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="136.5" y="213" width="0.2" height="15.0" fill="rgb(239,196,22)" rx="2" ry="2" />
<text  x="139.46" y="223.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="543.8" y="1957" width="0.2" height="15.0" fill="rgb(214,111,4)" rx="2" ry="2" />
<text  x="546.82" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="800.7" y="1605" width="0.2" height="15.0" fill="rgb(241,106,21)" rx="2" ry="2" />
<text  x="803.70" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.6" y="1909" width="0.2" height="15.0" fill="rgb(214,61,40)" rx="2" ry="2" />
<text  x="64.62" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="646.5" y="1877" width="0.2" height="15.0" fill="rgb(219,216,20)" rx="2" ry="2" />
<text  x="649.45" y="1887.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="135.1" y="133" width="0.8" height="15.0" fill="rgb(226,179,16)" rx="2" ry="2" />
<text  x="138.07" y="143.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.2" y="1621" width="0.2" height="15.0" fill="rgb(240,29,7)" rx="2" ry="2" />
<text  x="121.19" y="1631.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (156 samples, 2.62%)</title><rect x="291.9" y="1829" width="31.0" height="15.0" fill="rgb(249,86,12)" rx="2" ry="2" />
<text  x="294.90" y="1839.5" >__..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="185.9" y="1925" width="0.4" height="15.0" fill="rgb(228,58,16)" rx="2" ry="2" />
<text  x="188.89" y="1935.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="59.0" y="1941" width="0.6" height="15.0" fill="rgb(252,203,8)" rx="2" ry="2" />
<text  x="62.03" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="504.9" y="1893" width="0.8" height="15.0" fill="rgb(205,84,33)" rx="2" ry="2" />
<text  x="507.91" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="493.4" y="2005" width="0.4" height="15.0" fill="rgb(221,172,9)" rx="2" ry="2" />
<text  x="496.40" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="646.1" y="1909" width="0.2" height="15.0" fill="rgb(214,227,13)" rx="2" ry="2" />
<text  x="649.06" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (6 samples, 0.10%)</title><rect x="852.9" y="1925" width="1.2" height="15.0" fill="rgb(215,82,3)" rx="2" ry="2" />
<text  x="855.91" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="618.3" y="2021" width="0.2" height="15.0" fill="rgb(207,116,49)" rx="2" ry="2" />
<text  x="621.26" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="269.3" y="1893" width="0.2" height="15.0" fill="rgb(206,29,50)" rx="2" ry="2" />
<text  x="272.27" y="1903.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="137.6" y="1253" width="0.2" height="15.0" fill="rgb(251,83,24)" rx="2" ry="2" />
<text  x="140.65" y="1263.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="913.9" y="1877" width="0.2" height="15.0" fill="rgb(205,123,31)" rx="2" ry="2" />
<text  x="916.86" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="1144.7" y="2021" width="0.2" height="15.0" fill="rgb(209,212,34)" rx="2" ry="2" />
<text  x="1147.74" y="2031.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="844.2" y="1637" width="0.2" height="15.0" fill="rgb(208,114,47)" rx="2" ry="2" />
<text  x="847.18" y="1647.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="884.5" y="1909" width="0.4" height="15.0" fill="rgb(221,86,34)" rx="2" ry="2" />
<text  x="887.48" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="156.3" y="1701" width="0.2" height="15.0" fill="rgb(227,143,22)" rx="2" ry="2" />
<text  x="159.31" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="64.4" y="1941" width="1.0" height="15.0" fill="rgb(218,129,3)" rx="2" ry="2" />
<text  x="67.39" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1002.4" y="1941" width="0.2" height="15.0" fill="rgb(249,167,0)" rx="2" ry="2" />
<text  x="1005.40" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="755.0" y="1717" width="0.2" height="15.0" fill="rgb(211,42,1)" rx="2" ry="2" />
<text  x="758.04" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (85 samples, 1.43%)</title><rect x="159.7" y="1973" width="16.9" height="15.0" fill="rgb(241,228,23)" rx="2" ry="2" />
<text  x="162.68" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="694.1" y="1733" width="0.2" height="15.0" fill="rgb(230,81,21)" rx="2" ry="2" />
<text  x="697.10" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="881.3" y="1861" width="0.2" height="15.0" fill="rgb(237,49,9)" rx="2" ry="2" />
<text  x="884.30" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="899.4" y="1989" width="0.2" height="15.0" fill="rgb(238,154,24)" rx="2" ry="2" />
<text  x="902.37" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (4 samples, 0.07%)</title><rect x="616.7" y="2005" width="0.8" height="15.0" fill="rgb(240,79,4)" rx="2" ry="2" />
<text  x="619.68" y="2015.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="559.9" y="1829" width="0.2" height="15.0" fill="rgb(249,9,18)" rx="2" ry="2" />
<text  x="562.90" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="753.5" y="1637" width="0.2" height="15.0" fill="rgb(228,9,53)" rx="2" ry="2" />
<text  x="756.46" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="95.6" y="1861" width="0.2" height="15.0" fill="rgb(237,191,16)" rx="2" ry="2" />
<text  x="98.56" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="982.2" y="1765" width="0.1" height="15.0" fill="rgb(229,25,52)" rx="2" ry="2" />
<text  x="985.15" y="1775.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1126.3" y="1989" width="0.2" height="15.0" fill="rgb(234,128,28)" rx="2" ry="2" />
<text  x="1129.28" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="825.3" y="1797" width="0.8" height="15.0" fill="rgb(225,69,14)" rx="2" ry="2" />
<text  x="828.32" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="915.6" y="2021" width="0.8" height="15.0" fill="rgb(207,163,5)" rx="2" ry="2" />
<text  x="918.65" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1101.3" y="1861" width="0.2" height="15.0" fill="rgb(248,59,11)" rx="2" ry="2" />
<text  x="1104.26" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="832.1" y="1765" width="0.2" height="15.0" fill="rgb(240,38,49)" rx="2" ry="2" />
<text  x="835.07" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1068.5" y="1893" width="0.4" height="15.0" fill="rgb(232,225,44)" rx="2" ry="2" />
<text  x="1071.51" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="627.2" y="1813" width="0.2" height="15.0" fill="rgb(220,161,3)" rx="2" ry="2" />
<text  x="630.20" y="1823.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (5 samples, 0.08%)</title><rect x="734.2" y="1669" width="1.0" height="15.0" fill="rgb(233,100,10)" rx="2" ry="2" />
<text  x="737.20" y="1679.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="161.3" y="1877" width="0.2" height="15.0" fill="rgb(252,35,12)" rx="2" ry="2" />
<text  x="164.27" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="88.2" y="1893" width="0.2" height="15.0" fill="rgb(214,33,24)" rx="2" ry="2" />
<text  x="91.22" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="842.2" y="1877" width="0.2" height="15.0" fill="rgb(224,91,6)" rx="2" ry="2" />
<text  x="845.19" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (30 samples, 0.50%)</title><rect x="920.2" y="1957" width="6.0" height="15.0" fill="rgb(253,111,26)" rx="2" ry="2" />
<text  x="923.21" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="725.9" y="1701" width="0.2" height="15.0" fill="rgb(251,10,49)" rx="2" ry="2" />
<text  x="728.86" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="739.8" y="1653" width="0.2" height="15.0" fill="rgb(233,46,32)" rx="2" ry="2" />
<text  x="742.76" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="343.3" y="1957" width="0.8" height="15.0" fill="rgb(216,207,23)" rx="2" ry="2" />
<text  x="346.31" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (3 samples, 0.05%)</title><rect x="66.4" y="1877" width="0.6" height="15.0" fill="rgb(253,59,41)" rx="2" ry="2" />
<text  x="69.38" y="1887.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="409.2" y="1909" width="0.4" height="15.0" fill="rgb(250,128,18)" rx="2" ry="2" />
<text  x="412.22" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="408.2" y="1845" width="0.2" height="15.0" fill="rgb(209,133,9)" rx="2" ry="2" />
<text  x="411.23" y="1855.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="562.1" y="1541" width="0.2" height="15.0" fill="rgb(232,31,48)" rx="2" ry="2" />
<text  x="565.08" y="1551.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1006.8" y="2005" width="0.2" height="15.0" fill="rgb(213,154,31)" rx="2" ry="2" />
<text  x="1009.77" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="458.9" y="1973" width="0.2" height="15.0" fill="rgb(213,205,48)" rx="2" ry="2" />
<text  x="461.85" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="166.8" y="1829" width="0.2" height="15.0" fill="rgb(228,213,32)" rx="2" ry="2" />
<text  x="169.83" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="366.3" y="1909" width="0.2" height="15.0" fill="rgb(237,219,46)" rx="2" ry="2" />
<text  x="369.34" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="706.0" y="1701" width="0.2" height="15.0" fill="rgb(227,122,16)" rx="2" ry="2" />
<text  x="709.01" y="1711.5" ></text>
</g>
<g >
<title>__libc_fcntl (67 samples, 1.13%)</title><rect x="552.2" y="1989" width="13.3" height="15.0" fill="rgb(222,196,47)" rx="2" ry="2" />
<text  x="555.16" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="160.5" y="1925" width="0.2" height="15.0" fill="rgb(218,24,27)" rx="2" ry="2" />
<text  x="163.48" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="119.2" y="485" width="17.7" height="15.0" fill="rgb(227,183,29)" rx="2" ry="2" />
<text  x="122.19" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1685" width="0.2" height="15.0" fill="rgb(226,127,32)" rx="2" ry="2" />
<text  x="847.38" y="1695.5" ></text>
</g>
<g >
<title>syscall (6 samples, 0.10%)</title><rect x="1024.2" y="2037" width="1.2" height="15.0" fill="rgb(227,181,10)" rx="2" ry="2" />
<text  x="1027.24" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="996.8" y="1957" width="0.4" height="15.0" fill="rgb(205,206,52)" rx="2" ry="2" />
<text  x="999.84" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="659.2" y="2005" width="0.2" height="15.0" fill="rgb(214,25,40)" rx="2" ry="2" />
<text  x="662.16" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="562.1" y="1493" width="0.2" height="15.0" fill="rgb(254,163,8)" rx="2" ry="2" />
<text  x="565.08" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="61.0" y="1733" width="0.2" height="15.0" fill="rgb(240,221,52)" rx="2" ry="2" />
<text  x="64.02" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1189.0" y="1973" width="0.2" height="15.0" fill="rgb(220,76,40)" rx="2" ry="2" />
<text  x="1192.01" y="1983.5" ></text>
</g>
<g >
<title>[mcrouter] (30 samples, 0.50%)</title><rect x="985.1" y="1941" width="6.0" height="15.0" fill="rgb(244,80,33)" rx="2" ry="2" />
<text  x="988.13" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="917.6" y="1925" width="0.2" height="15.0" fill="rgb(219,34,30)" rx="2" ry="2" />
<text  x="920.63" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="159.9" y="1909" width="0.2" height="15.0" fill="rgb(219,164,46)" rx="2" ry="2" />
<text  x="162.88" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="93.2" y="1909" width="0.2" height="15.0" fill="rgb(241,55,29)" rx="2" ry="2" />
<text  x="96.18" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="662.1" y="1909" width="0.2" height="15.0" fill="rgb(226,183,42)" rx="2" ry="2" />
<text  x="665.14" y="1919.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="61.6" y="1701" width="0.2" height="15.0" fill="rgb(217,124,28)" rx="2" ry="2" />
<text  x="64.62" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="731.6" y="1557" width="0.2" height="15.0" fill="rgb(215,197,39)" rx="2" ry="2" />
<text  x="734.62" y="1567.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="296.1" y="1797" width="0.2" height="15.0" fill="rgb(223,59,7)" rx="2" ry="2" />
<text  x="299.07" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="627.2" y="1893" width="0.2" height="15.0" fill="rgb(232,208,16)" rx="2" ry="2" />
<text  x="630.20" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="883.5" y="1957" width="0.2" height="15.0" fill="rgb(247,53,1)" rx="2" ry="2" />
<text  x="886.49" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1034.6" y="1941" width="0.2" height="15.0" fill="rgb(238,28,30)" rx="2" ry="2" />
<text  x="1037.56" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="31.2" y="1989" width="0.2" height="15.0" fill="rgb(229,159,37)" rx="2" ry="2" />
<text  x="34.24" y="1999.5" ></text>
</g>
<g >
<title>lockref_put_return (3 samples, 0.05%)</title><rect x="743.7" y="1781" width="0.6" height="15.0" fill="rgb(227,5,50)" rx="2" ry="2" />
<text  x="746.73" y="1791.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="562.1" y="1525" width="0.2" height="15.0" fill="rgb(232,108,40)" rx="2" ry="2" />
<text  x="565.08" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1052.0" y="1749" width="0.2" height="15.0" fill="rgb(221,32,2)" rx="2" ry="2" />
<text  x="1055.03" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="775.3" y="1413" width="0.6" height="15.0" fill="rgb(223,65,24)" rx="2" ry="2" />
<text  x="778.29" y="1423.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="739.8" y="1477" width="0.2" height="15.0" fill="rgb(223,46,7)" rx="2" ry="2" />
<text  x="742.76" y="1487.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="645.1" y="1989" width="1.6" height="15.0" fill="rgb(233,49,42)" rx="2" ry="2" />
<text  x="648.06" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1088.4" y="1909" width="0.2" height="15.0" fill="rgb(224,56,23)" rx="2" ry="2" />
<text  x="1091.36" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="952.4" y="2005" width="0.2" height="15.0" fill="rgb(251,211,39)" rx="2" ry="2" />
<text  x="955.37" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="662.3" y="1653" width="0.2" height="15.0" fill="rgb(212,36,15)" rx="2" ry="2" />
<text  x="665.34" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1072.1" y="1701" width="0.2" height="15.0" fill="rgb(213,62,41)" rx="2" ry="2" />
<text  x="1075.08" y="1711.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="286.3" y="1749" width="0.2" height="15.0" fill="rgb(242,16,20)" rx="2" ry="2" />
<text  x="289.34" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="491.0" y="1797" width="0.2" height="15.0" fill="rgb(208,105,5)" rx="2" ry="2" />
<text  x="494.01" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="654.4" y="1749" width="0.2" height="15.0" fill="rgb(232,91,12)" rx="2" ry="2" />
<text  x="657.39" y="1759.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="543.8" y="1557" width="0.2" height="15.0" fill="rgb(218,193,15)" rx="2" ry="2" />
<text  x="546.82" y="1567.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="269.3" y="1653" width="0.2" height="15.0" fill="rgb(250,64,24)" rx="2" ry="2" />
<text  x="272.27" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="701.4" y="1973" width="0.2" height="15.0" fill="rgb(241,152,21)" rx="2" ry="2" />
<text  x="704.44" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="413.8" y="1893" width="0.6" height="15.0" fill="rgb(248,199,16)" rx="2" ry="2" />
<text  x="416.79" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="163.3" y="1669" width="0.2" height="15.0" fill="rgb(220,18,52)" rx="2" ry="2" />
<text  x="166.26" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1002.4" y="1861" width="0.2" height="15.0" fill="rgb(250,102,15)" rx="2" ry="2" />
<text  x="1005.40" y="1871.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1048.1" y="2005" width="0.4" height="15.0" fill="rgb(229,48,20)" rx="2" ry="2" />
<text  x="1051.06" y="2015.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="1133.8" y="1941" width="0.2" height="15.0" fill="rgb(213,139,17)" rx="2" ry="2" />
<text  x="1136.82" y="1951.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.10 (1 samples, 0.02%)</title><rect x="1133.8" y="1957" width="0.2" height="15.0" fill="rgb(219,139,19)" rx="2" ry="2" />
<text  x="1136.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="264.7" y="1861" width="0.2" height="15.0" fill="rgb(247,87,15)" rx="2" ry="2" />
<text  x="267.70" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="78.3" y="1845" width="0.4" height="15.0" fill="rgb(226,73,2)" rx="2" ry="2" />
<text  x="81.29" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1024.0" y="1989" width="0.2" height="15.0" fill="rgb(250,172,30)" rx="2" ry="2" />
<text  x="1027.04" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="984.9" y="1765" width="0.2" height="15.0" fill="rgb(239,217,42)" rx="2" ry="2" />
<text  x="987.93" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="383.6" y="1909" width="0.8" height="15.0" fill="rgb(221,61,49)" rx="2" ry="2" />
<text  x="386.61" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (18 samples, 0.30%)</title><rect x="352.0" y="2021" width="3.6" height="15.0" fill="rgb(229,177,4)" rx="2" ry="2" />
<text  x="355.05" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1829" width="0.2" height="15.0" fill="rgb(225,112,35)" rx="2" ry="2" />
<text  x="267.70" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.0" y="1925" width="0.2" height="15.0" fill="rgb(213,215,47)" rx="2" ry="2" />
<text  x="494.01" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="486.8" y="1621" width="0.2" height="15.0" fill="rgb(226,227,27)" rx="2" ry="2" />
<text  x="489.84" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (3 samples, 0.05%)</title><rect x="1023.6" y="2037" width="0.6" height="15.0" fill="rgb(223,199,53)" rx="2" ry="2" />
<text  x="1026.64" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="247.4" y="1749" width="0.2" height="15.0" fill="rgb(234,212,46)" rx="2" ry="2" />
<text  x="250.43" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="994.7" y="1989" width="0.2" height="15.0" fill="rgb(219,108,47)" rx="2" ry="2" />
<text  x="997.66" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="955.9" y="1829" width="0.2" height="15.0" fill="rgb(232,5,18)" rx="2" ry="2" />
<text  x="958.95" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="945.4" y="1941" width="0.2" height="15.0" fill="rgb(247,180,16)" rx="2" ry="2" />
<text  x="948.42" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="329.4" y="1477" width="0.2" height="15.0" fill="rgb(231,11,2)" rx="2" ry="2" />
<text  x="332.42" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="679.4" y="1733" width="0.2" height="15.0" fill="rgb(253,162,7)" rx="2" ry="2" />
<text  x="682.41" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="178.9" y="1813" width="0.2" height="15.0" fill="rgb(210,112,8)" rx="2" ry="2" />
<text  x="181.94" y="1823.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="856.7" y="1637" width="0.2" height="15.0" fill="rgb(222,88,9)" rx="2" ry="2" />
<text  x="859.69" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="549" width="17.9" height="15.0" fill="rgb(227,125,34)" rx="2" ry="2" />
<text  x="122.19" y="559.5" ></text>
</g>
<g >
<title>ipv4_default_advmss (1 samples, 0.02%)</title><rect x="775.3" y="1317" width="0.2" height="15.0" fill="rgb(241,215,0)" rx="2" ry="2" />
<text  x="778.29" y="1327.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1002.4" y="1893" width="0.2" height="15.0" fill="rgb(217,153,27)" rx="2" ry="2" />
<text  x="1005.40" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="510.9" y="1861" width="0.2" height="15.0" fill="rgb(209,211,16)" rx="2" ry="2" />
<text  x="513.86" y="1871.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="740.9" y="1445" width="0.2" height="15.0" fill="rgb(227,209,36)" rx="2" ry="2" />
<text  x="743.95" y="1455.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="509.3" y="1893" width="0.8" height="15.0" fill="rgb(236,156,10)" rx="2" ry="2" />
<text  x="512.28" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="803.1" y="1557" width="0.2" height="15.0" fill="rgb(231,104,17)" rx="2" ry="2" />
<text  x="806.09" y="1567.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="1024.0" y="1925" width="0.2" height="15.0" fill="rgb(251,63,9)" rx="2" ry="2" />
<text  x="1027.04" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1090.3" y="1861" width="0.2" height="15.0" fill="rgb(251,66,51)" rx="2" ry="2" />
<text  x="1093.34" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="668.3" y="1845" width="0.2" height="15.0" fill="rgb(236,188,44)" rx="2" ry="2" />
<text  x="671.29" y="1855.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="505.3" y="1573" width="0.2" height="15.0" fill="rgb(224,229,46)" rx="2" ry="2" />
<text  x="508.31" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="982.0" y="1893" width="0.3" height="15.0" fill="rgb(251,9,53)" rx="2" ry="2" />
<text  x="984.95" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="602.4" y="1909" width="0.2" height="15.0" fill="rgb(252,51,6)" rx="2" ry="2" />
<text  x="605.38" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="884.9" y="1765" width="0.2" height="15.0" fill="rgb(247,216,31)" rx="2" ry="2" />
<text  x="887.88" y="1775.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="675.0" y="1829" width="0.2" height="15.0" fill="rgb(215,212,41)" rx="2" ry="2" />
<text  x="678.04" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="47.3" y="1957" width="0.2" height="15.0" fill="rgb(222,201,16)" rx="2" ry="2" />
<text  x="50.32" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="800.7" y="1205" width="0.2" height="15.0" fill="rgb(223,167,24)" rx="2" ry="2" />
<text  x="803.70" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="913.9" y="1813" width="0.2" height="15.0" fill="rgb(245,69,19)" rx="2" ry="2" />
<text  x="916.86" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="870.8" y="1957" width="0.2" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="873.78" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="600.8" y="1989" width="0.2" height="15.0" fill="rgb(229,72,5)" rx="2" ry="2" />
<text  x="603.79" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (2 samples, 0.03%)</title><rect x="1147.9" y="2053" width="0.4" height="15.0" fill="rgb(208,171,51)" rx="2" ry="2" />
<text  x="1150.91" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="830.5" y="1557" width="0.2" height="15.0" fill="rgb(236,66,36)" rx="2" ry="2" />
<text  x="833.48" y="1567.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="856.7" y="1493" width="0.2" height="15.0" fill="rgb(219,29,2)" rx="2" ry="2" />
<text  x="859.69" y="1503.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="753.9" y="1445" width="0.2" height="15.0" fill="rgb(238,142,35)" rx="2" ry="2" />
<text  x="756.85" y="1455.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="692.9" y="1877" width="1.2" height="15.0" fill="rgb(238,162,50)" rx="2" ry="2" />
<text  x="695.91" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="540.4" y="1909" width="0.8" height="15.0" fill="rgb(229,187,15)" rx="2" ry="2" />
<text  x="543.44" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="820.0" y="1605" width="0.2" height="15.0" fill="rgb(254,96,54)" rx="2" ry="2" />
<text  x="822.96" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="93.6" y="1925" width="0.2" height="15.0" fill="rgb(219,160,29)" rx="2" ry="2" />
<text  x="96.58" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="118.8" y="1173" width="18.6" height="15.0" fill="rgb(245,178,28)" rx="2" ry="2" />
<text  x="121.79" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="740.9" y="1509" width="0.2" height="15.0" fill="rgb(218,22,49)" rx="2" ry="2" />
<text  x="743.95" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="745.9" y="1525" width="0.2" height="15.0" fill="rgb(229,195,50)" rx="2" ry="2" />
<text  x="748.91" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="903.5" y="1957" width="0.2" height="15.0" fill="rgb(221,184,10)" rx="2" ry="2" />
<text  x="906.54" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (42 samples, 0.71%)</title><rect x="1107.0" y="1861" width="8.4" height="15.0" fill="rgb(222,222,14)" rx="2" ry="2" />
<text  x="1110.02" y="1871.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (3 samples, 0.05%)</title><rect x="569.6" y="1973" width="0.6" height="15.0" fill="rgb(241,63,4)" rx="2" ry="2" />
<text  x="572.63" y="1983.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="740.9" y="1429" width="0.2" height="15.0" fill="rgb(242,0,27)" rx="2" ry="2" />
<text  x="743.95" y="1439.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="408.2" y="1797" width="0.2" height="15.0" fill="rgb(225,136,20)" rx="2" ry="2" />
<text  x="411.23" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="662.5" y="2037" width="0.2" height="15.0" fill="rgb(222,12,39)" rx="2" ry="2" />
<text  x="665.53" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="108.5" y="1941" width="0.2" height="15.0" fill="rgb(250,212,30)" rx="2" ry="2" />
<text  x="111.47" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="984.9" y="1749" width="0.2" height="15.0" fill="rgb(213,96,18)" rx="2" ry="2" />
<text  x="987.93" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1078.2" y="1733" width="0.2" height="15.0" fill="rgb(241,225,49)" rx="2" ry="2" />
<text  x="1081.23" y="1743.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (3 samples, 0.05%)</title><rect x="521.2" y="1957" width="0.6" height="15.0" fill="rgb(240,136,28)" rx="2" ry="2" />
<text  x="524.19" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="856.7" y="1893" width="0.2" height="15.0" fill="rgb(237,42,45)" rx="2" ry="2" />
<text  x="859.69" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="773" width="17.9" height="15.0" fill="rgb(253,167,18)" rx="2" ry="2" />
<text  x="122.19" y="783.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="120.8" y="37" width="0.2" height="15.0" fill="rgb(246,219,31)" rx="2" ry="2" />
<text  x="123.77" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="884.9" y="1621" width="0.2" height="15.0" fill="rgb(232,36,23)" rx="2" ry="2" />
<text  x="887.88" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="621.0" y="2005" width="1.0" height="15.0" fill="rgb(249,117,9)" rx="2" ry="2" />
<text  x="624.04" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (7 samples, 0.12%)</title><rect x="992.9" y="2005" width="1.4" height="15.0" fill="rgb(229,154,10)" rx="2" ry="2" />
<text  x="995.87" y="2015.5" ></text>
</g>
<g >
<title>__ip_local_out (4 samples, 0.07%)</title><rect x="769.9" y="1637" width="0.8" height="15.0" fill="rgb(249,88,29)" rx="2" ry="2" />
<text  x="772.93" y="1647.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="316.1" y="1701" width="0.2" height="15.0" fill="rgb(228,54,22)" rx="2" ry="2" />
<text  x="319.12" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.2" y="1925" width="0.2" height="15.0" fill="rgb(244,17,7)" rx="2" ry="2" />
<text  x="64.22" y="1935.5" ></text>
</g>
<g >
<title>__alloc_fd (1 samples, 0.02%)</title><rect x="363.4" y="1957" width="0.2" height="15.0" fill="rgb(218,11,31)" rx="2" ry="2" />
<text  x="366.36" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="761.0" y="1429" width="0.2" height="15.0" fill="rgb(246,197,48)" rx="2" ry="2" />
<text  x="764.00" y="1439.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="167.0" y="1829" width="0.2" height="15.0" fill="rgb(223,127,29)" rx="2" ry="2" />
<text  x="170.03" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="562.1" y="1861" width="0.2" height="15.0" fill="rgb(232,183,35)" rx="2" ry="2" />
<text  x="565.08" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="351.1" y="1957" width="0.2" height="15.0" fill="rgb(250,164,54)" rx="2" ry="2" />
<text  x="354.06" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="133.5" y="53" width="0.4" height="15.0" fill="rgb(222,9,30)" rx="2" ry="2" />
<text  x="136.48" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="289.3" y="1749" width="0.2" height="15.0" fill="rgb(210,116,36)" rx="2" ry="2" />
<text  x="292.32" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1002.4" y="1829" width="0.2" height="15.0" fill="rgb(207,111,39)" rx="2" ry="2" />
<text  x="1005.40" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="745.9" y="1573" width="0.2" height="15.0" fill="rgb(216,149,35)" rx="2" ry="2" />
<text  x="748.91" y="1583.5" ></text>
</g>
<g >
<title>tcp_write_xmit (200 samples, 3.36%)</title><rect x="290.7" y="1845" width="39.7" height="15.0" fill="rgb(214,127,6)" rx="2" ry="2" />
<text  x="293.71" y="1855.5" >tcp..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1068.1" y="1861" width="0.2" height="15.0" fill="rgb(207,228,42)" rx="2" ry="2" />
<text  x="1071.11" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="568.8" y="2005" width="0.2" height="15.0" fill="rgb(241,132,30)" rx="2" ry="2" />
<text  x="571.83" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="213.7" y="2005" width="0.2" height="15.0" fill="rgb(252,120,3)" rx="2" ry="2" />
<text  x="216.68" y="2015.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="493.2" y="1813" width="0.2" height="15.0" fill="rgb(232,44,49)" rx="2" ry="2" />
<text  x="496.20" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.22%)</title><rect x="165.6" y="1909" width="2.6" height="15.0" fill="rgb(220,131,4)" rx="2" ry="2" />
<text  x="168.64" y="1919.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="119.4" y="37" width="0.2" height="15.0" fill="rgb(216,168,24)" rx="2" ry="2" />
<text  x="122.38" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (66 samples, 1.11%)</title><rect x="682.8" y="1957" width="13.1" height="15.0" fill="rgb(220,205,5)" rx="2" ry="2" />
<text  x="685.78" y="1967.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="734.4" y="1557" width="0.2" height="15.0" fill="rgb(209,22,31)" rx="2" ry="2" />
<text  x="737.40" y="1567.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1072.1" y="1605" width="0.2" height="15.0" fill="rgb(207,191,36)" rx="2" ry="2" />
<text  x="1075.08" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="309" width="16.9" height="15.0" fill="rgb(244,111,40)" rx="2" ry="2" />
<text  x="122.19" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (2 samples, 0.03%)</title><rect x="37.6" y="1957" width="0.4" height="15.0" fill="rgb(254,71,38)" rx="2" ry="2" />
<text  x="40.59" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (3 samples, 0.05%)</title><rect x="622.6" y="1989" width="0.6" height="15.0" fill="rgb(235,69,48)" rx="2" ry="2" />
<text  x="625.63" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="152.7" y="1941" width="0.2" height="15.0" fill="rgb(233,137,14)" rx="2" ry="2" />
<text  x="155.74" y="1951.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="126.7" y="37" width="0.2" height="15.0" fill="rgb(253,99,4)" rx="2" ry="2" />
<text  x="129.73" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (3 samples, 0.05%)</title><rect x="74.5" y="1973" width="0.6" height="15.0" fill="rgb(252,176,22)" rx="2" ry="2" />
<text  x="77.52" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="136.5" y="389" width="0.2" height="15.0" fill="rgb(226,41,54)" rx="2" ry="2" />
<text  x="139.46" y="399.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.54%)</title><rect x="901.2" y="2005" width="6.3" height="15.0" fill="rgb(240,128,17)" rx="2" ry="2" />
<text  x="904.15" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="408.0" y="1893" width="0.4" height="15.0" fill="rgb(251,23,44)" rx="2" ry="2" />
<text  x="411.03" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="999.6" y="1989" width="0.2" height="15.0" fill="rgb(206,156,34)" rx="2" ry="2" />
<text  x="1002.62" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="562.1" y="1765" width="0.2" height="15.0" fill="rgb(230,64,28)" rx="2" ry="2" />
<text  x="565.08" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (19 samples, 0.32%)</title><rect x="1109.4" y="1477" width="3.8" height="15.0" fill="rgb(205,101,6)" rx="2" ry="2" />
<text  x="1112.40" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="242.1" y="1829" width="0.2" height="15.0" fill="rgb(219,187,12)" rx="2" ry="2" />
<text  x="245.07" y="1839.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="392.9" y="1941" width="0.4" height="15.0" fill="rgb(216,207,16)" rx="2" ry="2" />
<text  x="395.94" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="888.1" y="1989" width="0.2" height="15.0" fill="rgb(237,77,36)" rx="2" ry="2" />
<text  x="891.05" y="1999.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="996.2" y="1941" width="0.2" height="15.0" fill="rgb(246,186,2)" rx="2" ry="2" />
<text  x="999.24" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="864.2" y="1957" width="0.6" height="15.0" fill="rgb(214,127,33)" rx="2" ry="2" />
<text  x="867.23" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="155.7" y="1973" width="0.4" height="15.0" fill="rgb(223,51,19)" rx="2" ry="2" />
<text  x="158.71" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="213.7" y="1941" width="0.2" height="15.0" fill="rgb(220,160,24)" rx="2" ry="2" />
<text  x="216.68" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="866.8" y="1973" width="0.2" height="15.0" fill="rgb(227,205,1)" rx="2" ry="2" />
<text  x="869.81" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="1034.8" y="2037" width="0.6" height="15.0" fill="rgb(229,73,24)" rx="2" ry="2" />
<text  x="1037.76" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1156.5" y="1845" width="0.1" height="15.0" fill="rgb(216,31,52)" rx="2" ry="2" />
<text  x="1159.45" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="884.9" y="1685" width="0.2" height="15.0" fill="rgb(234,101,11)" rx="2" ry="2" />
<text  x="887.88" y="1695.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="196.4" y="1589" width="0.2" height="15.0" fill="rgb(247,51,26)" rx="2" ry="2" />
<text  x="199.41" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="837.4" y="1845" width="0.2" height="15.0" fill="rgb(218,95,38)" rx="2" ry="2" />
<text  x="840.43" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1078.6" y="1733" width="0.2" height="15.0" fill="rgb(244,174,49)" rx="2" ry="2" />
<text  x="1081.63" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="156.3" y="1845" width="0.2" height="15.0" fill="rgb(226,117,42)" rx="2" ry="2" />
<text  x="159.31" y="1855.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="646.1" y="1813" width="0.2" height="15.0" fill="rgb(240,150,22)" rx="2" ry="2" />
<text  x="649.06" y="1823.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="317.5" y="1685" width="0.2" height="15.0" fill="rgb(230,50,11)" rx="2" ry="2" />
<text  x="320.51" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="870.8" y="1941" width="0.2" height="15.0" fill="rgb(235,131,28)" rx="2" ry="2" />
<text  x="873.78" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="520.2" y="1957" width="0.2" height="15.0" fill="rgb(229,149,50)" rx="2" ry="2" />
<text  x="523.20" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="838.0" y="1925" width="0.6" height="15.0" fill="rgb(224,101,40)" rx="2" ry="2" />
<text  x="841.02" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="100.5" y="1941" width="0.2" height="15.0" fill="rgb(223,24,48)" rx="2" ry="2" />
<text  x="103.52" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1079.0" y="1717" width="0.2" height="15.0" fill="rgb(206,216,3)" rx="2" ry="2" />
<text  x="1082.03" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="936.5" y="1781" width="0.2" height="15.0" fill="rgb(241,102,32)" rx="2" ry="2" />
<text  x="939.49" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="166.8" y="1845" width="0.2" height="15.0" fill="rgb(250,81,18)" rx="2" ry="2" />
<text  x="169.83" y="1855.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="131.3" y="53" width="0.4" height="15.0" fill="rgb(240,55,49)" rx="2" ry="2" />
<text  x="134.30" y="63.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="987.5" y="1877" width="0.2" height="15.0" fill="rgb(216,172,22)" rx="2" ry="2" />
<text  x="990.51" y="1887.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="676.2" y="1605" width="0.2" height="15.0" fill="rgb(231,18,6)" rx="2" ry="2" />
<text  x="679.23" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="857.3" y="1797" width="0.2" height="15.0" fill="rgb(245,223,25)" rx="2" ry="2" />
<text  x="860.28" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="1145.1" y="2053" width="0.2" height="15.0" fill="rgb(208,52,5)" rx="2" ry="2" />
<text  x="1148.13" y="2063.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="694.1" y="1589" width="0.2" height="15.0" fill="rgb(228,29,27)" rx="2" ry="2" />
<text  x="697.10" y="1599.5" ></text>
</g>
<g >
<title>__fget (17 samples, 0.29%)</title><rect x="1122.5" y="1925" width="3.4" height="15.0" fill="rgb(223,86,27)" rx="2" ry="2" />
<text  x="1125.50" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (48 samples, 0.81%)</title><rect x="632.8" y="1989" width="9.5" height="15.0" fill="rgb(245,217,46)" rx="2" ry="2" />
<text  x="635.76" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (5 samples, 0.08%)</title><rect x="321.1" y="1813" width="1.0" height="15.0" fill="rgb(235,85,11)" rx="2" ry="2" />
<text  x="324.08" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="543.2" y="1973" width="0.4" height="15.0" fill="rgb(242,154,20)" rx="2" ry="2" />
<text  x="546.22" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="510.3" y="1797" width="0.2" height="15.0" fill="rgb(230,3,28)" rx="2" ry="2" />
<text  x="513.27" y="1807.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="548.6" y="1957" width="0.2" height="15.0" fill="rgb(237,197,29)" rx="2" ry="2" />
<text  x="551.58" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="731.4" y="1653" width="0.4" height="15.0" fill="rgb(218,193,44)" rx="2" ry="2" />
<text  x="734.42" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1125" width="18.5" height="15.0" fill="rgb(249,129,53)" rx="2" ry="2" />
<text  x="121.79" y="1135.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="1127.7" y="1717" width="0.2" height="15.0" fill="rgb(225,5,53)" rx="2" ry="2" />
<text  x="1130.66" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="613.1" y="1829" width="0.2" height="15.0" fill="rgb(251,27,48)" rx="2" ry="2" />
<text  x="616.10" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="250.2" y="1781" width="0.2" height="15.0" fill="rgb(243,55,21)" rx="2" ry="2" />
<text  x="253.21" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="93.0" y="1861" width="0.2" height="15.0" fill="rgb(239,160,53)" rx="2" ry="2" />
<text  x="95.98" y="1871.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="1034.6" y="1957" width="0.2" height="15.0" fill="rgb(213,43,27)" rx="2" ry="2" />
<text  x="1037.56" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="975.2" y="2005" width="0.2" height="15.0" fill="rgb(245,76,15)" rx="2" ry="2" />
<text  x="978.20" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1177.1" y="1909" width="0.2" height="15.0" fill="rgb(208,149,44)" rx="2" ry="2" />
<text  x="1180.10" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (2 samples, 0.03%)</title><rect x="246.6" y="1941" width="0.4" height="15.0" fill="rgb(220,208,17)" rx="2" ry="2" />
<text  x="249.64" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="163.3" y="1557" width="0.2" height="15.0" fill="rgb(252,229,33)" rx="2" ry="2" />
<text  x="166.26" y="1567.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="39.4" y="2005" width="0.2" height="15.0" fill="rgb(218,162,37)" rx="2" ry="2" />
<text  x="42.38" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="79.9" y="1781" width="0.4" height="15.0" fill="rgb(234,138,41)" rx="2" ry="2" />
<text  x="82.88" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="342.7" y="1877" width="0.2" height="15.0" fill="rgb(248,59,41)" rx="2" ry="2" />
<text  x="345.72" y="1887.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(217,139,17)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="483.1" y="1845" width="0.4" height="15.0" fill="rgb(213,119,48)" rx="2" ry="2" />
<text  x="486.07" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="962.1" y="2021" width="2.4" height="15.0" fill="rgb(209,156,12)" rx="2" ry="2" />
<text  x="965.10" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1177.1" y="1781" width="0.2" height="15.0" fill="rgb(212,200,3)" rx="2" ry="2" />
<text  x="1180.10" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (34 samples, 0.57%)</title><rect x="994.5" y="2021" width="6.7" height="15.0" fill="rgb(226,141,1)" rx="2" ry="2" />
<text  x="997.46" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="662.3" y="1845" width="0.2" height="15.0" fill="rgb(224,83,14)" rx="2" ry="2" />
<text  x="665.34" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="189.1" y="1989" width="1.9" height="15.0" fill="rgb(230,134,49)" rx="2" ry="2" />
<text  x="192.06" y="1999.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="60.2" y="1829" width="0.2" height="15.0" fill="rgb(207,68,6)" rx="2" ry="2" />
<text  x="63.23" y="1839.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="899.6" y="1717" width="0.2" height="15.0" fill="rgb(212,103,7)" rx="2" ry="2" />
<text  x="902.57" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="135.9" y="117" width="0.2" height="15.0" fill="rgb(222,79,3)" rx="2" ry="2" />
<text  x="138.86" y="127.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1179.3" y="2021" width="0.2" height="15.0" fill="rgb(209,217,24)" rx="2" ry="2" />
<text  x="1182.28" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="486.6" y="1893" width="0.4" height="15.0" fill="rgb(249,93,19)" rx="2" ry="2" />
<text  x="489.65" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="79.9" y="1797" width="0.4" height="15.0" fill="rgb(218,21,34)" rx="2" ry="2" />
<text  x="82.88" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (2 samples, 0.03%)</title><rect x="1151.9" y="2037" width="0.4" height="15.0" fill="rgb(251,109,47)" rx="2" ry="2" />
<text  x="1154.88" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="363.6" y="1957" width="0.2" height="15.0" fill="rgb(226,106,21)" rx="2" ry="2" />
<text  x="366.56" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="842.2" y="1861" width="0.2" height="15.0" fill="rgb(241,181,48)" rx="2" ry="2" />
<text  x="845.19" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="536.1" y="1925" width="0.6" height="15.0" fill="rgb(212,22,29)" rx="2" ry="2" />
<text  x="539.08" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="755.4" y="1717" width="0.2" height="15.0" fill="rgb(212,223,41)" rx="2" ry="2" />
<text  x="758.44" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="625.4" y="2037" width="0.4" height="15.0" fill="rgb(233,20,51)" rx="2" ry="2" />
<text  x="628.41" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="97.2" y="1989" width="0.1" height="15.0" fill="rgb(237,85,53)" rx="2" ry="2" />
<text  x="100.15" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="755.4" y="1637" width="0.2" height="15.0" fill="rgb(225,101,39)" rx="2" ry="2" />
<text  x="758.44" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="186.3" y="1925" width="0.2" height="15.0" fill="rgb(208,152,8)" rx="2" ry="2" />
<text  x="189.29" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="595.6" y="1829" width="0.2" height="15.0" fill="rgb(230,165,23)" rx="2" ry="2" />
<text  x="598.63" y="1839.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="176.4" y="1957" width="0.2" height="15.0" fill="rgb(235,140,53)" rx="2" ry="2" />
<text  x="179.36" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="809.8" y="1717" width="0.2" height="15.0" fill="rgb(221,172,22)" rx="2" ry="2" />
<text  x="812.84" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="838.4" y="1877" width="0.2" height="15.0" fill="rgb(241,98,11)" rx="2" ry="2" />
<text  x="841.42" y="1887.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1079.0" y="1557" width="0.2" height="15.0" fill="rgb(253,195,41)" rx="2" ry="2" />
<text  x="1082.03" y="1567.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="935.5" y="1893" width="0.6" height="15.0" fill="rgb(217,220,45)" rx="2" ry="2" />
<text  x="938.50" y="1903.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="1048.9" y="1717" width="0.2" height="15.0" fill="rgb(223,32,29)" rx="2" ry="2" />
<text  x="1051.85" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1086.8" y="1813" width="0.2" height="15.0" fill="rgb(254,34,30)" rx="2" ry="2" />
<text  x="1089.77" y="1823.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (1 samples, 0.02%)</title><rect x="1005.8" y="2005" width="0.2" height="15.0" fill="rgb(249,61,1)" rx="2" ry="2" />
<text  x="1008.77" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="174.2" y="1941" width="0.4" height="15.0" fill="rgb(225,215,4)" rx="2" ry="2" />
<text  x="177.18" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="283.4" y="1765" width="0.2" height="15.0" fill="rgb(241,228,9)" rx="2" ry="2" />
<text  x="286.36" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (4 samples, 0.07%)</title><rect x="80.5" y="1925" width="0.8" height="15.0" fill="rgb(228,73,19)" rx="2" ry="2" />
<text  x="83.47" y="1935.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="551.8" y="1957" width="0.2" height="15.0" fill="rgb(232,153,14)" rx="2" ry="2" />
<text  x="554.76" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="542.0" y="1973" width="0.2" height="15.0" fill="rgb(218,60,20)" rx="2" ry="2" />
<text  x="545.03" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (7 samples, 0.12%)</title><rect x="951.0" y="2005" width="1.4" height="15.0" fill="rgb(232,179,25)" rx="2" ry="2" />
<text  x="953.98" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (28 samples, 0.47%)</title><rect x="757.4" y="1717" width="5.6" height="15.0" fill="rgb(227,192,25)" rx="2" ry="2" />
<text  x="760.43" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="731.6" y="1573" width="0.2" height="15.0" fill="rgb(241,156,2)" rx="2" ry="2" />
<text  x="734.62" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="133.9" y="53" width="0.2" height="15.0" fill="rgb(206,9,37)" rx="2" ry="2" />
<text  x="136.88" y="63.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.2" y="1989" width="0.8" height="15.0" fill="rgb(248,171,34)" rx="2" ry="2" />
<text  x="14.19" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="463.4" y="1925" width="0.2" height="15.0" fill="rgb(209,51,37)" rx="2" ry="2" />
<text  x="466.42" y="1935.5" ></text>
</g>
<g >
<title>tcp_current_mss (13 samples, 0.22%)</title><rect x="816.2" y="1717" width="2.6" height="15.0" fill="rgb(250,126,23)" rx="2" ry="2" />
<text  x="819.19" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1017.1" y="1765" width="0.2" height="15.0" fill="rgb(215,104,8)" rx="2" ry="2" />
<text  x="1020.09" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::doFibersPoolResizing (2 samples, 0.03%)</title><rect x="20.7" y="1989" width="0.4" height="15.0" fill="rgb(207,228,1)" rx="2" ry="2" />
<text  x="23.72" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="157.5" y="1861" width="0.2" height="15.0" fill="rgb(243,10,3)" rx="2" ry="2" />
<text  x="160.50" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="536.7" y="1925" width="0.2" height="15.0" fill="rgb(217,35,28)" rx="2" ry="2" />
<text  x="539.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (126 samples, 2.12%)</title><rect x="117.8" y="1845" width="25.0" height="15.0" fill="rgb(223,225,1)" rx="2" ry="2" />
<text  x="120.80" y="1855.5" >[..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="157.5" y="1541" width="0.2" height="15.0" fill="rgb(241,20,26)" rx="2" ry="2" />
<text  x="160.50" y="1551.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="86.0" y="1941" width="0.2" height="15.0" fill="rgb(223,126,52)" rx="2" ry="2" />
<text  x="89.03" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="138.0" y="1157" width="0.2" height="15.0" fill="rgb(235,143,44)" rx="2" ry="2" />
<text  x="141.05" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="510.9" y="1893" width="0.2" height="15.0" fill="rgb(227,202,15)" rx="2" ry="2" />
<text  x="513.86" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1052.0" y="1829" width="0.2" height="15.0" fill="rgb(222,146,9)" rx="2" ry="2" />
<text  x="1055.03" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="528.5" y="1893" width="0.2" height="15.0" fill="rgb(207,138,40)" rx="2" ry="2" />
<text  x="531.53" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1135.6" y="1989" width="0.4" height="15.0" fill="rgb(252,3,33)" rx="2" ry="2" />
<text  x="1138.61" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="844.2" y="1861" width="0.2" height="15.0" fill="rgb(254,226,28)" rx="2" ry="2" />
<text  x="847.18" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="283.0" y="1765" width="0.2" height="15.0" fill="rgb(236,27,29)" rx="2" ry="2" />
<text  x="285.96" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10 samples, 0.17%)</title><rect x="301.0" y="1637" width="2.0" height="15.0" fill="rgb(205,180,30)" rx="2" ry="2" />
<text  x="304.03" y="1647.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="103.7" y="1973" width="0.2" height="15.0" fill="rgb(208,153,10)" rx="2" ry="2" />
<text  x="106.70" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="745.9" y="1589" width="0.2" height="15.0" fill="rgb(233,10,38)" rx="2" ry="2" />
<text  x="748.91" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="630.4" y="1605" width="0.2" height="15.0" fill="rgb(222,153,30)" rx="2" ry="2" />
<text  x="633.37" y="1615.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="899.6" y="1621" width="0.2" height="15.0" fill="rgb(214,63,47)" rx="2" ry="2" />
<text  x="902.57" y="1631.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="157.5" y="1637" width="0.2" height="15.0" fill="rgb(233,86,5)" rx="2" ry="2" />
<text  x="160.50" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (7 samples, 0.12%)</title><rect x="535.7" y="1957" width="1.4" height="15.0" fill="rgb(241,172,34)" rx="2" ry="2" />
<text  x="538.68" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="491.8" y="1653" width="0.2" height="15.0" fill="rgb(251,127,28)" rx="2" ry="2" />
<text  x="494.81" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (9 samples, 0.15%)</title><rect x="1149.3" y="2005" width="1.8" height="15.0" fill="rgb(250,55,36)" rx="2" ry="2" />
<text  x="1152.30" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="846.6" y="1909" width="0.6" height="15.0" fill="rgb(219,28,18)" rx="2" ry="2" />
<text  x="849.56" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="157.5" y="1765" width="0.2" height="15.0" fill="rgb(249,27,34)" rx="2" ry="2" />
<text  x="160.50" y="1775.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="417.0" y="1909" width="0.8" height="15.0" fill="rgb(241,76,4)" rx="2" ry="2" />
<text  x="419.97" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="638.9" y="1893" width="0.6" height="15.0" fill="rgb(253,126,34)" rx="2" ry="2" />
<text  x="641.91" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="175.2" y="1909" width="0.2" height="15.0" fill="rgb(207,97,25)" rx="2" ry="2" />
<text  x="178.17" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="537.1" y="1893" width="0.2" height="15.0" fill="rgb(241,161,24)" rx="2" ry="2" />
<text  x="540.07" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="853.9" y="1669" width="0.2" height="15.0" fill="rgb(217,151,15)" rx="2" ry="2" />
<text  x="856.91" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="134.3" y="37" width="0.2" height="15.0" fill="rgb(223,173,5)" rx="2" ry="2" />
<text  x="137.27" y="47.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.9" y="1445" width="0.2" height="15.0" fill="rgb(216,185,39)" rx="2" ry="2" />
<text  x="828.92" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="743.1" y="1605" width="0.2" height="15.0" fill="rgb(230,186,5)" rx="2" ry="2" />
<text  x="746.13" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="899.6" y="1925" width="0.2" height="15.0" fill="rgb(213,24,5)" rx="2" ry="2" />
<text  x="902.57" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1054.0" y="1893" width="0.2" height="15.0" fill="rgb(230,11,9)" rx="2" ry="2" />
<text  x="1057.01" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="706.0" y="1893" width="0.2" height="15.0" fill="rgb(227,167,34)" rx="2" ry="2" />
<text  x="709.01" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1079.0" y="1765" width="0.2" height="15.0" fill="rgb(254,127,48)" rx="2" ry="2" />
<text  x="1082.03" y="1775.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="694.1" y="1493" width="0.2" height="15.0" fill="rgb(213,78,27)" rx="2" ry="2" />
<text  x="697.10" y="1503.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="1087.8" y="1925" width="0.8" height="15.0" fill="rgb(213,84,41)" rx="2" ry="2" />
<text  x="1090.76" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="579.4" y="1973" width="0.2" height="15.0" fill="rgb(226,182,18)" rx="2" ry="2" />
<text  x="582.35" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="761.0" y="1573" width="0.2" height="15.0" fill="rgb(237,197,41)" rx="2" ry="2" />
<text  x="764.00" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="264.7" y="1893" width="0.2" height="15.0" fill="rgb(247,114,21)" rx="2" ry="2" />
<text  x="267.70" y="1903.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="694.5" y="1909" width="0.8" height="15.0" fill="rgb(226,67,7)" rx="2" ry="2" />
<text  x="697.50" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="844.2" y="1765" width="0.2" height="15.0" fill="rgb(215,165,44)" rx="2" ry="2" />
<text  x="847.18" y="1775.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(249,207,49)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="630.4" y="1797" width="0.2" height="15.0" fill="rgb(209,96,11)" rx="2" ry="2" />
<text  x="633.37" y="1807.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="982.2" y="1637" width="0.1" height="15.0" fill="rgb(217,63,37)" rx="2" ry="2" />
<text  x="985.15" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.9" y="1845" width="0.2" height="15.0" fill="rgb(253,131,35)" rx="2" ry="2" />
<text  x="887.88" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="300.8" y="1541" width="0.2" height="15.0" fill="rgb(241,91,33)" rx="2" ry="2" />
<text  x="303.83" y="1551.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="525.4" y="1989" width="0.4" height="15.0" fill="rgb(242,19,8)" rx="2" ry="2" />
<text  x="528.36" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (27 samples, 0.45%)</title><rect x="1028.8" y="2037" width="5.4" height="15.0" fill="rgb(215,201,48)" rx="2" ry="2" />
<text  x="1031.80" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="562.1" y="1797" width="0.2" height="15.0" fill="rgb(253,52,28)" rx="2" ry="2" />
<text  x="565.08" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="631.2" y="1973" width="0.4" height="15.0" fill="rgb(213,134,16)" rx="2" ry="2" />
<text  x="634.17" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="119.2" y="181" width="15.7" height="15.0" fill="rgb(207,170,33)" rx="2" ry="2" />
<text  x="122.19" y="191.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="899.6" y="1781" width="0.2" height="15.0" fill="rgb(251,47,9)" rx="2" ry="2" />
<text  x="902.57" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="138.0" y="1205" width="0.2" height="15.0" fill="rgb(219,170,8)" rx="2" ry="2" />
<text  x="141.05" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (18 samples, 0.30%)</title><rect x="1172.5" y="2005" width="3.6" height="15.0" fill="rgb(239,83,37)" rx="2" ry="2" />
<text  x="1175.53" y="2015.5" ></text>
</g>
<g >
<title>__libc_fcntl (2 samples, 0.03%)</title><rect x="250.4" y="2037" width="0.4" height="15.0" fill="rgb(236,48,7)" rx="2" ry="2" />
<text  x="253.41" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="891.4" y="1909" width="0.2" height="15.0" fill="rgb(215,169,14)" rx="2" ry="2" />
<text  x="894.43" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="972.0" y="2021" width="0.8" height="15.0" fill="rgb(216,195,10)" rx="2" ry="2" />
<text  x="975.03" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="247.8" y="1941" width="0.2" height="15.0" fill="rgb(237,157,10)" rx="2" ry="2" />
<text  x="250.83" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1017.1" y="1893" width="0.2" height="15.0" fill="rgb(250,124,47)" rx="2" ry="2" />
<text  x="1020.09" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="912.1" y="2037" width="0.6" height="15.0" fill="rgb(206,211,46)" rx="2" ry="2" />
<text  x="915.07" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="156.3" y="1765" width="0.2" height="15.0" fill="rgb(224,16,36)" rx="2" ry="2" />
<text  x="159.31" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="168.0" y="1861" width="0.2" height="15.0" fill="rgb(242,201,50)" rx="2" ry="2" />
<text  x="171.02" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (42 samples, 0.71%)</title><rect x="1107.0" y="1813" width="8.4" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="1110.02" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="994.5" y="1989" width="0.2" height="15.0" fill="rgb(218,179,54)" rx="2" ry="2" />
<text  x="997.46" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="73.7" y="1957" width="0.2" height="15.0" fill="rgb(215,107,9)" rx="2" ry="2" />
<text  x="76.72" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="844.2" y="1829" width="0.2" height="15.0" fill="rgb(215,147,31)" rx="2" ry="2" />
<text  x="847.18" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="646.1" y="1893" width="0.2" height="15.0" fill="rgb(249,95,10)" rx="2" ry="2" />
<text  x="649.06" y="1903.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="411.4" y="1845" width="0.2" height="15.0" fill="rgb(216,116,32)" rx="2" ry="2" />
<text  x="414.41" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="623.0" y="1957" width="0.2" height="15.0" fill="rgb(238,206,0)" rx="2" ry="2" />
<text  x="626.03" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="104.7" y="1925" width="0.4" height="15.0" fill="rgb(246,47,26)" rx="2" ry="2" />
<text  x="107.69" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1078.6" y="1685" width="0.2" height="15.0" fill="rgb(253,62,47)" rx="2" ry="2" />
<text  x="1081.63" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="925.0" y="1941" width="0.4" height="15.0" fill="rgb(225,201,46)" rx="2" ry="2" />
<text  x="927.98" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="136.9" y="293" width="0.2" height="15.0" fill="rgb(218,3,11)" rx="2" ry="2" />
<text  x="139.85" y="303.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="114.8" y="1893" width="0.2" height="15.0" fill="rgb(227,193,48)" rx="2" ry="2" />
<text  x="117.82" y="1903.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="624.4" y="2005" width="0.2" height="15.0" fill="rgb(253,127,51)" rx="2" ry="2" />
<text  x="627.42" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (102 samples, 1.72%)</title><rect x="296.3" y="1797" width="20.2" height="15.0" fill="rgb(251,181,15)" rx="2" ry="2" />
<text  x="299.27" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="250.4" y="2021" width="0.2" height="15.0" fill="rgb(226,67,37)" rx="2" ry="2" />
<text  x="253.41" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (3 samples, 0.05%)</title><rect x="38.0" y="1957" width="0.6" height="15.0" fill="rgb(212,72,13)" rx="2" ry="2" />
<text  x="40.99" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="853.9" y="1653" width="0.2" height="15.0" fill="rgb(249,60,23)" rx="2" ry="2" />
<text  x="856.91" y="1663.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="595.6" y="1813" width="0.2" height="15.0" fill="rgb(211,6,31)" rx="2" ry="2" />
<text  x="598.63" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="119.2" y="805" width="17.9" height="15.0" fill="rgb(250,70,45)" rx="2" ry="2" />
<text  x="122.19" y="815.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.2" y="1845" width="0.8" height="15.0" fill="rgb(213,70,48)" rx="2" ry="2" />
<text  x="14.19" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="956.7" y="2005" width="0.2" height="15.0" fill="rgb(223,51,46)" rx="2" ry="2" />
<text  x="959.74" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="118.8" y="1301" width="19.0" height="15.0" fill="rgb(205,112,11)" rx="2" ry="2" />
<text  x="121.79" y="1311.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="134.7" y="101" width="0.2" height="15.0" fill="rgb(223,128,47)" rx="2" ry="2" />
<text  x="137.67" y="111.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="329.4" y="1541" width="0.2" height="15.0" fill="rgb(235,57,46)" rx="2" ry="2" />
<text  x="332.42" y="1551.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="848.3" y="1893" width="0.2" height="15.0" fill="rgb(215,209,46)" rx="2" ry="2" />
<text  x="851.35" y="1903.5" ></text>
</g>
<g >
<title>sys_setsockopt (38 samples, 0.64%)</title><rect x="688.3" y="1941" width="7.6" height="15.0" fill="rgb(253,128,1)" rx="2" ry="2" />
<text  x="691.34" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="148.4" y="1973" width="1.4" height="15.0" fill="rgb(226,31,43)" rx="2" ry="2" />
<text  x="151.37" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="206.9" y="1781" width="0.2" height="15.0" fill="rgb(233,161,0)" rx="2" ry="2" />
<text  x="209.93" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="775.3" y="1333" width="0.2" height="15.0" fill="rgb(247,44,35)" rx="2" ry="2" />
<text  x="778.29" y="1343.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="886.9" y="1973" width="0.2" height="15.0" fill="rgb(234,124,53)" rx="2" ry="2" />
<text  x="889.86" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="541.2" y="1877" width="0.4" height="15.0" fill="rgb(230,212,19)" rx="2" ry="2" />
<text  x="544.24" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (3 samples, 0.05%)</title><rect x="514.6" y="1925" width="0.6" height="15.0" fill="rgb(224,209,40)" rx="2" ry="2" />
<text  x="517.64" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="917.8" y="2037" width="0.4" height="15.0" fill="rgb(205,11,2)" rx="2" ry="2" />
<text  x="920.83" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="52.9" y="1813" width="0.2" height="15.0" fill="rgb(252,210,21)" rx="2" ry="2" />
<text  x="55.88" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="490.2" y="1685" width="0.2" height="15.0" fill="rgb(246,180,22)" rx="2" ry="2" />
<text  x="493.22" y="1695.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="393.9" y="1909" width="0.2" height="15.0" fill="rgb(224,184,50)" rx="2" ry="2" />
<text  x="396.94" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="559.9" y="1925" width="0.2" height="15.0" fill="rgb(237,140,36)" rx="2" ry="2" />
<text  x="562.90" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="1144.5" y="1941" width="0.2" height="15.0" fill="rgb(244,85,5)" rx="2" ry="2" />
<text  x="1147.54" y="1951.5" ></text>
</g>
<g >
<title>update_vsyscall (1 samples, 0.02%)</title><rect x="81.9" y="1813" width="0.2" height="15.0" fill="rgb(222,104,40)" rx="2" ry="2" />
<text  x="84.86" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="166.2" y="1877" width="0.2" height="15.0" fill="rgb(235,135,46)" rx="2" ry="2" />
<text  x="169.23" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="483.1" y="1829" width="0.4" height="15.0" fill="rgb(253,76,1)" rx="2" ry="2" />
<text  x="486.07" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="848.1" y="1861" width="0.2" height="15.0" fill="rgb(228,20,26)" rx="2" ry="2" />
<text  x="851.15" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1090.1" y="1893" width="0.2" height="15.0" fill="rgb(230,59,10)" rx="2" ry="2" />
<text  x="1093.14" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="121.0" y="37" width="0.2" height="15.0" fill="rgb(220,209,47)" rx="2" ry="2" />
<text  x="123.97" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="136.1" y="341" width="0.2" height="15.0" fill="rgb(224,7,16)" rx="2" ry="2" />
<text  x="139.06" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="248.4" y="1957" width="0.4" height="15.0" fill="rgb(224,35,22)" rx="2" ry="2" />
<text  x="251.42" y="1967.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="740.2" y="1685" width="0.2" height="15.0" fill="rgb(238,106,26)" rx="2" ry="2" />
<text  x="743.15" y="1695.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="825.1" y="1589" width="0.2" height="15.0" fill="rgb(218,128,23)" rx="2" ry="2" />
<text  x="828.12" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="323.1" y="1829" width="0.8" height="15.0" fill="rgb(234,139,14)" rx="2" ry="2" />
<text  x="326.07" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="886.7" y="1973" width="0.2" height="15.0" fill="rgb(215,147,3)" rx="2" ry="2" />
<text  x="889.66" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="207.3" y="1845" width="0.2" height="15.0" fill="rgb(253,99,50)" rx="2" ry="2" />
<text  x="210.33" y="1855.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="638.7" y="1797" width="0.2" height="15.0" fill="rgb(207,39,16)" rx="2" ry="2" />
<text  x="641.71" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="610.3" y="1813" width="0.2" height="15.0" fill="rgb(251,92,27)" rx="2" ry="2" />
<text  x="613.32" y="1823.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="559.7" y="1941" width="0.2" height="15.0" fill="rgb(213,82,42)" rx="2" ry="2" />
<text  x="562.70" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="762.6" y="1637" width="0.4" height="15.0" fill="rgb(232,155,49)" rx="2" ry="2" />
<text  x="765.59" y="1647.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="932.7" y="1765" width="0.8" height="15.0" fill="rgb(253,148,25)" rx="2" ry="2" />
<text  x="935.72" y="1775.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="968.1" y="1717" width="0.2" height="15.0" fill="rgb(248,218,49)" rx="2" ry="2" />
<text  x="971.06" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="137.4" y="1173" width="0.2" height="15.0" fill="rgb(249,150,18)" rx="2" ry="2" />
<text  x="140.45" y="1183.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="577.4" y="1941" width="0.2" height="15.0" fill="rgb(229,134,49)" rx="2" ry="2" />
<text  x="580.37" y="1951.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (228 samples, 3.84%)</title><rect x="763.2" y="1717" width="45.2" height="15.0" fill="rgb(231,220,41)" rx="2" ry="2" />
<text  x="766.18" y="1727.5" >__tc..</text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="504.9" y="1845" width="0.8" height="15.0" fill="rgb(217,125,48)" rx="2" ry="2" />
<text  x="507.91" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (27 samples, 0.45%)</title><rect x="994.5" y="2005" width="5.3" height="15.0" fill="rgb(253,113,29)" rx="2" ry="2" />
<text  x="997.46" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="899.6" y="1861" width="0.2" height="15.0" fill="rgb(249,163,10)" rx="2" ry="2" />
<text  x="902.57" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="842.6" y="1701" width="0.2" height="15.0" fill="rgb(218,60,19)" rx="2" ry="2" />
<text  x="845.59" y="1711.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (3 samples, 0.05%)</title><rect x="422.9" y="2037" width="0.6" height="15.0" fill="rgb(230,109,48)" rx="2" ry="2" />
<text  x="425.92" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="876.1" y="1925" width="0.2" height="15.0" fill="rgb(228,94,15)" rx="2" ry="2" />
<text  x="879.14" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1019.9" y="1941" width="0.2" height="15.0" fill="rgb(251,72,5)" rx="2" ry="2" />
<text  x="1022.87" y="1951.5" ></text>
</g>
<g >
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="510.7" y="2037" width="0.2" height="15.0" fill="rgb(221,133,20)" rx="2" ry="2" />
<text  x="513.67" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="196.4" y="1973" width="0.2" height="15.0" fill="rgb(251,65,13)" rx="2" ry="2" />
<text  x="199.41" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1079.0" y="1781" width="0.2" height="15.0" fill="rgb(222,90,11)" rx="2" ry="2" />
<text  x="1082.03" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (4 samples, 0.07%)</title><rect x="641.5" y="1957" width="0.8" height="15.0" fill="rgb(221,69,14)" rx="2" ry="2" />
<text  x="644.49" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="700.6" y="1925" width="0.2" height="15.0" fill="rgb(226,163,25)" rx="2" ry="2" />
<text  x="703.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="74.9" y="1733" width="0.2" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="77.92" y="1743.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="869.2" y="2005" width="0.2" height="15.0" fill="rgb(235,209,34)" rx="2" ry="2" />
<text  x="872.19" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="567.2" y="1877" width="0.2" height="15.0" fill="rgb(240,63,1)" rx="2" ry="2" />
<text  x="570.24" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (3 samples, 0.05%)</title><rect x="710.6" y="1941" width="0.6" height="15.0" fill="rgb(207,72,10)" rx="2" ry="2" />
<text  x="713.58" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="350.7" y="1957" width="0.2" height="15.0" fill="rgb(219,78,32)" rx="2" ry="2" />
<text  x="353.66" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="822.5" y="1669" width="0.2" height="15.0" fill="rgb(242,21,10)" rx="2" ry="2" />
<text  x="825.54" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (68 samples, 1.14%)</title><rect x="666.1" y="1989" width="13.5" height="15.0" fill="rgb(247,223,37)" rx="2" ry="2" />
<text  x="669.11" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="968.1" y="1941" width="0.2" height="15.0" fill="rgb(247,176,23)" rx="2" ry="2" />
<text  x="971.06" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="486.6" y="1829" width="0.4" height="15.0" fill="rgb(231,52,51)" rx="2" ry="2" />
<text  x="489.65" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="936.5" y="1701" width="0.2" height="15.0" fill="rgb(217,27,7)" rx="2" ry="2" />
<text  x="939.49" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="852.5" y="1813" width="0.2" height="15.0" fill="rgb(233,136,35)" rx="2" ry="2" />
<text  x="855.52" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="536.7" y="1909" width="0.2" height="15.0" fill="rgb(221,194,4)" rx="2" ry="2" />
<text  x="539.67" y="1919.5" ></text>
</g>
<g >
<title>evict (46 samples, 0.77%)</title><rect x="732.2" y="1717" width="9.1" height="15.0" fill="rgb(227,80,26)" rx="2" ry="2" />
<text  x="735.21" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="300.6" y="1637" width="0.4" height="15.0" fill="rgb(217,28,39)" rx="2" ry="2" />
<text  x="303.63" y="1647.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="734.4" y="1525" width="0.2" height="15.0" fill="rgb(211,137,24)" rx="2" ry="2" />
<text  x="737.40" y="1535.5" ></text>
</g>
<g >
<title>page_frag_free (35 samples, 0.59%)</title><rect x="1072.5" y="1861" width="6.9" height="15.0" fill="rgb(208,150,21)" rx="2" ry="2" />
<text  x="1075.48" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="899.6" y="1989" width="0.2" height="15.0" fill="rgb(236,59,38)" rx="2" ry="2" />
<text  x="902.57" y="1999.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="948.4" y="1925" width="0.2" height="15.0" fill="rgb(214,56,27)" rx="2" ry="2" />
<text  x="951.40" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (3 samples, 0.05%)</title><rect x="105.3" y="2005" width="0.6" height="15.0" fill="rgb(243,36,30)" rx="2" ry="2" />
<text  x="108.29" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="52.9" y="1861" width="0.2" height="15.0" fill="rgb(205,83,4)" rx="2" ry="2" />
<text  x="55.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="982.2" y="1701" width="0.1" height="15.0" fill="rgb(230,154,5)" rx="2" ry="2" />
<text  x="985.15" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="300.6" y="1589" width="0.4" height="15.0" fill="rgb(229,169,3)" rx="2" ry="2" />
<text  x="303.63" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="948.4" y="1989" width="0.2" height="15.0" fill="rgb(231,133,14)" rx="2" ry="2" />
<text  x="951.40" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="300.6" y="1573" width="0.4" height="15.0" fill="rgb(228,68,17)" rx="2" ry="2" />
<text  x="303.63" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="80.1" y="1717" width="0.2" height="15.0" fill="rgb(233,136,7)" rx="2" ry="2" />
<text  x="83.08" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="627.0" y="1989" width="0.4" height="15.0" fill="rgb(245,88,15)" rx="2" ry="2" />
<text  x="630.00" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="301.0" y="1589" width="0.2" height="15.0" fill="rgb(217,77,15)" rx="2" ry="2" />
<text  x="304.03" y="1599.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (88 samples, 1.48%)</title><rect x="582.5" y="1973" width="17.5" height="15.0" fill="rgb(226,101,43)" rx="2" ry="2" />
<text  x="585.53" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (3 samples, 0.05%)</title><rect x="515.4" y="1989" width="0.6" height="15.0" fill="rgb(218,86,46)" rx="2" ry="2" />
<text  x="518.43" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1106.6" y="1541" width="0.2" height="15.0" fill="rgb(245,181,8)" rx="2" ry="2" />
<text  x="1109.62" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="493.0" y="1989" width="0.4" height="15.0" fill="rgb(221,8,49)" rx="2" ry="2" />
<text  x="496.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="577.4" y="1957" width="0.2" height="15.0" fill="rgb(224,150,3)" rx="2" ry="2" />
<text  x="580.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="505.1" y="1653" width="0.4" height="15.0" fill="rgb(243,35,39)" rx="2" ry="2" />
<text  x="508.11" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="138.0" y="1301" width="0.2" height="15.0" fill="rgb(248,115,23)" rx="2" ry="2" />
<text  x="141.05" y="1311.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="443.8" y="1861" width="0.2" height="15.0" fill="rgb(235,228,3)" rx="2" ry="2" />
<text  x="446.77" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="112.4" y="1941" width="0.2" height="15.0" fill="rgb(254,156,2)" rx="2" ry="2" />
<text  x="115.44" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="708.2" y="1973" width="0.2" height="15.0" fill="rgb(225,113,43)" rx="2" ry="2" />
<text  x="711.19" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (1 samples, 0.02%)</title><rect x="689.1" y="1893" width="0.2" height="15.0" fill="rgb(217,151,12)" rx="2" ry="2" />
<text  x="692.14" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1168.2" y="2053" width="0.2" height="15.0" fill="rgb(225,124,36)" rx="2" ry="2" />
<text  x="1171.16" y="2063.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="825.3" y="1605" width="0.2" height="15.0" fill="rgb(238,70,29)" rx="2" ry="2" />
<text  x="828.32" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="940.5" y="1861" width="0.2" height="15.0" fill="rgb(229,160,52)" rx="2" ry="2" />
<text  x="943.46" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="842.6" y="1749" width="0.2" height="15.0" fill="rgb(240,176,46)" rx="2" ry="2" />
<text  x="845.59" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="825.3" y="1749" width="0.8" height="15.0" fill="rgb(212,206,6)" rx="2" ry="2" />
<text  x="828.32" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="853.9" y="1621" width="0.2" height="15.0" fill="rgb(244,150,7)" rx="2" ry="2" />
<text  x="856.91" y="1631.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="825.9" y="1477" width="0.2" height="15.0" fill="rgb(251,187,54)" rx="2" ry="2" />
<text  x="828.92" y="1487.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="694.1" y="1573" width="0.2" height="15.0" fill="rgb(225,15,30)" rx="2" ry="2" />
<text  x="697.10" y="1583.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="541.4" y="1845" width="0.2" height="15.0" fill="rgb(243,147,36)" rx="2" ry="2" />
<text  x="544.44" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="161.3" y="1925" width="0.4" height="15.0" fill="rgb(242,15,47)" rx="2" ry="2" />
<text  x="164.27" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="706.0" y="1685" width="0.2" height="15.0" fill="rgb(212,220,3)" rx="2" ry="2" />
<text  x="709.01" y="1695.5" ></text>
</g>
<g >
<title>__alloc_skb (36 samples, 0.61%)</title><rect x="279.6" y="1861" width="7.1" height="15.0" fill="rgb(220,64,23)" rx="2" ry="2" />
<text  x="282.59" y="1871.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="1024.0" y="1877" width="0.2" height="15.0" fill="rgb(215,2,25)" rx="2" ry="2" />
<text  x="1027.04" y="1887.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="883.5" y="1861" width="0.2" height="15.0" fill="rgb(242,55,0)" rx="2" ry="2" />
<text  x="886.49" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="491.8" y="1765" width="0.2" height="15.0" fill="rgb(254,154,11)" rx="2" ry="2" />
<text  x="494.81" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="96.2" y="1909" width="0.2" height="15.0" fill="rgb(226,128,51)" rx="2" ry="2" />
<text  x="99.16" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="499.7" y="1925" width="0.2" height="15.0" fill="rgb(208,105,54)" rx="2" ry="2" />
<text  x="502.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (3 samples, 0.05%)</title><rect x="913.5" y="1989" width="0.6" height="15.0" fill="rgb(233,130,5)" rx="2" ry="2" />
<text  x="916.46" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="701.4" y="1909" width="0.2" height="15.0" fill="rgb(226,175,36)" rx="2" ry="2" />
<text  x="704.44" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="247.4" y="1829" width="0.2" height="15.0" fill="rgb(224,90,28)" rx="2" ry="2" />
<text  x="250.43" y="1839.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="114.0" y="2005" width="0.6" height="15.0" fill="rgb(215,30,29)" rx="2" ry="2" />
<text  x="117.02" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="269.3" y="1941" width="0.2" height="15.0" fill="rgb(210,145,9)" rx="2" ry="2" />
<text  x="272.27" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1013" width="18.5" height="15.0" fill="rgb(210,155,5)" rx="2" ry="2" />
<text  x="121.79" y="1023.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1172.7" y="1957" width="0.2" height="15.0" fill="rgb(241,4,3)" rx="2" ry="2" />
<text  x="1175.73" y="1967.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="323.7" y="1797" width="0.2" height="15.0" fill="rgb(228,62,43)" rx="2" ry="2" />
<text  x="326.66" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="899.6" y="1605" width="0.2" height="15.0" fill="rgb(252,196,17)" rx="2" ry="2" />
<text  x="902.57" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="64.4" y="1925" width="1.0" height="15.0" fill="rgb(214,25,37)" rx="2" ry="2" />
<text  x="67.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="600.8" y="1861" width="0.2" height="15.0" fill="rgb(233,223,52)" rx="2" ry="2" />
<text  x="603.79" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="543.2" y="1957" width="0.4" height="15.0" fill="rgb(211,177,42)" rx="2" ry="2" />
<text  x="546.22" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="884.7" y="1701" width="0.2" height="15.0" fill="rgb(254,137,23)" rx="2" ry="2" />
<text  x="887.68" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="612.1" y="1893" width="0.4" height="15.0" fill="rgb(236,28,27)" rx="2" ry="2" />
<text  x="615.11" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="522.8" y="1973" width="0.2" height="15.0" fill="rgb(231,152,27)" rx="2" ry="2" />
<text  x="525.78" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="167.8" y="1893" width="0.2" height="15.0" fill="rgb(233,226,49)" rx="2" ry="2" />
<text  x="170.82" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(237,23,46)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.08%)</title><rect x="609.9" y="1829" width="1.0" height="15.0" fill="rgb(248,197,14)" rx="2" ry="2" />
<text  x="612.93" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="772.7" y="1461" width="0.2" height="15.0" fill="rgb(247,84,17)" rx="2" ry="2" />
<text  x="775.71" y="1471.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(210,41,15)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>lock_timer_base (3 samples, 0.05%)</title><rect x="328.8" y="1749" width="0.6" height="15.0" fill="rgb(245,102,31)" rx="2" ry="2" />
<text  x="331.82" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="482.9" y="1925" width="0.6" height="15.0" fill="rgb(240,151,16)" rx="2" ry="2" />
<text  x="485.87" y="1935.5" ></text>
</g>
<g >
<title>__close (601 samples, 10.11%)</title><rect x="715.9" y="1909" width="119.3" height="15.0" fill="rgb(227,170,41)" rx="2" ry="2" />
<text  x="718.94" y="1919.5" >__close</text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1067.3" y="1861" width="0.6" height="15.0" fill="rgb(220,215,27)" rx="2" ry="2" />
<text  x="1070.31" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1048.9" y="1861" width="0.2" height="15.0" fill="rgb(236,43,16)" rx="2" ry="2" />
<text  x="1051.85" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1078.4" y="1781" width="0.2" height="15.0" fill="rgb(246,27,53)" rx="2" ry="2" />
<text  x="1081.43" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="271.6" y="1877" width="0.4" height="15.0" fill="rgb(206,49,41)" rx="2" ry="2" />
<text  x="274.65" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="290.5" y="1749" width="0.2" height="15.0" fill="rgb(237,132,9)" rx="2" ry="2" />
<text  x="293.51" y="1759.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.1" y="1957" width="0.2" height="15.0" fill="rgb(253,31,9)" rx="2" ry="2" />
<text  x="943.06" y="1967.5" ></text>
</g>
<g >
<title>dev_queue_xmit (66 samples, 1.11%)</title><rect x="303.0" y="1733" width="13.1" height="15.0" fill="rgb(243,213,28)" rx="2" ry="2" />
<text  x="306.01" y="1743.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (8 samples, 0.13%)</title><rect x="91.8" y="1957" width="1.6" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="94.79" y="1967.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="135.9" y="37" width="0.2" height="15.0" fill="rgb(242,111,31)" rx="2" ry="2" />
<text  x="138.86" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="631.6" y="1973" width="0.2" height="15.0" fill="rgb(241,157,8)" rx="2" ry="2" />
<text  x="634.56" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="393.9" y="1925" width="0.2" height="15.0" fill="rgb(245,146,50)" rx="2" ry="2" />
<text  x="396.94" y="1935.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="115.6" y="1909" width="0.2" height="15.0" fill="rgb(227,155,51)" rx="2" ry="2" />
<text  x="118.61" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="510.9" y="1973" width="0.2" height="15.0" fill="rgb(252,164,19)" rx="2" ry="2" />
<text  x="513.86" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="250.2" y="1829" width="0.2" height="15.0" fill="rgb(225,106,20)" rx="2" ry="2" />
<text  x="253.21" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="762.6" y="1653" width="0.4" height="15.0" fill="rgb(244,81,17)" rx="2" ry="2" />
<text  x="765.59" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="157.5" y="1829" width="0.2" height="15.0" fill="rgb(216,73,40)" rx="2" ry="2" />
<text  x="160.50" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="818.6" y="1637" width="0.2" height="15.0" fill="rgb(238,54,29)" rx="2" ry="2" />
<text  x="821.57" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="936.5" y="1765" width="0.2" height="15.0" fill="rgb(247,29,21)" rx="2" ry="2" />
<text  x="939.49" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="562.3" y="1765" width="0.2" height="15.0" fill="rgb(206,22,49)" rx="2" ry="2" />
<text  x="565.28" y="1775.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="196.4" y="1637" width="0.2" height="15.0" fill="rgb(244,106,11)" rx="2" ry="2" />
<text  x="199.41" y="1647.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="203.0" y="2021" width="0.2" height="15.0" fill="rgb(205,13,0)" rx="2" ry="2" />
<text  x="205.96" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="419.0" y="1909" width="0.1" height="15.0" fill="rgb(236,226,34)" rx="2" ry="2" />
<text  x="421.95" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="519.4" y="1957" width="0.4" height="15.0" fill="rgb(207,176,6)" rx="2" ry="2" />
<text  x="522.40" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="143.2" y="1877" width="0.2" height="15.0" fill="rgb(215,143,19)" rx="2" ry="2" />
<text  x="146.21" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="630.4" y="2005" width="1.4" height="15.0" fill="rgb(233,157,51)" rx="2" ry="2" />
<text  x="633.37" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="739.8" y="1397" width="0.2" height="15.0" fill="rgb(222,221,27)" rx="2" ry="2" />
<text  x="742.76" y="1407.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="948.4" y="1941" width="0.2" height="15.0" fill="rgb(207,33,29)" rx="2" ry="2" />
<text  x="951.40" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="343.3" y="1941" width="0.2" height="15.0" fill="rgb(226,105,32)" rx="2" ry="2" />
<text  x="346.31" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="848.1" y="1845" width="0.2" height="15.0" fill="rgb(245,171,17)" rx="2" ry="2" />
<text  x="851.15" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="887.1" y="1973" width="0.2" height="15.0" fill="rgb(232,144,49)" rx="2" ry="2" />
<text  x="890.06" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="822.5" y="1685" width="0.2" height="15.0" fill="rgb(212,70,17)" rx="2" ry="2" />
<text  x="825.54" y="1695.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="1183.1" y="1765" width="0.2" height="15.0" fill="rgb(229,36,38)" rx="2" ry="2" />
<text  x="1186.05" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1163.8" y="1909" width="0.2" height="15.0" fill="rgb(230,113,21)" rx="2" ry="2" />
<text  x="1166.80" y="1919.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="282.8" y="1781" width="0.2" height="15.0" fill="rgb(207,114,25)" rx="2" ry="2" />
<text  x="285.77" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1018.3" y="1765" width="0.2" height="15.0" fill="rgb(244,210,24)" rx="2" ry="2" />
<text  x="1021.28" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="29.7" y="1973" width="0.2" height="15.0" fill="rgb(242,178,26)" rx="2" ry="2" />
<text  x="32.65" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (4 samples, 0.07%)</title><rect x="226.4" y="1957" width="0.8" height="15.0" fill="rgb(230,141,2)" rx="2" ry="2" />
<text  x="229.39" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="844.2" y="1749" width="0.2" height="15.0" fill="rgb(248,26,31)" rx="2" ry="2" />
<text  x="847.18" y="1759.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="114.8" y="1685" width="0.2" height="15.0" fill="rgb(211,49,28)" rx="2" ry="2" />
<text  x="117.82" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="162.7" y="1877" width="0.2" height="15.0" fill="rgb(247,227,39)" rx="2" ry="2" />
<text  x="165.66" y="1887.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="596.8" y="1877" width="0.4" height="15.0" fill="rgb(247,93,46)" rx="2" ry="2" />
<text  x="599.82" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1176.5" y="2005" width="0.4" height="15.0" fill="rgb(210,103,17)" rx="2" ry="2" />
<text  x="1179.50" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="731.6" y="1509" width="0.2" height="15.0" fill="rgb(206,14,20)" rx="2" ry="2" />
<text  x="734.62" y="1519.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="706.0" y="1573" width="0.2" height="15.0" fill="rgb(231,193,45)" rx="2" ry="2" />
<text  x="709.01" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="915.8" y="2005" width="0.6" height="15.0" fill="rgb(217,109,42)" rx="2" ry="2" />
<text  x="918.84" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="322.9" y="1829" width="0.2" height="15.0" fill="rgb(212,107,38)" rx="2" ry="2" />
<text  x="325.87" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="458.7" y="1893" width="0.2" height="15.0" fill="rgb(249,48,48)" rx="2" ry="2" />
<text  x="461.65" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="775.3" y="1525" width="0.6" height="15.0" fill="rgb(236,206,39)" rx="2" ry="2" />
<text  x="778.29" y="1535.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="543.8" y="1653" width="0.2" height="15.0" fill="rgb(221,47,19)" rx="2" ry="2" />
<text  x="546.82" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="160.9" y="1893" width="0.2" height="15.0" fill="rgb(245,79,31)" rx="2" ry="2" />
<text  x="163.87" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1106.6" y="1653" width="0.2" height="15.0" fill="rgb(220,217,17)" rx="2" ry="2" />
<text  x="1109.62" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="637.1" y="1701" width="0.2" height="15.0" fill="rgb(232,12,2)" rx="2" ry="2" />
<text  x="640.12" y="1711.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (21 samples, 0.35%)</title><rect x="310.6" y="1685" width="4.1" height="15.0" fill="rgb(209,181,22)" rx="2" ry="2" />
<text  x="313.56" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="614.9" y="2005" width="0.2" height="15.0" fill="rgb(227,170,54)" rx="2" ry="2" />
<text  x="617.89" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="96.2" y="1973" width="0.2" height="15.0" fill="rgb(239,160,48)" rx="2" ry="2" />
<text  x="99.16" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="595.6" y="1845" width="0.2" height="15.0" fill="rgb(232,170,33)" rx="2" ry="2" />
<text  x="598.63" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="1178.3" y="2037" width="1.2" height="15.0" fill="rgb(216,179,24)" rx="2" ry="2" />
<text  x="1181.29" y="2047.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="383.4" y="1893" width="0.2" height="15.0" fill="rgb(239,198,51)" rx="2" ry="2" />
<text  x="386.42" y="1903.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="350.1" y="2037" width="0.2" height="15.0" fill="rgb(211,3,2)" rx="2" ry="2" />
<text  x="353.06" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="114.8" y="1845" width="0.2" height="15.0" fill="rgb(238,177,33)" rx="2" ry="2" />
<text  x="117.82" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="968.1" y="1829" width="0.2" height="15.0" fill="rgb(223,176,9)" rx="2" ry="2" />
<text  x="971.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="283.0" y="1541" width="0.2" height="15.0" fill="rgb(229,198,16)" rx="2" ry="2" />
<text  x="285.96" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="118.8" y="1461" width="19.6" height="15.0" fill="rgb(233,154,17)" rx="2" ry="2" />
<text  x="121.79" y="1471.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="659.0" y="2005" width="0.2" height="15.0" fill="rgb(222,80,53)" rx="2" ry="2" />
<text  x="661.96" y="2015.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (31 samples, 0.52%)</title><rect x="1171.5" y="2053" width="6.2" height="15.0" fill="rgb(242,198,21)" rx="2" ry="2" />
<text  x="1174.54" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="547.6" y="1637" width="0.2" height="15.0" fill="rgb(246,150,28)" rx="2" ry="2" />
<text  x="550.59" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (4 samples, 0.07%)</title><rect x="904.9" y="1973" width="0.8" height="15.0" fill="rgb(248,156,36)" rx="2" ry="2" />
<text  x="907.93" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="510.3" y="1941" width="0.2" height="15.0" fill="rgb(252,82,3)" rx="2" ry="2" />
<text  x="513.27" y="1951.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="95.6" y="1637" width="0.2" height="15.0" fill="rgb(242,193,8)" rx="2" ry="2" />
<text  x="98.56" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="676.2" y="1749" width="0.2" height="15.0" fill="rgb(246,23,52)" rx="2" ry="2" />
<text  x="679.23" y="1759.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (6 samples, 0.10%)</title><rect x="79.3" y="1845" width="1.2" height="15.0" fill="rgb(212,41,28)" rx="2" ry="2" />
<text  x="82.28" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="662.3" y="1877" width="0.2" height="15.0" fill="rgb(229,146,19)" rx="2" ry="2" />
<text  x="665.34" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="936.5" y="1845" width="0.2" height="15.0" fill="rgb(211,98,45)" rx="2" ry="2" />
<text  x="939.49" y="1855.5" ></text>
</g>
<g >
<title>__fget_light (17 samples, 0.29%)</title><rect x="1122.5" y="1941" width="3.4" height="15.0" fill="rgb(220,152,42)" rx="2" ry="2" />
<text  x="1125.50" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="621.8" y="1973" width="0.2" height="15.0" fill="rgb(214,191,8)" rx="2" ry="2" />
<text  x="624.84" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="136.1" y="165" width="0.2" height="15.0" fill="rgb(205,107,49)" rx="2" ry="2" />
<text  x="139.06" y="175.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="288.5" y="1781" width="0.2" height="15.0" fill="rgb(207,47,16)" rx="2" ry="2" />
<text  x="291.52" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="288.5" y="1797" width="0.2" height="15.0" fill="rgb(216,0,33)" rx="2" ry="2" />
<text  x="291.52" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="1072.1" y="1573" width="0.2" height="15.0" fill="rgb(238,34,44)" rx="2" ry="2" />
<text  x="1075.08" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="118.8" y="1077" width="18.5" height="15.0" fill="rgb(253,57,37)" rx="2" ry="2" />
<text  x="121.79" y="1087.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18 samples, 0.30%)</title><rect x="395.1" y="1925" width="3.6" height="15.0" fill="rgb(205,60,29)" rx="2" ry="2" />
<text  x="398.13" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="154.7" y="1973" width="0.2" height="15.0" fill="rgb(226,33,38)" rx="2" ry="2" />
<text  x="157.72" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="853.9" y="1845" width="0.2" height="15.0" fill="rgb(251,149,40)" rx="2" ry="2" />
<text  x="856.91" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="852.7" y="1781" width="0.2" height="15.0" fill="rgb(215,225,32)" rx="2" ry="2" />
<text  x="855.72" y="1791.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="328.6" y="1749" width="0.2" height="15.0" fill="rgb(206,13,54)" rx="2" ry="2" />
<text  x="331.62" y="1759.5" ></text>
</g>
<g >
<title>locks_remove_posix (4 samples, 0.07%)</title><rect x="829.9" y="1813" width="0.8" height="15.0" fill="rgb(228,33,1)" rx="2" ry="2" />
<text  x="832.89" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9 samples, 0.15%)</title><rect x="301.2" y="1541" width="1.8" height="15.0" fill="rgb(254,206,17)" rx="2" ry="2" />
<text  x="304.23" y="1551.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="486.8" y="1669" width="0.2" height="15.0" fill="rgb(221,74,49)" rx="2" ry="2" />
<text  x="489.84" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="136.9" y="53" width="0.2" height="15.0" fill="rgb(209,129,38)" rx="2" ry="2" />
<text  x="139.85" y="63.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="224.6" y="2005" width="0.2" height="15.0" fill="rgb(223,156,37)" rx="2" ry="2" />
<text  x="227.60" y="2015.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1052.0" y="1717" width="0.2" height="15.0" fill="rgb(229,199,27)" rx="2" ry="2" />
<text  x="1055.03" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="490.2" y="1701" width="0.2" height="15.0" fill="rgb(231,98,17)" rx="2" ry="2" />
<text  x="493.22" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="976.6" y="1973" width="0.2" height="15.0" fill="rgb(232,191,54)" rx="2" ry="2" />
<text  x="979.59" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1018.3" y="1797" width="0.2" height="15.0" fill="rgb(242,215,10)" rx="2" ry="2" />
<text  x="1021.28" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="646.5" y="1845" width="0.2" height="15.0" fill="rgb(213,21,21)" rx="2" ry="2" />
<text  x="649.45" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1135.6" y="2021" width="0.4" height="15.0" fill="rgb(216,181,27)" rx="2" ry="2" />
<text  x="1138.61" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.12%)</title><rect x="301.6" y="1477" width="1.4" height="15.0" fill="rgb(222,201,12)" rx="2" ry="2" />
<text  x="304.63" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1172.7" y="1781" width="0.2" height="15.0" fill="rgb(245,81,25)" rx="2" ry="2" />
<text  x="1175.73" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="505.1" y="1669" width="0.4" height="15.0" fill="rgb(227,106,9)" rx="2" ry="2" />
<text  x="508.11" y="1679.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="300.0" y="1733" width="0.2" height="15.0" fill="rgb(246,102,1)" rx="2" ry="2" />
<text  x="303.04" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1121.3" y="1829" width="0.2" height="15.0" fill="rgb(211,124,5)" rx="2" ry="2" />
<text  x="1124.31" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="184.1" y="1957" width="0.4" height="15.0" fill="rgb(245,178,40)" rx="2" ry="2" />
<text  x="187.10" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="198.4" y="2021" width="0.2" height="15.0" fill="rgb(205,156,17)" rx="2" ry="2" />
<text  x="201.40" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="800.7" y="1461" width="0.2" height="15.0" fill="rgb(236,48,7)" rx="2" ry="2" />
<text  x="803.70" y="1471.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.5" y="1925" width="0.2" height="15.0" fill="rgb(240,3,36)" rx="2" ry="2" />
<text  x="160.50" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="109.3" y="2021" width="0.4" height="15.0" fill="rgb(207,44,26)" rx="2" ry="2" />
<text  x="112.26" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="88.6" y="1845" width="0.2" height="15.0" fill="rgb(251,167,28)" rx="2" ry="2" />
<text  x="91.61" y="1855.5" ></text>
</g>
<g >
<title>mod_timer (23 samples, 0.39%)</title><rect x="325.1" y="1765" width="4.5" height="15.0" fill="rgb(250,44,29)" rx="2" ry="2" />
<text  x="328.05" y="1775.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (3 samples, 0.05%)</title><rect x="734.6" y="1637" width="0.6" height="15.0" fill="rgb(235,4,5)" rx="2" ry="2" />
<text  x="737.60" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (68 samples, 1.14%)</title><rect x="1153.5" y="2053" width="13.5" height="15.0" fill="rgb(219,171,14)" rx="2" ry="2" />
<text  x="1156.47" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="800.7" y="1557" width="0.2" height="15.0" fill="rgb(209,94,26)" rx="2" ry="2" />
<text  x="803.70" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="602.4" y="1845" width="0.2" height="15.0" fill="rgb(221,21,8)" rx="2" ry="2" />
<text  x="605.38" y="1855.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="392.2" y="1861" width="0.1" height="15.0" fill="rgb(219,205,31)" rx="2" ry="2" />
<text  x="395.15" y="1871.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="213.9" y="2037" width="0.4" height="15.0" fill="rgb(248,71,29)" rx="2" ry="2" />
<text  x="216.88" y="2047.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="853.1" y="1877" width="0.8" height="15.0" fill="rgb(210,210,51)" rx="2" ry="2" />
<text  x="856.11" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="679.4" y="1893" width="0.2" height="15.0" fill="rgb(232,147,38)" rx="2" ry="2" />
<text  x="682.41" y="1903.5" ></text>
</g>
<g >
<title>sk_reset_timer (25 samples, 0.42%)</title><rect x="324.9" y="1781" width="4.9" height="15.0" fill="rgb(244,129,36)" rx="2" ry="2" />
<text  x="327.85" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="810.0" y="1685" width="0.2" height="15.0" fill="rgb(242,138,38)" rx="2" ry="2" />
<text  x="813.03" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="628.4" y="1989" width="0.2" height="15.0" fill="rgb(235,151,27)" rx="2" ry="2" />
<text  x="631.39" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="155.9" y="1797" width="0.2" height="15.0" fill="rgb(246,58,9)" rx="2" ry="2" />
<text  x="158.91" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="852.1" y="1861" width="0.6" height="15.0" fill="rgb(254,130,18)" rx="2" ry="2" />
<text  x="855.12" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="820.0" y="1669" width="0.2" height="15.0" fill="rgb(221,213,5)" rx="2" ry="2" />
<text  x="822.96" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="510.9" y="2005" width="0.2" height="15.0" fill="rgb(233,16,26)" rx="2" ry="2" />
<text  x="513.86" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="269.3" y="1669" width="0.2" height="15.0" fill="rgb(227,56,45)" rx="2" ry="2" />
<text  x="272.27" y="1679.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="743.3" y="1765" width="0.2" height="15.0" fill="rgb(225,23,34)" rx="2" ry="2" />
<text  x="746.33" y="1775.5" ></text>
</g>
<g >
<title>ip_finish_output2 (114 samples, 1.92%)</title><rect x="772.9" y="1605" width="22.6" height="15.0" fill="rgb(238,56,47)" rx="2" ry="2" />
<text  x="775.91" y="1615.5" >i..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="884.7" y="1733" width="0.2" height="15.0" fill="rgb(247,166,13)" rx="2" ry="2" />
<text  x="887.68" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="408.4" y="1717" width="0.2" height="15.0" fill="rgb(212,54,51)" rx="2" ry="2" />
<text  x="411.43" y="1727.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.07%)</title><rect x="772.1" y="1605" width="0.8" height="15.0" fill="rgb(206,223,47)" rx="2" ry="2" />
<text  x="775.12" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1106.6" y="1877" width="0.2" height="15.0" fill="rgb(206,124,31)" rx="2" ry="2" />
<text  x="1109.62" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="665.7" y="1973" width="0.4" height="15.0" fill="rgb(228,98,16)" rx="2" ry="2" />
<text  x="668.71" y="1983.5" ></text>
</g>
<g >
<title>zap_page_range (1 samples, 0.02%)</title><rect x="1133.8" y="1989" width="0.2" height="15.0" fill="rgb(223,144,4)" rx="2" ry="2" />
<text  x="1136.82" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="112.4" y="1989" width="0.2" height="15.0" fill="rgb(242,160,34)" rx="2" ry="2" />
<text  x="115.44" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (1 samples, 0.02%)</title><rect x="909.1" y="2005" width="0.2" height="15.0" fill="rgb(225,108,29)" rx="2" ry="2" />
<text  x="912.09" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="825.9" y="1525" width="0.2" height="15.0" fill="rgb(218,111,19)" rx="2" ry="2" />
<text  x="828.92" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="70.7" y="1797" width="0.2" height="15.0" fill="rgb(234,74,15)" rx="2" ry="2" />
<text  x="73.75" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="300.6" y="1541" width="0.2" height="15.0" fill="rgb(206,37,22)" rx="2" ry="2" />
<text  x="303.63" y="1551.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="458.5" y="1829" width="0.2" height="15.0" fill="rgb(245,170,18)" rx="2" ry="2" />
<text  x="461.46" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="602.4" y="1861" width="0.2" height="15.0" fill="rgb(218,79,31)" rx="2" ry="2" />
<text  x="605.38" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="739.8" y="1493" width="0.2" height="15.0" fill="rgb(229,162,31)" rx="2" ry="2" />
<text  x="742.76" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="310.4" y="1669" width="0.2" height="15.0" fill="rgb(226,154,21)" rx="2" ry="2" />
<text  x="313.36" y="1679.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (2 samples, 0.03%)</title><rect x="1006.4" y="2005" width="0.4" height="15.0" fill="rgb(238,141,52)" rx="2" ry="2" />
<text  x="1009.37" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="883.1" y="1909" width="0.2" height="15.0" fill="rgb(242,13,36)" rx="2" ry="2" />
<text  x="886.09" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="91.2" y="1893" width="0.4" height="15.0" fill="rgb(241,99,25)" rx="2" ry="2" />
<text  x="94.19" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="41.0" y="2005" width="0.2" height="15.0" fill="rgb(238,207,25)" rx="2" ry="2" />
<text  x="43.97" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (2 samples, 0.03%)</title><rect x="884.9" y="1893" width="0.4" height="15.0" fill="rgb(246,42,50)" rx="2" ry="2" />
<text  x="887.88" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="776.9" y="1557" width="0.2" height="15.0" fill="rgb(243,77,27)" rx="2" ry="2" />
<text  x="779.88" y="1567.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="414.4" y="1893" width="0.2" height="15.0" fill="rgb(214,226,40)" rx="2" ry="2" />
<text  x="417.38" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="69.0" y="1909" width="0.2" height="15.0" fill="rgb(222,73,7)" rx="2" ry="2" />
<text  x="71.96" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="510.3" y="1893" width="0.2" height="15.0" fill="rgb(226,24,20)" rx="2" ry="2" />
<text  x="513.27" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="136.7" y="373" width="0.2" height="15.0" fill="rgb(220,59,32)" rx="2" ry="2" />
<text  x="139.66" y="383.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1189.4" y="2021" width="0.2" height="15.0" fill="rgb(206,223,19)" rx="2" ry="2" />
<text  x="1192.40" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="520.0" y="1765" width="0.2" height="15.0" fill="rgb(214,199,26)" rx="2" ry="2" />
<text  x="523.00" y="1775.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="290.3" y="1845" width="0.2" height="15.0" fill="rgb(248,225,44)" rx="2" ry="2" />
<text  x="293.31" y="1855.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="676.0" y="1877" width="0.2" height="15.0" fill="rgb(238,116,46)" rx="2" ry="2" />
<text  x="679.03" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (10 samples, 0.17%)</title><rect x="516.0" y="1989" width="2.0" height="15.0" fill="rgb(220,183,45)" rx="2" ry="2" />
<text  x="519.03" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="562.1" y="1813" width="0.2" height="15.0" fill="rgb(253,154,3)" rx="2" ry="2" />
<text  x="565.08" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="562.3" y="1941" width="0.2" height="15.0" fill="rgb(221,119,34)" rx="2" ry="2" />
<text  x="565.28" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (10 samples, 0.17%)</title><rect x="301.0" y="1605" width="2.0" height="15.0" fill="rgb(215,219,29)" rx="2" ry="2" />
<text  x="304.03" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (51 samples, 0.86%)</title><rect x="602.6" y="1925" width="10.1" height="15.0" fill="rgb(242,97,47)" rx="2" ry="2" />
<text  x="605.58" y="1935.5" ></text>
</g>
<g >
<title>sock_destroy_inode (23 samples, 0.39%)</title><rect x="735.4" y="1685" width="4.6" height="15.0" fill="rgb(254,136,54)" rx="2" ry="2" />
<text  x="738.39" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="935.3" y="1861" width="0.2" height="15.0" fill="rgb(245,104,0)" rx="2" ry="2" />
<text  x="938.30" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="694.1" y="1685" width="0.2" height="15.0" fill="rgb(211,165,39)" rx="2" ry="2" />
<text  x="697.10" y="1695.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.4" y="1941" width="0.8" height="15.0" fill="rgb(220,150,39)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (13 samples, 0.22%)</title><rect x="364.2" y="1957" width="2.5" height="15.0" fill="rgb(249,40,9)" rx="2" ry="2" />
<text  x="367.16" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.71%)</title><rect x="901.2" y="2021" width="8.3" height="15.0" fill="rgb(213,149,13)" rx="2" ry="2" />
<text  x="904.15" y="2031.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (4 samples, 0.07%)</title><rect x="339.5" y="1925" width="0.8" height="15.0" fill="rgb(209,194,6)" rx="2" ry="2" />
<text  x="342.54" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="371.7" y="1909" width="0.2" height="15.0" fill="rgb(214,172,35)" rx="2" ry="2" />
<text  x="374.70" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="619.9" y="2005" width="0.2" height="15.0" fill="rgb(215,140,2)" rx="2" ry="2" />
<text  x="622.85" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="264.7" y="1877" width="0.2" height="15.0" fill="rgb(241,195,22)" rx="2" ry="2" />
<text  x="267.70" y="1887.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="194.2" y="1941" width="0.2" height="15.0" fill="rgb(208,55,42)" rx="2" ry="2" />
<text  x="197.23" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="710.6" y="1861" width="0.6" height="15.0" fill="rgb(222,41,13)" rx="2" ry="2" />
<text  x="713.58" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="245.4" y="1845" width="0.2" height="15.0" fill="rgb(240,175,6)" rx="2" ry="2" />
<text  x="248.44" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="294.3" y="1589" width="0.2" height="15.0" fill="rgb(245,129,42)" rx="2" ry="2" />
<text  x="297.28" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="136.9" y="517" width="0.2" height="15.0" fill="rgb(225,33,45)" rx="2" ry="2" />
<text  x="139.85" y="527.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="72.1" y="1781" width="0.2" height="15.0" fill="rgb(215,65,6)" rx="2" ry="2" />
<text  x="75.14" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="247.4" y="1685" width="0.2" height="15.0" fill="rgb(242,41,35)" rx="2" ry="2" />
<text  x="250.43" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="458.7" y="1845" width="0.2" height="15.0" fill="rgb(216,167,54)" rx="2" ry="2" />
<text  x="461.65" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (9 samples, 0.15%)</title><rect x="1143.0" y="2021" width="1.7" height="15.0" fill="rgb(225,188,40)" rx="2" ry="2" />
<text  x="1145.95" y="2031.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (99 samples, 1.67%)</title><rect x="775.9" y="1573" width="19.6" height="15.0" fill="rgb(237,147,34)" rx="2" ry="2" />
<text  x="778.89" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="119.0" y="917" width="18.1" height="15.0" fill="rgb(224,32,39)" rx="2" ry="2" />
<text  x="121.99" y="927.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="314.1" y="1637" width="0.2" height="15.0" fill="rgb(234,9,39)" rx="2" ry="2" />
<text  x="317.13" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="535.7" y="1941" width="1.2" height="15.0" fill="rgb(208,66,19)" rx="2" ry="2" />
<text  x="538.68" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.7" y="1957" width="0.2" height="15.0" fill="rgb(251,91,14)" rx="2" ry="2" />
<text  x="890.65" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="191.4" y="1941" width="0.4" height="15.0" fill="rgb(250,26,4)" rx="2" ry="2" />
<text  x="194.45" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="166.6" y="1893" width="0.6" height="15.0" fill="rgb(246,47,52)" rx="2" ry="2" />
<text  x="169.63" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1175.9" y="1909" width="0.2" height="15.0" fill="rgb(250,34,39)" rx="2" ry="2" />
<text  x="1178.91" y="1919.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="416.6" y="1941" width="0.2" height="15.0" fill="rgb(243,144,49)" rx="2" ry="2" />
<text  x="419.57" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="155.9" y="1893" width="0.2" height="15.0" fill="rgb(241,117,1)" rx="2" ry="2" />
<text  x="158.91" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="818.6" y="1653" width="0.2" height="15.0" fill="rgb(222,24,39)" rx="2" ry="2" />
<text  x="821.57" y="1663.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="706.0" y="1605" width="0.2" height="15.0" fill="rgb(229,61,28)" rx="2" ry="2" />
<text  x="709.01" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="175.2" y="1941" width="0.2" height="15.0" fill="rgb(248,30,17)" rx="2" ry="2" />
<text  x="178.17" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="984.9" y="1733" width="0.2" height="15.0" fill="rgb(209,38,44)" rx="2" ry="2" />
<text  x="987.93" y="1743.5" ></text>
</g>
<g >
<title>__copy_skb_header (7 samples, 0.12%)</title><rect x="798.1" y="1637" width="1.4" height="15.0" fill="rgb(227,6,31)" rx="2" ry="2" />
<text  x="801.12" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.5" y="1957" width="0.2" height="15.0" fill="rgb(243,62,7)" rx="2" ry="2" />
<text  x="940.48" y="1967.5" ></text>
</g>
<g >
<title>sys_gettid (5 samples, 0.08%)</title><rect x="1162.8" y="1925" width="1.0" height="15.0" fill="rgb(241,18,11)" rx="2" ry="2" />
<text  x="1165.80" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="66.2" y="1877" width="0.2" height="15.0" fill="rgb(218,85,13)" rx="2" ry="2" />
<text  x="69.18" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="186.3" y="1909" width="0.2" height="15.0" fill="rgb(229,85,41)" rx="2" ry="2" />
<text  x="189.29" y="1919.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1017.1" y="1749" width="0.2" height="15.0" fill="rgb(217,98,5)" rx="2" ry="2" />
<text  x="1020.09" y="1759.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="342.7" y="1781" width="0.2" height="15.0" fill="rgb(248,113,40)" rx="2" ry="2" />
<text  x="345.72" y="1791.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.2" y="1877" width="0.8" height="15.0" fill="rgb(226,123,18)" rx="2" ry="2" />
<text  x="14.19" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="885.7" y="1925" width="0.4" height="15.0" fill="rgb(238,141,16)" rx="2" ry="2" />
<text  x="888.67" y="1935.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1026.0" y="2053" width="0.2" height="15.0" fill="rgb(233,202,43)" rx="2" ry="2" />
<text  x="1029.02" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="668.3" y="1877" width="0.2" height="15.0" fill="rgb(212,156,44)" rx="2" ry="2" />
<text  x="671.29" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="679.4" y="1909" width="0.2" height="15.0" fill="rgb(238,83,49)" rx="2" ry="2" />
<text  x="682.41" y="1919.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.02%)</title><rect x="400.1" y="1893" width="0.2" height="15.0" fill="rgb(241,190,45)" rx="2" ry="2" />
<text  x="403.09" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1052.0" y="1701" width="0.2" height="15.0" fill="rgb(227,46,20)" rx="2" ry="2" />
<text  x="1055.03" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="163.3" y="1637" width="0.2" height="15.0" fill="rgb(212,108,12)" rx="2" ry="2" />
<text  x="166.26" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="679.4" y="1765" width="0.2" height="15.0" fill="rgb(216,183,16)" rx="2" ry="2" />
<text  x="682.41" y="1775.5" ></text>
</g>
<g >
<title>sock_poll (51 samples, 0.86%)</title><rect x="462.2" y="1957" width="10.2" height="15.0" fill="rgb(213,148,8)" rx="2" ry="2" />
<text  x="465.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="510.3" y="1749" width="0.2" height="15.0" fill="rgb(252,144,17)" rx="2" ry="2" />
<text  x="513.27" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="731.6" y="1461" width="0.2" height="15.0" fill="rgb(235,99,5)" rx="2" ry="2" />
<text  x="734.62" y="1471.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="904.7" y="1973" width="0.2" height="15.0" fill="rgb(205,90,26)" rx="2" ry="2" />
<text  x="907.73" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="21.7" y="2037" width="0.2" height="15.0" fill="rgb(236,171,14)" rx="2" ry="2" />
<text  x="24.71" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (5 samples, 0.08%)</title><rect x="844.6" y="1925" width="1.0" height="15.0" fill="rgb(211,13,51)" rx="2" ry="2" />
<text  x="847.58" y="1935.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (2 samples, 0.03%)</title><rect x="613.3" y="1925" width="0.4" height="15.0" fill="rgb(206,105,28)" rx="2" ry="2" />
<text  x="616.30" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="61.0" y="1653" width="0.2" height="15.0" fill="rgb(224,168,41)" rx="2" ry="2" />
<text  x="64.02" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="731.4" y="1621" width="0.4" height="15.0" fill="rgb(231,146,3)" rx="2" ry="2" />
<text  x="734.42" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1021.7" y="2005" width="0.2" height="15.0" fill="rgb(213,59,29)" rx="2" ry="2" />
<text  x="1024.66" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="136.7" y="197" width="0.2" height="15.0" fill="rgb(209,44,11)" rx="2" ry="2" />
<text  x="139.66" y="207.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="968.1" y="1749" width="0.2" height="15.0" fill="rgb(219,136,17)" rx="2" ry="2" />
<text  x="971.06" y="1759.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.2" y="1893" width="0.8" height="15.0" fill="rgb(220,120,47)" rx="2" ry="2" />
<text  x="14.19" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (30 samples, 0.50%)</title><rect x="876.3" y="1957" width="6.0" height="15.0" fill="rgb(228,31,26)" rx="2" ry="2" />
<text  x="879.34" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="696.1" y="1973" width="2.4" height="15.0" fill="rgb(218,33,4)" rx="2" ry="2" />
<text  x="699.08" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="518.8" y="1973" width="1.4" height="15.0" fill="rgb(236,44,2)" rx="2" ry="2" />
<text  x="521.81" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="301.4" y="1493" width="0.2" height="15.0" fill="rgb(245,34,38)" rx="2" ry="2" />
<text  x="304.43" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="628.4" y="1957" width="0.2" height="15.0" fill="rgb(233,227,13)" rx="2" ry="2" />
<text  x="631.39" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="955.9" y="1877" width="0.2" height="15.0" fill="rgb(225,221,13)" rx="2" ry="2" />
<text  x="958.95" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="371.7" y="1877" width="0.2" height="15.0" fill="rgb(224,215,42)" rx="2" ry="2" />
<text  x="374.70" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="136.7" y="181" width="0.2" height="15.0" fill="rgb(243,71,12)" rx="2" ry="2" />
<text  x="139.66" y="191.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1183.1" y="2005" width="0.3" height="15.0" fill="rgb(207,22,39)" rx="2" ry="2" />
<text  x="1186.05" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (15 samples, 0.25%)</title><rect x="55.9" y="1957" width="2.9" height="15.0" fill="rgb(237,7,22)" rx="2" ry="2" />
<text  x="58.86" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="955.9" y="1845" width="0.2" height="15.0" fill="rgb(246,38,6)" rx="2" ry="2" />
<text  x="958.95" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="443.8" y="1925" width="0.2" height="15.0" fill="rgb(216,146,23)" rx="2" ry="2" />
<text  x="446.77" y="1935.5" ></text>
</g>
<g >
<title>security_socket_accept (4 samples, 0.07%)</title><rect x="393.3" y="1957" width="0.8" height="15.0" fill="rgb(223,197,0)" rx="2" ry="2" />
<text  x="396.34" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1127.5" y="1877" width="0.4" height="15.0" fill="rgb(252,225,4)" rx="2" ry="2" />
<text  x="1130.47" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="898.2" y="2037" width="0.2" height="15.0" fill="rgb(223,114,9)" rx="2" ry="2" />
<text  x="901.18" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="654.4" y="1589" width="0.2" height="15.0" fill="rgb(210,17,47)" rx="2" ry="2" />
<text  x="657.39" y="1599.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="144.6" y="1941" width="0.2" height="15.0" fill="rgb(206,85,31)" rx="2" ry="2" />
<text  x="147.60" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="233.9" y="1893" width="0.2" height="15.0" fill="rgb(253,26,36)" rx="2" ry="2" />
<text  x="236.93" y="1903.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="762.8" y="1429" width="0.2" height="15.0" fill="rgb(224,207,6)" rx="2" ry="2" />
<text  x="765.79" y="1439.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="739.8" y="1365" width="0.2" height="15.0" fill="rgb(234,26,2)" rx="2" ry="2" />
<text  x="742.76" y="1375.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="734.4" y="1541" width="0.2" height="15.0" fill="rgb(208,142,0)" rx="2" ry="2" />
<text  x="737.40" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="1149.5" y="1989" width="0.4" height="15.0" fill="rgb(253,148,9)" rx="2" ry="2" />
<text  x="1152.50" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="428.5" y="2021" width="0.2" height="15.0" fill="rgb(231,117,16)" rx="2" ry="2" />
<text  x="431.48" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.05%)</title><rect x="117.8" y="1797" width="24.2" height="15.0" fill="rgb(235,83,2)" rx="2" ry="2" />
<text  x="120.80" y="1807.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (3 samples, 0.05%)</title><rect x="710.6" y="1957" width="0.6" height="15.0" fill="rgb(233,152,26)" rx="2" ry="2" />
<text  x="713.58" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="136.5" y="245" width="0.2" height="15.0" fill="rgb(205,117,50)" rx="2" ry="2" />
<text  x="139.46" y="255.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="654.4" y="1557" width="0.2" height="15.0" fill="rgb(227,196,36)" rx="2" ry="2" />
<text  x="657.39" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="520.0" y="1861" width="0.2" height="15.0" fill="rgb(244,136,53)" rx="2" ry="2" />
<text  x="523.00" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="822.5" y="1637" width="0.2" height="15.0" fill="rgb(216,126,29)" rx="2" ry="2" />
<text  x="825.54" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="320.7" y="1749" width="0.2" height="15.0" fill="rgb(206,216,0)" rx="2" ry="2" />
<text  x="323.68" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1016.5" y="2005" width="0.4" height="15.0" fill="rgb(235,151,25)" rx="2" ry="2" />
<text  x="1019.49" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.5" y="1941" width="0.2" height="15.0" fill="rgb(249,130,38)" rx="2" ry="2" />
<text  x="160.50" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="398.5" y="1893" width="0.2" height="15.0" fill="rgb(232,90,17)" rx="2" ry="2" />
<text  x="401.50" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1175.1" y="1973" width="0.2" height="15.0" fill="rgb(221,135,15)" rx="2" ry="2" />
<text  x="1178.11" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="842.6" y="1893" width="0.2" height="15.0" fill="rgb(220,200,5)" rx="2" ry="2" />
<text  x="845.59" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="536.9" y="1941" width="0.2" height="15.0" fill="rgb(226,53,21)" rx="2" ry="2" />
<text  x="539.87" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="157.5" y="1685" width="0.2" height="15.0" fill="rgb(217,210,32)" rx="2" ry="2" />
<text  x="160.50" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.12%)</title><rect x="301.6" y="1461" width="1.4" height="15.0" fill="rgb(249,33,53)" rx="2" ry="2" />
<text  x="304.63" y="1471.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="85.0" y="1925" width="0.2" height="15.0" fill="rgb(224,228,10)" rx="2" ry="2" />
<text  x="88.04" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="630.4" y="1637" width="0.2" height="15.0" fill="rgb(220,191,50)" rx="2" ry="2" />
<text  x="633.37" y="1647.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="932.7" y="1845" width="0.8" height="15.0" fill="rgb(222,17,5)" rx="2" ry="2" />
<text  x="935.72" y="1855.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1087.6" y="1925" width="0.2" height="15.0" fill="rgb(214,91,36)" rx="2" ry="2" />
<text  x="1090.56" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="543.8" y="1829" width="0.2" height="15.0" fill="rgb(220,205,9)" rx="2" ry="2" />
<text  x="546.82" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="607.5" y="1909" width="0.2" height="15.0" fill="rgb(209,159,16)" rx="2" ry="2" />
<text  x="610.54" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="142.6" y="1813" width="0.2" height="15.0" fill="rgb(242,221,28)" rx="2" ry="2" />
<text  x="145.61" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="529.1" y="1893" width="0.4" height="15.0" fill="rgb(209,77,45)" rx="2" ry="2" />
<text  x="532.13" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="825.3" y="1813" width="0.8" height="15.0" fill="rgb(219,9,36)" rx="2" ry="2" />
<text  x="828.32" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1183.1" y="2021" width="0.3" height="15.0" fill="rgb(222,214,26)" rx="2" ry="2" />
<text  x="1186.05" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="938.5" y="1941" width="0.6" height="15.0" fill="rgb(205,199,11)" rx="2" ry="2" />
<text  x="941.48" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="976.6" y="1957" width="0.2" height="15.0" fill="rgb(210,43,51)" rx="2" ry="2" />
<text  x="979.59" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (12 samples, 0.20%)</title><rect x="1142.6" y="2037" width="2.3" height="15.0" fill="rgb(219,1,24)" rx="2" ry="2" />
<text  x="1145.55" y="2047.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="184.9" y="2005" width="0.2" height="15.0" fill="rgb(219,146,16)" rx="2" ry="2" />
<text  x="187.90" y="2015.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 0.02%)</title><rect x="363.8" y="1957" width="0.2" height="15.0" fill="rgb(220,35,8)" rx="2" ry="2" />
<text  x="366.76" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="88.2" y="1909" width="0.2" height="15.0" fill="rgb(207,151,47)" rx="2" ry="2" />
<text  x="91.22" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (185 samples, 3.11%)</title><rect x="918.4" y="2021" width="36.8" height="15.0" fill="rgb(226,182,13)" rx="2" ry="2" />
<text  x="921.43" y="2031.5" >[un..</text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="60.4" y="1941" width="0.4" height="15.0" fill="rgb(254,108,42)" rx="2" ry="2" />
<text  x="63.42" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="118.8" y="1189" width="18.8" height="15.0" fill="rgb(233,23,11)" rx="2" ry="2" />
<text  x="121.79" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (116 samples, 1.95%)</title><rect x="118.0" y="1749" width="23.0" height="15.0" fill="rgb(228,80,34)" rx="2" ry="2" />
<text  x="120.99" y="1759.5" >[..</text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1162.6" y="1861" width="0.2" height="15.0" fill="rgb(235,105,0)" rx="2" ry="2" />
<text  x="1165.60" y="1871.5" ></text>
</g>
<g >
<title>__GI___setsockopt (16 samples, 0.27%)</title><rect x="227.2" y="1957" width="3.2" height="15.0" fill="rgb(229,171,7)" rx="2" ry="2" />
<text  x="230.18" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="825.5" y="1573" width="0.2" height="15.0" fill="rgb(244,221,18)" rx="2" ry="2" />
<text  x="828.52" y="1583.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="459.1" y="1973" width="0.3" height="15.0" fill="rgb(227,34,29)" rx="2" ry="2" />
<text  x="462.05" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="694.1" y="1605" width="0.2" height="15.0" fill="rgb(232,29,3)" rx="2" ry="2" />
<text  x="697.10" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1163.8" y="1877" width="0.2" height="15.0" fill="rgb(223,152,36)" rx="2" ry="2" />
<text  x="1166.80" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="490.2" y="1941" width="0.2" height="15.0" fill="rgb(240,124,41)" rx="2" ry="2" />
<text  x="493.22" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1078.6" y="1669" width="0.2" height="15.0" fill="rgb(252,33,45)" rx="2" ry="2" />
<text  x="1081.63" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="91.0" y="1909" width="0.6" height="15.0" fill="rgb(237,195,19)" rx="2" ry="2" />
<text  x="94.00" y="1919.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="935.3" y="1893" width="0.2" height="15.0" fill="rgb(244,157,29)" rx="2" ry="2" />
<text  x="938.30" y="1903.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1180.9" y="1957" width="0.2" height="15.0" fill="rgb(243,178,2)" rx="2" ry="2" />
<text  x="1183.87" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="706.0" y="1989" width="0.2" height="15.0" fill="rgb(217,131,24)" rx="2" ry="2" />
<text  x="709.01" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1172.7" y="1877" width="0.2" height="15.0" fill="rgb(254,81,33)" rx="2" ry="2" />
<text  x="1175.73" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="493.2" y="1845" width="0.2" height="15.0" fill="rgb(220,131,33)" rx="2" ry="2" />
<text  x="496.20" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (15 samples, 0.25%)</title><rect x="78.7" y="1941" width="3.0" height="15.0" fill="rgb(206,224,37)" rx="2" ry="2" />
<text  x="81.69" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="72.1" y="1893" width="0.2" height="15.0" fill="rgb(226,100,15)" rx="2" ry="2" />
<text  x="75.14" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1101.3" y="1813" width="0.2" height="15.0" fill="rgb(251,71,38)" rx="2" ry="2" />
<text  x="1104.26" y="1823.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="93.0" y="1813" width="0.2" height="15.0" fill="rgb(221,139,52)" rx="2" ry="2" />
<text  x="95.98" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="917.4" y="1925" width="0.2" height="15.0" fill="rgb(219,115,36)" rx="2" ry="2" />
<text  x="920.43" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="630.4" y="1749" width="0.2" height="15.0" fill="rgb(243,159,6)" rx="2" ry="2" />
<text  x="633.37" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="443.0" y="1909" width="0.2" height="15.0" fill="rgb(238,119,4)" rx="2" ry="2" />
<text  x="445.97" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="973.8" y="1925" width="0.2" height="15.0" fill="rgb(222,105,26)" rx="2" ry="2" />
<text  x="976.81" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="55.7" y="1957" width="0.2" height="15.0" fill="rgb(236,24,49)" rx="2" ry="2" />
<text  x="58.66" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="968.1" y="1893" width="0.2" height="15.0" fill="rgb(213,175,1)" rx="2" ry="2" />
<text  x="971.06" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="134.9" y="69" width="0.2" height="15.0" fill="rgb(231,8,2)" rx="2" ry="2" />
<text  x="137.87" y="79.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (3 samples, 0.05%)</title><rect x="83.8" y="1941" width="0.6" height="15.0" fill="rgb(231,104,19)" rx="2" ry="2" />
<text  x="86.85" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1002.4" y="1989" width="0.2" height="15.0" fill="rgb(253,47,12)" rx="2" ry="2" />
<text  x="1005.40" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (68 samples, 1.14%)</title><rect x="1153.5" y="2021" width="13.5" height="15.0" fill="rgb(233,84,10)" rx="2" ry="2" />
<text  x="1156.47" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="836.6" y="1797" width="0.2" height="15.0" fill="rgb(210,222,50)" rx="2" ry="2" />
<text  x="839.64" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="131.3" y="37" width="0.4" height="15.0" fill="rgb(218,5,6)" rx="2" ry="2" />
<text  x="134.30" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="547.6" y="1669" width="0.2" height="15.0" fill="rgb(214,14,8)" rx="2" ry="2" />
<text  x="550.59" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="247.4" y="1717" width="0.2" height="15.0" fill="rgb(206,41,49)" rx="2" ry="2" />
<text  x="250.43" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="940.5" y="1845" width="0.2" height="15.0" fill="rgb(227,45,32)" rx="2" ry="2" />
<text  x="943.46" y="1855.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="1018.3" y="1749" width="0.2" height="15.0" fill="rgb(223,47,10)" rx="2" ry="2" />
<text  x="1021.28" y="1759.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="731.6" y="1397" width="0.2" height="15.0" fill="rgb(250,109,6)" rx="2" ry="2" />
<text  x="734.62" y="1407.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="161.5" y="1909" width="0.2" height="15.0" fill="rgb(248,203,43)" rx="2" ry="2" />
<text  x="164.47" y="1919.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="693.9" y="1861" width="0.2" height="15.0" fill="rgb(249,142,25)" rx="2" ry="2" />
<text  x="696.90" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1090.3" y="1909" width="0.2" height="15.0" fill="rgb(247,190,46)" rx="2" ry="2" />
<text  x="1093.34" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="527.9" y="1973" width="0.2" height="15.0" fill="rgb(232,146,2)" rx="2" ry="2" />
<text  x="530.94" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="745.9" y="1445" width="0.2" height="15.0" fill="rgb(212,146,5)" rx="2" ry="2" />
<text  x="748.91" y="1455.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="136.9" y="229" width="0.2" height="15.0" fill="rgb(243,121,45)" rx="2" ry="2" />
<text  x="139.85" y="239.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="167.0" y="1685" width="0.2" height="15.0" fill="rgb(246,158,8)" rx="2" ry="2" />
<text  x="170.03" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1127.5" y="1957" width="0.4" height="15.0" fill="rgb(251,109,47)" rx="2" ry="2" />
<text  x="1130.47" y="1967.5" ></text>
</g>
<g >
<title>kfree (12 samples, 0.20%)</title><rect x="1110.8" y="1445" width="2.4" height="15.0" fill="rgb(236,43,43)" rx="2" ry="2" />
<text  x="1113.79" y="1455.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="29.7" y="1957" width="0.2" height="15.0" fill="rgb(207,69,32)" rx="2" ry="2" />
<text  x="32.65" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="537.1" y="1909" width="0.2" height="15.0" fill="rgb(233,14,38)" rx="2" ry="2" />
<text  x="540.07" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="654.4" y="1845" width="0.2" height="15.0" fill="rgb(251,37,35)" rx="2" ry="2" />
<text  x="657.39" y="1855.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.2" y="1909" width="0.8" height="15.0" fill="rgb(229,199,22)" rx="2" ry="2" />
<text  x="14.19" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="841.0" y="1893" width="0.2" height="15.0" fill="rgb(217,164,16)" rx="2" ry="2" />
<text  x="844.00" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="240.9" y="1797" width="0.4" height="15.0" fill="rgb(252,202,10)" rx="2" ry="2" />
<text  x="243.88" y="1807.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="1096.7" y="1893" width="0.8" height="15.0" fill="rgb(246,104,3)" rx="2" ry="2" />
<text  x="1099.70" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="247.4" y="1781" width="0.2" height="15.0" fill="rgb(211,193,18)" rx="2" ry="2" />
<text  x="250.43" y="1791.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="899.6" y="1653" width="0.2" height="15.0" fill="rgb(218,66,0)" rx="2" ry="2" />
<text  x="902.57" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="687.9" y="1813" width="0.2" height="15.0" fill="rgb(215,3,6)" rx="2" ry="2" />
<text  x="690.94" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.31%)</title><rect x="632.0" y="2005" width="15.4" height="15.0" fill="rgb(207,25,13)" rx="2" ry="2" />
<text  x="634.96" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.19%)</title><rect x="847.6" y="1941" width="2.1" height="15.0" fill="rgb(229,75,47)" rx="2" ry="2" />
<text  x="850.55" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (71 samples, 1.19%)</title><rect x="232.5" y="1941" width="14.1" height="15.0" fill="rgb(236,181,0)" rx="2" ry="2" />
<text  x="235.54" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="610.3" y="1797" width="0.2" height="15.0" fill="rgb(214,14,47)" rx="2" ry="2" />
<text  x="613.32" y="1807.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="290.5" y="1845" width="0.2" height="15.0" fill="rgb(234,23,5)" rx="2" ry="2" />
<text  x="293.51" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="822.5" y="1717" width="0.2" height="15.0" fill="rgb(248,217,20)" rx="2" ry="2" />
<text  x="825.54" y="1727.5" ></text>
</g>
<g >
<title>sys_accept4 (289 samples, 4.86%)</title><rect x="361.0" y="1989" width="57.4" height="15.0" fill="rgb(252,2,6)" rx="2" ry="2" />
<text  x="363.98" y="1999.5" >sys_ac..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (4 samples, 0.07%)</title><rect x="135.1" y="213" width="0.8" height="15.0" fill="rgb(216,6,33)" rx="2" ry="2" />
<text  x="138.07" y="223.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="52.1" y="1877" width="0.2" height="15.0" fill="rgb(205,182,22)" rx="2" ry="2" />
<text  x="55.09" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="681.0" y="2021" width="0.2" height="15.0" fill="rgb(222,23,36)" rx="2" ry="2" />
<text  x="684.00" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="547.6" y="1685" width="0.2" height="15.0" fill="rgb(245,105,51)" rx="2" ry="2" />
<text  x="550.59" y="1695.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="510.9" y="1829" width="0.2" height="15.0" fill="rgb(224,12,40)" rx="2" ry="2" />
<text  x="513.86" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="825.1" y="1781" width="0.2" height="15.0" fill="rgb(211,99,39)" rx="2" ry="2" />
<text  x="828.12" y="1791.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="462.4" y="1941" width="0.4" height="15.0" fill="rgb(239,166,39)" rx="2" ry="2" />
<text  x="465.43" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="925.4" y="1877" width="0.8" height="15.0" fill="rgb(245,157,4)" rx="2" ry="2" />
<text  x="928.37" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (42 samples, 0.71%)</title><rect x="54.1" y="1973" width="8.3" height="15.0" fill="rgb(251,185,16)" rx="2" ry="2" />
<text  x="57.07" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="67.0" y="1813" width="0.2" height="15.0" fill="rgb(216,21,4)" rx="2" ry="2" />
<text  x="69.98" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="250.2" y="1813" width="0.2" height="15.0" fill="rgb(214,116,25)" rx="2" ry="2" />
<text  x="253.21" y="1823.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 0.02%)</title><rect x="755.8" y="1733" width="0.2" height="15.0" fill="rgb(227,105,42)" rx="2" ry="2" />
<text  x="758.84" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="138.0" y="1061" width="0.2" height="15.0" fill="rgb(240,192,53)" rx="2" ry="2" />
<text  x="141.05" y="1071.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="136.5" y="133" width="0.2" height="15.0" fill="rgb(249,2,25)" rx="2" ry="2" />
<text  x="139.46" y="143.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="248.8" y="1957" width="0.2" height="15.0" fill="rgb(230,216,32)" rx="2" ry="2" />
<text  x="251.82" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="515.2" y="1989" width="0.2" height="15.0" fill="rgb(205,82,3)" rx="2" ry="2" />
<text  x="518.23" y="1999.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (4 samples, 0.07%)</title><rect x="339.5" y="1893" width="0.8" height="15.0" fill="rgb(228,208,35)" rx="2" ry="2" />
<text  x="342.54" y="1903.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (389 samples, 6.54%)</title><rect x="1049.1" y="1989" width="77.2" height="15.0" fill="rgb(211,3,13)" rx="2" ry="2" />
<text  x="1052.05" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="119.2" y="261" width="16.9" height="15.0" fill="rgb(217,135,1)" rx="2" ry="2" />
<text  x="122.19" y="271.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1183.1" y="1797" width="0.2" height="15.0" fill="rgb(211,134,32)" rx="2" ry="2" />
<text  x="1186.05" y="1807.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="80.1" y="1605" width="0.2" height="15.0" fill="rgb(234,120,8)" rx="2" ry="2" />
<text  x="83.08" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1086.8" y="1749" width="0.2" height="15.0" fill="rgb(247,209,15)" rx="2" ry="2" />
<text  x="1089.77" y="1759.5" ></text>
</g>
</g>
</svg>
