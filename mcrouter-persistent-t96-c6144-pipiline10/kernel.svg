<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="196.4" y="1861" width="0.2" height="15.0" fill="rgb(241,45,11)" rx="2" ry="2" />
<text  x="199.42" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (18 samples, 0.30%)</title><rect x="367.4" y="1877" width="3.5" height="15.0" fill="rgb(232,89,1)" rx="2" ry="2" />
<text  x="370.37" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="370.9" y="1877" width="0.2" height="15.0" fill="rgb(253,60,23)" rx="2" ry="2" />
<text  x="373.94" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="197.4" y="1925" width="0.2" height="15.0" fill="rgb(250,177,40)" rx="2" ry="2" />
<text  x="200.41" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="483.6" y="1893" width="0.2" height="15.0" fill="rgb(233,174,35)" rx="2" ry="2" />
<text  x="486.59" y="1903.5" ></text>
</g>
<g >
<title>__sys_sendmsg (337 samples, 5.66%)</title><rect x="229.7" y="1973" width="66.9" height="15.0" fill="rgb(223,157,7)" rx="2" ry="2" />
<text  x="232.74" y="1983.5" >__sys_s..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="192.9" y="1957" width="0.1" height="15.0" fill="rgb(222,40,35)" rx="2" ry="2" />
<text  x="195.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="853" width="45.0" height="15.0" fill="rgb(226,229,30)" rx="2" ry="2" />
<text  x="63.77" y="863.5" >[unk..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="589.7" y="2005" width="1.2" height="15.0" fill="rgb(233,66,14)" rx="2" ry="2" />
<text  x="592.69" y="2015.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="541.5" y="1845" width="0.8" height="15.0" fill="rgb(206,132,34)" rx="2" ry="2" />
<text  x="544.50" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="625.0" y="1893" width="0.2" height="15.0" fill="rgb(246,191,53)" rx="2" ry="2" />
<text  x="627.99" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="598.8" y="1973" width="0.2" height="15.0" fill="rgb(252,82,43)" rx="2" ry="2" />
<text  x="601.81" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1022.0" y="1941" width="0.2" height="15.0" fill="rgb(238,147,34)" rx="2" ry="2" />
<text  x="1025.02" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (4 samples, 0.07%)</title><rect x="1048.0" y="1893" width="0.8" height="15.0" fill="rgb(217,130,14)" rx="2" ry="2" />
<text  x="1051.00" y="1903.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="233.5" y="1909" width="0.2" height="15.0" fill="rgb(229,170,11)" rx="2" ry="2" />
<text  x="236.51" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (3 samples, 0.05%)</title><rect x="63.0" y="37" width="0.5" height="15.0" fill="rgb(241,213,27)" rx="2" ry="2" />
<text  x="65.95" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1099.4" y="1973" width="0.2" height="15.0" fill="rgb(235,73,16)" rx="2" ry="2" />
<text  x="1102.37" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="875.9" y="1989" width="0.2" height="15.0" fill="rgb(233,205,7)" rx="2" ry="2" />
<text  x="878.86" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="456.8" y="1989" width="0.6" height="15.0" fill="rgb(254,34,53)" rx="2" ry="2" />
<text  x="459.81" y="1999.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.08%)</title><rect x="1143.4" y="1989" width="1.0" height="15.0" fill="rgb(218,99,15)" rx="2" ry="2" />
<text  x="1146.39" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="90.5" y="37" width="0.2" height="15.0" fill="rgb(235,41,14)" rx="2" ry="2" />
<text  x="93.52" y="47.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="12.6" y="1893" width="1.0" height="15.0" fill="rgb(230,9,36)" rx="2" ry="2" />
<text  x="15.58" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="487.0" y="1925" width="0.4" height="15.0" fill="rgb(226,107,32)" rx="2" ry="2" />
<text  x="489.96" y="1935.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1075.6" y="1909" width="0.2" height="15.0" fill="rgb(234,142,13)" rx="2" ry="2" />
<text  x="1078.57" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="596.6" y="1957" width="0.2" height="15.0" fill="rgb(217,188,50)" rx="2" ry="2" />
<text  x="599.63" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (227 samples, 3.82%)</title><rect x="1039.5" y="2021" width="45.0" height="15.0" fill="rgb(218,165,49)" rx="2" ry="2" />
<text  x="1042.48" y="2031.5" >do_s..</text>
</g>
<g >
<title>ep_item_poll.isra.12 (31 samples, 0.52%)</title><rect x="302.1" y="1925" width="6.2" height="15.0" fill="rgb(236,21,8)" rx="2" ry="2" />
<text  x="305.12" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="386.0" y="1941" width="0.2" height="15.0" fill="rgb(249,98,41)" rx="2" ry="2" />
<text  x="389.01" y="1951.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (1 samples, 0.02%)</title><rect x="253.1" y="1861" width="0.2" height="15.0" fill="rgb(234,48,4)" rx="2" ry="2" />
<text  x="256.14" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="215.3" y="2021" width="0.2" height="15.0" fill="rgb(249,207,10)" rx="2" ry="2" />
<text  x="218.26" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (142 samples, 2.39%)</title><rect x="255.3" y="1813" width="28.2" height="15.0" fill="rgb(248,34,26)" rx="2" ry="2" />
<text  x="258.32" y="1823.5" >i..</text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="1037.1" y="2037" width="2.0" height="15.0" fill="rgb(254,197,33)" rx="2" ry="2" />
<text  x="1040.10" y="2047.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="627.4" y="1877" width="0.2" height="15.0" fill="rgb(253,90,15)" rx="2" ry="2" />
<text  x="630.37" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (9 samples, 0.15%)</title><rect x="609.7" y="1973" width="1.8" height="15.0" fill="rgb(233,161,30)" rx="2" ry="2" />
<text  x="612.72" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="878.2" y="2005" width="2.4" height="15.0" fill="rgb(212,26,7)" rx="2" ry="2" />
<text  x="881.24" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="384.8" y="1957" width="0.2" height="15.0" fill="rgb(222,145,42)" rx="2" ry="2" />
<text  x="387.82" y="1967.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="586.3" y="1925" width="0.2" height="15.0" fill="rgb(223,185,39)" rx="2" ry="2" />
<text  x="589.32" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="928.6" y="1973" width="0.8" height="15.0" fill="rgb(250,219,13)" rx="2" ry="2" />
<text  x="931.62" y="1983.5" ></text>
</g>
<g >
<title>malloc (16 samples, 0.27%)</title><rect x="211.9" y="2021" width="3.2" height="15.0" fill="rgb(246,163,41)" rx="2" ry="2" />
<text  x="214.89" y="2031.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="953.2" y="1893" width="0.4" height="15.0" fill="rgb(242,215,20)" rx="2" ry="2" />
<text  x="956.21" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="186.5" y="1957" width="0.2" height="15.0" fill="rgb(211,180,25)" rx="2" ry="2" />
<text  x="189.50" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="301.5" y="2021" width="0.2" height="15.0" fill="rgb(229,74,6)" rx="2" ry="2" />
<text  x="304.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1253" width="45.0" height="15.0" fill="rgb(206,79,31)" rx="2" ry="2" />
<text  x="63.77" y="1263.5" >[unk..</text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="1188.2" y="2037" width="1.0" height="15.0" fill="rgb(221,229,35)" rx="2" ry="2" />
<text  x="1191.22" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="947.9" y="1957" width="0.2" height="15.0" fill="rgb(252,104,39)" rx="2" ry="2" />
<text  x="950.85" y="1967.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="246.6" y="1813" width="0.2" height="15.0" fill="rgb(241,67,8)" rx="2" ry="2" />
<text  x="249.59" y="1823.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="625.0" y="1861" width="0.2" height="15.0" fill="rgb(223,89,39)" rx="2" ry="2" />
<text  x="627.99" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.6" y="1829" width="0.8" height="15.0" fill="rgb(240,168,16)" rx="2" ry="2" />
<text  x="14.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="357" width="45.0" height="15.0" fill="rgb(234,148,26)" rx="2" ry="2" />
<text  x="63.77" y="367.5" >[unk..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="596.6" y="1973" width="0.2" height="15.0" fill="rgb(206,10,5)" rx="2" ry="2" />
<text  x="599.63" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1445" width="45.0" height="15.0" fill="rgb(226,97,50)" rx="2" ry="2" />
<text  x="63.77" y="1455.5" >[unk..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (19 samples, 0.32%)</title><rect x="182.9" y="2005" width="3.8" height="15.0" fill="rgb(214,229,23)" rx="2" ry="2" />
<text  x="185.93" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.5" y="1989" width="0.2" height="15.0" fill="rgb(246,111,11)" rx="2" ry="2" />
<text  x="232.54" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="21.1" y="1989" width="1.4" height="15.0" fill="rgb(250,27,45)" rx="2" ry="2" />
<text  x="24.11" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="194.4" y="1989" width="0.2" height="15.0" fill="rgb(245,140,8)" rx="2" ry="2" />
<text  x="197.44" y="1999.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="1180.3" y="2053" width="1.0" height="15.0" fill="rgb(229,162,25)" rx="2" ry="2" />
<text  x="1183.28" y="2063.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="179.2" y="2005" width="0.4" height="15.0" fill="rgb(212,134,14)" rx="2" ry="2" />
<text  x="182.17" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="606.7" y="2021" width="0.8" height="15.0" fill="rgb(207,154,42)" rx="2" ry="2" />
<text  x="609.74" y="2031.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="596.6" y="1877" width="0.2" height="15.0" fill="rgb(213,69,6)" rx="2" ry="2" />
<text  x="599.63" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="658.3" y="1989" width="0.4" height="15.0" fill="rgb(230,16,6)" rx="2" ry="2" />
<text  x="661.31" y="1999.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="693.4" y="1861" width="0.2" height="15.0" fill="rgb(232,88,50)" rx="2" ry="2" />
<text  x="696.41" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (320 samples, 5.38%)</title><rect x="746.8" y="1989" width="63.4" height="15.0" fill="rgb(229,172,21)" rx="2" ry="2" />
<text  x="749.76" y="1999.5" >folly:..</text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="950.2" y="1925" width="0.2" height="15.0" fill="rgb(229,41,54)" rx="2" ry="2" />
<text  x="953.23" y="1935.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="488.5" y="1877" width="0.2" height="15.0" fill="rgb(216,168,14)" rx="2" ry="2" />
<text  x="491.54" y="1887.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="250.4" y="1829" width="0.4" height="15.0" fill="rgb(206,228,10)" rx="2" ry="2" />
<text  x="253.36" y="1839.5" ></text>
</g>
<g >
<title>free (51 samples, 0.86%)</title><rect x="1012.1" y="2037" width="10.1" height="15.0" fill="rgb(250,190,47)" rx="2" ry="2" />
<text  x="1015.11" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="246.2" y="1605" width="0.2" height="15.0" fill="rgb(254,149,2)" rx="2" ry="2" />
<text  x="249.20" y="1615.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="791.2" y="1973" width="0.2" height="15.0" fill="rgb(219,43,40)" rx="2" ry="2" />
<text  x="794.18" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (153 samples, 2.57%)</title><rect x="955.8" y="1925" width="30.3" height="15.0" fill="rgb(249,181,37)" rx="2" ry="2" />
<text  x="958.78" y="1935.5" >fo..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (7 samples, 0.12%)</title><rect x="823.3" y="2005" width="1.4" height="15.0" fill="rgb(223,63,29)" rx="2" ry="2" />
<text  x="826.31" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1030.7" y="1973" width="0.2" height="15.0" fill="rgb(253,101,4)" rx="2" ry="2" />
<text  x="1033.75" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (4 samples, 0.07%)</title><rect x="680.5" y="1925" width="0.8" height="15.0" fill="rgb(242,67,49)" rx="2" ry="2" />
<text  x="683.52" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (84 samples, 1.41%)</title><rect x="471.7" y="1973" width="16.6" height="15.0" fill="rgb(247,18,26)" rx="2" ry="2" />
<text  x="474.69" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (67 samples, 1.13%)</title><rect x="333.7" y="1989" width="13.2" height="15.0" fill="rgb(217,4,16)" rx="2" ry="2" />
<text  x="336.66" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.27%)</title><rect x="182.9" y="1989" width="3.2" height="15.0" fill="rgb(236,71,1)" rx="2" ry="2" />
<text  x="185.93" y="1999.5" ></text>
</g>
<g >
<title>process_backlog (91 samples, 1.53%)</title><rect x="259.1" y="1653" width="18.0" height="15.0" fill="rgb(206,69,46)" rx="2" ry="2" />
<text  x="262.09" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (6 samples, 0.10%)</title><rect x="374.5" y="2005" width="1.2" height="15.0" fill="rgb(252,15,9)" rx="2" ry="2" />
<text  x="377.51" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="723.8" y="1893" width="0.1" height="15.0" fill="rgb(209,29,27)" rx="2" ry="2" />
<text  x="726.75" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (5 samples, 0.08%)</title><rect x="1171.8" y="2053" width="0.9" height="15.0" fill="rgb(224,25,38)" rx="2" ry="2" />
<text  x="1174.75" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="1034.3" y="1957" width="0.2" height="15.0" fill="rgb(240,83,7)" rx="2" ry="2" />
<text  x="1037.32" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (241 samples, 4.05%)</title><rect x="685.1" y="1973" width="47.8" height="15.0" fill="rgb(220,193,8)" rx="2" ry="2" />
<text  x="688.08" y="1983.5" >foll..</text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (6 samples, 0.10%)</title><rect x="96.5" y="53" width="1.2" height="15.0" fill="rgb(207,36,30)" rx="2" ry="2" />
<text  x="99.47" y="63.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1178.3" y="2021" width="1.0" height="15.0" fill="rgb(244,150,25)" rx="2" ry="2" />
<text  x="1181.30" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (7 samples, 0.12%)</title><rect x="203.2" y="2021" width="1.4" height="15.0" fill="rgb(251,37,41)" rx="2" ry="2" />
<text  x="206.16" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (7 samples, 0.12%)</title><rect x="380.7" y="2005" width="1.3" height="15.0" fill="rgb(222,16,44)" rx="2" ry="2" />
<text  x="383.66" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.6" y="1925" width="0.8" height="15.0" fill="rgb(223,194,29)" rx="2" ry="2" />
<text  x="14.59" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="123.2" y="1925" width="0.2" height="15.0" fill="rgb(208,73,47)" rx="2" ry="2" />
<text  x="126.24" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(236,81,10)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="448.1" y="1989" width="0.2" height="15.0" fill="rgb(235,6,44)" rx="2" ry="2" />
<text  x="451.09" y="1999.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="403.1" y="2005" width="0.4" height="15.0" fill="rgb(216,77,9)" rx="2" ry="2" />
<text  x="406.07" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="986.5" y="1909" width="0.2" height="15.0" fill="rgb(238,84,5)" rx="2" ry="2" />
<text  x="989.52" y="1919.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1148.7" y="1909" width="0.2" height="15.0" fill="rgb(215,160,23)" rx="2" ry="2" />
<text  x="1151.75" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="720.6" y="1829" width="0.2" height="15.0" fill="rgb(242,9,36)" rx="2" ry="2" />
<text  x="723.58" y="1839.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="612.1" y="1973" width="0.2" height="15.0" fill="rgb(246,95,54)" rx="2" ry="2" />
<text  x="615.10" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (6 samples, 0.10%)</title><rect x="1100.0" y="2053" width="1.2" height="15.0" fill="rgb(206,78,20)" rx="2" ry="2" />
<text  x="1102.96" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="392.6" y="2021" width="0.8" height="15.0" fill="rgb(220,39,9)" rx="2" ry="2" />
<text  x="395.56" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1178.1" y="2021" width="0.2" height="15.0" fill="rgb(239,26,40)" rx="2" ry="2" />
<text  x="1181.10" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (61 samples, 1.03%)</title><rect x="894.9" y="2037" width="12.1" height="15.0" fill="rgb(231,228,2)" rx="2" ry="2" />
<text  x="897.90" y="2047.5" ></text>
</g>
<g >
<title>rb_erase (11 samples, 0.18%)</title><rect x="273.4" y="1461" width="2.1" height="15.0" fill="rgb(223,128,16)" rx="2" ry="2" />
<text  x="276.37" y="1471.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="391.6" y="1941" width="0.2" height="15.0" fill="rgb(213,185,51)" rx="2" ry="2" />
<text  x="394.57" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="199.2" y="1893" width="0.2" height="15.0" fill="rgb(232,221,48)" rx="2" ry="2" />
<text  x="202.20" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (196 samples, 3.29%)</title><rect x="692.0" y="1925" width="38.9" height="15.0" fill="rgb(244,160,36)" rx="2" ry="2" />
<text  x="695.02" y="1935.5" >fol..</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="339.2" y="1973" width="0.2" height="15.0" fill="rgb(220,85,32)" rx="2" ry="2" />
<text  x="342.21" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (33 samples, 0.55%)</title><rect x="650.8" y="2005" width="6.5" height="15.0" fill="rgb(232,27,41)" rx="2" ry="2" />
<text  x="653.77" y="2015.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="308.5" y="1941" width="0.2" height="15.0" fill="rgb(229,187,54)" rx="2" ry="2" />
<text  x="311.47" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="193.0" y="1989" width="0.2" height="15.0" fill="rgb(226,201,10)" rx="2" ry="2" />
<text  x="196.05" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (229 samples, 3.85%)</title><rect x="1039.1" y="2037" width="45.4" height="15.0" fill="rgb(218,185,5)" rx="2" ry="2" />
<text  x="1042.08" y="2047.5" >entr..</text>
</g>
<g >
<title>__local_bh_enable_ip (93 samples, 1.56%)</title><rect x="258.7" y="1733" width="18.4" height="15.0" fill="rgb(211,144,47)" rx="2" ry="2" />
<text  x="261.69" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="866.7" y="1973" width="1.4" height="15.0" fill="rgb(217,68,54)" rx="2" ry="2" />
<text  x="869.74" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1048.8" y="1893" width="0.2" height="15.0" fill="rgb(215,166,38)" rx="2" ry="2" />
<text  x="1051.80" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="99.4" y="53" width="0.2" height="15.0" fill="rgb(210,126,14)" rx="2" ry="2" />
<text  x="102.44" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="379.1" y="1973" width="0.6" height="15.0" fill="rgb(235,153,50)" rx="2" ry="2" />
<text  x="382.07" y="1983.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="702.5" y="1893" width="0.2" height="15.0" fill="rgb(225,25,50)" rx="2" ry="2" />
<text  x="705.53" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="82.0" y="37" width="0.2" height="15.0" fill="rgb(210,177,6)" rx="2" ry="2" />
<text  x="84.99" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="382.2" y="2021" width="0.2" height="15.0" fill="rgb(214,194,52)" rx="2" ry="2" />
<text  x="385.25" y="2031.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (7 samples, 0.12%)</title><rect x="292.0" y="1909" width="1.4" height="15.0" fill="rgb(220,184,37)" rx="2" ry="2" />
<text  x="295.01" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="641.1" y="2037" width="0.2" height="15.0" fill="rgb(233,204,51)" rx="2" ry="2" />
<text  x="644.05" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="126.0" y="1925" width="0.2" height="15.0" fill="rgb(252,214,20)" rx="2" ry="2" />
<text  x="129.02" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="309.9" y="2037" width="0.2" height="15.0" fill="rgb(218,48,10)" rx="2" ry="2" />
<text  x="312.86" y="2047.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1022.0" y="1957" width="0.2" height="15.0" fill="rgb(243,144,7)" rx="2" ry="2" />
<text  x="1025.02" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="594.4" y="1893" width="0.2" height="15.0" fill="rgb(207,210,34)" rx="2" ry="2" />
<text  x="597.45" y="1903.5" ></text>
</g>
<g >
<title>__fdget (15 samples, 0.25%)</title><rect x="293.6" y="1941" width="3.0" height="15.0" fill="rgb(227,67,53)" rx="2" ry="2" />
<text  x="296.60" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (17 samples, 0.29%)</title><rect x="602.4" y="2005" width="3.4" height="15.0" fill="rgb(208,107,29)" rx="2" ry="2" />
<text  x="605.38" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="729.1" y="1909" width="0.2" height="15.0" fill="rgb(236,21,2)" rx="2" ry="2" />
<text  x="732.11" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="593.9" y="1925" width="0.3" height="15.0" fill="rgb(250,219,53)" rx="2" ry="2" />
<text  x="596.85" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="99.2" y="37" width="0.2" height="15.0" fill="rgb(215,10,6)" rx="2" ry="2" />
<text  x="102.24" y="47.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(248,39,26)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeoutExpired (1 samples, 0.02%)</title><rect x="15.0" y="2021" width="0.2" height="15.0" fill="rgb(215,17,21)" rx="2" ry="2" />
<text  x="17.96" y="2031.5" ></text>
</g>
<g >
<title>tcp_rack_advance (3 samples, 0.05%)</title><rect x="276.1" y="1477" width="0.6" height="15.0" fill="rgb(222,28,10)" rx="2" ry="2" />
<text  x="279.14" y="1487.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="287.1" y="1877" width="0.2" height="15.0" fill="rgb(229,200,46)" rx="2" ry="2" />
<text  x="290.05" y="1887.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="240.8" y="1861" width="0.4" height="15.0" fill="rgb(227,26,37)" rx="2" ry="2" />
<text  x="243.84" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="693.4" y="1893" width="0.2" height="15.0" fill="rgb(227,198,53)" rx="2" ry="2" />
<text  x="696.41" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="1140.4" y="2005" width="0.6" height="15.0" fill="rgb(227,51,26)" rx="2" ry="2" />
<text  x="1143.42" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="246.2" y="1637" width="0.2" height="15.0" fill="rgb(241,131,29)" rx="2" ry="2" />
<text  x="249.20" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="880.8" y="2005" width="0.2" height="15.0" fill="rgb(216,126,18)" rx="2" ry="2" />
<text  x="883.82" y="2015.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="308.9" y="2037" width="0.2" height="15.0" fill="rgb(247,161,36)" rx="2" ry="2" />
<text  x="311.87" y="2047.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="1121.4" y="1989" width="0.2" height="15.0" fill="rgb(253,118,19)" rx="2" ry="2" />
<text  x="1124.38" y="1999.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (4 samples, 0.07%)</title><rect x="232.3" y="1941" width="0.8" height="15.0" fill="rgb(221,125,16)" rx="2" ry="2" />
<text  x="235.32" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (7 samples, 0.12%)</title><rect x="675.6" y="1909" width="1.3" height="15.0" fill="rgb(234,104,53)" rx="2" ry="2" />
<text  x="678.56" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (22 samples, 0.37%)</title><rect x="975.0" y="1893" width="4.4" height="15.0" fill="rgb(250,120,1)" rx="2" ry="2" />
<text  x="978.02" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (14 samples, 0.24%)</title><rect x="383.4" y="1989" width="2.8" height="15.0" fill="rgb(233,224,31)" rx="2" ry="2" />
<text  x="386.44" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="476.6" y="1941" width="0.2" height="15.0" fill="rgb(212,180,50)" rx="2" ry="2" />
<text  x="479.65" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.3" y="1909" width="0.2" height="15.0" fill="rgb(213,88,14)" rx="2" ry="2" />
<text  x="478.26" y="1919.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="569.9" y="1861" width="0.2" height="15.0" fill="rgb(225,168,43)" rx="2" ry="2" />
<text  x="572.86" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="88.7" y="37" width="1.8" height="15.0" fill="rgb(253,12,12)" rx="2" ry="2" />
<text  x="91.73" y="47.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (8 samples, 0.13%)</title><rect x="215.9" y="2037" width="1.5" height="15.0" fill="rgb(242,55,15)" rx="2" ry="2" />
<text  x="218.86" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="384.4" y="1941" width="0.2" height="15.0" fill="rgb(223,38,53)" rx="2" ry="2" />
<text  x="387.43" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="83.0" y="37" width="0.2" height="15.0" fill="rgb(222,171,51)" rx="2" ry="2" />
<text  x="85.98" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1022.0" y="1989" width="0.2" height="15.0" fill="rgb(247,55,8)" rx="2" ry="2" />
<text  x="1025.02" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="735.1" y="1941" width="0.4" height="15.0" fill="rgb(251,136,6)" rx="2" ry="2" />
<text  x="738.06" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.15%)</title><rect x="278.7" y="1685" width="1.8" height="15.0" fill="rgb(238,223,38)" rx="2" ry="2" />
<text  x="281.72" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="922.9" y="1957" width="0.2" height="15.0" fill="rgb(241,123,25)" rx="2" ry="2" />
<text  x="925.86" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="105.4" y="69" width="0.2" height="15.0" fill="rgb(213,47,17)" rx="2" ry="2" />
<text  x="108.39" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="887.8" y="2005" width="0.4" height="15.0" fill="rgb(230,194,53)" rx="2" ry="2" />
<text  x="890.76" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (7 samples, 0.12%)</title><rect x="159.5" y="1941" width="1.4" height="15.0" fill="rgb(226,181,26)" rx="2" ry="2" />
<text  x="162.53" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="638.3" y="2005" width="0.2" height="15.0" fill="rgb(215,152,16)" rx="2" ry="2" />
<text  x="641.28" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (9 samples, 0.15%)</title><rect x="863.6" y="2005" width="1.8" height="15.0" fill="rgb(254,137,51)" rx="2" ry="2" />
<text  x="866.57" y="2015.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="659.5" y="2005" width="0.2" height="15.0" fill="rgb(240,142,19)" rx="2" ry="2" />
<text  x="662.50" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="594.2" y="1925" width="0.4" height="15.0" fill="rgb(206,112,34)" rx="2" ry="2" />
<text  x="597.25" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="922.9" y="1925" width="0.2" height="15.0" fill="rgb(232,50,41)" rx="2" ry="2" />
<text  x="925.86" y="1935.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.05%)</title><rect x="234.7" y="1861" width="0.6" height="15.0" fill="rgb(252,102,32)" rx="2" ry="2" />
<text  x="237.70" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="192.1" y="1973" width="0.9" height="15.0" fill="rgb(210,139,17)" rx="2" ry="2" />
<text  x="195.06" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (601 samples, 10.10%)</title><rect x="60.0" y="2021" width="119.2" height="15.0" fill="rgb(226,95,20)" rx="2" ry="2" />
<text  x="62.98" y="2031.5" >[unknown]</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="984.3" y="1909" width="0.4" height="15.0" fill="rgb(205,146,51)" rx="2" ry="2" />
<text  x="987.34" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (255 samples, 4.29%)</title><rect x="312.2" y="2005" width="50.6" height="15.0" fill="rgb(219,218,22)" rx="2" ry="2" />
<text  x="315.24" y="2015.5" >folly..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="105.4" y="101" width="0.2" height="15.0" fill="rgb(209,172,52)" rx="2" ry="2" />
<text  x="108.39" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="483.2" y="1925" width="0.2" height="15.0" fill="rgb(211,32,9)" rx="2" ry="2" />
<text  x="486.19" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="355.5" y="1941" width="0.2" height="15.0" fill="rgb(212,40,54)" rx="2" ry="2" />
<text  x="358.47" y="1951.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="1031.7" y="2005" width="0.8" height="15.0" fill="rgb(237,168,29)" rx="2" ry="2" />
<text  x="1034.74" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="603.8" y="1973" width="1.6" height="15.0" fill="rgb(225,72,13)" rx="2" ry="2" />
<text  x="606.77" y="1983.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="515.3" y="1957" width="0.2" height="15.0" fill="rgb(233,142,5)" rx="2" ry="2" />
<text  x="518.32" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="859.6" y="2005" width="0.2" height="15.0" fill="rgb(239,47,37)" rx="2" ry="2" />
<text  x="862.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="526.8" y="1989" width="0.6" height="15.0" fill="rgb(234,54,7)" rx="2" ry="2" />
<text  x="529.82" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="586.7" y="1877" width="0.2" height="15.0" fill="rgb(227,63,13)" rx="2" ry="2" />
<text  x="589.71" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="876.5" y="2005" width="0.2" height="15.0" fill="rgb(235,132,46)" rx="2" ry="2" />
<text  x="879.46" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (3 samples, 0.05%)</title><rect x="523.8" y="2037" width="0.6" height="15.0" fill="rgb(215,110,21)" rx="2" ry="2" />
<text  x="526.85" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="173.0" y="1973" width="0.2" height="15.0" fill="rgb(227,124,54)" rx="2" ry="2" />
<text  x="176.02" y="1983.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="541.5" y="1941" width="0.8" height="15.0" fill="rgb(216,3,35)" rx="2" ry="2" />
<text  x="544.50" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="988.3" y="1973" width="1.8" height="15.0" fill="rgb(245,186,45)" rx="2" ry="2" />
<text  x="991.31" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="392.8" y="1973" width="0.4" height="15.0" fill="rgb(224,202,35)" rx="2" ry="2" />
<text  x="395.76" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="351.3" y="1989" width="0.6" height="15.0" fill="rgb(241,97,9)" rx="2" ry="2" />
<text  x="354.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (94 samples, 1.58%)</title><rect x="409.2" y="2005" width="18.7" height="15.0" fill="rgb(241,11,52)" rx="2" ry="2" />
<text  x="412.22" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="490.5" y="1957" width="0.2" height="15.0" fill="rgb(245,223,3)" rx="2" ry="2" />
<text  x="493.53" y="1967.5" ></text>
</g>
<g >
<title>__free_pages (2 samples, 0.03%)</title><rect x="272.4" y="1301" width="0.4" height="15.0" fill="rgb(241,52,29)" rx="2" ry="2" />
<text  x="275.38" y="1311.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (36 samples, 0.61%)</title><rect x="365.4" y="1973" width="7.1" height="15.0" fill="rgb(237,40,26)" rx="2" ry="2" />
<text  x="368.39" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="491.5" y="1973" width="0.2" height="15.0" fill="rgb(249,39,50)" rx="2" ry="2" />
<text  x="494.52" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="105.6" y="149" width="0.2" height="15.0" fill="rgb(232,170,3)" rx="2" ry="2" />
<text  x="108.59" y="159.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="103.4" y="85" width="2.0" height="15.0" fill="rgb(238,75,40)" rx="2" ry="2" />
<text  x="106.41" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="64.7" y="37" width="0.4" height="15.0" fill="rgb(243,36,15)" rx="2" ry="2" />
<text  x="67.74" y="47.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="948.2" y="1941" width="0.4" height="15.0" fill="rgb(205,35,32)" rx="2" ry="2" />
<text  x="951.25" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="229.5" y="1877" width="0.2" height="15.0" fill="rgb(230,147,4)" rx="2" ry="2" />
<text  x="232.54" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (3 samples, 0.05%)</title><rect x="180.0" y="2021" width="0.6" height="15.0" fill="rgb(218,146,50)" rx="2" ry="2" />
<text  x="182.96" y="2031.5" ></text>
</g>
<g >
<title>sock_sendmsg (305 samples, 5.13%)</title><rect x="233.1" y="1941" width="60.5" height="15.0" fill="rgb(243,98,50)" rx="2" ry="2" />
<text  x="236.11" y="1951.5" >sock_s..</text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="1158.3" y="1941" width="0.2" height="15.0" fill="rgb(224,161,32)" rx="2" ry="2" />
<text  x="1161.27" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="362.0" y="1957" width="0.4" height="15.0" fill="rgb(213,171,28)" rx="2" ry="2" />
<text  x="365.02" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="277" width="45.0" height="15.0" fill="rgb(225,11,11)" rx="2" ry="2" />
<text  x="63.77" y="287.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="661.9" y="2005" width="1.0" height="15.0" fill="rgb(207,73,39)" rx="2" ry="2" />
<text  x="664.88" y="2015.5" ></text>
</g>
<g >
<title>all (5,950 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(244,194,27)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.6" y="1829" width="0.8" height="15.0" fill="rgb(230,122,33)" rx="2" ry="2" />
<text  x="15.58" y="1839.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (1 samples, 0.02%)</title><rect x="300.5" y="2037" width="0.2" height="15.0" fill="rgb(215,151,34)" rx="2" ry="2" />
<text  x="303.54" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="665.0" y="1877" width="0.2" height="15.0" fill="rgb(221,10,10)" rx="2" ry="2" />
<text  x="668.05" y="1887.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(212,133,52)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="693.4" y="1909" width="0.2" height="15.0" fill="rgb(225,132,29)" rx="2" ry="2" />
<text  x="696.41" y="1919.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="488.5" y="1893" width="0.2" height="15.0" fill="rgb(249,55,22)" rx="2" ry="2" />
<text  x="491.54" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (160 samples, 2.69%)</title><rect x="1111.5" y="2037" width="31.7" height="15.0" fill="rgb(216,21,50)" rx="2" ry="2" />
<text  x="1114.47" y="2047.5" >fo..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="586.7" y="1909" width="0.2" height="15.0" fill="rgb(247,6,11)" rx="2" ry="2" />
<text  x="589.71" y="1919.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="625.0" y="1845" width="0.2" height="15.0" fill="rgb(245,120,21)" rx="2" ry="2" />
<text  x="627.99" y="1855.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="246.2" y="1765" width="0.2" height="15.0" fill="rgb(249,38,23)" rx="2" ry="2" />
<text  x="249.20" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="1142.2" y="2005" width="0.4" height="15.0" fill="rgb(209,80,32)" rx="2" ry="2" />
<text  x="1145.21" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="386.2" y="1989" width="0.2" height="15.0" fill="rgb(216,115,47)" rx="2" ry="2" />
<text  x="389.21" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="858.6" y="1925" width="0.2" height="15.0" fill="rgb(230,159,40)" rx="2" ry="2" />
<text  x="861.61" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="709" width="45.0" height="15.0" fill="rgb(254,207,26)" rx="2" ry="2" />
<text  x="63.77" y="719.5" >[unk..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="980.8" y="1893" width="0.4" height="15.0" fill="rgb(248,129,29)" rx="2" ry="2" />
<text  x="983.77" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (10 samples, 0.17%)</title><rect x="542.3" y="1973" width="2.0" height="15.0" fill="rgb(244,211,49)" rx="2" ry="2" />
<text  x="545.29" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="99.4" y="37" width="0.2" height="15.0" fill="rgb(237,163,2)" rx="2" ry="2" />
<text  x="102.44" y="47.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1829" width="45.0" height="15.0" fill="rgb(220,101,45)" rx="2" ry="2" />
<text  x="63.77" y="1839.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1493" width="45.0" height="15.0" fill="rgb(222,41,38)" rx="2" ry="2" />
<text  x="63.77" y="1503.5" >[unk..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="927.2" y="1973" width="1.4" height="15.0" fill="rgb(209,110,47)" rx="2" ry="2" />
<text  x="930.23" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (8 samples, 0.13%)</title><rect x="702.9" y="1893" width="1.6" height="15.0" fill="rgb(245,214,50)" rx="2" ry="2" />
<text  x="705.93" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="198.2" y="1893" width="0.2" height="15.0" fill="rgb(218,89,26)" rx="2" ry="2" />
<text  x="201.21" y="1903.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (3 samples, 0.05%)</title><rect x="342.0" y="1925" width="0.6" height="15.0" fill="rgb(246,133,54)" rx="2" ry="2" />
<text  x="344.99" y="1935.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (2 samples, 0.03%)</title><rect x="888.6" y="2037" width="0.4" height="15.0" fill="rgb(218,28,45)" rx="2" ry="2" />
<text  x="891.55" y="2047.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="1125.9" y="1957" width="0.4" height="15.0" fill="rgb(207,92,47)" rx="2" ry="2" />
<text  x="1128.94" y="1967.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="283.3" y="1669" width="0.2" height="15.0" fill="rgb(231,148,15)" rx="2" ry="2" />
<text  x="286.28" y="1679.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="611.1" y="1941" width="0.4" height="15.0" fill="rgb(223,150,24)" rx="2" ry="2" />
<text  x="614.11" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1397" width="45.0" height="15.0" fill="rgb(217,62,43)" rx="2" ry="2" />
<text  x="63.77" y="1407.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="660.5" y="1989" width="1.4" height="15.0" fill="rgb(243,110,20)" rx="2" ry="2" />
<text  x="663.49" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (51 samples, 0.86%)</title><rect x="382.4" y="2021" width="10.2" height="15.0" fill="rgb(243,170,51)" rx="2" ry="2" />
<text  x="385.44" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (3 samples, 0.05%)</title><rect x="329.1" y="1957" width="0.6" height="15.0" fill="rgb(244,121,45)" rx="2" ry="2" />
<text  x="332.10" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="196.4" y="1893" width="0.2" height="15.0" fill="rgb(253,11,9)" rx="2" ry="2" />
<text  x="199.42" y="1903.5" ></text>
</g>
<g >
<title>put_cred_rcu (1 samples, 0.02%)</title><rect x="11.2" y="1973" width="0.2" height="15.0" fill="rgb(245,215,16)" rx="2" ry="2" />
<text  x="14.19" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="927.0" y="1957" width="0.2" height="15.0" fill="rgb(217,97,44)" rx="2" ry="2" />
<text  x="930.03" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (6 samples, 0.10%)</title><rect x="12.4" y="1925" width="1.2" height="15.0" fill="rgb(219,100,13)" rx="2" ry="2" />
<text  x="15.38" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="105.2" y="69" width="0.2" height="15.0" fill="rgb(249,13,13)" rx="2" ry="2" />
<text  x="108.19" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (391 samples, 6.57%)</title><rect x="663.1" y="2005" width="77.5" height="15.0" fill="rgb(220,27,52)" rx="2" ry="2" />
<text  x="666.07" y="2015.5" >facebook..</text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="291.6" y="1829" width="0.2" height="15.0" fill="rgb(217,221,10)" rx="2" ry="2" />
<text  x="294.61" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (9 samples, 0.15%)</title><rect x="354.7" y="1957" width="1.8" height="15.0" fill="rgb(217,186,36)" rx="2" ry="2" />
<text  x="357.68" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="515.5" y="2021" width="0.2" height="15.0" fill="rgb(245,80,34)" rx="2" ry="2" />
<text  x="518.52" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="98.5" y="53" width="0.9" height="15.0" fill="rgb(214,139,29)" rx="2" ry="2" />
<text  x="101.45" y="63.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="789" width="45.0" height="15.0" fill="rgb(241,70,51)" rx="2" ry="2" />
<text  x="63.77" y="799.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (7 samples, 0.12%)</title><rect x="589.5" y="2037" width="1.4" height="15.0" fill="rgb(228,16,49)" rx="2" ry="2" />
<text  x="592.49" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="618.6" y="1973" width="0.2" height="15.0" fill="rgb(251,21,25)" rx="2" ry="2" />
<text  x="621.64" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="733.9" y="1957" width="1.6" height="15.0" fill="rgb(223,110,9)" rx="2" ry="2" />
<text  x="736.87" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.50%)</title><rect x="590.9" y="2005" width="5.9" height="15.0" fill="rgb(205,28,30)" rx="2" ry="2" />
<text  x="593.88" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="634.1" y="2005" width="2.0" height="15.0" fill="rgb(241,23,48)" rx="2" ry="2" />
<text  x="637.11" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="354.5" y="1957" width="0.2" height="15.0" fill="rgb(228,198,30)" rx="2" ry="2" />
<text  x="357.48" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="403.5" y="2005" width="0.2" height="15.0" fill="rgb(244,110,47)" rx="2" ry="2" />
<text  x="406.47" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (16 samples, 0.27%)</title><rect x="353.5" y="1973" width="3.2" height="15.0" fill="rgb(208,174,23)" rx="2" ry="2" />
<text  x="356.49" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1605" width="45.0" height="15.0" fill="rgb(216,119,6)" rx="2" ry="2" />
<text  x="63.77" y="1615.5" >[unk..</text>
</g>
<g >
<title>jump_fcontext@plt (2 samples, 0.03%)</title><rect x="982.2" y="1893" width="0.4" height="15.0" fill="rgb(231,151,31)" rx="2" ry="2" />
<text  x="985.16" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="746.6" y="1989" width="0.2" height="15.0" fill="rgb(251,69,12)" rx="2" ry="2" />
<text  x="749.56" y="1999.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (14 samples, 0.24%)</title><rect x="1078.1" y="1893" width="2.8" height="15.0" fill="rgb(206,193,50)" rx="2" ry="2" />
<text  x="1081.15" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (20 samples, 0.34%)</title><rect x="335.2" y="1973" width="4.0" height="15.0" fill="rgb(224,31,54)" rx="2" ry="2" />
<text  x="338.24" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (4 samples, 0.07%)</title><rect x="862.6" y="1957" width="0.8" height="15.0" fill="rgb(238,130,9)" rx="2" ry="2" />
<text  x="865.57" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="650.0" y="1989" width="0.2" height="15.0" fill="rgb(220,13,20)" rx="2" ry="2" />
<text  x="652.98" y="1999.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="106.8" y="2005" width="0.2" height="15.0" fill="rgb(227,4,23)" rx="2" ry="2" />
<text  x="109.78" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (100 samples, 1.68%)</title><rect x="468.5" y="1989" width="19.8" height="15.0" fill="rgb(227,58,41)" rx="2" ry="2" />
<text  x="471.51" y="1999.5" ></text>
</g>
<g >
<title>__libc_recv (245 samples, 4.12%)</title><rect x="1036.5" y="2053" width="48.6" height="15.0" fill="rgb(210,43,42)" rx="2" ry="2" />
<text  x="1039.50" y="2063.5" >__li..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1030.7" y="2005" width="0.2" height="15.0" fill="rgb(244,26,21)" rx="2" ry="2" />
<text  x="1033.75" y="2015.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (1 samples, 0.02%)</title><rect x="345.0" y="1941" width="0.2" height="15.0" fill="rgb(230,7,4)" rx="2" ry="2" />
<text  x="347.96" y="1951.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (2 samples, 0.03%)</title><rect x="308.3" y="1957" width="0.4" height="15.0" fill="rgb(216,102,18)" rx="2" ry="2" />
<text  x="311.27" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (131 samples, 2.20%)</title><rect x="607.9" y="2005" width="26.0" height="15.0" fill="rgb(211,6,16)" rx="2" ry="2" />
<text  x="610.93" y="2015.5" >[..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="261" width="45.0" height="15.0" fill="rgb(209,12,34)" rx="2" ry="2" />
<text  x="63.77" y="271.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="486.0" y="1941" width="0.2" height="15.0" fill="rgb(214,141,9)" rx="2" ry="2" />
<text  x="488.97" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="720.6" y="1781" width="0.2" height="15.0" fill="rgb(217,117,34)" rx="2" ry="2" />
<text  x="723.58" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="588.7" y="2005" width="0.4" height="15.0" fill="rgb(224,61,42)" rx="2" ry="2" />
<text  x="591.70" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="12.4" y="2037" width="1.2" height="15.0" fill="rgb(242,28,53)" rx="2" ry="2" />
<text  x="15.38" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="365.2" y="2021" width="0.2" height="15.0" fill="rgb(210,23,40)" rx="2" ry="2" />
<text  x="368.19" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (10 samples, 0.17%)</title><rect x="682.7" y="1941" width="2.0" height="15.0" fill="rgb(213,135,50)" rx="2" ry="2" />
<text  x="685.70" y="1951.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (10 samples, 0.17%)</title><rect x="250.8" y="1861" width="1.9" height="15.0" fill="rgb(224,3,46)" rx="2" ry="2" />
<text  x="253.76" y="1871.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="693.4" y="1797" width="0.2" height="15.0" fill="rgb(233,143,34)" rx="2" ry="2" />
<text  x="696.41" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1075.0" y="1829" width="0.4" height="15.0" fill="rgb(240,115,40)" rx="2" ry="2" />
<text  x="1077.97" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.0" y="2021" width="0.2" height="15.0" fill="rgb(221,164,41)" rx="2" ry="2" />
<text  x="1025.02" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;void  (21 samples, 0.35%)</title><rect x="735.5" y="1973" width="4.1" height="15.0" fill="rgb(221,187,20)" rx="2" ry="2" />
<text  x="738.45" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (14 samples, 0.24%)</title><rect x="280.5" y="1685" width="2.8" height="15.0" fill="rgb(208,103,1)" rx="2" ry="2" />
<text  x="283.51" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="126.0" y="1893" width="0.2" height="15.0" fill="rgb(234,208,17)" rx="2" ry="2" />
<text  x="129.02" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="629.2" y="1973" width="0.3" height="15.0" fill="rgb(244,108,22)" rx="2" ry="2" />
<text  x="632.15" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="168.5" y="1989" width="3.1" height="15.0" fill="rgb(243,17,52)" rx="2" ry="2" />
<text  x="171.46" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="392.2" y="1989" width="0.2" height="15.0" fill="rgb(234,195,23)" rx="2" ry="2" />
<text  x="395.16" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="264.4" y="1445" width="0.2" height="15.0" fill="rgb(253,38,29)" rx="2" ry="2" />
<text  x="267.44" y="1455.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="586.7" y="1861" width="0.2" height="15.0" fill="rgb(246,204,41)" rx="2" ry="2" />
<text  x="589.71" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="865.4" y="2005" width="0.1" height="15.0" fill="rgb(211,215,12)" rx="2" ry="2" />
<text  x="868.35" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="586.5" y="1925" width="0.2" height="15.0" fill="rgb(239,0,47)" rx="2" ry="2" />
<text  x="589.51" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="984.7" y="1909" width="0.2" height="15.0" fill="rgb(245,162,30)" rx="2" ry="2" />
<text  x="987.74" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="922.9" y="1989" width="0.2" height="15.0" fill="rgb(222,16,23)" rx="2" ry="2" />
<text  x="925.86" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1075.0" y="1893" width="0.4" height="15.0" fill="rgb(208,90,51)" rx="2" ry="2" />
<text  x="1077.97" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="481.2" y="1893" width="0.8" height="15.0" fill="rgb(231,19,6)" rx="2" ry="2" />
<text  x="484.21" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="366.8" y="1877" width="0.2" height="15.0" fill="rgb(221,193,29)" rx="2" ry="2" />
<text  x="369.78" y="1887.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="229.5" y="1861" width="0.2" height="15.0" fill="rgb(245,161,2)" rx="2" ry="2" />
<text  x="232.54" y="1871.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="637.5" y="2005" width="0.8" height="15.0" fill="rgb(207,140,7)" rx="2" ry="2" />
<text  x="640.48" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (530 samples, 8.91%)</title><rect x="907.0" y="2021" width="105.1" height="15.0" fill="rgb(235,188,31)" rx="2" ry="2" />
<text  x="910.00" y="2031.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="197.4" y="1909" width="0.2" height="15.0" fill="rgb(242,40,12)" rx="2" ry="2" />
<text  x="200.41" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (5 samples, 0.08%)</title><rect x="1158.9" y="2053" width="1.0" height="15.0" fill="rgb(231,41,24)" rx="2" ry="2" />
<text  x="1161.86" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (33 samples, 0.55%)</title><rect x="590.9" y="2037" width="6.5" height="15.0" fill="rgb(242,86,4)" rx="2" ry="2" />
<text  x="593.88" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="684.9" y="1973" width="0.2" height="15.0" fill="rgb(226,44,51)" rx="2" ry="2" />
<text  x="687.88" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="166.7" y="1957" width="0.2" height="15.0" fill="rgb(244,226,36)" rx="2" ry="2" />
<text  x="169.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="195.2" y="2021" width="0.2" height="15.0" fill="rgb(208,22,31)" rx="2" ry="2" />
<text  x="198.23" y="2031.5" ></text>
</g>
<g >
<title>skb_clone (9 samples, 0.15%)</title><rect x="283.5" y="1813" width="1.8" height="15.0" fill="rgb(236,169,23)" rx="2" ry="2" />
<text  x="286.48" y="1823.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="739.4" y="1957" width="0.2" height="15.0" fill="rgb(249,138,28)" rx="2" ry="2" />
<text  x="742.42" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext (3 samples, 0.05%)</title><rect x="723.0" y="1877" width="0.6" height="15.0" fill="rgb(246,27,37)" rx="2" ry="2" />
<text  x="725.96" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.13%)</title><rect x="103.4" y="37" width="1.6" height="15.0" fill="rgb(224,8,31)" rx="2" ry="2" />
<text  x="106.41" y="47.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1781" width="45.0" height="15.0" fill="rgb(205,50,19)" rx="2" ry="2" />
<text  x="63.77" y="1791.5" >[unk..</text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(207,143,16)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1877" width="45.0" height="15.0" fill="rgb(243,153,32)" rx="2" ry="2" />
<text  x="63.77" y="1887.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="378.3" y="1989" width="1.4" height="15.0" fill="rgb(240,129,24)" rx="2" ry="2" />
<text  x="381.28" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="889.9" y="2021" width="0.8" height="15.0" fill="rgb(251,22,20)" rx="2" ry="2" />
<text  x="892.94" y="2031.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="11.2" y="1941" width="0.2" height="15.0" fill="rgb(245,154,41)" rx="2" ry="2" />
<text  x="14.19" y="1951.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="541.5" y="1957" width="0.8" height="15.0" fill="rgb(216,37,14)" rx="2" ry="2" />
<text  x="544.50" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="585.9" y="1957" width="0.2" height="15.0" fill="rgb(246,107,1)" rx="2" ry="2" />
<text  x="588.92" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="63.9" y="37" width="0.4" height="15.0" fill="rgb(219,20,47)" rx="2" ry="2" />
<text  x="66.94" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (326 samples, 5.48%)</title><rect x="107.0" y="2005" width="64.6" height="15.0" fill="rgb(238,87,50)" rx="2" ry="2" />
<text  x="109.98" y="2015.5" >faceboo..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (5 samples, 0.08%)</title><rect x="525.6" y="2037" width="1.0" height="15.0" fill="rgb(227,81,39)" rx="2" ry="2" />
<text  x="528.63" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1099.6" y="2021" width="0.2" height="15.0" fill="rgb(228,228,9)" rx="2" ry="2" />
<text  x="1102.57" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="310.1" y="2037" width="0.4" height="15.0" fill="rgb(235,16,11)" rx="2" ry="2" />
<text  x="313.06" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="877.1" y="2005" width="0.3" height="15.0" fill="rgb(235,105,54)" rx="2" ry="2" />
<text  x="880.05" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="229.5" y="1925" width="0.2" height="15.0" fill="rgb(212,180,22)" rx="2" ry="2" />
<text  x="232.54" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="875.7" y="1973" width="0.2" height="15.0" fill="rgb(224,186,48)" rx="2" ry="2" />
<text  x="878.66" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (11 samples, 0.18%)</title><rect x="359.8" y="1957" width="2.2" height="15.0" fill="rgb(214,83,49)" rx="2" ry="2" />
<text  x="362.84" y="1967.5" ></text>
</g>
<g >
<title>__put_cred (1 samples, 0.02%)</title><rect x="11.2" y="1989" width="0.2" height="15.0" fill="rgb(225,225,18)" rx="2" ry="2" />
<text  x="14.19" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="201.6" y="1893" width="0.2" height="15.0" fill="rgb(225,117,8)" rx="2" ry="2" />
<text  x="204.58" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (4 samples, 0.07%)</title><rect x="737.6" y="1941" width="0.8" height="15.0" fill="rgb(216,143,5)" rx="2" ry="2" />
<text  x="740.63" y="1951.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(233,86,6)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="986.5" y="1813" width="0.2" height="15.0" fill="rgb(224,31,54)" rx="2" ry="2" />
<text  x="989.52" y="1823.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(237,117,51)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1237" width="45.0" height="15.0" fill="rgb(242,19,6)" rx="2" ry="2" />
<text  x="63.77" y="1247.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1637" width="45.0" height="15.0" fill="rgb(251,28,27)" rx="2" ry="2" />
<text  x="63.77" y="1647.5" >[unk..</text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(216,111,49)" rx="2" ry="2" />
<text  x="15.38" y="2079.5" ></text>
</g>
<g >
<title>security_cred_free (1 samples, 0.02%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(243,39,41)" rx="2" ry="2" />
<text  x="14.19" y="1967.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr@plt (1 samples, 0.02%)</title><rect x="730.7" y="1909" width="0.2" height="15.0" fill="rgb(228,161,4)" rx="2" ry="2" />
<text  x="733.69" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (126 samples, 2.12%)</title><rect x="1049.6" y="1909" width="25.0" height="15.0" fill="rgb(212,118,18)" rx="2" ry="2" />
<text  x="1052.59" y="1919.5" >_..</text>
</g>
<g >
<title>__alloc_skb (20 samples, 0.34%)</title><rect x="246.8" y="1861" width="4.0" height="15.0" fill="rgb(215,153,6)" rx="2" ry="2" />
<text  x="249.79" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="339.0" y="1957" width="0.2" height="15.0" fill="rgb(227,190,50)" rx="2" ry="2" />
<text  x="342.01" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="866.1" y="1941" width="0.2" height="15.0" fill="rgb(253,219,11)" rx="2" ry="2" />
<text  x="869.14" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="336.0" y="1941" width="0.2" height="15.0" fill="rgb(228,228,35)" rx="2" ry="2" />
<text  x="339.04" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="229.5" y="1957" width="0.2" height="15.0" fill="rgb(251,147,20)" rx="2" ry="2" />
<text  x="232.54" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (60 samples, 1.01%)</title><rect x="475.5" y="1957" width="11.9" height="15.0" fill="rgb(240,47,33)" rx="2" ry="2" />
<text  x="478.46" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="640.5" y="2037" width="0.6" height="15.0" fill="rgb(222,174,30)" rx="2" ry="2" />
<text  x="643.46" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="390.6" y="1909" width="0.2" height="15.0" fill="rgb(233,39,11)" rx="2" ry="2" />
<text  x="393.57" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.5" y="1973" width="0.2" height="15.0" fill="rgb(223,7,22)" rx="2" ry="2" />
<text  x="232.54" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1098.6" y="1989" width="0.4" height="15.0" fill="rgb(238,114,38)" rx="2" ry="2" />
<text  x="1101.57" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="60.8" y="181" width="44.8" height="15.0" fill="rgb(226,173,30)" rx="2" ry="2" />
<text  x="63.77" y="191.5" >[unk..</text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="367.2" y="1861" width="0.2" height="15.0" fill="rgb(249,88,54)" rx="2" ry="2" />
<text  x="370.17" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1365" width="45.0" height="15.0" fill="rgb(254,29,14)" rx="2" ry="2" />
<text  x="63.77" y="1375.5" >[unk..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="858.6" y="1877" width="0.2" height="15.0" fill="rgb(216,80,53)" rx="2" ry="2" />
<text  x="861.61" y="1887.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="738.8" y="1941" width="0.2" height="15.0" fill="rgb(209,168,1)" rx="2" ry="2" />
<text  x="741.82" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="86.7" y="37" width="0.4" height="15.0" fill="rgb(220,112,5)" rx="2" ry="2" />
<text  x="89.75" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="627.4" y="1909" width="0.2" height="15.0" fill="rgb(244,35,45)" rx="2" ry="2" />
<text  x="630.37" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="384.0" y="1909" width="0.2" height="15.0" fill="rgb(217,97,16)" rx="2" ry="2" />
<text  x="387.03" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (12 samples, 0.20%)</title><rect x="73.9" y="37" width="2.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="76.86" y="47.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1349" width="45.0" height="15.0" fill="rgb(251,64,29)" rx="2" ry="2" />
<text  x="63.77" y="1359.5" >[unk..</text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.05%)</title><rect x="1084.5" y="2037" width="0.6" height="15.0" fill="rgb(245,179,41)" rx="2" ry="2" />
<text  x="1087.49" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="826.7" y="1957" width="0.6" height="15.0" fill="rgb(213,93,1)" rx="2" ry="2" />
<text  x="829.68" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="526.6" y="2037" width="0.2" height="15.0" fill="rgb(234,7,30)" rx="2" ry="2" />
<text  x="529.62" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (186 samples, 3.13%)</title><rect x="60.8" y="69" width="36.9" height="15.0" fill="rgb(244,181,41)" rx="2" ry="2" />
<text  x="63.77" y="79.5" >[un..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="169.6" y="1973" width="0.2" height="15.0" fill="rgb(210,51,34)" rx="2" ry="2" />
<text  x="172.65" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="97.7" y="69" width="0.8" height="15.0" fill="rgb(213,213,41)" rx="2" ry="2" />
<text  x="100.66" y="79.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="584.5" y="1941" width="0.4" height="15.0" fill="rgb(231,159,51)" rx="2" ry="2" />
<text  x="587.53" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="353.3" y="1973" width="0.2" height="15.0" fill="rgb(226,197,46)" rx="2" ry="2" />
<text  x="356.29" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="367.4" y="1893" width="3.7" height="15.0" fill="rgb(214,125,28)" rx="2" ry="2" />
<text  x="370.37" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="197.2" y="1909" width="0.2" height="15.0" fill="rgb(244,5,32)" rx="2" ry="2" />
<text  x="200.21" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="123.6" y="1941" width="0.4" height="15.0" fill="rgb(234,77,49)" rx="2" ry="2" />
<text  x="126.64" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (273 samples, 4.59%)</title><rect x="310.5" y="2021" width="54.1" height="15.0" fill="rgb(234,86,47)" rx="2" ry="2" />
<text  x="313.45" y="2031.5" >folly..</text>
</g>
<g >
<title>[unknown] (4,994 samples, 83.93%)</title><rect x="45.1" y="2053" width="990.4" height="15.0" fill="rgb(227,226,23)" rx="2" ry="2" />
<text  x="48.10" y="2063.5" >[unknown]</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="448.1" y="1957" width="0.2" height="15.0" fill="rgb(217,147,46)" rx="2" ry="2" />
<text  x="451.09" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="177.6" y="2005" width="0.2" height="15.0" fill="rgb(219,212,42)" rx="2" ry="2" />
<text  x="180.58" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="728.9" y="1909" width="0.2" height="15.0" fill="rgb(253,126,36)" rx="2" ry="2" />
<text  x="731.91" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="594.4" y="1877" width="0.2" height="15.0" fill="rgb(243,184,50)" rx="2" ry="2" />
<text  x="597.45" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1075.0" y="1781" width="0.4" height="15.0" fill="rgb(211,121,16)" rx="2" ry="2" />
<text  x="1077.97" y="1791.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(222,36,53)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (43 samples, 0.72%)</title><rect x="527.4" y="1989" width="8.5" height="15.0" fill="rgb(243,142,34)" rx="2" ry="2" />
<text  x="530.42" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (5 samples, 0.08%)</title><rect x="348.5" y="1973" width="1.0" height="15.0" fill="rgb(205,141,39)" rx="2" ry="2" />
<text  x="351.53" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="246.2" y="1813" width="0.2" height="15.0" fill="rgb(212,93,4)" rx="2" ry="2" />
<text  x="249.20" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="356.1" y="1909" width="0.4" height="15.0" fill="rgb(239,15,41)" rx="2" ry="2" />
<text  x="359.07" y="1919.5" ></text>
</g>
<g >
<title>inet_recvmsg (201 samples, 3.38%)</title><rect x="1043.0" y="1957" width="39.9" height="15.0" fill="rgb(228,79,45)" rx="2" ry="2" />
<text  x="1046.05" y="1967.5" >ine..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="584.7" y="1909" width="0.2" height="15.0" fill="rgb(228,93,3)" rx="2" ry="2" />
<text  x="587.73" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="21.1" y="1973" width="1.0" height="15.0" fill="rgb(235,203,39)" rx="2" ry="2" />
<text  x="24.11" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="246.2" y="1829" width="0.2" height="15.0" fill="rgb(237,121,50)" rx="2" ry="2" />
<text  x="249.20" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="979.4" y="1893" width="0.2" height="15.0" fill="rgb(248,222,45)" rx="2" ry="2" />
<text  x="982.38" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1075.0" y="1813" width="0.4" height="15.0" fill="rgb(227,141,53)" rx="2" ry="2" />
<text  x="1077.97" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (91 samples, 1.53%)</title><rect x="259.1" y="1637" width="18.0" height="15.0" fill="rgb(230,167,40)" rx="2" ry="2" />
<text  x="262.09" y="1647.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="339.8" y="1957" width="0.2" height="15.0" fill="rgb(231,61,18)" rx="2" ry="2" />
<text  x="342.81" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (17 samples, 0.29%)</title><rect x="151.6" y="1925" width="3.4" height="15.0" fill="rgb(219,195,30)" rx="2" ry="2" />
<text  x="154.60" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="384.0" y="1893" width="0.2" height="15.0" fill="rgb(224,153,11)" rx="2" ry="2" />
<text  x="387.03" y="1903.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="275.7" y="1461" width="0.2" height="15.0" fill="rgb(226,161,16)" rx="2" ry="2" />
<text  x="278.75" y="1471.5" ></text>
</g>
<g >
<title>sys_sendmsg (337 samples, 5.66%)</title><rect x="229.7" y="1989" width="66.9" height="15.0" fill="rgb(234,148,45)" rx="2" ry="2" />
<text  x="232.74" y="1999.5" >sys_sen..</text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="625.0" y="1813" width="0.2" height="15.0" fill="rgb(218,62,39)" rx="2" ry="2" />
<text  x="627.99" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="125.0" y="1957" width="0.8" height="15.0" fill="rgb(221,42,5)" rx="2" ry="2" />
<text  x="128.03" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="309.1" y="2037" width="0.2" height="15.0" fill="rgb(254,47,49)" rx="2" ry="2" />
<text  x="312.07" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="96.1" y="53" width="0.4" height="15.0" fill="rgb(228,13,24)" rx="2" ry="2" />
<text  x="99.07" y="63.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="253.5" y="1845" width="0.2" height="15.0" fill="rgb(243,196,35)" rx="2" ry="2" />
<text  x="256.54" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1045" width="45.0" height="15.0" fill="rgb(218,49,11)" rx="2" ry="2" />
<text  x="63.77" y="1055.5" >[unk..</text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="1049.4" y="1797" width="0.2" height="15.0" fill="rgb(231,102,17)" rx="2" ry="2" />
<text  x="1052.39" y="1807.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (3 samples, 0.05%)</title><rect x="172.6" y="1989" width="0.6" height="15.0" fill="rgb(229,44,34)" rx="2" ry="2" />
<text  x="175.62" y="1999.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="594.4" y="1749" width="0.2" height="15.0" fill="rgb(253,72,31)" rx="2" ry="2" />
<text  x="597.45" y="1759.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="596.6" y="1909" width="0.2" height="15.0" fill="rgb(238,39,41)" rx="2" ry="2" />
<text  x="599.63" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="478.6" y="1909" width="0.2" height="15.0" fill="rgb(239,30,41)" rx="2" ry="2" />
<text  x="481.63" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="533" width="45.0" height="15.0" fill="rgb(230,40,49)" rx="2" ry="2" />
<text  x="63.77" y="543.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="629" width="45.0" height="15.0" fill="rgb(220,6,22)" rx="2" ry="2" />
<text  x="63.77" y="639.5" >[unk..</text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="363.2" y="2005" width="0.2" height="15.0" fill="rgb(239,83,42)" rx="2" ry="2" />
<text  x="366.21" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="726.3" y="1893" width="0.6" height="15.0" fill="rgb(253,127,47)" rx="2" ry="2" />
<text  x="729.33" y="1903.5" ></text>
</g>
<g >
<title>__ptep_modify_prot_commit (1 samples, 0.02%)</title><rect x="1141.6" y="1925" width="0.2" height="15.0" fill="rgb(209,205,8)" rx="2" ry="2" />
<text  x="1144.61" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="357.1" y="1989" width="0.4" height="15.0" fill="rgb(206,115,7)" rx="2" ry="2" />
<text  x="360.06" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(247,193,0)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="105.6" y="165" width="0.2" height="15.0" fill="rgb(213,19,36)" rx="2" ry="2" />
<text  x="108.59" y="175.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1031.5" y="2005" width="0.2" height="15.0" fill="rgb(215,140,21)" rx="2" ry="2" />
<text  x="1034.54" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (25 samples, 0.42%)</title><rect x="451.3" y="1989" width="4.9" height="15.0" fill="rgb(240,225,21)" rx="2" ry="2" />
<text  x="454.26" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="245.0" y="1813" width="0.2" height="15.0" fill="rgb(217,73,15)" rx="2" ry="2" />
<text  x="248.01" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="810.0" y="1957" width="0.2" height="15.0" fill="rgb(241,24,29)" rx="2" ry="2" />
<text  x="813.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="276.9" y="1525" width="0.2" height="15.0" fill="rgb(219,54,6)" rx="2" ry="2" />
<text  x="279.94" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (4 samples, 0.07%)</title><rect x="396.5" y="2037" width="0.8" height="15.0" fill="rgb(221,76,3)" rx="2" ry="2" />
<text  x="399.52" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (4 samples, 0.07%)</title><rect x="336.2" y="1957" width="0.8" height="15.0" fill="rgb(245,20,40)" rx="2" ry="2" />
<text  x="339.24" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="201.6" y="1861" width="0.2" height="15.0" fill="rgb(216,176,44)" rx="2" ry="2" />
<text  x="204.58" y="1871.5" ></text>
</g>
<g >
<title>sys_recvfrom (214 samples, 3.60%)</title><rect x="1042.1" y="2005" width="42.4" height="15.0" fill="rgb(247,27,40)" rx="2" ry="2" />
<text  x="1045.05" y="2015.5" >sys..</text>
</g>
<g >
<title>free@plt (3 samples, 0.05%)</title><rect x="575.8" y="1989" width="0.6" height="15.0" fill="rgb(222,175,19)" rx="2" ry="2" />
<text  x="578.81" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (29 samples, 0.49%)</title><rect x="386.4" y="2005" width="5.8" height="15.0" fill="rgb(210,58,24)" rx="2" ry="2" />
<text  x="389.41" y="2015.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (7 samples, 0.12%)</title><rect x="292.0" y="1925" width="1.4" height="15.0" fill="rgb(231,202,44)" rx="2" ry="2" />
<text  x="295.01" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (37 samples, 0.62%)</title><rect x="155.6" y="1957" width="7.3" height="15.0" fill="rgb(206,137,14)" rx="2" ry="2" />
<text  x="158.57" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (3 samples, 0.05%)</title><rect x="1099.0" y="1989" width="0.6" height="15.0" fill="rgb(219,94,41)" rx="2" ry="2" />
<text  x="1101.97" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="174.4" y="1957" width="0.4" height="15.0" fill="rgb(251,224,2)" rx="2" ry="2" />
<text  x="177.41" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="575.0" y="1989" width="0.4" height="15.0" fill="rgb(246,154,38)" rx="2" ry="2" />
<text  x="578.01" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="378.1" y="1925" width="0.2" height="15.0" fill="rgb(243,11,21)" rx="2" ry="2" />
<text  x="381.08" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (32 samples, 0.54%)</title><rect x="491.1" y="1989" width="6.4" height="15.0" fill="rgb(237,182,4)" rx="2" ry="2" />
<text  x="494.12" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (5 samples, 0.08%)</title><rect x="346.9" y="1989" width="1.0" height="15.0" fill="rgb(215,178,29)" rx="2" ry="2" />
<text  x="349.94" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1083.1" y="1941" width="0.2" height="15.0" fill="rgb(229,65,21)" rx="2" ry="2" />
<text  x="1086.11" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (45 samples, 0.76%)</title><rect x="1149.5" y="2053" width="9.0" height="15.0" fill="rgb(230,159,26)" rx="2" ry="2" />
<text  x="1152.54" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (1 samples, 0.02%)</title><rect x="177.8" y="2005" width="0.2" height="15.0" fill="rgb(254,184,8)" rx="2" ry="2" />
<text  x="180.78" y="2015.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.02%)</title><rect x="858.4" y="1861" width="0.2" height="15.0" fill="rgb(240,153,29)" rx="2" ry="2" />
<text  x="861.41" y="1871.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="746.6" y="1925" width="0.2" height="15.0" fill="rgb(220,60,5)" rx="2" ry="2" />
<text  x="749.56" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (28 samples, 0.47%)</title><rect x="619.6" y="1973" width="5.6" height="15.0" fill="rgb(253,62,42)" rx="2" ry="2" />
<text  x="622.63" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.72%)</title><rect x="597.4" y="2021" width="8.5" height="15.0" fill="rgb(207,58,0)" rx="2" ry="2" />
<text  x="600.42" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="657.5" y="2021" width="0.6" height="15.0" fill="rgb(251,22,2)" rx="2" ry="2" />
<text  x="660.51" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="625.0" y="1877" width="0.2" height="15.0" fill="rgb(207,131,12)" rx="2" ry="2" />
<text  x="627.99" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1159.9" y="2053" width="0.2" height="15.0" fill="rgb(226,40,31)" rx="2" ry="2" />
<text  x="1162.86" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="606.3" y="2037" width="0.4" height="15.0" fill="rgb(241,158,35)" rx="2" ry="2" />
<text  x="609.35" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="949" width="45.0" height="15.0" fill="rgb(206,6,5)" rx="2" ry="2" />
<text  x="63.77" y="959.5" >[unk..</text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="275.9" y="1461" width="0.2" height="15.0" fill="rgb(243,81,37)" rx="2" ry="2" />
<text  x="278.95" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="593.9" y="1941" width="0.9" height="15.0" fill="rgb(212,22,52)" rx="2" ry="2" />
<text  x="596.85" y="1951.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="349.9" y="1989" width="0.2" height="15.0" fill="rgb(243,3,23)" rx="2" ry="2" />
<text  x="352.92" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="362.4" y="1973" width="0.2" height="15.0" fill="rgb(222,136,23)" rx="2" ry="2" />
<text  x="365.41" y="1983.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="357.7" y="1989" width="0.9" height="15.0" fill="rgb(222,2,36)" rx="2" ry="2" />
<text  x="360.65" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="246.2" y="1797" width="0.2" height="15.0" fill="rgb(208,47,37)" rx="2" ry="2" />
<text  x="249.20" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="691.8" y="1909" width="0.2" height="15.0" fill="rgb(214,139,38)" rx="2" ry="2" />
<text  x="694.82" y="1919.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1046.6" y="1909" width="0.2" height="15.0" fill="rgb(233,106,4)" rx="2" ry="2" />
<text  x="1049.62" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="684.7" y="1957" width="0.2" height="15.0" fill="rgb(205,55,33)" rx="2" ry="2" />
<text  x="687.68" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(229,67,39)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="421" width="45.0" height="15.0" fill="rgb(254,98,43)" rx="2" ry="2" />
<text  x="63.77" y="431.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="885" width="45.0" height="15.0" fill="rgb(247,1,38)" rx="2" ry="2" />
<text  x="63.77" y="895.5" >[unk..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="384.0" y="1877" width="0.2" height="15.0" fill="rgb(239,77,37)" rx="2" ry="2" />
<text  x="387.03" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="193.2" y="1989" width="1.2" height="15.0" fill="rgb(236,43,5)" rx="2" ry="2" />
<text  x="196.25" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="649.6" y="1989" width="0.2" height="15.0" fill="rgb(240,198,28)" rx="2" ry="2" />
<text  x="652.58" y="1999.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="211.7" y="2021" width="0.2" height="15.0" fill="rgb(229,98,8)" rx="2" ry="2" />
<text  x="214.69" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="704.1" y="1877" width="0.4" height="15.0" fill="rgb(244,169,16)" rx="2" ry="2" />
<text  x="707.12" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (49 samples, 0.82%)</title><rect x="578.0" y="2005" width="9.7" height="15.0" fill="rgb(227,8,20)" rx="2" ry="2" />
<text  x="580.99" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (12 samples, 0.20%)</title><rect x="599.0" y="2005" width="2.4" height="15.0" fill="rgb(231,131,50)" rx="2" ry="2" />
<text  x="602.01" y="2015.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="733.7" y="1957" width="0.2" height="15.0" fill="rgb(211,48,9)" rx="2" ry="2" />
<text  x="736.67" y="1967.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="730.5" y="1909" width="0.2" height="15.0" fill="rgb(252,169,6)" rx="2" ry="2" />
<text  x="733.49" y="1919.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="201.6" y="1749" width="0.2" height="15.0" fill="rgb(229,91,2)" rx="2" ry="2" />
<text  x="204.58" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="523.1" y="2037" width="0.5" height="15.0" fill="rgb(211,61,5)" rx="2" ry="2" />
<text  x="526.05" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="1160.1" y="2053" width="0.2" height="15.0" fill="rgb(242,119,10)" rx="2" ry="2" />
<text  x="1163.05" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="367.8" y="1845" width="0.4" height="15.0" fill="rgb(249,196,52)" rx="2" ry="2" />
<text  x="370.77" y="1855.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="597.4" y="1973" width="0.2" height="15.0" fill="rgb(217,23,24)" rx="2" ry="2" />
<text  x="600.42" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="20.5" y="1941" width="0.2" height="15.0" fill="rgb(250,204,4)" rx="2" ry="2" />
<text  x="23.51" y="1951.5" ></text>
</g>
<g >
<title>__libc_sendmsg (368 samples, 6.18%)</title><rect x="224.8" y="2037" width="73.0" height="15.0" fill="rgb(221,144,3)" rx="2" ry="2" />
<text  x="227.78" y="2047.5" >__libc_s..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="987.1" y="1989" width="0.2" height="15.0" fill="rgb(216,7,9)" rx="2" ry="2" />
<text  x="990.12" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="683.5" y="1909" width="0.2" height="15.0" fill="rgb(213,195,23)" rx="2" ry="2" />
<text  x="686.49" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="491.7" y="1973" width="0.2" height="15.0" fill="rgb(212,172,41)" rx="2" ry="2" />
<text  x="494.72" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="90.7" y="37" width="0.2" height="15.0" fill="rgb(213,167,8)" rx="2" ry="2" />
<text  x="93.72" y="47.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (1 samples, 0.02%)</title><rect x="346.0" y="1957" width="0.2" height="15.0" fill="rgb(223,35,37)" rx="2" ry="2" />
<text  x="348.95" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="22.7" y="2005" width="0.2" height="15.0" fill="rgb(236,224,35)" rx="2" ry="2" />
<text  x="25.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1093" width="45.0" height="15.0" fill="rgb(248,175,38)" rx="2" ry="2" />
<text  x="63.77" y="1103.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="831.8" y="1989" width="1.8" height="15.0" fill="rgb(205,26,24)" rx="2" ry="2" />
<text  x="834.84" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (351 samples, 5.90%)</title><rect x="227.0" y="2005" width="69.6" height="15.0" fill="rgb(224,52,35)" rx="2" ry="2" />
<text  x="229.96" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (118 samples, 1.98%)</title><rect x="835.4" y="2005" width="23.4" height="15.0" fill="rgb(222,211,16)" rx="2" ry="2" />
<text  x="838.41" y="2015.5" >f..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="105.6" y="37" width="0.2" height="15.0" fill="rgb(242,50,32)" rx="2" ry="2" />
<text  x="108.59" y="47.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1158.3" y="2005" width="0.2" height="15.0" fill="rgb(242,196,35)" rx="2" ry="2" />
<text  x="1161.27" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1099.2" y="1957" width="0.2" height="15.0" fill="rgb(209,26,39)" rx="2" ry="2" />
<text  x="1102.17" y="1967.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1042.6" y="1973" width="0.2" height="15.0" fill="rgb(220,53,21)" rx="2" ry="2" />
<text  x="1045.65" y="1983.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="954.6" y="1941" width="0.2" height="15.0" fill="rgb(225,218,46)" rx="2" ry="2" />
<text  x="957.59" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="693.4" y="1877" width="0.2" height="15.0" fill="rgb(238,71,28)" rx="2" ry="2" />
<text  x="696.41" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (12 samples, 0.20%)</title><rect x="199.6" y="1941" width="2.4" height="15.0" fill="rgb(225,167,51)" rx="2" ry="2" />
<text  x="202.59" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (11 samples, 0.18%)</title><rect x="952.4" y="1909" width="2.2" height="15.0" fill="rgb(215,32,26)" rx="2" ry="2" />
<text  x="955.41" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1139.4" y="1973" width="0.2" height="15.0" fill="rgb(226,151,5)" rx="2" ry="2" />
<text  x="1142.43" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (16 samples, 0.27%)</title><rect x="182.9" y="1957" width="3.2" height="15.0" fill="rgb(250,185,50)" rx="2" ry="2" />
<text  x="185.93" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="519.9" y="2005" width="0.4" height="15.0" fill="rgb(214,174,32)" rx="2" ry="2" />
<text  x="522.88" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="102.2" y="53" width="0.4" height="15.0" fill="rgb(251,122,23)" rx="2" ry="2" />
<text  x="105.22" y="63.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="746.6" y="1909" width="0.2" height="15.0" fill="rgb(234,146,52)" rx="2" ry="2" />
<text  x="749.56" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (4 samples, 0.07%)</title><rect x="20.1" y="1973" width="0.8" height="15.0" fill="rgb(236,225,18)" rx="2" ry="2" />
<text  x="23.11" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="834.0" y="2005" width="0.4" height="15.0" fill="rgb(241,191,3)" rx="2" ry="2" />
<text  x="837.02" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="519.5" y="2005" width="0.2" height="15.0" fill="rgb(253,65,37)" rx="2" ry="2" />
<text  x="522.48" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="1187.8" y="2053" width="0.4" height="15.0" fill="rgb(241,79,32)" rx="2" ry="2" />
<text  x="1190.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="437" width="45.0" height="15.0" fill="rgb(214,159,33)" rx="2" ry="2" />
<text  x="63.77" y="447.5" >[unk..</text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="249.4" y="1797" width="0.8" height="15.0" fill="rgb(229,179,13)" rx="2" ry="2" />
<text  x="252.37" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="517" width="45.0" height="15.0" fill="rgb(214,152,40)" rx="2" ry="2" />
<text  x="63.77" y="527.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="681.3" y="1925" width="0.8" height="15.0" fill="rgb(216,123,32)" rx="2" ry="2" />
<text  x="684.31" y="1935.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="174.8" y="1973" width="0.8" height="15.0" fill="rgb(218,22,30)" rx="2" ry="2" />
<text  x="177.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1653" width="45.0" height="15.0" fill="rgb(235,173,18)" rx="2" ry="2" />
<text  x="63.77" y="1663.5" >[unk..</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (8 samples, 0.13%)</title><rect x="343.6" y="1957" width="1.6" height="15.0" fill="rgb(245,41,30)" rx="2" ry="2" />
<text  x="346.57" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="740.4" y="1989" width="0.2" height="15.0" fill="rgb(248,1,1)" rx="2" ry="2" />
<text  x="743.41" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="174.4" y="1941" width="0.4" height="15.0" fill="rgb(245,93,29)" rx="2" ry="2" />
<text  x="177.41" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (18 samples, 0.30%)</title><rect x="1027.4" y="2037" width="3.5" height="15.0" fill="rgb(253,37,28)" rx="2" ry="2" />
<text  x="1030.38" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="105.4" y="37" width="0.2" height="15.0" fill="rgb(215,79,48)" rx="2" ry="2" />
<text  x="108.39" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="1033.7" y="1989" width="0.8" height="15.0" fill="rgb(208,76,37)" rx="2" ry="2" />
<text  x="1036.72" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1139.2" y="1941" width="0.2" height="15.0" fill="rgb(230,185,13)" rx="2" ry="2" />
<text  x="1142.23" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (10 samples, 0.17%)</title><rect x="163.1" y="1957" width="2.0" height="15.0" fill="rgb(212,119,20)" rx="2" ry="2" />
<text  x="166.10" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="363.4" y="1989" width="0.2" height="15.0" fill="rgb(246,175,35)" rx="2" ry="2" />
<text  x="366.41" y="1999.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="1142.0" y="1973" width="0.2" height="15.0" fill="rgb(233,157,17)" rx="2" ry="2" />
<text  x="1145.01" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.5" y="1957" width="0.2" height="15.0" fill="rgb(216,99,13)" rx="2" ry="2" />
<text  x="491.54" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (97 samples, 1.63%)</title><rect x="704.5" y="1893" width="19.3" height="15.0" fill="rgb(232,172,2)" rx="2" ry="2" />
<text  x="707.51" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="596.2" y="1989" width="0.6" height="15.0" fill="rgb(213,58,40)" rx="2" ry="2" />
<text  x="599.23" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="12.6" y="1909" width="1.0" height="15.0" fill="rgb(237,169,32)" rx="2" ry="2" />
<text  x="15.58" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.3" y="1925" width="0.2" height="15.0" fill="rgb(219,155,20)" rx="2" ry="2" />
<text  x="478.26" y="1935.5" ></text>
</g>
<g >
<title>__ptep_modify_prot_start (1 samples, 0.02%)</title><rect x="596.6" y="1861" width="0.2" height="15.0" fill="rgb(242,93,34)" rx="2" ry="2" />
<text  x="599.63" y="1871.5" ></text>
</g>
<g >
<title>memchr@plt (3 samples, 0.05%)</title><rect x="1025.0" y="2037" width="0.6" height="15.0" fill="rgb(235,179,22)" rx="2" ry="2" />
<text  x="1028.00" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="378.1" y="1909" width="0.2" height="15.0" fill="rgb(212,85,3)" rx="2" ry="2" />
<text  x="381.08" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="597" width="45.0" height="15.0" fill="rgb(229,107,4)" rx="2" ry="2" />
<text  x="63.77" y="607.5" >[unk..</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="12.4" y="1893" width="0.2" height="15.0" fill="rgb(229,171,8)" rx="2" ry="2" />
<text  x="15.38" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="607.9" y="1973" width="0.6" height="15.0" fill="rgb(215,58,50)" rx="2" ry="2" />
<text  x="610.93" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="366.8" y="1909" width="0.4" height="15.0" fill="rgb(237,98,50)" rx="2" ry="2" />
<text  x="369.78" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="585.9" y="1941" width="0.2" height="15.0" fill="rgb(206,188,21)" rx="2" ry="2" />
<text  x="588.92" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="105.6" y="181" width="0.2" height="15.0" fill="rgb(251,90,44)" rx="2" ry="2" />
<text  x="108.59" y="191.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="92.5" y="37" width="0.2" height="15.0" fill="rgb(216,204,5)" rx="2" ry="2" />
<text  x="95.50" y="47.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="272.0" y="1381" width="0.8" height="15.0" fill="rgb(205,90,52)" rx="2" ry="2" />
<text  x="274.98" y="1391.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="615.9" y="1973" width="0.8" height="15.0" fill="rgb(239,61,7)" rx="2" ry="2" />
<text  x="618.87" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="576.6" y="1989" width="0.6" height="15.0" fill="rgb(205,85,19)" rx="2" ry="2" />
<text  x="579.60" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (41 samples, 0.69%)</title><rect x="868.3" y="2005" width="8.2" height="15.0" fill="rgb(237,29,37)" rx="2" ry="2" />
<text  x="871.33" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1121.2" y="2005" width="0.2" height="15.0" fill="rgb(229,66,47)" rx="2" ry="2" />
<text  x="1124.18" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="720.6" y="1813" width="0.2" height="15.0" fill="rgb(234,180,54)" rx="2" ry="2" />
<text  x="723.58" y="1823.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="731.1" y="1925" width="0.4" height="15.0" fill="rgb(220,4,14)" rx="2" ry="2" />
<text  x="734.09" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="384.0" y="1925" width="0.2" height="15.0" fill="rgb(233,86,30)" rx="2" ry="2" />
<text  x="387.03" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.07%)</title><rect x="1189.2" y="2053" width="0.8" height="15.0" fill="rgb(217,48,51)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="202.8" y="2021" width="0.4" height="15.0" fill="rgb(214,219,19)" rx="2" ry="2" />
<text  x="205.77" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (7 samples, 0.12%)</title><rect x="820.9" y="2005" width="1.4" height="15.0" fill="rgb(208,225,30)" rx="2" ry="2" />
<text  x="823.93" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (64 samples, 1.08%)</title><rect x="934.0" y="1957" width="12.7" height="15.0" fill="rgb(242,9,6)" rx="2" ry="2" />
<text  x="936.97" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (2 samples, 0.03%)</title><rect x="889.0" y="2037" width="0.3" height="15.0" fill="rgb(243,146,14)" rx="2" ry="2" />
<text  x="891.95" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.18%)</title><rect x="122.1" y="1957" width="2.1" height="15.0" fill="rgb(235,52,45)" rx="2" ry="2" />
<text  x="125.05" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="389" width="45.0" height="15.0" fill="rgb(212,145,15)" rx="2" ry="2" />
<text  x="63.77" y="399.5" >[unk..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="569.7" y="1909" width="0.4" height="15.0" fill="rgb(219,96,22)" rx="2" ry="2" />
<text  x="572.66" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (36 samples, 0.61%)</title><rect x="449.1" y="2005" width="7.1" height="15.0" fill="rgb(206,70,22)" rx="2" ry="2" />
<text  x="452.08" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="15.0" y="1957" width="0.2" height="15.0" fill="rgb(230,216,33)" rx="2" ry="2" />
<text  x="17.96" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (159 samples, 2.67%)</title><rect x="955.4" y="1989" width="31.5" height="15.0" fill="rgb(228,222,48)" rx="2" ry="2" />
<text  x="958.39" y="1999.5" >fo..</text>
</g>
<g >
<title>ip_rcv_finish (90 samples, 1.51%)</title><rect x="259.3" y="1589" width="17.8" height="15.0" fill="rgb(240,144,54)" rx="2" ry="2" />
<text  x="262.29" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="195.4" y="2021" width="0.4" height="15.0" fill="rgb(244,79,10)" rx="2" ry="2" />
<text  x="198.43" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="334.8" y="1973" width="0.2" height="15.0" fill="rgb(214,136,26)" rx="2" ry="2" />
<text  x="337.85" y="1983.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.20%)</title><rect x="1022.2" y="2037" width="2.4" height="15.0" fill="rgb(205,130,46)" rx="2" ry="2" />
<text  x="1025.22" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (5 samples, 0.08%)</title><rect x="524.4" y="2037" width="1.0" height="15.0" fill="rgb(251,176,38)" rx="2" ry="2" />
<text  x="527.44" y="2047.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="612.3" y="1989" width="0.2" height="15.0" fill="rgb(206,156,54)" rx="2" ry="2" />
<text  x="615.30" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="392.8" y="1957" width="0.4" height="15.0" fill="rgb(213,30,43)" rx="2" ry="2" />
<text  x="395.76" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="168.1" y="1973" width="0.4" height="15.0" fill="rgb(233,104,24)" rx="2" ry="2" />
<text  x="171.06" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="576.4" y="1989" width="0.2" height="15.0" fill="rgb(219,20,30)" rx="2" ry="2" />
<text  x="579.40" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (35 samples, 0.59%)</title><rect x="195.8" y="1989" width="7.0" height="15.0" fill="rgb(232,76,44)" rx="2" ry="2" />
<text  x="198.83" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="681.7" y="1909" width="0.4" height="15.0" fill="rgb(205,8,12)" rx="2" ry="2" />
<text  x="684.71" y="1919.5" ></text>
</g>
<g >
<title>import_iovec (4 samples, 0.07%)</title><rect x="232.3" y="1925" width="0.8" height="15.0" fill="rgb(235,17,27)" rx="2" ry="2" />
<text  x="235.32" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="826.1" y="1989" width="1.2" height="15.0" fill="rgb(218,181,19)" rx="2" ry="2" />
<text  x="829.08" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="1176.7" y="2053" width="0.2" height="15.0" fill="rgb(250,170,23)" rx="2" ry="2" />
<text  x="1179.71" y="2063.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="594.4" y="1845" width="0.2" height="15.0" fill="rgb(233,31,16)" rx="2" ry="2" />
<text  x="597.45" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="102.2" y="37" width="0.4" height="15.0" fill="rgb(230,129,17)" rx="2" ry="2" />
<text  x="105.22" y="47.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (4 samples, 0.07%)</title><rect x="232.3" y="1909" width="0.8" height="15.0" fill="rgb(221,172,28)" rx="2" ry="2" />
<text  x="235.32" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="880.4" y="1973" width="0.2" height="15.0" fill="rgb(251,50,14)" rx="2" ry="2" />
<text  x="883.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="521.1" y="2037" width="0.2" height="15.0" fill="rgb(246,21,13)" rx="2" ry="2" />
<text  x="524.07" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1701" width="45.0" height="15.0" fill="rgb(221,22,13)" rx="2" ry="2" />
<text  x="63.77" y="1711.5" >[unk..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="629.0" y="1973" width="0.2" height="15.0" fill="rgb(233,80,8)" rx="2" ry="2" />
<text  x="631.95" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="99.6" y="53" width="1.8" height="15.0" fill="rgb(231,82,37)" rx="2" ry="2" />
<text  x="102.64" y="63.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="860.2" y="2005" width="0.2" height="15.0" fill="rgb(247,127,17)" rx="2" ry="2" />
<text  x="863.19" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="390.2" y="1909" width="0.4" height="15.0" fill="rgb(246,103,17)" rx="2" ry="2" />
<text  x="393.18" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (87 samples, 1.46%)</title><rect x="259.5" y="1493" width="17.2" height="15.0" fill="rgb(218,85,10)" rx="2" ry="2" />
<text  x="262.49" y="1503.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.10%)</title><rect x="323.1" y="1957" width="1.2" height="15.0" fill="rgb(221,168,52)" rx="2" ry="2" />
<text  x="326.15" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (90 samples, 1.51%)</title><rect x="667.0" y="1973" width="17.9" height="15.0" fill="rgb(224,109,1)" rx="2" ry="2" />
<text  x="670.03" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (5 samples, 0.08%)</title><rect x="826.3" y="1973" width="1.0" height="15.0" fill="rgb(243,203,13)" rx="2" ry="2" />
<text  x="829.28" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1034.5" y="2037" width="0.2" height="15.0" fill="rgb(245,79,45)" rx="2" ry="2" />
<text  x="1037.52" y="2047.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="246.2" y="1781" width="0.2" height="15.0" fill="rgb(215,81,22)" rx="2" ry="2" />
<text  x="249.20" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (277 samples, 4.66%)</title><rect x="310.5" y="2037" width="54.9" height="15.0" fill="rgb(214,93,25)" rx="2" ry="2" />
<text  x="313.45" y="2047.5" >faceb..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="196.4" y="1877" width="0.2" height="15.0" fill="rgb(246,143,21)" rx="2" ry="2" />
<text  x="199.42" y="1887.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="257.7" y="1749" width="0.2" height="15.0" fill="rgb(206,33,16)" rx="2" ry="2" />
<text  x="260.70" y="1759.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.6" y="1861" width="0.8" height="15.0" fill="rgb(209,2,53)" rx="2" ry="2" />
<text  x="14.59" y="1871.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="229.5" y="1845" width="0.2" height="15.0" fill="rgb(206,122,20)" rx="2" ry="2" />
<text  x="232.54" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="647.4" y="2037" width="0.4" height="15.0" fill="rgb(211,120,9)" rx="2" ry="2" />
<text  x="650.40" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="585.3" y="1941" width="0.4" height="15.0" fill="rgb(227,178,45)" rx="2" ry="2" />
<text  x="588.32" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="167.1" y="1973" width="0.4" height="15.0" fill="rgb(229,181,35)" rx="2" ry="2" />
<text  x="170.07" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="878.2" y="1989" width="2.4" height="15.0" fill="rgb(228,40,20)" rx="2" ry="2" />
<text  x="881.24" y="1999.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1022.0" y="1877" width="0.2" height="15.0" fill="rgb(211,59,4)" rx="2" ry="2" />
<text  x="1025.02" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (42 samples, 0.71%)</title><rect x="373.7" y="2037" width="8.3" height="15.0" fill="rgb(222,121,30)" rx="2" ry="2" />
<text  x="376.72" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="659.7" y="2005" width="2.2" height="15.0" fill="rgb(233,178,45)" rx="2" ry="2" />
<text  x="662.69" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="478.2" y="1909" width="0.2" height="15.0" fill="rgb(228,195,28)" rx="2" ry="2" />
<text  x="481.23" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="457.2" y="1957" width="0.2" height="15.0" fill="rgb(228,216,39)" rx="2" ry="2" />
<text  x="460.21" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.3" y="1941" width="0.2" height="15.0" fill="rgb(229,225,7)" rx="2" ry="2" />
<text  x="478.26" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="731.5" y="1941" width="0.2" height="15.0" fill="rgb(249,45,26)" rx="2" ry="2" />
<text  x="734.49" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="194.8" y="1957" width="0.4" height="15.0" fill="rgb(221,151,44)" rx="2" ry="2" />
<text  x="197.83" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (4 samples, 0.07%)</title><rect x="638.5" y="2005" width="0.8" height="15.0" fill="rgb(248,55,26)" rx="2" ry="2" />
<text  x="641.47" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (18 samples, 0.30%)</title><rect x="359.0" y="1989" width="3.6" height="15.0" fill="rgb(253,11,9)" rx="2" ry="2" />
<text  x="362.04" y="1999.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="1022.0" y="1909" width="0.2" height="15.0" fill="rgb(220,69,46)" rx="2" ry="2" />
<text  x="1025.02" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (42 samples, 0.71%)</title><rect x="561.9" y="1957" width="8.4" height="15.0" fill="rgb(227,96,30)" rx="2" ry="2" />
<text  x="564.92" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1077" width="45.0" height="15.0" fill="rgb(251,157,19)" rx="2" ry="2" />
<text  x="63.77" y="1087.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="602.6" y="1989" width="3.2" height="15.0" fill="rgb(233,50,45)" rx="2" ry="2" />
<text  x="605.58" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="527.2" y="1941" width="0.2" height="15.0" fill="rgb(247,26,41)" rx="2" ry="2" />
<text  x="530.22" y="1951.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="87.1" y="37" width="0.2" height="15.0" fill="rgb(235,76,13)" rx="2" ry="2" />
<text  x="90.15" y="47.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="1035.5" y="2053" width="1.0" height="15.0" fill="rgb(205,123,31)" rx="2" ry="2" />
<text  x="1038.51" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="105.2" y="53" width="0.2" height="15.0" fill="rgb(216,18,48)" rx="2" ry="2" />
<text  x="108.19" y="63.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="384.0" y="1829" width="0.2" height="15.0" fill="rgb(238,223,6)" rx="2" ry="2" />
<text  x="387.03" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (25 samples, 0.42%)</title><rect x="121.7" y="1989" width="4.9" height="15.0" fill="rgb(250,185,52)" rx="2" ry="2" />
<text  x="124.65" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="1099.4" y="1893" width="0.2" height="15.0" fill="rgb(234,13,21)" rx="2" ry="2" />
<text  x="1102.37" y="1903.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="729.7" y="1909" width="0.2" height="15.0" fill="rgb(246,205,52)" rx="2" ry="2" />
<text  x="732.70" y="1919.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="948.6" y="1989" width="0.2" height="15.0" fill="rgb(243,64,21)" rx="2" ry="2" />
<text  x="951.65" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="448.1" y="1893" width="0.2" height="15.0" fill="rgb(242,138,48)" rx="2" ry="2" />
<text  x="451.09" y="1903.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="890.7" y="2037" width="0.2" height="15.0" fill="rgb(225,31,4)" rx="2" ry="2" />
<text  x="893.74" y="2047.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (8 samples, 0.13%)</title><rect x="929.4" y="1973" width="1.6" height="15.0" fill="rgb(231,183,42)" rx="2" ry="2" />
<text  x="932.41" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="820.5" y="2005" width="0.4" height="15.0" fill="rgb(208,77,37)" rx="2" ry="2" />
<text  x="823.53" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="725" width="45.0" height="15.0" fill="rgb(230,136,44)" rx="2" ry="2" />
<text  x="63.77" y="735.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="372.5" y="1973" width="0.2" height="15.0" fill="rgb(230,150,9)" rx="2" ry="2" />
<text  x="375.53" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (22 samples, 0.37%)</title><rect x="643.0" y="2037" width="4.4" height="15.0" fill="rgb(252,158,51)" rx="2" ry="2" />
<text  x="646.04" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="922.9" y="1893" width="0.2" height="15.0" fill="rgb(250,57,29)" rx="2" ry="2" />
<text  x="925.86" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="986.5" y="1877" width="0.2" height="15.0" fill="rgb(223,128,49)" rx="2" ry="2" />
<text  x="989.52" y="1887.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="307.5" y="1893" width="0.8" height="15.0" fill="rgb(234,102,13)" rx="2" ry="2" />
<text  x="310.48" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="909.4" y="2005" width="0.2" height="15.0" fill="rgb(254,221,51)" rx="2" ry="2" />
<text  x="912.38" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="246.2" y="1845" width="0.2" height="15.0" fill="rgb(219,186,41)" rx="2" ry="2" />
<text  x="249.20" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (41 samples, 0.69%)</title><rect x="460.4" y="1989" width="8.1" height="15.0" fill="rgb(246,58,46)" rx="2" ry="2" />
<text  x="463.38" y="1999.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="1049.4" y="1781" width="0.2" height="15.0" fill="rgb(220,6,17)" rx="2" ry="2" />
<text  x="1052.39" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (355 samples, 5.97%)</title><rect x="226.2" y="2021" width="70.4" height="15.0" fill="rgb(239,139,27)" rx="2" ry="2" />
<text  x="229.17" y="2031.5" >entry_S..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="386.0" y="1973" width="0.2" height="15.0" fill="rgb(241,73,22)" rx="2" ry="2" />
<text  x="389.01" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="1188.2" y="2053" width="1.0" height="15.0" fill="rgb(226,169,23)" rx="2" ry="2" />
<text  x="1191.22" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="892.3" y="2021" width="2.6" height="15.0" fill="rgb(229,77,40)" rx="2" ry="2" />
<text  x="895.32" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (6 samples, 0.10%)</title><rect x="393.4" y="2037" width="1.1" height="15.0" fill="rgb(252,180,13)" rx="2" ry="2" />
<text  x="396.35" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.93%)</title><rect x="60.8" y="53" width="22.8" height="15.0" fill="rgb(241,68,40)" rx="2" ry="2" />
<text  x="63.77" y="63.5" >[..</text>
</g>
<g >
<title>__vdso_clock_gettime (27 samples, 0.45%)</title><rect x="219.4" y="2021" width="5.4" height="15.0" fill="rgb(229,102,32)" rx="2" ry="2" />
<text  x="222.43" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="645" width="45.0" height="15.0" fill="rgb(212,165,12)" rx="2" ry="2" />
<text  x="63.77" y="655.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1125" width="45.0" height="15.0" fill="rgb(231,13,28)" rx="2" ry="2" />
<text  x="63.77" y="1135.5" >[unk..</text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="308.7" y="2037" width="0.2" height="15.0" fill="rgb(248,84,19)" rx="2" ry="2" />
<text  x="311.67" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (78 samples, 1.31%)</title><rect x="791.4" y="1973" width="15.4" height="15.0" fill="rgb(224,92,35)" rx="2" ry="2" />
<text  x="794.38" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (16 samples, 0.27%)</title><rect x="735.8" y="1957" width="3.2" height="15.0" fill="rgb(214,79,43)" rx="2" ry="2" />
<text  x="738.85" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.6" y="1941" width="0.8" height="15.0" fill="rgb(242,213,9)" rx="2" ry="2" />
<text  x="14.59" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="817.8" y="1989" width="0.2" height="15.0" fill="rgb(241,104,30)" rx="2" ry="2" />
<text  x="820.75" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (13 samples, 0.22%)</title><rect x="340.0" y="1957" width="2.6" height="15.0" fill="rgb(206,136,52)" rx="2" ry="2" />
<text  x="343.00" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="172.6" y="1973" width="0.4" height="15.0" fill="rgb(215,21,31)" rx="2" ry="2" />
<text  x="175.62" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="186.9" y="2021" width="1.0" height="15.0" fill="rgb(243,118,18)" rx="2" ry="2" />
<text  x="189.90" y="2031.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.10%)</title><rect x="12.4" y="1973" width="1.2" height="15.0" fill="rgb(205,96,22)" rx="2" ry="2" />
<text  x="15.38" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="384.6" y="1941" width="0.2" height="15.0" fill="rgb(207,151,3)" rx="2" ry="2" />
<text  x="387.63" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="343.4" y="1957" width="0.2" height="15.0" fill="rgb(229,114,49)" rx="2" ry="2" />
<text  x="346.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="619.2" y="1973" width="0.4" height="15.0" fill="rgb(245,218,29)" rx="2" ry="2" />
<text  x="622.24" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="738.4" y="1941" width="0.4" height="15.0" fill="rgb(209,165,48)" rx="2" ry="2" />
<text  x="741.43" y="1951.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(236,64,18)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="187.7" y="2005" width="0.2" height="15.0" fill="rgb(229,117,17)" rx="2" ry="2" />
<text  x="190.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="341" width="45.0" height="15.0" fill="rgb(237,175,29)" rx="2" ry="2" />
<text  x="63.77" y="351.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="477.6" y="1925" width="0.8" height="15.0" fill="rgb(231,146,20)" rx="2" ry="2" />
<text  x="480.64" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="200.8" y="1893" width="0.2" height="15.0" fill="rgb(252,185,20)" rx="2" ry="2" />
<text  x="203.78" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1030.7" y="1989" width="0.2" height="15.0" fill="rgb(250,69,19)" rx="2" ry="2" />
<text  x="1033.75" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="979.2" y="1877" width="0.2" height="15.0" fill="rgb(223,111,3)" rx="2" ry="2" />
<text  x="982.19" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="199.0" y="1909" width="0.4" height="15.0" fill="rgb(225,189,40)" rx="2" ry="2" />
<text  x="202.00" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="367.2" y="1877" width="0.2" height="15.0" fill="rgb(224,199,42)" rx="2" ry="2" />
<text  x="370.17" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="126.0" y="1861" width="0.2" height="15.0" fill="rgb(239,114,20)" rx="2" ry="2" />
<text  x="129.02" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="834.4" y="2005" width="0.4" height="15.0" fill="rgb(227,122,46)" rx="2" ry="2" />
<text  x="837.41" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (25 samples, 0.42%)</title><rect x="315.6" y="1973" width="5.0" height="15.0" fill="rgb(253,215,29)" rx="2" ry="2" />
<text  x="318.61" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(225,205,10)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>__skb_clone (8 samples, 0.13%)</title><rect x="283.7" y="1797" width="1.6" height="15.0" fill="rgb(215,27,12)" rx="2" ry="2" />
<text  x="286.68" y="1807.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="299.9" y="2037" width="0.6" height="15.0" fill="rgb(213,57,40)" rx="2" ry="2" />
<text  x="302.94" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="15.0" y="1941" width="0.2" height="15.0" fill="rgb(234,12,36)" rx="2" ry="2" />
<text  x="17.96" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (21 samples, 0.35%)</title><rect x="321.4" y="1989" width="4.1" height="15.0" fill="rgb(210,72,54)" rx="2" ry="2" />
<text  x="324.36" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (16 samples, 0.27%)</title><rect x="1146.2" y="2037" width="3.1" height="15.0" fill="rgb(244,38,50)" rx="2" ry="2" />
<text  x="1149.17" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (258 samples, 4.34%)</title><rect x="457.4" y="2021" width="51.2" height="15.0" fill="rgb(251,81,43)" rx="2" ry="2" />
<text  x="460.41" y="2031.5" >[unkn..</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="541.5" y="1877" width="0.8" height="15.0" fill="rgb(228,103,29)" rx="2" ry="2" />
<text  x="544.50" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(230,153,9)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1989" width="45.0" height="15.0" fill="rgb(234,158,50)" rx="2" ry="2" />
<text  x="63.77" y="1999.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="608.5" y="1973" width="0.2" height="15.0" fill="rgb(224,113,32)" rx="2" ry="2" />
<text  x="611.53" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (7 samples, 0.12%)</title><rect x="191.7" y="1989" width="1.3" height="15.0" fill="rgb(254,75,11)" rx="2" ry="2" />
<text  x="194.66" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="569.7" y="1925" width="0.4" height="15.0" fill="rgb(218,1,17)" rx="2" ry="2" />
<text  x="572.66" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (6 samples, 0.10%)</title><rect x="457.4" y="1989" width="1.2" height="15.0" fill="rgb(212,6,50)" rx="2" ry="2" />
<text  x="460.41" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="483.6" y="1909" width="0.2" height="15.0" fill="rgb(216,143,27)" rx="2" ry="2" />
<text  x="486.59" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="966.1" y="1893" width="0.2" height="15.0" fill="rgb(218,161,22)" rx="2" ry="2" />
<text  x="969.10" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (15 samples, 0.25%)</title><rect x="183.1" y="1941" width="3.0" height="15.0" fill="rgb(254,100,14)" rx="2" ry="2" />
<text  x="186.13" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="587.1" y="1893" width="0.2" height="15.0" fill="rgb(228,52,9)" rx="2" ry="2" />
<text  x="590.11" y="1903.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="541.5" y="1861" width="0.8" height="15.0" fill="rgb(241,140,27)" rx="2" ry="2" />
<text  x="544.50" y="1871.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1139.2" y="1909" width="0.2" height="15.0" fill="rgb(220,216,15)" rx="2" ry="2" />
<text  x="1142.23" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (1 samples, 0.02%)</title><rect x="15.0" y="2037" width="0.2" height="15.0" fill="rgb(230,217,4)" rx="2" ry="2" />
<text  x="17.96" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="19.9" y="1957" width="0.2" height="15.0" fill="rgb(218,136,43)" rx="2" ry="2" />
<text  x="22.92" y="1967.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="291.8" y="1877" width="0.2" height="15.0" fill="rgb(232,67,26)" rx="2" ry="2" />
<text  x="294.81" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="598.4" y="1989" width="0.6" height="15.0" fill="rgb(214,146,33)" rx="2" ry="2" />
<text  x="601.41" y="1999.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="12.4" y="2053" width="1.2" height="15.0" fill="rgb(210,134,33)" rx="2" ry="2" />
<text  x="15.38" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (211 samples, 3.55%)</title><rect x="126.6" y="1989" width="41.9" height="15.0" fill="rgb(254,133,37)" rx="2" ry="2" />
<text  x="129.61" y="1999.5" >fol..</text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="363.4" y="1973" width="0.2" height="15.0" fill="rgb(225,124,12)" rx="2" ry="2" />
<text  x="366.41" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="366.8" y="1893" width="0.4" height="15.0" fill="rgb(208,180,40)" rx="2" ry="2" />
<text  x="369.78" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="193.8" y="1957" width="0.2" height="15.0" fill="rgb(221,77,36)" rx="2" ry="2" />
<text  x="196.84" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (45 samples, 0.76%)</title><rect x="264.4" y="1461" width="9.0" height="15.0" fill="rgb(216,184,7)" rx="2" ry="2" />
<text  x="267.44" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (3 samples, 0.05%)</title><rect x="1099.0" y="2005" width="0.6" height="15.0" fill="rgb(244,74,15)" rx="2" ry="2" />
<text  x="1101.97" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="197.2" y="1925" width="0.2" height="15.0" fill="rgb(236,95,34)" rx="2" ry="2" />
<text  x="200.21" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="125.0" y="1973" width="0.8" height="15.0" fill="rgb(209,179,20)" rx="2" ry="2" />
<text  x="128.03" y="1983.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="12.4" y="1861" width="0.2" height="15.0" fill="rgb(214,49,35)" rx="2" ry="2" />
<text  x="15.38" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="581.4" y="1973" width="0.2" height="15.0" fill="rgb(218,84,53)" rx="2" ry="2" />
<text  x="584.36" y="1983.5" ></text>
</g>
<g >
<title>sock_recvmsg (205 samples, 3.45%)</title><rect x="1042.8" y="1973" width="40.7" height="15.0" fill="rgb(233,176,48)" rx="2" ry="2" />
<text  x="1045.85" y="1983.5" >soc..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="337.4" y="1941" width="0.4" height="15.0" fill="rgb(236,40,50)" rx="2" ry="2" />
<text  x="340.43" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="331.9" y="1909" width="0.2" height="15.0" fill="rgb(233,32,34)" rx="2" ry="2" />
<text  x="334.87" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="391.4" y="1925" width="0.2" height="15.0" fill="rgb(205,172,49)" rx="2" ry="2" />
<text  x="394.37" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1148.7" y="1941" width="0.2" height="15.0" fill="rgb(246,96,15)" rx="2" ry="2" />
<text  x="1151.75" y="1951.5" ></text>
</g>
<g >
<title>page_frag_free (6 samples, 0.10%)</title><rect x="1046.8" y="1861" width="1.2" height="15.0" fill="rgb(239,7,5)" rx="2" ry="2" />
<text  x="1049.81" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="384.0" y="1957" width="0.2" height="15.0" fill="rgb(225,184,39)" rx="2" ry="2" />
<text  x="387.03" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="348.1" y="1973" width="0.2" height="15.0" fill="rgb(241,147,12)" rx="2" ry="2" />
<text  x="351.13" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1685" width="45.0" height="15.0" fill="rgb(205,85,21)" rx="2" ry="2" />
<text  x="63.77" y="1695.5" >[unk..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="328.9" y="1941" width="0.2" height="15.0" fill="rgb(240,223,27)" rx="2" ry="2" />
<text  x="331.90" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (28 samples, 0.47%)</title><rect x="315.0" y="1989" width="5.6" height="15.0" fill="rgb(251,170,51)" rx="2" ry="2" />
<text  x="318.02" y="1999.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="167.9" y="1973" width="0.2" height="15.0" fill="rgb(253,117,46)" rx="2" ry="2" />
<text  x="170.86" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (3 samples, 0.05%)</title><rect x="647.8" y="2037" width="0.6" height="15.0" fill="rgb(213,197,54)" rx="2" ry="2" />
<text  x="650.79" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="865.9" y="1989" width="2.4" height="15.0" fill="rgb(208,15,12)" rx="2" ry="2" />
<text  x="868.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (258 samples, 4.34%)</title><rect x="457.4" y="2037" width="51.2" height="15.0" fill="rgb(222,199,17)" rx="2" ry="2" />
<text  x="460.41" y="2047.5" >faceb..</text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1099.6" y="1989" width="0.2" height="15.0" fill="rgb(225,49,52)" rx="2" ry="2" />
<text  x="1102.57" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.62%)</title><rect x="365.4" y="2021" width="7.3" height="15.0" fill="rgb(252,103,25)" rx="2" ry="2" />
<text  x="368.39" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="791.2" y="1925" width="0.2" height="15.0" fill="rgb(224,83,27)" rx="2" ry="2" />
<text  x="794.18" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (7 samples, 0.12%)</title><rect x="636.1" y="2005" width="1.4" height="15.0" fill="rgb(238,60,46)" rx="2" ry="2" />
<text  x="639.09" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (16 samples, 0.27%)</title><rect x="860.4" y="2005" width="3.2" height="15.0" fill="rgb(226,58,33)" rx="2" ry="2" />
<text  x="863.39" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="986.5" y="1797" width="0.2" height="15.0" fill="rgb(223,226,50)" rx="2" ry="2" />
<text  x="989.52" y="1807.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="1083.7" y="1925" width="0.8" height="15.0" fill="rgb(247,83,47)" rx="2" ry="2" />
<text  x="1086.70" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="627.4" y="1845" width="0.2" height="15.0" fill="rgb(207,182,16)" rx="2" ry="2" />
<text  x="630.37" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="479.0" y="1909" width="0.2" height="15.0" fill="rgb(242,12,30)" rx="2" ry="2" />
<text  x="482.03" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1158.3" y="2037" width="0.2" height="15.0" fill="rgb(207,129,12)" rx="2" ry="2" />
<text  x="1161.27" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="402.9" y="2005" width="0.2" height="15.0" fill="rgb(236,173,33)" rx="2" ry="2" />
<text  x="405.87" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="980.6" y="1893" width="0.2" height="15.0" fill="rgb(212,87,16)" rx="2" ry="2" />
<text  x="983.57" y="1903.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="246.6" y="1877" width="0.2" height="15.0" fill="rgb(230,7,19)" rx="2" ry="2" />
<text  x="249.59" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12 samples, 0.20%)</title><rect x="644.2" y="1989" width="2.4" height="15.0" fill="rgb(228,45,50)" rx="2" ry="2" />
<text  x="647.23" y="1999.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1082.9" y="1957" width="0.4" height="15.0" fill="rgb(211,148,42)" rx="2" ry="2" />
<text  x="1085.91" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (4 samples, 0.07%)</title><rect x="319.2" y="1941" width="0.8" height="15.0" fill="rgb(212,203,50)" rx="2" ry="2" />
<text  x="322.18" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="859.8" y="1973" width="0.4" height="15.0" fill="rgb(216,16,20)" rx="2" ry="2" />
<text  x="862.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.8" y="1973" width="0.2" height="15.0" fill="rgb(246,153,29)" rx="2" ry="2" />
<text  x="529.82" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="62.8" y="37" width="0.2" height="15.0" fill="rgb(225,155,3)" rx="2" ry="2" />
<text  x="65.75" y="47.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="821" width="45.0" height="15.0" fill="rgb(244,229,30)" rx="2" ry="2" />
<text  x="63.77" y="831.5" >[unk..</text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="967.5" y="1877" width="0.4" height="15.0" fill="rgb(224,107,27)" rx="2" ry="2" />
<text  x="970.49" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="390.0" y="1877" width="0.2" height="15.0" fill="rgb(241,11,10)" rx="2" ry="2" />
<text  x="392.98" y="1887.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="10.2" y="1893" width="0.2" height="15.0" fill="rgb(227,92,35)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="577.8" y="1989" width="0.2" height="15.0" fill="rgb(239,142,17)" rx="2" ry="2" />
<text  x="580.79" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 5.31%)</title><rect x="526.8" y="2021" width="62.7" height="15.0" fill="rgb(234,29,2)" rx="2" ry="2" />
<text  x="529.82" y="2031.5" >[unkno..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (16 samples, 0.27%)</title><rect x="182.9" y="1973" width="3.2" height="15.0" fill="rgb(243,97,42)" rx="2" ry="2" />
<text  x="185.93" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (389 samples, 6.54%)</title><rect x="740.6" y="2005" width="77.2" height="15.0" fill="rgb(248,209,6)" rx="2" ry="2" />
<text  x="743.61" y="2015.5" >facebook..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="594.6" y="1925" width="0.2" height="15.0" fill="rgb(224,3,42)" rx="2" ry="2" />
<text  x="597.65" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (4 samples, 0.07%)</title><rect x="606.7" y="2037" width="0.8" height="15.0" fill="rgb(223,213,15)" rx="2" ry="2" />
<text  x="609.74" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (17 samples, 0.29%)</title><rect x="156.2" y="1941" width="3.3" height="15.0" fill="rgb(224,146,36)" rx="2" ry="2" />
<text  x="159.16" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="791.2" y="1909" width="0.2" height="15.0" fill="rgb(254,49,43)" rx="2" ry="2" />
<text  x="794.18" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.50%)</title><rect x="859.8" y="2021" width="5.9" height="15.0" fill="rgb(213,81,17)" rx="2" ry="2" />
<text  x="862.80" y="2031.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1030.7" y="1957" width="0.2" height="15.0" fill="rgb(226,113,48)" rx="2" ry="2" />
<text  x="1033.75" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="868.1" y="1973" width="0.2" height="15.0" fill="rgb(247,193,22)" rx="2" ry="2" />
<text  x="871.13" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="105.6" y="69" width="0.2" height="15.0" fill="rgb(222,218,7)" rx="2" ry="2" />
<text  x="108.59" y="79.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1049.4" y="1845" width="0.2" height="15.0" fill="rgb(207,78,1)" rx="2" ry="2" />
<text  x="1052.39" y="1855.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="246.2" y="1573" width="0.2" height="15.0" fill="rgb(215,98,39)" rx="2" ry="2" />
<text  x="249.20" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="515.3" y="1989" width="0.2" height="15.0" fill="rgb(250,179,54)" rx="2" ry="2" />
<text  x="518.32" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="191.7" y="1973" width="0.4" height="15.0" fill="rgb(242,142,3)" rx="2" ry="2" />
<text  x="194.66" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (12 samples, 0.20%)</title><rect x="199.6" y="1925" width="2.4" height="15.0" fill="rgb(232,198,4)" rx="2" ry="2" />
<text  x="202.59" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (35 samples, 0.59%)</title><rect x="195.8" y="2021" width="7.0" height="15.0" fill="rgb(251,108,44)" rx="2" ry="2" />
<text  x="198.83" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1141" width="45.0" height="15.0" fill="rgb(236,183,38)" rx="2" ry="2" />
<text  x="63.77" y="1151.5" >[unk..</text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="1075.0" y="1861" width="0.4" height="15.0" fill="rgb(237,130,48)" rx="2" ry="2" />
<text  x="1077.97" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="226.8" y="2005" width="0.2" height="15.0" fill="rgb(226,89,52)" rx="2" ry="2" />
<text  x="229.76" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="661.7" y="1973" width="0.2" height="15.0" fill="rgb(237,91,8)" rx="2" ry="2" />
<text  x="664.68" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="721.0" y="1861" width="0.6" height="15.0" fill="rgb(232,14,26)" rx="2" ry="2" />
<text  x="723.97" y="1871.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(243,60,47)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="1098.4" y="1973" width="0.2" height="15.0" fill="rgb(230,221,31)" rx="2" ry="2" />
<text  x="1101.38" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="610.1" y="1957" width="1.4" height="15.0" fill="rgb(211,113,32)" rx="2" ry="2" />
<text  x="613.11" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="194.8" y="1941" width="0.4" height="15.0" fill="rgb(210,154,20)" rx="2" ry="2" />
<text  x="197.83" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="791.2" y="1941" width="0.2" height="15.0" fill="rgb(215,181,41)" rx="2" ry="2" />
<text  x="794.18" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1733" width="45.0" height="15.0" fill="rgb(206,186,23)" rx="2" ry="2" />
<text  x="63.77" y="1743.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (4 samples, 0.07%)</title><rect x="628.0" y="1973" width="0.8" height="15.0" fill="rgb(254,5,6)" rx="2" ry="2" />
<text  x="630.96" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="737.2" y="1909" width="0.2" height="15.0" fill="rgb(216,201,10)" rx="2" ry="2" />
<text  x="740.24" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1541" width="45.0" height="15.0" fill="rgb(231,0,20)" rx="2" ry="2" />
<text  x="63.77" y="1551.5" >[unk..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="737.2" y="1925" width="0.2" height="15.0" fill="rgb(230,37,14)" rx="2" ry="2" />
<text  x="740.24" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="581" width="45.0" height="15.0" fill="rgb(206,218,32)" rx="2" ry="2" />
<text  x="63.77" y="591.5" >[unk..</text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="363.0" y="2005" width="0.2" height="15.0" fill="rgb(214,24,8)" rx="2" ry="2" />
<text  x="366.01" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1140.2" y="2005" width="0.2" height="15.0" fill="rgb(247,169,18)" rx="2" ry="2" />
<text  x="1143.22" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="318.6" y="1893" width="0.4" height="15.0" fill="rgb(215,73,52)" rx="2" ry="2" />
<text  x="321.58" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="392.8" y="1989" width="0.4" height="15.0" fill="rgb(243,172,19)" rx="2" ry="2" />
<text  x="395.76" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="594.4" y="1781" width="0.2" height="15.0" fill="rgb(213,121,54)" rx="2" ry="2" />
<text  x="597.45" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="201.8" y="1909" width="0.2" height="15.0" fill="rgb(211,127,47)" rx="2" ry="2" />
<text  x="204.77" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="625.0" y="1925" width="0.2" height="15.0" fill="rgb(210,217,49)" rx="2" ry="2" />
<text  x="627.99" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="191.9" y="1957" width="0.2" height="15.0" fill="rgb(209,201,5)" rx="2" ry="2" />
<text  x="194.86" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="312.0" y="2005" width="0.2" height="15.0" fill="rgb(232,6,24)" rx="2" ry="2" />
<text  x="315.04" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@plt (2 samples, 0.03%)</title><rect x="1125.5" y="1957" width="0.4" height="15.0" fill="rgb(213,29,13)" rx="2" ry="2" />
<text  x="1128.55" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="488.3" y="1989" width="0.4" height="15.0" fill="rgb(218,194,0)" rx="2" ry="2" />
<text  x="491.35" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="584.7" y="1925" width="0.2" height="15.0" fill="rgb(206,128,2)" rx="2" ry="2" />
<text  x="587.73" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (47 samples, 0.79%)</title><rect x="13.6" y="2053" width="9.3" height="15.0" fill="rgb(213,165,5)" rx="2" ry="2" />
<text  x="16.57" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="890.9" y="2037" width="0.6" height="15.0" fill="rgb(254,44,48)" rx="2" ry="2" />
<text  x="893.93" y="2047.5" ></text>
</g>
<g >
<title>kfree (5 samples, 0.08%)</title><rect x="271.8" y="1397" width="1.0" height="15.0" fill="rgb(254,145,45)" rx="2" ry="2" />
<text  x="274.78" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="866.3" y="1925" width="0.2" height="15.0" fill="rgb(218,48,39)" rx="2" ry="2" />
<text  x="869.34" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="171.4" y="1973" width="0.2" height="15.0" fill="rgb(214,205,14)" rx="2" ry="2" />
<text  x="174.43" y="1983.5" ></text>
</g>
<g >
<title>__release_sock (3 samples, 0.05%)</title><rect x="1074.8" y="1909" width="0.6" height="15.0" fill="rgb(239,123,38)" rx="2" ry="2" />
<text  x="1077.78" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (4 samples, 0.07%)</title><rect x="198.8" y="1925" width="0.8" height="15.0" fill="rgb(218,229,5)" rx="2" ry="2" />
<text  x="201.80" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (63 samples, 1.06%)</title><rect x="508.6" y="2037" width="12.5" height="15.0" fill="rgb(226,206,31)" rx="2" ry="2" />
<text  x="511.57" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="592.9" y="1989" width="0.4" height="15.0" fill="rgb(217,157,2)" rx="2" ry="2" />
<text  x="595.86" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="161.3" y="1941" width="0.2" height="15.0" fill="rgb(249,188,12)" rx="2" ry="2" />
<text  x="164.32" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1525" width="45.0" height="15.0" fill="rgb(245,15,26)" rx="2" ry="2" />
<text  x="63.77" y="1535.5" >[unk..</text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="569.7" y="1861" width="0.2" height="15.0" fill="rgb(232,108,12)" rx="2" ry="2" />
<text  x="572.66" y="1871.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="285.3" y="1797" width="0.2" height="15.0" fill="rgb(216,102,33)" rx="2" ry="2" />
<text  x="288.27" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (3 samples, 0.05%)</title><rect x="487.6" y="1957" width="0.5" height="15.0" fill="rgb(229,136,26)" rx="2" ry="2" />
<text  x="490.55" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="196.4" y="1925" width="0.2" height="15.0" fill="rgb(233,174,15)" rx="2" ry="2" />
<text  x="199.42" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="865.9" y="1973" width="0.8" height="15.0" fill="rgb(217,151,12)" rx="2" ry="2" />
<text  x="868.95" y="1983.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="215.1" y="2021" width="0.2" height="15.0" fill="rgb(230,212,45)" rx="2" ry="2" />
<text  x="218.06" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="405" width="45.0" height="15.0" fill="rgb(229,130,18)" rx="2" ry="2" />
<text  x="63.77" y="415.5" >[unk..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="1141.4" y="1973" width="0.6" height="15.0" fill="rgb(253,119,52)" rx="2" ry="2" />
<text  x="1144.41" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="878.8" y="1973" width="1.6" height="15.0" fill="rgb(251,184,7)" rx="2" ry="2" />
<text  x="881.84" y="1983.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1111.3" y="2037" width="0.2" height="15.0" fill="rgb(228,85,54)" rx="2" ry="2" />
<text  x="1114.27" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="518.5" y="2005" width="1.0" height="15.0" fill="rgb(215,145,14)" rx="2" ry="2" />
<text  x="521.49" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (156 samples, 2.62%)</title><rect x="1112.3" y="2021" width="30.9" height="15.0" fill="rgb(231,213,16)" rx="2" ry="2" />
<text  x="1115.26" y="2031.5" >fo..</text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1024.6" y="2037" width="0.4" height="15.0" fill="rgb(211,61,3)" rx="2" ry="2" />
<text  x="1027.60" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1148.7" y="1877" width="0.2" height="15.0" fill="rgb(229,114,8)" rx="2" ry="2" />
<text  x="1151.75" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (9 samples, 0.15%)</title><rect x="733.7" y="1973" width="1.8" height="15.0" fill="rgb(217,217,37)" rx="2" ry="2" />
<text  x="736.67" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="489.9" y="1973" width="1.2" height="15.0" fill="rgb(243,19,33)" rx="2" ry="2" />
<text  x="492.93" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="82.2" y="37" width="0.8" height="15.0" fill="rgb(238,212,8)" rx="2" ry="2" />
<text  x="85.19" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="486.2" y="1941" width="1.2" height="15.0" fill="rgb(224,138,2)" rx="2" ry="2" />
<text  x="489.16" y="1951.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (8 samples, 0.13%)</title><rect x="16.5" y="1973" width="1.6" height="15.0" fill="rgb(247,81,39)" rx="2" ry="2" />
<text  x="19.54" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="126.0" y="1909" width="0.2" height="15.0" fill="rgb(239,95,11)" rx="2" ry="2" />
<text  x="129.02" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="331.1" y="1941" width="1.4" height="15.0" fill="rgb(237,212,16)" rx="2" ry="2" />
<text  x="334.08" y="1951.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.08%)</title><rect x="1143.4" y="2037" width="1.0" height="15.0" fill="rgb(244,150,47)" rx="2" ry="2" />
<text  x="1146.39" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="893.1" y="1989" width="1.4" height="15.0" fill="rgb(229,39,11)" rx="2" ry="2" />
<text  x="896.12" y="1999.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="1074.6" y="1925" width="1.2" height="15.0" fill="rgb(223,160,35)" rx="2" ry="2" />
<text  x="1077.58" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="176.4" y="2005" width="0.2" height="15.0" fill="rgb(250,11,6)" rx="2" ry="2" />
<text  x="179.39" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1381" width="45.0" height="15.0" fill="rgb(232,112,7)" rx="2" ry="2" />
<text  x="63.77" y="1391.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="591.3" y="1989" width="0.2" height="15.0" fill="rgb(211,50,24)" rx="2" ry="2" />
<text  x="594.27" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (26 samples, 0.44%)</title><rect x="386.6" y="1957" width="5.2" height="15.0" fill="rgb(213,152,44)" rx="2" ry="2" />
<text  x="389.61" y="1967.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.07%)</title><rect x="1141.4" y="2005" width="0.8" height="15.0" fill="rgb(237,27,14)" rx="2" ry="2" />
<text  x="1144.41" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="64.3" y="37" width="0.4" height="15.0" fill="rgb(237,207,6)" rx="2" ry="2" />
<text  x="67.34" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="728.5" y="1893" width="0.4" height="15.0" fill="rgb(209,59,48)" rx="2" ry="2" />
<text  x="731.51" y="1903.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="541.5" y="1909" width="0.8" height="15.0" fill="rgb(216,120,14)" rx="2" ry="2" />
<text  x="544.50" y="1919.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (214 samples, 3.60%)</title><rect x="1042.1" y="1989" width="42.4" height="15.0" fill="rgb(254,188,3)" rx="2" ry="2" />
<text  x="1045.05" y="1999.5" >SYS..</text>
</g>
<g >
<title>__ptep_modify_prot_start (1 samples, 0.02%)</title><rect x="427.7" y="1909" width="0.2" height="15.0" fill="rgb(220,100,31)" rx="2" ry="2" />
<text  x="430.66" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="277.7" y="1685" width="0.4" height="15.0" fill="rgb(205,89,24)" rx="2" ry="2" />
<text  x="280.73" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (5 samples, 0.08%)</title><rect x="459.4" y="1989" width="1.0" height="15.0" fill="rgb(234,211,54)" rx="2" ry="2" />
<text  x="462.39" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="105.6" y="85" width="0.2" height="15.0" fill="rgb(224,227,15)" rx="2" ry="2" />
<text  x="108.59" y="95.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="229.5" y="1893" width="0.2" height="15.0" fill="rgb(211,123,28)" rx="2" ry="2" />
<text  x="232.54" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (4 samples, 0.07%)</title><rect x="176.6" y="2005" width="0.8" height="15.0" fill="rgb(214,194,19)" rx="2" ry="2" />
<text  x="179.59" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="246.2" y="1861" width="0.2" height="15.0" fill="rgb(224,217,24)" rx="2" ry="2" />
<text  x="249.20" y="1871.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="596.6" y="1925" width="0.2" height="15.0" fill="rgb(229,61,15)" rx="2" ry="2" />
<text  x="599.63" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (18 samples, 0.30%)</title><rect x="1030.9" y="2037" width="3.6" height="15.0" fill="rgb(227,83,28)" rx="2" ry="2" />
<text  x="1033.95" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="986.3" y="1925" width="0.4" height="15.0" fill="rgb(214,18,27)" rx="2" ry="2" />
<text  x="989.33" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="648.4" y="2037" width="0.2" height="15.0" fill="rgb(251,186,17)" rx="2" ry="2" />
<text  x="651.39" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (791 samples, 13.29%)</title><rect x="58.8" y="2037" width="156.9" height="15.0" fill="rgb(239,135,9)" rx="2" ry="2" />
<text  x="61.79" y="2047.5" >[unknown]</text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="13.4" y="1829" width="0.2" height="15.0" fill="rgb(248,43,26)" rx="2" ry="2" />
<text  x="16.37" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (5 samples, 0.08%)</title><rect x="683.7" y="1925" width="1.0" height="15.0" fill="rgb(248,184,28)" rx="2" ry="2" />
<text  x="686.69" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="891.5" y="2037" width="0.4" height="15.0" fill="rgb(207,168,28)" rx="2" ry="2" />
<text  x="894.53" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="376.5" y="2005" width="3.2" height="15.0" fill="rgb(249,83,8)" rx="2" ry="2" />
<text  x="379.49" y="2015.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="286.9" y="1829" width="0.2" height="15.0" fill="rgb(227,204,49)" rx="2" ry="2" />
<text  x="289.85" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="894.5" y="2005" width="0.4" height="15.0" fill="rgb(225,55,36)" rx="2" ry="2" />
<text  x="897.50" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="517.9" y="2005" width="0.6" height="15.0" fill="rgb(220,197,48)" rx="2" ry="2" />
<text  x="520.90" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="384.0" y="1941" width="0.2" height="15.0" fill="rgb(228,223,1)" rx="2" ry="2" />
<text  x="387.03" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="90.9" y="37" width="0.2" height="15.0" fill="rgb(254,16,1)" rx="2" ry="2" />
<text  x="93.91" y="47.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="1083.7" y="1957" width="0.8" height="15.0" fill="rgb(239,199,41)" rx="2" ry="2" />
<text  x="1086.70" y="1967.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="858.6" y="1893" width="0.2" height="15.0" fill="rgb(235,24,17)" rx="2" ry="2" />
<text  x="861.61" y="1903.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="541.5" y="1925" width="0.8" height="15.0" fill="rgb(235,220,26)" rx="2" ry="2" />
<text  x="544.50" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="858.4" y="1909" width="0.2" height="15.0" fill="rgb(251,16,14)" rx="2" ry="2" />
<text  x="861.41" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1861" width="45.0" height="15.0" fill="rgb(237,99,8)" rx="2" ry="2" />
<text  x="63.77" y="1871.5" >[unk..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="515.3" y="1973" width="0.2" height="15.0" fill="rgb(213,229,41)" rx="2" ry="2" />
<text  x="518.32" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (5 samples, 0.08%)</title><rect x="926.2" y="1973" width="1.0" height="15.0" fill="rgb(227,14,33)" rx="2" ry="2" />
<text  x="929.24" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (32 samples, 0.54%)</title><rect x="277.1" y="1733" width="6.4" height="15.0" fill="rgb(226,62,46)" rx="2" ry="2" />
<text  x="280.14" y="1743.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="967.9" y="1877" width="0.2" height="15.0" fill="rgb(223,132,38)" rx="2" ry="2" />
<text  x="970.88" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="597.4" y="1989" width="0.2" height="15.0" fill="rgb(214,112,2)" rx="2" ry="2" />
<text  x="600.42" y="1999.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(244,214,51)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (40 samples, 0.67%)</title><rect x="437.0" y="2005" width="7.9" height="15.0" fill="rgb(229,75,15)" rx="2" ry="2" />
<text  x="439.98" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="678.3" y="1909" width="0.6" height="15.0" fill="rgb(233,174,37)" rx="2" ry="2" />
<text  x="681.34" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="858.4" y="1877" width="0.2" height="15.0" fill="rgb(221,228,48)" rx="2" ry="2" />
<text  x="861.41" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(222,101,10)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="105.8" y="1989" width="1.0" height="15.0" fill="rgb(228,192,29)" rx="2" ry="2" />
<text  x="108.79" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (28 samples, 0.47%)</title><rect x="674.6" y="1941" width="5.5" height="15.0" fill="rgb(242,214,6)" rx="2" ry="2" />
<text  x="677.57" y="1951.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1042.3" y="1973" width="0.3" height="15.0" fill="rgb(216,119,35)" rx="2" ry="2" />
<text  x="1045.25" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="142.3" y="1909" width="0.2" height="15.0" fill="rgb(210,30,47)" rx="2" ry="2" />
<text  x="145.28" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="665.0" y="1973" width="0.2" height="15.0" fill="rgb(205,27,48)" rx="2" ry="2" />
<text  x="668.05" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="126.0" y="1941" width="0.2" height="15.0" fill="rgb(246,157,41)" rx="2" ry="2" />
<text  x="129.02" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="515.3" y="1941" width="0.2" height="15.0" fill="rgb(221,180,45)" rx="2" ry="2" />
<text  x="518.32" y="1951.5" ></text>
</g>
<g >
<title>tcp_recvmsg (197 samples, 3.31%)</title><rect x="1043.8" y="1941" width="39.1" height="15.0" fill="rgb(252,148,14)" rx="2" ry="2" />
<text  x="1046.84" y="1951.5" >tcp..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="448.3" y="2005" width="0.4" height="15.0" fill="rgb(245,41,20)" rx="2" ry="2" />
<text  x="451.29" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="233.1" y="1925" width="0.2" height="15.0" fill="rgb(253,48,24)" rx="2" ry="2" />
<text  x="236.11" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="333.5" y="1973" width="0.2" height="15.0" fill="rgb(212,156,45)" rx="2" ry="2" />
<text  x="336.46" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="126.0" y="1957" width="0.6" height="15.0" fill="rgb(224,27,2)" rx="2" ry="2" />
<text  x="129.02" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (39 samples, 0.66%)</title><rect x="65.3" y="37" width="7.8" height="15.0" fill="rgb(217,44,1)" rx="2" ry="2" />
<text  x="68.33" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (47 samples, 0.79%)</title><rect x="561.1" y="1973" width="9.4" height="15.0" fill="rgb(214,89,16)" rx="2" ry="2" />
<text  x="564.13" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1176.5" y="2053" width="0.2" height="15.0" fill="rgb(251,90,21)" rx="2" ry="2" />
<text  x="1179.51" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="585.1" y="1925" width="0.2" height="15.0" fill="rgb(208,89,30)" rx="2" ry="2" />
<text  x="588.13" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="861.6" y="1989" width="0.2" height="15.0" fill="rgb(222,212,18)" rx="2" ry="2" />
<text  x="864.58" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (46 samples, 0.77%)</title><rect x="476.8" y="1941" width="9.2" height="15.0" fill="rgb(228,88,47)" rx="2" ry="2" />
<text  x="479.84" y="1951.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (2 samples, 0.03%)</title><rect x="62.4" y="37" width="0.4" height="15.0" fill="rgb(222,89,51)" rx="2" ry="2" />
<text  x="65.36" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="527.0" y="1957" width="0.2" height="15.0" fill="rgb(243,187,23)" rx="2" ry="2" />
<text  x="530.02" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="549" width="45.0" height="15.0" fill="rgb(246,29,40)" rx="2" ry="2" />
<text  x="63.77" y="559.5" >[unk..</text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="60.8" y="165" width="44.8" height="15.0" fill="rgb(250,64,26)" rx="2" ry="2" />
<text  x="63.77" y="175.5" >[unk..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (11 samples, 0.18%)</title><rect x="494.3" y="1957" width="2.2" height="15.0" fill="rgb(247,146,36)" rx="2" ry="2" />
<text  x="497.30" y="1967.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="10.2" y="1877" width="0.2" height="15.0" fill="rgb(222,177,12)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="448.1" y="1909" width="0.2" height="15.0" fill="rgb(207,83,47)" rx="2" ry="2" />
<text  x="451.09" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="333.5" y="1989" width="0.2" height="15.0" fill="rgb(236,131,52)" rx="2" ry="2" />
<text  x="336.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="392.6" y="2005" width="0.2" height="15.0" fill="rgb(210,187,47)" rx="2" ry="2" />
<text  x="395.56" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="213" width="45.0" height="15.0" fill="rgb(222,40,49)" rx="2" ry="2" />
<text  x="63.77" y="223.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (7 samples, 0.12%)</title><rect x="675.6" y="1925" width="1.3" height="15.0" fill="rgb(222,99,38)" rx="2" ry="2" />
<text  x="678.56" y="1935.5" ></text>
</g>
<g >
<title>malloc (33 samples, 0.55%)</title><rect x="1181.3" y="2053" width="6.5" height="15.0" fill="rgb(206,229,1)" rx="2" ry="2" />
<text  x="1184.27" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="560.7" y="1989" width="0.2" height="15.0" fill="rgb(247,95,12)" rx="2" ry="2" />
<text  x="563.73" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="338.6" y="1925" width="0.4" height="15.0" fill="rgb(233,199,42)" rx="2" ry="2" />
<text  x="341.62" y="1935.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="954.8" y="1957" width="0.2" height="15.0" fill="rgb(231,77,45)" rx="2" ry="2" />
<text  x="957.79" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="60.8" y="101" width="44.6" height="15.0" fill="rgb(221,212,17)" rx="2" ry="2" />
<text  x="63.77" y="111.5" >[unk..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.7" y="1957" width="0.2" height="15.0" fill="rgb(223,214,51)" rx="2" ry="2" />
<text  x="1151.75" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="12.6" y="1877" width="1.0" height="15.0" fill="rgb(225,97,21)" rx="2" ry="2" />
<text  x="15.58" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1158.3" y="2021" width="0.2" height="15.0" fill="rgb(219,123,37)" rx="2" ry="2" />
<text  x="1161.27" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="478.8" y="1909" width="0.2" height="15.0" fill="rgb(213,56,41)" rx="2" ry="2" />
<text  x="481.83" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1075.4" y="1909" width="0.2" height="15.0" fill="rgb(228,116,53)" rx="2" ry="2" />
<text  x="1078.37" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (137 samples, 2.30%)</title><rect x="256.3" y="1797" width="27.2" height="15.0" fill="rgb(232,76,10)" rx="2" ry="2" />
<text  x="259.31" y="1807.5" >i..</text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="83.2" y="37" width="0.4" height="15.0" fill="rgb(254,162,8)" rx="2" ry="2" />
<text  x="86.18" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="19.3" y="1973" width="0.4" height="15.0" fill="rgb(221,44,41)" rx="2" ry="2" />
<text  x="22.32" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (37 samples, 0.62%)</title><rect x="365.4" y="2037" width="7.3" height="15.0" fill="rgb(215,80,7)" rx="2" ry="2" />
<text  x="368.39" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="519.7" y="2021" width="0.6" height="15.0" fill="rgb(218,213,6)" rx="2" ry="2" />
<text  x="522.68" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="371.7" y="1925" width="0.6" height="15.0" fill="rgb(223,166,4)" rx="2" ry="2" />
<text  x="374.73" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.07%)</title><rect x="1141.4" y="1989" width="0.8" height="15.0" fill="rgb(229,72,31)" rx="2" ry="2" />
<text  x="1144.41" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1621" width="45.0" height="15.0" fill="rgb(218,6,31)" rx="2" ry="2" />
<text  x="63.77" y="1631.5" >[unk..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="448.1" y="1973" width="0.2" height="15.0" fill="rgb(219,43,24)" rx="2" ry="2" />
<text  x="451.09" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="1161.0" y="2053" width="0.2" height="15.0" fill="rgb(210,84,18)" rx="2" ry="2" />
<text  x="1164.05" y="2063.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="541.5" y="1973" width="0.8" height="15.0" fill="rgb(235,60,24)" rx="2" ry="2" />
<text  x="544.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::readDataAvailable (1 samples, 0.02%)</title><rect x="1099.8" y="2053" width="0.2" height="15.0" fill="rgb(252,107,37)" rx="2" ry="2" />
<text  x="1102.76" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1573" width="45.0" height="15.0" fill="rgb(210,135,35)" rx="2" ry="2" />
<text  x="63.77" y="1583.5" >[unk..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="427.7" y="1941" width="0.2" height="15.0" fill="rgb(226,80,24)" rx="2" ry="2" />
<text  x="430.66" y="1951.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="179.6" y="2021" width="0.2" height="15.0" fill="rgb(224,38,52)" rx="2" ry="2" />
<text  x="182.56" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="949.0" y="1973" width="6.0" height="15.0" fill="rgb(232,149,3)" rx="2" ry="2" />
<text  x="952.04" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="124.2" y="1973" width="0.4" height="15.0" fill="rgb(250,184,40)" rx="2" ry="2" />
<text  x="127.23" y="1983.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (3 samples, 0.05%)</title><rect x="155.0" y="1925" width="0.6" height="15.0" fill="rgb(227,69,0)" rx="2" ry="2" />
<text  x="157.97" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="734.5" y="1941" width="0.6" height="15.0" fill="rgb(245,132,52)" rx="2" ry="2" />
<text  x="737.46" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="991.3" y="1989" width="0.2" height="15.0" fill="rgb(221,34,31)" rx="2" ry="2" />
<text  x="994.28" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (124 samples, 2.08%)</title><rect x="924.1" y="1989" width="24.5" height="15.0" fill="rgb(241,133,14)" rx="2" ry="2" />
<text  x="927.05" y="1999.5" >f..</text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15 samples, 0.25%)</title><rect x="326.7" y="1973" width="3.0" height="15.0" fill="rgb(244,128,7)" rx="2" ry="2" />
<text  x="329.72" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (14 samples, 0.24%)</title><rect x="1096.8" y="2021" width="2.8" height="15.0" fill="rgb(214,101,43)" rx="2" ry="2" />
<text  x="1099.79" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="202.0" y="1957" width="0.2" height="15.0" fill="rgb(247,88,38)" rx="2" ry="2" />
<text  x="204.97" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (9 samples, 0.15%)</title><rect x="689.8" y="1893" width="1.8" height="15.0" fill="rgb(221,219,37)" rx="2" ry="2" />
<text  x="692.84" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="480.2" y="1925" width="0.6" height="15.0" fill="rgb(250,32,30)" rx="2" ry="2" />
<text  x="483.22" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="682.1" y="1941" width="0.6" height="15.0" fill="rgb(211,100,29)" rx="2" ry="2" />
<text  x="685.10" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (5 samples, 0.08%)</title><rect x="586.3" y="1957" width="1.0" height="15.0" fill="rgb(207,197,9)" rx="2" ry="2" />
<text  x="589.32" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="21.9" y="1957" width="0.2" height="15.0" fill="rgb(230,133,42)" rx="2" ry="2" />
<text  x="24.90" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="888.2" y="2037" width="0.2" height="15.0" fill="rgb(206,49,30)" rx="2" ry="2" />
<text  x="891.16" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="174.2" y="1941" width="0.2" height="15.0" fill="rgb(226,141,3)" rx="2" ry="2" />
<text  x="177.21" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="587.3" y="1973" width="0.2" height="15.0" fill="rgb(209,155,28)" rx="2" ry="2" />
<text  x="590.31" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="356.7" y="1973" width="0.2" height="15.0" fill="rgb(237,52,19)" rx="2" ry="2" />
<text  x="359.66" y="1983.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="10.2" y="1845" width="0.2" height="15.0" fill="rgb(252,93,20)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="859.6" y="2021" width="0.2" height="15.0" fill="rgb(212,171,17)" rx="2" ry="2" />
<text  x="862.60" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="201.0" y="1909" width="0.8" height="15.0" fill="rgb(209,123,30)" rx="2" ry="2" />
<text  x="203.98" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="661.3" y="1973" width="0.4" height="15.0" fill="rgb(245,229,45)" rx="2" ry="2" />
<text  x="664.28" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="565" width="45.0" height="15.0" fill="rgb(252,168,34)" rx="2" ry="2" />
<text  x="63.77" y="575.5" >[unk..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (10 samples, 0.17%)</title><rect x="1032.5" y="2005" width="2.0" height="15.0" fill="rgb(245,10,2)" rx="2" ry="2" />
<text  x="1035.53" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (4 samples, 0.07%)</title><rect x="392.6" y="2037" width="0.8" height="15.0" fill="rgb(229,143,23)" rx="2" ry="2" />
<text  x="395.56" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="478.0" y="1909" width="0.2" height="15.0" fill="rgb(238,60,9)" rx="2" ry="2" />
<text  x="481.03" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1139.2" y="1925" width="0.2" height="15.0" fill="rgb(214,193,22)" rx="2" ry="2" />
<text  x="1142.23" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="953.8" y="1877" width="0.4" height="15.0" fill="rgb(226,166,14)" rx="2" ry="2" />
<text  x="956.80" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (2 samples, 0.03%)</title><rect x="729.3" y="1909" width="0.4" height="15.0" fill="rgb(249,201,32)" rx="2" ry="2" />
<text  x="732.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1749" width="45.0" height="15.0" fill="rgb(234,97,35)" rx="2" ry="2" />
<text  x="63.77" y="1759.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_rcv (90 samples, 1.51%)</title><rect x="259.3" y="1541" width="17.8" height="15.0" fill="rgb(245,96,21)" rx="2" ry="2" />
<text  x="262.29" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.30%)</title><rect x="643.0" y="2005" width="3.6" height="15.0" fill="rgb(241,82,41)" rx="2" ry="2" />
<text  x="646.04" y="2015.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="577.2" y="1989" width="0.2" height="15.0" fill="rgb(211,226,39)" rx="2" ry="2" />
<text  x="580.19" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.6" y="1877" width="0.8" height="15.0" fill="rgb(232,25,53)" rx="2" ry="2" />
<text  x="14.59" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="922.9" y="1941" width="0.2" height="15.0" fill="rgb(207,20,4)" rx="2" ry="2" />
<text  x="925.86" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="475.3" y="1957" width="0.2" height="15.0" fill="rgb(250,141,31)" rx="2" ry="2" />
<text  x="478.26" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (5 samples, 0.08%)</title><rect x="536.1" y="1989" width="1.0" height="15.0" fill="rgb(209,168,11)" rx="2" ry="2" />
<text  x="539.14" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1148.9" y="2005" width="0.2" height="15.0" fill="rgb(225,78,44)" rx="2" ry="2" />
<text  x="1151.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="596.8" y="2005" width="0.6" height="15.0" fill="rgb(240,178,9)" rx="2" ry="2" />
<text  x="599.83" y="2015.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="285.3" y="1813" width="0.2" height="15.0" fill="rgb(220,41,15)" rx="2" ry="2" />
<text  x="288.27" y="1823.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="858.4" y="1925" width="0.2" height="15.0" fill="rgb(209,72,47)" rx="2" ry="2" />
<text  x="861.41" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (282 samples, 4.74%)</title><rect x="236.1" y="1893" width="55.9" height="15.0" fill="rgb(215,191,21)" rx="2" ry="2" />
<text  x="239.08" y="1903.5" >tcp_s..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="887.8" y="2021" width="0.4" height="15.0" fill="rgb(215,72,30)" rx="2" ry="2" />
<text  x="890.76" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="662.9" y="2005" width="0.2" height="15.0" fill="rgb(228,97,23)" rx="2" ry="2" />
<text  x="665.87" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="543.9" y="1941" width="0.4" height="15.0" fill="rgb(208,101,4)" rx="2" ry="2" />
<text  x="546.88" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="435.8" y="2005" width="0.4" height="15.0" fill="rgb(225,77,30)" rx="2" ry="2" />
<text  x="438.79" y="2015.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="201.6" y="1797" width="0.2" height="15.0" fill="rgb(248,127,12)" rx="2" ry="2" />
<text  x="204.58" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="11.4" y="2037" width="1.0" height="15.0" fill="rgb(231,185,12)" rx="2" ry="2" />
<text  x="14.39" y="2047.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="991.5" y="2005" width="0.2" height="15.0" fill="rgb(249,19,32)" rx="2" ry="2" />
<text  x="994.48" y="2015.5" ></text>
</g>
<g >
<title>epoll_wait (36 samples, 0.61%)</title><rect x="301.5" y="2037" width="7.2" height="15.0" fill="rgb(254,110,18)" rx="2" ry="2" />
<text  x="304.53" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="20.7" y="1925" width="0.2" height="15.0" fill="rgb(239,128,54)" rx="2" ry="2" />
<text  x="23.71" y="1935.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="349.7" y="1989" width="0.2" height="15.0" fill="rgb(229,5,34)" rx="2" ry="2" />
<text  x="352.72" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="172.8" y="1941" width="0.2" height="15.0" fill="rgb(239,150,28)" rx="2" ry="2" />
<text  x="175.82" y="1951.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="384.0" y="1845" width="0.2" height="15.0" fill="rgb(209,49,48)" rx="2" ry="2" />
<text  x="387.03" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output (131 samples, 2.20%)</title><rect x="257.5" y="1765" width="26.0" height="15.0" fill="rgb(247,77,40)" rx="2" ry="2" />
<text  x="260.50" y="1775.5" >i..</text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="179.8" y="2021" width="0.2" height="15.0" fill="rgb(217,194,31)" rx="2" ry="2" />
<text  x="182.76" y="2031.5" ></text>
</g>
<g >
<title>_copy_to_iter (14 samples, 0.24%)</title><rect x="1078.1" y="1909" width="2.8" height="15.0" fill="rgb(217,17,52)" rx="2" ry="2" />
<text  x="1081.15" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (13 samples, 0.22%)</title><rect x="892.3" y="2037" width="2.6" height="15.0" fill="rgb(241,219,38)" rx="2" ry="2" />
<text  x="895.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="757" width="45.0" height="15.0" fill="rgb(225,15,36)" rx="2" ry="2" />
<text  x="63.77" y="767.5" >[unk..</text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (15 samples, 0.25%)</title><rect x="329.7" y="1973" width="3.0" height="15.0" fill="rgb(253,216,7)" rx="2" ry="2" />
<text  x="332.69" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="541.5" y="1797" width="0.8" height="15.0" fill="rgb(209,195,40)" rx="2" ry="2" />
<text  x="544.50" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (8 samples, 0.13%)</title><rect x="317.4" y="1909" width="1.6" height="15.0" fill="rgb(253,35,2)" rx="2" ry="2" />
<text  x="320.39" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="589.1" y="2005" width="0.2" height="15.0" fill="rgb(249,201,22)" rx="2" ry="2" />
<text  x="592.09" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="1096.8" y="1989" width="0.4" height="15.0" fill="rgb(209,122,35)" rx="2" ry="2" />
<text  x="1099.79" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (3 samples, 0.05%)</title><rect x="194.6" y="1989" width="0.6" height="15.0" fill="rgb(208,106,32)" rx="2" ry="2" />
<text  x="197.64" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (7 samples, 0.12%)</title><rect x="394.5" y="2037" width="1.4" height="15.0" fill="rgb(205,176,20)" rx="2" ry="2" />
<text  x="397.54" y="2047.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="200.6" y="1909" width="0.4" height="15.0" fill="rgb(218,32,19)" rx="2" ry="2" />
<text  x="203.58" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.59%)</title><rect x="301.7" y="2021" width="7.0" height="15.0" fill="rgb(232,120,7)" rx="2" ry="2" />
<text  x="304.73" y="2031.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="378.1" y="1941" width="0.2" height="15.0" fill="rgb(240,95,52)" rx="2" ry="2" />
<text  x="381.08" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="584.3" y="1925" width="0.2" height="15.0" fill="rgb(235,140,48)" rx="2" ry="2" />
<text  x="587.33" y="1935.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="370.1" y="1861" width="0.2" height="15.0" fill="rgb(206,149,46)" rx="2" ry="2" />
<text  x="373.15" y="1871.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (3 samples, 0.05%)</title><rect x="272.2" y="1349" width="0.6" height="15.0" fill="rgb(225,160,48)" rx="2" ry="2" />
<text  x="275.18" y="1359.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (88 samples, 1.48%)</title><rect x="259.5" y="1525" width="17.4" height="15.0" fill="rgb(242,40,30)" rx="2" ry="2" />
<text  x="262.49" y="1535.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1139.6" y="1989" width="0.4" height="15.0" fill="rgb(252,102,24)" rx="2" ry="2" />
<text  x="1142.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1669" width="45.0" height="15.0" fill="rgb(236,196,26)" rx="2" ry="2" />
<text  x="63.77" y="1679.5" >[unk..</text>
</g>
<g >
<title>__snprintf_chk (2 samples, 0.03%)</title><rect x="299.3" y="2037" width="0.4" height="15.0" fill="rgb(210,196,19)" rx="2" ry="2" />
<text  x="302.35" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="125.8" y="1973" width="0.8" height="15.0" fill="rgb(245,79,1)" rx="2" ry="2" />
<text  x="128.82" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="586.9" y="1925" width="0.2" height="15.0" fill="rgb(240,174,25)" rx="2" ry="2" />
<text  x="589.91" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="625.0" y="1941" width="0.2" height="15.0" fill="rgb(228,168,29)" rx="2" ry="2" />
<text  x="627.99" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="1031.1" y="2005" width="0.4" height="15.0" fill="rgb(210,202,51)" rx="2" ry="2" />
<text  x="1034.15" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (233 samples, 3.92%)</title><rect x="60.6" y="2005" width="46.2" height="15.0" fill="rgb(205,216,28)" rx="2" ry="2" />
<text  x="63.57" y="2015.5" >[unk..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="97.5" y="37" width="0.2" height="15.0" fill="rgb(233,54,22)" rx="2" ry="2" />
<text  x="100.46" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="587.1" y="1925" width="0.2" height="15.0" fill="rgb(238,78,54)" rx="2" ry="2" />
<text  x="590.11" y="1935.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="10.2" y="1909" width="0.2" height="15.0" fill="rgb(245,61,48)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1144.4" y="2021" width="0.8" height="15.0" fill="rgb(236,211,25)" rx="2" ry="2" />
<text  x="1147.39" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="606.7" y="2005" width="0.4" height="15.0" fill="rgb(252,91,39)" rx="2" ry="2" />
<text  x="609.74" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1285" width="45.0" height="15.0" fill="rgb(205,116,21)" rx="2" ry="2" />
<text  x="63.77" y="1295.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="73.1" y="37" width="0.2" height="15.0" fill="rgb(235,137,8)" rx="2" ry="2" />
<text  x="76.07" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (13 samples, 0.22%)</title><rect x="824.7" y="2005" width="2.6" height="15.0" fill="rgb(227,50,11)" rx="2" ry="2" />
<text  x="827.70" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.0" y="2005" width="0.2" height="15.0" fill="rgb(222,18,2)" rx="2" ry="2" />
<text  x="1025.02" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (4 samples, 0.07%)</title><rect x="458.6" y="1989" width="0.8" height="15.0" fill="rgb(236,88,4)" rx="2" ry="2" />
<text  x="461.60" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="19.7" y="1957" width="0.2" height="15.0" fill="rgb(223,226,39)" rx="2" ry="2" />
<text  x="22.72" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="678.9" y="1909" width="1.0" height="15.0" fill="rgb(251,171,12)" rx="2" ry="2" />
<text  x="681.93" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="1049.4" y="1893" width="0.2" height="15.0" fill="rgb(239,174,32)" rx="2" ry="2" />
<text  x="1052.39" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.03%)</title><rect x="1141.0" y="2005" width="0.4" height="15.0" fill="rgb(210,117,24)" rx="2" ry="2" />
<text  x="1144.02" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (9 samples, 0.15%)</title><rect x="99.6" y="37" width="1.8" height="15.0" fill="rgb(209,203,31)" rx="2" ry="2" />
<text  x="102.64" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="616.7" y="1973" width="1.9" height="15.0" fill="rgb(217,180,34)" rx="2" ry="2" />
<text  x="619.66" y="1983.5" ></text>
</g>
<g >
<title>jump_fcontext (103 samples, 1.73%)</title><rect x="991.7" y="2005" width="20.4" height="15.0" fill="rgb(248,9,52)" rx="2" ry="2" />
<text  x="994.68" y="2015.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="246.4" y="1877" width="0.2" height="15.0" fill="rgb(222,140,11)" rx="2" ry="2" />
<text  x="249.40" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (389 samples, 6.54%)</title><rect x="914.3" y="2005" width="77.2" height="15.0" fill="rgb(231,128,53)" rx="2" ry="2" />
<text  x="917.34" y="2015.5" >folly::f..</text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1160.3" y="2053" width="0.2" height="15.0" fill="rgb(245,99,30)" rx="2" ry="2" />
<text  x="1163.25" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="126.0" y="1829" width="0.2" height="15.0" fill="rgb(243,19,36)" rx="2" ry="2" />
<text  x="129.02" y="1839.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="982.0" y="1893" width="0.2" height="15.0" fill="rgb(234,94,14)" rx="2" ry="2" />
<text  x="984.96" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="246.6" y="1829" width="0.2" height="15.0" fill="rgb(252,197,8)" rx="2" ry="2" />
<text  x="249.59" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="866.7" y="1957" width="1.4" height="15.0" fill="rgb(238,57,5)" rx="2" ry="2" />
<text  x="869.74" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="523.6" y="2037" width="0.2" height="15.0" fill="rgb(223,30,50)" rx="2" ry="2" />
<text  x="526.65" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="955.4" y="1925" width="0.4" height="15.0" fill="rgb(248,185,49)" rx="2" ry="2" />
<text  x="958.39" y="1935.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="308.5" y="1925" width="0.2" height="15.0" fill="rgb(227,157,27)" rx="2" ry="2" />
<text  x="311.47" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (7 samples, 0.12%)</title><rect x="521.3" y="2037" width="1.4" height="15.0" fill="rgb(224,212,12)" rx="2" ry="2" />
<text  x="524.27" y="2047.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (30 samples, 0.50%)</title><rect x="246.8" y="1877" width="5.9" height="15.0" fill="rgb(224,218,32)" rx="2" ry="2" />
<text  x="249.79" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="326.1" y="1973" width="0.2" height="15.0" fill="rgb(244,220,1)" rx="2" ry="2" />
<text  x="329.12" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (13 samples, 0.22%)</title><rect x="689.2" y="1909" width="2.6" height="15.0" fill="rgb(218,29,19)" rx="2" ry="2" />
<text  x="692.24" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="201.6" y="1845" width="0.2" height="15.0" fill="rgb(223,214,19)" rx="2" ry="2" />
<text  x="204.58" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::coalesce (1 samples, 0.02%)</title><rect x="88.1" y="37" width="0.2" height="15.0" fill="rgb(211,56,19)" rx="2" ry="2" />
<text  x="91.14" y="47.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="859.4" y="2005" width="0.2" height="15.0" fill="rgb(236,132,54)" rx="2" ry="2" />
<text  x="862.40" y="2015.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1143.2" y="2037" width="0.2" height="15.0" fill="rgb(223,216,28)" rx="2" ry="2" />
<text  x="1146.20" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="366.8" y="1861" width="0.2" height="15.0" fill="rgb(216,11,7)" rx="2" ry="2" />
<text  x="369.78" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="590.9" y="2021" width="6.5" height="15.0" fill="rgb(240,25,52)" rx="2" ry="2" />
<text  x="593.88" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (1 samples, 0.02%)</title><rect x="362.8" y="2005" width="0.2" height="15.0" fill="rgb(214,182,24)" rx="2" ry="2" />
<text  x="365.81" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (2 samples, 0.03%)</title><rect x="373.3" y="2037" width="0.4" height="15.0" fill="rgb(242,77,33)" rx="2" ry="2" />
<text  x="376.32" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="866.3" y="1941" width="0.2" height="15.0" fill="rgb(227,187,30)" rx="2" ry="2" />
<text  x="869.34" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="198.4" y="1925" width="0.4" height="15.0" fill="rgb(210,225,40)" rx="2" ry="2" />
<text  x="201.40" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="391.0" y="1925" width="0.2" height="15.0" fill="rgb(209,3,27)" rx="2" ry="2" />
<text  x="393.97" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="191.5" y="1973" width="0.2" height="15.0" fill="rgb(245,171,0)" rx="2" ry="2" />
<text  x="194.46" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (275 samples, 4.62%)</title><rect x="402.9" y="2021" width="54.5" height="15.0" fill="rgb(211,79,40)" rx="2" ry="2" />
<text  x="405.87" y="2031.5" >[unkn..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="142.3" y="1957" width="0.2" height="15.0" fill="rgb(225,50,43)" rx="2" ry="2" />
<text  x="145.28" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="190.9" y="1957" width="0.2" height="15.0" fill="rgb(242,201,5)" rx="2" ry="2" />
<text  x="193.87" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="360.4" y="1941" width="0.8" height="15.0" fill="rgb(246,48,17)" rx="2" ry="2" />
<text  x="363.43" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="255.7" y="1797" width="0.2" height="15.0" fill="rgb(244,20,34)" rx="2" ry="2" />
<text  x="258.72" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="371.1" y="1909" width="0.2" height="15.0" fill="rgb(247,79,21)" rx="2" ry="2" />
<text  x="374.14" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (9 samples, 0.15%)</title><rect x="453.6" y="1973" width="1.8" height="15.0" fill="rgb(244,220,29)" rx="2" ry="2" />
<text  x="456.64" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (2 samples, 0.03%)</title><rect x="887.8" y="2037" width="0.4" height="15.0" fill="rgb(245,209,28)" rx="2" ry="2" />
<text  x="890.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1301" width="45.0" height="15.0" fill="rgb(246,86,13)" rx="2" ry="2" />
<text  x="63.77" y="1311.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (7 samples, 0.12%)</title><rect x="1172.7" y="2053" width="1.4" height="15.0" fill="rgb(230,211,21)" rx="2" ry="2" />
<text  x="1175.75" y="2063.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="585.9" y="1925" width="0.2" height="15.0" fill="rgb(221,127,27)" rx="2" ry="2" />
<text  x="588.92" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="309.5" y="2037" width="0.4" height="15.0" fill="rgb(233,192,23)" rx="2" ry="2" />
<text  x="312.46" y="2047.5" ></text>
</g>
<g >
<title>skb_release_all (44 samples, 0.74%)</title><rect x="264.6" y="1445" width="8.8" height="15.0" fill="rgb(210,188,49)" rx="2" ry="2" />
<text  x="267.64" y="1455.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="96.5" y="37" width="1.0" height="15.0" fill="rgb(247,226,9)" rx="2" ry="2" />
<text  x="99.47" y="47.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1158.3" y="1989" width="0.2" height="15.0" fill="rgb(220,228,54)" rx="2" ry="2" />
<text  x="1161.27" y="1999.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1148.7" y="1893" width="0.2" height="15.0" fill="rgb(209,164,25)" rx="2" ry="2" />
<text  x="1151.75" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="981" width="45.0" height="15.0" fill="rgb(243,1,14)" rx="2" ry="2" />
<text  x="63.77" y="991.5" >[unk..</text>
</g>
<g >
<title>sys_access (1 samples, 0.02%)</title><rect x="11.2" y="2005" width="0.2" height="15.0" fill="rgb(254,223,30)" rx="2" ry="2" />
<text  x="14.19" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="12.4" y="2021" width="1.2" height="15.0" fill="rgb(216,123,23)" rx="2" ry="2" />
<text  x="15.38" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="665.0" y="1941" width="0.2" height="15.0" fill="rgb(245,221,27)" rx="2" ry="2" />
<text  x="668.05" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1,009 samples, 16.96%)</title><rect x="659.5" y="2021" width="200.1" height="15.0" fill="rgb(239,147,16)" rx="2" ry="2" />
<text  x="662.50" y="2031.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (161 samples, 2.71%)</title><rect x="607.9" y="2021" width="32.0" height="15.0" fill="rgb(251,13,4)" rx="2" ry="2" />
<text  x="610.93" y="2031.5" >[u..</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (6 samples, 0.10%)</title><rect x="909.6" y="2005" width="1.2" height="15.0" fill="rgb(254,108,13)" rx="2" ry="2" />
<text  x="912.58" y="2015.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="657.3" y="2005" width="0.2" height="15.0" fill="rgb(243,125,1)" rx="2" ry="2" />
<text  x="660.31" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="245.0" y="1781" width="0.2" height="15.0" fill="rgb(249,207,47)" rx="2" ry="2" />
<text  x="248.01" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="206.5" y="2021" width="0.2" height="15.0" fill="rgb(223,121,31)" rx="2" ry="2" />
<text  x="209.53" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="984.9" y="1909" width="0.6" height="15.0" fill="rgb(207,46,10)" rx="2" ry="2" />
<text  x="987.94" y="1919.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (3 samples, 0.05%)</title><rect x="344.4" y="1925" width="0.6" height="15.0" fill="rgb(226,90,23)" rx="2" ry="2" />
<text  x="347.37" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="12.6" y="1845" width="1.0" height="15.0" fill="rgb(247,63,7)" rx="2" ry="2" />
<text  x="15.58" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="246.2" y="1733" width="0.2" height="15.0" fill="rgb(242,5,22)" rx="2" ry="2" />
<text  x="249.20" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="520.1" y="1989" width="0.2" height="15.0" fill="rgb(229,149,45)" rx="2" ry="2" />
<text  x="523.08" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="605.8" y="2005" width="0.1" height="15.0" fill="rgb(234,121,29)" rx="2" ry="2" />
<text  x="608.75" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (530 samples, 8.91%)</title><rect x="907.0" y="2037" width="105.1" height="15.0" fill="rgb(212,105,41)" rx="2" ry="2" />
<text  x="910.00" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="584.3" y="1941" width="0.2" height="15.0" fill="rgb(239,71,16)" rx="2" ry="2" />
<text  x="587.33" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="837.6" y="1989" width="0.2" height="15.0" fill="rgb(209,69,5)" rx="2" ry="2" />
<text  x="840.59" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="217.4" y="2037" width="0.6" height="15.0" fill="rgb(227,126,48)" rx="2" ry="2" />
<text  x="220.44" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="191.1" y="1957" width="0.4" height="15.0" fill="rgb(242,125,18)" rx="2" ry="2" />
<text  x="194.07" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="172.6" y="1941" width="0.2" height="15.0" fill="rgb(215,128,35)" rx="2" ry="2" />
<text  x="175.62" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="186.5" y="1973" width="0.2" height="15.0" fill="rgb(245,61,6)" rx="2" ry="2" />
<text  x="189.50" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="488.5" y="1941" width="0.2" height="15.0" fill="rgb(233,165,0)" rx="2" ry="2" />
<text  x="491.54" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (9 samples, 0.15%)</title><rect x="322.6" y="1973" width="1.7" height="15.0" fill="rgb(226,201,19)" rx="2" ry="2" />
<text  x="325.55" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (7 samples, 0.12%)</title><rect x="427.9" y="2005" width="1.3" height="15.0" fill="rgb(241,95,36)" rx="2" ry="2" />
<text  x="430.86" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (10 samples, 0.17%)</title><rect x="79.8" y="37" width="2.0" height="15.0" fill="rgb(227,94,52)" rx="2" ry="2" />
<text  x="82.81" y="47.5" ></text>
</g>
<g >
<title>skb_free_head (5 samples, 0.08%)</title><rect x="271.8" y="1413" width="1.0" height="15.0" fill="rgb(216,94,21)" rx="2" ry="2" />
<text  x="274.78" y="1423.5" ></text>
</g>
<g >
<title>lock_sock_nested (129 samples, 2.17%)</title><rect x="1049.0" y="1925" width="25.6" height="15.0" fill="rgb(241,53,18)" rx="2" ry="2" />
<text  x="1051.99" y="1935.5" >l..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="923.9" y="1973" width="0.2" height="15.0" fill="rgb(242,94,40)" rx="2" ry="2" />
<text  x="926.86" y="1983.5" ></text>
</g>
<g >
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="1143.8" y="1957" width="0.2" height="15.0" fill="rgb(231,207,10)" rx="2" ry="2" />
<text  x="1146.79" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="427.7" y="1973" width="0.2" height="15.0" fill="rgb(220,167,3)" rx="2" ry="2" />
<text  x="430.66" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (6 samples, 0.10%)</title><rect x="515.7" y="2021" width="1.2" height="15.0" fill="rgb(246,169,9)" rx="2" ry="2" />
<text  x="518.71" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (30 samples, 0.50%)</title><rect x="966.1" y="1909" width="5.9" height="15.0" fill="rgb(243,91,33)" rx="2" ry="2" />
<text  x="969.10" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (159 samples, 2.67%)</title><rect x="955.4" y="1957" width="31.5" height="15.0" fill="rgb(246,64,37)" rx="2" ry="2" />
<text  x="958.39" y="1967.5" >fo..</text>
</g>
<g >
<title>std::this_thread::get_id (29 samples, 0.49%)</title><rect x="966.3" y="1893" width="5.7" height="15.0" fill="rgb(246,33,53)" rx="2" ry="2" />
<text  x="969.30" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="296.6" y="2021" width="0.2" height="15.0" fill="rgb(254,161,50)" rx="2" ry="2" />
<text  x="299.57" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="356.1" y="1925" width="0.4" height="15.0" fill="rgb(236,72,41)" rx="2" ry="2" />
<text  x="359.07" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="245.0" y="1845" width="0.2" height="15.0" fill="rgb(254,208,25)" rx="2" ry="2" />
<text  x="248.01" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="922.9" y="1909" width="0.2" height="15.0" fill="rgb(217,153,6)" rx="2" ry="2" />
<text  x="925.86" y="1919.5" ></text>
</g>
<g >
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="285.9" y="1781" width="1.0" height="15.0" fill="rgb(205,137,18)" rx="2" ry="2" />
<text  x="288.86" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="677" width="45.0" height="15.0" fill="rgb(227,192,54)" rx="2" ry="2" />
<text  x="63.77" y="687.5" >[unk..</text>
</g>
<g >
<title>ip_send_check (6 samples, 0.10%)</title><rect x="256.3" y="1765" width="1.2" height="15.0" fill="rgb(236,180,23)" rx="2" ry="2" />
<text  x="259.31" y="1775.5" ></text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="245.2" y="1861" width="0.8" height="15.0" fill="rgb(228,168,29)" rx="2" ry="2" />
<text  x="248.21" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (16 samples, 0.27%)</title><rect x="383.2" y="2005" width="3.2" height="15.0" fill="rgb(251,113,34)" rx="2" ry="2" />
<text  x="386.24" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="967.1" y="1877" width="0.4" height="15.0" fill="rgb(228,27,13)" rx="2" ry="2" />
<text  x="970.09" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="366.4" y="1909" width="0.4" height="15.0" fill="rgb(233,223,8)" rx="2" ry="2" />
<text  x="369.38" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="363.6" y="2005" width="0.2" height="15.0" fill="rgb(241,153,16)" rx="2" ry="2" />
<text  x="366.60" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (33 samples, 0.55%)</title><rect x="537.7" y="1989" width="6.6" height="15.0" fill="rgb(239,93,18)" rx="2" ry="2" />
<text  x="540.73" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="338.2" y="1957" width="0.8" height="15.0" fill="rgb(226,193,44)" rx="2" ry="2" />
<text  x="341.22" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1158.7" y="2053" width="0.2" height="15.0" fill="rgb(214,9,41)" rx="2" ry="2" />
<text  x="1161.67" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (17 samples, 0.29%)</title><rect x="810.2" y="1989" width="3.4" height="15.0" fill="rgb(238,188,45)" rx="2" ry="2" />
<text  x="813.22" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="201.6" y="1877" width="0.2" height="15.0" fill="rgb(250,106,26)" rx="2" ry="2" />
<text  x="204.58" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (4 samples, 0.07%)</title><rect x="482.2" y="1925" width="0.8" height="15.0" fill="rgb(241,46,39)" rx="2" ry="2" />
<text  x="485.20" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="858.4" y="1893" width="0.2" height="15.0" fill="rgb(239,187,51)" rx="2" ry="2" />
<text  x="861.41" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="732.5" y="1909" width="0.2" height="15.0" fill="rgb(240,6,35)" rx="2" ry="2" />
<text  x="735.48" y="1919.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="569.9" y="1781" width="0.2" height="15.0" fill="rgb(217,122,6)" rx="2" ry="2" />
<text  x="572.86" y="1791.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="193.6" y="1957" width="0.2" height="15.0" fill="rgb(215,2,40)" rx="2" ry="2" />
<text  x="196.64" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="366.6" y="1893" width="0.2" height="15.0" fill="rgb(242,26,0)" rx="2" ry="2" />
<text  x="369.58" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="587.1" y="1877" width="0.2" height="15.0" fill="rgb(210,34,6)" rx="2" ry="2" />
<text  x="590.11" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="677.1" y="1909" width="0.2" height="15.0" fill="rgb(209,209,19)" rx="2" ry="2" />
<text  x="680.15" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1333" width="45.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="63.77" y="1343.5" >[unk..</text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="282.9" y="1637" width="0.2" height="15.0" fill="rgb(253,35,32)" rx="2" ry="2" />
<text  x="285.89" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (8 samples, 0.13%)</title><rect x="593.5" y="1973" width="1.5" height="15.0" fill="rgb(245,111,0)" rx="2" ry="2" />
<text  x="596.46" y="1983.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="541.5" y="1893" width="0.8" height="15.0" fill="rgb(232,10,36)" rx="2" ry="2" />
<text  x="544.50" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (213 samples, 3.58%)</title><rect x="1102.9" y="2053" width="42.3" height="15.0" fill="rgb(220,11,36)" rx="2" ry="2" />
<text  x="1105.94" y="2063.5" >fac..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="859.8" y="2005" width="0.4" height="15.0" fill="rgb(220,164,49)" rx="2" ry="2" />
<text  x="862.80" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (5 samples, 0.08%)</title><rect x="907.8" y="2005" width="1.0" height="15.0" fill="rgb(215,170,23)" rx="2" ry="2" />
<text  x="910.79" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="990.5" y="1989" width="0.8" height="15.0" fill="rgb(208,57,13)" rx="2" ry="2" />
<text  x="993.49" y="1999.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.6" y="1973" width="0.8" height="15.0" fill="rgb(222,153,33)" rx="2" ry="2" />
<text  x="14.59" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (6 samples, 0.10%)</title><rect x="643.0" y="1989" width="1.2" height="15.0" fill="rgb(224,157,12)" rx="2" ry="2" />
<text  x="646.04" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (2 samples, 0.03%)</title><rect x="607.1" y="2005" width="0.4" height="15.0" fill="rgb(222,166,6)" rx="2" ry="2" />
<text  x="610.14" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="198.8" y="1909" width="0.2" height="15.0" fill="rgb(252,139,28)" rx="2" ry="2" />
<text  x="201.80" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="175.8" y="1989" width="0.4" height="15.0" fill="rgb(221,159,39)" rx="2" ry="2" />
<text  x="178.79" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="245.0" y="1829" width="0.2" height="15.0" fill="rgb(207,95,26)" rx="2" ry="2" />
<text  x="248.01" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (17 samples, 0.29%)</title><rect x="1176.9" y="2053" width="3.4" height="15.0" fill="rgb(234,203,3)" rx="2" ry="2" />
<text  x="1179.91" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="471.5" y="1973" width="0.2" height="15.0" fill="rgb(229,83,52)" rx="2" ry="2" />
<text  x="474.49" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (2 samples, 0.03%)</title><rect x="344.0" y="1941" width="0.4" height="15.0" fill="rgb(228,163,19)" rx="2" ry="2" />
<text  x="346.97" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (18 samples, 0.30%)</title><rect x="910.8" y="2005" width="3.5" height="15.0" fill="rgb(212,115,7)" rx="2" ry="2" />
<text  x="913.77" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="618.8" y="1973" width="0.4" height="15.0" fill="rgb(251,173,13)" rx="2" ry="2" />
<text  x="621.84" y="1983.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="126.0" y="1877" width="0.2" height="15.0" fill="rgb(230,195,42)" rx="2" ry="2" />
<text  x="129.02" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="337.8" y="1941" width="0.4" height="15.0" fill="rgb(234,179,44)" rx="2" ry="2" />
<text  x="340.82" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1029" width="45.0" height="15.0" fill="rgb(225,218,14)" rx="2" ry="2" />
<text  x="63.77" y="1039.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (16 samples, 0.27%)</title><rect x="544.7" y="1989" width="3.1" height="15.0" fill="rgb(254,224,28)" rx="2" ry="2" />
<text  x="547.67" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="385.6" y="1941" width="0.2" height="15.0" fill="rgb(219,107,51)" rx="2" ry="2" />
<text  x="388.62" y="1951.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (5 samples, 0.08%)</title><rect x="285.9" y="1813" width="1.0" height="15.0" fill="rgb(247,221,4)" rx="2" ry="2" />
<text  x="288.86" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="595.2" y="1973" width="1.0" height="15.0" fill="rgb(212,91,29)" rx="2" ry="2" />
<text  x="598.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (2 samples, 0.03%)</title><rect x="396.1" y="2037" width="0.4" height="15.0" fill="rgb(219,45,25)" rx="2" ry="2" />
<text  x="399.13" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (2 samples, 0.03%)</title><rect x="738.0" y="1925" width="0.4" height="15.0" fill="rgb(235,130,22)" rx="2" ry="2" />
<text  x="741.03" y="1935.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="246.2" y="1749" width="0.2" height="15.0" fill="rgb(229,23,48)" rx="2" ry="2" />
<text  x="249.20" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (13 samples, 0.22%)</title><rect x="173.2" y="1989" width="2.6" height="15.0" fill="rgb(252,127,5)" rx="2" ry="2" />
<text  x="176.22" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="174.0" y="1957" width="0.4" height="15.0" fill="rgb(216,5,16)" rx="2" ry="2" />
<text  x="177.01" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (4 samples, 0.07%)</title><rect x="570.5" y="1989" width="0.7" height="15.0" fill="rgb(208,167,17)" rx="2" ry="2" />
<text  x="573.45" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1189" width="45.0" height="15.0" fill="rgb(220,78,48)" rx="2" ry="2" />
<text  x="63.77" y="1199.5" >[unk..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(211,36,8)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (6 samples, 0.10%)</title><rect x="337.0" y="1957" width="1.2" height="15.0" fill="rgb(222,12,27)" rx="2" ry="2" />
<text  x="340.03" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="197.8" y="1909" width="0.2" height="15.0" fill="rgb(207,49,0)" rx="2" ry="2" />
<text  x="200.81" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="985.5" y="1909" width="0.6" height="15.0" fill="rgb(209,101,8)" rx="2" ry="2" />
<text  x="988.53" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="196.4" y="1941" width="0.2" height="15.0" fill="rgb(217,141,52)" rx="2" ry="2" />
<text  x="199.42" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1099.4" y="1925" width="0.2" height="15.0" fill="rgb(222,81,38)" rx="2" ry="2" />
<text  x="1102.37" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="597.6" y="2005" width="1.4" height="15.0" fill="rgb(229,38,35)" rx="2" ry="2" />
<text  x="600.62" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="275.5" y="1461" width="0.2" height="15.0" fill="rgb(245,190,8)" rx="2" ry="2" />
<text  x="278.55" y="1471.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="298.8" y="2037" width="0.2" height="15.0" fill="rgb(252,66,12)" rx="2" ry="2" />
<text  x="301.75" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (3 samples, 0.05%)</title><rect x="436.2" y="2005" width="0.6" height="15.0" fill="rgb(209,212,42)" rx="2" ry="2" />
<text  x="439.19" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="693.4" y="1813" width="0.2" height="15.0" fill="rgb(244,77,47)" rx="2" ry="2" />
<text  x="696.41" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (3 samples, 0.05%)</title><rect x="1160.5" y="2053" width="0.5" height="15.0" fill="rgb(218,59,54)" rx="2" ry="2" />
<text  x="1163.45" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="485.4" y="1925" width="0.6" height="15.0" fill="rgb(243,59,20)" rx="2" ry="2" />
<text  x="488.37" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="450.9" y="1989" width="0.4" height="15.0" fill="rgb(225,13,7)" rx="2" ry="2" />
<text  x="453.86" y="1999.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(231,98,34)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="527.0" y="1973" width="0.2" height="15.0" fill="rgb(222,174,15)" rx="2" ry="2" />
<text  x="530.02" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="858.4" y="1941" width="0.4" height="15.0" fill="rgb(243,86,4)" rx="2" ry="2" />
<text  x="861.41" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1049.4" y="1829" width="0.2" height="15.0" fill="rgb(242,216,35)" rx="2" ry="2" />
<text  x="1052.39" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.08%)</title><rect x="350.1" y="1989" width="1.0" height="15.0" fill="rgb(227,103,29)" rx="2" ry="2" />
<text  x="353.12" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="326.3" y="1973" width="0.4" height="15.0" fill="rgb(228,191,37)" rx="2" ry="2" />
<text  x="329.32" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (4 samples, 0.07%)</title><rect x="183.9" y="1909" width="0.8" height="15.0" fill="rgb(244,48,17)" rx="2" ry="2" />
<text  x="186.93" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="469" width="45.0" height="15.0" fill="rgb(246,51,11)" rx="2" ry="2" />
<text  x="63.77" y="479.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="102.6" y="53" width="0.2" height="15.0" fill="rgb(245,39,2)" rx="2" ry="2" />
<text  x="105.62" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="827.7" y="2005" width="0.2" height="15.0" fill="rgb(233,25,3)" rx="2" ry="2" />
<text  x="830.67" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (16 samples, 0.27%)</title><rect x="582.7" y="1957" width="3.2" height="15.0" fill="rgb(222,211,52)" rx="2" ry="2" />
<text  x="585.75" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (17 samples, 0.29%)</title><rect x="959.9" y="1909" width="3.4" height="15.0" fill="rgb(234,59,35)" rx="2" ry="2" />
<text  x="962.95" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="105.0" y="37" width="0.2" height="15.0" fill="rgb(233,155,34)" rx="2" ry="2" />
<text  x="107.99" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="160.9" y="1941" width="0.4" height="15.0" fill="rgb(208,30,40)" rx="2" ry="2" />
<text  x="163.92" y="1951.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1125.1" y="1957" width="0.4" height="15.0" fill="rgb(221,172,54)" rx="2" ry="2" />
<text  x="1128.15" y="1967.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (10 samples, 0.17%)</title><rect x="1085.1" y="2053" width="2.0" height="15.0" fill="rgb(237,199,40)" rx="2" ry="2" />
<text  x="1088.09" y="2063.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="235.3" y="1893" width="0.6" height="15.0" fill="rgb(211,80,21)" rx="2" ry="2" />
<text  x="238.29" y="1903.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (169 samples, 2.84%)</title><rect x="253.5" y="1861" width="33.6" height="15.0" fill="rgb(214,177,44)" rx="2" ry="2" />
<text  x="256.54" y="1871.5" >__..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (49 samples, 0.82%)</title><rect x="497.5" y="1989" width="9.7" height="15.0" fill="rgb(242,80,38)" rx="2" ry="2" />
<text  x="500.47" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1269" width="45.0" height="15.0" fill="rgb(250,222,42)" rx="2" ry="2" />
<text  x="63.77" y="1279.5" >[unk..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="746.6" y="1957" width="0.2" height="15.0" fill="rgb(244,3,7)" rx="2" ry="2" />
<text  x="749.56" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="202.4" y="1957" width="0.2" height="15.0" fill="rgb(227,82,48)" rx="2" ry="2" />
<text  x="205.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="525.4" y="2037" width="0.2" height="15.0" fill="rgb(207,76,43)" rx="2" ry="2" />
<text  x="528.43" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (7 samples, 0.12%)</title><rect x="1081.3" y="1925" width="1.4" height="15.0" fill="rgb(238,30,27)" rx="2" ry="2" />
<text  x="1084.32" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="594.8" y="1957" width="0.2" height="15.0" fill="rgb(222,137,30)" rx="2" ry="2" />
<text  x="597.84" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (2 samples, 0.03%)</title><rect x="955.0" y="1989" width="0.4" height="15.0" fill="rgb(242,47,14)" rx="2" ry="2" />
<text  x="957.99" y="1999.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="10.2" y="1861" width="0.2" height="15.0" fill="rgb(226,153,53)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>[[vdso]] (9 samples, 0.15%)</title><rect x="223.0" y="2005" width="1.8" height="15.0" fill="rgb(233,210,16)" rx="2" ry="2" />
<text  x="225.99" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="594.4" y="1829" width="0.2" height="15.0" fill="rgb(207,149,41)" rx="2" ry="2" />
<text  x="597.45" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="378.1" y="1989" width="0.2" height="15.0" fill="rgb(253,53,5)" rx="2" ry="2" />
<text  x="381.08" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="286.9" y="1797" width="0.2" height="15.0" fill="rgb(250,95,1)" rx="2" ry="2" />
<text  x="289.85" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (8 samples, 0.13%)</title><rect x="165.1" y="1957" width="1.6" height="15.0" fill="rgb(254,204,37)" rx="2" ry="2" />
<text  x="168.09" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.26%)</title><rect x="865.7" y="2021" width="14.9" height="15.0" fill="rgb(209,55,41)" rx="2" ry="2" />
<text  x="868.75" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (159 samples, 2.67%)</title><rect x="955.4" y="1973" width="31.5" height="15.0" fill="rgb(235,51,18)" rx="2" ry="2" />
<text  x="958.39" y="1983.5" >fo..</text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="162.5" y="1941" width="0.4" height="15.0" fill="rgb(249,105,27)" rx="2" ry="2" />
<text  x="165.51" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="537.1" y="1989" width="0.4" height="15.0" fill="rgb(220,190,53)" rx="2" ry="2" />
<text  x="540.13" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1973" width="45.0" height="15.0" fill="rgb(248,204,17)" rx="2" ry="2" />
<text  x="63.77" y="1983.5" >[unk..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1081.1" y="1925" width="0.2" height="15.0" fill="rgb(221,217,52)" rx="2" ry="2" />
<text  x="1084.12" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="481.2" y="1909" width="0.8" height="15.0" fill="rgb(247,156,20)" rx="2" ry="2" />
<text  x="484.21" y="1919.5" ></text>
</g>
<g >
<title>__snprintf_chk@plt (1 samples, 0.02%)</title><rect x="299.7" y="2037" width="0.2" height="15.0" fill="rgb(220,155,49)" rx="2" ry="2" />
<text  x="302.74" y="2047.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (4 samples, 0.07%)</title><rect x="346.2" y="1973" width="0.7" height="15.0" fill="rgb(243,215,46)" rx="2" ry="2" />
<text  x="349.15" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="732.9" y="1973" width="0.8" height="15.0" fill="rgb(225,62,51)" rx="2" ry="2" />
<text  x="735.87" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="390.0" y="1909" width="0.2" height="15.0" fill="rgb(213,168,0)" rx="2" ry="2" />
<text  x="392.98" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="384.0" y="1973" width="0.2" height="15.0" fill="rgb(205,174,27)" rx="2" ry="2" />
<text  x="387.03" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="322.2" y="1973" width="0.4" height="15.0" fill="rgb(243,143,17)" rx="2" ry="2" />
<text  x="325.15" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (10 samples, 0.17%)</title><rect x="368.2" y="1861" width="1.9" height="15.0" fill="rgb(249,110,46)" rx="2" ry="2" />
<text  x="371.16" y="1871.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (11 samples, 0.18%)</title><rect x="343.0" y="1973" width="2.2" height="15.0" fill="rgb(209,33,41)" rx="2" ry="2" />
<text  x="345.98" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (28 samples, 0.47%)</title><rect x="397.3" y="2037" width="5.6" height="15.0" fill="rgb(228,64,53)" rx="2" ry="2" />
<text  x="400.32" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (6 samples, 0.10%)</title><rect x="324.3" y="1973" width="1.2" height="15.0" fill="rgb(220,213,23)" rx="2" ry="2" />
<text  x="327.34" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (14 samples, 0.24%)</title><rect x="963.3" y="1909" width="2.8" height="15.0" fill="rgb(206,103,8)" rx="2" ry="2" />
<text  x="966.32" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (91 samples, 1.53%)</title><rect x="259.1" y="1605" width="18.0" height="15.0" fill="rgb(230,129,41)" rx="2" ry="2" />
<text  x="262.09" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (258 samples, 4.34%)</title><rect x="526.8" y="2005" width="51.2" height="15.0" fill="rgb(226,161,34)" rx="2" ry="2" />
<text  x="529.82" y="2015.5" >[unkn..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="105.6" y="117" width="0.2" height="15.0" fill="rgb(238,226,10)" rx="2" ry="2" />
<text  x="108.59" y="127.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="878.0" y="2005" width="0.2" height="15.0" fill="rgb(238,34,40)" rx="2" ry="2" />
<text  x="881.04" y="2015.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.08%)</title><rect x="1025.6" y="2037" width="1.0" height="15.0" fill="rgb(208,109,31)" rx="2" ry="2" />
<text  x="1028.59" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="487.4" y="1957" width="0.2" height="15.0" fill="rgb(227,11,37)" rx="2" ry="2" />
<text  x="490.35" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (4 samples, 0.07%)</title><rect x="1026.6" y="2037" width="0.8" height="15.0" fill="rgb(236,60,3)" rx="2" ry="2" />
<text  x="1029.58" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7 samples, 0.12%)</title><rect x="932.6" y="1957" width="1.4" height="15.0" fill="rgb(215,153,34)" rx="2" ry="2" />
<text  x="935.58" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (91 samples, 1.53%)</title><rect x="259.1" y="1701" width="18.0" height="15.0" fill="rgb(225,114,20)" rx="2" ry="2" />
<text  x="262.09" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="593.3" y="1973" width="0.2" height="15.0" fill="rgb(217,152,50)" rx="2" ry="2" />
<text  x="596.26" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="390.0" y="1893" width="0.2" height="15.0" fill="rgb(214,203,22)" rx="2" ry="2" />
<text  x="392.98" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1317" width="45.0" height="15.0" fill="rgb(238,113,26)" rx="2" ry="2" />
<text  x="63.77" y="1327.5" >[unk..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1022.0" y="1861" width="0.2" height="15.0" fill="rgb(218,66,40)" rx="2" ry="2" />
<text  x="1025.02" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="373" width="45.0" height="15.0" fill="rgb(245,74,10)" rx="2" ry="2" />
<text  x="63.77" y="383.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="178.0" y="2005" width="0.2" height="15.0" fill="rgb(211,191,44)" rx="2" ry="2" />
<text  x="180.98" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.22%)</title><rect x="457.4" y="2005" width="49.8" height="15.0" fill="rgb(208,116,54)" rx="2" ry="2" />
<text  x="460.41" y="2015.5" >[unkn..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (15 samples, 0.25%)</title><rect x="359.4" y="1973" width="3.0" height="15.0" fill="rgb(230,84,17)" rx="2" ry="2" />
<text  x="362.44" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="867.7" y="1877" width="0.2" height="15.0" fill="rgb(222,96,35)" rx="2" ry="2" />
<text  x="870.73" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="682.9" y="1925" width="0.2" height="15.0" fill="rgb(206,169,8)" rx="2" ry="2" />
<text  x="685.90" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (8 samples, 0.13%)</title><rect x="330.9" y="1957" width="1.6" height="15.0" fill="rgb(236,52,34)" rx="2" ry="2" />
<text  x="333.88" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (5 samples, 0.08%)</title><rect x="587.7" y="2005" width="1.0" height="15.0" fill="rgb(231,58,6)" rx="2" ry="2" />
<text  x="590.70" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="501" width="45.0" height="15.0" fill="rgb(208,26,21)" rx="2" ry="2" />
<text  x="63.77" y="511.5" >[unk..</text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="990.1" y="1989" width="0.4" height="15.0" fill="rgb(219,23,33)" rx="2" ry="2" />
<text  x="993.09" y="1999.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1158.3" y="1957" width="0.2" height="15.0" fill="rgb(249,6,2)" rx="2" ry="2" />
<text  x="1161.27" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (3 samples, 0.05%)</title><rect x="560.1" y="1989" width="0.6" height="15.0" fill="rgb(207,49,13)" rx="2" ry="2" />
<text  x="563.14" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="186.5" y="1989" width="0.2" height="15.0" fill="rgb(232,126,48)" rx="2" ry="2" />
<text  x="189.50" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="867.9" y="1893" width="0.2" height="15.0" fill="rgb(249,12,12)" rx="2" ry="2" />
<text  x="870.93" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="336.0" y="1957" width="0.2" height="15.0" fill="rgb(219,156,51)" rx="2" ry="2" />
<text  x="339.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (3 samples, 0.05%)</title><rect x="204.6" y="2021" width="0.5" height="15.0" fill="rgb(220,91,36)" rx="2" ry="2" />
<text  x="207.55" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (9 samples, 0.15%)</title><rect x="542.5" y="1957" width="1.8" height="15.0" fill="rgb(224,89,25)" rx="2" ry="2" />
<text  x="545.49" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="737.4" y="1925" width="0.2" height="15.0" fill="rgb(212,173,11)" rx="2" ry="2" />
<text  x="740.44" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1144.4" y="2037" width="0.8" height="15.0" fill="rgb(249,80,54)" rx="2" ry="2" />
<text  x="1147.39" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="791.2" y="1877" width="0.2" height="15.0" fill="rgb(249,17,3)" rx="2" ry="2" />
<text  x="794.18" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="874.3" y="1973" width="1.4" height="15.0" fill="rgb(209,0,44)" rx="2" ry="2" />
<text  x="877.28" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (28 samples, 0.47%)</title><rect x="403.7" y="2005" width="5.5" height="15.0" fill="rgb(209,57,22)" rx="2" ry="2" />
<text  x="406.66" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="364.4" y="1925" width="0.2" height="15.0" fill="rgb(221,34,17)" rx="2" ry="2" />
<text  x="367.40" y="1935.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="1087.1" y="2053" width="0.4" height="15.0" fill="rgb(235,87,28)" rx="2" ry="2" />
<text  x="1090.07" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="835.2" y="2005" width="0.2" height="15.0" fill="rgb(230,217,19)" rx="2" ry="2" />
<text  x="838.21" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="201.6" y="1829" width="0.2" height="15.0" fill="rgb(225,13,16)" rx="2" ry="2" />
<text  x="204.58" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="250.2" y="1845" width="0.6" height="15.0" fill="rgb(224,209,51)" rx="2" ry="2" />
<text  x="253.16" y="1855.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(231,111,43)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1205" width="45.0" height="15.0" fill="rgb(227,2,17)" rx="2" ry="2" />
<text  x="63.77" y="1215.5" >[unk..</text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="283.3" y="1653" width="0.2" height="15.0" fill="rgb(210,196,39)" rx="2" ry="2" />
<text  x="286.28" y="1663.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (66 samples, 1.11%)</title><rect x="1126.5" y="1989" width="13.1" height="15.0" fill="rgb(251,170,37)" rx="2" ry="2" />
<text  x="1129.54" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="488.5" y="1909" width="0.2" height="15.0" fill="rgb(219,29,30)" rx="2" ry="2" />
<text  x="491.54" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (20 samples, 0.34%)</title><rect x="367.2" y="1909" width="3.9" height="15.0" fill="rgb(212,35,33)" rx="2" ry="2" />
<text  x="370.17" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="627.4" y="1861" width="0.2" height="15.0" fill="rgb(232,197,9)" rx="2" ry="2" />
<text  x="630.37" y="1871.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="283.1" y="1653" width="0.2" height="15.0" fill="rgb(228,94,10)" rx="2" ry="2" />
<text  x="286.09" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="201.4" y="1893" width="0.2" height="15.0" fill="rgb(230,193,27)" rx="2" ry="2" />
<text  x="204.38" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="19.9" y="1941" width="0.2" height="15.0" fill="rgb(227,157,12)" rx="2" ry="2" />
<text  x="22.92" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="385.8" y="1973" width="0.2" height="15.0" fill="rgb(211,150,45)" rx="2" ry="2" />
<text  x="388.82" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="643.0" y="2021" width="4.4" height="15.0" fill="rgb(228,182,37)" rx="2" ry="2" />
<text  x="646.04" y="2031.5" ></text>
</g>
<g >
<title>__ptep_modify_prot_start (1 samples, 0.02%)</title><rect x="1141.8" y="1925" width="0.2" height="15.0" fill="rgb(225,187,42)" rx="2" ry="2" />
<text  x="1144.81" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="746.6" y="1973" width="0.2" height="15.0" fill="rgb(233,48,41)" rx="2" ry="2" />
<text  x="749.56" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (90 samples, 1.51%)</title><rect x="259.3" y="1573" width="17.8" height="15.0" fill="rgb(241,70,11)" rx="2" ry="2" />
<text  x="262.29" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1099.2" y="1973" width="0.2" height="15.0" fill="rgb(225,217,33)" rx="2" ry="2" />
<text  x="1102.17" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="632.3" y="1957" width="0.6" height="15.0" fill="rgb(207,25,47)" rx="2" ry="2" />
<text  x="635.33" y="1967.5" ></text>
</g>
<g >
<title>__free_pages_ok (2 samples, 0.03%)</title><rect x="272.4" y="1285" width="0.4" height="15.0" fill="rgb(218,229,19)" rx="2" ry="2" />
<text  x="275.38" y="1295.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="611.5" y="1973" width="0.6" height="15.0" fill="rgb(237,5,53)" rx="2" ry="2" />
<text  x="614.50" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="858.6" y="1909" width="0.2" height="15.0" fill="rgb(210,97,31)" rx="2" ry="2" />
<text  x="861.61" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="333.5" y="1957" width="0.2" height="15.0" fill="rgb(228,12,48)" rx="2" ry="2" />
<text  x="336.46" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="863.4" y="1973" width="0.2" height="15.0" fill="rgb(254,1,32)" rx="2" ry="2" />
<text  x="866.37" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="166.9" y="1973" width="0.2" height="15.0" fill="rgb(220,66,15)" rx="2" ry="2" />
<text  x="169.87" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="123.4" y="1925" width="0.2" height="15.0" fill="rgb(205,52,38)" rx="2" ry="2" />
<text  x="126.44" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="105.2" y="37" width="0.2" height="15.0" fill="rgb(225,164,6)" rx="2" ry="2" />
<text  x="108.19" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="732.3" y="1909" width="0.2" height="15.0" fill="rgb(231,122,24)" rx="2" ry="2" />
<text  x="735.28" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="657.5" y="2005" width="0.6" height="15.0" fill="rgb(218,117,36)" rx="2" ry="2" />
<text  x="660.51" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="569.9" y="1893" width="0.2" height="15.0" fill="rgb(241,190,26)" rx="2" ry="2" />
<text  x="572.86" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="589.5" y="2005" width="0.2" height="15.0" fill="rgb(247,206,19)" rx="2" ry="2" />
<text  x="592.49" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="727.9" y="1893" width="0.6" height="15.0" fill="rgb(208,193,19)" rx="2" ry="2" />
<text  x="730.92" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="97.7" y="53" width="0.8" height="15.0" fill="rgb(232,98,34)" rx="2" ry="2" />
<text  x="100.66" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="544.3" y="1989" width="0.4" height="15.0" fill="rgb(214,218,31)" rx="2" ry="2" />
<text  x="547.27" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1221" width="45.0" height="15.0" fill="rgb(243,27,0)" rx="2" ry="2" />
<text  x="63.77" y="1231.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (4 samples, 0.07%)</title><rect x="646.6" y="2005" width="0.8" height="15.0" fill="rgb(233,112,53)" rx="2" ry="2" />
<text  x="649.61" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (17 samples, 0.29%)</title><rect x="827.9" y="2005" width="3.3" height="15.0" fill="rgb(221,64,37)" rx="2" ry="2" />
<text  x="830.87" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="395.9" y="2037" width="0.2" height="15.0" fill="rgb(249,168,1)" rx="2" ry="2" />
<text  x="398.93" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="206.7" y="2021" width="0.2" height="15.0" fill="rgb(244,53,3)" rx="2" ry="2" />
<text  x="209.73" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (94 samples, 1.58%)</title><rect x="1121.6" y="2005" width="18.6" height="15.0" fill="rgb(249,159,0)" rx="2" ry="2" />
<text  x="1124.58" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="880.8" y="1989" width="0.2" height="15.0" fill="rgb(210,213,7)" rx="2" ry="2" />
<text  x="883.82" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="727.7" y="1893" width="0.2" height="15.0" fill="rgb(252,19,35)" rx="2" ry="2" />
<text  x="730.72" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (3 samples, 0.05%)</title><rect x="1142.6" y="2005" width="0.6" height="15.0" fill="rgb(216,10,19)" rx="2" ry="2" />
<text  x="1145.60" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="98.5" y="37" width="0.3" height="15.0" fill="rgb(254,40,36)" rx="2" ry="2" />
<text  x="101.45" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="586.1" y="1957" width="0.2" height="15.0" fill="rgb(211,108,16)" rx="2" ry="2" />
<text  x="589.12" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="1188.2" y="2021" width="1.0" height="15.0" fill="rgb(248,9,45)" rx="2" ry="2" />
<text  x="1191.22" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (3 samples, 0.05%)</title><rect x="892.5" y="1989" width="0.6" height="15.0" fill="rgb(206,57,31)" rx="2" ry="2" />
<text  x="895.52" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (4 samples, 0.07%)</title><rect x="1034.7" y="2037" width="0.8" height="15.0" fill="rgb(230,185,9)" rx="2" ry="2" />
<text  x="1037.72" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="392.8" y="2005" width="0.4" height="15.0" fill="rgb(207,72,47)" rx="2" ry="2" />
<text  x="395.76" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="386.0" y="1957" width="0.2" height="15.0" fill="rgb(236,91,26)" rx="2" ry="2" />
<text  x="389.01" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="96.3" y="37" width="0.2" height="15.0" fill="rgb(231,34,32)" rx="2" ry="2" />
<text  x="99.27" y="47.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="791.2" y="1893" width="0.2" height="15.0" fill="rgb(215,50,40)" rx="2" ry="2" />
<text  x="794.18" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="862.2" y="1973" width="1.2" height="15.0" fill="rgb(230,173,1)" rx="2" ry="2" />
<text  x="865.18" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="15.0" y="1989" width="0.2" height="15.0" fill="rgb(224,196,31)" rx="2" ry="2" />
<text  x="17.96" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="87.3" y="37" width="0.6" height="15.0" fill="rgb(235,163,9)" rx="2" ry="2" />
<text  x="90.34" y="47.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="739.2" y="1957" width="0.2" height="15.0" fill="rgb(242,166,20)" rx="2" ry="2" />
<text  x="742.22" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="541.5" y="1813" width="0.8" height="15.0" fill="rgb(209,30,2)" rx="2" ry="2" />
<text  x="544.50" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="877.6" y="2005" width="0.2" height="15.0" fill="rgb(228,194,34)" rx="2" ry="2" />
<text  x="880.65" y="2015.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="10.4" y="1829" width="0.2" height="15.0" fill="rgb(206,150,13)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (4 samples, 0.07%)</title><rect x="680.5" y="1909" width="0.8" height="15.0" fill="rgb(211,82,16)" rx="2" ry="2" />
<text  x="683.52" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.6" y="1909" width="0.8" height="15.0" fill="rgb(212,126,49)" rx="2" ry="2" />
<text  x="14.59" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="169.8" y="1973" width="1.6" height="15.0" fill="rgb(241,17,49)" rx="2" ry="2" />
<text  x="172.85" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1813" width="45.0" height="15.0" fill="rgb(246,3,42)" rx="2" ry="2" />
<text  x="63.77" y="1823.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="594.2" y="1909" width="0.4" height="15.0" fill="rgb(233,4,30)" rx="2" ry="2" />
<text  x="597.25" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="986.1" y="1925" width="0.2" height="15.0" fill="rgb(221,6,43)" rx="2" ry="2" />
<text  x="989.13" y="1935.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.6" y="1957" width="0.8" height="15.0" fill="rgb(218,50,1)" rx="2" ry="2" />
<text  x="14.59" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (15 samples, 0.25%)</title><rect x="855.8" y="1973" width="3.0" height="15.0" fill="rgb(251,110,35)" rx="2" ry="2" />
<text  x="858.83" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="595.0" y="1989" width="0.2" height="15.0" fill="rgb(236,177,15)" rx="2" ry="2" />
<text  x="598.04" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="197.8" y="1893" width="0.2" height="15.0" fill="rgb(223,55,50)" rx="2" ry="2" />
<text  x="200.81" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="379.7" y="2005" width="0.2" height="15.0" fill="rgb(210,121,3)" rx="2" ry="2" />
<text  x="382.67" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="877.4" y="2005" width="0.2" height="15.0" fill="rgb(236,94,49)" rx="2" ry="2" />
<text  x="880.45" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="1101.5" y="2053" width="0.2" height="15.0" fill="rgb(241,24,27)" rx="2" ry="2" />
<text  x="1104.55" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="1149.3" y="2053" width="0.2" height="15.0" fill="rgb(237,127,52)" rx="2" ry="2" />
<text  x="1152.34" y="2063.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="585.7" y="1941" width="0.2" height="15.0" fill="rgb(234,96,10)" rx="2" ry="2" />
<text  x="588.72" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5 samples, 0.08%)</title><rect x="296.8" y="2021" width="1.0" height="15.0" fill="rgb(206,39,13)" rx="2" ry="2" />
<text  x="299.77" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1109" width="45.0" height="15.0" fill="rgb(251,57,42)" rx="2" ry="2" />
<text  x="63.77" y="1119.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (9 samples, 0.15%)</title><rect x="861.8" y="1989" width="1.8" height="15.0" fill="rgb(222,134,19)" rx="2" ry="2" />
<text  x="864.78" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="880.6" y="2005" width="0.2" height="15.0" fill="rgb(209,197,15)" rx="2" ry="2" />
<text  x="883.62" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="488.5" y="1925" width="0.2" height="15.0" fill="rgb(236,9,1)" rx="2" ry="2" />
<text  x="491.54" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="556.4" y="1989" width="0.4" height="15.0" fill="rgb(245,152,12)" rx="2" ry="2" />
<text  x="559.37" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (4 samples, 0.07%)</title><rect x="332.7" y="1973" width="0.8" height="15.0" fill="rgb(205,204,32)" rx="2" ry="2" />
<text  x="335.67" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="610.3" y="1941" width="0.8" height="15.0" fill="rgb(249,187,38)" rx="2" ry="2" />
<text  x="613.31" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="613" width="45.0" height="15.0" fill="rgb(254,84,28)" rx="2" ry="2" />
<text  x="63.77" y="623.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (8 samples, 0.13%)</title><rect x="16.5" y="1989" width="1.6" height="15.0" fill="rgb(219,160,18)" rx="2" ry="2" />
<text  x="19.54" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="586.7" y="1925" width="0.2" height="15.0" fill="rgb(206,30,28)" rx="2" ry="2" />
<text  x="589.71" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="63.5" y="37" width="0.4" height="15.0" fill="rgb(254,153,38)" rx="2" ry="2" />
<text  x="66.55" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="187.7" y="1989" width="0.2" height="15.0" fill="rgb(206,15,10)" rx="2" ry="2" />
<text  x="190.69" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="791.2" y="1957" width="0.2" height="15.0" fill="rgb(231,79,1)" rx="2" ry="2" />
<text  x="794.18" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.4" y="1941" width="0.2" height="15.0" fill="rgb(245,80,30)" rx="2" ry="2" />
<text  x="630.37" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (13 samples, 0.22%)</title><rect x="280.7" y="1669" width="2.6" height="15.0" fill="rgb(243,110,34)" rx="2" ry="2" />
<text  x="283.71" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="876.1" y="1989" width="0.4" height="15.0" fill="rgb(253,69,40)" rx="2" ry="2" />
<text  x="879.06" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="199.4" y="1909" width="0.2" height="15.0" fill="rgb(234,177,5)" rx="2" ry="2" />
<text  x="202.39" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="366.6" y="1877" width="0.2" height="15.0" fill="rgb(243,208,30)" rx="2" ry="2" />
<text  x="369.58" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (5 samples, 0.08%)</title><rect x="173.8" y="1973" width="1.0" height="15.0" fill="rgb(232,43,13)" rx="2" ry="2" />
<text  x="176.81" y="1983.5" ></text>
</g>
<g >
<title>___sys_sendmsg (320 samples, 5.38%)</title><rect x="230.1" y="1957" width="63.5" height="15.0" fill="rgb(226,177,19)" rx="2" ry="2" />
<text  x="233.13" y="1967.5" >___sys..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1022.0" y="1973" width="0.2" height="15.0" fill="rgb(237,89,36)" rx="2" ry="2" />
<text  x="1025.02" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="199.8" y="1909" width="0.4" height="15.0" fill="rgb(229,41,38)" rx="2" ry="2" />
<text  x="202.79" y="1919.5" ></text>
</g>
<g >
<title>ip_output (131 samples, 2.20%)</title><rect x="257.5" y="1781" width="26.0" height="15.0" fill="rgb(205,179,38)" rx="2" ry="2" />
<text  x="260.50" y="1791.5" >i..</text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="12.4" y="1909" width="0.2" height="15.0" fill="rgb(216,117,23)" rx="2" ry="2" />
<text  x="15.38" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="569.7" y="1893" width="0.2" height="15.0" fill="rgb(227,91,18)" rx="2" ry="2" />
<text  x="572.66" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (3 samples, 0.05%)</title><rect x="73.3" y="37" width="0.6" height="15.0" fill="rgb(234,13,28)" rx="2" ry="2" />
<text  x="76.26" y="47.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="1075.0" y="1845" width="0.4" height="15.0" fill="rgb(216,76,52)" rx="2" ry="2" />
<text  x="1077.97" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (3 samples, 0.05%)</title><rect x="364.6" y="2021" width="0.6" height="15.0" fill="rgb(212,16,44)" rx="2" ry="2" />
<text  x="367.59" y="2031.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="276.7" y="1493" width="0.2" height="15.0" fill="rgb(248,200,0)" rx="2" ry="2" />
<text  x="279.74" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="184.7" y="1925" width="1.4" height="15.0" fill="rgb(208,70,18)" rx="2" ry="2" />
<text  x="187.72" y="1935.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="178.2" y="2005" width="1.0" height="15.0" fill="rgb(205,113,51)" rx="2" ry="2" />
<text  x="181.17" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1413" width="45.0" height="15.0" fill="rgb(248,0,4)" rx="2" ry="2" />
<text  x="63.77" y="1423.5" >[unk..</text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.6" y="1989" width="0.8" height="15.0" fill="rgb(237,82,49)" rx="2" ry="2" />
<text  x="14.59" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="481.0" y="1925" width="1.2" height="15.0" fill="rgb(245,48,18)" rx="2" ry="2" />
<text  x="484.01" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="987.5" y="1989" width="0.2" height="15.0" fill="rgb(240,56,50)" rx="2" ry="2" />
<text  x="990.52" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (44 samples, 0.74%)</title><rect x="1161.2" y="2053" width="8.8" height="15.0" fill="rgb(250,204,21)" rx="2" ry="2" />
<text  x="1164.24" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (3 samples, 0.05%)</title><rect x="677.7" y="1909" width="0.6" height="15.0" fill="rgb(231,68,23)" rx="2" ry="2" />
<text  x="680.74" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(228,45,11)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="367.8" y="1861" width="0.4" height="15.0" fill="rgb(232,169,52)" rx="2" ry="2" />
<text  x="370.77" y="1871.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="507.2" y="2005" width="0.4" height="15.0" fill="rgb(235,171,39)" rx="2" ry="2" />
<text  x="510.19" y="2015.5" ></text>
</g>
<g >
<title>discard_slab (2 samples, 0.03%)</title><rect x="272.4" y="1333" width="0.4" height="15.0" fill="rgb(242,215,40)" rx="2" ry="2" />
<text  x="275.38" y="1343.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="746.6" y="1941" width="0.2" height="15.0" fill="rgb(241,87,14)" rx="2" ry="2" />
<text  x="749.56" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="660.3" y="1989" width="0.2" height="15.0" fill="rgb(205,122,3)" rx="2" ry="2" />
<text  x="663.29" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (29 samples, 0.49%)</title><rect x="581.6" y="1973" width="5.7" height="15.0" fill="rgb(235,111,3)" rx="2" ry="2" />
<text  x="584.56" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="593.9" y="1909" width="0.2" height="15.0" fill="rgb(212,56,7)" rx="2" ry="2" />
<text  x="596.85" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1173" width="45.0" height="15.0" fill="rgb(242,182,29)" rx="2" ry="2" />
<text  x="63.77" y="1183.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="593.9" y="1957" width="0.9" height="15.0" fill="rgb(251,27,4)" rx="2" ry="2" />
<text  x="596.85" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1140.0" y="1989" width="0.2" height="15.0" fill="rgb(238,188,28)" rx="2" ry="2" />
<text  x="1143.02" y="1999.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="61.4" y="37" width="1.0" height="15.0" fill="rgb(226,212,38)" rx="2" ry="2" />
<text  x="64.36" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (30 samples, 0.50%)</title><rect x="859.8" y="2037" width="5.9" height="15.0" fill="rgb(215,25,46)" rx="2" ry="2" />
<text  x="862.80" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (27 samples, 0.45%)</title><rect x="386.4" y="1973" width="5.4" height="15.0" fill="rgb(209,3,34)" rx="2" ry="2" />
<text  x="389.41" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="105.4" y="53" width="0.2" height="15.0" fill="rgb(214,2,23)" rx="2" ry="2" />
<text  x="108.39" y="63.5" ></text>
</g>
<g >
<title>_itoa_word (2 samples, 0.03%)</title><rect x="1085.3" y="2037" width="0.4" height="15.0" fill="rgb(253,136,42)" rx="2" ry="2" />
<text  x="1088.29" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="436.8" y="2005" width="0.2" height="15.0" fill="rgb(216,137,14)" rx="2" ry="2" />
<text  x="439.78" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (4 samples, 0.07%)</title><rect x="286.1" y="1765" width="0.8" height="15.0" fill="rgb(242,36,30)" rx="2" ry="2" />
<text  x="289.06" y="1775.5" ></text>
</g>
<g >
<title>skb_release_all (11 samples, 0.18%)</title><rect x="1046.8" y="1909" width="2.2" height="15.0" fill="rgb(211,78,0)" rx="2" ry="2" />
<text  x="1049.81" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (88 samples, 1.48%)</title><rect x="667.2" y="1957" width="17.5" height="15.0" fill="rgb(214,33,48)" rx="2" ry="2" />
<text  x="670.23" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="186.7" y="2021" width="0.2" height="15.0" fill="rgb(223,45,5)" rx="2" ry="2" />
<text  x="189.70" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="246.2" y="1557" width="0.2" height="15.0" fill="rgb(242,77,20)" rx="2" ry="2" />
<text  x="249.20" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (7 samples, 0.12%)</title><rect x="205.1" y="2021" width="1.4" height="15.0" fill="rgb(229,124,19)" rx="2" ry="2" />
<text  x="208.15" y="2031.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="126.0" y="1845" width="0.2" height="15.0" fill="rgb(211,205,4)" rx="2" ry="2" />
<text  x="129.02" y="1855.5" ></text>
</g>
<g >
<title>skb_release_data (41 samples, 0.69%)</title><rect x="264.6" y="1429" width="8.2" height="15.0" fill="rgb(245,130,42)" rx="2" ry="2" />
<text  x="267.64" y="1439.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="328.5" y="1941" width="0.4" height="15.0" fill="rgb(253,107,30)" rx="2" ry="2" />
<text  x="331.50" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (82 samples, 1.38%)</title><rect x="931.0" y="1973" width="16.3" height="15.0" fill="rgb(250,183,0)" rx="2" ry="2" />
<text  x="933.99" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="989.1" y="1957" width="0.2" height="15.0" fill="rgb(224,212,45)" rx="2" ry="2" />
<text  x="992.10" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="385.4" y="1957" width="0.4" height="15.0" fill="rgb(219,226,3)" rx="2" ry="2" />
<text  x="388.42" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (3 samples, 0.05%)</title><rect x="586.7" y="1941" width="0.6" height="15.0" fill="rgb(205,199,13)" rx="2" ry="2" />
<text  x="589.71" y="1951.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="342.6" y="1957" width="0.2" height="15.0" fill="rgb(215,220,45)" rx="2" ry="2" />
<text  x="345.58" y="1967.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="246.2" y="1701" width="0.2" height="15.0" fill="rgb(231,65,15)" rx="2" ry="2" />
<text  x="249.20" y="1711.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="1083.5" y="1973" width="1.0" height="15.0" fill="rgb(231,54,50)" rx="2" ry="2" />
<text  x="1086.50" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="194.4" y="1973" width="0.2" height="15.0" fill="rgb(215,63,39)" rx="2" ry="2" />
<text  x="197.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1082.7" y="1925" width="0.2" height="15.0" fill="rgb(254,122,2)" rx="2" ry="2" />
<text  x="1085.71" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="526.8" y="1941" width="0.2" height="15.0" fill="rgb(232,113,2)" rx="2" ry="2" />
<text  x="529.82" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="200.4" y="1909" width="0.2" height="15.0" fill="rgb(243,115,27)" rx="2" ry="2" />
<text  x="203.39" y="1919.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="370.3" y="1861" width="0.2" height="15.0" fill="rgb(212,66,54)" rx="2" ry="2" />
<text  x="373.35" y="1871.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(246,96,15)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (8 samples, 0.13%)</title><rect x="16.5" y="1941" width="1.6" height="15.0" fill="rgb(207,29,41)" rx="2" ry="2" />
<text  x="19.54" y="1951.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (112 samples, 1.88%)</title><rect x="22.9" y="2053" width="22.2" height="15.0" fill="rgb(222,171,3)" rx="2" ry="2" />
<text  x="25.89" y="2063.5" >[..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="537.5" y="1989" width="0.2" height="15.0" fill="rgb(244,213,54)" rx="2" ry="2" />
<text  x="540.53" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="820.3" y="1957" width="0.2" height="15.0" fill="rgb(218,183,49)" rx="2" ry="2" />
<text  x="823.33" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="455.4" y="1973" width="0.8" height="15.0" fill="rgb(236,187,11)" rx="2" ry="2" />
<text  x="458.43" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="125.4" y="1941" width="0.4" height="15.0" fill="rgb(251,0,47)" rx="2" ry="2" />
<text  x="128.42" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="207.1" y="2021" width="0.2" height="15.0" fill="rgb(208,181,38)" rx="2" ry="2" />
<text  x="210.13" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="60.8" y="37" width="0.6" height="15.0" fill="rgb(217,101,27)" rx="2" ry="2" />
<text  x="63.77" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="659.1" y="2037" width="0.4" height="15.0" fill="rgb(227,94,23)" rx="2" ry="2" />
<text  x="662.10" y="2047.5" ></text>
</g>
<g >
<title>free (22 samples, 0.37%)</title><rect x="207.3" y="2021" width="4.4" height="15.0" fill="rgb(238,212,43)" rx="2" ry="2" />
<text  x="210.33" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="597.4" y="2005" width="0.2" height="15.0" fill="rgb(206,62,9)" rx="2" ry="2" />
<text  x="600.42" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (22 samples, 0.37%)</title><rect x="315.6" y="1957" width="4.4" height="15.0" fill="rgb(213,12,29)" rx="2" ry="2" />
<text  x="318.61" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.7" y="1941" width="0.2" height="15.0" fill="rgb(227,157,35)" rx="2" ry="2" />
<text  x="23.71" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="1101.2" y="2053" width="0.3" height="15.0" fill="rgb(241,136,17)" rx="2" ry="2" />
<text  x="1104.15" y="2063.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="215.5" y="2021" width="0.2" height="15.0" fill="rgb(250,35,26)" rx="2" ry="2" />
<text  x="218.46" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="587.5" y="1973" width="0.2" height="15.0" fill="rgb(243,14,12)" rx="2" ry="2" />
<text  x="590.51" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1030.7" y="1909" width="0.2" height="15.0" fill="rgb(222,176,39)" rx="2" ry="2" />
<text  x="1033.75" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (12 samples, 0.20%)</title><rect x="1124.0" y="1973" width="2.3" height="15.0" fill="rgb(246,120,25)" rx="2" ry="2" />
<text  x="1126.96" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="586.3" y="1941" width="0.4" height="15.0" fill="rgb(248,103,24)" rx="2" ry="2" />
<text  x="589.32" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="721.6" y="1877" width="0.2" height="15.0" fill="rgb(213,19,4)" rx="2" ry="2" />
<text  x="724.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="741" width="45.0" height="15.0" fill="rgb(241,68,39)" rx="2" ry="2" />
<text  x="63.77" y="751.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="389.8" y="1925" width="1.2" height="15.0" fill="rgb(216,100,49)" rx="2" ry="2" />
<text  x="392.78" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="369.9" y="1845" width="0.2" height="15.0" fill="rgb(251,7,49)" rx="2" ry="2" />
<text  x="372.95" y="1855.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="200.0" y="1893" width="0.2" height="15.0" fill="rgb(237,30,50)" rx="2" ry="2" />
<text  x="202.99" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="515.3" y="2021" width="0.2" height="15.0" fill="rgb(254,136,31)" rx="2" ry="2" />
<text  x="518.32" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="571.2" y="1989" width="0.4" height="15.0" fill="rgb(236,191,20)" rx="2" ry="2" />
<text  x="574.24" y="1999.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="693.4" y="1765" width="0.2" height="15.0" fill="rgb(242,99,31)" rx="2" ry="2" />
<text  x="696.41" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="364.2" y="1973" width="0.4" height="15.0" fill="rgb(220,204,27)" rx="2" ry="2" />
<text  x="367.20" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="518.3" y="1989" width="0.2" height="15.0" fill="rgb(216,4,49)" rx="2" ry="2" />
<text  x="521.29" y="1999.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (5 samples, 0.08%)</title><rect x="345.2" y="1973" width="1.0" height="15.0" fill="rgb(206,213,2)" rx="2" ry="2" />
<text  x="348.16" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="182.9" y="1941" width="0.2" height="15.0" fill="rgb(243,103,25)" rx="2" ry="2" />
<text  x="185.93" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="245.0" y="1749" width="0.2" height="15.0" fill="rgb(211,81,2)" rx="2" ry="2" />
<text  x="248.01" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="192.7" y="1957" width="0.2" height="15.0" fill="rgb(216,147,2)" rx="2" ry="2" />
<text  x="195.65" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="448.1" y="1941" width="0.2" height="15.0" fill="rgb(240,121,26)" rx="2" ry="2" />
<text  x="451.09" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="246.2" y="1669" width="0.2" height="15.0" fill="rgb(229,105,24)" rx="2" ry="2" />
<text  x="249.20" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="594.1" y="1909" width="0.1" height="15.0" fill="rgb(206,121,49)" rx="2" ry="2" />
<text  x="597.05" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="194.0" y="1973" width="0.2" height="15.0" fill="rgb(235,25,4)" rx="2" ry="2" />
<text  x="197.04" y="1983.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (4 samples, 0.07%)</title><rect x="1175.7" y="2053" width="0.8" height="15.0" fill="rgb(242,162,41)" rx="2" ry="2" />
<text  x="1178.72" y="2063.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (17 samples, 0.29%)</title><rect x="339.4" y="1973" width="3.4" height="15.0" fill="rgb(243,29,43)" rx="2" ry="2" />
<text  x="342.41" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (6 samples, 0.10%)</title><rect x="87.1" y="53" width="1.2" height="15.0" fill="rgb(210,114,36)" rx="2" ry="2" />
<text  x="90.15" y="63.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.4" y="2053" width="1.0" height="15.0" fill="rgb(208,212,22)" rx="2" ry="2" />
<text  x="14.39" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="19.7" y="1973" width="0.4" height="15.0" fill="rgb(219,117,33)" rx="2" ry="2" />
<text  x="22.72" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="190.3" y="1989" width="0.2" height="15.0" fill="rgb(217,226,28)" rx="2" ry="2" />
<text  x="193.27" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (91 samples, 1.53%)</title><rect x="259.1" y="1717" width="18.0" height="15.0" fill="rgb(218,116,44)" rx="2" ry="2" />
<text  x="262.09" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (12 samples, 0.20%)</title><rect x="488.7" y="1989" width="2.4" height="15.0" fill="rgb(245,195,46)" rx="2" ry="2" />
<text  x="491.74" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (159 samples, 2.67%)</title><rect x="955.4" y="1941" width="31.5" height="15.0" fill="rgb(214,226,17)" rx="2" ry="2" />
<text  x="958.39" y="1951.5" >[m..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="293" width="45.0" height="15.0" fill="rgb(239,66,23)" rx="2" ry="2" />
<text  x="63.77" y="303.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="336.8" y="1941" width="0.2" height="15.0" fill="rgb(209,223,10)" rx="2" ry="2" />
<text  x="339.83" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="201.8" y="1893" width="0.2" height="15.0" fill="rgb(229,153,10)" rx="2" ry="2" />
<text  x="204.77" y="1903.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="390.8" y="1909" width="0.2" height="15.0" fill="rgb(217,171,7)" rx="2" ry="2" />
<text  x="393.77" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="730.1" y="1909" width="0.4" height="15.0" fill="rgb(233,209,54)" rx="2" ry="2" />
<text  x="733.10" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (66 samples, 1.11%)</title><rect x="142.5" y="1957" width="13.1" height="15.0" fill="rgb(218,186,4)" rx="2" ry="2" />
<text  x="145.48" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="627.4" y="1925" width="0.2" height="15.0" fill="rgb(205,71,27)" rx="2" ry="2" />
<text  x="630.37" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="680.1" y="1941" width="2.0" height="15.0" fill="rgb(213,174,48)" rx="2" ry="2" />
<text  x="683.12" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (2 samples, 0.03%)</title><rect x="1090.0" y="2053" width="0.4" height="15.0" fill="rgb(220,135,2)" rx="2" ry="2" />
<text  x="1093.05" y="2063.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (3 samples, 0.05%)</title><rect x="60.0" y="2005" width="0.6" height="15.0" fill="rgb(247,199,44)" rx="2" ry="2" />
<text  x="62.98" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="379.9" y="2005" width="0.4" height="15.0" fill="rgb(234,106,10)" rx="2" ry="2" />
<text  x="382.87" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (2 samples, 0.03%)</title><rect x="341.6" y="1925" width="0.4" height="15.0" fill="rgb(232,145,31)" rx="2" ry="2" />
<text  x="344.59" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="836.6" y="1989" width="1.0" height="15.0" fill="rgb(224,170,52)" rx="2" ry="2" />
<text  x="839.59" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="357.7" y="1973" width="0.9" height="15.0" fill="rgb(206,55,53)" rx="2" ry="2" />
<text  x="360.65" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1048.6" y="1877" width="0.2" height="15.0" fill="rgb(245,171,46)" rx="2" ry="2" />
<text  x="1051.60" y="1887.5" ></text>
</g>
<g >
<title>skb_free_head (6 samples, 0.10%)</title><rect x="1046.8" y="1877" width="1.2" height="15.0" fill="rgb(209,200,6)" rx="2" ry="2" />
<text  x="1049.81" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.62%)</title><rect x="365.4" y="2005" width="7.3" height="15.0" fill="rgb(245,117,0)" rx="2" ry="2" />
<text  x="368.39" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (8 samples, 0.13%)</title><rect x="1076.4" y="1909" width="1.5" height="15.0" fill="rgb(217,144,54)" rx="2" ry="2" />
<text  x="1079.36" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="335.0" y="1973" width="0.2" height="15.0" fill="rgb(226,101,50)" rx="2" ry="2" />
<text  x="338.05" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="907.6" y="2005" width="0.2" height="15.0" fill="rgb(226,116,3)" rx="2" ry="2" />
<text  x="910.59" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="721.8" y="1877" width="1.2" height="15.0" fill="rgb(223,14,3)" rx="2" ry="2" />
<text  x="724.77" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="595.0" y="1973" width="0.2" height="15.0" fill="rgb(222,97,26)" rx="2" ry="2" />
<text  x="598.04" y="1983.5" ></text>
</g>
<g >
<title>__fget (15 samples, 0.25%)</title><rect x="293.6" y="1909" width="3.0" height="15.0" fill="rgb(253,63,13)" rx="2" ry="2" />
<text  x="296.60" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="954.2" y="1893" width="0.4" height="15.0" fill="rgb(213,146,29)" rx="2" ry="2" />
<text  x="957.20" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (90 samples, 1.51%)</title><rect x="259.3" y="1557" width="17.8" height="15.0" fill="rgb(235,163,48)" rx="2" ry="2" />
<text  x="262.29" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (21 samples, 0.35%)</title><rect x="1145.2" y="2053" width="4.1" height="15.0" fill="rgb(234,128,20)" rx="2" ry="2" />
<text  x="1148.18" y="2063.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="277.9" y="1669" width="0.2" height="15.0" fill="rgb(218,213,2)" rx="2" ry="2" />
<text  x="280.93" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="383.2" y="1989" width="0.2" height="15.0" fill="rgb(235,8,1)" rx="2" ry="2" />
<text  x="386.24" y="1999.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (33 samples, 0.55%)</title><rect x="301.7" y="1957" width="6.6" height="15.0" fill="rgb(210,180,11)" rx="2" ry="2" />
<text  x="304.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (1 samples, 0.02%)</title><rect x="507.6" y="2005" width="0.2" height="15.0" fill="rgb(243,146,18)" rx="2" ry="2" />
<text  x="510.58" y="2015.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="92.1" y="37" width="0.4" height="15.0" fill="rgb(251,43,16)" rx="2" ry="2" />
<text  x="95.10" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="607.5" y="2037" width="0.4" height="15.0" fill="rgb(216,160,43)" rx="2" ry="2" />
<text  x="610.54" y="2047.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.6" y="2005" width="0.8" height="15.0" fill="rgb(245,31,46)" rx="2" ry="2" />
<text  x="14.59" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="917" width="45.0" height="15.0" fill="rgb(223,138,30)" rx="2" ry="2" />
<text  x="63.77" y="927.5" >[unk..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="594.4" y="1797" width="0.2" height="15.0" fill="rgb(245,93,49)" rx="2" ry="2" />
<text  x="597.45" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="158.3" y="1925" width="0.4" height="15.0" fill="rgb(233,222,18)" rx="2" ry="2" />
<text  x="161.34" y="1935.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.10%)</title><rect x="12.4" y="1941" width="1.2" height="15.0" fill="rgb(246,3,28)" rx="2" ry="2" />
<text  x="15.38" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="953.6" y="1893" width="0.2" height="15.0" fill="rgb(208,92,10)" rx="2" ry="2" />
<text  x="956.60" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (91 samples, 1.53%)</title><rect x="259.1" y="1669" width="18.0" height="15.0" fill="rgb(216,201,9)" rx="2" ry="2" />
<text  x="262.09" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="678.9" y="1925" width="1.0" height="15.0" fill="rgb(222,107,11)" rx="2" ry="2" />
<text  x="681.93" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (5 samples, 0.08%)</title><rect x="978.2" y="1877" width="1.0" height="15.0" fill="rgb(243,63,2)" rx="2" ry="2" />
<text  x="981.19" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="480.8" y="1925" width="0.2" height="15.0" fill="rgb(227,27,37)" rx="2" ry="2" />
<text  x="483.81" y="1935.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1082.5" y="1909" width="0.2" height="15.0" fill="rgb(239,59,11)" rx="2" ry="2" />
<text  x="1085.51" y="1919.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="363.4" y="2005" width="0.2" height="15.0" fill="rgb(230,150,3)" rx="2" ry="2" />
<text  x="366.41" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="1124.8" y="1957" width="0.3" height="15.0" fill="rgb(227,192,5)" rx="2" ry="2" />
<text  x="1127.75" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (2 samples, 0.03%)</title><rect x="186.1" y="1989" width="0.4" height="15.0" fill="rgb(251,205,21)" rx="2" ry="2" />
<text  x="189.11" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="720.6" y="1797" width="0.2" height="15.0" fill="rgb(211,210,19)" rx="2" ry="2" />
<text  x="723.58" y="1807.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="246.2" y="1717" width="0.2" height="15.0" fill="rgb(229,218,21)" rx="2" ry="2" />
<text  x="249.20" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="865.7" y="2005" width="0.2" height="15.0" fill="rgb(235,129,17)" rx="2" ry="2" />
<text  x="868.75" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1049.4" y="1861" width="0.2" height="15.0" fill="rgb(238,170,2)" rx="2" ry="2" />
<text  x="1052.39" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (31 samples, 0.52%)</title><rect x="948.8" y="1989" width="6.2" height="15.0" fill="rgb(214,26,9)" rx="2" ry="2" />
<text  x="951.84" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (3 samples, 0.05%)</title><rect x="686.5" y="1941" width="0.6" height="15.0" fill="rgb(242,0,42)" rx="2" ry="2" />
<text  x="689.47" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (2 samples, 0.03%)</title><rect x="658.7" y="2037" width="0.4" height="15.0" fill="rgb(206,17,54)" rx="2" ry="2" />
<text  x="661.70" y="2047.5" ></text>
</g>
<g >
<title>skb_release_data (6 samples, 0.10%)</title><rect x="1046.8" y="1893" width="1.2" height="15.0" fill="rgb(250,13,30)" rx="2" ry="2" />
<text  x="1049.81" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="384.4" y="1957" width="0.4" height="15.0" fill="rgb(235,126,46)" rx="2" ry="2" />
<text  x="387.43" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (39 samples, 0.66%)</title><rect x="15.2" y="2037" width="7.7" height="15.0" fill="rgb(224,31,4)" rx="2" ry="2" />
<text  x="18.16" y="2047.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="392.4" y="2005" width="0.2" height="15.0" fill="rgb(220,32,32)" rx="2" ry="2" />
<text  x="395.36" y="2015.5" ></text>
</g>
<g >
<title>put_page (1 samples, 0.02%)</title><rect x="1144.0" y="1957" width="0.2" height="15.0" fill="rgb(229,214,23)" rx="2" ry="2" />
<text  x="1146.99" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="865.5" y="2005" width="0.2" height="15.0" fill="rgb(247,37,15)" rx="2" ry="2" />
<text  x="868.55" y="2015.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (2 samples, 0.03%)</title><rect x="834.8" y="2005" width="0.4" height="15.0" fill="rgb(210,81,32)" rx="2" ry="2" />
<text  x="837.81" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="201.6" y="1813" width="0.2" height="15.0" fill="rgb(229,11,28)" rx="2" ry="2" />
<text  x="204.58" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="197" width="45.0" height="15.0" fill="rgb(207,173,36)" rx="2" ry="2" />
<text  x="63.77" y="207.5" >[unk..</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="246.6" y="1845" width="0.2" height="15.0" fill="rgb(207,43,27)" rx="2" ry="2" />
<text  x="249.59" y="1855.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="384.0" y="1861" width="0.2" height="15.0" fill="rgb(247,97,6)" rx="2" ry="2" />
<text  x="387.03" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="124.6" y="1973" width="0.4" height="15.0" fill="rgb(250,21,1)" rx="2" ry="2" />
<text  x="127.63" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (33 samples, 0.55%)</title><rect x="429.2" y="2005" width="6.6" height="15.0" fill="rgb(211,77,24)" rx="2" ry="2" />
<text  x="432.25" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (3 samples, 0.05%)</title><rect x="650.2" y="1989" width="0.6" height="15.0" fill="rgb(247,26,7)" rx="2" ry="2" />
<text  x="653.17" y="1999.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="594.4" y="1765" width="0.2" height="15.0" fill="rgb(219,121,38)" rx="2" ry="2" />
<text  x="597.45" y="1775.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="215.7" y="2037" width="0.2" height="15.0" fill="rgb(210,116,35)" rx="2" ry="2" />
<text  x="218.66" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (2 samples, 0.03%)</title><rect x="522.7" y="2037" width="0.4" height="15.0" fill="rgb(229,39,0)" rx="2" ry="2" />
<text  x="525.66" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1046.6" y="1893" width="0.2" height="15.0" fill="rgb(224,49,29)" rx="2" ry="2" />
<text  x="1049.62" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (21 samples, 0.35%)</title><rect x="1095.6" y="2037" width="4.2" height="15.0" fill="rgb(233,92,29)" rx="2" ry="2" />
<text  x="1098.60" y="2047.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1083.1" y="1925" width="0.2" height="15.0" fill="rgb(251,219,17)" rx="2" ry="2" />
<text  x="1086.11" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="589.5" y="2021" width="1.4" height="15.0" fill="rgb(219,183,47)" rx="2" ry="2" />
<text  x="592.49" y="2031.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="1049.4" y="1765" width="0.2" height="15.0" fill="rgb(212,205,23)" rx="2" ry="2" />
<text  x="1052.39" y="1775.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (4 samples, 0.07%)</title><rect x="923.3" y="1989" width="0.8" height="15.0" fill="rgb(252,198,50)" rx="2" ry="2" />
<text  x="926.26" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="877.8" y="2005" width="0.2" height="15.0" fill="rgb(220,75,35)" rx="2" ry="2" />
<text  x="880.85" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (11 samples, 0.18%)</title><rect x="631.1" y="1989" width="2.2" height="15.0" fill="rgb(227,96,19)" rx="2" ry="2" />
<text  x="634.14" y="1999.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="254.5" y="1829" width="0.2" height="15.0" fill="rgb(214,157,29)" rx="2" ry="2" />
<text  x="257.53" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="595.2" y="1989" width="1.0" height="15.0" fill="rgb(208,105,53)" rx="2" ry="2" />
<text  x="598.24" y="1999.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (28 samples, 0.47%)</title><rect x="949.2" y="1957" width="5.6" height="15.0" fill="rgb(231,161,4)" rx="2" ry="2" />
<text  x="952.24" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1099.4" y="1909" width="0.2" height="15.0" fill="rgb(218,130,3)" rx="2" ry="2" />
<text  x="1102.37" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (4 samples, 0.07%)</title><rect x="865.9" y="1957" width="0.8" height="15.0" fill="rgb(230,112,37)" rx="2" ry="2" />
<text  x="868.95" y="1967.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="691.4" y="1877" width="0.2" height="15.0" fill="rgb(252,141,47)" rx="2" ry="2" />
<text  x="694.43" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (33 samples, 0.55%)</title><rect x="365.8" y="1957" width="6.5" height="15.0" fill="rgb(237,53,41)" rx="2" ry="2" />
<text  x="368.78" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="184.9" y="1909" width="1.2" height="15.0" fill="rgb(214,80,45)" rx="2" ry="2" />
<text  x="187.92" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="858.6" y="1845" width="0.2" height="15.0" fill="rgb(246,61,23)" rx="2" ry="2" />
<text  x="861.61" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="277.3" y="1701" width="0.4" height="15.0" fill="rgb(235,50,40)" rx="2" ry="2" />
<text  x="280.33" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="225.0" y="2021" width="1.2" height="15.0" fill="rgb(248,109,51)" rx="2" ry="2" />
<text  x="227.98" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (45 samples, 0.76%)</title><rect x="712.6" y="1877" width="9.0" height="15.0" fill="rgb(224,43,11)" rx="2" ry="2" />
<text  x="715.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="869" width="45.0" height="15.0" fill="rgb(224,175,14)" rx="2" ry="2" />
<text  x="63.77" y="879.5" >[unk..</text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="105.6" y="53" width="0.2" height="15.0" fill="rgb(224,42,46)" rx="2" ry="2" />
<text  x="108.59" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (6 samples, 0.10%)</title><rect x="1101.7" y="2053" width="1.2" height="15.0" fill="rgb(223,103,43)" rx="2" ry="2" />
<text  x="1104.75" y="2063.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="586.7" y="1893" width="0.2" height="15.0" fill="rgb(253,88,49)" rx="2" ry="2" />
<text  x="589.71" y="1903.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (11 samples, 0.18%)</title><rect x="316.8" y="1925" width="2.2" height="15.0" fill="rgb(209,164,17)" rx="2" ry="2" />
<text  x="319.80" y="1935.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="739.6" y="1973" width="0.6" height="15.0" fill="rgb(246,103,45)" rx="2" ry="2" />
<text  x="742.62" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="890.3" y="2005" width="0.4" height="15.0" fill="rgb(240,31,50)" rx="2" ry="2" />
<text  x="893.34" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="729.9" y="1909" width="0.2" height="15.0" fill="rgb(249,86,24)" rx="2" ry="2" />
<text  x="732.90" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="596.6" y="1941" width="0.2" height="15.0" fill="rgb(226,18,0)" rx="2" ry="2" />
<text  x="599.63" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="605.9" y="2037" width="0.2" height="15.0" fill="rgb(224,218,32)" rx="2" ry="2" />
<text  x="608.95" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="881.0" y="2037" width="0.2" height="15.0" fill="rgb(215,121,9)" rx="2" ry="2" />
<text  x="884.02" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (5 samples, 0.08%)</title><rect x="555.4" y="1973" width="1.0" height="15.0" fill="rgb(223,141,13)" rx="2" ry="2" />
<text  x="558.38" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (7 samples, 0.12%)</title><rect x="1097.2" y="2005" width="1.4" height="15.0" fill="rgb(208,27,48)" rx="2" ry="2" />
<text  x="1100.19" y="2015.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="298.4" y="2037" width="0.4" height="15.0" fill="rgb(215,126,41)" rx="2" ry="2" />
<text  x="301.36" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (61 samples, 1.03%)</title><rect x="843.7" y="1973" width="12.1" height="15.0" fill="rgb(212,69,15)" rx="2" ry="2" />
<text  x="846.73" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1845" width="45.0" height="15.0" fill="rgb(226,76,15)" rx="2" ry="2" />
<text  x="63.77" y="1855.5" >[unk..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="159.1" y="1925" width="0.4" height="15.0" fill="rgb(208,51,8)" rx="2" ry="2" />
<text  x="162.14" y="1935.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="233.9" y="1893" width="1.4" height="15.0" fill="rgb(231,69,8)" rx="2" ry="2" />
<text  x="236.90" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="202.6" y="1973" width="0.2" height="15.0" fill="rgb(252,132,10)" rx="2" ry="2" />
<text  x="205.57" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="989.3" y="1957" width="0.2" height="15.0" fill="rgb(237,63,6)" rx="2" ry="2" />
<text  x="992.30" y="1967.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (12 samples, 0.20%)</title><rect x="316.6" y="1941" width="2.4" height="15.0" fill="rgb(207,226,7)" rx="2" ry="2" />
<text  x="319.60" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="356.9" y="1989" width="0.2" height="15.0" fill="rgb(225,219,25)" rx="2" ry="2" />
<text  x="359.86" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="1143.6" y="1973" width="0.8" height="15.0" fill="rgb(217,167,40)" rx="2" ry="2" />
<text  x="1146.59" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="679.9" y="1925" width="0.2" height="15.0" fill="rgb(250,7,20)" rx="2" ry="2" />
<text  x="682.92" y="1935.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="142.3" y="1877" width="0.2" height="15.0" fill="rgb(220,202,53)" rx="2" ry="2" />
<text  x="145.28" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1030.7" y="2021" width="0.2" height="15.0" fill="rgb(218,104,31)" rx="2" ry="2" />
<text  x="1033.75" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="389.4" y="1909" width="0.4" height="15.0" fill="rgb(242,185,37)" rx="2" ry="2" />
<text  x="392.38" y="1919.5" ></text>
</g>
<g >
<title>tcp_push (170 samples, 2.86%)</title><rect x="253.3" y="1877" width="33.8" height="15.0" fill="rgb(210,78,18)" rx="2" ry="2" />
<text  x="256.34" y="1887.5" >tc..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="475.3" y="1877" width="0.2" height="15.0" fill="rgb(239,226,27)" rx="2" ry="2" />
<text  x="478.26" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9 samples, 0.15%)</title><rect x="944.9" y="1941" width="1.8" height="15.0" fill="rgb(207,203,3)" rx="2" ry="2" />
<text  x="947.88" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="372.3" y="1957" width="0.2" height="15.0" fill="rgb(213,212,5)" rx="2" ry="2" />
<text  x="375.33" y="1967.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.10%)</title><rect x="12.4" y="1957" width="1.2" height="15.0" fill="rgb(226,70,4)" rx="2" ry="2" />
<text  x="15.38" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="827.5" y="2005" width="0.2" height="15.0" fill="rgb(222,113,36)" rx="2" ry="2" />
<text  x="830.47" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="664.5" y="1989" width="0.7" height="15.0" fill="rgb(219,5,8)" rx="2" ry="2" />
<text  x="667.45" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="986.7" y="1925" width="0.2" height="15.0" fill="rgb(244,217,35)" rx="2" ry="2" />
<text  x="989.72" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (15 samples, 0.25%)</title><rect x="18.1" y="1989" width="3.0" height="15.0" fill="rgb(241,14,20)" rx="2" ry="2" />
<text  x="21.13" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (6 samples, 0.10%)</title><rect x="285.7" y="1829" width="1.2" height="15.0" fill="rgb(207,35,41)" rx="2" ry="2" />
<text  x="288.66" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1589" width="45.0" height="15.0" fill="rgb(206,201,15)" rx="2" ry="2" />
<text  x="63.77" y="1599.5" >[unk..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (6 samples, 0.10%)</title><rect x="366.0" y="1925" width="1.2" height="15.0" fill="rgb(223,121,41)" rx="2" ry="2" />
<text  x="368.98" y="1935.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="609.7" y="1957" width="0.2" height="15.0" fill="rgb(244,161,4)" rx="2" ry="2" />
<text  x="612.72" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="12.6" y="1861" width="1.0" height="15.0" fill="rgb(231,52,10)" rx="2" ry="2" />
<text  x="15.58" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="391.2" y="1925" width="0.2" height="15.0" fill="rgb(254,43,45)" rx="2" ry="2" />
<text  x="394.17" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.6" y="1893" width="0.8" height="15.0" fill="rgb(205,222,15)" rx="2" ry="2" />
<text  x="14.59" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="98.8" y="37" width="0.4" height="15.0" fill="rgb(210,24,48)" rx="2" ry="2" />
<text  x="101.85" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="371.3" y="1893" width="0.2" height="15.0" fill="rgb(226,197,9)" rx="2" ry="2" />
<text  x="374.34" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (9 samples, 0.15%)</title><rect x="478.4" y="1925" width="1.8" height="15.0" fill="rgb(242,59,39)" rx="2" ry="2" />
<text  x="481.43" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="448.9" y="2005" width="0.2" height="15.0" fill="rgb(239,96,21)" rx="2" ry="2" />
<text  x="451.88" y="2015.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="596.6" y="1893" width="0.2" height="15.0" fill="rgb(239,179,32)" rx="2" ry="2" />
<text  x="599.63" y="1903.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1077.9" y="1909" width="0.2" height="15.0" fill="rgb(213,3,37)" rx="2" ry="2" />
<text  x="1080.95" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="661" width="45.0" height="15.0" fill="rgb(247,51,48)" rx="2" ry="2" />
<text  x="63.77" y="671.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.8" y="2005" width="0.2" height="15.0" fill="rgb(233,185,30)" rx="2" ry="2" />
<text  x="911.78" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="1031.1" y="2021" width="3.4" height="15.0" fill="rgb(226,46,2)" rx="2" ry="2" />
<text  x="1034.15" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (11 samples, 0.18%)</title><rect x="892.3" y="2005" width="2.2" height="15.0" fill="rgb(235,187,22)" rx="2" ry="2" />
<text  x="895.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="309.3" y="2037" width="0.2" height="15.0" fill="rgb(227,110,49)" rx="2" ry="2" />
<text  x="312.26" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (5 samples, 0.08%)</title><rect x="91.1" y="37" width="1.0" height="15.0" fill="rgb(219,153,23)" rx="2" ry="2" />
<text  x="94.11" y="47.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="444.7" y="1989" width="0.2" height="15.0" fill="rgb(214,172,3)" rx="2" ry="2" />
<text  x="447.72" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (35 samples, 0.59%)</title><rect x="580.8" y="1989" width="6.9" height="15.0" fill="rgb(221,156,51)" rx="2" ry="2" />
<text  x="583.76" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="372.7" y="2021" width="0.6" height="15.0" fill="rgb(246,179,34)" rx="2" ry="2" />
<text  x="375.73" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (37 samples, 0.62%)</title><rect x="528.2" y="1973" width="7.3" height="15.0" fill="rgb(251,1,15)" rx="2" ry="2" />
<text  x="531.21" y="1983.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="12.4" y="1845" width="0.2" height="15.0" fill="rgb(215,35,53)" rx="2" ry="2" />
<text  x="15.38" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (15 samples, 0.25%)</title><rect x="556.8" y="1989" width="2.9" height="15.0" fill="rgb(215,221,33)" rx="2" ry="2" />
<text  x="559.77" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="880.8" y="1973" width="0.2" height="15.0" fill="rgb(221,126,16)" rx="2" ry="2" />
<text  x="883.82" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (234 samples, 3.93%)</title><rect x="686.5" y="1957" width="46.4" height="15.0" fill="rgb(219,55,3)" rx="2" ry="2" />
<text  x="689.47" y="1967.5" >foll..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="384.2" y="1973" width="0.8" height="15.0" fill="rgb(205,28,11)" rx="2" ry="2" />
<text  x="387.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (5 samples, 0.08%)</title><rect x="822.3" y="2005" width="1.0" height="15.0" fill="rgb(234,66,25)" rx="2" ry="2" />
<text  x="825.32" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="324.9" y="1957" width="0.6" height="15.0" fill="rgb(230,208,4)" rx="2" ry="2" />
<text  x="327.93" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (7 samples, 0.12%)</title><rect x="591.5" y="1989" width="1.4" height="15.0" fill="rgb(213,209,35)" rx="2" ry="2" />
<text  x="594.47" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="901" width="45.0" height="15.0" fill="rgb(236,152,24)" rx="2" ry="2" />
<text  x="63.77" y="911.5" >[unk..</text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="627.4" y="1893" width="0.2" height="15.0" fill="rgb(212,174,15)" rx="2" ry="2" />
<text  x="630.37" y="1903.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="1158.3" y="1925" width="0.2" height="15.0" fill="rgb(225,67,39)" rx="2" ry="2" />
<text  x="1161.27" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="393.2" y="2005" width="0.2" height="15.0" fill="rgb(243,4,46)" rx="2" ry="2" />
<text  x="396.15" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (32 samples, 0.54%)</title><rect x="277.1" y="1717" width="6.4" height="15.0" fill="rgb(236,163,39)" rx="2" ry="2" />
<text  x="280.14" y="1727.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="12.4" y="1877" width="0.2" height="15.0" fill="rgb(211,171,45)" rx="2" ry="2" />
<text  x="15.38" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="362.6" y="1989" width="0.2" height="15.0" fill="rgb(254,12,39)" rx="2" ry="2" />
<text  x="365.61" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="488.1" y="1957" width="0.2" height="15.0" fill="rgb(208,176,26)" rx="2" ry="2" />
<text  x="491.15" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (28 samples, 0.47%)</title><rect x="491.9" y="1973" width="5.6" height="15.0" fill="rgb(242,101,2)" rx="2" ry="2" />
<text  x="494.92" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="486.8" y="1925" width="0.2" height="15.0" fill="rgb(239,17,2)" rx="2" ry="2" />
<text  x="489.76" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="587.1" y="1909" width="0.2" height="15.0" fill="rgb(215,57,6)" rx="2" ry="2" />
<text  x="590.11" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="65.1" y="37" width="0.2" height="15.0" fill="rgb(222,198,35)" rx="2" ry="2" />
<text  x="68.13" y="47.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="286.7" y="1749" width="0.2" height="15.0" fill="rgb(214,229,28)" rx="2" ry="2" />
<text  x="289.66" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (13 samples, 0.22%)</title><rect x="553.8" y="1989" width="2.6" height="15.0" fill="rgb(215,198,34)" rx="2" ry="2" />
<text  x="556.79" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (3 samples, 0.05%)</title><rect x="372.7" y="2037" width="0.6" height="15.0" fill="rgb(220,182,48)" rx="2" ry="2" />
<text  x="375.73" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="364.4" y="1957" width="0.2" height="15.0" fill="rgb(206,25,1)" rx="2" ry="2" />
<text  x="367.40" y="1967.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="569.9" y="1845" width="0.2" height="15.0" fill="rgb(214,191,30)" rx="2" ry="2" />
<text  x="572.86" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="369.6" y="1845" width="0.3" height="15.0" fill="rgb(249,120,16)" rx="2" ry="2" />
<text  x="372.55" y="1855.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="723.6" y="1877" width="0.2" height="15.0" fill="rgb(214,15,0)" rx="2" ry="2" />
<text  x="726.55" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="370.5" y="1861" width="0.2" height="15.0" fill="rgb(248,132,40)" rx="2" ry="2" />
<text  x="373.54" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="102.8" y="37" width="0.6" height="15.0" fill="rgb(226,7,16)" rx="2" ry="2" />
<text  x="105.81" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (33 samples, 0.55%)</title><rect x="196.0" y="1973" width="6.6" height="15.0" fill="rgb(253,201,51)" rx="2" ry="2" />
<text  x="199.02" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="378.1" y="1957" width="0.2" height="15.0" fill="rgb(212,133,45)" rx="2" ry="2" />
<text  x="381.08" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="199.4" y="1877" width="0.2" height="15.0" fill="rgb(214,22,1)" rx="2" ry="2" />
<text  x="202.39" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="515.3" y="1909" width="0.2" height="15.0" fill="rgb(245,121,33)" rx="2" ry="2" />
<text  x="518.32" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (16 samples, 0.27%)</title><rect x="83.6" y="37" width="3.1" height="15.0" fill="rgb(207,106,46)" rx="2" ry="2" />
<text  x="86.58" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (8 samples, 0.13%)</title><rect x="483.8" y="1909" width="1.6" height="15.0" fill="rgb(226,15,49)" rx="2" ry="2" />
<text  x="486.78" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1139.2" y="1973" width="0.2" height="15.0" fill="rgb(233,63,13)" rx="2" ry="2" />
<text  x="1142.23" y="1983.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.05%)</title><rect x="249.6" y="1781" width="0.6" height="15.0" fill="rgb(223,144,17)" rx="2" ry="2" />
<text  x="252.57" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="496.5" y="1957" width="1.0" height="15.0" fill="rgb(229,112,32)" rx="2" ry="2" />
<text  x="499.48" y="1967.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1083.3" y="1957" width="0.2" height="15.0" fill="rgb(213,92,0)" rx="2" ry="2" />
<text  x="1086.30" y="1967.5" ></text>
</g>
<g >
<title>mcrouter (5,932 samples, 99.70%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(235,200,33)" rx="2" ry="2" />
<text  x="16.57" y="2079.5" >mcrouter</text>
</g>
<g >
<title>tcp_poll (10 samples, 0.17%)</title><rect x="305.5" y="1893" width="2.0" height="15.0" fill="rgb(222,168,34)" rx="2" ry="2" />
<text  x="308.50" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (12 samples, 0.20%)</title><rect x="625.2" y="1973" width="2.4" height="15.0" fill="rgb(216,165,12)" rx="2" ry="2" />
<text  x="628.19" y="1983.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="575.4" y="1989" width="0.4" height="15.0" fill="rgb(208,101,26)" rx="2" ry="2" />
<text  x="578.41" y="1999.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="249.2" y="1813" width="1.0" height="15.0" fill="rgb(206,29,37)" rx="2" ry="2" />
<text  x="252.17" y="1823.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="390.0" y="1845" width="0.2" height="15.0" fill="rgb(212,14,14)" rx="2" ry="2" />
<text  x="392.98" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (37 samples, 0.62%)</title><rect x="187.9" y="2021" width="7.3" height="15.0" fill="rgb(248,79,22)" rx="2" ry="2" />
<text  x="190.89" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="200.2" y="1909" width="0.2" height="15.0" fill="rgb(251,66,14)" rx="2" ry="2" />
<text  x="203.19" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="444.9" y="2005" width="0.4" height="15.0" fill="rgb(235,170,36)" rx="2" ry="2" />
<text  x="447.91" y="2015.5" ></text>
</g>
<g >
<title>netdev_pick_tx (2 samples, 0.03%)</title><rect x="277.7" y="1701" width="0.4" height="15.0" fill="rgb(241,176,5)" rx="2" ry="2" />
<text  x="280.73" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="206.9" y="2021" width="0.2" height="15.0" fill="rgb(238,86,21)" rx="2" ry="2" />
<text  x="209.93" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1925" width="45.0" height="15.0" fill="rgb(211,3,32)" rx="2" ry="2" />
<text  x="63.77" y="1935.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (6 samples, 0.10%)</title><rect x="719.6" y="1861" width="1.2" height="15.0" fill="rgb(230,135,44)" rx="2" ry="2" />
<text  x="722.59" y="1871.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1049.4" y="1877" width="0.2" height="15.0" fill="rgb(217,92,1)" rx="2" ry="2" />
<text  x="1052.39" y="1887.5" ></text>
</g>
<g >
<title>ep_send_events_proc (33 samples, 0.55%)</title><rect x="301.7" y="1941" width="6.6" height="15.0" fill="rgb(250,162,14)" rx="2" ry="2" />
<text  x="304.73" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (14 samples, 0.24%)</title><rect x="689.2" y="1925" width="2.8" height="15.0" fill="rgb(234,181,51)" rx="2" ry="2" />
<text  x="692.24" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="456.2" y="2005" width="1.2" height="15.0" fill="rgb(216,181,24)" rx="2" ry="2" />
<text  x="459.22" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1030.7" y="1925" width="0.2" height="15.0" fill="rgb(251,25,16)" rx="2" ry="2" />
<text  x="1033.75" y="1935.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="245.0" y="1765" width="0.2" height="15.0" fill="rgb(226,122,23)" rx="2" ry="2" />
<text  x="248.01" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="773" width="45.0" height="15.0" fill="rgb(234,214,4)" rx="2" ry="2" />
<text  x="63.77" y="783.5" >[unk..</text>
</g>
<g >
<title>__memchr_avx2 (3 samples, 0.05%)</title><rect x="297.8" y="2037" width="0.6" height="15.0" fill="rgb(254,35,39)" rx="2" ry="2" />
<text  x="300.76" y="2047.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="237.9" y="1861" width="0.2" height="15.0" fill="rgb(226,213,21)" rx="2" ry="2" />
<text  x="240.87" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="373.1" y="2005" width="0.2" height="15.0" fill="rgb(234,220,2)" rx="2" ry="2" />
<text  x="376.12" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1022.0" y="1893" width="0.2" height="15.0" fill="rgb(248,113,25)" rx="2" ry="2" />
<text  x="1025.02" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="193.4" y="1973" width="0.6" height="15.0" fill="rgb(216,176,12)" rx="2" ry="2" />
<text  x="196.45" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (34 samples, 0.57%)</title><rect x="218.0" y="2037" width="6.8" height="15.0" fill="rgb(245,120,10)" rx="2" ry="2" />
<text  x="221.04" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1509" width="45.0" height="15.0" fill="rgb(250,88,34)" rx="2" ry="2" />
<text  x="63.77" y="1519.5" >[unk..</text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (12 samples, 0.20%)</title><rect x="280.7" y="1653" width="2.4" height="15.0" fill="rgb(206,196,37)" rx="2" ry="2" />
<text  x="283.71" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1098.6" y="2005" width="0.4" height="15.0" fill="rgb(225,48,43)" rx="2" ry="2" />
<text  x="1101.57" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1049.4" y="1813" width="0.2" height="15.0" fill="rgb(226,119,3)" rx="2" ry="2" />
<text  x="1052.39" y="1823.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="633.3" y="1989" width="0.6" height="15.0" fill="rgb(235,99,52)" rx="2" ry="2" />
<text  x="636.32" y="1999.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="237.9" y="1877" width="0.2" height="15.0" fill="rgb(241,97,6)" rx="2" ry="2" />
<text  x="240.87" y="1887.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="255.9" y="1797" width="0.4" height="15.0" fill="rgb(221,79,28)" rx="2" ry="2" />
<text  x="258.92" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="1177.1" y="2037" width="3.2" height="15.0" fill="rgb(252,69,38)" rx="2" ry="2" />
<text  x="1180.11" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="507.8" y="2005" width="0.8" height="15.0" fill="rgb(246,98,39)" rx="2" ry="2" />
<text  x="510.78" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="609.9" y="1957" width="0.2" height="15.0" fill="rgb(207,81,31)" rx="2" ry="2" />
<text  x="612.92" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="11.4" y="2021" width="1.0" height="15.0" fill="rgb(208,224,11)" rx="2" ry="2" />
<text  x="14.39" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="731.3" y="1909" width="0.2" height="15.0" fill="rgb(244,48,15)" rx="2" ry="2" />
<text  x="734.29" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="182.7" y="2021" width="0.2" height="15.0" fill="rgb(249,158,25)" rx="2" ry="2" />
<text  x="185.74" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="367.0" y="1877" width="0.2" height="15.0" fill="rgb(238,178,28)" rx="2" ry="2" />
<text  x="369.97" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (2 samples, 0.03%)</title><rect x="346.5" y="1957" width="0.4" height="15.0" fill="rgb(205,83,1)" rx="2" ry="2" />
<text  x="349.55" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="371.9" y="1893" width="0.2" height="15.0" fill="rgb(251,97,40)" rx="2" ry="2" />
<text  x="374.93" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (9 samples, 0.15%)</title><rect x="641.3" y="2037" width="1.7" height="15.0" fill="rgb(208,207,42)" rx="2" ry="2" />
<text  x="644.25" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="102.6" y="37" width="0.2" height="15.0" fill="rgb(237,12,53)" rx="2" ry="2" />
<text  x="105.62" y="47.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="1022.0" y="1925" width="0.2" height="15.0" fill="rgb(241,85,11)" rx="2" ry="2" />
<text  x="1025.02" y="1935.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="589.3" y="2005" width="0.2" height="15.0" fill="rgb(227,174,36)" rx="2" ry="2" />
<text  x="592.29" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="158.7" y="1925" width="0.4" height="15.0" fill="rgb(253,67,36)" rx="2" ry="2" />
<text  x="161.74" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="197.6" y="1925" width="0.8" height="15.0" fill="rgb(235,202,26)" rx="2" ry="2" />
<text  x="200.61" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="101.4" y="37" width="0.2" height="15.0" fill="rgb(222,130,1)" rx="2" ry="2" />
<text  x="104.43" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (17 samples, 0.29%)</title><rect x="92.7" y="37" width="3.4" height="15.0" fill="rgb(245,210,0)" rx="2" ry="2" />
<text  x="95.70" y="47.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="229" width="45.0" height="15.0" fill="rgb(205,2,18)" rx="2" ry="2" />
<text  x="63.77" y="239.5" >[unk..</text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="60.8" y="133" width="44.8" height="15.0" fill="rgb(229,209,12)" rx="2" ry="2" />
<text  x="63.77" y="143.5" >[unk..</text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="475.3" y="1861" width="0.2" height="15.0" fill="rgb(211,152,42)" rx="2" ry="2" />
<text  x="478.26" y="1871.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (40 samples, 0.67%)</title><rect x="238.1" y="1877" width="7.9" height="15.0" fill="rgb(242,146,43)" rx="2" ry="2" />
<text  x="241.07" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (224 samples, 3.76%)</title><rect x="687.1" y="1941" width="44.4" height="15.0" fill="rgb(237,163,33)" rx="2" ry="2" />
<text  x="690.06" y="1951.5" >foll..</text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="986.5" y="1845" width="0.2" height="15.0" fill="rgb(242,165,48)" rx="2" ry="2" />
<text  x="989.52" y="1855.5" ></text>
</g>
<g >
<title>vfprintf (7 samples, 0.12%)</title><rect x="1085.7" y="2037" width="1.4" height="15.0" fill="rgb(221,54,11)" rx="2" ry="2" />
<text  x="1088.68" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (1 samples, 0.02%)</title><rect x="20.9" y="1973" width="0.2" height="15.0" fill="rgb(225,191,22)" rx="2" ry="2" />
<text  x="23.91" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="843.5" y="1973" width="0.2" height="15.0" fill="rgb(226,170,17)" rx="2" ry="2" />
<text  x="846.54" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (15 samples, 0.25%)</title><rect x="293.6" y="1925" width="3.0" height="15.0" fill="rgb(235,140,11)" rx="2" ry="2" />
<text  x="296.60" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (21 samples, 0.35%)</title><rect x="813.6" y="1989" width="4.2" height="15.0" fill="rgb(237,225,10)" rx="2" ry="2" />
<text  x="816.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (23 samples, 0.39%)</title><rect x="171.6" y="2005" width="4.6" height="15.0" fill="rgb(217,148,15)" rx="2" ry="2" />
<text  x="174.63" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="890.5" y="1989" width="0.2" height="15.0" fill="rgb(205,169,17)" rx="2" ry="2" />
<text  x="893.54" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="199.4" y="1893" width="0.2" height="15.0" fill="rgb(253,72,32)" rx="2" ry="2" />
<text  x="202.39" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="217.6" y="2021" width="0.4" height="15.0" fill="rgb(227,67,3)" rx="2" ry="2" />
<text  x="220.64" y="2031.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (27 samples, 0.45%)</title><rect x="1075.8" y="1925" width="5.3" height="15.0" fill="rgb(226,171,6)" rx="2" ry="2" />
<text  x="1078.77" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="319.0" y="1941" width="0.2" height="15.0" fill="rgb(232,102,38)" rx="2" ry="2" />
<text  x="321.98" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="325" width="45.0" height="15.0" fill="rgb(210,101,23)" rx="2" ry="2" />
<text  x="63.77" y="335.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (3 samples, 0.05%)</title><rect x="951.8" y="1909" width="0.6" height="15.0" fill="rgb(212,35,35)" rx="2" ry="2" />
<text  x="954.82" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (57 samples, 0.96%)</title><rect x="144.3" y="1941" width="11.3" height="15.0" fill="rgb(237,26,49)" rx="2" ry="2" />
<text  x="147.26" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="965" width="45.0" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="63.77" y="975.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="676.9" y="1925" width="0.4" height="15.0" fill="rgb(225,101,12)" rx="2" ry="2" />
<text  x="679.95" y="1935.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="349.5" y="1989" width="0.2" height="15.0" fill="rgb(244,12,8)" rx="2" ry="2" />
<text  x="352.52" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="245.0" y="1797" width="0.2" height="15.0" fill="rgb(230,23,9)" rx="2" ry="2" />
<text  x="248.01" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (5 samples, 0.08%)</title><rect x="479.2" y="1909" width="1.0" height="15.0" fill="rgb(242,126,19)" rx="2" ry="2" />
<text  x="482.22" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="21.7" y="1957" width="0.2" height="15.0" fill="rgb(252,100,28)" rx="2" ry="2" />
<text  x="24.70" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="602.4" y="1989" width="0.2" height="15.0" fill="rgb(242,18,18)" rx="2" ry="2" />
<text  x="605.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1797" width="45.0" height="15.0" fill="rgb(253,134,34)" rx="2" ry="2" />
<text  x="63.77" y="1807.5" >[unk..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(240,49,35)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (75 samples, 1.26%)</title><rect x="865.7" y="2037" width="14.9" height="15.0" fill="rgb(242,207,11)" rx="2" ry="2" />
<text  x="868.75" y="2047.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="986.5" y="1829" width="0.2" height="15.0" fill="rgb(206,41,9)" rx="2" ry="2" />
<text  x="989.52" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="490.7" y="1957" width="0.4" height="15.0" fill="rgb(247,109,28)" rx="2" ry="2" />
<text  x="493.73" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="930.6" y="1957" width="0.4" height="15.0" fill="rgb(226,5,37)" rx="2" ry="2" />
<text  x="933.60" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (88 samples, 1.48%)</title><rect x="259.5" y="1509" width="17.4" height="15.0" fill="rgb(244,140,21)" rx="2" ry="2" />
<text  x="262.49" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="20.7" y="1957" width="0.2" height="15.0" fill="rgb(250,145,38)" rx="2" ry="2" />
<text  x="23.71" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="323.5" y="1941" width="0.8" height="15.0" fill="rgb(238,205,44)" rx="2" ry="2" />
<text  x="326.54" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="612.5" y="1989" width="0.6" height="15.0" fill="rgb(224,94,0)" rx="2" ry="2" />
<text  x="615.49" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="979.6" y="1893" width="1.0" height="15.0" fill="rgb(206,68,41)" rx="2" ry="2" />
<text  x="982.58" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1022.0" y="1845" width="0.2" height="15.0" fill="rgb(210,132,37)" rx="2" ry="2" />
<text  x="1025.02" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (379 samples, 6.37%)</title><rect x="665.2" y="1989" width="75.2" height="15.0" fill="rgb(223,50,29)" rx="2" ry="2" />
<text  x="668.25" y="1999.5" >folly::f..</text>
</g>
<g >
<title>[unknown] (37 samples, 0.62%)</title><rect x="365.4" y="1989" width="7.3" height="15.0" fill="rgb(246,102,40)" rx="2" ry="2" />
<text  x="368.39" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="608.7" y="1973" width="1.0" height="15.0" fill="rgb(240,27,43)" rx="2" ry="2" />
<text  x="611.73" y="1983.5" ></text>
</g>
<g >
<title>__free_slab (2 samples, 0.03%)</title><rect x="272.4" y="1317" width="0.4" height="15.0" fill="rgb(244,77,19)" rx="2" ry="2" />
<text  x="275.38" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1061" width="45.0" height="15.0" fill="rgb(239,163,42)" rx="2" ry="2" />
<text  x="63.77" y="1071.5" >[unk..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="594.4" y="1813" width="0.2" height="15.0" fill="rgb(247,211,35)" rx="2" ry="2" />
<text  x="597.45" y="1823.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (8 samples, 0.13%)</title><rect x="248.6" y="1845" width="1.6" height="15.0" fill="rgb(219,165,20)" rx="2" ry="2" />
<text  x="251.58" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="282.7" y="1637" width="0.2" height="15.0" fill="rgb(234,163,35)" rx="2" ry="2" />
<text  x="285.69" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="1141.4" y="1957" width="0.6" height="15.0" fill="rgb(210,20,29)" rx="2" ry="2" />
<text  x="1144.41" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (48 samples, 0.81%)</title><rect x="560.9" y="1989" width="9.6" height="15.0" fill="rgb(210,157,29)" rx="2" ry="2" />
<text  x="563.93" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (12 samples, 0.20%)</title><rect x="831.2" y="2005" width="2.4" height="15.0" fill="rgb(221,14,1)" rx="2" ry="2" />
<text  x="834.24" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="292.0" y="1893" width="1.4" height="15.0" fill="rgb(237,32,10)" rx="2" ry="2" />
<text  x="295.01" y="1903.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1149.1" y="2005" width="0.2" height="15.0" fill="rgb(205,150,13)" rx="2" ry="2" />
<text  x="1152.15" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (8 samples, 0.13%)</title><rect x="347.9" y="1989" width="1.6" height="15.0" fill="rgb(219,98,23)" rx="2" ry="2" />
<text  x="350.94" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (1 samples, 0.02%)</title><rect x="892.1" y="2037" width="0.2" height="15.0" fill="rgb(230,74,37)" rx="2" ry="2" />
<text  x="895.12" y="2047.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1043.6" y="1941" width="0.2" height="15.0" fill="rgb(219,104,40)" rx="2" ry="2" />
<text  x="1046.64" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (10 samples, 0.17%)</title><rect x="627.6" y="1989" width="1.9" height="15.0" fill="rgb(210,218,14)" rx="2" ry="2" />
<text  x="630.57" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1893" width="45.0" height="15.0" fill="rgb(241,54,37)" rx="2" ry="2" />
<text  x="63.77" y="1903.5" >[unk..</text>
</g>
<g >
<title>inet_sendmsg (296 samples, 4.97%)</title><rect x="233.3" y="1925" width="58.7" height="15.0" fill="rgb(243,57,29)" rx="2" ry="2" />
<text  x="236.31" y="1935.5" >inet_s..</text>
</g>
<g >
<title>folly::EventBase::runInLoop (26 samples, 0.44%)</title><rect x="190.1" y="2005" width="5.1" height="15.0" fill="rgb(250,97,53)" rx="2" ry="2" />
<text  x="193.07" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="15.0" y="1973" width="0.2" height="15.0" fill="rgb(207,130,7)" rx="2" ry="2" />
<text  x="17.96" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="81.8" y="37" width="0.2" height="15.0" fill="rgb(232,215,46)" rx="2" ry="2" />
<text  x="84.79" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="535.7" y="1973" width="0.2" height="15.0" fill="rgb(239,161,47)" rx="2" ry="2" />
<text  x="538.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (5 samples, 0.08%)</title><rect x="648.6" y="2037" width="1.0" height="15.0" fill="rgb(221,185,0)" rx="2" ry="2" />
<text  x="651.59" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="632.9" y="1973" width="0.4" height="15.0" fill="rgb(231,0,28)" rx="2" ry="2" />
<text  x="635.92" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1099.6" y="1973" width="0.2" height="15.0" fill="rgb(246,143,34)" rx="2" ry="2" />
<text  x="1102.57" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="358.2" y="1957" width="0.4" height="15.0" fill="rgb(237,177,35)" rx="2" ry="2" />
<text  x="361.25" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="1141.4" y="1941" width="0.6" height="15.0" fill="rgb(226,202,33)" rx="2" ry="2" />
<text  x="1144.41" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (5 samples, 0.08%)</title><rect x="731.7" y="1941" width="1.0" height="15.0" fill="rgb(232,182,27)" rx="2" ry="2" />
<text  x="734.68" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="372.1" y="1909" width="0.2" height="15.0" fill="rgb(221,209,43)" rx="2" ry="2" />
<text  x="375.13" y="1919.5" ></text>
</g>
<g >
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="272.8" y="1429" width="0.6" height="15.0" fill="rgb(214,64,29)" rx="2" ry="2" />
<text  x="275.77" y="1439.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="255.1" y="1813" width="0.2" height="15.0" fill="rgb(208,188,20)" rx="2" ry="2" />
<text  x="258.12" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (2 samples, 0.03%)</title><rect x="880.6" y="2037" width="0.4" height="15.0" fill="rgb(229,140,36)" rx="2" ry="2" />
<text  x="883.62" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="515.3" y="2005" width="0.2" height="15.0" fill="rgb(206,222,37)" rx="2" ry="2" />
<text  x="518.32" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="102.8" y="53" width="0.6" height="15.0" fill="rgb(206,156,32)" rx="2" ry="2" />
<text  x="105.81" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="827.3" y="2005" width="0.2" height="15.0" fill="rgb(246,29,0)" rx="2" ry="2" />
<text  x="830.27" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="330.7" y="1957" width="0.2" height="15.0" fill="rgb(207,188,3)" rx="2" ry="2" />
<text  x="333.68" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="649.6" y="2005" width="1.2" height="15.0" fill="rgb(249,167,8)" rx="2" ry="2" />
<text  x="652.58" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="105.0" y="53" width="0.2" height="15.0" fill="rgb(208,169,0)" rx="2" ry="2" />
<text  x="107.99" y="63.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="740.0" y="1957" width="0.2" height="15.0" fill="rgb(252,183,13)" rx="2" ry="2" />
<text  x="743.01" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="665.0" y="1957" width="0.2" height="15.0" fill="rgb(233,86,34)" rx="2" ry="2" />
<text  x="668.05" y="1967.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(241,68,37)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="628.8" y="1973" width="0.2" height="15.0" fill="rgb(236,24,9)" rx="2" ry="2" />
<text  x="631.76" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="201.4" y="1877" width="0.2" height="15.0" fill="rgb(245,183,28)" rx="2" ry="2" />
<text  x="204.38" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="101.4" y="53" width="0.8" height="15.0" fill="rgb(251,54,27)" rx="2" ry="2" />
<text  x="104.43" y="63.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1477" width="45.0" height="15.0" fill="rgb(241,135,54)" rx="2" ry="2" />
<text  x="63.77" y="1487.5" >[unk..</text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="246.2" y="1653" width="0.2" height="15.0" fill="rgb(237,60,35)" rx="2" ry="2" />
<text  x="249.20" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="986.5" y="1861" width="0.2" height="15.0" fill="rgb(234,42,37)" rx="2" ry="2" />
<text  x="989.52" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (28 samples, 0.47%)</title><rect x="564.5" y="1941" width="5.6" height="15.0" fill="rgb(237,1,49)" rx="2" ry="2" />
<text  x="567.50" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (4 samples, 0.07%)</title><rect x="726.9" y="1893" width="0.8" height="15.0" fill="rgb(213,179,2)" rx="2" ry="2" />
<text  x="729.92" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="837" width="45.0" height="15.0" fill="rgb(223,83,52)" rx="2" ry="2" />
<text  x="63.77" y="847.5" >[unk..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="922.9" y="1973" width="0.2" height="15.0" fill="rgb(207,143,5)" rx="2" ry="2" />
<text  x="925.86" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_mss (23 samples, 0.39%)</title><rect x="287.3" y="1877" width="4.5" height="15.0" fill="rgb(244,139,25)" rx="2" ry="2" />
<text  x="290.25" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="649.8" y="1989" width="0.2" height="15.0" fill="rgb(217,78,17)" rx="2" ry="2" />
<text  x="652.78" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="332.1" y="1909" width="0.4" height="15.0" fill="rgb(234,222,53)" rx="2" ry="2" />
<text  x="335.07" y="1919.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1075.0" y="1797" width="0.4" height="15.0" fill="rgb(245,200,45)" rx="2" ry="2" />
<text  x="1077.97" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="482.0" y="1909" width="0.2" height="15.0" fill="rgb(216,26,18)" rx="2" ry="2" />
<text  x="485.00" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="367.2" y="1893" width="0.2" height="15.0" fill="rgb(249,93,7)" rx="2" ry="2" />
<text  x="370.17" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="320.0" y="1957" width="0.6" height="15.0" fill="rgb(245,89,6)" rx="2" ry="2" />
<text  x="322.97" y="1967.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(238,74,7)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.4" y="1957" width="0.2" height="15.0" fill="rgb(214,124,53)" rx="2" ry="2" />
<text  x="630.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="103.4" y="69" width="1.8" height="15.0" fill="rgb(217,25,46)" rx="2" ry="2" />
<text  x="106.41" y="79.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="355.7" y="1941" width="0.8" height="15.0" fill="rgb(244,82,39)" rx="2" ry="2" />
<text  x="358.67" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (3 samples, 0.05%)</title><rect x="1171.2" y="2053" width="0.6" height="15.0" fill="rgb(243,58,41)" rx="2" ry="2" />
<text  x="1174.16" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (9 samples, 0.15%)</title><rect x="593.3" y="1989" width="1.7" height="15.0" fill="rgb(220,63,54)" rx="2" ry="2" />
<text  x="596.26" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="320.6" y="1989" width="0.8" height="15.0" fill="rgb(232,61,20)" rx="2" ry="2" />
<text  x="323.57" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="98.3" y="37" width="0.2" height="15.0" fill="rgb(243,142,23)" rx="2" ry="2" />
<text  x="101.25" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (8 samples, 0.13%)</title><rect x="103.4" y="53" width="1.6" height="15.0" fill="rgb(250,52,31)" rx="2" ry="2" />
<text  x="106.41" y="63.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="351.1" y="1989" width="0.2" height="15.0" fill="rgb(229,74,36)" rx="2" ry="2" />
<text  x="354.11" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="283.3" y="1685" width="0.2" height="15.0" fill="rgb(214,179,52)" rx="2" ry="2" />
<text  x="286.28" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="385.4" y="1941" width="0.2" height="15.0" fill="rgb(222,198,3)" rx="2" ry="2" />
<text  x="388.42" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="1174.3" y="2053" width="1.4" height="15.0" fill="rgb(218,59,28)" rx="2" ry="2" />
<text  x="1177.33" y="2063.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (7 samples, 0.12%)</title><rect x="947.3" y="1973" width="1.3" height="15.0" fill="rgb(217,114,45)" rx="2" ry="2" />
<text  x="950.26" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1429" width="45.0" height="15.0" fill="rgb(213,175,48)" rx="2" ry="2" />
<text  x="63.77" y="1439.5" >[unk..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="427.7" y="1957" width="0.2" height="15.0" fill="rgb(205,222,10)" rx="2" ry="2" />
<text  x="430.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="535.9" y="1989" width="0.2" height="15.0" fill="rgb(235,89,3)" rx="2" ry="2" />
<text  x="538.94" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="124.0" y="1941" width="0.2" height="15.0" fill="rgb(227,21,28)" rx="2" ry="2" />
<text  x="127.03" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="907.0" y="2005" width="0.6" height="15.0" fill="rgb(222,197,6)" rx="2" ry="2" />
<text  x="910.00" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (5 samples, 0.08%)</title><rect x="285.9" y="1797" width="1.0" height="15.0" fill="rgb(246,178,39)" rx="2" ry="2" />
<text  x="288.86" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (4 samples, 0.07%)</title><rect x="375.7" y="2005" width="0.8" height="15.0" fill="rgb(218,139,45)" rx="2" ry="2" />
<text  x="378.70" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="378.1" y="1973" width="0.2" height="15.0" fill="rgb(239,122,8)" rx="2" ry="2" />
<text  x="381.08" y="1983.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="982.6" y="1909" width="1.7" height="15.0" fill="rgb(212,186,34)" rx="2" ry="2" />
<text  x="985.56" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="453" width="45.0" height="15.0" fill="rgb(238,11,6)" rx="2" ry="2" />
<text  x="63.77" y="463.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="535.5" y="1973" width="0.2" height="15.0" fill="rgb(205,114,15)" rx="2" ry="2" />
<text  x="538.55" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (14 samples, 0.24%)</title><rect x="817.8" y="2005" width="2.7" height="15.0" fill="rgb(210,196,16)" rx="2" ry="2" />
<text  x="820.75" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="577.4" y="1989" width="0.4" height="15.0" fill="rgb(209,76,18)" rx="2" ry="2" />
<text  x="580.39" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="833.6" y="2005" width="0.4" height="15.0" fill="rgb(241,152,44)" rx="2" ry="2" />
<text  x="836.62" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.18%)</title><rect x="122.1" y="1973" width="2.1" height="15.0" fill="rgb(214,168,23)" rx="2" ry="2" />
<text  x="125.05" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1030.7" y="1941" width="0.2" height="15.0" fill="rgb(236,110,33)" rx="2" ry="2" />
<text  x="1033.75" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="520.3" y="2021" width="0.6" height="15.0" fill="rgb(236,4,24)" rx="2" ry="2" />
<text  x="523.28" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="370.7" y="1861" width="0.2" height="15.0" fill="rgb(217,0,24)" rx="2" ry="2" />
<text  x="373.74" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (43 samples, 0.72%)</title><rect x="597.4" y="2037" width="8.5" height="15.0" fill="rgb(224,22,20)" rx="2" ry="2" />
<text  x="600.42" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1126.3" y="1989" width="0.2" height="15.0" fill="rgb(214,155,3)" rx="2" ry="2" />
<text  x="1129.34" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (32 samples, 0.54%)</title><rect x="16.1" y="2005" width="6.4" height="15.0" fill="rgb(211,81,4)" rx="2" ry="2" />
<text  x="19.15" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (1 samples, 0.02%)</title><rect x="195.8" y="1973" width="0.2" height="15.0" fill="rgb(250,86,9)" rx="2" ry="2" />
<text  x="198.83" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1909" width="45.0" height="15.0" fill="rgb(250,111,12)" rx="2" ry="2" />
<text  x="63.77" y="1919.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="384.8" y="1941" width="0.2" height="15.0" fill="rgb(212,157,46)" rx="2" ry="2" />
<text  x="387.82" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="541.5" y="1829" width="0.8" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="544.50" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="559.7" y="1989" width="0.4" height="15.0" fill="rgb(237,87,35)" rx="2" ry="2" />
<text  x="562.74" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="590.7" y="1989" width="0.2" height="15.0" fill="rgb(229,148,24)" rx="2" ry="2" />
<text  x="593.68" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="389.4" y="1925" width="0.4" height="15.0" fill="rgb(237,120,16)" rx="2" ry="2" />
<text  x="392.38" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(240,220,21)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (7 samples, 0.12%)</title><rect x="972.0" y="1909" width="1.4" height="15.0" fill="rgb(234,52,31)" rx="2" ry="2" />
<text  x="975.05" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="731.3" y="1893" width="0.2" height="15.0" fill="rgb(213,52,47)" rx="2" ry="2" />
<text  x="734.29" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="876.5" y="1989" width="0.2" height="15.0" fill="rgb(238,12,32)" rx="2" ry="2" />
<text  x="879.46" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="888.4" y="2037" width="0.2" height="15.0" fill="rgb(253,162,24)" rx="2" ry="2" />
<text  x="891.36" y="2047.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (4 samples, 0.07%)</title><rect x="300.7" y="2037" width="0.8" height="15.0" fill="rgb(206,130,35)" rx="2" ry="2" />
<text  x="303.74" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (6 samples, 0.10%)</title><rect x="866.9" y="1909" width="1.2" height="15.0" fill="rgb(242,150,53)" rx="2" ry="2" />
<text  x="869.94" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="595.6" y="1957" width="0.6" height="15.0" fill="rgb(250,173,11)" rx="2" ry="2" />
<text  x="598.64" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="22.5" y="2005" width="0.2" height="15.0" fill="rgb(230,199,6)" rx="2" ry="2" />
<text  x="25.49" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="639.3" y="2005" width="0.6" height="15.0" fill="rgb(233,140,35)" rx="2" ry="2" />
<text  x="642.27" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="731.7" y="1925" width="1.0" height="15.0" fill="rgb(221,7,48)" rx="2" ry="2" />
<text  x="734.68" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (2 samples, 0.03%)</title><rect x="547.8" y="1989" width="0.4" height="15.0" fill="rgb(217,167,43)" rx="2" ry="2" />
<text  x="550.84" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (5 samples, 0.08%)</title><rect x="180.6" y="2021" width="0.9" height="15.0" fill="rgb(222,75,13)" rx="2" ry="2" />
<text  x="183.55" y="2031.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="633.9" y="2005" width="0.2" height="15.0" fill="rgb(236,221,40)" rx="2" ry="2" />
<text  x="636.91" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="629.5" y="1989" width="0.2" height="15.0" fill="rgb(215,106,54)" rx="2" ry="2" />
<text  x="632.55" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (20 samples, 0.34%)</title><rect x="968.1" y="1877" width="3.9" height="15.0" fill="rgb(251,91,41)" rx="2" ry="2" />
<text  x="971.08" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (29 samples, 0.49%)</title><rect x="196.2" y="1957" width="5.8" height="15.0" fill="rgb(238,204,45)" rx="2" ry="2" />
<text  x="199.22" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="217.4" y="2021" width="0.2" height="15.0" fill="rgb(236,99,14)" rx="2" ry="2" />
<text  x="220.44" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="333.5" y="1941" width="0.2" height="15.0" fill="rgb(214,156,7)" rx="2" ry="2" />
<text  x="336.46" y="1951.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.05%)</title><rect x="252.7" y="1877" width="0.6" height="15.0" fill="rgb(205,57,51)" rx="2" ry="2" />
<text  x="255.74" y="1887.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="427.7" y="1989" width="0.2" height="15.0" fill="rgb(208,28,32)" rx="2" ry="2" />
<text  x="430.66" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="142.3" y="1893" width="0.2" height="15.0" fill="rgb(235,173,39)" rx="2" ry="2" />
<text  x="145.28" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="859.8" y="1989" width="0.4" height="15.0" fill="rgb(218,106,4)" rx="2" ry="2" />
<text  x="862.80" y="1999.5" ></text>
</g>
<g >
<title>ep_poll (35 samples, 0.59%)</title><rect x="301.7" y="1973" width="7.0" height="15.0" fill="rgb(232,43,19)" rx="2" ry="2" />
<text  x="304.73" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (16 samples, 0.27%)</title><rect x="806.8" y="1973" width="3.2" height="15.0" fill="rgb(223,44,9)" rx="2" ry="2" />
<text  x="809.85" y="1983.5" ></text>
</g>
<g >
<title>sock_poll (30 samples, 0.50%)</title><rect x="302.3" y="1909" width="6.0" height="15.0" fill="rgb(240,55,15)" rx="2" ry="2" />
<text  x="305.32" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_xmit (168 samples, 2.82%)</title><rect x="253.7" y="1845" width="33.4" height="15.0" fill="rgb(216,169,13)" rx="2" ry="2" />
<text  x="256.73" y="1855.5" >tc..</text>
</g>
<g >
<title>std::min&lt;long&gt; (2 samples, 0.03%)</title><rect x="358.6" y="1989" width="0.4" height="15.0" fill="rgb(229,103,29)" rx="2" ry="2" />
<text  x="361.65" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="331.3" y="1925" width="1.2" height="15.0" fill="rgb(216,157,9)" rx="2" ry="2" />
<text  x="334.28" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="332.5" y="1957" width="0.2" height="15.0" fill="rgb(221,172,40)" rx="2" ry="2" />
<text  x="335.47" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="202.2" y="1957" width="0.2" height="15.0" fill="rgb(229,76,38)" rx="2" ry="2" />
<text  x="205.17" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (83 samples, 1.39%)</title><rect x="259.7" y="1477" width="16.4" height="15.0" fill="rgb(210,143,35)" rx="2" ry="2" />
<text  x="262.68" y="1487.5" ></text>
</g>
<g >
<title>__kfree_skb (12 samples, 0.20%)</title><rect x="1046.6" y="1925" width="2.4" height="15.0" fill="rgb(213,17,51)" rx="2" ry="2" />
<text  x="1049.62" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (6 samples, 0.10%)</title><rect x="98.5" y="69" width="1.1" height="15.0" fill="rgb(239,135,9)" rx="2" ry="2" />
<text  x="101.45" y="79.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="858.4" y="1957" width="0.4" height="15.0" fill="rgb(221,65,45)" rx="2" ry="2" />
<text  x="861.41" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (14 samples, 0.24%)</title><rect x="516.9" y="2021" width="2.8" height="15.0" fill="rgb(232,159,28)" rx="2" ry="2" />
<text  x="519.90" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="235.7" y="1877" width="0.2" height="15.0" fill="rgb(235,204,6)" rx="2" ry="2" />
<text  x="238.69" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (129 samples, 2.17%)</title><rect x="257.9" y="1749" width="25.6" height="15.0" fill="rgb(240,189,40)" rx="2" ry="2" />
<text  x="260.90" y="1759.5" >i..</text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="691.6" y="1893" width="0.2" height="15.0" fill="rgb(234,103,1)" rx="2" ry="2" />
<text  x="694.62" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="485" width="45.0" height="15.0" fill="rgb(247,56,19)" rx="2" ry="2" />
<text  x="63.77" y="495.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (40 samples, 0.67%)</title><rect x="649.6" y="2037" width="7.9" height="15.0" fill="rgb(231,158,28)" rx="2" ry="2" />
<text  x="652.58" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (12 samples, 0.20%)</title><rect x="987.7" y="1989" width="2.4" height="15.0" fill="rgb(206,92,5)" rx="2" ry="2" />
<text  x="990.71" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="880.8" y="1957" width="0.2" height="15.0" fill="rgb(254,224,8)" rx="2" ry="2" />
<text  x="883.82" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="625.0" y="1909" width="0.2" height="15.0" fill="rgb(215,72,29)" rx="2" ry="2" />
<text  x="627.99" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="367.2" y="1925" width="4.3" height="15.0" fill="rgb(228,66,49)" rx="2" ry="2" />
<text  x="370.17" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (46 samples, 0.77%)</title><rect x="973.4" y="1909" width="9.2" height="15.0" fill="rgb(247,218,53)" rx="2" ry="2" />
<text  x="976.44" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="101.6" y="37" width="0.6" height="15.0" fill="rgb(218,226,14)" rx="2" ry="2" />
<text  x="104.62" y="47.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(232,215,34)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="933" width="45.0" height="15.0" fill="rgb(239,47,51)" rx="2" ry="2" />
<text  x="63.77" y="943.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1,010 samples, 16.97%)</title><rect x="659.5" y="2037" width="200.3" height="15.0" fill="rgb(233,132,5)" rx="2" ry="2" />
<text  x="662.50" y="2047.5" >facebook::memcache::thrift..</text>
</g>
<g >
<title>folly::Function&lt;void  (33 samples, 0.55%)</title><rect x="881.2" y="2037" width="6.6" height="15.0" fill="rgb(209,199,50)" rx="2" ry="2" />
<text  x="884.22" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (7 samples, 0.12%)</title><rect x="1147.6" y="1989" width="1.3" height="15.0" fill="rgb(224,163,14)" rx="2" ry="2" />
<text  x="1150.56" y="1999.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="569.7" y="1845" width="0.2" height="15.0" fill="rgb(232,75,52)" rx="2" ry="2" />
<text  x="572.66" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="196.4" y="1909" width="0.2" height="15.0" fill="rgb(210,151,51)" rx="2" ry="2" />
<text  x="199.42" y="1919.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="21.9" y="1941" width="0.2" height="15.0" fill="rgb(229,10,45)" rx="2" ry="2" />
<text  x="24.90" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="142.3" y="1861" width="0.2" height="15.0" fill="rgb(223,30,30)" rx="2" ry="2" />
<text  x="145.28" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (3 samples, 0.05%)</title><rect x="182.1" y="2021" width="0.6" height="15.0" fill="rgb(212,7,33)" rx="2" ry="2" />
<text  x="185.14" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="309" width="45.0" height="15.0" fill="rgb(226,179,11)" rx="2" ry="2" />
<text  x="63.77" y="319.5" >[unk..</text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="293.4" y="1925" width="0.2" height="15.0" fill="rgb(250,201,50)" rx="2" ry="2" />
<text  x="296.40" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.71%)</title><rect x="373.7" y="2021" width="8.3" height="15.0" fill="rgb(226,214,46)" rx="2" ry="2" />
<text  x="376.72" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (4 samples, 0.07%)</title><rect x="363.8" y="1989" width="0.8" height="15.0" fill="rgb(246,135,50)" rx="2" ry="2" />
<text  x="366.80" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="10.6" y="1829" width="0.6" height="15.0" fill="rgb(224,152,1)" rx="2" ry="2" />
<text  x="13.59" y="1839.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.6" y="1845" width="0.8" height="15.0" fill="rgb(247,26,5)" rx="2" ry="2" />
<text  x="14.59" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="681.7" y="1893" width="0.4" height="15.0" fill="rgb(244,128,4)" rx="2" ry="2" />
<text  x="684.71" y="1903.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.08%)</title><rect x="1143.4" y="2021" width="1.0" height="15.0" fill="rgb(233,73,38)" rx="2" ry="2" />
<text  x="1146.39" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="864.2" y="1989" width="1.2" height="15.0" fill="rgb(213,147,15)" rx="2" ry="2" />
<text  x="867.16" y="1999.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="235.9" y="1893" width="0.2" height="15.0" fill="rgb(216,20,12)" rx="2" ry="2" />
<text  x="238.89" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="20.5" y="1957" width="0.2" height="15.0" fill="rgb(210,109,48)" rx="2" ry="2" />
<text  x="23.51" y="1967.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="569.9" y="1797" width="0.2" height="15.0" fill="rgb(239,214,1)" rx="2" ry="2" />
<text  x="572.86" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="625.0" y="1957" width="0.2" height="15.0" fill="rgb(241,14,26)" rx="2" ry="2" />
<text  x="627.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (215 samples, 3.61%)</title><rect x="60.8" y="85" width="42.6" height="15.0" fill="rgb(225,96,12)" rx="2" ry="2" />
<text  x="63.77" y="95.5" >[unk..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="858.8" y="2005" width="0.6" height="15.0" fill="rgb(207,100,10)" rx="2" ry="2" />
<text  x="861.81" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="126.2" y="1941" width="0.4" height="15.0" fill="rgb(235,64,10)" rx="2" ry="2" />
<text  x="129.22" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="866.5" y="1941" width="0.2" height="15.0" fill="rgb(228,14,21)" rx="2" ry="2" />
<text  x="869.54" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McSetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="602.2" y="2005" width="0.2" height="15.0" fill="rgb(240,199,25)" rx="2" ry="2" />
<text  x="605.18" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="880.6" y="2021" width="0.4" height="15.0" fill="rgb(220,114,37)" rx="2" ry="2" />
<text  x="883.62" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1957" width="45.0" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="63.77" y="1967.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="198.0" y="1909" width="0.4" height="15.0" fill="rgb(232,50,30)" rx="2" ry="2" />
<text  x="201.01" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_active_ (13 samples, 0.22%)</title><rect x="1087.5" y="2053" width="2.5" height="15.0" fill="rgb(224,216,19)" rx="2" ry="2" />
<text  x="1090.47" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="516.7" y="2005" width="0.2" height="15.0" fill="rgb(226,18,27)" rx="2" ry="2" />
<text  x="519.71" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="810.0" y="1973" width="0.2" height="15.0" fill="rgb(221,75,7)" rx="2" ry="2" />
<text  x="813.02" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="606.1" y="2037" width="0.2" height="15.0" fill="rgb(234,13,46)" rx="2" ry="2" />
<text  x="609.15" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (6 samples, 0.10%)</title><rect x="366.0" y="1941" width="1.2" height="15.0" fill="rgb(222,125,6)" rx="2" ry="2" />
<text  x="368.98" y="1951.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="246.0" y="1877" width="0.4" height="15.0" fill="rgb(243,161,29)" rx="2" ry="2" />
<text  x="249.00" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (40 samples, 0.67%)</title><rect x="325.5" y="1989" width="8.0" height="15.0" fill="rgb(246,131,49)" rx="2" ry="2" />
<text  x="328.53" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="866.3" y="1909" width="0.2" height="15.0" fill="rgb(222,132,2)" rx="2" ry="2" />
<text  x="869.34" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7 samples, 0.12%)</title><rect x="233.9" y="1877" width="1.4" height="15.0" fill="rgb(228,190,12)" rx="2" ry="2" />
<text  x="236.90" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (11 samples, 0.18%)</title><rect x="340.4" y="1941" width="2.2" height="15.0" fill="rgb(227,31,18)" rx="2" ry="2" />
<text  x="343.40" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="923.1" y="1989" width="0.2" height="15.0" fill="rgb(206,49,3)" rx="2" ry="2" />
<text  x="926.06" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (91 samples, 1.53%)</title><rect x="259.1" y="1685" width="18.0" height="15.0" fill="rgb(231,219,2)" rx="2" ry="2" />
<text  x="262.09" y="1695.5" ></text>
</g>
<g >
<title>tcp_current_mss (23 samples, 0.39%)</title><rect x="287.3" y="1861" width="4.5" height="15.0" fill="rgb(208,158,35)" rx="2" ry="2" />
<text  x="290.25" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (2 samples, 0.03%)</title><rect x="380.3" y="2005" width="0.4" height="15.0" fill="rgb(245,217,35)" rx="2" ry="2" />
<text  x="383.26" y="2015.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (15 samples, 0.25%)</title><rect x="241.2" y="1861" width="3.0" height="15.0" fill="rgb(232,20,12)" rx="2" ry="2" />
<text  x="244.24" y="1871.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="702.7" y="1893" width="0.2" height="15.0" fill="rgb(242,18,0)" rx="2" ry="2" />
<text  x="705.73" y="1903.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(205,85,39)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="986.5" y="1893" width="0.2" height="15.0" fill="rgb(231,23,44)" rx="2" ry="2" />
<text  x="989.52" y="1903.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="285.1" y="1781" width="0.2" height="15.0" fill="rgb(223,215,37)" rx="2" ry="2" />
<text  x="288.07" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (6 samples, 0.10%)</title><rect x="122.4" y="1941" width="1.2" height="15.0" fill="rgb(235,23,40)" rx="2" ry="2" />
<text  x="125.45" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (22 samples, 0.37%)</title><rect x="387.2" y="1941" width="4.4" height="15.0" fill="rgb(232,32,44)" rx="2" ry="2" />
<text  x="390.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="649.6" y="2021" width="7.9" height="15.0" fill="rgb(239,171,6)" rx="2" ry="2" />
<text  x="652.58" y="2031.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (7 samples, 0.12%)</title><rect x="889.3" y="2037" width="1.4" height="15.0" fill="rgb(254,53,8)" rx="2" ry="2" />
<text  x="892.35" y="2047.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1082.5" y="1877" width="0.2" height="15.0" fill="rgb(211,218,28)" rx="2" ry="2" />
<text  x="1085.51" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="658.1" y="2005" width="0.6" height="15.0" fill="rgb(224,51,10)" rx="2" ry="2" />
<text  x="661.11" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="989.5" y="1957" width="0.6" height="15.0" fill="rgb(207,28,22)" rx="2" ry="2" />
<text  x="992.50" y="1967.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (126 samples, 2.12%)</title><rect x="1049.6" y="1893" width="25.0" height="15.0" fill="rgb(209,11,1)" rx="2" ry="2" />
<text  x="1052.59" y="1903.5" >n..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1941" width="45.0" height="15.0" fill="rgb(225,63,35)" rx="2" ry="2" />
<text  x="63.77" y="1951.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="176.2" y="2005" width="0.2" height="15.0" fill="rgb(205,167,40)" rx="2" ry="2" />
<text  x="179.19" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (18 samples, 0.30%)</title><rect x="83.6" y="53" width="3.5" height="15.0" fill="rgb(232,190,23)" rx="2" ry="2" />
<text  x="86.58" y="63.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="746.6" y="1893" width="0.2" height="15.0" fill="rgb(216,91,21)" rx="2" ry="2" />
<text  x="749.56" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="601.4" y="2005" width="0.8" height="15.0" fill="rgb(238,83,18)" rx="2" ry="2" />
<text  x="604.39" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="877.8" y="1989" width="0.2" height="15.0" fill="rgb(249,92,39)" rx="2" ry="2" />
<text  x="880.85" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1461" width="45.0" height="15.0" fill="rgb(245,155,53)" rx="2" ry="2" />
<text  x="63.77" y="1471.5" >[unk..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1049.4" y="1909" width="0.2" height="15.0" fill="rgb(236,178,35)" rx="2" ry="2" />
<text  x="1052.39" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="693.4" y="1829" width="0.2" height="15.0" fill="rgb(246,8,12)" rx="2" ry="2" />
<text  x="696.41" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="867.5" y="1893" width="0.4" height="15.0" fill="rgb(247,42,10)" rx="2" ry="2" />
<text  x="870.53" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="390.0" y="1861" width="0.2" height="15.0" fill="rgb(206,71,52)" rx="2" ry="2" />
<text  x="392.98" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;&amp;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;&amp;, char const  (1 samples, 0.02%)</title><rect x="181.9" y="2021" width="0.2" height="15.0" fill="rgb(249,101,30)" rx="2" ry="2" />
<text  x="184.94" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="631.1" y="1973" width="1.8" height="15.0" fill="rgb(223,97,17)" rx="2" ry="2" />
<text  x="634.14" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="172.6" y="1957" width="0.4" height="15.0" fill="rgb(213,111,3)" rx="2" ry="2" />
<text  x="175.62" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="948.1" y="1957" width="0.5" height="15.0" fill="rgb(217,87,17)" rx="2" ry="2" />
<text  x="951.05" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="520.9" y="2021" width="0.2" height="15.0" fill="rgb(234,222,52)" rx="2" ry="2" />
<text  x="523.87" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="693" width="45.0" height="15.0" fill="rgb(225,12,46)" rx="2" ry="2" />
<text  x="63.77" y="703.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="181.5" y="2021" width="0.4" height="15.0" fill="rgb(244,202,4)" rx="2" ry="2" />
<text  x="184.55" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (4 samples, 0.07%)</title><rect x="198.8" y="1941" width="0.8" height="15.0" fill="rgb(210,27,52)" rx="2" ry="2" />
<text  x="201.80" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (73 samples, 1.23%)</title><rect x="613.1" y="1989" width="14.5" height="15.0" fill="rgb(254,173,47)" rx="2" ry="2" />
<text  x="616.09" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="475.3" y="1893" width="0.2" height="15.0" fill="rgb(242,119,47)" rx="2" ry="2" />
<text  x="478.26" y="1903.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="569.7" y="1877" width="0.2" height="15.0" fill="rgb(206,188,39)" rx="2" ry="2" />
<text  x="572.66" y="1887.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(222,189,9)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="866.7" y="1941" width="1.4" height="15.0" fill="rgb(205,167,28)" rx="2" ry="2" />
<text  x="869.74" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="371.7" y="1893" width="0.2" height="15.0" fill="rgb(210,15,40)" rx="2" ry="2" />
<text  x="374.73" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="286.7" y="1733" width="0.2" height="15.0" fill="rgb(214,32,30)" rx="2" ry="2" />
<text  x="289.66" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="348.3" y="1973" width="0.2" height="15.0" fill="rgb(221,224,39)" rx="2" ry="2" />
<text  x="351.33" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="739.0" y="1957" width="0.2" height="15.0" fill="rgb(240,138,46)" rx="2" ry="2" />
<text  x="742.02" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1099.4" y="1941" width="0.2" height="15.0" fill="rgb(218,87,2)" rx="2" ry="2" />
<text  x="1102.37" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (16 samples, 0.27%)</title><rect x="1146.2" y="2021" width="3.1" height="15.0" fill="rgb(212,194,17)" rx="2" ry="2" />
<text  x="1149.17" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="245" width="45.0" height="15.0" fill="rgb(252,59,5)" rx="2" ry="2" />
<text  x="63.77" y="255.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="819.7" y="1973" width="0.8" height="15.0" fill="rgb(218,17,53)" rx="2" ry="2" />
<text  x="822.74" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1557" width="45.0" height="15.0" fill="rgb(215,151,0)" rx="2" ry="2" />
<text  x="63.77" y="1567.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (8 samples, 0.13%)</title><rect x="546.3" y="1973" width="1.5" height="15.0" fill="rgb(228,90,50)" rx="2" ry="2" />
<text  x="549.26" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="457.2" y="1973" width="0.2" height="15.0" fill="rgb(214,96,34)" rx="2" ry="2" />
<text  x="460.21" y="1983.5" ></text>
</g>
<g >
<title>__zone_watermark_ok (1 samples, 0.02%)</title><rect x="246.6" y="1797" width="0.2" height="15.0" fill="rgb(237,203,45)" rx="2" ry="2" />
<text  x="249.59" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (12 samples, 0.20%)</title><rect x="572.6" y="1989" width="2.4" height="15.0" fill="rgb(219,158,33)" rx="2" ry="2" />
<text  x="575.63" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (35 samples, 0.59%)</title><rect x="868.9" y="1989" width="7.0" height="15.0" fill="rgb(233,85,50)" rx="2" ry="2" />
<text  x="871.92" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="371.9" y="1909" width="0.2" height="15.0" fill="rgb(207,168,32)" rx="2" ry="2" />
<text  x="374.93" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="22.1" y="1973" width="0.4" height="15.0" fill="rgb(231,173,12)" rx="2" ry="2" />
<text  x="25.10" y="1983.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="201.6" y="1733" width="0.2" height="15.0" fill="rgb(228,101,17)" rx="2" ry="2" />
<text  x="204.58" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="175.8" y="1973" width="0.4" height="15.0" fill="rgb(222,224,8)" rx="2" ry="2" />
<text  x="178.79" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="193.4" y="1957" width="0.2" height="15.0" fill="rgb(251,65,17)" rx="2" ry="2" />
<text  x="196.45" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="105.6" y="101" width="0.2" height="15.0" fill="rgb(232,228,25)" rx="2" ry="2" />
<text  x="108.59" y="111.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="665.0" y="1909" width="0.2" height="15.0" fill="rgb(241,28,33)" rx="2" ry="2" />
<text  x="668.05" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="97.7" y="37" width="0.6" height="15.0" fill="rgb(227,114,37)" rx="2" ry="2" />
<text  x="100.66" y="47.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (26 samples, 0.44%)</title><rect x="949.4" y="1941" width="5.2" height="15.0" fill="rgb(243,113,37)" rx="2" ry="2" />
<text  x="952.44" y="1951.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="60.6" y="1989" width="0.2" height="15.0" fill="rgb(226,171,12)" rx="2" ry="2" />
<text  x="63.57" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="177.4" y="2005" width="0.2" height="15.0" fill="rgb(212,54,41)" rx="2" ry="2" />
<text  x="180.38" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1099.6" y="1957" width="0.2" height="15.0" fill="rgb(210,78,15)" rx="2" ry="2" />
<text  x="1102.57" y="1967.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="625.0" y="1829" width="0.2" height="15.0" fill="rgb(213,82,3)" rx="2" ry="2" />
<text  x="627.99" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (19 samples, 0.32%)</title><rect x="182.9" y="2021" width="3.8" height="15.0" fill="rgb(209,99,31)" rx="2" ry="2" />
<text  x="185.93" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="607.9" y="1989" width="4.4" height="15.0" fill="rgb(227,147,36)" rx="2" ry="2" />
<text  x="610.93" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (7 samples, 0.12%)</title><rect x="1147.6" y="2005" width="1.3" height="15.0" fill="rgb(226,4,43)" rx="2" ry="2" />
<text  x="1150.56" y="2015.5" ></text>
</g>
<g >
<title>tcp_sendmsg (294 samples, 4.94%)</title><rect x="233.7" y="1909" width="58.3" height="15.0" fill="rgb(251,76,10)" rx="2" ry="2" />
<text  x="236.70" y="1919.5" >tcp_se..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="363.8" y="2005" width="0.8" height="15.0" fill="rgb(209,178,52)" rx="2" ry="2" />
<text  x="366.80" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="161.5" y="1941" width="1.0" height="15.0" fill="rgb(214,39,10)" rx="2" ry="2" />
<text  x="164.52" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="1075.0" y="1877" width="0.4" height="15.0" fill="rgb(254,111,33)" rx="2" ry="2" />
<text  x="1077.97" y="1887.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.10%)</title><rect x="12.4" y="1989" width="1.2" height="15.0" fill="rgb(234,33,7)" rx="2" ry="2" />
<text  x="15.38" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (8 samples, 0.13%)</title><rect x="677.3" y="1925" width="1.6" height="15.0" fill="rgb(228,23,53)" rx="2" ry="2" />
<text  x="680.34" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (34 samples, 0.57%)</title><rect x="16.1" y="2021" width="6.8" height="15.0" fill="rgb(220,185,4)" rx="2" ry="2" />
<text  x="19.15" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="569.9" y="1877" width="0.2" height="15.0" fill="rgb(249,87,44)" rx="2" ry="2" />
<text  x="572.86" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="79.0" y="37" width="0.8" height="15.0" fill="rgb(235,209,47)" rx="2" ry="2" />
<text  x="82.02" y="47.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.10%)</title><rect x="256.3" y="1781" width="1.2" height="15.0" fill="rgb(232,102,42)" rx="2" ry="2" />
<text  x="259.31" y="1791.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1080.9" y="1909" width="0.2" height="15.0" fill="rgb(227,29,7)" rx="2" ry="2" />
<text  x="1083.92" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="391.8" y="1989" width="0.4" height="15.0" fill="rgb(235,156,26)" rx="2" ry="2" />
<text  x="394.76" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1139.2" y="1957" width="0.2" height="15.0" fill="rgb(222,11,13)" rx="2" ry="2" />
<text  x="1142.23" y="1967.5" ></text>
</g>
<g >
<title>task_numa_fault (1 samples, 0.02%)</title><rect x="1144.2" y="1957" width="0.2" height="15.0" fill="rgb(237,62,14)" rx="2" ry="2" />
<text  x="1147.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="590.9" y="1989" width="0.4" height="15.0" fill="rgb(219,108,48)" rx="2" ry="2" />
<text  x="593.88" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="179.2" y="2021" width="0.4" height="15.0" fill="rgb(208,206,2)" rx="2" ry="2" />
<text  x="182.17" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (12 samples, 0.20%)</title><rect x="723.9" y="1893" width="2.4" height="15.0" fill="rgb(242,88,11)" rx="2" ry="2" />
<text  x="726.95" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1717" width="45.0" height="15.0" fill="rgb(245,71,19)" rx="2" ry="2" />
<text  x="63.77" y="1727.5" >[unk..</text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="201.6" y="1765" width="0.2" height="15.0" fill="rgb(254,15,3)" rx="2" ry="2" />
<text  x="204.58" y="1775.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="720.6" y="1845" width="0.2" height="15.0" fill="rgb(233,35,1)" rx="2" ry="2" />
<text  x="723.58" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="365.6" y="1957" width="0.2" height="15.0" fill="rgb(251,165,12)" rx="2" ry="2" />
<text  x="368.59" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="730.9" y="1925" width="0.2" height="15.0" fill="rgb(238,114,30)" rx="2" ry="2" />
<text  x="733.89" y="1935.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="387.0" y="1941" width="0.2" height="15.0" fill="rgb(249,169,36)" rx="2" ry="2" />
<text  x="390.01" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="60.8" y="149" width="44.8" height="15.0" fill="rgb(207,134,10)" rx="2" ry="2" />
<text  x="63.77" y="159.5" >[unk..</text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1157" width="45.0" height="15.0" fill="rgb(236,214,48)" rx="2" ry="2" />
<text  x="63.77" y="1167.5" >[unk..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="142.3" y="1941" width="0.2" height="15.0" fill="rgb(211,109,26)" rx="2" ry="2" />
<text  x="145.28" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (11 samples, 0.18%)</title><rect x="196.6" y="1941" width="2.2" height="15.0" fill="rgb(248,1,54)" rx="2" ry="2" />
<text  x="199.62" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="448.1" y="1877" width="0.2" height="15.0" fill="rgb(229,23,8)" rx="2" ry="2" />
<text  x="451.09" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="527.2" y="1957" width="0.2" height="15.0" fill="rgb(241,222,15)" rx="2" ry="2" />
<text  x="530.22" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (7 samples, 0.12%)</title><rect x="866.7" y="1925" width="1.4" height="15.0" fill="rgb(205,118,43)" rx="2" ry="2" />
<text  x="869.74" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="392.2" y="2005" width="0.2" height="15.0" fill="rgb(244,99,28)" rx="2" ry="2" />
<text  x="395.16" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (168 samples, 2.82%)</title><rect x="133.6" y="1973" width="33.3" height="15.0" fill="rgb(235,11,45)" rx="2" ry="2" />
<text  x="136.55" y="1983.5" >fo..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1174.1" y="2053" width="0.2" height="15.0" fill="rgb(249,77,20)" rx="2" ry="2" />
<text  x="1177.13" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (3 samples, 0.05%)</title><rect x="657.5" y="1989" width="0.6" height="15.0" fill="rgb(218,223,49)" rx="2" ry="2" />
<text  x="660.51" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (4 samples, 0.07%)</title><rect x="981.2" y="1893" width="0.8" height="15.0" fill="rgb(235,5,12)" rx="2" ry="2" />
<text  x="984.17" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="142.3" y="1925" width="0.2" height="15.0" fill="rgb(206,74,37)" rx="2" ry="2" />
<text  x="145.28" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="173.0" y="1957" width="0.2" height="15.0" fill="rgb(235,26,53)" rx="2" ry="2" />
<text  x="176.02" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="946.7" y="1957" width="0.6" height="15.0" fill="rgb(231,130,6)" rx="2" ry="2" />
<text  x="949.66" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="858.6" y="1861" width="0.2" height="15.0" fill="rgb(246,137,45)" rx="2" ry="2" />
<text  x="861.61" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="746.6" y="1877" width="0.2" height="15.0" fill="rgb(252,222,19)" rx="2" ry="2" />
<text  x="749.56" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (178 samples, 2.99%)</title><rect x="693.6" y="1909" width="35.3" height="15.0" fill="rgb(211,89,0)" rx="2" ry="2" />
<text  x="696.61" y="1919.5" >fo..</text>
</g>
<g >
<title>sockfd_lookup_light (15 samples, 0.25%)</title><rect x="293.6" y="1957" width="3.0" height="15.0" fill="rgb(208,64,0)" rx="2" ry="2" />
<text  x="296.60" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="891.9" y="2037" width="0.2" height="15.0" fill="rgb(233,197,48)" rx="2" ry="2" />
<text  x="894.93" y="2047.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="285.5" y="1813" width="0.2" height="15.0" fill="rgb(254,9,19)" rx="2" ry="2" />
<text  x="288.47" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="890.7" y="2021" width="0.2" height="15.0" fill="rgb(207,146,6)" rx="2" ry="2" />
<text  x="893.74" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="325.3" y="1941" width="0.2" height="15.0" fill="rgb(231,71,39)" rx="2" ry="2" />
<text  x="328.33" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="657.5" y="2037" width="1.2" height="15.0" fill="rgb(220,109,33)" rx="2" ry="2" />
<text  x="660.51" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (3 samples, 0.05%)</title><rect x="615.3" y="1973" width="0.6" height="15.0" fill="rgb(218,38,50)" rx="2" ry="2" />
<text  x="618.27" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1097.0" y="1973" width="0.2" height="15.0" fill="rgb(223,101,48)" rx="2" ry="2" />
<text  x="1099.99" y="1983.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="378.1" y="1893" width="0.2" height="15.0" fill="rgb(239,14,47)" rx="2" ry="2" />
<text  x="381.08" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (13 samples, 0.22%)</title><rect x="1123.8" y="1989" width="2.5" height="15.0" fill="rgb(251,172,33)" rx="2" ry="2" />
<text  x="1126.76" y="1999.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="665.0" y="1893" width="0.2" height="15.0" fill="rgb(224,169,54)" rx="2" ry="2" />
<text  x="668.05" y="1903.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="986.9" y="1989" width="0.2" height="15.0" fill="rgb(254,115,19)" rx="2" ry="2" />
<text  x="989.92" y="1999.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="246.6" y="1861" width="0.2" height="15.0" fill="rgb(221,146,50)" rx="2" ry="2" />
<text  x="249.59" y="1871.5" ></text>
</g>
<g >
<title>copyin (5 samples, 0.08%)</title><rect x="244.2" y="1861" width="1.0" height="15.0" fill="rgb(227,82,19)" rx="2" ry="2" />
<text  x="247.22" y="1871.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="194.2" y="1973" width="0.2" height="15.0" fill="rgb(234,207,48)" rx="2" ry="2" />
<text  x="197.24" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (5 samples, 0.08%)</title><rect x="571.6" y="1989" width="1.0" height="15.0" fill="rgb(209,54,2)" rx="2" ry="2" />
<text  x="574.64" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (91 samples, 1.53%)</title><rect x="259.1" y="1621" width="18.0" height="15.0" fill="rgb(235,46,13)" rx="2" ry="2" />
<text  x="262.09" y="1631.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="515.3" y="1925" width="0.2" height="15.0" fill="rgb(211,24,43)" rx="2" ry="2" />
<text  x="518.32" y="1935.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="953.8" y="1893" width="0.4" height="15.0" fill="rgb(230,136,50)" rx="2" ry="2" />
<text  x="956.80" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="246.2" y="1621" width="0.2" height="15.0" fill="rgb(234,201,36)" rx="2" ry="2" />
<text  x="249.20" y="1631.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="256.1" y="1781" width="0.2" height="15.0" fill="rgb(253,129,52)" rx="2" ry="2" />
<text  x="259.11" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.2" y="2021" width="0.2" height="15.0" fill="rgb(251,117,34)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="371.3" y="1909" width="0.2" height="15.0" fill="rgb(217,191,3)" rx="2" ry="2" />
<text  x="374.34" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="605.4" y="1973" width="0.4" height="15.0" fill="rgb(216,12,42)" rx="2" ry="2" />
<text  x="608.35" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="96.1" y="37" width="0.2" height="15.0" fill="rgb(217,183,5)" rx="2" ry="2" />
<text  x="99.07" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="483.0" y="1925" width="0.2" height="15.0" fill="rgb(237,100,13)" rx="2" ry="2" />
<text  x="485.99" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (156 samples, 2.62%)</title><rect x="254.7" y="1829" width="31.0" height="15.0" fill="rgb(238,184,8)" rx="2" ry="2" />
<text  x="257.73" y="1839.5" >__..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.5" y="1973" width="0.2" height="15.0" fill="rgb(213,116,7)" rx="2" ry="2" />
<text  x="491.54" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (316 samples, 5.31%)</title><rect x="526.8" y="2037" width="62.7" height="15.0" fill="rgb(246,90,20)" rx="2" ry="2" />
<text  x="529.82" y="2047.5" >facebo..</text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (4 samples, 0.07%)</title><rect x="361.2" y="1941" width="0.8" height="15.0" fill="rgb(214,190,36)" rx="2" ry="2" />
<text  x="364.22" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (6 samples, 0.10%)</title><rect x="183.5" y="1925" width="1.2" height="15.0" fill="rgb(217,42,43)" rx="2" ry="2" />
<text  x="186.53" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="87.9" y="37" width="0.2" height="15.0" fill="rgb(244,19,49)" rx="2" ry="2" />
<text  x="90.94" y="47.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="693.4" y="1781" width="0.2" height="15.0" fill="rgb(236,201,48)" rx="2" ry="2" />
<text  x="696.41" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="356.5" y="1957" width="0.2" height="15.0" fill="rgb(222,105,11)" rx="2" ry="2" />
<text  x="359.46" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="385.0" y="1973" width="0.8" height="15.0" fill="rgb(210,54,14)" rx="2" ry="2" />
<text  x="388.02" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="483.4" y="1925" width="2.0" height="15.0" fill="rgb(244,142,31)" rx="2" ry="2" />
<text  x="486.39" y="1935.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="229.5" y="1909" width="0.2" height="15.0" fill="rgb(250,14,42)" rx="2" ry="2" />
<text  x="232.54" y="1919.5" ></text>
</g>
<g >
<title>sys_futex (6 samples, 0.10%)</title><rect x="12.4" y="2005" width="1.2" height="15.0" fill="rgb(245,85,11)" rx="2" ry="2" />
<text  x="15.38" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="720.8" y="1861" width="0.2" height="15.0" fill="rgb(224,226,38)" rx="2" ry="2" />
<text  x="723.78" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (27 samples, 0.45%)</title><rect x="386.4" y="1989" width="5.4" height="15.0" fill="rgb(251,228,6)" rx="2" ry="2" />
<text  x="389.41" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (69 samples, 1.16%)</title><rect x="45.1" y="2037" width="13.7" height="15.0" fill="rgb(226,215,42)" rx="2" ry="2" />
<text  x="48.10" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1099.4" y="1957" width="0.2" height="15.0" fill="rgb(207,0,53)" rx="2" ry="2" />
<text  x="1102.37" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="740.2" y="1973" width="0.2" height="15.0" fill="rgb(242,18,29)" rx="2" ry="2" />
<text  x="743.21" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="909.0" y="2005" width="0.4" height="15.0" fill="rgb(213,228,17)" rx="2" ry="2" />
<text  x="911.98" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="390.0" y="1829" width="0.2" height="15.0" fill="rgb(225,155,51)" rx="2" ry="2" />
<text  x="392.98" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="658.1" y="2021" width="0.6" height="15.0" fill="rgb(248,47,8)" rx="2" ry="2" />
<text  x="661.11" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="235.7" y="1861" width="0.2" height="15.0" fill="rgb(219,134,28)" rx="2" ry="2" />
<text  x="238.69" y="1871.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="427.7" y="1925" width="0.2" height="15.0" fill="rgb(225,183,16)" rx="2" ry="2" />
<text  x="430.66" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (28 samples, 0.47%)</title><rect x="548.2" y="1989" width="5.6" height="15.0" fill="rgb(230,140,38)" rx="2" ry="2" />
<text  x="551.24" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="1096.8" y="2005" width="0.4" height="15.0" fill="rgb(247,72,23)" rx="2" ry="2" />
<text  x="1099.79" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="194.8" y="1973" width="0.4" height="15.0" fill="rgb(243,132,4)" rx="2" ry="2" />
<text  x="197.83" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (6 samples, 0.10%)</title><rect x="1170.0" y="2053" width="1.2" height="15.0" fill="rgb(246,115,17)" rx="2" ry="2" />
<text  x="1172.97" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (13 samples, 0.22%)</title><rect x="818.0" y="1989" width="2.5" height="15.0" fill="rgb(230,176,2)" rx="2" ry="2" />
<text  x="820.95" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="805" width="45.0" height="15.0" fill="rgb(221,4,17)" rx="2" ry="2" />
<text  x="63.77" y="815.5" >[unk..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (8 samples, 0.13%)</title><rect x="16.5" y="1957" width="1.6" height="15.0" fill="rgb(209,152,33)" rx="2" ry="2" />
<text  x="19.54" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (8 samples, 0.13%)</title><rect x="327.5" y="1957" width="1.6" height="15.0" fill="rgb(227,93,11)" rx="2" ry="2" />
<text  x="330.51" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.59%)</title><rect x="301.7" y="2005" width="7.0" height="15.0" fill="rgb(251,199,28)" rx="2" ry="2" />
<text  x="304.73" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="569.9" y="1829" width="0.2" height="15.0" fill="rgb(223,211,5)" rx="2" ry="2" />
<text  x="572.86" y="1839.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="299.0" y="2037" width="0.3" height="15.0" fill="rgb(210,196,45)" rx="2" ry="2" />
<text  x="301.95" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="367.2" y="1941" width="4.3" height="15.0" fill="rgb(209,132,32)" rx="2" ry="2" />
<text  x="370.17" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="338.6" y="1941" width="0.4" height="15.0" fill="rgb(206,220,0)" rx="2" ry="2" />
<text  x="341.62" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="448.1" y="1925" width="0.2" height="15.0" fill="rgb(248,9,51)" rx="2" ry="2" />
<text  x="451.09" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="229.5" y="1941" width="0.2" height="15.0" fill="rgb(205,128,14)" rx="2" ry="2" />
<text  x="232.54" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="570.3" y="1957" width="0.2" height="15.0" fill="rgb(211,107,20)" rx="2" ry="2" />
<text  x="573.25" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="693.4" y="1845" width="0.2" height="15.0" fill="rgb(220,110,11)" rx="2" ry="2" />
<text  x="696.41" y="1855.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="450.7" y="1989" width="0.2" height="15.0" fill="rgb(243,180,11)" rx="2" ry="2" />
<text  x="453.67" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1158.5" y="2053" width="0.2" height="15.0" fill="rgb(227,110,37)" rx="2" ry="2" />
<text  x="1161.47" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="486.8" y="1909" width="0.2" height="15.0" fill="rgb(242,159,19)" rx="2" ry="2" />
<text  x="489.76" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (1 samples, 0.02%)</title><rect x="15.0" y="2005" width="0.2" height="15.0" fill="rgb(223,26,46)" rx="2" ry="2" />
<text  x="17.96" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1042.8" y="1957" width="0.2" height="15.0" fill="rgb(236,113,2)" rx="2" ry="2" />
<text  x="1045.85" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="570.1" y="1941" width="0.2" height="15.0" fill="rgb(228,45,29)" rx="2" ry="2" />
<text  x="573.05" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="480.4" y="1909" width="0.4" height="15.0" fill="rgb(206,134,44)" rx="2" ry="2" />
<text  x="483.41" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="527.2" y="1973" width="0.2" height="15.0" fill="rgb(233,90,41)" rx="2" ry="2" />
<text  x="530.22" y="1983.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (6 samples, 0.10%)</title><rect x="58.8" y="2021" width="1.2" height="15.0" fill="rgb(253,175,32)" rx="2" ry="2" />
<text  x="61.79" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="342.8" y="1973" width="0.2" height="15.0" fill="rgb(235,186,16)" rx="2" ry="2" />
<text  x="345.78" y="1983.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.02%)</title><rect x="384.0" y="1813" width="0.2" height="15.0" fill="rgb(218,109,52)" rx="2" ry="2" />
<text  x="387.03" y="1823.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="246.2" y="1685" width="0.2" height="15.0" fill="rgb(221,24,7)" rx="2" ry="2" />
<text  x="249.20" y="1695.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="201.6" y="1781" width="0.2" height="15.0" fill="rgb(253,103,20)" rx="2" ry="2" />
<text  x="204.58" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1765" width="45.0" height="15.0" fill="rgb(235,14,43)" rx="2" ry="2" />
<text  x="63.77" y="1775.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (39 samples, 0.66%)</title><rect x="88.3" y="53" width="7.8" height="15.0" fill="rgb(210,119,51)" rx="2" ry="2" />
<text  x="91.34" y="63.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="526.8" y="1957" width="0.2" height="15.0" fill="rgb(244,218,18)" rx="2" ry="2" />
<text  x="529.82" y="1967.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1158.3" y="1973" width="0.2" height="15.0" fill="rgb(223,150,0)" rx="2" ry="2" />
<text  x="1161.27" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="488.5" y="1861" width="0.2" height="15.0" fill="rgb(209,84,17)" rx="2" ry="2" />
<text  x="491.54" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (161 samples, 2.71%)</title><rect x="607.9" y="2037" width="32.0" height="15.0" fill="rgb(231,172,41)" rx="2" ry="2" />
<text  x="610.93" y="2047.5" >fa..</text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="286.9" y="1813" width="0.2" height="15.0" fill="rgb(231,167,44)" rx="2" ry="2" />
<text  x="289.85" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="876.5" y="1973" width="0.2" height="15.0" fill="rgb(210,138,42)" rx="2" ry="2" />
<text  x="879.46" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="683.1" y="1925" width="0.6" height="15.0" fill="rgb(242,94,27)" rx="2" ry="2" />
<text  x="686.10" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="1013" width="45.0" height="15.0" fill="rgb(205,124,46)" rx="2" ry="2" />
<text  x="63.77" y="1023.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (47 samples, 0.79%)</title><rect x="1090.4" y="2053" width="9.4" height="15.0" fill="rgb(228,175,10)" rx="2" ry="2" />
<text  x="1093.44" y="2063.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1082.5" y="1893" width="0.2" height="15.0" fill="rgb(211,228,45)" rx="2" ry="2" />
<text  x="1085.51" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.07%)</title><rect x="371.5" y="1941" width="0.8" height="15.0" fill="rgb(238,33,3)" rx="2" ry="2" />
<text  x="374.54" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="167.5" y="1973" width="0.4" height="15.0" fill="rgb(236,136,38)" rx="2" ry="2" />
<text  x="170.47" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="162.9" y="1957" width="0.2" height="15.0" fill="rgb(239,71,3)" rx="2" ry="2" />
<text  x="165.90" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (8 samples, 0.13%)</title><rect x="248.6" y="1829" width="1.6" height="15.0" fill="rgb(231,120,24)" rx="2" ry="2" />
<text  x="251.58" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (12 samples, 0.20%)</title><rect x="865.9" y="2005" width="2.4" height="15.0" fill="rgb(221,134,28)" rx="2" ry="2" />
<text  x="868.95" y="2015.5" ></text>
</g>
<g >
<title>sys_epoll_wait (35 samples, 0.59%)</title><rect x="301.7" y="1989" width="7.0" height="15.0" fill="rgb(239,186,19)" rx="2" ry="2" />
<text  x="304.73" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="665.0" y="1925" width="0.2" height="15.0" fill="rgb(214,57,14)" rx="2" ry="2" />
<text  x="668.05" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.08%)</title><rect x="1143.4" y="2005" width="1.0" height="15.0" fill="rgb(236,205,29)" rx="2" ry="2" />
<text  x="1146.39" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="876.7" y="2005" width="0.4" height="15.0" fill="rgb(229,126,7)" rx="2" ry="2" />
<text  x="879.66" y="2015.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (21 samples, 0.35%)</title><rect x="950.4" y="1925" width="4.2" height="15.0" fill="rgb(225,94,12)" rx="2" ry="2" />
<text  x="953.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="60.8" y="997" width="45.0" height="15.0" fill="rgb(246,186,13)" rx="2" ry="2" />
<text  x="63.77" y="1007.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="76.2" y="37" width="2.8" height="15.0" fill="rgb(232,96,41)" rx="2" ry="2" />
<text  x="79.24" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="639.9" y="2037" width="0.6" height="15.0" fill="rgb(221,124,28)" rx="2" ry="2" />
<text  x="642.86" y="2047.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="259.5" y="1477" width="0.2" height="15.0" fill="rgb(205,103,23)" rx="2" ry="2" />
<text  x="262.49" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="597.4" y="1957" width="0.2" height="15.0" fill="rgb(206,165,36)" rx="2" ry="2" />
<text  x="600.42" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1099.6" y="2005" width="0.2" height="15.0" fill="rgb(214,142,5)" rx="2" ry="2" />
<text  x="1102.57" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="448.7" y="2005" width="0.2" height="15.0" fill="rgb(233,150,46)" rx="2" ry="2" />
<text  x="451.68" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1148.7" y="1861" width="0.2" height="15.0" fill="rgb(216,195,2)" rx="2" ry="2" />
<text  x="1151.75" y="1871.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="893.9" y="1973" width="0.6" height="15.0" fill="rgb(210,44,27)" rx="2" ry="2" />
<text  x="896.91" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="102.2" y="69" width="0.6" height="15.0" fill="rgb(247,59,34)" rx="2" ry="2" />
<text  x="105.22" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="191.9" y="1941" width="0.2" height="15.0" fill="rgb(231,158,42)" rx="2" ry="2" />
<text  x="194.86" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1098.4" y="1989" width="0.2" height="15.0" fill="rgb(225,213,30)" rx="2" ry="2" />
<text  x="1101.38" y="1999.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="732.7" y="1941" width="0.2" height="15.0" fill="rgb(227,200,9)" rx="2" ry="2" />
<text  x="735.68" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (35 samples, 0.59%)</title><rect x="195.8" y="2005" width="7.0" height="15.0" fill="rgb(206,112,20)" rx="2" ry="2" />
<text  x="198.83" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (25 samples, 0.42%)</title><rect x="351.9" y="1989" width="5.0" height="15.0" fill="rgb(211,175,53)" rx="2" ry="2" />
<text  x="354.90" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="291.4" y="1845" width="0.4" height="15.0" fill="rgb(229,142,42)" rx="2" ry="2" />
<text  x="294.42" y="1855.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="987.3" y="1989" width="0.2" height="15.0" fill="rgb(235,17,14)" rx="2" ry="2" />
<text  x="990.32" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="246.2" y="1589" width="0.2" height="15.0" fill="rgb(217,0,48)" rx="2" ry="2" />
<text  x="249.20" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="371.7" y="1909" width="0.2" height="15.0" fill="rgb(250,202,52)" rx="2" ry="2" />
<text  x="374.73" y="1919.5" ></text>
</g>
<g >
<title>setup_object_debug.isra.60 (1 samples, 0.02%)</title><rect x="250.6" y="1797" width="0.2" height="15.0" fill="rgb(228,36,45)" rx="2" ry="2" />
<text  x="253.56" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="105.4" y="85" width="0.2" height="15.0" fill="rgb(232,140,50)" rx="2" ry="2" />
<text  x="108.39" y="95.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="569.9" y="1813" width="0.2" height="15.0" fill="rgb(224,170,21)" rx="2" ry="2" />
<text  x="572.86" y="1823.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="250.4" y="1813" width="0.4" height="15.0" fill="rgb(239,142,44)" rx="2" ry="2" />
<text  x="253.36" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="99.6" y="69" width="2.6" height="15.0" fill="rgb(213,55,21)" rx="2" ry="2" />
<text  x="102.64" y="79.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="105.6" y="133" width="0.2" height="15.0" fill="rgb(216,120,33)" rx="2" ry="2" />
<text  x="108.59" y="143.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1121.4" y="2005" width="0.2" height="15.0" fill="rgb(212,112,49)" rx="2" ry="2" />
<text  x="1124.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="88.3" y="37" width="0.2" height="15.0" fill="rgb(254,189,34)" rx="2" ry="2" />
<text  x="91.34" y="47.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1077.6" y="1893" width="0.3" height="15.0" fill="rgb(242,18,24)" rx="2" ry="2" />
<text  x="1080.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (275 samples, 4.62%)</title><rect x="402.9" y="2037" width="54.5" height="15.0" fill="rgb(243,191,40)" rx="2" ry="2" />
<text  x="405.87" y="2047.5" >faceb..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.7" y="1973" width="0.2" height="15.0" fill="rgb(227,160,40)" rx="2" ry="2" />
<text  x="1151.75" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="594.4" y="1861" width="0.2" height="15.0" fill="rgb(249,98,2)" rx="2" ry="2" />
<text  x="597.45" y="1871.5" ></text>
</g>
<g >
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="272.2" y="1365" width="0.6" height="15.0" fill="rgb(249,47,1)" rx="2" ry="2" />
<text  x="275.18" y="1375.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="102.8" y="69" width="0.6" height="15.0" fill="rgb(247,25,45)" rx="2" ry="2" />
<text  x="105.81" y="79.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="357.5" y="1989" width="0.2" height="15.0" fill="rgb(220,218,29)" rx="2" ry="2" />
<text  x="360.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="445.3" y="2005" width="3.0" height="15.0" fill="rgb(248,93,31)" rx="2" ry="2" />
<text  x="448.31" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (6 samples, 0.10%)</title><rect x="310.9" y="2005" width="1.1" height="15.0" fill="rgb(226,79,53)" rx="2" ry="2" />
<text  x="313.85" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (3 samples, 0.05%)</title><rect x="344.4" y="1941" width="0.6" height="15.0" fill="rgb(253,185,45)" rx="2" ry="2" />
<text  x="347.37" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="1034.3" y="1973" width="0.2" height="15.0" fill="rgb(240,25,2)" rx="2" ry="2" />
<text  x="1037.32" y="1983.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1085.1" y="2037" width="0.2" height="15.0" fill="rgb(246,130,17)" rx="2" ry="2" />
<text  x="1088.09" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="516.1" y="2005" width="0.6" height="15.0" fill="rgb(237,23,15)" rx="2" ry="2" />
<text  x="519.11" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="361.8" y="1925" width="0.2" height="15.0" fill="rgb(230,9,23)" rx="2" ry="2" />
<text  x="364.82" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="1083.7" y="1941" width="0.8" height="15.0" fill="rgb(235,129,7)" rx="2" ry="2" />
<text  x="1086.70" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1148.7" y="1925" width="0.2" height="15.0" fill="rgb(252,34,19)" rx="2" ry="2" />
<text  x="1151.75" y="1935.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="378.1" y="1877" width="0.2" height="15.0" fill="rgb(240,56,46)" rx="2" ry="2" />
<text  x="381.08" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="629.7" y="1989" width="1.4" height="15.0" fill="rgb(239,145,3)" rx="2" ry="2" />
<text  x="632.75" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1074.6" y="1909" width="0.2" height="15.0" fill="rgb(250,17,45)" rx="2" ry="2" />
<text  x="1077.58" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (4 samples, 0.07%)</title><rect x="190.7" y="1973" width="0.8" height="15.0" fill="rgb(251,48,16)" rx="2" ry="2" />
<text  x="193.67" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="364.4" y="1941" width="0.2" height="15.0" fill="rgb(233,226,23)" rx="2" ry="2" />
<text  x="367.40" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (53 samples, 0.89%)</title><rect x="382.0" y="2037" width="10.6" height="15.0" fill="rgb(228,94,32)" rx="2" ry="2" />
<text  x="385.05" y="2047.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(246,168,41)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.02%)</title><rect x="693.4" y="1749" width="0.2" height="15.0" fill="rgb(231,196,14)" rx="2" ry="2" />
<text  x="696.41" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="584.9" y="1941" width="0.4" height="15.0" fill="rgb(242,40,25)" rx="2" ry="2" />
<text  x="587.93" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="977.8" y="1877" width="0.4" height="15.0" fill="rgb(232,222,20)" rx="2" ry="2" />
<text  x="980.80" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="190.5" y="1989" width="1.2" height="15.0" fill="rgb(232,48,13)" rx="2" ry="2" />
<text  x="193.47" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (27 samples, 0.45%)</title><rect x="278.1" y="1701" width="5.4" height="15.0" fill="rgb(213,35,50)" rx="2" ry="2" />
<text  x="281.13" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="60.8" y="117" width="44.8" height="15.0" fill="rgb(249,118,48)" rx="2" ry="2" />
<text  x="63.77" y="127.5" >[unk..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1179.3" y="2021" width="1.0" height="15.0" fill="rgb(254,68,49)" rx="2" ry="2" />
<text  x="1182.29" y="2031.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="389.6" y="1893" width="0.2" height="15.0" fill="rgb(249,185,48)" rx="2" ry="2" />
<text  x="392.58" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="88.5" y="37" width="0.2" height="15.0" fill="rgb(221,125,43)" rx="2" ry="2" />
<text  x="91.53" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (106 samples, 1.78%)</title><rect x="837.8" y="1989" width="21.0" height="15.0" fill="rgb(240,123,42)" rx="2" ry="2" />
<text  x="840.78" y="1999.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (4 samples, 0.07%)</title><rect x="373.7" y="2005" width="0.8" height="15.0" fill="rgb(234,14,29)" rx="2" ry="2" />
<text  x="376.72" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="347.3" y="1973" width="0.6" height="15.0" fill="rgb(215,175,9)" rx="2" ry="2" />
<text  x="350.34" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="736.8" y="1941" width="0.8" height="15.0" fill="rgb(221,208,52)" rx="2" ry="2" />
<text  x="739.84" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="175.6" y="1973" width="0.2" height="15.0" fill="rgb(228,58,25)" rx="2" ry="2" />
<text  x="178.60" y="1983.5" ></text>
</g>
</g>
</svg>
