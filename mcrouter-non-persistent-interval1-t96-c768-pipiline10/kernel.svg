<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (87 samples, 1.46%)</title><rect x="506.9" y="2021" width="17.2" height="15.0" fill="rgb(228,129,22)" rx="2" ry="2" />
<text  x="509.85" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="959.3" y="2005" width="0.4" height="15.0" fill="rgb(214,228,32)" rx="2" ry="2" />
<text  x="962.31" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="992.0" y="1973" width="0.2" height="15.0" fill="rgb(251,27,16)" rx="2" ry="2" />
<text  x="995.01" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="210.4" y="1909" width="0.2" height="15.0" fill="rgb(223,116,0)" rx="2" ry="2" />
<text  x="213.37" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="805.9" y="1669" width="0.2" height="15.0" fill="rgb(249,41,11)" rx="2" ry="2" />
<text  x="808.92" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (75 samples, 1.26%)</title><rect x="586.9" y="1925" width="14.9" height="15.0" fill="rgb(220,46,25)" rx="2" ry="2" />
<text  x="589.92" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1009.8" y="1957" width="0.6" height="15.0" fill="rgb(249,146,30)" rx="2" ry="2" />
<text  x="1012.85" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="759.9" y="1717" width="0.4" height="15.0" fill="rgb(216,118,36)" rx="2" ry="2" />
<text  x="762.94" y="1727.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="344.1" y="2021" width="0.2" height="15.0" fill="rgb(209,196,53)" rx="2" ry="2" />
<text  x="347.14" y="2031.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (13 samples, 0.22%)</title><rect x="278.5" y="1829" width="2.6" height="15.0" fill="rgb(244,179,5)" rx="2" ry="2" />
<text  x="281.54" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="388.1" y="1941" width="0.4" height="15.0" fill="rgb(216,49,20)" rx="2" ry="2" />
<text  x="391.14" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="298.6" y="1445" width="0.6" height="15.0" fill="rgb(221,59,1)" rx="2" ry="2" />
<text  x="301.56" y="1455.5" ></text>
</g>
<g >
<title>__snprintf_chk@plt (1 samples, 0.02%)</title><rect x="350.1" y="2037" width="0.2" height="15.0" fill="rgb(245,18,10)" rx="2" ry="2" />
<text  x="353.09" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (10 samples, 0.17%)</title><rect x="909.4" y="1973" width="2.0" height="15.0" fill="rgb(210,213,9)" rx="2" ry="2" />
<text  x="912.37" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (6 samples, 0.10%)</title><rect x="888.4" y="1925" width="1.1" height="15.0" fill="rgb(253,115,33)" rx="2" ry="2" />
<text  x="891.36" y="1935.5" ></text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.02%)</title><rect x="330.5" y="1397" width="0.2" height="15.0" fill="rgb(205,112,0)" rx="2" ry="2" />
<text  x="333.47" y="1407.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1020.2" y="1989" width="0.2" height="15.0" fill="rgb(211,161,14)" rx="2" ry="2" />
<text  x="1023.15" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="82.5" y="1925" width="0.2" height="15.0" fill="rgb(216,101,11)" rx="2" ry="2" />
<text  x="85.54" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="33.0" y="1829" width="0.2" height="15.0" fill="rgb(233,133,51)" rx="2" ry="2" />
<text  x="35.99" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="512.2" y="1957" width="0.2" height="15.0" fill="rgb(228,206,42)" rx="2" ry="2" />
<text  x="515.20" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1151.4" y="2053" width="0.2" height="15.0" fill="rgb(254,34,13)" rx="2" ry="2" />
<text  x="1154.35" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="935.3" y="1877" width="0.2" height="15.0" fill="rgb(217,54,40)" rx="2" ry="2" />
<text  x="938.33" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (5 samples, 0.08%)</title><rect x="216.7" y="1941" width="1.0" height="15.0" fill="rgb(230,23,17)" rx="2" ry="2" />
<text  x="219.71" y="1951.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="258.7" y="1925" width="0.2" height="15.0" fill="rgb(228,158,45)" rx="2" ry="2" />
<text  x="261.72" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.1" y="1909" width="0.2" height="15.0" fill="rgb(248,161,26)" rx="2" ry="2" />
<text  x="941.11" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (8 samples, 0.13%)</title><rect x="70.1" y="1925" width="1.5" height="15.0" fill="rgb(242,108,45)" rx="2" ry="2" />
<text  x="73.05" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="541.5" y="1973" width="0.2" height="15.0" fill="rgb(211,96,24)" rx="2" ry="2" />
<text  x="544.54" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="70.2" y="1877" width="1.0" height="15.0" fill="rgb(223,57,32)" rx="2" ry="2" />
<text  x="73.25" y="1887.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="520.5" y="1989" width="0.2" height="15.0" fill="rgb(210,68,31)" rx="2" ry="2" />
<text  x="523.53" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="460.7" y="1861" width="0.2" height="15.0" fill="rgb(216,123,4)" rx="2" ry="2" />
<text  x="463.68" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="300.1" y="1701" width="0.8" height="15.0" fill="rgb(248,174,52)" rx="2" ry="2" />
<text  x="303.14" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="931.6" y="1893" width="0.2" height="15.0" fill="rgb(253,7,14)" rx="2" ry="2" />
<text  x="934.57" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="120.4" y="53" width="0.2" height="15.0" fill="rgb(237,125,16)" rx="2" ry="2" />
<text  x="123.39" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="323.1" y="1589" width="0.2" height="15.0" fill="rgb(209,68,33)" rx="2" ry="2" />
<text  x="326.13" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (138 samples, 2.32%)</title><rect x="102.0" y="1989" width="27.3" height="15.0" fill="rgb(206,204,17)" rx="2" ry="2" />
<text  x="104.96" y="1999.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1012.2" y="2005" width="0.2" height="15.0" fill="rgb(233,213,36)" rx="2" ry="2" />
<text  x="1015.23" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="901.6" y="1957" width="0.2" height="15.0" fill="rgb(218,137,43)" rx="2" ry="2" />
<text  x="904.64" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.13%)</title><rect x="884.8" y="1941" width="1.6" height="15.0" fill="rgb(231,57,31)" rx="2" ry="2" />
<text  x="887.79" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="849.5" y="1685" width="0.2" height="15.0" fill="rgb(221,219,20)" rx="2" ry="2" />
<text  x="852.52" y="1695.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (2 samples, 0.03%)</title><rect x="857.0" y="1909" width="0.4" height="15.0" fill="rgb(249,134,1)" rx="2" ry="2" />
<text  x="860.05" y="1919.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="701.3" y="1909" width="0.8" height="15.0" fill="rgb(213,45,0)" rx="2" ry="2" />
<text  x="704.27" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1023.1" y="1957" width="0.2" height="15.0" fill="rgb(247,8,7)" rx="2" ry="2" />
<text  x="1026.13" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.6" y="1781" width="0.2" height="15.0" fill="rgb(218,85,35)" rx="2" ry="2" />
<text  x="163.62" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (9 samples, 0.15%)</title><rect x="571.7" y="1989" width="1.7" height="15.0" fill="rgb(219,150,1)" rx="2" ry="2" />
<text  x="574.66" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="901.6" y="1909" width="0.2" height="15.0" fill="rgb(230,45,27)" rx="2" ry="2" />
<text  x="904.64" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="919.5" y="2021" width="1.4" height="15.0" fill="rgb(245,86,46)" rx="2" ry="2" />
<text  x="922.48" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="373" width="17.9" height="15.0" fill="rgb(218,80,16)" rx="2" ry="2" />
<text  x="106.35" y="383.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="505.9" y="1781" width="0.2" height="15.0" fill="rgb(248,75,0)" rx="2" ry="2" />
<text  x="508.86" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="881.2" y="1925" width="0.6" height="15.0" fill="rgb(231,7,30)" rx="2" ry="2" />
<text  x="884.23" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="229" width="17.9" height="15.0" fill="rgb(219,24,12)" rx="2" ry="2" />
<text  x="106.35" y="239.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (193 samples, 3.24%)</title><rect x="772.0" y="1685" width="38.3" height="15.0" fill="rgb(216,169,39)" rx="2" ry="2" />
<text  x="775.03" y="1695.5" >__t..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="707.2" y="1941" width="0.2" height="15.0" fill="rgb(251,212,39)" rx="2" ry="2" />
<text  x="710.22" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1181.5" y="1941" width="0.2" height="15.0" fill="rgb(226,171,14)" rx="2" ry="2" />
<text  x="1184.48" y="1951.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="760.7" y="1733" width="0.2" height="15.0" fill="rgb(254,213,30)" rx="2" ry="2" />
<text  x="763.73" y="1743.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (8 samples, 0.13%)</title><rect x="1122.8" y="1941" width="1.6" height="15.0" fill="rgb(212,161,1)" rx="2" ry="2" />
<text  x="1125.81" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="509.4" y="1925" width="0.8" height="15.0" fill="rgb(253,2,36)" rx="2" ry="2" />
<text  x="512.43" y="1935.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="460.9" y="1893" width="0.4" height="15.0" fill="rgb(236,115,41)" rx="2" ry="2" />
<text  x="463.87" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="859.0" y="1941" width="0.6" height="15.0" fill="rgb(252,73,36)" rx="2" ry="2" />
<text  x="862.03" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 8.15%)</title><rect x="101.8" y="2037" width="96.1" height="15.0" fill="rgb(212,190,48)" rx="2" ry="2" />
<text  x="104.76" y="2047.5" >[unknown]</text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (58 samples, 0.97%)</title><rect x="24.3" y="2021" width="11.5" height="15.0" fill="rgb(222,96,31)" rx="2" ry="2" />
<text  x="27.27" y="2031.5" ></text>
</g>
<g >
<title>errseq_sample (1 samples, 0.02%)</title><rect x="414.5" y="1941" width="0.2" height="15.0" fill="rgb(251,216,0)" rx="2" ry="2" />
<text  x="417.50" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="362.6" y="1957" width="0.2" height="15.0" fill="rgb(220,177,53)" rx="2" ry="2" />
<text  x="365.57" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="635.9" y="2005" width="0.2" height="15.0" fill="rgb(217,83,23)" rx="2" ry="2" />
<text  x="638.87" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="713.8" y="1925" width="0.2" height="15.0" fill="rgb(249,39,3)" rx="2" ry="2" />
<text  x="716.76" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="161.4" y="1701" width="0.2" height="15.0" fill="rgb(229,190,25)" rx="2" ry="2" />
<text  x="164.41" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="513.6" y="1909" width="0.2" height="15.0" fill="rgb(206,64,37)" rx="2" ry="2" />
<text  x="516.59" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="959.5" y="1989" width="0.2" height="15.0" fill="rgb(252,178,17)" rx="2" ry="2" />
<text  x="962.51" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="315.8" y="1733" width="0.2" height="15.0" fill="rgb(234,207,8)" rx="2" ry="2" />
<text  x="318.80" y="1743.5" ></text>
</g>
<g >
<title>accept4 (2 samples, 0.03%)</title><rect x="24.5" y="2005" width="0.4" height="15.0" fill="rgb(220,6,4)" rx="2" ry="2" />
<text  x="27.47" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="117.0" y="37" width="0.2" height="15.0" fill="rgb(236,83,42)" rx="2" ry="2" />
<text  x="120.02" y="47.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="321.2" y="1813" width="0.2" height="15.0" fill="rgb(213,228,13)" rx="2" ry="2" />
<text  x="324.15" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="139.2" y="1973" width="0.2" height="15.0" fill="rgb(207,163,49)" rx="2" ry="2" />
<text  x="142.22" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1028.7" y="2021" width="0.2" height="15.0" fill="rgb(241,37,34)" rx="2" ry="2" />
<text  x="1031.68" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="341.6" y="1829" width="0.6" height="15.0" fill="rgb(226,159,37)" rx="2" ry="2" />
<text  x="344.57" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="903.0" y="1925" width="0.4" height="15.0" fill="rgb(215,155,5)" rx="2" ry="2" />
<text  x="906.03" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="165.4" y="2005" width="0.2" height="15.0" fill="rgb(251,37,16)" rx="2" ry="2" />
<text  x="168.38" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="330.5" y="1573" width="0.2" height="15.0" fill="rgb(212,23,53)" rx="2" ry="2" />
<text  x="333.47" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="274.8" y="1749" width="0.4" height="15.0" fill="rgb(230,150,31)" rx="2" ry="2" />
<text  x="277.78" y="1759.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="122.8" y="1285" width="0.2" height="15.0" fill="rgb(233,48,10)" rx="2" ry="2" />
<text  x="125.77" y="1295.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="163.0" y="1941" width="0.2" height="15.0" fill="rgb(246,97,51)" rx="2" ry="2" />
<text  x="166.00" y="1951.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="233.0" y="1957" width="0.4" height="15.0" fill="rgb(239,207,17)" rx="2" ry="2" />
<text  x="235.96" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="837" width="18.1" height="15.0" fill="rgb(213,81,44)" rx="2" ry="2" />
<text  x="106.35" y="847.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="203.4" y="2037" width="0.4" height="15.0" fill="rgb(216,77,33)" rx="2" ry="2" />
<text  x="206.43" y="2047.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="785.1" y="1541" width="0.4" height="15.0" fill="rgb(224,137,31)" rx="2" ry="2" />
<text  x="788.11" y="1551.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="747.3" y="1589" width="0.2" height="15.0" fill="rgb(240,202,17)" rx="2" ry="2" />
<text  x="750.25" y="1599.5" ></text>
</g>
<g >
<title>inet_csk_accept (65 samples, 1.09%)</title><rect x="370.5" y="1941" width="12.9" height="15.0" fill="rgb(219,103,18)" rx="2" ry="2" />
<text  x="373.50" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="516.4" y="1941" width="0.6" height="15.0" fill="rgb(238,154,17)" rx="2" ry="2" />
<text  x="519.37" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="957.9" y="1925" width="0.2" height="15.0" fill="rgb(249,194,39)" rx="2" ry="2" />
<text  x="960.92" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="120.4" y="37" width="0.2" height="15.0" fill="rgb(241,69,40)" rx="2" ry="2" />
<text  x="123.39" y="47.5" ></text>
</g>
<g >
<title>__check_object_size (10 samples, 0.17%)</title><rect x="269.6" y="1877" width="2.0" height="15.0" fill="rgb(236,135,0)" rx="2" ry="2" />
<text  x="272.62" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="294.4" y="1573" width="0.2" height="15.0" fill="rgb(249,171,2)" rx="2" ry="2" />
<text  x="297.40" y="1583.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="707.2" y="1685" width="0.2" height="15.0" fill="rgb(227,148,44)" rx="2" ry="2" />
<text  x="710.22" y="1695.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1099.4" y="1909" width="0.2" height="15.0" fill="rgb(250,191,14)" rx="2" ry="2" />
<text  x="1102.43" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="571.1" y="1989" width="0.4" height="15.0" fill="rgb(232,135,31)" rx="2" ry="2" />
<text  x="574.06" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="177.9" y="1989" width="0.2" height="15.0" fill="rgb(232,24,10)" rx="2" ry="2" />
<text  x="180.86" y="1999.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="546.1" y="1941" width="0.2" height="15.0" fill="rgb(215,104,18)" rx="2" ry="2" />
<text  x="549.09" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="259.7" y="1701" width="0.2" height="15.0" fill="rgb(227,66,51)" rx="2" ry="2" />
<text  x="262.71" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="277" width="17.9" height="15.0" fill="rgb(226,99,54)" rx="2" ry="2" />
<text  x="106.35" y="287.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="985.5" y="1989" width="0.2" height="15.0" fill="rgb(245,33,50)" rx="2" ry="2" />
<text  x="988.47" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="224.0" y="1829" width="0.4" height="15.0" fill="rgb(245,189,18)" rx="2" ry="2" />
<text  x="227.04" y="1839.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="24.3" y="2005" width="0.2" height="15.0" fill="rgb(240,6,23)" rx="2" ry="2" />
<text  x="27.27" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="505.7" y="2037" width="0.2" height="15.0" fill="rgb(250,101,51)" rx="2" ry="2" />
<text  x="508.66" y="2047.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="320.4" y="1701" width="0.2" height="15.0" fill="rgb(252,151,12)" rx="2" ry="2" />
<text  x="323.36" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="384.0" y="1925" width="0.8" height="15.0" fill="rgb(234,223,19)" rx="2" ry="2" />
<text  x="386.98" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="985.7" y="2005" width="0.2" height="15.0" fill="rgb(219,24,32)" rx="2" ry="2" />
<text  x="988.67" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="339.2" y="1797" width="0.2" height="15.0" fill="rgb(218,175,0)" rx="2" ry="2" />
<text  x="342.19" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="171.3" y="1797" width="0.2" height="15.0" fill="rgb(225,48,39)" rx="2" ry="2" />
<text  x="174.32" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncReader::AsyncReader (1 samples, 0.02%)</title><rect x="567.1" y="1989" width="0.2" height="15.0" fill="rgb(221,123,22)" rx="2" ry="2" />
<text  x="570.10" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="339.0" y="1925" width="0.2" height="15.0" fill="rgb(222,140,13)" rx="2" ry="2" />
<text  x="341.99" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="396.3" y="1893" width="0.4" height="15.0" fill="rgb(221,122,50)" rx="2" ry="2" />
<text  x="399.26" y="1903.5" ></text>
</g>
<g >
<title>tcp_write_xmit (221 samples, 3.71%)</title><rect x="287.7" y="1845" width="43.8" height="15.0" fill="rgb(239,164,2)" rx="2" ry="2" />
<text  x="290.66" y="1855.5" >tcp_..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="476.1" y="1957" width="0.2" height="15.0" fill="rgb(219,185,24)" rx="2" ry="2" />
<text  x="479.13" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (4 samples, 0.07%)</title><rect x="817.6" y="1685" width="0.8" height="15.0" fill="rgb(233,159,34)" rx="2" ry="2" />
<text  x="820.61" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="958.9" y="2005" width="0.2" height="15.0" fill="rgb(232,120,30)" rx="2" ry="2" />
<text  x="961.92" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="646.0" y="1941" width="0.6" height="15.0" fill="rgb(221,46,24)" rx="2" ry="2" />
<text  x="648.98" y="1951.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="701.7" y="1877" width="0.4" height="15.0" fill="rgb(210,23,54)" rx="2" ry="2" />
<text  x="704.67" y="1887.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="364.0" y="1957" width="0.2" height="15.0" fill="rgb(239,161,3)" rx="2" ry="2" />
<text  x="366.96" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="627.2" y="1989" width="0.7" height="15.0" fill="rgb(247,93,18)" rx="2" ry="2" />
<text  x="630.15" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="383.0" y="1717" width="0.2" height="15.0" fill="rgb(208,45,21)" rx="2" ry="2" />
<text  x="385.99" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1052.1" y="1989" width="0.2" height="15.0" fill="rgb(245,17,16)" rx="2" ry="2" />
<text  x="1055.06" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (62 samples, 1.04%)</title><rect x="639.0" y="2021" width="12.3" height="15.0" fill="rgb(206,229,45)" rx="2" ry="2" />
<text  x="642.04" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="171.3" y="1669" width="0.2" height="15.0" fill="rgb(247,46,48)" rx="2" ry="2" />
<text  x="174.32" y="1679.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="454.1" y="1957" width="0.2" height="15.0" fill="rgb(225,120,32)" rx="2" ry="2" />
<text  x="457.14" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="525.5" y="1893" width="0.2" height="15.0" fill="rgb(241,93,24)" rx="2" ry="2" />
<text  x="528.48" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="491.0" y="1749" width="0.2" height="15.0" fill="rgb(209,147,22)" rx="2" ry="2" />
<text  x="494.00" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="601.8" y="1925" width="3.0" height="15.0" fill="rgb(241,68,33)" rx="2" ry="2" />
<text  x="604.78" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="616.8" y="1557" width="0.2" height="15.0" fill="rgb(220,39,16)" rx="2" ry="2" />
<text  x="619.85" y="1567.5" ></text>
</g>
<g >
<title>sock_alloc (65 samples, 1.09%)</title><rect x="388.5" y="1957" width="12.9" height="15.0" fill="rgb(230,166,54)" rx="2" ry="2" />
<text  x="391.54" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (116 samples, 1.95%)</title><rect x="211.0" y="1989" width="23.0" height="15.0" fill="rgb(250,199,39)" rx="2" ry="2" />
<text  x="213.96" y="1999.5" >f..</text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="999.1" y="1909" width="0.2" height="15.0" fill="rgb(221,179,5)" rx="2" ry="2" />
<text  x="1002.15" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="83.3" y="1941" width="0.2" height="15.0" fill="rgb(244,58,21)" rx="2" ry="2" />
<text  x="86.33" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1015.4" y="2021" width="0.2" height="15.0" fill="rgb(240,148,34)" rx="2" ry="2" />
<text  x="1018.40" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="320.4" y="1765" width="0.2" height="15.0" fill="rgb(214,138,30)" rx="2" ry="2" />
<text  x="323.36" y="1775.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.02%)</title><rect x="622.6" y="1845" width="0.2" height="15.0" fill="rgb(246,172,2)" rx="2" ry="2" />
<text  x="625.59" y="1855.5" ></text>
</g>
<g >
<title>import_single_range (3 samples, 0.05%)</title><rect x="1065.5" y="1973" width="0.6" height="15.0" fill="rgb(249,47,29)" rx="2" ry="2" />
<text  x="1068.54" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="69.3" y="1749" width="0.2" height="15.0" fill="rgb(208,57,42)" rx="2" ry="2" />
<text  x="72.26" y="1759.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1152.9" y="1973" width="0.2" height="15.0" fill="rgb(247,16,51)" rx="2" ry="2" />
<text  x="1155.94" y="1983.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1119.6" y="1525" width="0.2" height="15.0" fill="rgb(244,174,39)" rx="2" ry="2" />
<text  x="1122.64" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="658.5" y="1925" width="0.2" height="15.0" fill="rgb(253,209,50)" rx="2" ry="2" />
<text  x="661.46" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="477.9" y="1957" width="0.4" height="15.0" fill="rgb(245,69,8)" rx="2" ry="2" />
<text  x="480.92" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="701.5" y="1893" width="0.6" height="15.0" fill="rgb(220,83,50)" rx="2" ry="2" />
<text  x="704.47" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (99 samples, 1.66%)</title><rect x="585.7" y="1957" width="19.7" height="15.0" fill="rgb(209,205,0)" rx="2" ry="2" />
<text  x="588.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (7 samples, 0.12%)</title><rect x="713.8" y="1989" width="1.3" height="15.0" fill="rgb(220,187,23)" rx="2" ry="2" />
<text  x="716.76" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1083.8" y="1797" width="0.2" height="15.0" fill="rgb(247,65,37)" rx="2" ry="2" />
<text  x="1086.77" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="634.3" y="2005" width="0.8" height="15.0" fill="rgb(250,224,1)" rx="2" ry="2" />
<text  x="637.29" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="826.7" y="1621" width="0.4" height="15.0" fill="rgb(241,198,40)" rx="2" ry="2" />
<text  x="829.72" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (17 samples, 0.29%)</title><rect x="543.3" y="1973" width="3.4" height="15.0" fill="rgb(240,149,15)" rx="2" ry="2" />
<text  x="546.32" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.6" y="1813" width="0.2" height="15.0" fill="rgb(239,28,11)" rx="2" ry="2" />
<text  x="229.62" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="708.4" y="2037" width="0.2" height="15.0" fill="rgb(228,123,19)" rx="2" ry="2" />
<text  x="711.41" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="179.3" y="1973" width="0.3" height="15.0" fill="rgb(208,216,39)" rx="2" ry="2" />
<text  x="182.25" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1174.1" y="1989" width="0.2" height="15.0" fill="rgb(223,188,27)" rx="2" ry="2" />
<text  x="1177.15" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="898.9" y="1845" width="0.2" height="15.0" fill="rgb(228,18,22)" rx="2" ry="2" />
<text  x="901.86" y="1855.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1139.1" y="2053" width="1.0" height="15.0" fill="rgb(250,109,35)" rx="2" ry="2" />
<text  x="1142.07" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (7 samples, 0.12%)</title><rect x="1019.2" y="2005" width="1.4" height="15.0" fill="rgb(216,195,5)" rx="2" ry="2" />
<text  x="1022.16" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (34 samples, 0.57%)</title><rect x="996.4" y="1925" width="6.7" height="15.0" fill="rgb(236,184,45)" rx="2" ry="2" />
<text  x="999.37" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="921.7" y="2005" width="0.2" height="15.0" fill="rgb(217,83,48)" rx="2" ry="2" />
<text  x="924.66" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="783.3" y="1493" width="0.2" height="15.0" fill="rgb(253,132,28)" rx="2" ry="2" />
<text  x="786.32" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (10 samples, 0.17%)</title><rect x="925.6" y="1941" width="2.0" height="15.0" fill="rgb(205,19,2)" rx="2" ry="2" />
<text  x="928.62" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="253.0" y="1685" width="0.2" height="15.0" fill="rgb(229,72,15)" rx="2" ry="2" />
<text  x="255.98" y="1695.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="914.5" y="1989" width="0.4" height="15.0" fill="rgb(207,62,4)" rx="2" ry="2" />
<text  x="917.52" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="123.6" y="1381" width="0.2" height="15.0" fill="rgb(211,85,13)" rx="2" ry="2" />
<text  x="126.56" y="1391.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="849.3" y="1861" width="0.2" height="15.0" fill="rgb(234,203,43)" rx="2" ry="2" />
<text  x="852.32" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.07%)</title><rect x="408.6" y="1893" width="0.7" height="15.0" fill="rgb(254,114,23)" rx="2" ry="2" />
<text  x="411.55" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="416.7" y="2021" width="3.1" height="15.0" fill="rgb(217,183,18)" rx="2" ry="2" />
<text  x="419.68" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="478.9" y="1973" width="0.4" height="15.0" fill="rgb(222,13,25)" rx="2" ry="2" />
<text  x="481.91" y="1983.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="132.1" y="1989" width="0.2" height="15.0" fill="rgb(241,27,39)" rx="2" ry="2" />
<text  x="135.08" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (725 samples, 12.18%)</title><rect x="716.3" y="1957" width="143.7" height="15.0" fill="rgb(208,75,17)" rx="2" ry="2" />
<text  x="719.34" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="839.6" y="1861" width="0.2" height="15.0" fill="rgb(249,190,30)" rx="2" ry="2" />
<text  x="842.61" y="1871.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="281.3" y="1829" width="0.4" height="15.0" fill="rgb(212,219,49)" rx="2" ry="2" />
<text  x="284.32" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="322.5" y="1701" width="0.2" height="15.0" fill="rgb(213,203,15)" rx="2" ry="2" />
<text  x="325.54" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="280.7" y="1733" width="0.2" height="15.0" fill="rgb(217,175,28)" rx="2" ry="2" />
<text  x="283.72" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (515 samples, 8.65%)</title><rect x="240.7" y="2021" width="102.1" height="15.0" fill="rgb(243,50,32)" rx="2" ry="2" />
<text  x="243.69" y="2031.5" >entry_SYSCAL..</text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.7" y="1701" width="0.2" height="15.0" fill="rgb(224,31,51)" rx="2" ry="2" />
<text  x="128.74" y="1711.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="85.9" y="1925" width="0.2" height="15.0" fill="rgb(237,217,44)" rx="2" ry="2" />
<text  x="88.91" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.9" y="1093" width="0.2" height="15.0" fill="rgb(219,18,12)" rx="2" ry="2" />
<text  x="105.95" y="1103.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="79.6" y="1909" width="0.2" height="15.0" fill="rgb(220,17,34)" rx="2" ry="2" />
<text  x="82.56" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="161.4" y="1685" width="0.2" height="15.0" fill="rgb(211,94,2)" rx="2" ry="2" />
<text  x="164.41" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="120.6" y="133" width="0.2" height="15.0" fill="rgb(223,170,30)" rx="2" ry="2" />
<text  x="123.59" y="143.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="895.9" y="1845" width="0.2" height="15.0" fill="rgb(214,74,2)" rx="2" ry="2" />
<text  x="898.89" y="1855.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="849.5" y="1573" width="0.2" height="15.0" fill="rgb(208,227,8)" rx="2" ry="2" />
<text  x="852.52" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="845.0" y="1925" width="0.2" height="15.0" fill="rgb(237,117,44)" rx="2" ry="2" />
<text  x="847.96" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="614.1" y="1861" width="0.2" height="15.0" fill="rgb(210,68,53)" rx="2" ry="2" />
<text  x="617.07" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="826.7" y="1605" width="0.4" height="15.0" fill="rgb(238,22,5)" rx="2" ry="2" />
<text  x="829.72" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.98%)</title><rect x="102.4" y="1669" width="23.3" height="15.0" fill="rgb(251,216,30)" rx="2" ry="2" />
<text  x="105.35" y="1679.5" >[..</text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="392.9" y="1653" width="0.2" height="15.0" fill="rgb(211,174,15)" rx="2" ry="2" />
<text  x="395.90" y="1663.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="142.8" y="1893" width="0.2" height="15.0" fill="rgb(245,39,9)" rx="2" ry="2" />
<text  x="145.78" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="860.4" y="1957" width="0.2" height="15.0" fill="rgb(210,179,14)" rx="2" ry="2" />
<text  x="863.42" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="280.7" y="1701" width="0.2" height="15.0" fill="rgb(219,59,4)" rx="2" ry="2" />
<text  x="283.72" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (12 samples, 0.20%)</title><rect x="45.9" y="1957" width="2.3" height="15.0" fill="rgb(216,80,45)" rx="2" ry="2" />
<text  x="48.87" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.5" y="1845" width="0.2" height="15.0" fill="rgb(238,54,1)" rx="2" ry="2" />
<text  x="64.53" y="1855.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1109.5" y="1813" width="0.2" height="15.0" fill="rgb(247,30,36)" rx="2" ry="2" />
<text  x="1112.54" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1008.3" y="1941" width="0.2" height="15.0" fill="rgb(226,48,41)" rx="2" ry="2" />
<text  x="1011.26" y="1951.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1149.2" y="1909" width="0.2" height="15.0" fill="rgb(205,80,22)" rx="2" ry="2" />
<text  x="1152.17" y="1919.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="475.7" y="1925" width="0.2" height="15.0" fill="rgb(223,162,39)" rx="2" ry="2" />
<text  x="478.74" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="629.7" y="1989" width="1.2" height="15.0" fill="rgb(253,175,45)" rx="2" ry="2" />
<text  x="632.73" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="951.6" y="1989" width="0.2" height="15.0" fill="rgb(212,208,14)" rx="2" ry="2" />
<text  x="954.58" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="475.5" y="1941" width="0.6" height="15.0" fill="rgb(223,71,49)" rx="2" ry="2" />
<text  x="478.54" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="154.1" y="1797" width="0.2" height="15.0" fill="rgb(233,48,12)" rx="2" ry="2" />
<text  x="157.08" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="886.8" y="1925" width="0.2" height="15.0" fill="rgb(228,54,20)" rx="2" ry="2" />
<text  x="889.78" y="1935.5" ></text>
</g>
<g >
<title>___sys_sendmsg (424 samples, 7.12%)</title><rect x="254.0" y="1957" width="84.0" height="15.0" fill="rgb(242,125,49)" rx="2" ry="2" />
<text  x="256.97" y="1967.5" >___sys_se..</text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="608.3" y="1957" width="0.2" height="15.0" fill="rgb(236,112,49)" rx="2" ry="2" />
<text  x="611.32" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="34.4" y="2005" width="0.2" height="15.0" fill="rgb(212,121,22)" rx="2" ry="2" />
<text  x="37.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="139.6" y="2005" width="1.2" height="15.0" fill="rgb(232,226,51)" rx="2" ry="2" />
<text  x="142.61" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (48 samples, 0.81%)</title><rect x="1110.3" y="1861" width="9.5" height="15.0" fill="rgb(245,217,19)" rx="2" ry="2" />
<text  x="1113.33" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="916.1" y="2005" width="0.2" height="15.0" fill="rgb(234,85,46)" rx="2" ry="2" />
<text  x="919.11" y="2015.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1174.3" y="1973" width="0.2" height="15.0" fill="rgb(238,192,22)" rx="2" ry="2" />
<text  x="1177.34" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="1001.1" y="1877" width="0.2" height="15.0" fill="rgb(242,188,36)" rx="2" ry="2" />
<text  x="1004.13" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="1096.5" y="1909" width="0.6" height="15.0" fill="rgb(217,67,36)" rx="2" ry="2" />
<text  x="1099.46" y="1919.5" ></text>
</g>
<g >
<title>tcp_init_buffer_space (1 samples, 0.02%)</title><rect x="215.3" y="1653" width="0.2" height="15.0" fill="rgb(242,89,15)" rx="2" ry="2" />
<text  x="218.32" y="1663.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="280.7" y="1525" width="0.2" height="15.0" fill="rgb(205,133,3)" rx="2" ry="2" />
<text  x="283.72" y="1535.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="471.8" y="1877" width="0.2" height="15.0" fill="rgb(246,208,33)" rx="2" ry="2" />
<text  x="474.77" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1163.6" y="1829" width="0.4" height="15.0" fill="rgb(228,85,36)" rx="2" ry="2" />
<text  x="1166.64" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="525.1" y="1893" width="0.4" height="15.0" fill="rgb(219,90,23)" rx="2" ry="2" />
<text  x="528.09" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="736.0" y="1685" width="0.2" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="738.96" y="1695.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="574.2" y="1909" width="0.2" height="15.0" fill="rgb(220,2,44)" rx="2" ry="2" />
<text  x="577.24" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="47.1" y="1909" width="0.4" height="15.0" fill="rgb(244,205,40)" rx="2" ry="2" />
<text  x="50.06" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="256.3" y="1909" width="0.2" height="15.0" fill="rgb(249,174,22)" rx="2" ry="2" />
<text  x="259.35" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.18%)</title><rect x="524.1" y="2021" width="2.2" height="15.0" fill="rgb(210,202,43)" rx="2" ry="2" />
<text  x="527.09" y="2031.5" ></text>
</g>
<g >
<title>security_socket_getsockname (5 samples, 0.08%)</title><rect x="598.8" y="1861" width="1.0" height="15.0" fill="rgb(245,35,52)" rx="2" ry="2" />
<text  x="601.81" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="294.4" y="1605" width="0.2" height="15.0" fill="rgb(249,176,47)" rx="2" ry="2" />
<text  x="297.40" y="1615.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="1178.7" y="2021" width="0.6" height="15.0" fill="rgb(237,59,22)" rx="2" ry="2" />
<text  x="1181.70" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="888.2" y="1829" width="0.2" height="15.0" fill="rgb(206,131,29)" rx="2" ry="2" />
<text  x="891.16" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="525.3" y="1877" width="0.2" height="15.0" fill="rgb(242,227,49)" rx="2" ry="2" />
<text  x="528.28" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="274.8" y="1781" width="0.4" height="15.0" fill="rgb(235,113,12)" rx="2" ry="2" />
<text  x="277.78" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (1 samples, 0.02%)</title><rect x="656.3" y="2005" width="0.2" height="15.0" fill="rgb(205,91,51)" rx="2" ry="2" />
<text  x="659.28" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="330.5" y="1541" width="0.2" height="15.0" fill="rgb(218,205,16)" rx="2" ry="2" />
<text  x="333.47" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="533" width="17.9" height="15.0" fill="rgb(220,82,30)" rx="2" ry="2" />
<text  x="106.35" y="543.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="517" width="17.9" height="15.0" fill="rgb(239,205,21)" rx="2" ry="2" />
<text  x="106.35" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (4 samples, 0.07%)</title><rect x="33.4" y="1989" width="0.8" height="15.0" fill="rgb(247,25,28)" rx="2" ry="2" />
<text  x="36.39" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (3 samples, 0.05%)</title><rect x="547.5" y="1973" width="0.6" height="15.0" fill="rgb(205,72,3)" rx="2" ry="2" />
<text  x="550.48" y="1983.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="624.2" y="2005" width="0.4" height="15.0" fill="rgb(244,70,41)" rx="2" ry="2" />
<text  x="627.18" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="545.7" y="1957" width="0.6" height="15.0" fill="rgb(250,218,39)" rx="2" ry="2" />
<text  x="548.70" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (8 samples, 0.13%)</title><rect x="1078.4" y="1909" width="1.6" height="15.0" fill="rgb(238,142,12)" rx="2" ry="2" />
<text  x="1081.42" y="1919.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="116.8" y="69" width="0.2" height="15.0" fill="rgb(248,104,20)" rx="2" ry="2" />
<text  x="119.82" y="79.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1143.0" y="1909" width="0.2" height="15.0" fill="rgb(206,139,14)" rx="2" ry="2" />
<text  x="1146.03" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="408.4" y="1845" width="0.2" height="15.0" fill="rgb(247,111,43)" rx="2" ry="2" />
<text  x="411.35" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.8" y="117" width="0.2" height="15.0" fill="rgb(206,136,14)" rx="2" ry="2" />
<text  x="123.79" y="127.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="85.5" y="1941" width="0.4" height="15.0" fill="rgb(207,52,5)" rx="2" ry="2" />
<text  x="88.51" y="1951.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="144.0" y="1829" width="0.2" height="15.0" fill="rgb(233,146,14)" rx="2" ry="2" />
<text  x="146.97" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="259.7" y="1877" width="0.2" height="15.0" fill="rgb(242,200,43)" rx="2" ry="2" />
<text  x="262.71" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (2 samples, 0.03%)</title><rect x="978.7" y="2037" width="0.4" height="15.0" fill="rgb(250,211,18)" rx="2" ry="2" />
<text  x="981.73" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="478.1" y="1749" width="0.2" height="15.0" fill="rgb(220,192,1)" rx="2" ry="2" />
<text  x="481.12" y="1759.5" ></text>
</g>
<g >
<title>__fput (512 samples, 8.60%)</title><rect x="733.6" y="1813" width="101.4" height="15.0" fill="rgb(225,33,8)" rx="2" ry="2" />
<text  x="736.58" y="1823.5" >__fput</text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="102.6" y="1413" width="21.2" height="15.0" fill="rgb(231,33,13)" rx="2" ry="2" />
<text  x="105.55" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="539.8" y="1893" width="0.7" height="15.0" fill="rgb(228,18,46)" rx="2" ry="2" />
<text  x="542.75" y="1903.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="363.0" y="1957" width="0.2" height="15.0" fill="rgb(205,74,45)" rx="2" ry="2" />
<text  x="365.97" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1149.2" y="1989" width="0.2" height="15.0" fill="rgb(209,153,42)" rx="2" ry="2" />
<text  x="1152.17" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (11 samples, 0.18%)</title><rect x="538.8" y="1957" width="2.1" height="15.0" fill="rgb(237,134,44)" rx="2" ry="2" />
<text  x="541.76" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="115.8" y="37" width="0.2" height="15.0" fill="rgb(244,33,46)" rx="2" ry="2" />
<text  x="118.83" y="47.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1148.6" y="2005" width="0.2" height="15.0" fill="rgb(212,103,7)" rx="2" ry="2" />
<text  x="1151.58" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="878.3" y="1941" width="0.3" height="15.0" fill="rgb(242,62,30)" rx="2" ry="2" />
<text  x="881.25" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="713.0" y="1989" width="0.2" height="15.0" fill="rgb(242,191,34)" rx="2" ry="2" />
<text  x="715.97" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.6" y="1253" width="0.2" height="15.0" fill="rgb(252,167,47)" rx="2" ry="2" />
<text  x="125.57" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="322.5" y="1621" width="0.2" height="15.0" fill="rgb(207,121,30)" rx="2" ry="2" />
<text  x="325.54" y="1631.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="795.4" y="1461" width="0.2" height="15.0" fill="rgb(216,9,41)" rx="2" ry="2" />
<text  x="798.41" y="1471.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="579.8" y="2021" width="0.2" height="15.0" fill="rgb(230,21,11)" rx="2" ry="2" />
<text  x="582.79" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="547.3" y="1909" width="0.2" height="15.0" fill="rgb(209,107,25)" rx="2" ry="2" />
<text  x="550.28" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="960.1" y="2005" width="0.4" height="15.0" fill="rgb(250,212,27)" rx="2" ry="2" />
<text  x="963.10" y="2015.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="622.6" y="1877" width="0.2" height="15.0" fill="rgb(247,229,40)" rx="2" ry="2" />
<text  x="625.59" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="180.0" y="1957" width="0.6" height="15.0" fill="rgb(235,205,40)" rx="2" ry="2" />
<text  x="183.04" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="343.5" y="1909" width="0.6" height="15.0" fill="rgb(222,157,37)" rx="2" ry="2" />
<text  x="346.55" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="586.7" y="1925" width="0.2" height="15.0" fill="rgb(239,59,44)" rx="2" ry="2" />
<text  x="589.72" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="258.5" y="1925" width="0.2" height="15.0" fill="rgb(216,157,14)" rx="2" ry="2" />
<text  x="261.53" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="320.4" y="1717" width="0.2" height="15.0" fill="rgb(224,6,31)" rx="2" ry="2" />
<text  x="323.36" y="1727.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1461" width="0.2" height="15.0" fill="rgb(217,167,41)" rx="2" ry="2" />
<text  x="344.96" y="1471.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="498.5" y="1637" width="0.2" height="15.0" fill="rgb(229,66,10)" rx="2" ry="2" />
<text  x="501.53" y="1647.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (3 samples, 0.05%)</title><rect x="572.3" y="1941" width="0.5" height="15.0" fill="rgb(252,18,37)" rx="2" ry="2" />
<text  x="575.25" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="259.7" y="1845" width="0.2" height="15.0" fill="rgb(232,179,17)" rx="2" ry="2" />
<text  x="262.71" y="1855.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 0.10%)</title><rect x="256.7" y="1909" width="1.2" height="15.0" fill="rgb(248,15,10)" rx="2" ry="2" />
<text  x="259.74" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (72 samples, 1.21%)</title><rect x="688.4" y="1973" width="14.3" height="15.0" fill="rgb(249,76,24)" rx="2" ry="2" />
<text  x="691.39" y="1983.5" ></text>
</g>
<g >
<title>wakeup_preempt_entity.isra.69 (1 samples, 0.02%)</title><rect x="1083.8" y="1733" width="0.2" height="15.0" fill="rgb(247,201,19)" rx="2" ry="2" />
<text  x="1086.77" y="1743.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, long, std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1877" width="0.2" height="15.0" fill="rgb(236,91,5)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1112.7" y="1429" width="0.2" height="15.0" fill="rgb(218,54,21)" rx="2" ry="2" />
<text  x="1115.71" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="895.9" y="1813" width="0.2" height="15.0" fill="rgb(219,150,21)" rx="2" ry="2" />
<text  x="898.89" y="1823.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (6 samples, 0.10%)</title><rect x="548.7" y="1973" width="1.2" height="15.0" fill="rgb(222,159,18)" rx="2" ry="2" />
<text  x="551.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="102.9" y="1109" width="18.7" height="15.0" fill="rgb(211,178,8)" rx="2" ry="2" />
<text  x="105.95" y="1119.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="328.1" y="1749" width="0.4" height="15.0" fill="rgb(242,64,46)" rx="2" ry="2" />
<text  x="331.09" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="573.4" y="1989" width="0.8" height="15.0" fill="rgb(230,41,35)" rx="2" ry="2" />
<text  x="576.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (118 samples, 1.98%)</title><rect x="210.6" y="2005" width="23.4" height="15.0" fill="rgb(224,172,44)" rx="2" ry="2" />
<text  x="213.56" y="2015.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="280.7" y="1653" width="0.2" height="15.0" fill="rgb(237,141,6)" rx="2" ry="2" />
<text  x="283.72" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="129.3" y="1989" width="0.2" height="15.0" fill="rgb(223,185,42)" rx="2" ry="2" />
<text  x="132.31" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="320.8" y="1685" width="0.4" height="15.0" fill="rgb(205,174,35)" rx="2" ry="2" />
<text  x="323.76" y="1695.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.15%)</title><rect x="12.0" y="1829" width="1.8" height="15.0" fill="rgb(249,0,24)" rx="2" ry="2" />
<text  x="14.98" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="215.3" y="1941" width="0.2" height="15.0" fill="rgb(232,224,13)" rx="2" ry="2" />
<text  x="218.32" y="1951.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="338.2" y="1957" width="0.4" height="15.0" fill="rgb(249,226,29)" rx="2" ry="2" />
<text  x="341.20" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="341.6" y="1861" width="0.6" height="15.0" fill="rgb(248,109,1)" rx="2" ry="2" />
<text  x="344.57" y="1871.5" ></text>
</g>
<g >
<title>__memchr_avx2 (10 samples, 0.17%)</title><rect x="346.1" y="2037" width="2.0" height="15.0" fill="rgb(240,219,14)" rx="2" ry="2" />
<text  x="349.12" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="921.9" y="2037" width="0.2" height="15.0" fill="rgb(220,197,16)" rx="2" ry="2" />
<text  x="924.85" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="154.1" y="1845" width="0.2" height="15.0" fill="rgb(235,155,41)" rx="2" ry="2" />
<text  x="157.08" y="1855.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="870.1" y="1989" width="0.4" height="15.0" fill="rgb(217,138,49)" rx="2" ry="2" />
<text  x="873.13" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::Data::Data (1 samples, 0.02%)</title><rect x="931.4" y="1893" width="0.2" height="15.0" fill="rgb(211,94,13)" rx="2" ry="2" />
<text  x="934.37" y="1903.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="895.9" y="1957" width="0.2" height="15.0" fill="rgb(221,131,19)" rx="2" ry="2" />
<text  x="898.89" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="225.0" y="1861" width="1.8" height="15.0" fill="rgb(215,72,54)" rx="2" ry="2" />
<text  x="228.03" y="1871.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="76.4" y="1941" width="0.2" height="15.0" fill="rgb(244,199,44)" rx="2" ry="2" />
<text  x="79.39" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="616.8" y="1717" width="0.2" height="15.0" fill="rgb(240,106,41)" rx="2" ry="2" />
<text  x="619.85" y="1727.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="75.6" y="1941" width="0.2" height="15.0" fill="rgb(207,214,36)" rx="2" ry="2" />
<text  x="78.60" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="491.0" y="1813" width="0.2" height="15.0" fill="rgb(249,52,11)" rx="2" ry="2" />
<text  x="494.00" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1111.5" y="1525" width="0.2" height="15.0" fill="rgb(253,170,49)" rx="2" ry="2" />
<text  x="1114.52" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1129.8" y="1973" width="0.3" height="15.0" fill="rgb(205,66,35)" rx="2" ry="2" />
<text  x="1132.75" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="851.1" y="1925" width="1.8" height="15.0" fill="rgb(235,21,29)" rx="2" ry="2" />
<text  x="854.10" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="576.8" y="1941" width="0.2" height="15.0" fill="rgb(231,63,26)" rx="2" ry="2" />
<text  x="579.81" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="341.8" y="1797" width="0.4" height="15.0" fill="rgb(212,193,54)" rx="2" ry="2" />
<text  x="344.76" y="1807.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.03%)</title><rect x="454.5" y="1941" width="0.4" height="15.0" fill="rgb(247,100,30)" rx="2" ry="2" />
<text  x="457.53" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="888.2" y="1877" width="0.2" height="15.0" fill="rgb(242,75,53)" rx="2" ry="2" />
<text  x="891.16" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1143.0" y="1973" width="0.2" height="15.0" fill="rgb(208,151,32)" rx="2" ry="2" />
<text  x="1146.03" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1008.3" y="1957" width="0.2" height="15.0" fill="rgb(208,152,44)" rx="2" ry="2" />
<text  x="1011.26" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="180.8" y="1989" width="1.8" height="15.0" fill="rgb(222,77,25)" rx="2" ry="2" />
<text  x="183.84" y="1999.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="870.7" y="1989" width="0.4" height="15.0" fill="rgb(238,198,51)" rx="2" ry="2" />
<text  x="873.72" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="283.1" y="1829" width="0.2" height="15.0" fill="rgb(212,199,26)" rx="2" ry="2" />
<text  x="286.10" y="1839.5" ></text>
</g>
<g >
<title>lock_timer_base (9 samples, 0.15%)</title><rect x="328.7" y="1749" width="1.8" height="15.0" fill="rgb(242,119,50)" rx="2" ry="2" />
<text  x="331.68" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="69.3" y="1765" width="0.2" height="15.0" fill="rgb(235,56,9)" rx="2" ry="2" />
<text  x="72.26" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="44.9" y="1973" width="0.4" height="15.0" fill="rgb(223,200,32)" rx="2" ry="2" />
<text  x="47.88" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1028.7" y="1973" width="0.2" height="15.0" fill="rgb(218,98,30)" rx="2" ry="2" />
<text  x="1031.68" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="341" width="17.9" height="15.0" fill="rgb(213,59,39)" rx="2" ry="2" />
<text  x="106.35" y="351.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (6 samples, 0.10%)</title><rect x="713.8" y="1957" width="1.1" height="15.0" fill="rgb(242,185,23)" rx="2" ry="2" />
<text  x="716.76" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="461.3" y="1893" width="0.2" height="15.0" fill="rgb(242,16,20)" rx="2" ry="2" />
<text  x="464.27" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="50.2" y="1909" width="0.2" height="15.0" fill="rgb(219,53,44)" rx="2" ry="2" />
<text  x="53.23" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (35 samples, 0.59%)</title><rect x="48.2" y="1973" width="7.0" height="15.0" fill="rgb(208,160,12)" rx="2" ry="2" />
<text  x="51.25" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="13.8" y="1877" width="0.2" height="15.0" fill="rgb(252,170,9)" rx="2" ry="2" />
<text  x="16.77" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="81.7" y="1925" width="0.6" height="15.0" fill="rgb(215,118,44)" rx="2" ry="2" />
<text  x="84.74" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (6 samples, 0.10%)</title><rect x="336.8" y="1909" width="1.2" height="15.0" fill="rgb(216,19,43)" rx="2" ry="2" />
<text  x="339.81" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="408.4" y="1877" width="0.2" height="15.0" fill="rgb(211,113,25)" rx="2" ry="2" />
<text  x="411.35" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="374.7" y="1925" width="1.0" height="15.0" fill="rgb(214,228,54)" rx="2" ry="2" />
<text  x="377.66" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="505.9" y="1861" width="0.2" height="15.0" fill="rgb(224,50,26)" rx="2" ry="2" />
<text  x="508.86" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="220.9" y="1861" width="0.4" height="15.0" fill="rgb(251,80,15)" rx="2" ry="2" />
<text  x="223.87" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="872.9" y="1925" width="0.2" height="15.0" fill="rgb(239,106,50)" rx="2" ry="2" />
<text  x="875.90" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="538.2" y="1957" width="0.2" height="15.0" fill="rgb(225,196,25)" rx="2" ry="2" />
<text  x="541.17" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="460.7" y="1685" width="0.2" height="15.0" fill="rgb(248,63,4)" rx="2" ry="2" />
<text  x="463.68" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="821" width="18.1" height="15.0" fill="rgb(215,8,34)" rx="2" ry="2" />
<text  x="106.35" y="831.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="111.3" y="37" width="0.2" height="15.0" fill="rgb(220,19,30)" rx="2" ry="2" />
<text  x="114.27" y="47.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="706.4" y="1957" width="0.2" height="15.0" fill="rgb(210,120,19)" rx="2" ry="2" />
<text  x="709.43" y="1967.5" ></text>
</g>
<g >
<title>__libc_fcntl (6 samples, 0.10%)</title><rect x="1170.0" y="2037" width="1.2" height="15.0" fill="rgb(227,132,35)" rx="2" ry="2" />
<text  x="1172.98" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="969.0" y="1733" width="0.2" height="15.0" fill="rgb(221,166,16)" rx="2" ry="2" />
<text  x="972.02" y="1743.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="328.1" y="1653" width="0.2" height="15.0" fill="rgb(247,79,6)" rx="2" ry="2" />
<text  x="331.09" y="1663.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (1 samples, 0.02%)</title><rect x="164.6" y="1957" width="0.2" height="15.0" fill="rgb(241,117,42)" rx="2" ry="2" />
<text  x="167.59" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="274.8" y="1797" width="0.4" height="15.0" fill="rgb(249,38,21)" rx="2" ry="2" />
<text  x="277.78" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="343.5" y="1797" width="0.6" height="15.0" fill="rgb(234,45,53)" rx="2" ry="2" />
<text  x="346.55" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="339.2" y="1749" width="0.2" height="15.0" fill="rgb(235,77,35)" rx="2" ry="2" />
<text  x="342.19" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="736.0" y="1589" width="0.2" height="15.0" fill="rgb(232,224,26)" rx="2" ry="2" />
<text  x="738.96" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="630.5" y="1925" width="0.2" height="15.0" fill="rgb(245,57,14)" rx="2" ry="2" />
<text  x="633.52" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1007.3" y="1877" width="0.2" height="15.0" fill="rgb(252,90,14)" rx="2" ry="2" />
<text  x="1010.27" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="548.5" y="1973" width="0.2" height="15.0" fill="rgb(211,34,36)" rx="2" ry="2" />
<text  x="551.47" y="1983.5" ></text>
</g>
<g >
<title>sys_getsockname (25 samples, 0.42%)</title><rect x="596.4" y="1893" width="5.0" height="15.0" fill="rgb(222,218,49)" rx="2" ry="2" />
<text  x="599.43" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="121.0" y="149" width="0.2" height="15.0" fill="rgb(244,27,1)" rx="2" ry="2" />
<text  x="123.98" y="159.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.4" y="2037" width="0.2" height="15.0" fill="rgb(252,168,8)" rx="2" ry="2" />
<text  x="98.42" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="836.0" y="1829" width="0.2" height="15.0" fill="rgb(217,33,45)" rx="2" ry="2" />
<text  x="839.04" y="1839.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="973.0" y="2005" width="0.2" height="15.0" fill="rgb(214,115,21)" rx="2" ry="2" />
<text  x="975.99" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="669.6" y="1893" width="0.2" height="15.0" fill="rgb(226,21,42)" rx="2" ry="2" />
<text  x="672.56" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="957.9" y="1973" width="0.2" height="15.0" fill="rgb(216,209,46)" rx="2" ry="2" />
<text  x="960.92" y="1983.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="654.3" y="1973" width="0.2" height="15.0" fill="rgb(252,135,47)" rx="2" ry="2" />
<text  x="657.30" y="1983.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="343.9" y="1717" width="0.2" height="15.0" fill="rgb(234,59,46)" rx="2" ry="2" />
<text  x="346.94" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (16 samples, 0.27%)</title><rect x="1146.0" y="2037" width="3.2" height="15.0" fill="rgb(240,74,28)" rx="2" ry="2" />
<text  x="1149.00" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (3 samples, 0.05%)</title><rect x="517.4" y="1973" width="0.6" height="15.0" fill="rgb(253,226,51)" rx="2" ry="2" />
<text  x="520.36" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="259.7" y="1749" width="0.2" height="15.0" fill="rgb(234,157,42)" rx="2" ry="2" />
<text  x="262.71" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (99 samples, 1.66%)</title><rect x="922.8" y="2005" width="19.7" height="15.0" fill="rgb(246,17,47)" rx="2" ry="2" />
<text  x="925.85" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (2 samples, 0.03%)</title><rect x="139.8" y="1989" width="0.4" height="15.0" fill="rgb(217,57,39)" rx="2" ry="2" />
<text  x="142.81" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="511.6" y="1941" width="0.4" height="15.0" fill="rgb(251,26,36)" rx="2" ry="2" />
<text  x="514.61" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (21 samples, 0.35%)</title><rect x="892.1" y="2005" width="4.2" height="15.0" fill="rgb(252,227,12)" rx="2" ry="2" />
<text  x="895.13" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="154.1" y="1637" width="0.2" height="15.0" fill="rgb(232,200,0)" rx="2" ry="2" />
<text  x="157.08" y="1647.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="351.5" y="2021" width="2.7" height="15.0" fill="rgb(244,99,45)" rx="2" ry="2" />
<text  x="354.47" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="968.8" y="1813" width="0.4" height="15.0" fill="rgb(238,86,20)" rx="2" ry="2" />
<text  x="971.82" y="1823.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="804.1" y="1493" width="0.4" height="15.0" fill="rgb(219,91,17)" rx="2" ry="2" />
<text  x="807.13" y="1503.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="795.4" y="1477" width="0.2" height="15.0" fill="rgb(211,220,6)" rx="2" ry="2" />
<text  x="798.41" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="330.5" y="1733" width="0.2" height="15.0" fill="rgb(246,127,36)" rx="2" ry="2" />
<text  x="333.47" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="940.1" y="1957" width="0.2" height="15.0" fill="rgb(219,110,38)" rx="2" ry="2" />
<text  x="943.09" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="91.7" y="1957" width="0.3" height="15.0" fill="rgb(246,152,25)" rx="2" ry="2" />
<text  x="94.65" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="661.6" y="2021" width="0.2" height="15.0" fill="rgb(247,162,12)" rx="2" ry="2" />
<text  x="664.64" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="140.6" y="1973" width="0.2" height="15.0" fill="rgb(240,1,5)" rx="2" ry="2" />
<text  x="143.60" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="74.0" y="1957" width="0.2" height="15.0" fill="rgb(241,85,23)" rx="2" ry="2" />
<text  x="77.01" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="315.8" y="1685" width="0.2" height="15.0" fill="rgb(212,131,8)" rx="2" ry="2" />
<text  x="318.80" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="84.9" y="1909" width="0.2" height="15.0" fill="rgb(223,3,4)" rx="2" ry="2" />
<text  x="87.91" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1002.3" y="1909" width="0.4" height="15.0" fill="rgb(243,52,16)" rx="2" ry="2" />
<text  x="1005.32" y="1919.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (12 samples, 0.20%)</title><rect x="255.6" y="1941" width="2.3" height="15.0" fill="rgb(211,71,12)" rx="2" ry="2" />
<text  x="258.55" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="102.6" y="1349" width="20.6" height="15.0" fill="rgb(237,191,28)" rx="2" ry="2" />
<text  x="105.55" y="1359.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="414.9" y="1957" width="1.0" height="15.0" fill="rgb(253,54,40)" rx="2" ry="2" />
<text  x="417.89" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1023.1" y="2005" width="0.2" height="15.0" fill="rgb(230,93,46)" rx="2" ry="2" />
<text  x="1026.13" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="467.8" y="1925" width="0.8" height="15.0" fill="rgb(222,173,5)" rx="2" ry="2" />
<text  x="470.81" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="981" width="18.1" height="15.0" fill="rgb(242,6,31)" rx="2" ry="2" />
<text  x="106.35" y="991.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="382.8" y="1877" width="0.4" height="15.0" fill="rgb(208,63,35)" rx="2" ry="2" />
<text  x="385.79" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (2 samples, 0.03%)</title><rect x="916.3" y="2005" width="0.4" height="15.0" fill="rgb(207,78,12)" rx="2" ry="2" />
<text  x="919.31" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="730.4" y="1765" width="0.8" height="15.0" fill="rgb(220,107,28)" rx="2" ry="2" />
<text  x="733.41" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="252.8" y="1989" width="0.4" height="15.0" fill="rgb(232,116,42)" rx="2" ry="2" />
<text  x="255.78" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="950.8" y="1989" width="0.6" height="15.0" fill="rgb(254,187,43)" rx="2" ry="2" />
<text  x="953.79" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="343.5" y="1813" width="0.6" height="15.0" fill="rgb(237,212,54)" rx="2" ry="2" />
<text  x="346.55" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (3 samples, 0.05%)</title><rect x="577.4" y="1989" width="0.6" height="15.0" fill="rgb(207,34,47)" rx="2" ry="2" />
<text  x="580.41" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="597" width="17.9" height="15.0" fill="rgb(240,100,51)" rx="2" ry="2" />
<text  x="106.35" y="607.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="849.5" y="1733" width="0.2" height="15.0" fill="rgb(211,55,29)" rx="2" ry="2" />
<text  x="852.52" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="714.6" y="1861" width="0.3" height="15.0" fill="rgb(208,120,36)" rx="2" ry="2" />
<text  x="717.55" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (3 samples, 0.05%)</title><rect x="835.2" y="1829" width="0.6" height="15.0" fill="rgb(251,65,38)" rx="2" ry="2" />
<text  x="838.25" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="570.9" y="2005" width="0.6" height="15.0" fill="rgb(226,29,39)" rx="2" ry="2" />
<text  x="573.87" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="120.8" y="53" width="0.2" height="15.0" fill="rgb(225,15,27)" rx="2" ry="2" />
<text  x="123.79" y="63.5" ></text>
</g>
<g >
<title>malloc (27 samples, 0.45%)</title><rect x="1183.7" y="2053" width="5.3" height="15.0" fill="rgb(244,91,13)" rx="2" ry="2" />
<text  x="1186.66" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1119.8" y="1861" width="0.2" height="15.0" fill="rgb(247,106,14)" rx="2" ry="2" />
<text  x="1122.84" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="298.6" y="1525" width="0.6" height="15.0" fill="rgb(230,9,17)" rx="2" ry="2" />
<text  x="301.56" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="883.4" y="1925" width="0.2" height="15.0" fill="rgb(216,5,1)" rx="2" ry="2" />
<text  x="886.41" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (3 samples, 0.05%)</title><rect x="576.6" y="1973" width="0.6" height="15.0" fill="rgb(244,18,44)" rx="2" ry="2" />
<text  x="579.61" y="1983.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="757.2" y="1733" width="0.2" height="15.0" fill="rgb(230,22,2)" rx="2" ry="2" />
<text  x="760.16" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1107.0" y="1845" width="0.2" height="15.0" fill="rgb(214,142,27)" rx="2" ry="2" />
<text  x="1109.96" y="1855.5" ></text>
</g>
<g >
<title>SYSC_getpeername (19 samples, 0.32%)</title><rect x="674.7" y="1877" width="3.8" height="15.0" fill="rgb(247,13,53)" rx="2" ry="2" />
<text  x="677.72" y="1887.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="503.3" y="1877" width="0.2" height="15.0" fill="rgb(216,227,45)" rx="2" ry="2" />
<text  x="506.29" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="274.8" y="1637" width="0.4" height="15.0" fill="rgb(207,181,53)" rx="2" ry="2" />
<text  x="277.78" y="1647.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="979.5" y="2037" width="0.2" height="15.0" fill="rgb(228,186,7)" rx="2" ry="2" />
<text  x="982.53" y="2047.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="112.1" y="37" width="0.2" height="15.0" fill="rgb(250,119,32)" rx="2" ry="2" />
<text  x="115.07" y="47.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="62.3" y="1893" width="0.2" height="15.0" fill="rgb(209,83,17)" rx="2" ry="2" />
<text  x="65.32" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="994.4" y="1941" width="2.0" height="15.0" fill="rgb(233,77,51)" rx="2" ry="2" />
<text  x="997.39" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="57.2" y="1845" width="0.2" height="15.0" fill="rgb(236,6,24)" rx="2" ry="2" />
<text  x="60.17" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (4 samples, 0.07%)</title><rect x="862.2" y="1989" width="0.8" height="15.0" fill="rgb(248,132,48)" rx="2" ry="2" />
<text  x="865.20" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="30.0" y="1941" width="0.2" height="15.0" fill="rgb(207,171,54)" rx="2" ry="2" />
<text  x="33.02" y="1951.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="330.9" y="1813" width="0.2" height="15.0" fill="rgb(245,179,5)" rx="2" ry="2" />
<text  x="333.86" y="1823.5" ></text>
</g>
<g >
<title>event_active_nolock_ (5 samples, 0.08%)</title><rect x="98.8" y="2005" width="1.0" height="15.0" fill="rgb(212,143,6)" rx="2" ry="2" />
<text  x="101.79" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="805.9" y="1605" width="0.2" height="15.0" fill="rgb(205,79,16)" rx="2" ry="2" />
<text  x="808.92" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="872.9" y="1701" width="0.2" height="15.0" fill="rgb(252,147,23)" rx="2" ry="2" />
<text  x="875.90" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="50.8" y="1877" width="0.4" height="15.0" fill="rgb(207,52,39)" rx="2" ry="2" />
<text  x="53.83" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="458.9" y="1893" width="0.4" height="15.0" fill="rgb(229,194,12)" rx="2" ry="2" />
<text  x="461.89" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="342.0" y="1509" width="0.2" height="15.0" fill="rgb(231,109,26)" rx="2" ry="2" />
<text  x="344.96" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="172.7" y="1877" width="0.2" height="15.0" fill="rgb(233,181,40)" rx="2" ry="2" />
<text  x="175.71" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1147.0" y="1973" width="0.2" height="15.0" fill="rgb(208,140,43)" rx="2" ry="2" />
<text  x="1149.99" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1114.1" y="1445" width="0.2" height="15.0" fill="rgb(245,57,46)" rx="2" ry="2" />
<text  x="1117.09" y="1455.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.34%)</title><rect x="839.8" y="1893" width="4.0" height="15.0" fill="rgb(220,57,35)" rx="2" ry="2" />
<text  x="842.81" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="111.1" y="37" width="0.2" height="15.0" fill="rgb(212,3,13)" rx="2" ry="2" />
<text  x="114.07" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="71.2" y="1909" width="0.4" height="15.0" fill="rgb(230,33,41)" rx="2" ry="2" />
<text  x="74.24" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="655.3" y="1781" width="0.2" height="15.0" fill="rgb(245,10,54)" rx="2" ry="2" />
<text  x="658.29" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="274.8" y="1733" width="0.4" height="15.0" fill="rgb(251,171,15)" rx="2" ry="2" />
<text  x="277.78" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (1 samples, 0.02%)</title><rect x="94.0" y="2005" width="0.2" height="15.0" fill="rgb(244,153,18)" rx="2" ry="2" />
<text  x="97.03" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_accept (2 samples, 0.03%)</title><rect x="387.1" y="1957" width="0.4" height="15.0" fill="rgb(254,127,10)" rx="2" ry="2" />
<text  x="390.15" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="333.6" y="1733" width="0.2" height="15.0" fill="rgb(250,207,35)" rx="2" ry="2" />
<text  x="336.64" y="1743.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (24 samples, 0.40%)</title><rect x="198.7" y="2037" width="4.7" height="15.0" fill="rgb(254,63,19)" rx="2" ry="2" />
<text  x="201.67" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="992.6" y="1957" width="1.2" height="15.0" fill="rgb(225,33,43)" rx="2" ry="2" />
<text  x="995.61" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (111 samples, 1.86%)</title><rect x="212.0" y="1973" width="22.0" height="15.0" fill="rgb(231,62,38)" rx="2" ry="2" />
<text  x="214.95" y="1983.5" >f..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="640.2" y="1973" width="0.2" height="15.0" fill="rgb(219,182,36)" rx="2" ry="2" />
<text  x="643.23" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="256.5" y="1797" width="0.2" height="15.0" fill="rgb(222,105,18)" rx="2" ry="2" />
<text  x="259.54" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="70.2" y="1893" width="1.0" height="15.0" fill="rgb(226,46,18)" rx="2" ry="2" />
<text  x="73.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="113.7" y="37" width="0.1" height="15.0" fill="rgb(247,220,12)" rx="2" ry="2" />
<text  x="116.65" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1096.3" y="1861" width="0.2" height="15.0" fill="rgb(246,82,30)" rx="2" ry="2" />
<text  x="1099.26" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="660.8" y="2021" width="0.8" height="15.0" fill="rgb(206,175,52)" rx="2" ry="2" />
<text  x="663.84" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="984.3" y="1957" width="0.2" height="15.0" fill="rgb(250,92,47)" rx="2" ry="2" />
<text  x="987.28" y="1967.5" ></text>
</g>
<g >
<title>alloc_file (39 samples, 0.66%)</title><rect x="401.8" y="1941" width="7.7" height="15.0" fill="rgb(252,118,16)" rx="2" ry="2" />
<text  x="404.81" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (2 samples, 0.03%)</title><rect x="67.1" y="1941" width="0.4" height="15.0" fill="rgb(228,223,52)" rx="2" ry="2" />
<text  x="70.08" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="51.6" y="1797" width="0.2" height="15.0" fill="rgb(210,84,3)" rx="2" ry="2" />
<text  x="54.62" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="33.0" y="1973" width="0.2" height="15.0" fill="rgb(233,133,22)" rx="2" ry="2" />
<text  x="35.99" y="1983.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="321.0" y="1525" width="0.2" height="15.0" fill="rgb(252,94,12)" rx="2" ry="2" />
<text  x="323.95" y="1535.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="487.2" y="2021" width="0.2" height="15.0" fill="rgb(249,208,34)" rx="2" ry="2" />
<text  x="490.23" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="888.2" y="1717" width="0.2" height="15.0" fill="rgb(251,200,9)" rx="2" ry="2" />
<text  x="891.16" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="845.2" y="1925" width="0.2" height="15.0" fill="rgb(246,1,20)" rx="2" ry="2" />
<text  x="848.16" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="679.3" y="1909" width="1.0" height="15.0" fill="rgb(211,174,44)" rx="2" ry="2" />
<text  x="682.27" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="336.8" y="1893" width="1.0" height="15.0" fill="rgb(242,184,43)" rx="2" ry="2" />
<text  x="339.81" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.9" y="1893" width="0.2" height="15.0" fill="rgb(223,105,52)" rx="2" ry="2" />
<text  x="64.92" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="187.8" y="2021" width="0.2" height="15.0" fill="rgb(248,209,46)" rx="2" ry="2" />
<text  x="190.77" y="2031.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="315.2" y="1653" width="0.2" height="15.0" fill="rgb(248,84,19)" rx="2" ry="2" />
<text  x="318.21" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="225.4" y="1845" width="0.2" height="15.0" fill="rgb(225,172,9)" rx="2" ry="2" />
<text  x="228.43" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.6" y="1893" width="0.2" height="15.0" fill="rgb(214,8,2)" rx="2" ry="2" />
<text  x="77.61" y="1903.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (3 samples, 0.05%)</title><rect x="548.7" y="1957" width="0.6" height="15.0" fill="rgb(217,79,35)" rx="2" ry="2" />
<text  x="551.67" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (30 samples, 0.50%)</title><rect x="931.8" y="1909" width="5.9" height="15.0" fill="rgb(225,70,32)" rx="2" ry="2" />
<text  x="934.76" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="320.8" y="1669" width="0.4" height="15.0" fill="rgb(209,40,52)" rx="2" ry="2" />
<text  x="323.76" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="172.7" y="1989" width="0.2" height="15.0" fill="rgb(214,51,44)" rx="2" ry="2" />
<text  x="175.71" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (7 samples, 0.12%)</title><rect x="60.5" y="1909" width="1.4" height="15.0" fill="rgb(232,152,12)" rx="2" ry="2" />
<text  x="63.54" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="139.4" y="1989" width="0.2" height="15.0" fill="rgb(210,201,4)" rx="2" ry="2" />
<text  x="142.42" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1175.5" y="1733" width="0.2" height="15.0" fill="rgb(239,205,54)" rx="2" ry="2" />
<text  x="1178.53" y="1743.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="679.3" y="1893" width="1.0" height="15.0" fill="rgb(219,47,19)" rx="2" ry="2" />
<text  x="682.27" y="1903.5" ></text>
</g>
<g >
<title>__ip_local_out (13 samples, 0.22%)</title><rect x="776.8" y="1637" width="2.6" height="15.0" fill="rgb(211,41,11)" rx="2" ry="2" />
<text  x="779.78" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="860.2" y="1957" width="0.2" height="15.0" fill="rgb(227,190,32)" rx="2" ry="2" />
<text  x="863.22" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="294.4" y="1717" width="0.2" height="15.0" fill="rgb(221,147,38)" rx="2" ry="2" />
<text  x="297.40" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.1" y="1989" width="0.2" height="15.0" fill="rgb(221,213,2)" rx="2" ry="2" />
<text  x="923.07" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="339.0" y="1941" width="0.4" height="15.0" fill="rgb(225,104,32)" rx="2" ry="2" />
<text  x="341.99" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="921.3" y="2021" width="0.2" height="15.0" fill="rgb(242,190,4)" rx="2" ry="2" />
<text  x="924.26" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (5 samples, 0.08%)</title><rect x="633.3" y="2005" width="1.0" height="15.0" fill="rgb(248,65,52)" rx="2" ry="2" />
<text  x="636.30" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (3 samples, 0.05%)</title><rect x="513.2" y="1957" width="0.6" height="15.0" fill="rgb(252,128,25)" rx="2" ry="2" />
<text  x="516.19" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="231.2" y="1877" width="0.2" height="15.0" fill="rgb(247,179,7)" rx="2" ry="2" />
<text  x="234.18" y="1887.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (40 samples, 0.67%)</title><rect x="1099.8" y="1925" width="8.0" height="15.0" fill="rgb(220,101,24)" rx="2" ry="2" />
<text  x="1102.83" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="153.1" y="1893" width="0.2" height="15.0" fill="rgb(214,124,20)" rx="2" ry="2" />
<text  x="156.09" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="505.9" y="1829" width="0.2" height="15.0" fill="rgb(248,114,35)" rx="2" ry="2" />
<text  x="508.86" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="138.4" y="1989" width="1.0" height="15.0" fill="rgb(232,119,32)" rx="2" ry="2" />
<text  x="141.42" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="331.3" y="1781" width="0.2" height="15.0" fill="rgb(252,42,42)" rx="2" ry="2" />
<text  x="334.26" y="1791.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (2 samples, 0.03%)</title><rect x="769.1" y="1701" width="0.3" height="15.0" fill="rgb(247,76,3)" rx="2" ry="2" />
<text  x="772.05" y="1711.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1181.5" y="2037" width="0.6" height="15.0" fill="rgb(251,132,44)" rx="2" ry="2" />
<text  x="1184.48" y="2047.5" ></text>
</g>
<g >
<title>__libc_sendmsg (551 samples, 9.25%)</title><rect x="236.9" y="2037" width="109.2" height="15.0" fill="rgb(212,66,45)" rx="2" ry="2" />
<text  x="239.92" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="120.6" y="69" width="0.2" height="15.0" fill="rgb(213,81,27)" rx="2" ry="2" />
<text  x="123.59" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock (41 samples, 0.69%)</title><rect x="787.5" y="1541" width="8.1" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="790.48" y="1551.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1067.1" y="1941" width="0.2" height="15.0" fill="rgb(237,50,34)" rx="2" ry="2" />
<text  x="1070.12" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="596.2" y="1829" width="0.2" height="15.0" fill="rgb(218,16,37)" rx="2" ry="2" />
<text  x="599.23" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="898.9" y="1941" width="0.2" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="901.86" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="888.2" y="1909" width="0.2" height="15.0" fill="rgb(231,229,45)" rx="2" ry="2" />
<text  x="891.16" y="1919.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="617.8" y="1845" width="0.2" height="15.0" fill="rgb(236,65,19)" rx="2" ry="2" />
<text  x="620.84" y="1855.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="546.3" y="1957" width="0.4" height="15.0" fill="rgb(224,146,0)" rx="2" ry="2" />
<text  x="549.29" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="521.9" y="1957" width="0.2" height="15.0" fill="rgb(209,77,53)" rx="2" ry="2" />
<text  x="524.91" y="1967.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="342.4" y="1973" width="0.2" height="15.0" fill="rgb(228,132,22)" rx="2" ry="2" />
<text  x="345.36" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="33.0" y="1909" width="0.2" height="15.0" fill="rgb(234,142,9)" rx="2" ry="2" />
<text  x="35.99" y="1919.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="197.9" y="2037" width="0.2" height="15.0" fill="rgb(224,42,33)" rx="2" ry="2" />
<text  x="200.88" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (2 samples, 0.03%)</title><rect x="714.6" y="1909" width="0.3" height="15.0" fill="rgb(220,197,9)" rx="2" ry="2" />
<text  x="717.55" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="71.6" y="1925" width="0.2" height="15.0" fill="rgb(233,48,31)" rx="2" ry="2" />
<text  x="74.64" y="1935.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="972.0" y="2021" width="0.4" height="15.0" fill="rgb(250,120,50)" rx="2" ry="2" />
<text  x="975.00" y="2031.5" ></text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="739.9" y="1717" width="0.2" height="15.0" fill="rgb(242,48,48)" rx="2" ry="2" />
<text  x="742.92" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="61.9" y="1861" width="0.2" height="15.0" fill="rgb(206,118,46)" rx="2" ry="2" />
<text  x="64.92" y="1871.5" ></text>
</g>
<g >
<title>destroy_inode (22 samples, 0.37%)</title><rect x="741.9" y="1701" width="4.4" height="15.0" fill="rgb(230,147,27)" rx="2" ry="2" />
<text  x="744.90" y="1711.5" ></text>
</g>
<g >
<title>sock_alloc_file (68 samples, 1.14%)</title><rect x="401.4" y="1957" width="13.5" height="15.0" fill="rgb(215,78,9)" rx="2" ry="2" />
<text  x="404.42" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="460.7" y="1669" width="0.2" height="15.0" fill="rgb(233,110,36)" rx="2" ry="2" />
<text  x="463.68" y="1679.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (7 samples, 0.12%)</title><rect x="548.5" y="1989" width="1.4" height="15.0" fill="rgb(218,133,32)" rx="2" ry="2" />
<text  x="551.47" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="171.3" y="1861" width="0.2" height="15.0" fill="rgb(211,110,33)" rx="2" ry="2" />
<text  x="174.32" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="617.0" y="1829" width="0.2" height="15.0" fill="rgb(238,217,38)" rx="2" ry="2" />
<text  x="620.04" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="325.3" y="1765" width="0.2" height="15.0" fill="rgb(212,49,49)" rx="2" ry="2" />
<text  x="328.31" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="707.2" y="1669" width="0.2" height="15.0" fill="rgb(223,39,17)" rx="2" ry="2" />
<text  x="710.22" y="1679.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (3 samples, 0.05%)</title><rect x="80.6" y="1877" width="0.5" height="15.0" fill="rgb(214,112,31)" rx="2" ry="2" />
<text  x="83.55" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="57.2" y="1877" width="0.2" height="15.0" fill="rgb(207,42,50)" rx="2" ry="2" />
<text  x="60.17" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="478.1" y="1701" width="0.2" height="15.0" fill="rgb(242,207,39)" rx="2" ry="2" />
<text  x="481.12" y="1711.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="194.9" y="2021" width="0.2" height="15.0" fill="rgb(240,81,29)" rx="2" ry="2" />
<text  x="197.91" y="2031.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1105.4" y="1893" width="0.2" height="15.0" fill="rgb(236,112,54)" rx="2" ry="2" />
<text  x="1108.37" y="1903.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="172.3" y="1973" width="0.2" height="15.0" fill="rgb(240,121,0)" rx="2" ry="2" />
<text  x="175.31" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="895.9" y="1893" width="0.2" height="15.0" fill="rgb(217,65,12)" rx="2" ry="2" />
<text  x="898.89" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="693" width="18.1" height="15.0" fill="rgb(254,227,49)" rx="2" ry="2" />
<text  x="106.35" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="872.9" y="1765" width="0.2" height="15.0" fill="rgb(213,154,14)" rx="2" ry="2" />
<text  x="875.90" y="1775.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="322.5" y="1829" width="0.2" height="15.0" fill="rgb(253,150,48)" rx="2" ry="2" />
<text  x="325.54" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="576.4" y="1925" width="0.2" height="15.0" fill="rgb(213,75,51)" rx="2" ry="2" />
<text  x="579.42" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="33.0" y="1685" width="0.2" height="15.0" fill="rgb(209,24,16)" rx="2" ry="2" />
<text  x="35.99" y="1695.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(239,153,0)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1015.2" y="2021" width="0.2" height="15.0" fill="rgb(242,22,34)" rx="2" ry="2" />
<text  x="1018.20" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (5 samples, 0.08%)</title><rect x="864.8" y="1989" width="1.0" height="15.0" fill="rgb(244,55,29)" rx="2" ry="2" />
<text  x="867.78" y="1999.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="132.1" y="2005" width="0.2" height="15.0" fill="rgb(249,185,31)" rx="2" ry="2" />
<text  x="135.08" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.13%)</title><rect x="940.7" y="1957" width="1.6" height="15.0" fill="rgb(225,77,45)" rx="2" ry="2" />
<text  x="943.68" y="1967.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="984.3" y="1685" width="0.2" height="15.0" fill="rgb(254,140,38)" rx="2" ry="2" />
<text  x="987.28" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="341.8" y="1733" width="0.4" height="15.0" fill="rgb(254,92,28)" rx="2" ry="2" />
<text  x="344.76" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="150.9" y="1877" width="0.4" height="15.0" fill="rgb(236,73,30)" rx="2" ry="2" />
<text  x="153.91" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="917.9" y="2005" width="0.6" height="15.0" fill="rgb(234,186,29)" rx="2" ry="2" />
<text  x="920.89" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (75 samples, 1.26%)</title><rect x="606.5" y="2021" width="14.9" height="15.0" fill="rgb(248,86,21)" rx="2" ry="2" />
<text  x="609.54" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="58.4" y="1925" width="0.4" height="15.0" fill="rgb(253,68,19)" rx="2" ry="2" />
<text  x="61.36" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="322.5" y="1573" width="0.2" height="15.0" fill="rgb(218,17,27)" rx="2" ry="2" />
<text  x="325.54" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (7 samples, 0.12%)</title><rect x="765.9" y="1701" width="1.4" height="15.0" fill="rgb(250,187,9)" rx="2" ry="2" />
<text  x="768.88" y="1711.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="710.0" y="1989" width="0.2" height="15.0" fill="rgb(235,3,35)" rx="2" ry="2" />
<text  x="712.99" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="630.3" y="1893" width="0.2" height="15.0" fill="rgb(223,9,48)" rx="2" ry="2" />
<text  x="633.32" y="1903.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="148.9" y="1829" width="0.2" height="15.0" fill="rgb(207,33,12)" rx="2" ry="2" />
<text  x="151.93" y="1839.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="127.7" y="1589" width="0.2" height="15.0" fill="rgb(231,73,28)" rx="2" ry="2" />
<text  x="130.72" y="1599.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (15 samples, 0.25%)</title><rect x="271.6" y="1877" width="3.0" height="15.0" fill="rgb(234,164,2)" rx="2" ry="2" />
<text  x="274.61" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="13.8" y="1829" width="0.2" height="15.0" fill="rgb(234,214,42)" rx="2" ry="2" />
<text  x="16.77" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="984.3" y="1909" width="0.2" height="15.0" fill="rgb(230,69,25)" rx="2" ry="2" />
<text  x="987.28" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.15%)</title><rect x="594.6" y="1861" width="1.8" height="15.0" fill="rgb(243,96,35)" rx="2" ry="2" />
<text  x="597.65" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="984.3" y="1829" width="0.2" height="15.0" fill="rgb(253,141,18)" rx="2" ry="2" />
<text  x="987.28" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="60.9" y="1893" width="1.0" height="15.0" fill="rgb(224,135,47)" rx="2" ry="2" />
<text  x="63.93" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="617.4" y="1813" width="0.2" height="15.0" fill="rgb(225,67,51)" rx="2" ry="2" />
<text  x="620.44" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="707.2" y="1909" width="0.2" height="15.0" fill="rgb(224,188,34)" rx="2" ry="2" />
<text  x="710.22" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="321.4" y="1813" width="0.5" height="15.0" fill="rgb(226,157,29)" rx="2" ry="2" />
<text  x="324.35" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 1.88%)</title><rect x="102.6" y="1573" width="22.1" height="15.0" fill="rgb(230,189,40)" rx="2" ry="2" />
<text  x="105.55" y="1583.5" >[..</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1083.8" y="1813" width="0.2" height="15.0" fill="rgb(236,93,54)" rx="2" ry="2" />
<text  x="1086.77" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1033.4" y="1909" width="0.2" height="15.0" fill="rgb(229,95,47)" rx="2" ry="2" />
<text  x="1036.43" y="1919.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="29.4" y="1989" width="0.2" height="15.0" fill="rgb(233,216,50)" rx="2" ry="2" />
<text  x="32.42" y="1999.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (2 samples, 0.03%)</title><rect x="889.0" y="1909" width="0.4" height="15.0" fill="rgb(218,32,32)" rx="2" ry="2" />
<text  x="891.96" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (4 samples, 0.07%)</title><rect x="628.9" y="1989" width="0.8" height="15.0" fill="rgb(217,122,6)" rx="2" ry="2" />
<text  x="631.94" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="323.1" y="1749" width="0.2" height="15.0" fill="rgb(220,136,38)" rx="2" ry="2" />
<text  x="326.13" y="1759.5" ></text>
</g>
<g >
<title>epoll_wait (95 samples, 1.60%)</title><rect x="486.8" y="2037" width="18.9" height="15.0" fill="rgb(211,52,14)" rx="2" ry="2" />
<text  x="489.84" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="127.7" y="1893" width="0.2" height="15.0" fill="rgb(212,183,32)" rx="2" ry="2" />
<text  x="130.72" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="322.5" y="1733" width="0.2" height="15.0" fill="rgb(229,67,50)" rx="2" ry="2" />
<text  x="325.54" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="325.3" y="1797" width="0.2" height="15.0" fill="rgb(251,134,47)" rx="2" ry="2" />
<text  x="328.31" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.8" y="1973" width="0.2" height="15.0" fill="rgb(231,182,14)" rx="2" ry="2" />
<text  x="1175.76" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="259.1" y="1893" width="0.8" height="15.0" fill="rgb(208,201,47)" rx="2" ry="2" />
<text  x="262.12" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.2" y="1861" width="0.2" height="15.0" fill="rgb(216,211,16)" rx="2" ry="2" />
<text  x="163.23" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(216,160,41)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="441.1" y="1989" width="0.4" height="15.0" fill="rgb(228,6,18)" rx="2" ry="2" />
<text  x="444.05" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="259.7" y="1717" width="0.2" height="15.0" fill="rgb(237,150,10)" rx="2" ry="2" />
<text  x="262.71" y="1727.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="154.1" y="1669" width="0.2" height="15.0" fill="rgb(222,32,13)" rx="2" ry="2" />
<text  x="157.08" y="1679.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="287.3" y="1845" width="0.4" height="15.0" fill="rgb(244,52,32)" rx="2" ry="2" />
<text  x="290.26" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="145.6" y="1893" width="0.2" height="15.0" fill="rgb(237,162,47)" rx="2" ry="2" />
<text  x="148.56" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="141.4" y="2005" width="0.2" height="15.0" fill="rgb(215,104,35)" rx="2" ry="2" />
<text  x="144.40" y="2015.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="747.3" y="1557" width="0.2" height="15.0" fill="rgb(253,228,4)" rx="2" ry="2" />
<text  x="750.25" y="1567.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="343.2" y="1941" width="0.1" height="15.0" fill="rgb(223,113,14)" rx="2" ry="2" />
<text  x="346.15" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="180.0" y="1941" width="0.6" height="15.0" fill="rgb(220,55,30)" rx="2" ry="2" />
<text  x="183.04" y="1951.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="478.5" y="2005" width="0.4" height="15.0" fill="rgb(238,218,49)" rx="2" ry="2" />
<text  x="481.51" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (260 samples, 4.37%)</title><rect x="427.4" y="2021" width="51.5" height="15.0" fill="rgb(232,169,17)" rx="2" ry="2" />
<text  x="430.38" y="2031.5" >entry..</text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (2 samples, 0.03%)</title><rect x="848.5" y="1941" width="0.4" height="15.0" fill="rgb(244,34,6)" rx="2" ry="2" />
<text  x="851.53" y="1951.5" ></text>
</g>
<g >
<title>pgd_free (1 samples, 0.02%)</title><rect x="10.2" y="1877" width="0.2" height="15.0" fill="rgb(254,184,16)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="519.3" y="1973" width="0.4" height="15.0" fill="rgb(230,133,44)" rx="2" ry="2" />
<text  x="522.34" y="1983.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="413.5" y="1909" width="0.2" height="15.0" fill="rgb(205,217,26)" rx="2" ry="2" />
<text  x="416.51" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (52 samples, 0.87%)</title><rect x="906.6" y="2037" width="10.3" height="15.0" fill="rgb(222,183,4)" rx="2" ry="2" />
<text  x="909.59" y="2047.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="735.0" y="1781" width="1.2" height="15.0" fill="rgb(214,140,11)" rx="2" ry="2" />
<text  x="737.96" y="1791.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="567.3" y="1925" width="0.2" height="15.0" fill="rgb(218,76,34)" rx="2" ry="2" />
<text  x="570.30" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="253.0" y="1877" width="0.2" height="15.0" fill="rgb(241,158,9)" rx="2" ry="2" />
<text  x="255.98" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="215.3" y="1733" width="0.2" height="15.0" fill="rgb(245,183,7)" rx="2" ry="2" />
<text  x="218.32" y="1743.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (11 samples, 0.18%)</title><rect x="95.6" y="2053" width="2.2" height="15.0" fill="rgb(232,129,18)" rx="2" ry="2" />
<text  x="98.62" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (7 samples, 0.12%)</title><rect x="543.7" y="1957" width="1.4" height="15.0" fill="rgb(254,148,28)" rx="2" ry="2" />
<text  x="546.72" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1169.6" y="2021" width="0.4" height="15.0" fill="rgb(247,128,17)" rx="2" ry="2" />
<text  x="1172.59" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="343.5" y="1877" width="0.6" height="15.0" fill="rgb(241,44,52)" rx="2" ry="2" />
<text  x="346.55" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (12 samples, 0.20%)</title><rect x="155.1" y="1909" width="2.4" height="15.0" fill="rgb(238,95,53)" rx="2" ry="2" />
<text  x="158.07" y="1919.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (251 samples, 4.22%)</title><rect x="768.7" y="1717" width="49.7" height="15.0" fill="rgb(209,35,0)" rx="2" ry="2" />
<text  x="771.66" y="1727.5" >__tcp..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="742.7" y="1637" width="0.2" height="15.0" fill="rgb(253,174,38)" rx="2" ry="2" />
<text  x="745.69" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="934.9" y="1877" width="0.4" height="15.0" fill="rgb(209,121,5)" rx="2" ry="2" />
<text  x="937.93" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.0" y="1893" width="0.2" height="15.0" fill="rgb(220,222,33)" rx="2" ry="2" />
<text  x="538.99" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="339.2" y="1813" width="0.2" height="15.0" fill="rgb(207,28,17)" rx="2" ry="2" />
<text  x="342.19" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="281.7" y="1797" width="0.2" height="15.0" fill="rgb(252,130,36)" rx="2" ry="2" />
<text  x="284.71" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="230.4" y="1893" width="0.2" height="15.0" fill="rgb(249,96,9)" rx="2" ry="2" />
<text  x="233.38" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="868.7" y="1989" width="0.4" height="15.0" fill="rgb(211,119,34)" rx="2" ry="2" />
<text  x="871.74" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="616.8" y="1621" width="0.2" height="15.0" fill="rgb(235,6,26)" rx="2" ry="2" />
<text  x="619.85" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="127.7" y="1749" width="0.2" height="15.0" fill="rgb(245,96,4)" rx="2" ry="2" />
<text  x="130.72" y="1759.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.3" y="1861" width="0.2" height="15.0" fill="rgb(234,209,10)" rx="2" ry="2" />
<text  x="543.35" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="215.3" y="1781" width="0.2" height="15.0" fill="rgb(216,108,35)" rx="2" ry="2" />
<text  x="218.32" y="1791.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="519.1" y="1973" width="0.2" height="15.0" fill="rgb(249,5,25)" rx="2" ry="2" />
<text  x="522.14" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="47.3" y="1877" width="0.2" height="15.0" fill="rgb(240,135,30)" rx="2" ry="2" />
<text  x="50.26" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="174.9" y="1973" width="1.0" height="15.0" fill="rgb(228,93,24)" rx="2" ry="2" />
<text  x="177.89" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="512.6" y="1957" width="0.2" height="15.0" fill="rgb(227,40,24)" rx="2" ry="2" />
<text  x="515.60" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="533.0" y="1973" width="0.4" height="15.0" fill="rgb(236,223,48)" rx="2" ry="2" />
<text  x="536.01" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (15 samples, 0.25%)</title><rect x="967.8" y="2037" width="3.0" height="15.0" fill="rgb(208,137,49)" rx="2" ry="2" />
<text  x="970.83" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="274.8" y="1717" width="0.4" height="15.0" fill="rgb(212,195,7)" rx="2" ry="2" />
<text  x="277.78" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="890.7" y="1877" width="0.2" height="15.0" fill="rgb(219,58,26)" rx="2" ry="2" />
<text  x="893.74" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.18%)</title><rect x="524.1" y="2005" width="2.2" height="15.0" fill="rgb(225,211,51)" rx="2" ry="2" />
<text  x="527.09" y="2015.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="324.9" y="1813" width="0.2" height="15.0" fill="rgb(205,224,2)" rx="2" ry="2" />
<text  x="327.92" y="1823.5" ></text>
</g>
<g >
<title>sys_sendmsg (451 samples, 7.57%)</title><rect x="253.2" y="1989" width="89.4" height="15.0" fill="rgb(205,34,42)" rx="2" ry="2" />
<text  x="256.17" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="1009.8" y="1973" width="0.6" height="15.0" fill="rgb(244,211,15)" rx="2" ry="2" />
<text  x="1012.85" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="215.3" y="1909" width="0.2" height="15.0" fill="rgb(243,82,48)" rx="2" ry="2" />
<text  x="218.32" y="1919.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="406.4" y="1893" width="0.2" height="15.0" fill="rgb(241,210,22)" rx="2" ry="2" />
<text  x="409.37" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="883.0" y="1925" width="0.4" height="15.0" fill="rgb(232,117,31)" rx="2" ry="2" />
<text  x="886.01" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="844.8" y="1877" width="0.2" height="15.0" fill="rgb(205,216,54)" rx="2" ry="2" />
<text  x="847.76" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1188.8" y="1909" width="0.2" height="15.0" fill="rgb(213,140,46)" rx="2" ry="2" />
<text  x="1191.81" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="594.6" y="1765" width="0.2" height="15.0" fill="rgb(219,189,11)" rx="2" ry="2" />
<text  x="597.65" y="1775.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="33.0" y="1525" width="0.2" height="15.0" fill="rgb(240,70,19)" rx="2" ry="2" />
<text  x="35.99" y="1535.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="76.6" y="1957" width="0.2" height="15.0" fill="rgb(236,67,14)" rx="2" ry="2" />
<text  x="79.59" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="132.3" y="1957" width="1.4" height="15.0" fill="rgb(252,139,28)" rx="2" ry="2" />
<text  x="135.28" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="81.1" y="1941" width="0.2" height="15.0" fill="rgb(219,208,49)" rx="2" ry="2" />
<text  x="84.15" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="156.9" y="1861" width="0.6" height="15.0" fill="rgb(244,18,31)" rx="2" ry="2" />
<text  x="159.86" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="240.1" y="2021" width="0.6" height="15.0" fill="rgb(244,4,23)" rx="2" ry="2" />
<text  x="243.09" y="2031.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="186.2" y="1941" width="0.6" height="15.0" fill="rgb(230,51,6)" rx="2" ry="2" />
<text  x="189.19" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="293.4" y="1765" width="0.4" height="15.0" fill="rgb(222,25,43)" rx="2" ry="2" />
<text  x="296.41" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="174.3" y="1989" width="0.2" height="15.0" fill="rgb(252,76,19)" rx="2" ry="2" />
<text  x="177.30" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="684.0" y="1781" width="0.2" height="15.0" fill="rgb(205,175,12)" rx="2" ry="2" />
<text  x="687.03" y="1791.5" ></text>
</g>
<g >
<title>mod_timer (12 samples, 0.20%)</title><rect x="813.8" y="1621" width="2.4" height="15.0" fill="rgb(215,173,15)" rx="2" ry="2" />
<text  x="816.84" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="103.3" y="181" width="17.5" height="15.0" fill="rgb(212,154,12)" rx="2" ry="2" />
<text  x="106.35" y="191.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="601.2" y="1877" width="0.2" height="15.0" fill="rgb(235,171,16)" rx="2" ry="2" />
<text  x="604.19" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (1 samples, 0.02%)</title><rect x="984.3" y="2005" width="0.2" height="15.0" fill="rgb(237,224,16)" rx="2" ry="2" />
<text  x="987.28" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (5 samples, 0.08%)</title><rect x="573.4" y="2005" width="1.0" height="15.0" fill="rgb(250,198,33)" rx="2" ry="2" />
<text  x="576.44" y="2015.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (61 samples, 1.02%)</title><rect x="1108.0" y="1925" width="12.0" height="15.0" fill="rgb(238,39,5)" rx="2" ry="2" />
<text  x="1110.95" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="69.3" y="1669" width="0.2" height="15.0" fill="rgb(240,177,14)" rx="2" ry="2" />
<text  x="72.26" y="1679.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1022.3" y="1973" width="0.4" height="15.0" fill="rgb(236,103,36)" rx="2" ry="2" />
<text  x="1025.33" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="383.0" y="1733" width="0.2" height="15.0" fill="rgb(228,91,21)" rx="2" ry="2" />
<text  x="385.99" y="1743.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="131.7" y="1845" width="0.2" height="15.0" fill="rgb(237,199,51)" rx="2" ry="2" />
<text  x="134.69" y="1855.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (18 samples, 0.30%)</title><rect x="278.1" y="1845" width="3.6" height="15.0" fill="rgb(227,117,10)" rx="2" ry="2" />
<text  x="281.15" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (3 samples, 0.05%)</title><rect x="900.6" y="2037" width="0.6" height="15.0" fill="rgb(241,206,49)" rx="2" ry="2" />
<text  x="903.65" y="2047.5" ></text>
</g>
<g >
<title>futex_wait (14 samples, 0.24%)</title><rect x="14.6" y="1973" width="2.7" height="15.0" fill="rgb(231,79,33)" rx="2" ry="2" />
<text  x="17.56" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="1003.1" y="1925" width="0.2" height="15.0" fill="rgb(218,221,31)" rx="2" ry="2" />
<text  x="1006.11" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1096.3" y="1765" width="0.2" height="15.0" fill="rgb(205,123,52)" rx="2" ry="2" />
<text  x="1099.26" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="849.5" y="1621" width="0.2" height="15.0" fill="rgb(211,206,10)" rx="2" ry="2" />
<text  x="852.52" y="1631.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="297.4" y="1493" width="0.2" height="15.0" fill="rgb(243,133,10)" rx="2" ry="2" />
<text  x="300.37" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="103.3" y="69" width="13.5" height="15.0" fill="rgb(228,83,12)" rx="2" ry="2" />
<text  x="106.35" y="79.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.02%)</title><rect x="10.2" y="1861" width="0.2" height="15.0" fill="rgb(234,23,19)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (3 samples, 0.05%)</title><rect x="172.9" y="1989" width="0.6" height="15.0" fill="rgb(208,47,32)" rx="2" ry="2" />
<text  x="175.91" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="826.7" y="1589" width="0.4" height="15.0" fill="rgb(241,124,49)" rx="2" ry="2" />
<text  x="829.72" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="984.3" y="1813" width="0.2" height="15.0" fill="rgb(245,36,7)" rx="2" ry="2" />
<text  x="987.28" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="596.2" y="1717" width="0.2" height="15.0" fill="rgb(230,197,25)" rx="2" ry="2" />
<text  x="599.23" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="161.4" y="1669" width="0.2" height="15.0" fill="rgb(212,84,35)" rx="2" ry="2" />
<text  x="164.41" y="1679.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="706.0" y="1973" width="0.2" height="15.0" fill="rgb(241,7,21)" rx="2" ry="2" />
<text  x="709.03" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="826.7" y="1701" width="0.4" height="15.0" fill="rgb(212,214,22)" rx="2" ry="2" />
<text  x="829.72" y="1711.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="700.5" y="1877" width="0.4" height="15.0" fill="rgb(234,125,25)" rx="2" ry="2" />
<text  x="703.48" y="1887.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="1146.4" y="1925" width="0.2" height="15.0" fill="rgb(212,180,27)" rx="2" ry="2" />
<text  x="1149.40" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="162.2" y="1893" width="0.2" height="15.0" fill="rgb(246,213,2)" rx="2" ry="2" />
<text  x="165.21" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="284.3" y="1573" width="0.2" height="15.0" fill="rgb(207,218,42)" rx="2" ry="2" />
<text  x="287.29" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1096.3" y="1797" width="0.2" height="15.0" fill="rgb(209,28,37)" rx="2" ry="2" />
<text  x="1099.26" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="583.9" y="1941" width="1.8" height="15.0" fill="rgb(213,136,22)" rx="2" ry="2" />
<text  x="586.95" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (5 samples, 0.08%)</title><rect x="70.2" y="1909" width="1.0" height="15.0" fill="rgb(221,17,8)" rx="2" ry="2" />
<text  x="73.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="85.1" y="1925" width="0.4" height="15.0" fill="rgb(239,3,48)" rx="2" ry="2" />
<text  x="88.11" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="82.3" y="1925" width="0.2" height="15.0" fill="rgb(207,174,33)" rx="2" ry="2" />
<text  x="85.34" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (53 samples, 0.89%)</title><rect x="608.5" y="1957" width="10.5" height="15.0" fill="rgb(210,146,9)" rx="2" ry="2" />
<text  x="611.52" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="498.5" y="1701" width="0.4" height="15.0" fill="rgb(241,150,13)" rx="2" ry="2" />
<text  x="501.53" y="1711.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="857.4" y="1941" width="0.2" height="15.0" fill="rgb(251,50,19)" rx="2" ry="2" />
<text  x="860.44" y="1951.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (25 samples, 0.42%)</title><rect x="325.7" y="1797" width="5.0" height="15.0" fill="rgb(241,182,30)" rx="2" ry="2" />
<text  x="328.71" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="540.7" y="1925" width="0.2" height="15.0" fill="rgb(234,26,22)" rx="2" ry="2" />
<text  x="543.74" y="1935.5" ></text>
</g>
<g >
<title>folly::operator!= (7 samples, 0.12%)</title><rect x="31.0" y="1989" width="1.4" height="15.0" fill="rgb(206,211,49)" rx="2" ry="2" />
<text  x="34.01" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="322.5" y="1765" width="0.2" height="15.0" fill="rgb(233,31,14)" rx="2" ry="2" />
<text  x="325.54" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="547.3" y="1717" width="0.2" height="15.0" fill="rgb(220,50,35)" rx="2" ry="2" />
<text  x="550.28" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1168.6" y="2053" width="0.2" height="15.0" fill="rgb(230,176,31)" rx="2" ry="2" />
<text  x="1171.60" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="140.2" y="1989" width="0.6" height="15.0" fill="rgb(215,61,44)" rx="2" ry="2" />
<text  x="143.21" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="161.6" y="1733" width="0.2" height="15.0" fill="rgb(208,54,30)" rx="2" ry="2" />
<text  x="164.61" y="1743.5" ></text>
</g>
<g >
<title>__alloc_skb (45 samples, 0.76%)</title><rect x="275.6" y="1861" width="8.9" height="15.0" fill="rgb(236,63,30)" rx="2" ry="2" />
<text  x="278.57" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="846.5" y="1893" width="0.2" height="15.0" fill="rgb(209,201,25)" rx="2" ry="2" />
<text  x="849.54" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="684.0" y="1893" width="0.2" height="15.0" fill="rgb(217,181,1)" rx="2" ry="2" />
<text  x="687.03" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="968.8" y="1925" width="0.4" height="15.0" fill="rgb(223,174,28)" rx="2" ry="2" />
<text  x="971.82" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="669.0" y="1893" width="0.2" height="15.0" fill="rgb(210,130,30)" rx="2" ry="2" />
<text  x="671.97" y="1903.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="343.2" y="1973" width="0.1" height="15.0" fill="rgb(244,151,28)" rx="2" ry="2" />
<text  x="346.15" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1163.6" y="1733" width="0.2" height="15.0" fill="rgb(232,102,3)" rx="2" ry="2" />
<text  x="1166.64" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="921.5" y="2021" width="0.4" height="15.0" fill="rgb(239,56,14)" rx="2" ry="2" />
<text  x="924.46" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="335.6" y="1813" width="0.2" height="15.0" fill="rgb(232,215,23)" rx="2" ry="2" />
<text  x="338.62" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="86.3" y="1973" width="0.2" height="15.0" fill="rgb(254,140,24)" rx="2" ry="2" />
<text  x="89.30" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="993.6" y="1941" width="0.2" height="15.0" fill="rgb(226,75,3)" rx="2" ry="2" />
<text  x="996.60" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="57.6" y="1941" width="0.6" height="15.0" fill="rgb(225,49,35)" rx="2" ry="2" />
<text  x="60.56" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="128.3" y="1909" width="0.2" height="15.0" fill="rgb(208,198,32)" rx="2" ry="2" />
<text  x="131.32" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="866.8" y="1989" width="0.4" height="15.0" fill="rgb(213,99,23)" rx="2" ry="2" />
<text  x="869.76" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="284.3" y="1749" width="0.2" height="15.0" fill="rgb(232,192,20)" rx="2" ry="2" />
<text  x="287.29" y="1759.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (10 samples, 0.17%)</title><rect x="508.6" y="1957" width="2.0" height="15.0" fill="rgb(230,225,53)" rx="2" ry="2" />
<text  x="511.64" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="271.4" y="1829" width="0.2" height="15.0" fill="rgb(206,20,46)" rx="2" ry="2" />
<text  x="274.41" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="90.1" y="1957" width="0.2" height="15.0" fill="rgb(241,63,42)" rx="2" ry="2" />
<text  x="93.07" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1007.3" y="1989" width="0.2" height="15.0" fill="rgb(215,36,28)" rx="2" ry="2" />
<text  x="1010.27" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="343.3" y="1973" width="0.8" height="15.0" fill="rgb(244,228,5)" rx="2" ry="2" />
<text  x="346.35" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="95.4" y="2005" width="0.2" height="15.0" fill="rgb(248,88,13)" rx="2" ry="2" />
<text  x="98.42" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (21 samples, 0.35%)</title><rect x="375.7" y="1925" width="4.1" height="15.0" fill="rgb(244,50,10)" rx="2" ry="2" />
<text  x="378.65" y="1935.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (6 samples, 0.10%)</title><rect x="1182.1" y="2053" width="1.2" height="15.0" fill="rgb(239,188,48)" rx="2" ry="2" />
<text  x="1185.07" y="2063.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.9" y="1989" width="0.2" height="15.0" fill="rgb(238,34,11)" rx="2" ry="2" />
<text  x="960.92" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="325.3" y="1701" width="0.2" height="15.0" fill="rgb(208,108,50)" rx="2" ry="2" />
<text  x="328.31" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="210.4" y="1893" width="0.2" height="15.0" fill="rgb(222,121,30)" rx="2" ry="2" />
<text  x="213.37" y="1903.5" ></text>
</g>
<g >
<title>tcpm_check_stamp (1 samples, 0.02%)</title><rect x="968.8" y="1685" width="0.2" height="15.0" fill="rgb(208,44,0)" rx="2" ry="2" />
<text  x="971.82" y="1695.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (32 samples, 0.54%)</title><rect x="324.3" y="1829" width="6.4" height="15.0" fill="rgb(229,21,49)" rx="2" ry="2" />
<text  x="327.32" y="1839.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="730.4" y="1781" width="0.8" height="15.0" fill="rgb(206,177,3)" rx="2" ry="2" />
<text  x="733.41" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="940.9" y="1941" width="0.4" height="15.0" fill="rgb(221,222,39)" rx="2" ry="2" />
<text  x="943.88" y="1951.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (2 samples, 0.03%)</title><rect x="517.6" y="1941" width="0.4" height="15.0" fill="rgb(252,116,14)" rx="2" ry="2" />
<text  x="520.55" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="343.9" y="1749" width="0.2" height="15.0" fill="rgb(216,195,49)" rx="2" ry="2" />
<text  x="346.94" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="125.9" y="1701" width="0.2" height="15.0" fill="rgb(252,128,53)" rx="2" ry="2" />
<text  x="128.94" y="1711.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.4" y="1637" width="0.2" height="15.0" fill="rgb(247,174,12)" rx="2" ry="2" />
<text  x="105.35" y="1647.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (36 samples, 0.60%)</title><rect x="306.5" y="1685" width="7.1" height="15.0" fill="rgb(247,74,8)" rx="2" ry="2" />
<text  x="309.49" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="69.3" y="1733" width="0.2" height="15.0" fill="rgb(227,19,4)" rx="2" ry="2" />
<text  x="72.26" y="1743.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="328.1" y="1717" width="0.2" height="15.0" fill="rgb(254,143,54)" rx="2" ry="2" />
<text  x="331.09" y="1727.5" ></text>
</g>
<g >
<title>event_assign (3 samples, 0.05%)</title><rect x="167.0" y="2021" width="0.6" height="15.0" fill="rgb(214,76,29)" rx="2" ry="2" />
<text  x="169.96" y="2031.5" ></text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="100.2" y="2005" width="0.2" height="15.0" fill="rgb(210,175,2)" rx="2" ry="2" />
<text  x="103.17" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="768.5" y="1717" width="0.2" height="15.0" fill="rgb(223,58,20)" rx="2" ry="2" />
<text  x="771.46" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="849.5" y="1781" width="0.2" height="15.0" fill="rgb(225,171,23)" rx="2" ry="2" />
<text  x="852.52" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="320.4" y="1749" width="0.2" height="15.0" fill="rgb(248,19,32)" rx="2" ry="2" />
<text  x="323.36" y="1759.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="901.6" y="1925" width="0.2" height="15.0" fill="rgb(223,163,4)" rx="2" ry="2" />
<text  x="904.64" y="1935.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (15 samples, 0.25%)</title><rect x="11.2" y="2069" width="3.0" height="15.0" fill="rgb(250,95,20)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (1 samples, 0.02%)</title><rect x="639.0" y="1989" width="0.2" height="15.0" fill="rgb(207,216,5)" rx="2" ry="2" />
<text  x="642.04" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="959.7" y="1973" width="0.4" height="15.0" fill="rgb(222,203,33)" rx="2" ry="2" />
<text  x="962.71" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="61.9" y="1797" width="0.2" height="15.0" fill="rgb(246,24,4)" rx="2" ry="2" />
<text  x="64.92" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (11 samples, 0.18%)</title><rect x="994.2" y="1989" width="2.2" height="15.0" fill="rgb(214,95,38)" rx="2" ry="2" />
<text  x="997.19" y="1999.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1019.0" y="1973" width="0.2" height="15.0" fill="rgb(245,148,42)" rx="2" ry="2" />
<text  x="1021.97" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1149.2" y="1957" width="0.2" height="15.0" fill="rgb(231,1,28)" rx="2" ry="2" />
<text  x="1152.17" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1080.0" y="1909" width="0.2" height="15.0" fill="rgb(242,82,19)" rx="2" ry="2" />
<text  x="1083.01" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="77.8" y="1957" width="0.6" height="15.0" fill="rgb(228,226,34)" rx="2" ry="2" />
<text  x="80.78" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1096.3" y="1781" width="0.2" height="15.0" fill="rgb(213,40,50)" rx="2" ry="2" />
<text  x="1099.26" y="1791.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1033.4" y="1893" width="0.2" height="15.0" fill="rgb(241,63,49)" rx="2" ry="2" />
<text  x="1036.43" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="323.1" y="1701" width="0.2" height="15.0" fill="rgb(247,130,20)" rx="2" ry="2" />
<text  x="326.13" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (37 samples, 0.62%)</title><rect x="651.3" y="2037" width="7.4" height="15.0" fill="rgb(246,185,27)" rx="2" ry="2" />
<text  x="654.33" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (7 samples, 0.12%)</title><rect x="79.8" y="1909" width="1.3" height="15.0" fill="rgb(224,132,17)" rx="2" ry="2" />
<text  x="82.76" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (3 samples, 0.05%)</title><rect x="104.9" y="37" width="0.6" height="15.0" fill="rgb(230,81,52)" rx="2" ry="2" />
<text  x="107.93" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="577.8" y="1973" width="0.2" height="15.0" fill="rgb(221,31,50)" rx="2" ry="2" />
<text  x="580.80" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.7" y="1909" width="0.2" height="15.0" fill="rgb(234,35,12)" rx="2" ry="2" />
<text  x="149.75" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.93%)</title><rect x="102.6" y="1621" width="22.7" height="15.0" fill="rgb(246,17,12)" rx="2" ry="2" />
<text  x="105.55" y="1631.5" >[..</text>
</g>
<g >
<title>tcp_conn_request (2 samples, 0.03%)</title><rect x="341.8" y="1605" width="0.4" height="15.0" fill="rgb(207,94,44)" rx="2" ry="2" />
<text  x="344.76" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="404.2" y="1909" width="2.4" height="15.0" fill="rgb(232,77,32)" rx="2" ry="2" />
<text  x="407.19" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="54.2" y="1957" width="1.0" height="15.0" fill="rgb(229,24,34)" rx="2" ry="2" />
<text  x="57.20" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (112 samples, 1.88%)</title><rect x="984.1" y="2037" width="22.2" height="15.0" fill="rgb(238,149,18)" rx="2" ry="2" />
<text  x="987.08" y="2047.5" >f..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1181.3" y="2021" width="0.2" height="15.0" fill="rgb(238,72,37)" rx="2" ry="2" />
<text  x="1184.28" y="2031.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="32.2" y="1973" width="0.2" height="15.0" fill="rgb(218,118,15)" rx="2" ry="2" />
<text  x="35.20" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="127.1" y="1845" width="0.2" height="15.0" fill="rgb(230,94,54)" rx="2" ry="2" />
<text  x="130.13" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="382.8" y="1845" width="0.4" height="15.0" fill="rgb(216,47,37)" rx="2" ry="2" />
<text  x="385.79" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="339.0" y="1877" width="0.2" height="15.0" fill="rgb(251,47,28)" rx="2" ry="2" />
<text  x="341.99" y="1887.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.13%)</title><rect x="262.7" y="1893" width="1.6" height="15.0" fill="rgb(232,218,15)" rx="2" ry="2" />
<text  x="265.69" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="890.3" y="1909" width="0.6" height="15.0" fill="rgb(238,226,37)" rx="2" ry="2" />
<text  x="893.34" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="259.7" y="1621" width="0.2" height="15.0" fill="rgb(235,212,27)" rx="2" ry="2" />
<text  x="262.71" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="574.8" y="1989" width="1.2" height="15.0" fill="rgb(245,45,36)" rx="2" ry="2" />
<text  x="577.83" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.7" y="2021" width="0.2" height="15.0" fill="rgb(216,87,4)" rx="2" ry="2" />
<text  x="960.73" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="867.6" y="1973" width="0.9" height="15.0" fill="rgb(241,121,34)" rx="2" ry="2" />
<text  x="870.55" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="392.9" y="1781" width="0.2" height="15.0" fill="rgb(221,122,51)" rx="2" ry="2" />
<text  x="395.90" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="985.5" y="1957" width="0.2" height="15.0" fill="rgb(220,171,38)" rx="2" ry="2" />
<text  x="988.47" y="1967.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1188.8" y="1765" width="0.2" height="15.0" fill="rgb(239,41,52)" rx="2" ry="2" />
<text  x="1191.81" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="104.3" y="37" width="0.2" height="15.0" fill="rgb(211,219,23)" rx="2" ry="2" />
<text  x="107.34" y="47.5" ></text>
</g>
<g >
<title>SYSC_accept4 (277 samples, 4.65%)</title><rect x="361.0" y="1973" width="54.9" height="15.0" fill="rgb(219,144,2)" rx="2" ry="2" />
<text  x="363.99" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="161.6" y="1813" width="0.2" height="15.0" fill="rgb(240,184,30)" rx="2" ry="2" />
<text  x="164.61" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (1 samples, 0.02%)</title><rect x="234.1" y="2005" width="0.2" height="15.0" fill="rgb(232,40,32)" rx="2" ry="2" />
<text  x="237.15" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (8 samples, 0.13%)</title><rect x="1142.2" y="2037" width="1.6" height="15.0" fill="rgb(215,87,53)" rx="2" ry="2" />
<text  x="1145.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="330.5" y="1493" width="0.2" height="15.0" fill="rgb(211,92,43)" rx="2" ry="2" />
<text  x="333.47" y="1503.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="830.1" y="1717" width="0.2" height="15.0" fill="rgb(213,2,26)" rx="2" ry="2" />
<text  x="833.09" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (43 samples, 0.72%)</title><rect x="1111.3" y="1637" width="8.5" height="15.0" fill="rgb(234,89,22)" rx="2" ry="2" />
<text  x="1114.32" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="736.0" y="1653" width="0.2" height="15.0" fill="rgb(250,26,28)" rx="2" ry="2" />
<text  x="738.96" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1181.5" y="2005" width="0.2" height="15.0" fill="rgb(216,163,52)" rx="2" ry="2" />
<text  x="1184.48" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (27 samples, 0.45%)</title><rect x="924.4" y="1973" width="5.4" height="15.0" fill="rgb(241,206,48)" rx="2" ry="2" />
<text  x="927.43" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 1.88%)</title><rect x="102.6" y="1589" width="22.1" height="15.0" fill="rgb(234,76,36)" rx="2" ry="2" />
<text  x="105.55" y="1599.5" >[..</text>
</g>
<g >
<title>sock_sendmsg (402 samples, 6.75%)</title><rect x="258.3" y="1941" width="79.7" height="15.0" fill="rgb(236,174,45)" rx="2" ry="2" />
<text  x="261.33" y="1951.5" >sock_send..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="335.6" y="1861" width="0.2" height="15.0" fill="rgb(231,203,42)" rx="2" ry="2" />
<text  x="338.62" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="215.3" y="1717" width="0.2" height="15.0" fill="rgb(254,187,51)" rx="2" ry="2" />
<text  x="218.32" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (2 samples, 0.03%)</title><rect x="72.6" y="1941" width="0.4" height="15.0" fill="rgb(244,66,4)" rx="2" ry="2" />
<text  x="75.63" y="1951.5" ></text>
</g>
<g >
<title>siphash_1u64 (1 samples, 0.02%)</title><rect x="341.8" y="1557" width="0.2" height="15.0" fill="rgb(247,58,49)" rx="2" ry="2" />
<text  x="344.76" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="882.2" y="1893" width="0.4" height="15.0" fill="rgb(240,142,33)" rx="2" ry="2" />
<text  x="885.22" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="341.8" y="1637" width="0.4" height="15.0" fill="rgb(220,142,14)" rx="2" ry="2" />
<text  x="344.76" y="1647.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="64.1" y="1973" width="0.2" height="15.0" fill="rgb(228,129,9)" rx="2" ry="2" />
<text  x="67.10" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="152.7" y="1893" width="0.2" height="15.0" fill="rgb(221,74,39)" rx="2" ry="2" />
<text  x="155.69" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="903.4" y="1989" width="0.2" height="15.0" fill="rgb(208,144,43)" rx="2" ry="2" />
<text  x="906.42" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="120.0" y="53" width="0.4" height="15.0" fill="rgb(214,137,9)" rx="2" ry="2" />
<text  x="122.99" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="622.4" y="2037" width="0.6" height="15.0" fill="rgb(231,53,28)" rx="2" ry="2" />
<text  x="625.40" y="2047.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="1033.4" y="1845" width="0.2" height="15.0" fill="rgb(254,228,30)" rx="2" ry="2" />
<text  x="1036.43" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="256.5" y="1781" width="0.2" height="15.0" fill="rgb(243,173,54)" rx="2" ry="2" />
<text  x="259.54" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="297.2" y="1621" width="0.6" height="15.0" fill="rgb(221,6,3)" rx="2" ry="2" />
<text  x="300.17" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (2 samples, 0.03%)</title><rect x="578.8" y="2021" width="0.4" height="15.0" fill="rgb(243,2,0)" rx="2" ry="2" />
<text  x="581.79" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="29.8" y="1957" width="1.0" height="15.0" fill="rgb(205,76,50)" rx="2" ry="2" />
<text  x="32.82" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="904.0" y="2005" width="0.2" height="15.0" fill="rgb(228,46,29)" rx="2" ry="2" />
<text  x="907.02" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="342.0" y="1541" width="0.2" height="15.0" fill="rgb(227,53,19)" rx="2" ry="2" />
<text  x="344.96" y="1551.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="878.3" y="1893" width="0.3" height="15.0" fill="rgb(226,12,50)" rx="2" ry="2" />
<text  x="881.25" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="120.0" y="37" width="0.4" height="15.0" fill="rgb(249,194,54)" rx="2" ry="2" />
<text  x="122.99" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="667.0" y="1957" width="2.8" height="15.0" fill="rgb(216,189,39)" rx="2" ry="2" />
<text  x="669.99" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.12%)</title><rect x="1179.7" y="2021" width="1.4" height="15.0" fill="rgb(251,94,0)" rx="2" ry="2" />
<text  x="1182.69" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="118.8" y="69" width="1.0" height="15.0" fill="rgb(229,104,40)" rx="2" ry="2" />
<text  x="121.80" y="79.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="908.2" y="1941" width="0.4" height="15.0" fill="rgb(216,16,10)" rx="2" ry="2" />
<text  x="911.18" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17 samples, 0.29%)</title><rect x="680.3" y="1925" width="3.3" height="15.0" fill="rgb(234,38,20)" rx="2" ry="2" />
<text  x="683.27" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="537.0" y="1957" width="0.2" height="15.0" fill="rgb(247,8,21)" rx="2" ry="2" />
<text  x="539.98" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.6" y="1845" width="0.2" height="15.0" fill="rgb(205,102,18)" rx="2" ry="2" />
<text  x="77.61" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="477.9" y="1893" width="0.4" height="15.0" fill="rgb(214,125,2)" rx="2" ry="2" />
<text  x="480.92" y="1903.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="461.3" y="1797" width="0.2" height="15.0" fill="rgb(244,6,19)" rx="2" ry="2" />
<text  x="464.27" y="1807.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="408.9" y="1877" width="0.2" height="15.0" fill="rgb(217,66,8)" rx="2" ry="2" />
<text  x="411.95" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="228.4" y="1813" width="0.2" height="15.0" fill="rgb(244,225,21)" rx="2" ry="2" />
<text  x="231.40" y="1823.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="11.2" y="2053" width="3.0" height="15.0" fill="rgb(229,202,29)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="707.4" y="2037" width="0.2" height="15.0" fill="rgb(240,79,48)" rx="2" ry="2" />
<text  x="710.42" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="152.5" y="1845" width="0.2" height="15.0" fill="rgb(239,110,8)" rx="2" ry="2" />
<text  x="155.50" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (113 samples, 1.90%)</title><rect x="583.4" y="1989" width="22.3" height="15.0" fill="rgb(249,60,37)" rx="2" ry="2" />
<text  x="586.35" y="1999.5" >f..</text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="343.9" y="1733" width="0.2" height="15.0" fill="rgb(217,175,51)" rx="2" ry="2" />
<text  x="346.94" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="280.7" y="1797" width="0.2" height="15.0" fill="rgb(212,16,12)" rx="2" ry="2" />
<text  x="283.72" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="491.0" y="1685" width="0.2" height="15.0" fill="rgb(238,56,39)" rx="2" ry="2" />
<text  x="494.00" y="1695.5" ></text>
</g>
<g >
<title>mod_timer (25 samples, 0.42%)</title><rect x="325.7" y="1765" width="5.0" height="15.0" fill="rgb(246,94,37)" rx="2" ry="2" />
<text  x="328.71" y="1775.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="350.3" y="2037" width="0.4" height="15.0" fill="rgb(207,83,2)" rx="2" ry="2" />
<text  x="353.29" y="2047.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(216,217,22)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (1 samples, 0.02%)</title><rect x="742.7" y="1653" width="0.2" height="15.0" fill="rgb(214,33,47)" rx="2" ry="2" />
<text  x="745.69" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="994.0" y="1941" width="0.2" height="15.0" fill="rgb(221,1,32)" rx="2" ry="2" />
<text  x="996.99" y="1951.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="585.5" y="1925" width="0.2" height="15.0" fill="rgb(235,47,11)" rx="2" ry="2" />
<text  x="588.53" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="287.1" y="1845" width="0.2" height="15.0" fill="rgb(222,173,28)" rx="2" ry="2" />
<text  x="290.06" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="148.9" y="1877" width="0.2" height="15.0" fill="rgb(227,46,29)" rx="2" ry="2" />
<text  x="151.93" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="616.8" y="1605" width="0.2" height="15.0" fill="rgb(222,136,19)" rx="2" ry="2" />
<text  x="619.85" y="1615.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="738.5" y="1717" width="0.2" height="15.0" fill="rgb(208,181,23)" rx="2" ry="2" />
<text  x="741.53" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="270.6" y="1829" width="0.2" height="15.0" fill="rgb(251,186,10)" rx="2" ry="2" />
<text  x="273.61" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="513.0" y="1973" width="0.8" height="15.0" fill="rgb(208,154,26)" rx="2" ry="2" />
<text  x="516.00" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="531.2" y="1941" width="0.2" height="15.0" fill="rgb(238,138,16)" rx="2" ry="2" />
<text  x="534.23" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="152.5" y="1829" width="0.2" height="15.0" fill="rgb(249,63,28)" rx="2" ry="2" />
<text  x="155.50" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (20 samples, 0.34%)</title><rect x="375.9" y="1909" width="3.9" height="15.0" fill="rgb(239,54,26)" rx="2" ry="2" />
<text  x="378.85" y="1919.5" ></text>
</g>
<g >
<title>down_write (3 samples, 0.05%)</title><rect x="753.2" y="1765" width="0.6" height="15.0" fill="rgb(223,151,21)" rx="2" ry="2" />
<text  x="756.20" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="913.3" y="1989" width="0.2" height="15.0" fill="rgb(207,68,23)" rx="2" ry="2" />
<text  x="916.33" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="991.2" y="1973" width="0.2" height="15.0" fill="rgb(254,173,2)" rx="2" ry="2" />
<text  x="994.22" y="1983.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(217,95,2)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="331.3" y="1829" width="0.2" height="15.0" fill="rgb(240,116,47)" rx="2" ry="2" />
<text  x="334.26" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="535.6" y="1925" width="0.6" height="15.0" fill="rgb(217,82,31)" rx="2" ry="2" />
<text  x="538.59" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="535.8" y="1877" width="0.2" height="15.0" fill="rgb(213,175,23)" rx="2" ry="2" />
<text  x="538.79" y="1887.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="622.6" y="1893" width="0.2" height="15.0" fill="rgb(217,12,46)" rx="2" ry="2" />
<text  x="625.59" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (1 samples, 0.02%)</title><rect x="176.3" y="2021" width="0.2" height="15.0" fill="rgb(229,223,25)" rx="2" ry="2" />
<text  x="179.28" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1109.5" y="1845" width="0.2" height="15.0" fill="rgb(208,2,12)" rx="2" ry="2" />
<text  x="1112.54" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="596.2" y="1749" width="0.2" height="15.0" fill="rgb(238,40,5)" rx="2" ry="2" />
<text  x="599.23" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="898.9" y="1957" width="0.2" height="15.0" fill="rgb(215,200,17)" rx="2" ry="2" />
<text  x="901.86" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="210.4" y="1685" width="0.2" height="15.0" fill="rgb(217,73,5)" rx="2" ry="2" />
<text  x="213.37" y="1695.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (2 samples, 0.03%)</title><rect x="1014.0" y="2021" width="0.4" height="15.0" fill="rgb(235,94,18)" rx="2" ry="2" />
<text  x="1017.01" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="343.2" y="1957" width="0.1" height="15.0" fill="rgb(214,169,15)" rx="2" ry="2" />
<text  x="346.15" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (18 samples, 0.30%)</title><rect x="614.9" y="1877" width="3.5" height="15.0" fill="rgb(218,82,31)" rx="2" ry="2" />
<text  x="617.86" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="922.3" y="2005" width="0.3" height="15.0" fill="rgb(218,149,51)" rx="2" ry="2" />
<text  x="925.25" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1129.8" y="2005" width="0.3" height="15.0" fill="rgb(213,20,29)" rx="2" ry="2" />
<text  x="1132.75" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="477.9" y="1941" width="0.4" height="15.0" fill="rgb(229,8,46)" rx="2" ry="2" />
<text  x="480.92" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1096.3" y="1701" width="0.2" height="15.0" fill="rgb(233,2,40)" rx="2" ry="2" />
<text  x="1099.26" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (35 samples, 0.59%)</title><rect x="996.4" y="1989" width="6.9" height="15.0" fill="rgb(251,224,13)" rx="2" ry="2" />
<text  x="999.37" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="855.7" y="1813" width="0.4" height="15.0" fill="rgb(247,93,31)" rx="2" ry="2" />
<text  x="858.66" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="941.3" y="1941" width="0.2" height="15.0" fill="rgb(247,119,22)" rx="2" ry="2" />
<text  x="944.28" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.8" y="1957" width="0.2" height="15.0" fill="rgb(250,28,29)" rx="2" ry="2" />
<text  x="1175.76" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="1010.4" y="1957" width="0.4" height="15.0" fill="rgb(233,205,33)" rx="2" ry="2" />
<text  x="1013.44" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (3 samples, 0.05%)</title><rect x="515.4" y="1957" width="0.6" height="15.0" fill="rgb(217,29,35)" rx="2" ry="2" />
<text  x="518.37" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (2 samples, 0.03%)</title><rect x="994.8" y="1909" width="0.4" height="15.0" fill="rgb(211,194,30)" rx="2" ry="2" />
<text  x="997.79" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="525.7" y="1909" width="0.6" height="15.0" fill="rgb(216,34,43)" rx="2" ry="2" />
<text  x="528.68" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="498.5" y="1685" width="0.4" height="15.0" fill="rgb(232,223,35)" rx="2" ry="2" />
<text  x="501.53" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="102.9" y="1141" width="18.7" height="15.0" fill="rgb(237,92,20)" rx="2" ry="2" />
<text  x="105.95" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (396 samples, 6.65%)</title><rect x="1050.7" y="2037" width="78.5" height="15.0" fill="rgb(215,149,24)" rx="2" ry="2" />
<text  x="1053.68" y="2047.5" >entry_SYS..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="684.0" y="1941" width="0.2" height="15.0" fill="rgb(247,153,22)" rx="2" ry="2" />
<text  x="687.03" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="938.5" y="1925" width="1.4" height="15.0" fill="rgb(225,164,15)" rx="2" ry="2" />
<text  x="941.50" y="1935.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="270.8" y="1861" width="0.8" height="15.0" fill="rgb(208,50,4)" rx="2" ry="2" />
<text  x="273.81" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="491.0" y="1765" width="0.2" height="15.0" fill="rgb(214,119,51)" rx="2" ry="2" />
<text  x="494.00" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="323.1" y="1637" width="0.2" height="15.0" fill="rgb(225,85,37)" rx="2" ry="2" />
<text  x="326.13" y="1647.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="844.8" y="1909" width="0.2" height="15.0" fill="rgb(225,38,54)" rx="2" ry="2" />
<text  x="847.76" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="709.6" y="2037" width="0.2" height="15.0" fill="rgb(228,215,22)" rx="2" ry="2" />
<text  x="712.60" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="684.0" y="1925" width="0.2" height="15.0" fill="rgb(218,9,0)" rx="2" ry="2" />
<text  x="687.03" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="123.2" y="1365" width="0.2" height="15.0" fill="rgb(211,39,16)" rx="2" ry="2" />
<text  x="126.16" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="710.2" y="1989" width="0.2" height="15.0" fill="rgb(251,13,20)" rx="2" ry="2" />
<text  x="713.19" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="309" width="17.9" height="15.0" fill="rgb(248,171,24)" rx="2" ry="2" />
<text  x="106.35" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1007.3" y="1973" width="0.2" height="15.0" fill="rgb(215,75,2)" rx="2" ry="2" />
<text  x="1010.27" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="224.0" y="1813" width="0.4" height="15.0" fill="rgb(225,187,28)" rx="2" ry="2" />
<text  x="227.04" y="1823.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (16 samples, 0.27%)</title><rect x="367.3" y="1941" width="3.2" height="15.0" fill="rgb(218,156,31)" rx="2" ry="2" />
<text  x="370.33" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="320.6" y="1749" width="0.2" height="15.0" fill="rgb(211,69,30)" rx="2" ry="2" />
<text  x="323.56" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="229.2" y="1925" width="0.2" height="15.0" fill="rgb(244,211,45)" rx="2" ry="2" />
<text  x="232.19" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="747.3" y="1669" width="0.2" height="15.0" fill="rgb(248,189,49)" rx="2" ry="2" />
<text  x="750.25" y="1679.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (12 samples, 0.20%)</title><rect x="11.4" y="1861" width="2.4" height="15.0" fill="rgb(247,57,36)" rx="2" ry="2" />
<text  x="14.39" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (8 samples, 0.13%)</title><rect x="901.8" y="1989" width="1.6" height="15.0" fill="rgb(234,5,51)" rx="2" ry="2" />
<text  x="904.84" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="1041.8" y="2053" width="0.2" height="15.0" fill="rgb(245,198,21)" rx="2" ry="2" />
<text  x="1044.76" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="33.0" y="1861" width="0.2" height="15.0" fill="rgb(209,162,2)" rx="2" ry="2" />
<text  x="35.99" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="569.5" y="1957" width="0.2" height="15.0" fill="rgb(235,117,7)" rx="2" ry="2" />
<text  x="572.48" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (3 samples, 0.05%)</title><rect x="941.5" y="1941" width="0.6" height="15.0" fill="rgb(251,123,45)" rx="2" ry="2" />
<text  x="944.47" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="259.7" y="1797" width="0.2" height="15.0" fill="rgb(226,200,11)" rx="2" ry="2" />
<text  x="262.71" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="509.8" y="1909" width="0.4" height="15.0" fill="rgb(254,139,19)" rx="2" ry="2" />
<text  x="512.83" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="325.3" y="1749" width="0.2" height="15.0" fill="rgb(219,85,32)" rx="2" ry="2" />
<text  x="328.31" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1099.6" y="1845" width="0.2" height="15.0" fill="rgb(234,156,0)" rx="2" ry="2" />
<text  x="1102.63" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="144.2" y="1941" width="0.6" height="15.0" fill="rgb(223,42,22)" rx="2" ry="2" />
<text  x="147.17" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="669.6" y="1845" width="0.2" height="15.0" fill="rgb(238,10,7)" rx="2" ry="2" />
<text  x="672.56" y="1855.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="541.3" y="1973" width="0.2" height="15.0" fill="rgb(211,144,7)" rx="2" ry="2" />
<text  x="544.34" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="648.4" y="1973" width="0.9" height="15.0" fill="rgb(219,139,41)" rx="2" ry="2" />
<text  x="651.36" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="33.6" y="1973" width="0.2" height="15.0" fill="rgb(236,48,0)" rx="2" ry="2" />
<text  x="36.58" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="174.1" y="2005" width="0.2" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="177.10" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="490.0" y="1925" width="0.4" height="15.0" fill="rgb(213,205,33)" rx="2" ry="2" />
<text  x="493.01" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (123 samples, 2.07%)</title><rect x="780.9" y="1605" width="24.4" height="15.0" fill="rgb(227,225,19)" rx="2" ry="2" />
<text  x="783.94" y="1615.5" >i..</text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (29 samples, 0.49%)</title><rect x="307.3" y="1653" width="5.7" height="15.0" fill="rgb(244,53,3)" rx="2" ry="2" />
<text  x="310.28" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="898.1" y="1989" width="0.2" height="15.0" fill="rgb(222,226,51)" rx="2" ry="2" />
<text  x="901.07" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(233,182,41)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="103.1" y="1013" width="18.3" height="15.0" fill="rgb(246,66,15)" rx="2" ry="2" />
<text  x="106.15" y="1023.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="675.1" y="1861" width="0.4" height="15.0" fill="rgb(243,208,33)" rx="2" ry="2" />
<text  x="678.11" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="461.3" y="1845" width="0.2" height="15.0" fill="rgb(210,46,9)" rx="2" ry="2" />
<text  x="464.27" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1144.4" y="2005" width="0.2" height="15.0" fill="rgb(244,224,29)" rx="2" ry="2" />
<text  x="1147.42" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.2" y="1797" width="0.2" height="15.0" fill="rgb(254,154,8)" rx="2" ry="2" />
<text  x="163.23" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="137.4" y="1957" width="0.4" height="15.0" fill="rgb(237,17,8)" rx="2" ry="2" />
<text  x="140.43" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="885.0" y="1925" width="0.4" height="15.0" fill="rgb(234,105,13)" rx="2" ry="2" />
<text  x="887.99" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="51.8" y="1957" width="0.4" height="15.0" fill="rgb(219,94,26)" rx="2" ry="2" />
<text  x="54.82" y="1967.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (2 samples, 0.03%)</title><rect x="569.3" y="1973" width="0.4" height="15.0" fill="rgb(228,205,31)" rx="2" ry="2" />
<text  x="572.28" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="783.3" y="1541" width="0.2" height="15.0" fill="rgb(236,188,18)" rx="2" ry="2" />
<text  x="786.32" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="210.4" y="1765" width="0.2" height="15.0" fill="rgb(227,121,13)" rx="2" ry="2" />
<text  x="213.37" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="64.9" y="1973" width="0.2" height="15.0" fill="rgb(245,168,49)" rx="2" ry="2" />
<text  x="67.90" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="71.0" y="1861" width="0.2" height="15.0" fill="rgb(217,189,38)" rx="2" ry="2" />
<text  x="74.04" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="1139.1" y="2037" width="1.0" height="15.0" fill="rgb(245,228,48)" rx="2" ry="2" />
<text  x="1142.07" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output (128 samples, 2.15%)</title><rect x="780.2" y="1621" width="25.3" height="15.0" fill="rgb(221,207,4)" rx="2" ry="2" />
<text  x="783.15" y="1631.5" >i..</text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.13%)</title><rect x="594.6" y="1813" width="1.6" height="15.0" fill="rgb(214,90,9)" rx="2" ry="2" />
<text  x="597.65" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="547.3" y="1829" width="0.2" height="15.0" fill="rgb(223,198,32)" rx="2" ry="2" />
<text  x="550.28" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (24 samples, 0.40%)</title><rect x="157.6" y="1925" width="4.8" height="15.0" fill="rgb(238,81,22)" rx="2" ry="2" />
<text  x="160.65" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="478.9" y="1989" width="0.4" height="15.0" fill="rgb(221,45,50)" rx="2" ry="2" />
<text  x="481.91" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.6" y="1877" width="0.2" height="15.0" fill="rgb(254,155,20)" rx="2" ry="2" />
<text  x="77.61" y="1887.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_ops (1 samples, 0.02%)</title><rect x="259.7" y="1573" width="0.2" height="15.0" fill="rgb(216,56,52)" rx="2" ry="2" />
<text  x="262.71" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (11 samples, 0.18%)</title><rect x="647.2" y="1989" width="2.1" height="15.0" fill="rgb(236,89,38)" rx="2" ry="2" />
<text  x="650.17" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="298.8" y="1397" width="0.4" height="15.0" fill="rgb(245,140,36)" rx="2" ry="2" />
<text  x="301.76" y="1407.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="175.9" y="1989" width="0.2" height="15.0" fill="rgb(234,175,9)" rx="2" ry="2" />
<text  x="178.88" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1079.6" y="1877" width="0.2" height="15.0" fill="rgb(215,88,8)" rx="2" ry="2" />
<text  x="1082.61" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1028.7" y="1989" width="0.2" height="15.0" fill="rgb(220,126,54)" rx="2" ry="2" />
<text  x="1031.68" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="550.7" y="1973" width="0.5" height="15.0" fill="rgb(227,151,21)" rx="2" ry="2" />
<text  x="553.65" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (1 samples, 0.02%)</title><rect x="864.6" y="1989" width="0.2" height="15.0" fill="rgb(232,76,25)" rx="2" ry="2" />
<text  x="867.58" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.6" y="1861" width="0.2" height="15.0" fill="rgb(207,162,2)" rx="2" ry="2" />
<text  x="163.62" y="1871.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="563.5" y="1973" width="0.2" height="15.0" fill="rgb(243,56,21)" rx="2" ry="2" />
<text  x="566.53" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="679.3" y="1781" width="0.8" height="15.0" fill="rgb(217,169,33)" rx="2" ry="2" />
<text  x="682.27" y="1791.5" ></text>
</g>
<g >
<title>folly::canNallocx (1 samples, 0.02%)</title><rect x="654.1" y="1973" width="0.2" height="15.0" fill="rgb(232,115,38)" rx="2" ry="2" />
<text  x="657.10" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="898.9" y="1765" width="0.2" height="15.0" fill="rgb(208,193,24)" rx="2" ry="2" />
<text  x="901.86" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (29 samples, 0.49%)</title><rect x="945.0" y="1989" width="5.8" height="15.0" fill="rgb(211,119,26)" rx="2" ry="2" />
<text  x="948.04" y="1999.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="32.4" y="1989" width="0.4" height="15.0" fill="rgb(209,143,48)" rx="2" ry="2" />
<text  x="35.40" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="666.2" y="1957" width="0.4" height="15.0" fill="rgb(221,225,32)" rx="2" ry="2" />
<text  x="669.19" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="655.3" y="1909" width="0.2" height="15.0" fill="rgb(243,193,9)" rx="2" ry="2" />
<text  x="658.29" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="888.2" y="1749" width="0.2" height="15.0" fill="rgb(224,85,7)" rx="2" ry="2" />
<text  x="891.16" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="383.0" y="1797" width="0.2" height="15.0" fill="rgb(212,193,3)" rx="2" ry="2" />
<text  x="385.99" y="1807.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1173.7" y="1941" width="0.2" height="15.0" fill="rgb(243,169,31)" rx="2" ry="2" />
<text  x="1176.75" y="1951.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="416.3" y="1973" width="0.2" height="15.0" fill="rgb(245,175,27)" rx="2" ry="2" />
<text  x="419.28" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="294.4" y="1637" width="0.2" height="15.0" fill="rgb(207,105,37)" rx="2" ry="2" />
<text  x="297.40" y="1647.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="463.6" y="1941" width="0.6" height="15.0" fill="rgb(206,2,32)" rx="2" ry="2" />
<text  x="466.65" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1002.7" y="1909" width="0.4" height="15.0" fill="rgb(243,12,16)" rx="2" ry="2" />
<text  x="1005.71" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="849.5" y="1813" width="0.2" height="15.0" fill="rgb(208,9,30)" rx="2" ry="2" />
<text  x="852.52" y="1823.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="227.8" y="1829" width="0.8" height="15.0" fill="rgb(249,197,14)" rx="2" ry="2" />
<text  x="230.81" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1144.8" y="1973" width="0.2" height="15.0" fill="rgb(205,129,17)" rx="2" ry="2" />
<text  x="1147.81" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="341.8" y="1653" width="0.4" height="15.0" fill="rgb(233,21,36)" rx="2" ry="2" />
<text  x="344.76" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (24 samples, 0.40%)</title><rect x="88.9" y="1989" width="4.7" height="15.0" fill="rgb(225,58,30)" rx="2" ry="2" />
<text  x="91.88" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="929.0" y="1941" width="0.2" height="15.0" fill="rgb(252,172,20)" rx="2" ry="2" />
<text  x="931.99" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::release (1 samples, 0.02%)</title><rect x="10.0" y="1845" width="0.2" height="15.0" fill="rgb(250,56,44)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.02%)</title><rect x="102.4" y="1765" width="23.7" height="15.0" fill="rgb(219,184,42)" rx="2" ry="2" />
<text  x="105.35" y="1775.5" >[..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="339.2" y="1717" width="0.2" height="15.0" fill="rgb(215,0,11)" rx="2" ry="2" />
<text  x="342.19" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::clear (1 samples, 0.02%)</title><rect x="186.8" y="2021" width="0.2" height="15.0" fill="rgb(215,6,31)" rx="2" ry="2" />
<text  x="189.78" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (47 samples, 0.79%)</title><rect x="1110.5" y="1845" width="9.3" height="15.0" fill="rgb(238,1,41)" rx="2" ry="2" />
<text  x="1113.53" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (6 samples, 0.10%)</title><rect x="571.9" y="1957" width="1.1" height="15.0" fill="rgb(242,151,37)" rx="2" ry="2" />
<text  x="574.86" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenfulSlotValue (1 samples, 0.02%)</title><rect x="170.7" y="1989" width="0.2" height="15.0" fill="rgb(238,78,46)" rx="2" ry="2" />
<text  x="173.73" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="547.3" y="1701" width="0.2" height="15.0" fill="rgb(231,107,54)" rx="2" ry="2" />
<text  x="550.28" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (2 samples, 0.03%)</title><rect x="569.3" y="2005" width="0.4" height="15.0" fill="rgb(209,29,3)" rx="2" ry="2" />
<text  x="572.28" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="677" width="18.1" height="15.0" fill="rgb(226,40,29)" rx="2" ry="2" />
<text  x="106.35" y="687.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (9 samples, 0.15%)</title><rect x="227.4" y="1861" width="1.8" height="15.0" fill="rgb(240,153,23)" rx="2" ry="2" />
<text  x="230.41" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="161.4" y="1637" width="0.2" height="15.0" fill="rgb(247,201,52)" rx="2" ry="2" />
<text  x="164.41" y="1647.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="783.3" y="1461" width="0.2" height="15.0" fill="rgb(246,101,32)" rx="2" ry="2" />
<text  x="786.32" y="1471.5" ></text>
</g>
<g >
<title>dev_queue_xmit (83 samples, 1.39%)</title><rect x="299.4" y="1733" width="16.4" height="15.0" fill="rgb(252,112,19)" rx="2" ry="2" />
<text  x="302.35" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="891.5" y="1957" width="0.2" height="15.0" fill="rgb(213,183,14)" rx="2" ry="2" />
<text  x="894.53" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="160.6" y="1877" width="0.2" height="15.0" fill="rgb(223,71,9)" rx="2" ry="2" />
<text  x="163.62" y="1887.5" ></text>
</g>
<g >
<title>tcp_poll (36 samples, 0.60%)</title><rect x="454.9" y="1941" width="7.2" height="15.0" fill="rgb(232,217,21)" rx="2" ry="2" />
<text  x="457.93" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="537.0" y="1909" width="0.2" height="15.0" fill="rgb(235,223,11)" rx="2" ry="2" />
<text  x="539.98" y="1919.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(209,72,33)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.22%)</title><rect x="643.0" y="1941" width="2.6" height="15.0" fill="rgb(252,65,52)" rx="2" ry="2" />
<text  x="646.01" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="505.9" y="2021" width="0.2" height="15.0" fill="rgb(250,203,25)" rx="2" ry="2" />
<text  x="508.86" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (109 samples, 1.83%)</title><rect x="783.5" y="1589" width="21.6" height="15.0" fill="rgb(237,78,40)" rx="2" ry="2" />
<text  x="786.52" y="1599.5" >d..</text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="366.7" y="1941" width="0.4" height="15.0" fill="rgb(213,32,6)" rx="2" ry="2" />
<text  x="369.73" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="616.8" y="1781" width="0.2" height="15.0" fill="rgb(223,50,25)" rx="2" ry="2" />
<text  x="619.85" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="212.1" y="1941" width="0.2" height="15.0" fill="rgb(233,115,10)" rx="2" ry="2" />
<text  x="215.15" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="379.8" y="1909" width="0.2" height="15.0" fill="rgb(207,150,14)" rx="2" ry="2" />
<text  x="382.82" y="1919.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="774.8" y="1669" width="0.2" height="15.0" fill="rgb(209,93,44)" rx="2" ry="2" />
<text  x="777.80" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="981.7" y="2005" width="0.4" height="15.0" fill="rgb(229,86,15)" rx="2" ry="2" />
<text  x="984.71" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="323.9" y="1813" width="0.4" height="15.0" fill="rgb(210,130,28)" rx="2" ry="2" />
<text  x="326.93" y="1823.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="57.8" y="1861" width="0.2" height="15.0" fill="rgb(213,147,13)" rx="2" ry="2" />
<text  x="60.76" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="76.4" y="1957" width="0.2" height="15.0" fill="rgb(254,42,39)" rx="2" ry="2" />
<text  x="79.39" y="1967.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (38 samples, 0.64%)</title><rect x="464.4" y="1957" width="7.6" height="15.0" fill="rgb(248,21,24)" rx="2" ry="2" />
<text  x="467.44" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.98%)</title><rect x="102.4" y="1701" width="23.3" height="15.0" fill="rgb(212,101,6)" rx="2" ry="2" />
<text  x="105.35" y="1711.5" >[..</text>
</g>
<g >
<title>[unknown] (96 samples, 1.61%)</title><rect x="102.9" y="1173" width="19.1" height="15.0" fill="rgb(228,12,40)" rx="2" ry="2" />
<text  x="105.95" y="1183.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1144.8" y="1957" width="0.2" height="15.0" fill="rgb(211,91,44)" rx="2" ry="2" />
<text  x="1147.81" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (113 samples, 1.90%)</title><rect x="293.8" y="1765" width="22.4" height="15.0" fill="rgb(237,39,43)" rx="2" ry="2" />
<text  x="296.80" y="1775.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="121.0" y="165" width="0.2" height="15.0" fill="rgb(239,71,20)" rx="2" ry="2" />
<text  x="123.98" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(241,77,15)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::makeEmptyScopeGuard (1 samples, 0.02%)</title><rect x="163.6" y="1909" width="0.2" height="15.0" fill="rgb(238,116,37)" rx="2" ry="2" />
<text  x="166.59" y="1919.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="166.2" y="2005" width="0.4" height="15.0" fill="rgb(214,156,39)" rx="2" ry="2" />
<text  x="169.17" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="886.0" y="1925" width="0.4" height="15.0" fill="rgb(221,68,22)" rx="2" ry="2" />
<text  x="888.98" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1188.8" y="1893" width="0.2" height="15.0" fill="rgb(206,161,0)" rx="2" ry="2" />
<text  x="1191.81" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="87.1" y="1973" width="0.2" height="15.0" fill="rgb(225,72,11)" rx="2" ry="2" />
<text  x="90.09" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="144.2" y="1925" width="0.6" height="15.0" fill="rgb(246,49,49)" rx="2" ry="2" />
<text  x="147.17" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="75.4" y="1941" width="0.2" height="15.0" fill="rgb(225,107,2)" rx="2" ry="2" />
<text  x="78.40" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="163.2" y="1941" width="0.2" height="15.0" fill="rgb(254,148,25)" rx="2" ry="2" />
<text  x="166.20" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="616.8" y="1829" width="0.2" height="15.0" fill="rgb(231,113,40)" rx="2" ry="2" />
<text  x="619.85" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="231.2" y="1861" width="0.2" height="15.0" fill="rgb(254,73,53)" rx="2" ry="2" />
<text  x="234.18" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (4 samples, 0.07%)</title><rect x="974.4" y="2005" width="0.8" height="15.0" fill="rgb(207,152,13)" rx="2" ry="2" />
<text  x="977.37" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="1877" width="0.2" height="15.0" fill="rgb(253,43,54)" rx="2" ry="2" />
<text  x="1191.81" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="959.7" y="1989" width="0.4" height="15.0" fill="rgb(230,56,21)" rx="2" ry="2" />
<text  x="962.71" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="655.3" y="1749" width="0.2" height="15.0" fill="rgb(246,3,16)" rx="2" ry="2" />
<text  x="658.29" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="1146.2" y="1925" width="0.2" height="15.0" fill="rgb(221,77,48)" rx="2" ry="2" />
<text  x="1149.20" y="1935.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="274.0" y="1861" width="0.2" height="15.0" fill="rgb(230,66,51)" rx="2" ry="2" />
<text  x="276.98" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="161.6" y="1781" width="0.2" height="15.0" fill="rgb(219,52,43)" rx="2" ry="2" />
<text  x="164.61" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="69.3" y="1701" width="0.2" height="15.0" fill="rgb(226,72,28)" rx="2" ry="2" />
<text  x="72.26" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.86%)</title><rect x="102.6" y="1541" width="22.0" height="15.0" fill="rgb(207,44,11)" rx="2" ry="2" />
<text  x="105.55" y="1551.5" >[..</text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.34%)</title><rect x="396.7" y="1893" width="3.9" height="15.0" fill="rgb(210,86,46)" rx="2" ry="2" />
<text  x="399.66" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1033.4" y="1941" width="0.2" height="15.0" fill="rgb(209,5,7)" rx="2" ry="2" />
<text  x="1036.43" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="330.5" y="1749" width="0.2" height="15.0" fill="rgb(212,48,49)" rx="2" ry="2" />
<text  x="333.47" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="294.4" y="1509" width="0.2" height="15.0" fill="rgb(215,169,13)" rx="2" ry="2" />
<text  x="297.40" y="1519.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="710.2" y="1941" width="0.2" height="15.0" fill="rgb(248,227,42)" rx="2" ry="2" />
<text  x="713.19" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="984.3" y="1797" width="0.2" height="15.0" fill="rgb(214,142,22)" rx="2" ry="2" />
<text  x="987.28" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="322.5" y="1557" width="0.2" height="15.0" fill="rgb(244,165,35)" rx="2" ry="2" />
<text  x="325.54" y="1567.5" ></text>
</g>
<g >
<title>iput (43 samples, 0.72%)</title><rect x="738.9" y="1733" width="8.6" height="15.0" fill="rgb(211,37,36)" rx="2" ry="2" />
<text  x="741.93" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="142.4" y="1925" width="0.2" height="15.0" fill="rgb(237,209,4)" rx="2" ry="2" />
<text  x="145.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="645" width="17.9" height="15.0" fill="rgb(208,129,9)" rx="2" ry="2" />
<text  x="106.35" y="655.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="849.5" y="1845" width="0.2" height="15.0" fill="rgb(225,196,46)" rx="2" ry="2" />
<text  x="852.52" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="256.5" y="1877" width="0.2" height="15.0" fill="rgb(222,212,25)" rx="2" ry="2" />
<text  x="259.54" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="505.9" y="1893" width="0.2" height="15.0" fill="rgb(252,144,40)" rx="2" ry="2" />
<text  x="508.86" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="118.4" y="53" width="0.2" height="15.0" fill="rgb(231,84,35)" rx="2" ry="2" />
<text  x="121.41" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="117.6" y="69" width="0.6" height="15.0" fill="rgb(226,210,5)" rx="2" ry="2" />
<text  x="120.62" y="79.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="176.1" y="1973" width="0.2" height="15.0" fill="rgb(244,198,45)" rx="2" ry="2" />
<text  x="179.08" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="707.2" y="1877" width="0.2" height="15.0" fill="rgb(235,210,11)" rx="2" ry="2" />
<text  x="710.22" y="1887.5" ></text>
</g>
<g >
<title>vfprintf (2 samples, 0.03%)</title><rect x="1039.4" y="2037" width="0.4" height="15.0" fill="rgb(229,12,2)" rx="2" ry="2" />
<text  x="1042.38" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="802.1" y="1525" width="0.2" height="15.0" fill="rgb(254,164,44)" rx="2" ry="2" />
<text  x="805.15" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="197" width="17.9" height="15.0" fill="rgb(243,210,54)" rx="2" ry="2" />
<text  x="106.35" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="901.6" y="1845" width="0.2" height="15.0" fill="rgb(209,131,54)" rx="2" ry="2" />
<text  x="904.64" y="1855.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (2 samples, 0.03%)</title><rect x="188.2" y="2021" width="0.4" height="15.0" fill="rgb(217,28,38)" rx="2" ry="2" />
<text  x="191.17" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.25%)</title><rect x="967.8" y="2021" width="3.0" height="15.0" fill="rgb(250,186,9)" rx="2" ry="2" />
<text  x="970.83" y="2031.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1078.0" y="1925" width="0.2" height="15.0" fill="rgb(218,88,42)" rx="2" ry="2" />
<text  x="1081.02" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="154.1" y="1813" width="0.2" height="15.0" fill="rgb(216,39,14)" rx="2" ry="2" />
<text  x="157.08" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="226.4" y="1845" width="0.4" height="15.0" fill="rgb(225,10,40)" rx="2" ry="2" />
<text  x="229.42" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (12 samples, 0.20%)</title><rect x="508.4" y="1989" width="2.4" height="15.0" fill="rgb(214,146,39)" rx="2" ry="2" />
<text  x="511.44" y="1999.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (3 samples, 0.05%)</title><rect x="1162.5" y="1909" width="0.5" height="15.0" fill="rgb(243,7,11)" rx="2" ry="2" />
<text  x="1165.45" y="1919.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (13 samples, 0.22%)</title><rect x="11.4" y="1957" width="2.6" height="15.0" fill="rgb(211,37,42)" rx="2" ry="2" />
<text  x="14.39" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="1124.0" y="1909" width="0.4" height="15.0" fill="rgb(234,62,43)" rx="2" ry="2" />
<text  x="1127.00" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="629" width="17.9" height="15.0" fill="rgb(209,83,41)" rx="2" ry="2" />
<text  x="106.35" y="639.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="462.1" y="1941" width="0.2" height="15.0" fill="rgb(221,226,8)" rx="2" ry="2" />
<text  x="465.06" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="87.3" y="1973" width="0.6" height="15.0" fill="rgb(208,131,26)" rx="2" ry="2" />
<text  x="90.29" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="120.6" y="85" width="0.2" height="15.0" fill="rgb(237,10,43)" rx="2" ry="2" />
<text  x="123.59" y="95.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (4 samples, 0.07%)</title><rect x="1146.2" y="1989" width="0.8" height="15.0" fill="rgb(217,137,52)" rx="2" ry="2" />
<text  x="1149.20" y="1999.5" ></text>
</g>
<g >
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="771.4" y="1685" width="0.6" height="15.0" fill="rgb(222,117,34)" rx="2" ry="2" />
<text  x="774.43" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1146.4" y="1941" width="0.2" height="15.0" fill="rgb(225,126,54)" rx="2" ry="2" />
<text  x="1149.40" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="274.8" y="1605" width="0.2" height="15.0" fill="rgb(242,7,36)" rx="2" ry="2" />
<text  x="277.78" y="1615.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="263.9" y="1861" width="0.4" height="15.0" fill="rgb(254,65,1)" rx="2" ry="2" />
<text  x="266.88" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6 samples, 0.10%)</title><rect x="620.0" y="2005" width="1.2" height="15.0" fill="rgb(244,164,48)" rx="2" ry="2" />
<text  x="623.02" y="2015.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="131.7" y="1829" width="0.2" height="15.0" fill="rgb(246,0,4)" rx="2" ry="2" />
<text  x="134.69" y="1839.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="69.3" y="1557" width="0.2" height="15.0" fill="rgb(229,140,29)" rx="2" ry="2" />
<text  x="72.26" y="1567.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="717.1" y="1941" width="0.4" height="15.0" fill="rgb(228,209,29)" rx="2" ry="2" />
<text  x="720.13" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (18 samples, 0.30%)</title><rect x="537.4" y="1973" width="3.5" height="15.0" fill="rgb(235,11,23)" rx="2" ry="2" />
<text  x="540.37" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="171.3" y="1909" width="0.2" height="15.0" fill="rgb(210,69,44)" rx="2" ry="2" />
<text  x="174.32" y="1919.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="857.6" y="1941" width="0.4" height="15.0" fill="rgb(206,92,5)" rx="2" ry="2" />
<text  x="860.64" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="898.9" y="1925" width="0.2" height="15.0" fill="rgb(243,201,10)" rx="2" ry="2" />
<text  x="901.86" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1083.8" y="1861" width="0.2" height="15.0" fill="rgb(245,206,0)" rx="2" ry="2" />
<text  x="1086.77" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (4 samples, 0.07%)</title><rect x="654.7" y="1973" width="0.8" height="15.0" fill="rgb(224,15,29)" rx="2" ry="2" />
<text  x="657.70" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (29 samples, 0.49%)</title><rect x="960.9" y="2037" width="5.7" height="15.0" fill="rgb(214,43,17)" rx="2" ry="2" />
<text  x="963.90" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1179.9" y="2005" width="0.2" height="15.0" fill="rgb(210,23,46)" rx="2" ry="2" />
<text  x="1182.89" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="957.5" y="2005" width="0.2" height="15.0" fill="rgb(225,50,14)" rx="2" ry="2" />
<text  x="960.53" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="297.2" y="1605" width="0.6" height="15.0" fill="rgb(241,109,38)" rx="2" ry="2" />
<text  x="300.17" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="908.0" y="1957" width="0.6" height="15.0" fill="rgb(252,105,14)" rx="2" ry="2" />
<text  x="910.98" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="505.9" y="1973" width="0.2" height="15.0" fill="rgb(249,138,54)" rx="2" ry="2" />
<text  x="508.86" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1143.0" y="1925" width="0.2" height="15.0" fill="rgb(210,130,33)" rx="2" ry="2" />
<text  x="1146.03" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="275.0" y="1589" width="0.2" height="15.0" fill="rgb(214,137,51)" rx="2" ry="2" />
<text  x="277.97" y="1599.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="518.5" y="1925" width="0.4" height="15.0" fill="rgb(205,34,25)" rx="2" ry="2" />
<text  x="521.55" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="684.0" y="1765" width="0.2" height="15.0" fill="rgb(208,224,52)" rx="2" ry="2" />
<text  x="687.03" y="1775.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="325.3" y="1557" width="0.2" height="15.0" fill="rgb(228,224,22)" rx="2" ry="2" />
<text  x="328.31" y="1567.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="262.5" y="1877" width="0.2" height="15.0" fill="rgb(244,0,41)" rx="2" ry="2" />
<text  x="265.49" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.6" y="1877" width="0.2" height="15.0" fill="rgb(225,226,54)" rx="2" ry="2" />
<text  x="884.62" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (19 samples, 0.32%)</title><rect x="158.4" y="1909" width="3.8" height="15.0" fill="rgb(212,137,47)" rx="2" ry="2" />
<text  x="161.44" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="61.1" y="1861" width="0.4" height="15.0" fill="rgb(229,53,54)" rx="2" ry="2" />
<text  x="64.13" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="127.7" y="1637" width="0.2" height="15.0" fill="rgb(215,223,39)" rx="2" ry="2" />
<text  x="130.72" y="1647.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="316.8" y="1749" width="0.2" height="15.0" fill="rgb(230,77,52)" rx="2" ry="2" />
<text  x="319.79" y="1759.5" ></text>
</g>
<g >
<title>ip_output (119 samples, 2.00%)</title><rect x="293.0" y="1781" width="23.6" height="15.0" fill="rgb(208,38,6)" rx="2" ry="2" />
<text  x="296.01" y="1791.5" >i..</text>
</g>
<g >
<title>fd_install (1 samples, 0.02%)</title><rect x="363.8" y="1957" width="0.2" height="15.0" fill="rgb(252,199,7)" rx="2" ry="2" />
<text  x="366.76" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1163.8" y="1749" width="0.2" height="15.0" fill="rgb(216,80,22)" rx="2" ry="2" />
<text  x="1166.84" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (5 samples, 0.08%)</title><rect x="904.8" y="2037" width="1.0" height="15.0" fill="rgb(236,21,30)" rx="2" ry="2" />
<text  x="907.81" y="2047.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="409.3" y="1925" width="0.2" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="412.34" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="872.9" y="1717" width="0.2" height="15.0" fill="rgb(214,220,8)" rx="2" ry="2" />
<text  x="875.90" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="736.0" y="1637" width="0.2" height="15.0" fill="rgb(249,155,29)" rx="2" ry="2" />
<text  x="738.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="968.8" y="1749" width="0.2" height="15.0" fill="rgb(240,56,18)" rx="2" ry="2" />
<text  x="971.82" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="877.5" y="1957" width="0.4" height="15.0" fill="rgb(207,184,21)" rx="2" ry="2" />
<text  x="880.46" y="1967.5" ></text>
</g>
<g >
<title>dst_release (14 samples, 0.24%)</title><rect x="1089.1" y="1877" width="2.8" height="15.0" fill="rgb(249,175,32)" rx="2" ry="2" />
<text  x="1092.12" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (22 samples, 0.37%)</title><rect x="609.7" y="1909" width="4.4" height="15.0" fill="rgb(242,151,24)" rx="2" ry="2" />
<text  x="612.71" y="1919.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="199.3" y="2021" width="0.2" height="15.0" fill="rgb(247,155,25)" rx="2" ry="2" />
<text  x="202.27" y="2031.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(235,121,51)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1096.3" y="1749" width="0.2" height="15.0" fill="rgb(207,35,23)" rx="2" ry="2" />
<text  x="1099.26" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="717.7" y="1925" width="0.2" height="15.0" fill="rgb(236,154,18)" rx="2" ry="2" />
<text  x="720.72" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="1036.0" y="2021" width="2.6" height="15.0" fill="rgb(253,146,46)" rx="2" ry="2" />
<text  x="1039.01" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="284.3" y="1653" width="0.2" height="15.0" fill="rgb(232,10,5)" rx="2" ry="2" />
<text  x="287.29" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (6 samples, 0.10%)</title><rect x="220.1" y="1925" width="1.2" height="15.0" fill="rgb(234,158,45)" rx="2" ry="2" />
<text  x="223.08" y="1935.5" ></text>
</g>
<g >
<title>security_socket_accept (1 samples, 0.02%)</title><rect x="416.1" y="1973" width="0.2" height="15.0" fill="rgb(227,111,42)" rx="2" ry="2" />
<text  x="419.08" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (51 samples, 0.86%)</title><rect x="929.8" y="1973" width="10.1" height="15.0" fill="rgb(242,204,53)" rx="2" ry="2" />
<text  x="932.78" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="952.4" y="2005" width="0.6" height="15.0" fill="rgb(206,148,17)" rx="2" ry="2" />
<text  x="955.37" y="2015.5" ></text>
</g>
<g >
<title>__fget (16 samples, 0.27%)</title><rect x="449.8" y="1941" width="3.1" height="15.0" fill="rgb(217,86,33)" rx="2" ry="2" />
<text  x="452.77" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="901.6" y="1829" width="0.2" height="15.0" fill="rgb(213,105,8)" rx="2" ry="2" />
<text  x="904.64" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="760.5" y="1717" width="0.2" height="15.0" fill="rgb(234,204,8)" rx="2" ry="2" />
<text  x="763.53" y="1727.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="650.9" y="1989" width="0.4" height="15.0" fill="rgb(233,41,48)" rx="2" ry="2" />
<text  x="653.93" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="341.8" y="1669" width="0.4" height="15.0" fill="rgb(205,171,22)" rx="2" ry="2" />
<text  x="344.76" y="1679.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1033.4" y="1861" width="0.2" height="15.0" fill="rgb(249,113,53)" rx="2" ry="2" />
<text  x="1036.43" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (252 samples, 4.23%)</title><rect x="428.6" y="2005" width="49.9" height="15.0" fill="rgb(228,155,46)" rx="2" ry="2" />
<text  x="431.57" y="2015.5" >do_sy..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="210.4" y="1813" width="0.2" height="15.0" fill="rgb(205,33,11)" rx="2" ry="2" />
<text  x="213.37" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="622.2" y="1909" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="625.20" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="51.6" y="1813" width="0.2" height="15.0" fill="rgb(218,158,19)" rx="2" ry="2" />
<text  x="54.62" y="1823.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="981.5" y="1957" width="0.2" height="15.0" fill="rgb(225,134,24)" rx="2" ry="2" />
<text  x="984.51" y="1967.5" ></text>
</g>
<g >
<title>alloc_inode (42 samples, 0.71%)</title><rect x="393.1" y="1925" width="8.3" height="15.0" fill="rgb(244,91,4)" rx="2" ry="2" />
<text  x="396.09" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="161.6" y="1829" width="0.2" height="15.0" fill="rgb(227,201,30)" rx="2" ry="2" />
<text  x="164.61" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="849.5" y="1653" width="0.2" height="15.0" fill="rgb(240,82,52)" rx="2" ry="2" />
<text  x="852.52" y="1663.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="231.2" y="1893" width="0.2" height="15.0" fill="rgb(232,119,54)" rx="2" ry="2" />
<text  x="234.18" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="614.1" y="1829" width="0.2" height="15.0" fill="rgb(214,142,22)" rx="2" ry="2" />
<text  x="617.07" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="826.7" y="1653" width="0.4" height="15.0" fill="rgb(250,181,44)" rx="2" ry="2" />
<text  x="829.72" y="1663.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="121.6" y="1141" width="0.2" height="15.0" fill="rgb(222,143,45)" rx="2" ry="2" />
<text  x="124.58" y="1151.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="10.0" y="1861" width="0.2" height="15.0" fill="rgb(219,57,45)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (2 samples, 0.03%)</title><rect x="1033.2" y="2037" width="0.4" height="15.0" fill="rgb(206,188,27)" rx="2" ry="2" />
<text  x="1036.23" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="491.0" y="1781" width="0.2" height="15.0" fill="rgb(206,22,36)" rx="2" ry="2" />
<text  x="494.00" y="1791.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (4 samples, 0.07%)</title><rect x="546.7" y="1973" width="0.8" height="15.0" fill="rgb(246,47,19)" rx="2" ry="2" />
<text  x="549.69" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="1167.6" y="2053" width="0.2" height="15.0" fill="rgb(228,224,33)" rx="2" ry="2" />
<text  x="1170.60" y="2063.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="679.3" y="1877" width="1.0" height="15.0" fill="rgb(211,64,52)" rx="2" ry="2" />
<text  x="682.27" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="294.4" y="1669" width="0.2" height="15.0" fill="rgb(247,148,28)" rx="2" ry="2" />
<text  x="297.40" y="1679.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="34.8" y="2005" width="0.2" height="15.0" fill="rgb(210,107,49)" rx="2" ry="2" />
<text  x="37.77" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="33.0" y="1925" width="0.2" height="15.0" fill="rgb(225,197,38)" rx="2" ry="2" />
<text  x="35.99" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="328.3" y="1733" width="0.2" height="15.0" fill="rgb(252,43,48)" rx="2" ry="2" />
<text  x="331.29" y="1743.5" ></text>
</g>
<g >
<title>sys_fcntl (16 samples, 0.27%)</title><rect x="560.2" y="1941" width="3.1" height="15.0" fill="rgb(243,121,24)" rx="2" ry="2" />
<text  x="563.16" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="69.5" y="1845" width="0.2" height="15.0" fill="rgb(248,192,50)" rx="2" ry="2" />
<text  x="72.46" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="74.6" y="1941" width="0.2" height="15.0" fill="rgb(235,100,7)" rx="2" ry="2" />
<text  x="77.61" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="522.7" y="1957" width="1.0" height="15.0" fill="rgb(241,78,51)" rx="2" ry="2" />
<text  x="525.71" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="84.5" y="1925" width="0.6" height="15.0" fill="rgb(245,44,54)" rx="2" ry="2" />
<text  x="87.52" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="471.6" y="1909" width="0.2" height="15.0" fill="rgb(238,7,1)" rx="2" ry="2" />
<text  x="474.58" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (3 samples, 0.05%)</title><rect x="182.6" y="1989" width="0.6" height="15.0" fill="rgb(229,213,24)" rx="2" ry="2" />
<text  x="185.62" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="162.2" y="1877" width="0.2" height="15.0" fill="rgb(222,108,34)" rx="2" ry="2" />
<text  x="165.21" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="855.7" y="1845" width="0.4" height="15.0" fill="rgb(209,157,9)" rx="2" ry="2" />
<text  x="858.66" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="210.4" y="1749" width="0.2" height="15.0" fill="rgb(229,217,40)" rx="2" ry="2" />
<text  x="213.37" y="1759.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1080.6" y="1893" width="0.2" height="15.0" fill="rgb(219,168,35)" rx="2" ry="2" />
<text  x="1083.60" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (14 samples, 0.24%)</title><rect x="802.3" y="1541" width="2.8" height="15.0" fill="rgb(251,226,49)" rx="2" ry="2" />
<text  x="805.35" y="1551.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="298.8" y="1365" width="0.4" height="15.0" fill="rgb(229,95,9)" rx="2" ry="2" />
<text  x="301.76" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (6 samples, 0.10%)</title><rect x="151.5" y="1893" width="1.2" height="15.0" fill="rgb(206,227,46)" rx="2" ry="2" />
<text  x="154.50" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (17 samples, 0.29%)</title><rect x="449.6" y="1957" width="3.3" height="15.0" fill="rgb(214,91,37)" rx="2" ry="2" />
<text  x="452.58" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (3 samples, 0.05%)</title><rect x="668.4" y="1893" width="0.6" height="15.0" fill="rgb(241,10,11)" rx="2" ry="2" />
<text  x="671.37" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (2 samples, 0.03%)</title><rect x="937.1" y="1893" width="0.4" height="15.0" fill="rgb(248,115,52)" rx="2" ry="2" />
<text  x="940.11" y="1903.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="696.3" y="1877" width="0.4" height="15.0" fill="rgb(249,99,49)" rx="2" ry="2" />
<text  x="699.32" y="1887.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1107.0" y="1749" width="0.2" height="15.0" fill="rgb(246,136,27)" rx="2" ry="2" />
<text  x="1109.96" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.91%)</title><rect x="102.6" y="1605" width="22.5" height="15.0" fill="rgb(238,103,31)" rx="2" ry="2" />
<text  x="105.55" y="1615.5" >[..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_ops (1 samples, 0.02%)</title><rect x="297.6" y="1429" width="0.2" height="15.0" fill="rgb(216,4,30)" rx="2" ry="2" />
<text  x="300.57" y="1439.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="1028.7" y="1909" width="0.2" height="15.0" fill="rgb(208,26,18)" rx="2" ry="2" />
<text  x="1031.68" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="903.0" y="1909" width="0.4" height="15.0" fill="rgb(253,69,47)" rx="2" ry="2" />
<text  x="906.03" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="525.7" y="1893" width="0.6" height="15.0" fill="rgb(237,53,17)" rx="2" ry="2" />
<text  x="528.68" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1096.3" y="1733" width="0.2" height="15.0" fill="rgb(240,175,5)" rx="2" ry="2" />
<text  x="1099.26" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="965" width="18.1" height="15.0" fill="rgb(247,186,53)" rx="2" ry="2" />
<text  x="106.35" y="975.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="29.6" y="1973" width="1.4" height="15.0" fill="rgb(240,217,41)" rx="2" ry="2" />
<text  x="32.62" y="1983.5" ></text>
</g>
<g >
<title>security_socket_getpeername (2 samples, 0.03%)</title><rect x="676.5" y="1861" width="0.4" height="15.0" fill="rgb(234,126,42)" rx="2" ry="2" />
<text  x="679.50" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="498.1" y="1845" width="0.8" height="15.0" fill="rgb(228,222,2)" rx="2" ry="2" />
<text  x="501.13" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="1151.9" y="1973" width="0.4" height="15.0" fill="rgb(234,183,27)" rx="2" ry="2" />
<text  x="1154.95" y="1983.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (35 samples, 0.59%)</title><rect x="1171.2" y="2053" width="6.9" height="15.0" fill="rgb(245,110,46)" rx="2" ry="2" />
<text  x="1174.17" y="2063.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (4 samples, 0.07%)</title><rect x="419.8" y="2037" width="0.8" height="15.0" fill="rgb(250,211,4)" rx="2" ry="2" />
<text  x="422.85" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="178.1" y="2021" width="0.4" height="15.0" fill="rgb(249,170,37)" rx="2" ry="2" />
<text  x="181.06" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="392.9" y="1749" width="0.2" height="15.0" fill="rgb(215,109,23)" rx="2" ry="2" />
<text  x="395.90" y="1759.5" ></text>
</g>
<g >
<title>netdev_pick_tx (12 samples, 0.20%)</title><rect x="784.7" y="1557" width="2.4" height="15.0" fill="rgb(207,35,47)" rx="2" ry="2" />
<text  x="787.71" y="1567.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="75.0" y="1925" width="0.4" height="15.0" fill="rgb(237,17,48)" rx="2" ry="2" />
<text  x="78.01" y="1935.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="678.9" y="1877" width="0.2" height="15.0" fill="rgb(227,54,38)" rx="2" ry="2" />
<text  x="681.88" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (6 samples, 0.10%)</title><rect x="995.2" y="1909" width="1.2" height="15.0" fill="rgb(214,49,12)" rx="2" ry="2" />
<text  x="998.18" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (33 samples, 0.55%)</title><rect x="1171.6" y="2037" width="6.5" height="15.0" fill="rgb(225,196,43)" rx="2" ry="2" />
<text  x="1174.57" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="328.1" y="1701" width="0.2" height="15.0" fill="rgb(221,131,20)" rx="2" ry="2" />
<text  x="331.09" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="855.3" y="1893" width="0.2" height="15.0" fill="rgb(250,102,8)" rx="2" ry="2" />
<text  x="858.26" y="1903.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="33.0" y="1637" width="0.2" height="15.0" fill="rgb(250,117,26)" rx="2" ry="2" />
<text  x="35.99" y="1647.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="182.2" y="1973" width="0.2" height="15.0" fill="rgb(218,194,14)" rx="2" ry="2" />
<text  x="185.22" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (5 samples, 0.08%)</title><rect x="714.0" y="1925" width="0.9" height="15.0" fill="rgb(206,214,44)" rx="2" ry="2" />
<text  x="716.96" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (51 samples, 0.86%)</title><rect x="929.8" y="1957" width="10.1" height="15.0" fill="rgb(254,52,16)" rx="2" ry="2" />
<text  x="932.78" y="1967.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="283.3" y="1829" width="0.2" height="15.0" fill="rgb(237,53,12)" rx="2" ry="2" />
<text  x="286.30" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="408.4" y="1797" width="0.2" height="15.0" fill="rgb(224,199,49)" rx="2" ry="2" />
<text  x="411.35" y="1807.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.5" y="1893" width="0.2" height="15.0" fill="rgb(227,40,8)" rx="2" ry="2" />
<text  x="543.54" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (116 samples, 1.95%)</title><rect x="102.6" y="1637" width="22.9" height="15.0" fill="rgb(214,13,52)" rx="2" ry="2" />
<text  x="105.55" y="1647.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="233.6" y="1957" width="0.4" height="15.0" fill="rgb(231,93,28)" rx="2" ry="2" />
<text  x="236.55" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="152.5" y="1861" width="0.2" height="15.0" fill="rgb(206,186,21)" rx="2" ry="2" />
<text  x="155.50" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="667.8" y="1925" width="2.0" height="15.0" fill="rgb(217,75,8)" rx="2" ry="2" />
<text  x="670.78" y="1935.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="297.2" y="1509" width="0.2" height="15.0" fill="rgb(238,27,32)" rx="2" ry="2" />
<text  x="300.17" y="1519.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.03%)</title><rect x="839.2" y="1861" width="0.4" height="15.0" fill="rgb(242,65,45)" rx="2" ry="2" />
<text  x="842.21" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="385.2" y="1925" width="1.6" height="15.0" fill="rgb(234,149,41)" rx="2" ry="2" />
<text  x="388.17" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="849.5" y="1893" width="0.2" height="15.0" fill="rgb(245,197,45)" rx="2" ry="2" />
<text  x="852.52" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="392.9" y="1813" width="0.2" height="15.0" fill="rgb(246,197,34)" rx="2" ry="2" />
<text  x="395.90" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (311 samples, 5.22%)</title><rect x="354.8" y="2005" width="61.7" height="15.0" fill="rgb(208,198,40)" rx="2" ry="2" />
<text  x="357.84" y="2015.5" >do_sys..</text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="857.0" y="1877" width="0.4" height="15.0" fill="rgb(220,183,53)" rx="2" ry="2" />
<text  x="860.05" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.2" y="1813" width="0.2" height="15.0" fill="rgb(207,29,22)" rx="2" ry="2" />
<text  x="229.22" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="148.9" y="1797" width="0.2" height="15.0" fill="rgb(216,205,8)" rx="2" ry="2" />
<text  x="151.93" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="563.3" y="1909" width="0.2" height="15.0" fill="rgb(248,5,31)" rx="2" ry="2" />
<text  x="566.34" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="156.1" y="1893" width="0.2" height="15.0" fill="rgb(216,39,5)" rx="2" ry="2" />
<text  x="159.06" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="330.5" y="1477" width="0.2" height="15.0" fill="rgb(223,114,30)" rx="2" ry="2" />
<text  x="333.47" y="1487.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="118.2" y="53" width="0.2" height="15.0" fill="rgb(251,119,20)" rx="2" ry="2" />
<text  x="121.21" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="171.3" y="1973" width="0.2" height="15.0" fill="rgb(237,120,45)" rx="2" ry="2" />
<text  x="174.32" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.8" y="1925" width="0.2" height="15.0" fill="rgb(206,99,17)" rx="2" ry="2" />
<text  x="861.83" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="47.1" y="1893" width="0.4" height="15.0" fill="rgb(221,122,3)" rx="2" ry="2" />
<text  x="50.06" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="68.7" y="1877" width="1.0" height="15.0" fill="rgb(241,188,18)" rx="2" ry="2" />
<text  x="71.66" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="452.9" y="1973" width="0.2" height="15.0" fill="rgb(209,155,27)" rx="2" ry="2" />
<text  x="455.95" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.0" y="1445" width="0.2" height="15.0" fill="rgb(218,69,33)" rx="2" ry="2" />
<text  x="126.96" y="1455.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="896.3" y="1989" width="0.2" height="15.0" fill="rgb(237,66,13)" rx="2" ry="2" />
<text  x="899.29" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (3 samples, 0.05%)</title><rect x="707.8" y="2037" width="0.6" height="15.0" fill="rgb(207,78,45)" rx="2" ry="2" />
<text  x="710.81" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1099.6" y="1925" width="0.2" height="15.0" fill="rgb(219,48,36)" rx="2" ry="2" />
<text  x="1102.63" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="919.5" y="2005" width="1.2" height="15.0" fill="rgb(222,122,1)" rx="2" ry="2" />
<text  x="922.48" y="2015.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="412.7" y="1893" width="0.2" height="15.0" fill="rgb(241,78,44)" rx="2" ry="2" />
<text  x="415.71" y="1903.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="298.6" y="1493" width="0.6" height="15.0" fill="rgb(215,184,50)" rx="2" ry="2" />
<text  x="301.56" y="1503.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="852.3" y="1909" width="0.6" height="15.0" fill="rgb(212,123,0)" rx="2" ry="2" />
<text  x="855.29" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (14 samples, 0.24%)</title><rect x="14.6" y="1861" width="2.7" height="15.0" fill="rgb(210,25,32)" rx="2" ry="2" />
<text  x="17.56" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="547.3" y="1893" width="0.2" height="15.0" fill="rgb(214,50,6)" rx="2" ry="2" />
<text  x="550.28" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="33.0" y="1653" width="0.2" height="15.0" fill="rgb(233,198,48)" rx="2" ry="2" />
<text  x="35.99" y="1663.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="996.2" y="1893" width="0.2" height="15.0" fill="rgb(237,199,54)" rx="2" ry="2" />
<text  x="999.17" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="128.3" y="1925" width="0.2" height="15.0" fill="rgb(246,54,0)" rx="2" ry="2" />
<text  x="131.32" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="930.8" y="1909" width="1.0" height="15.0" fill="rgb(243,137,46)" rx="2" ry="2" />
<text  x="933.77" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="622.6" y="1989" width="0.2" height="15.0" fill="rgb(217,84,6)" rx="2" ry="2" />
<text  x="625.59" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="575.4" y="1957" width="0.4" height="15.0" fill="rgb(221,5,18)" rx="2" ry="2" />
<text  x="578.42" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="29.6" y="1989" width="1.4" height="15.0" fill="rgb(235,26,19)" rx="2" ry="2" />
<text  x="32.62" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="861.6" y="1973" width="0.6" height="15.0" fill="rgb(238,131,34)" rx="2" ry="2" />
<text  x="864.61" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="55.0" y="1893" width="0.2" height="15.0" fill="rgb(223,51,29)" rx="2" ry="2" />
<text  x="57.99" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="518.5" y="1941" width="0.4" height="15.0" fill="rgb(221,4,51)" rx="2" ry="2" />
<text  x="521.55" y="1951.5" ></text>
</g>
<g >
<title>isspace@plt (1 samples, 0.02%)</title><rect x="1023.3" y="2021" width="0.2" height="15.0" fill="rgb(228,9,15)" rx="2" ry="2" />
<text  x="1026.33" y="2031.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.02%)</title><rect x="901.6" y="1813" width="0.2" height="15.0" fill="rgb(223,225,21)" rx="2" ry="2" />
<text  x="904.64" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="957.9" y="1957" width="0.2" height="15.0" fill="rgb(239,158,32)" rx="2" ry="2" />
<text  x="960.92" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="82.7" y="1909" width="0.2" height="15.0" fill="rgb(237,70,39)" rx="2" ry="2" />
<text  x="85.73" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (14 samples, 0.24%)</title><rect x="14.6" y="1877" width="2.7" height="15.0" fill="rgb(227,53,43)" rx="2" ry="2" />
<text  x="17.56" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="330.5" y="1509" width="0.2" height="15.0" fill="rgb(254,215,30)" rx="2" ry="2" />
<text  x="333.47" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (6 samples, 0.10%)</title><rect x="135.3" y="1957" width="1.1" height="15.0" fill="rgb(230,130,18)" rx="2" ry="2" />
<text  x="138.25" y="1967.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="776.4" y="1653" width="0.4" height="15.0" fill="rgb(209,41,22)" rx="2" ry="2" />
<text  x="779.39" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.86%)</title><rect x="102.6" y="1557" width="22.0" height="15.0" fill="rgb(221,166,39)" rx="2" ry="2" />
<text  x="105.55" y="1567.5" >[..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="330.5" y="1701" width="0.2" height="15.0" fill="rgb(237,49,0)" rx="2" ry="2" />
<text  x="333.47" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="907.8" y="1957" width="0.2" height="15.0" fill="rgb(237,164,1)" rx="2" ry="2" />
<text  x="910.78" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1188.8" y="1989" width="0.2" height="15.0" fill="rgb(235,79,12)" rx="2" ry="2" />
<text  x="1191.81" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="226.8" y="1877" width="0.4" height="15.0" fill="rgb(235,53,46)" rx="2" ry="2" />
<text  x="229.82" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="622.2" y="2005" width="0.2" height="15.0" fill="rgb(234,181,1)" rx="2" ry="2" />
<text  x="625.20" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="901.6" y="1893" width="0.2" height="15.0" fill="rgb(234,225,30)" rx="2" ry="2" />
<text  x="904.64" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (97 samples, 1.63%)</title><rect x="923.0" y="1989" width="19.3" height="15.0" fill="rgb(231,45,50)" rx="2" ry="2" />
<text  x="926.04" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="321.0" y="1589" width="0.2" height="15.0" fill="rgb(227,104,9)" rx="2" ry="2" />
<text  x="323.95" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="222.1" y="1893" width="1.0" height="15.0" fill="rgb(214,187,4)" rx="2" ry="2" />
<text  x="225.06" y="1903.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r14 (1 samples, 0.02%)</title><rect x="354.2" y="1973" width="0.2" height="15.0" fill="rgb(213,63,39)" rx="2" ry="2" />
<text  x="357.25" y="1983.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="125.3" y="1621" width="0.2" height="15.0" fill="rgb(240,148,38)" rx="2" ry="2" />
<text  x="128.34" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="93.8" y="1941" width="0.2" height="15.0" fill="rgb(227,67,17)" rx="2" ry="2" />
<text  x="96.83" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="960.5" y="2005" width="0.2" height="15.0" fill="rgb(210,132,7)" rx="2" ry="2" />
<text  x="963.50" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="617.2" y="1845" width="0.2" height="15.0" fill="rgb(225,135,13)" rx="2" ry="2" />
<text  x="620.24" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="297.2" y="1573" width="0.6" height="15.0" fill="rgb(229,3,5)" rx="2" ry="2" />
<text  x="300.17" y="1583.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="342.0" y="1573" width="0.2" height="15.0" fill="rgb(250,224,18)" rx="2" ry="2" />
<text  x="344.96" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (5 samples, 0.08%)</title><rect x="933.2" y="1893" width="0.9" height="15.0" fill="rgb(236,196,54)" rx="2" ry="2" />
<text  x="936.15" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="511.6" y="1957" width="0.4" height="15.0" fill="rgb(210,194,31)" rx="2" ry="2" />
<text  x="514.61" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="172.5" y="1973" width="0.2" height="15.0" fill="rgb(217,218,48)" rx="2" ry="2" />
<text  x="175.51" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="320.6" y="1781" width="0.6" height="15.0" fill="rgb(226,225,10)" rx="2" ry="2" />
<text  x="323.56" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="561.9" y="1749" width="0.2" height="15.0" fill="rgb(249,49,20)" rx="2" ry="2" />
<text  x="564.95" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="330.5" y="1525" width="0.2" height="15.0" fill="rgb(219,180,10)" rx="2" ry="2" />
<text  x="333.47" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="171.3" y="1749" width="0.2" height="15.0" fill="rgb(239,204,35)" rx="2" ry="2" />
<text  x="174.32" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="233.4" y="1957" width="0.2" height="15.0" fill="rgb(220,168,18)" rx="2" ry="2" />
<text  x="236.36" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="471.8" y="1925" width="0.2" height="15.0" fill="rgb(244,193,47)" rx="2" ry="2" />
<text  x="474.77" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="902.2" y="1941" width="1.2" height="15.0" fill="rgb(234,165,29)" rx="2" ry="2" />
<text  x="905.23" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (137 samples, 2.30%)</title><rect x="102.0" y="1973" width="27.1" height="15.0" fill="rgb(209,100,10)" rx="2" ry="2" />
<text  x="104.96" y="1983.5" >[..</text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="622.2" y="1925" width="0.2" height="15.0" fill="rgb(217,94,37)" rx="2" ry="2" />
<text  x="625.20" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="953.8" y="2005" width="0.2" height="15.0" fill="rgb(213,48,7)" rx="2" ry="2" />
<text  x="956.76" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="805.1" y="1589" width="0.2" height="15.0" fill="rgb(232,191,27)" rx="2" ry="2" />
<text  x="808.12" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="902.6" y="1925" width="0.4" height="15.0" fill="rgb(252,110,26)" rx="2" ry="2" />
<text  x="905.63" y="1935.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (7 samples, 0.12%)</title><rect x="407.2" y="1893" width="1.4" height="15.0" fill="rgb(214,39,27)" rx="2" ry="2" />
<text  x="410.16" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="67.7" y="1925" width="0.2" height="15.0" fill="rgb(253,159,53)" rx="2" ry="2" />
<text  x="70.67" y="1935.5" ></text>
</g>
<g >
<title>__sys_sendmsg (448 samples, 7.52%)</title><rect x="253.6" y="1973" width="88.8" height="15.0" fill="rgb(235,45,50)" rx="2" ry="2" />
<text  x="256.57" y="1983.5" >__sys_send..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="574.2" y="1957" width="0.2" height="15.0" fill="rgb(206,169,45)" rx="2" ry="2" />
<text  x="577.24" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="477.9" y="1909" width="0.4" height="15.0" fill="rgb(232,177,51)" rx="2" ry="2" />
<text  x="480.92" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="131.7" y="1909" width="0.2" height="15.0" fill="rgb(211,14,42)" rx="2" ry="2" />
<text  x="134.69" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="46.9" y="1925" width="0.6" height="15.0" fill="rgb(209,176,35)" rx="2" ry="2" />
<text  x="49.86" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="850.7" y="1909" width="0.4" height="15.0" fill="rgb(245,183,10)" rx="2" ry="2" />
<text  x="853.71" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (4 samples, 0.07%)</title><rect x="224.0" y="1877" width="0.8" height="15.0" fill="rgb(236,0,19)" rx="2" ry="2" />
<text  x="227.04" y="1887.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="475.5" y="1957" width="0.6" height="15.0" fill="rgb(250,142,22)" rx="2" ry="2" />
<text  x="478.54" y="1967.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="52.2" y="1941" width="0.6" height="15.0" fill="rgb(235,197,37)" rx="2" ry="2" />
<text  x="55.21" y="1951.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="618.2" y="1845" width="0.2" height="15.0" fill="rgb(213,115,24)" rx="2" ry="2" />
<text  x="621.23" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="296.8" y="1605" width="0.2" height="15.0" fill="rgb(254,138,39)" rx="2" ry="2" />
<text  x="299.78" y="1615.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="855.7" y="1829" width="0.4" height="15.0" fill="rgb(251,70,43)" rx="2" ry="2" />
<text  x="858.66" y="1839.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="316.0" y="1749" width="0.2" height="15.0" fill="rgb(222,188,7)" rx="2" ry="2" />
<text  x="319.00" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="252.8" y="1925" width="0.4" height="15.0" fill="rgb(251,48,9)" rx="2" ry="2" />
<text  x="255.78" y="1935.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="730.4" y="1717" width="0.8" height="15.0" fill="rgb(250,75,29)" rx="2" ry="2" />
<text  x="733.41" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="914.9" y="1989" width="0.2" height="15.0" fill="rgb(232,212,0)" rx="2" ry="2" />
<text  x="917.92" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="510.6" y="1957" width="0.2" height="15.0" fill="rgb(242,193,12)" rx="2" ry="2" />
<text  x="513.62" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (9 samples, 0.15%)</title><rect x="881.8" y="1941" width="1.8" height="15.0" fill="rgb(235,219,40)" rx="2" ry="2" />
<text  x="884.82" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="707.2" y="1701" width="0.2" height="15.0" fill="rgb(226,42,44)" rx="2" ry="2" />
<text  x="710.22" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="325.3" y="1685" width="0.2" height="15.0" fill="rgb(211,104,15)" rx="2" ry="2" />
<text  x="328.31" y="1695.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="73.8" y="1941" width="0.2" height="15.0" fill="rgb(239,122,17)" rx="2" ry="2" />
<text  x="76.82" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="919.5" y="2037" width="1.4" height="15.0" fill="rgb(251,67,18)" rx="2" ry="2" />
<text  x="922.48" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="614.1" y="1845" width="0.2" height="15.0" fill="rgb(212,183,33)" rx="2" ry="2" />
<text  x="617.07" y="1855.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="491.0" y="1669" width="0.2" height="15.0" fill="rgb(242,54,21)" rx="2" ry="2" />
<text  x="494.00" y="1679.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="365.0" y="1925" width="0.1" height="15.0" fill="rgb(243,179,43)" rx="2" ry="2" />
<text  x="367.95" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="498.5" y="1669" width="0.4" height="15.0" fill="rgb(214,7,1)" rx="2" ry="2" />
<text  x="501.53" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1685" width="0.2" height="15.0" fill="rgb(235,96,42)" rx="2" ry="2" />
<text  x="259.54" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="103.1" y="1061" width="18.3" height="15.0" fill="rgb(210,60,40)" rx="2" ry="2" />
<text  x="106.15" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="32.8" y="1989" width="0.4" height="15.0" fill="rgb(206,55,24)" rx="2" ry="2" />
<text  x="35.79" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="158.0" y="1909" width="0.4" height="15.0" fill="rgb(218,110,16)" rx="2" ry="2" />
<text  x="161.05" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="91.3" y="1941" width="0.2" height="15.0" fill="rgb(207,151,8)" rx="2" ry="2" />
<text  x="94.26" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.2" y="2021" width="0.2" height="15.0" fill="rgb(209,32,5)" rx="2" ry="2" />
<text  x="583.18" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1175.5" y="1973" width="0.2" height="15.0" fill="rgb(234,38,40)" rx="2" ry="2" />
<text  x="1178.53" y="1983.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="362.8" y="1957" width="0.2" height="15.0" fill="rgb(248,134,7)" rx="2" ry="2" />
<text  x="365.77" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="531.6" y="1941" width="0.6" height="15.0" fill="rgb(253,36,7)" rx="2" ry="2" />
<text  x="534.63" y="1951.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="600.0" y="1845" width="0.8" height="15.0" fill="rgb(218,7,19)" rx="2" ry="2" />
<text  x="603.00" y="1855.5" ></text>
</g>
<g >
<title>std::find_if&lt;unsigned long*, folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="999.1" y="1893" width="0.2" height="15.0" fill="rgb(235,159,39)" rx="2" ry="2" />
<text  x="1002.15" y="1903.5" ></text>
</g>
<g >
<title>__close (14 samples, 0.24%)</title><rect x="960.9" y="1973" width="2.8" height="15.0" fill="rgb(230,193,12)" rx="2" ry="2" />
<text  x="963.90" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareUpdateLike (1 samples, 0.02%)</title><rect x="168.7" y="2021" width="0.2" height="15.0" fill="rgb(247,154,38)" rx="2" ry="2" />
<text  x="171.75" y="2031.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="323.3" y="1829" width="1.0" height="15.0" fill="rgb(227,29,45)" rx="2" ry="2" />
<text  x="326.33" y="1839.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="757.4" y="1733" width="0.4" height="15.0" fill="rgb(210,144,2)" rx="2" ry="2" />
<text  x="760.36" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="212.3" y="1941" width="0.2" height="15.0" fill="rgb(221,7,11)" rx="2" ry="2" />
<text  x="215.35" y="1951.5" ></text>
</g>
<g >
<title>__fdget (7 samples, 0.12%)</title><rect x="676.9" y="1845" width="1.4" height="15.0" fill="rgb(254,160,46)" rx="2" ry="2" />
<text  x="679.90" y="1855.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (38 samples, 0.64%)</title><rect x="819.6" y="1717" width="7.5" height="15.0" fill="rgb(222,73,4)" rx="2" ry="2" />
<text  x="822.59" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="51.6" y="1701" width="0.2" height="15.0" fill="rgb(250,60,53)" rx="2" ry="2" />
<text  x="54.62" y="1711.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="68.9" y="1861" width="0.8" height="15.0" fill="rgb(215,149,36)" rx="2" ry="2" />
<text  x="71.86" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (10 samples, 0.17%)</title><rect x="973.4" y="2021" width="2.0" height="15.0" fill="rgb(225,22,2)" rx="2" ry="2" />
<text  x="976.38" y="2031.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (3 samples, 0.05%)</title><rect x="486.2" y="2037" width="0.6" height="15.0" fill="rgb(248,175,37)" rx="2" ry="2" />
<text  x="489.24" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="392.9" y="1909" width="0.2" height="15.0" fill="rgb(248,21,28)" rx="2" ry="2" />
<text  x="395.90" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="616.8" y="1813" width="0.2" height="15.0" fill="rgb(206,188,30)" rx="2" ry="2" />
<text  x="619.85" y="1823.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="742.5" y="1621" width="0.2" height="15.0" fill="rgb(248,88,16)" rx="2" ry="2" />
<text  x="745.50" y="1631.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.6" y="1237" width="0.2" height="15.0" fill="rgb(216,12,48)" rx="2" ry="2" />
<text  x="125.57" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="539.6" y="1925" width="1.1" height="15.0" fill="rgb(219,119,23)" rx="2" ry="2" />
<text  x="542.55" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="598.4" y="1845" width="0.2" height="15.0" fill="rgb(245,121,35)" rx="2" ry="2" />
<text  x="601.41" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="520.1" y="1973" width="0.2" height="15.0" fill="rgb(209,191,14)" rx="2" ry="2" />
<text  x="523.13" y="1983.5" ></text>
</g>
<g >
<title>event_del (2 samples, 0.03%)</title><rect x="59.9" y="1909" width="0.4" height="15.0" fill="rgb(212,74,42)" rx="2" ry="2" />
<text  x="62.94" y="1919.5" ></text>
</g>
<g >
<title>evutil_tv_to_msec_ (1 samples, 0.02%)</title><rect x="506.1" y="2037" width="0.2" height="15.0" fill="rgb(253,162,19)" rx="2" ry="2" />
<text  x="509.06" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="322.5" y="1797" width="0.2" height="15.0" fill="rgb(241,176,27)" rx="2" ry="2" />
<text  x="325.54" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="328.1" y="1637" width="0.2" height="15.0" fill="rgb(217,162,12)" rx="2" ry="2" />
<text  x="331.09" y="1647.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="885.8" y="1909" width="0.2" height="15.0" fill="rgb(230,68,33)" rx="2" ry="2" />
<text  x="888.78" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (35 samples, 0.59%)</title><rect x="996.4" y="1973" width="6.9" height="15.0" fill="rgb(253,186,9)" rx="2" ry="2" />
<text  x="999.37" y="1983.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="130.9" y="1989" width="0.4" height="15.0" fill="rgb(246,67,46)" rx="2" ry="2" />
<text  x="133.89" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="284.3" y="1685" width="0.2" height="15.0" fill="rgb(209,175,22)" rx="2" ry="2" />
<text  x="287.29" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="284.3" y="1813" width="0.2" height="15.0" fill="rgb(205,129,3)" rx="2" ry="2" />
<text  x="287.29" y="1823.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1164.0" y="1957" width="0.2" height="15.0" fill="rgb(233,211,46)" rx="2" ry="2" />
<text  x="1167.04" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="325.3" y="1573" width="0.2" height="15.0" fill="rgb(219,80,37)" rx="2" ry="2" />
<text  x="328.31" y="1583.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (76 samples, 1.28%)</title><rect x="490.4" y="1925" width="15.1" height="15.0" fill="rgb(238,69,9)" rx="2" ry="2" />
<text  x="493.40" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="498.7" y="1637" width="0.2" height="15.0" fill="rgb(247,198,54)" rx="2" ry="2" />
<text  x="501.73" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="684.0" y="1845" width="0.2" height="15.0" fill="rgb(233,215,8)" rx="2" ry="2" />
<text  x="687.03" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="147.9" y="1893" width="1.2" height="15.0" fill="rgb(210,167,49)" rx="2" ry="2" />
<text  x="150.94" y="1903.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (2 samples, 0.03%)</title><rect x="1143.4" y="2005" width="0.4" height="15.0" fill="rgb(227,173,4)" rx="2" ry="2" />
<text  x="1146.43" y="2015.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="679.3" y="1845" width="1.0" height="15.0" fill="rgb(229,222,1)" rx="2" ry="2" />
<text  x="682.27" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="882.4" y="1845" width="0.2" height="15.0" fill="rgb(236,69,34)" rx="2" ry="2" />
<text  x="885.42" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="736.0" y="1733" width="0.2" height="15.0" fill="rgb(222,146,49)" rx="2" ry="2" />
<text  x="738.96" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="966.6" y="2021" width="0.8" height="15.0" fill="rgb(244,38,31)" rx="2" ry="2" />
<text  x="969.64" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="708.6" y="2037" width="0.2" height="15.0" fill="rgb(242,150,43)" rx="2" ry="2" />
<text  x="711.61" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="1797" width="0.2" height="15.0" fill="rgb(220,42,2)" rx="2" ry="2" />
<text  x="1191.81" y="1807.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="889.7" y="1893" width="0.2" height="15.0" fill="rgb(218,159,11)" rx="2" ry="2" />
<text  x="892.75" y="1903.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="675.9" y="1861" width="0.6" height="15.0" fill="rgb(210,129,31)" rx="2" ry="2" />
<text  x="678.91" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="284.3" y="1733" width="0.2" height="15.0" fill="rgb(218,209,23)" rx="2" ry="2" />
<text  x="287.29" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (6 samples, 0.10%)</title><rect x="861.0" y="1989" width="1.2" height="15.0" fill="rgb(232,106,41)" rx="2" ry="2" />
<text  x="864.01" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.6" y="1861" width="0.2" height="15.0" fill="rgb(238,103,54)" rx="2" ry="2" />
<text  x="147.57" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="478.1" y="1813" width="0.2" height="15.0" fill="rgb(223,84,46)" rx="2" ry="2" />
<text  x="481.12" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="69.3" y="1797" width="0.2" height="15.0" fill="rgb(235,17,42)" rx="2" ry="2" />
<text  x="72.26" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="985.5" y="1973" width="0.2" height="15.0" fill="rgb(205,104,6)" rx="2" ry="2" />
<text  x="988.47" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="392.9" y="1765" width="0.2" height="15.0" fill="rgb(214,31,34)" rx="2" ry="2" />
<text  x="395.90" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1096.3" y="1605" width="0.2" height="15.0" fill="rgb(205,2,34)" rx="2" ry="2" />
<text  x="1099.26" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="505.9" y="1877" width="0.2" height="15.0" fill="rgb(207,26,29)" rx="2" ry="2" />
<text  x="508.86" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="985.5" y="1941" width="0.2" height="15.0" fill="rgb(239,165,25)" rx="2" ry="2" />
<text  x="988.47" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="516.2" y="1941" width="0.2" height="15.0" fill="rgb(217,2,30)" rx="2" ry="2" />
<text  x="519.17" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="537.0" y="1733" width="0.2" height="15.0" fill="rgb(210,217,7)" rx="2" ry="2" />
<text  x="539.98" y="1743.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="315.6" y="1717" width="0.2" height="15.0" fill="rgb(216,205,27)" rx="2" ry="2" />
<text  x="318.60" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="236.5" y="2021" width="0.4" height="15.0" fill="rgb(218,171,24)" rx="2" ry="2" />
<text  x="239.53" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1050.5" y="2037" width="0.2" height="15.0" fill="rgb(237,133,18)" rx="2" ry="2" />
<text  x="1053.48" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="392.9" y="1893" width="0.2" height="15.0" fill="rgb(230,23,47)" rx="2" ry="2" />
<text  x="395.90" y="1903.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="730.4" y="1749" width="0.8" height="15.0" fill="rgb(225,60,31)" rx="2" ry="2" />
<text  x="733.41" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="757.8" y="1733" width="0.7" height="15.0" fill="rgb(224,11,19)" rx="2" ry="2" />
<text  x="760.76" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (89 samples, 1.49%)</title><rect x="506.5" y="2037" width="17.6" height="15.0" fill="rgb(226,5,1)" rx="2" ry="2" />
<text  x="509.46" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="926.2" y="1925" width="0.2" height="15.0" fill="rgb(230,95,30)" rx="2" ry="2" />
<text  x="929.21" y="1935.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="257.9" y="1941" width="0.2" height="15.0" fill="rgb(225,212,28)" rx="2" ry="2" />
<text  x="260.93" y="1951.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="880.8" y="1925" width="0.2" height="15.0" fill="rgb(247,184,2)" rx="2" ry="2" />
<text  x="883.83" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="392.9" y="1685" width="0.2" height="15.0" fill="rgb(207,181,50)" rx="2" ry="2" />
<text  x="395.90" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="644.8" y="1909" width="0.2" height="15.0" fill="rgb(224,170,44)" rx="2" ry="2" />
<text  x="647.79" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="180.6" y="1989" width="0.2" height="15.0" fill="rgb(237,43,9)" rx="2" ry="2" />
<text  x="183.64" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (5 samples, 0.08%)</title><rect x="76.8" y="1957" width="1.0" height="15.0" fill="rgb(210,122,13)" rx="2" ry="2" />
<text  x="79.79" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="911.5" y="1973" width="0.8" height="15.0" fill="rgb(207,202,13)" rx="2" ry="2" />
<text  x="914.55" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="714.4" y="1877" width="0.2" height="15.0" fill="rgb(236,94,39)" rx="2" ry="2" />
<text  x="717.35" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (11 samples, 0.18%)</title><rect x="524.1" y="1973" width="2.2" height="15.0" fill="rgb(248,67,45)" rx="2" ry="2" />
<text  x="527.09" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="667.8" y="1941" width="2.0" height="15.0" fill="rgb(240,119,29)" rx="2" ry="2" />
<text  x="670.78" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.8" y="1909" width="0.2" height="15.0" fill="rgb(221,74,13)" rx="2" ry="2" />
<text  x="861.83" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="174.3" y="1813" width="0.2" height="15.0" fill="rgb(250,141,28)" rx="2" ry="2" />
<text  x="177.30" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (4 samples, 0.07%)</title><rect x="55.2" y="1973" width="0.8" height="15.0" fill="rgb(213,205,27)" rx="2" ry="2" />
<text  x="58.19" y="1983.5" ></text>
</g>
<g >
<title>all (5,954 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(212,104,32)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="600.0" y="1813" width="0.8" height="15.0" fill="rgb(243,35,12)" rx="2" ry="2" />
<text  x="603.00" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="855.5" y="1893" width="0.2" height="15.0" fill="rgb(223,72,28)" rx="2" ry="2" />
<text  x="858.46" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="880.4" y="1941" width="0.2" height="15.0" fill="rgb(221,116,36)" rx="2" ry="2" />
<text  x="883.43" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.8" y="1189" width="0.1" height="15.0" fill="rgb(245,77,32)" rx="2" ry="2" />
<text  x="105.75" y="1199.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="224.2" y="1765" width="0.2" height="15.0" fill="rgb(246,165,20)" rx="2" ry="2" />
<text  x="227.24" y="1775.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (1 samples, 0.02%)</title><rect x="695.1" y="1941" width="0.2" height="15.0" fill="rgb(205,104,3)" rx="2" ry="2" />
<text  x="698.13" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="174.3" y="1973" width="0.2" height="15.0" fill="rgb(239,128,22)" rx="2" ry="2" />
<text  x="177.30" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="952.2" y="2005" width="0.2" height="15.0" fill="rgb(236,4,10)" rx="2" ry="2" />
<text  x="955.18" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.4" y="1909" width="0.1" height="15.0" fill="rgb(222,100,19)" rx="2" ry="2" />
<text  x="892.35" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="684.0" y="1829" width="0.2" height="15.0" fill="rgb(208,162,34)" rx="2" ry="2" />
<text  x="687.03" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (1 samples, 0.02%)</title><rect x="894.5" y="1957" width="0.2" height="15.0" fill="rgb(237,95,6)" rx="2" ry="2" />
<text  x="897.50" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="532.0" y="1925" width="0.2" height="15.0" fill="rgb(253,218,10)" rx="2" ry="2" />
<text  x="535.02" y="1935.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="203.8" y="2037" width="0.2" height="15.0" fill="rgb(224,203,25)" rx="2" ry="2" />
<text  x="206.83" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="648.6" y="1957" width="0.6" height="15.0" fill="rgb(235,144,10)" rx="2" ry="2" />
<text  x="651.56" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="895.9" y="1797" width="0.2" height="15.0" fill="rgb(249,20,26)" rx="2" ry="2" />
<text  x="898.89" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (4 samples, 0.07%)</title><rect x="856.7" y="1925" width="0.7" height="15.0" fill="rgb(236,224,48)" rx="2" ry="2" />
<text  x="859.65" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1096.3" y="1829" width="0.2" height="15.0" fill="rgb(213,178,50)" rx="2" ry="2" />
<text  x="1099.26" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (27 samples, 0.45%)</title><rect x="536.4" y="1989" width="5.3" height="15.0" fill="rgb(231,60,48)" rx="2" ry="2" />
<text  x="539.38" y="1999.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="1008.7" y="1941" width="0.8" height="15.0" fill="rgb(228,221,41)" rx="2" ry="2" />
<text  x="1011.66" y="1951.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.13%)</title><rect x="560.6" y="1893" width="1.5" height="15.0" fill="rgb(230,105,3)" rx="2" ry="2" />
<text  x="563.56" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="535.6" y="1877" width="0.2" height="15.0" fill="rgb(235,95,26)" rx="2" ry="2" />
<text  x="538.59" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="333.6" y="1685" width="0.2" height="15.0" fill="rgb(210,25,28)" rx="2" ry="2" />
<text  x="336.64" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="522.1" y="1973" width="0.2" height="15.0" fill="rgb(249,29,31)" rx="2" ry="2" />
<text  x="525.11" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="33.0" y="1813" width="0.2" height="15.0" fill="rgb(219,49,19)" rx="2" ry="2" />
<text  x="35.99" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onAccepted (2 samples, 0.03%)</title><rect x="140.8" y="2005" width="0.4" height="15.0" fill="rgb(223,205,34)" rx="2" ry="2" />
<text  x="143.80" y="2015.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.08%)</title><rect x="193.9" y="2021" width="1.0" height="15.0" fill="rgb(247,116,44)" rx="2" ry="2" />
<text  x="196.92" y="2031.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (370 samples, 6.21%)</title><rect x="22.1" y="2037" width="73.3" height="15.0" fill="rgb(240,5,12)" rx="2" ry="2" />
<text  x="25.09" y="2047.5" >folly::E..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="33.0" y="1957" width="0.2" height="15.0" fill="rgb(240,41,17)" rx="2" ry="2" />
<text  x="35.99" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="618.4" y="1893" width="0.4" height="15.0" fill="rgb(205,63,53)" rx="2" ry="2" />
<text  x="621.43" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="257.3" y="1877" width="0.2" height="15.0" fill="rgb(215,122,26)" rx="2" ry="2" />
<text  x="260.34" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="231.2" y="1925" width="0.2" height="15.0" fill="rgb(232,29,17)" rx="2" ry="2" />
<text  x="234.18" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="572.1" y="1941" width="0.2" height="15.0" fill="rgb(243,24,40)" rx="2" ry="2" />
<text  x="575.06" y="1951.5" ></text>
</g>
<g >
<title>__close (628 samples, 10.55%)</title><rect x="719.3" y="1909" width="124.5" height="15.0" fill="rgb(223,122,0)" rx="2" ry="2" />
<text  x="722.31" y="1919.5" >__close</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="274.8" y="1829" width="0.4" height="15.0" fill="rgb(208,88,8)" rx="2" ry="2" />
<text  x="277.78" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.5" y="1973" width="0.2" height="15.0" fill="rgb(227,186,33)" rx="2" ry="2" />
<text  x="984.51" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="707.2" y="1925" width="0.2" height="15.0" fill="rgb(245,154,39)" rx="2" ry="2" />
<text  x="710.22" y="1935.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1137.7" y="2037" width="0.2" height="15.0" fill="rgb(212,56,54)" rx="2" ry="2" />
<text  x="1140.68" y="2047.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 0.20%)</title><rect x="14.8" y="1829" width="2.3" height="15.0" fill="rgb(226,162,36)" rx="2" ry="2" />
<text  x="17.76" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="537.0" y="1941" width="0.2" height="15.0" fill="rgb(254,225,27)" rx="2" ry="2" />
<text  x="539.98" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="826.7" y="1685" width="0.4" height="15.0" fill="rgb(224,38,6)" rx="2" ry="2" />
<text  x="829.72" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="713.4" y="1989" width="0.2" height="15.0" fill="rgb(214,26,41)" rx="2" ry="2" />
<text  x="716.36" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="119.6" y="37" width="0.2" height="15.0" fill="rgb(245,209,31)" rx="2" ry="2" />
<text  x="122.60" y="47.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="348.7" y="2037" width="0.4" height="15.0" fill="rgb(209,46,47)" rx="2" ry="2" />
<text  x="351.70" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="13.8" y="1845" width="0.2" height="15.0" fill="rgb(217,118,35)" rx="2" ry="2" />
<text  x="16.77" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="116.4" y="37" width="0.2" height="15.0" fill="rgb(219,86,22)" rx="2" ry="2" />
<text  x="119.43" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="270.6" y="1845" width="0.2" height="15.0" fill="rgb(247,67,35)" rx="2" ry="2" />
<text  x="273.61" y="1855.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.03%)</title><rect x="298.8" y="1349" width="0.4" height="15.0" fill="rgb(207,201,43)" rx="2" ry="2" />
<text  x="301.76" y="1359.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (18 samples, 0.30%)</title><rect x="149.7" y="1909" width="3.6" height="15.0" fill="rgb(210,137,10)" rx="2" ry="2" />
<text  x="152.72" y="1919.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="298.6" y="1429" width="0.6" height="15.0" fill="rgb(239,216,25)" rx="2" ry="2" />
<text  x="301.56" y="1439.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.18%)</title><rect x="583.6" y="1957" width="2.1" height="15.0" fill="rgb(211,114,51)" rx="2" ry="2" />
<text  x="586.55" y="1967.5" ></text>
</g>
<g >
<title>sys_gettid (2 samples, 0.03%)</title><rect x="1163.0" y="1941" width="0.4" height="15.0" fill="rgb(240,211,32)" rx="2" ry="2" />
<text  x="1166.05" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="57.2" y="1909" width="0.2" height="15.0" fill="rgb(245,226,46)" rx="2" ry="2" />
<text  x="60.17" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="676.1" y="1845" width="0.4" height="15.0" fill="rgb(213,101,15)" rx="2" ry="2" />
<text  x="679.10" y="1855.5" ></text>
</g>
<g >
<title>validate_xmit_skb (6 samples, 0.10%)</title><rect x="314.2" y="1669" width="1.2" height="15.0" fill="rgb(206,184,33)" rx="2" ry="2" />
<text  x="317.22" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="685.6" y="2021" width="0.4" height="15.0" fill="rgb(238,74,37)" rx="2" ry="2" />
<text  x="688.62" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="620.4" y="1989" width="0.6" height="15.0" fill="rgb(236,60,45)" rx="2" ry="2" />
<text  x="623.41" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="568.1" y="1957" width="0.2" height="15.0" fill="rgb(230,226,27)" rx="2" ry="2" />
<text  x="571.09" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="322.1" y="1813" width="0.4" height="15.0" fill="rgb(226,137,43)" rx="2" ry="2" />
<text  x="325.14" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="74.6" y="1717" width="0.2" height="15.0" fill="rgb(217,201,3)" rx="2" ry="2" />
<text  x="77.61" y="1727.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="234.7" y="2037" width="0.6" height="15.0" fill="rgb(224,13,7)" rx="2" ry="2" />
<text  x="237.74" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="758.5" y="1733" width="0.2" height="15.0" fill="rgb(246,61,1)" rx="2" ry="2" />
<text  x="761.55" y="1743.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, long, std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(209,217,0)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="57.2" y="1893" width="0.2" height="15.0" fill="rgb(221,184,31)" rx="2" ry="2" />
<text  x="60.17" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="86.9" y="1973" width="0.2" height="15.0" fill="rgb(251,182,35)" rx="2" ry="2" />
<text  x="89.90" y="1983.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (8 samples, 0.13%)</title><rect x="969.2" y="2005" width="1.6" height="15.0" fill="rgb(235,95,26)" rx="2" ry="2" />
<text  x="972.22" y="2015.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="408.9" y="1861" width="0.2" height="15.0" fill="rgb(226,42,27)" rx="2" ry="2" />
<text  x="411.95" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (1 samples, 0.02%)</title><rect x="1149.4" y="2021" width="0.2" height="15.0" fill="rgb(254,209,15)" rx="2" ry="2" />
<text  x="1152.37" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (2 samples, 0.03%)</title><rect x="707.0" y="2021" width="0.4" height="15.0" fill="rgb(232,175,34)" rx="2" ry="2" />
<text  x="710.02" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (38 samples, 0.64%)</title><rect x="542.3" y="2005" width="7.6" height="15.0" fill="rgb(237,91,54)" rx="2" ry="2" />
<text  x="545.33" y="2015.5" ></text>
</g>
<g >
<title>netdev_pick_tx (7 samples, 0.12%)</title><rect x="301.3" y="1701" width="1.4" height="15.0" fill="rgb(209,154,15)" rx="2" ry="2" />
<text  x="304.33" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (6 samples, 0.10%)</title><rect x="917.9" y="2037" width="1.2" height="15.0" fill="rgb(221,92,29)" rx="2" ry="2" />
<text  x="920.89" y="2047.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (5 samples, 0.08%)</title><rect x="1136.5" y="2053" width="1.0" height="15.0" fill="rgb(248,156,46)" rx="2" ry="2" />
<text  x="1139.49" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="533.6" y="1957" width="0.2" height="15.0" fill="rgb(221,115,4)" rx="2" ry="2" />
<text  x="536.61" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (62 samples, 1.04%)</title><rect x="639.0" y="2037" width="12.3" height="15.0" fill="rgb(240,103,39)" rx="2" ry="2" />
<text  x="642.04" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1052.1" y="1941" width="0.2" height="15.0" fill="rgb(245,17,24)" rx="2" ry="2" />
<text  x="1055.06" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="898.9" y="1829" width="0.2" height="15.0" fill="rgb(245,136,25)" rx="2" ry="2" />
<text  x="901.86" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="270.6" y="1813" width="0.2" height="15.0" fill="rgb(250,114,29)" rx="2" ry="2" />
<text  x="273.61" y="1823.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="171.3" y="1605" width="0.2" height="15.0" fill="rgb(226,150,7)" rx="2" ry="2" />
<text  x="174.32" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (41 samples, 0.69%)</title><rect x="178.7" y="2005" width="8.1" height="15.0" fill="rgb(216,150,7)" rx="2" ry="2" />
<text  x="181.66" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (30 samples, 0.50%)</title><rect x="651.7" y="2021" width="6.0" height="15.0" fill="rgb(225,134,32)" rx="2" ry="2" />
<text  x="654.73" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="297.6" y="1493" width="0.2" height="15.0" fill="rgb(222,186,6)" rx="2" ry="2" />
<text  x="300.57" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.05%)</title><rect x="1173.4" y="1973" width="0.5" height="15.0" fill="rgb(215,137,47)" rx="2" ry="2" />
<text  x="1176.35" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="747.3" y="1541" width="0.2" height="15.0" fill="rgb(235,213,11)" rx="2" ry="2" />
<text  x="750.25" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1175.5" y="1845" width="0.2" height="15.0" fill="rgb(249,64,22)" rx="2" ry="2" />
<text  x="1178.53" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="717.5" y="1941" width="0.4" height="15.0" fill="rgb(253,71,17)" rx="2" ry="2" />
<text  x="720.52" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="922.4" y="1973" width="0.2" height="15.0" fill="rgb(253,11,39)" rx="2" ry="2" />
<text  x="925.45" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="316.8" y="1797" width="0.2" height="15.0" fill="rgb(234,17,53)" rx="2" ry="2" />
<text  x="319.79" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="322.5" y="1653" width="0.2" height="15.0" fill="rgb(225,97,51)" rx="2" ry="2" />
<text  x="325.54" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="256.5" y="1893" width="0.2" height="15.0" fill="rgb(227,224,49)" rx="2" ry="2" />
<text  x="259.54" y="1903.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="702.5" y="1957" width="0.2" height="15.0" fill="rgb(253,38,21)" rx="2" ry="2" />
<text  x="705.46" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.4" y="1861" width="0.2" height="15.0" fill="rgb(232,129,49)" rx="2" ry="2" />
<text  x="147.37" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="140.4" y="1941" width="0.2" height="15.0" fill="rgb(226,47,38)" rx="2" ry="2" />
<text  x="143.41" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="74.6" y="1813" width="0.2" height="15.0" fill="rgb(213,211,25)" rx="2" ry="2" />
<text  x="77.61" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="714.7" y="1781" width="0.2" height="15.0" fill="rgb(242,101,30)" rx="2" ry="2" />
<text  x="717.75" y="1791.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="849.7" y="1909" width="0.2" height="15.0" fill="rgb(210,60,25)" rx="2" ry="2" />
<text  x="852.71" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.4" y="1973" width="0.2" height="15.0" fill="rgb(219,84,15)" rx="2" ry="2" />
<text  x="1036.43" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.6" y="1813" width="0.2" height="15.0" fill="rgb(212,99,35)" rx="2" ry="2" />
<text  x="163.62" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="115.4" y="37" width="0.4" height="15.0" fill="rgb(235,128,14)" rx="2" ry="2" />
<text  x="118.44" y="47.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="257.1" y="1877" width="0.2" height="15.0" fill="rgb(215,18,22)" rx="2" ry="2" />
<text  x="260.14" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="984.3" y="1845" width="0.2" height="15.0" fill="rgb(233,126,45)" rx="2" ry="2" />
<text  x="987.28" y="1855.5" ></text>
</g>
<g >
<title>skb_free_head (21 samples, 0.35%)</title><rect x="1084.2" y="1877" width="4.1" height="15.0" fill="rgb(213,99,54)" rx="2" ry="2" />
<text  x="1087.17" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="242.1" y="2005" width="0.4" height="15.0" fill="rgb(211,150,25)" rx="2" ry="2" />
<text  x="245.08" y="2015.5" ></text>
</g>
<g >
<title>clear_inode (2 samples, 0.03%)</title><rect x="741.5" y="1701" width="0.4" height="15.0" fill="rgb(246,47,39)" rx="2" ry="2" />
<text  x="744.50" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="56.8" y="1925" width="0.8" height="15.0" fill="rgb(239,93,36)" rx="2" ry="2" />
<text  x="59.77" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="172.7" y="1925" width="0.2" height="15.0" fill="rgb(234,219,42)" rx="2" ry="2" />
<text  x="175.71" y="1935.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="383.4" y="1941" width="1.4" height="15.0" fill="rgb(252,136,28)" rx="2" ry="2" />
<text  x="386.38" y="1951.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="655.7" y="1989" width="0.2" height="15.0" fill="rgb(206,154,33)" rx="2" ry="2" />
<text  x="658.69" y="1999.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="349.9" y="2037" width="0.2" height="15.0" fill="rgb(216,62,32)" rx="2" ry="2" />
<text  x="352.89" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1099.6" y="1829" width="0.2" height="15.0" fill="rgb(219,1,0)" rx="2" ry="2" />
<text  x="1102.63" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (1 samples, 0.02%)</title><rect x="34.2" y="1989" width="0.2" height="15.0" fill="rgb(210,201,40)" rx="2" ry="2" />
<text  x="37.18" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="392.9" y="1829" width="0.2" height="15.0" fill="rgb(215,16,16)" rx="2" ry="2" />
<text  x="395.90" y="1839.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (15 samples, 0.25%)</title><rect x="296.4" y="1717" width="3.0" height="15.0" fill="rgb(243,181,8)" rx="2" ry="2" />
<text  x="299.38" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="532.0" y="1877" width="0.2" height="15.0" fill="rgb(229,185,48)" rx="2" ry="2" />
<text  x="535.02" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="225.6" y="1813" width="0.6" height="15.0" fill="rgb(224,209,0)" rx="2" ry="2" />
<text  x="228.63" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="74.6" y="1797" width="0.2" height="15.0" fill="rgb(215,0,52)" rx="2" ry="2" />
<text  x="77.61" y="1807.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="562.5" y="1909" width="0.2" height="15.0" fill="rgb(245,49,54)" rx="2" ry="2" />
<text  x="565.54" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="1189.4" y="2053" width="0.4" height="15.0" fill="rgb(229,115,11)" rx="2" ry="2" />
<text  x="1192.41" y="2063.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="714.6" y="1893" width="0.3" height="15.0" fill="rgb(252,220,46)" rx="2" ry="2" />
<text  x="717.55" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="839.0" y="1845" width="0.2" height="15.0" fill="rgb(251,25,1)" rx="2" ry="2" />
<text  x="842.01" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="230.8" y="1925" width="0.4" height="15.0" fill="rgb(253,134,26)" rx="2" ry="2" />
<text  x="233.78" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="986.7" y="1989" width="0.2" height="15.0" fill="rgb(211,156,26)" rx="2" ry="2" />
<text  x="989.66" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="180.0" y="1973" width="0.6" height="15.0" fill="rgb(208,198,12)" rx="2" ry="2" />
<text  x="183.04" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="261.7" y="1877" width="0.8" height="15.0" fill="rgb(241,122,26)" rx="2" ry="2" />
<text  x="264.70" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="872.9" y="1877" width="0.2" height="15.0" fill="rgb(246,168,0)" rx="2" ry="2" />
<text  x="875.90" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="453.7" y="1957" width="0.2" height="15.0" fill="rgb(235,184,22)" rx="2" ry="2" />
<text  x="456.74" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="661.8" y="1957" width="0.2" height="15.0" fill="rgb(251,76,34)" rx="2" ry="2" />
<text  x="664.83" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="506.3" y="2037" width="0.2" height="15.0" fill="rgb(244,89,41)" rx="2" ry="2" />
<text  x="509.26" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="872.5" y="1973" width="0.2" height="15.0" fill="rgb(223,52,45)" rx="2" ry="2" />
<text  x="875.51" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (3 samples, 0.05%)</title><rect x="918.5" y="2005" width="0.6" height="15.0" fill="rgb(216,138,31)" rx="2" ry="2" />
<text  x="921.49" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="717.7" y="1845" width="0.2" height="15.0" fill="rgb(228,52,31)" rx="2" ry="2" />
<text  x="720.72" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="33.0" y="1845" width="0.2" height="15.0" fill="rgb(226,68,33)" rx="2" ry="2" />
<text  x="35.99" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="357" width="17.9" height="15.0" fill="rgb(206,119,35)" rx="2" ry="2" />
<text  x="106.35" y="367.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="204.0" y="2021" width="2.8" height="15.0" fill="rgb(208,13,47)" rx="2" ry="2" />
<text  x="207.02" y="2031.5" ></text>
</g>
<g >
<title>do_fcntl (2 samples, 0.03%)</title><rect x="562.3" y="1925" width="0.4" height="15.0" fill="rgb(217,203,29)" rx="2" ry="2" />
<text  x="565.34" y="1935.5" ></text>
</g>
<g >
<title>__fdget (18 samples, 0.30%)</title><rect x="449.4" y="1973" width="3.5" height="15.0" fill="rgb(207,154,32)" rx="2" ry="2" />
<text  x="452.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="165.0" y="2005" width="0.2" height="15.0" fill="rgb(224,31,38)" rx="2" ry="2" />
<text  x="167.98" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="142.4" y="1893" width="0.2" height="15.0" fill="rgb(227,36,8)" rx="2" ry="2" />
<text  x="145.39" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="849.5" y="1909" width="0.2" height="15.0" fill="rgb(242,123,10)" rx="2" ry="2" />
<text  x="852.52" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.9" y="2005" width="0.2" height="15.0" fill="rgb(234,4,46)" rx="2" ry="2" />
<text  x="960.92" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (108 samples, 1.81%)</title><rect x="294.6" y="1749" width="21.4" height="15.0" fill="rgb(225,195,5)" rx="2" ry="2" />
<text  x="297.60" y="1759.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1052.1" y="2005" width="0.2" height="15.0" fill="rgb(215,206,0)" rx="2" ry="2" />
<text  x="1055.06" y="2015.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8 samples, 0.13%)</title><rect x="364.2" y="1957" width="1.5" height="15.0" fill="rgb(223,143,33)" rx="2" ry="2" />
<text  x="367.16" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="471.6" y="1877" width="0.2" height="15.0" fill="rgb(223,128,4)" rx="2" ry="2" />
<text  x="474.58" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="228.2" y="1797" width="0.2" height="15.0" fill="rgb(217,66,37)" rx="2" ry="2" />
<text  x="231.20" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="661.8" y="1941" width="0.2" height="15.0" fill="rgb(237,100,5)" rx="2" ry="2" />
<text  x="664.83" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="274.8" y="1557" width="0.2" height="15.0" fill="rgb(205,61,48)" rx="2" ry="2" />
<text  x="277.78" y="1567.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1111.5" y="1493" width="0.2" height="15.0" fill="rgb(208,203,23)" rx="2" ry="2" />
<text  x="1114.52" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (7 samples, 0.12%)</title><rect x="785.7" y="1541" width="1.4" height="15.0" fill="rgb(211,156,52)" rx="2" ry="2" />
<text  x="788.70" y="1551.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="561.9" y="1797" width="0.2" height="15.0" fill="rgb(226,171,14)" rx="2" ry="2" />
<text  x="564.95" y="1807.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="415.9" y="1973" width="0.2" height="15.0" fill="rgb(249,89,29)" rx="2" ry="2" />
<text  x="418.89" y="1983.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="222.3" y="1861" width="0.2" height="15.0" fill="rgb(224,200,41)" rx="2" ry="2" />
<text  x="225.26" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="120.8" y="37" width="0.2" height="15.0" fill="rgb(217,19,7)" rx="2" ry="2" />
<text  x="123.79" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1107.0" y="1797" width="0.2" height="15.0" fill="rgb(245,44,35)" rx="2" ry="2" />
<text  x="1109.96" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="847.7" y="1893" width="0.4" height="15.0" fill="rgb(252,59,45)" rx="2" ry="2" />
<text  x="850.73" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.85%)</title><rect x="102.6" y="1509" width="21.8" height="15.0" fill="rgb(211,3,34)" rx="2" ry="2" />
<text  x="105.55" y="1519.5" >[..</text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1149.4" y="2005" width="0.2" height="15.0" fill="rgb(244,195,39)" rx="2" ry="2" />
<text  x="1152.37" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="986.7" y="1909" width="0.2" height="15.0" fill="rgb(240,26,4)" rx="2" ry="2" />
<text  x="989.66" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="725" width="18.1" height="15.0" fill="rgb(224,20,10)" rx="2" ry="2" />
<text  x="106.35" y="735.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (8 samples, 0.13%)</title><rect x="174.7" y="2005" width="1.6" height="15.0" fill="rgb(219,96,1)" rx="2" ry="2" />
<text  x="177.69" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="164.8" y="1957" width="0.2" height="15.0" fill="rgb(217,165,37)" rx="2" ry="2" />
<text  x="167.78" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1147.0" y="1957" width="0.2" height="15.0" fill="rgb(244,130,15)" rx="2" ry="2" />
<text  x="1149.99" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="160.4" y="1893" width="1.8" height="15.0" fill="rgb(230,184,23)" rx="2" ry="2" />
<text  x="163.42" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="544.9" y="1941" width="0.2" height="15.0" fill="rgb(220,107,52)" rx="2" ry="2" />
<text  x="547.90" y="1951.5" ></text>
</g>
<g >
<title>__GI___getsockname (15 samples, 0.25%)</title><rect x="204.0" y="2037" width="3.0" height="15.0" fill="rgb(246,44,23)" rx="2" ry="2" />
<text  x="207.02" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="325.3" y="1781" width="0.2" height="15.0" fill="rgb(254,191,16)" rx="2" ry="2" />
<text  x="328.31" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (11 samples, 0.18%)</title><rect x="49.6" y="1957" width="2.2" height="15.0" fill="rgb(224,27,40)" rx="2" ry="2" />
<text  x="52.64" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="826.7" y="1637" width="0.4" height="15.0" fill="rgb(247,200,35)" rx="2" ry="2" />
<text  x="829.72" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="985.5" y="2005" width="0.2" height="15.0" fill="rgb(241,227,29)" rx="2" ry="2" />
<text  x="988.47" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (7 samples, 0.12%)</title><rect x="1004.9" y="2005" width="1.4" height="15.0" fill="rgb(224,3,14)" rx="2" ry="2" />
<text  x="1007.89" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="759.5" y="1717" width="0.2" height="15.0" fill="rgb(237,173,39)" rx="2" ry="2" />
<text  x="762.54" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="872.9" y="1749" width="0.2" height="15.0" fill="rgb(240,220,14)" rx="2" ry="2" />
<text  x="875.90" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (2 samples, 0.03%)</title><rect x="848.1" y="1941" width="0.4" height="15.0" fill="rgb(211,18,41)" rx="2" ry="2" />
<text  x="851.13" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1007.3" y="1909" width="0.2" height="15.0" fill="rgb(236,169,41)" rx="2" ry="2" />
<text  x="1010.27" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1188.8" y="2005" width="0.2" height="15.0" fill="rgb(244,98,25)" rx="2" ry="2" />
<text  x="1191.81" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="655.3" y="1765" width="0.2" height="15.0" fill="rgb(253,179,15)" rx="2" ry="2" />
<text  x="658.29" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="872.3" y="1989" width="0.8" height="15.0" fill="rgb(220,128,33)" rx="2" ry="2" />
<text  x="875.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="624.0" y="2037" width="0.2" height="15.0" fill="rgb(230,141,24)" rx="2" ry="2" />
<text  x="626.98" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="161.4" y="1653" width="0.2" height="15.0" fill="rgb(231,168,41)" rx="2" ry="2" />
<text  x="164.41" y="1663.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(225,136,5)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="895.9" y="1765" width="0.2" height="15.0" fill="rgb(246,201,4)" rx="2" ry="2" />
<text  x="898.89" y="1775.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="86.5" y="1973" width="0.2" height="15.0" fill="rgb(206,110,1)" rx="2" ry="2" />
<text  x="89.50" y="1983.5" ></text>
</g>
<g >
<title>process_backlog (45 samples, 0.76%)</title><rect x="1110.9" y="1701" width="8.9" height="15.0" fill="rgb(252,140,34)" rx="2" ry="2" />
<text  x="1113.92" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="658.5" y="1957" width="0.2" height="15.0" fill="rgb(210,205,32)" rx="2" ry="2" />
<text  x="661.46" y="1967.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="1140.1" y="2053" width="0.2" height="15.0" fill="rgb(214,119,50)" rx="2" ry="2" />
<text  x="1143.06" y="2063.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1097.1" y="1925" width="0.1" height="15.0" fill="rgb(216,62,13)" rx="2" ry="2" />
<text  x="1100.05" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="333.6" y="1845" width="0.2" height="15.0" fill="rgb(235,19,16)" rx="2" ry="2" />
<text  x="336.64" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="477.9" y="1877" width="0.4" height="15.0" fill="rgb(229,151,24)" rx="2" ry="2" />
<text  x="480.92" y="1887.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="93.6" y="1989" width="0.2" height="15.0" fill="rgb(210,153,41)" rx="2" ry="2" />
<text  x="96.63" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (2 samples, 0.03%)</title><rect x="889.5" y="1941" width="0.4" height="15.0" fill="rgb(216,121,25)" rx="2" ry="2" />
<text  x="892.55" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1080.4" y="1893" width="0.2" height="15.0" fill="rgb(224,214,12)" rx="2" ry="2" />
<text  x="1083.40" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="127.7" y="1797" width="0.2" height="15.0" fill="rgb(211,191,34)" rx="2" ry="2" />
<text  x="130.72" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;int, void&gt; (1 samples, 0.02%)</title><rect x="570.7" y="2005" width="0.2" height="15.0" fill="rgb(229,100,10)" rx="2" ry="2" />
<text  x="573.67" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="176.5" y="2021" width="0.6" height="15.0" fill="rgb(217,198,17)" rx="2" ry="2" />
<text  x="179.48" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="149.1" y="1909" width="0.4" height="15.0" fill="rgb(249,139,15)" rx="2" ry="2" />
<text  x="152.13" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="297.2" y="1525" width="0.6" height="15.0" fill="rgb(234,31,9)" rx="2" ry="2" />
<text  x="300.17" y="1535.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="85.9" y="1941" width="0.2" height="15.0" fill="rgb(239,152,47)" rx="2" ry="2" />
<text  x="88.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="161.4" y="1621" width="0.2" height="15.0" fill="rgb(235,132,32)" rx="2" ry="2" />
<text  x="164.41" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1010.8" y="1973" width="0.2" height="15.0" fill="rgb(247,167,30)" rx="2" ry="2" />
<text  x="1013.84" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="547.3" y="1877" width="0.2" height="15.0" fill="rgb(205,103,49)" rx="2" ry="2" />
<text  x="550.28" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="252.8" y="1957" width="0.4" height="15.0" fill="rgb(239,9,18)" rx="2" ry="2" />
<text  x="255.78" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="275.0" y="1605" width="0.2" height="15.0" fill="rgb(240,118,48)" rx="2" ry="2" />
<text  x="277.97" y="1615.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1148.4" y="1989" width="0.2" height="15.0" fill="rgb(205,118,47)" rx="2" ry="2" />
<text  x="1151.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="245" width="17.9" height="15.0" fill="rgb(219,199,11)" rx="2" ry="2" />
<text  x="106.35" y="255.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="333.6" y="1605" width="0.2" height="15.0" fill="rgb(246,187,35)" rx="2" ry="2" />
<text  x="336.64" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="898.9" y="1973" width="0.2" height="15.0" fill="rgb(217,198,12)" rx="2" ry="2" />
<text  x="901.86" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="537.0" y="1925" width="0.2" height="15.0" fill="rgb(251,200,17)" rx="2" ry="2" />
<text  x="539.98" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="622.6" y="1941" width="0.2" height="15.0" fill="rgb(251,167,3)" rx="2" ry="2" />
<text  x="625.59" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="253.0" y="1861" width="0.2" height="15.0" fill="rgb(224,63,28)" rx="2" ry="2" />
<text  x="255.98" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="835.8" y="1829" width="0.2" height="15.0" fill="rgb(222,180,43)" rx="2" ry="2" />
<text  x="838.84" y="1839.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="857.0" y="1845" width="0.2" height="15.0" fill="rgb(228,212,26)" rx="2" ry="2" />
<text  x="860.05" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="100.4" y="2005" width="0.4" height="15.0" fill="rgb(232,24,16)" rx="2" ry="2" />
<text  x="103.37" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="505.9" y="1749" width="0.2" height="15.0" fill="rgb(251,110,51)" rx="2" ry="2" />
<text  x="508.86" y="1759.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="387.5" y="1957" width="0.2" height="15.0" fill="rgb(219,20,33)" rx="2" ry="2" />
<text  x="390.54" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="161.6" y="1861" width="0.2" height="15.0" fill="rgb(234,58,2)" rx="2" ry="2" />
<text  x="164.61" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="848.9" y="1909" width="0.6" height="15.0" fill="rgb(237,189,51)" rx="2" ry="2" />
<text  x="851.92" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="127.7" y="1765" width="0.2" height="15.0" fill="rgb(238,130,50)" rx="2" ry="2" />
<text  x="130.72" y="1775.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="607.7" y="1973" width="0.2" height="15.0" fill="rgb(209,120,18)" rx="2" ry="2" />
<text  x="610.73" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1168.8" y="2053" width="0.2" height="15.0" fill="rgb(217,100,45)" rx="2" ry="2" />
<text  x="1171.79" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (79 samples, 1.33%)</title><rect x="1151.6" y="2021" width="15.6" height="15.0" fill="rgb(219,42,50)" rx="2" ry="2" />
<text  x="1154.55" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="985.3" y="2005" width="0.2" height="15.0" fill="rgb(240,28,43)" rx="2" ry="2" />
<text  x="988.27" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="222.7" y="1877" width="0.4" height="15.0" fill="rgb(246,153,14)" rx="2" ry="2" />
<text  x="225.65" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="969.0" y="1701" width="0.2" height="15.0" fill="rgb(227,21,27)" rx="2" ry="2" />
<text  x="972.02" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="872.9" y="1909" width="0.2" height="15.0" fill="rgb(215,149,46)" rx="2" ry="2" />
<text  x="875.90" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.07%)</title><rect x="102.2" y="1813" width="24.3" height="15.0" fill="rgb(247,207,44)" rx="2" ry="2" />
<text  x="105.16" y="1823.5" >[..</text>
</g>
<g >
<title>security_socket_sendmsg (10 samples, 0.17%)</title><rect x="336.0" y="1925" width="2.0" height="15.0" fill="rgb(225,181,49)" rx="2" ry="2" />
<text  x="339.02" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="805.9" y="1637" width="0.2" height="15.0" fill="rgb(249,202,49)" rx="2" ry="2" />
<text  x="808.92" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1163.6" y="1781" width="0.4" height="15.0" fill="rgb(210,19,33)" rx="2" ry="2" />
<text  x="1166.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="82.9" y="1925" width="0.4" height="15.0" fill="rgb(234,163,11)" rx="2" ry="2" />
<text  x="85.93" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="333.6" y="1781" width="0.2" height="15.0" fill="rgb(208,72,52)" rx="2" ry="2" />
<text  x="336.64" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13 samples, 0.22%)</title><rect x="469.0" y="1925" width="2.6" height="15.0" fill="rgb(247,201,45)" rx="2" ry="2" />
<text  x="472.00" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="142.4" y="1909" width="0.2" height="15.0" fill="rgb(248,165,8)" rx="2" ry="2" />
<text  x="145.39" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="978.9" y="2021" width="0.2" height="15.0" fill="rgb(234,159,2)" rx="2" ry="2" />
<text  x="981.93" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="31.2" y="1957" width="0.8" height="15.0" fill="rgb(222,7,19)" rx="2" ry="2" />
<text  x="34.21" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="339.2" y="1829" width="0.2" height="15.0" fill="rgb(234,35,10)" rx="2" ry="2" />
<text  x="342.19" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="53.2" y="1941" width="0.4" height="15.0" fill="rgb(218,32,17)" rx="2" ry="2" />
<text  x="56.20" y="1951.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="870.5" y="1989" width="0.2" height="15.0" fill="rgb(213,151,22)" rx="2" ry="2" />
<text  x="873.52" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="477.9" y="1861" width="0.4" height="15.0" fill="rgb(227,6,46)" rx="2" ry="2" />
<text  x="480.92" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="655.3" y="1797" width="0.2" height="15.0" fill="rgb(221,61,54)" rx="2" ry="2" />
<text  x="658.29" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (5 samples, 0.08%)</title><rect x="516.0" y="1957" width="1.0" height="15.0" fill="rgb(233,37,16)" rx="2" ry="2" />
<text  x="518.97" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="50.4" y="1909" width="0.8" height="15.0" fill="rgb(212,56,36)" rx="2" ry="2" />
<text  x="53.43" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1188.8" y="1733" width="0.2" height="15.0" fill="rgb(215,93,53)" rx="2" ry="2" />
<text  x="1191.81" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::getEvent (1 samples, 0.02%)</title><rect x="224.4" y="1861" width="0.2" height="15.0" fill="rgb(244,99,46)" rx="2" ry="2" />
<text  x="227.44" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="392.9" y="1797" width="0.2" height="15.0" fill="rgb(226,174,33)" rx="2" ry="2" />
<text  x="395.90" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.8" y="133" width="0.2" height="15.0" fill="rgb(218,20,35)" rx="2" ry="2" />
<text  x="123.79" y="143.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="441.8" y="1989" width="0.2" height="15.0" fill="rgb(222,99,30)" rx="2" ry="2" />
<text  x="444.85" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="179.6" y="1973" width="0.4" height="15.0" fill="rgb(215,6,19)" rx="2" ry="2" />
<text  x="182.65" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="839.6" y="1845" width="0.2" height="15.0" fill="rgb(213,122,29)" rx="2" ry="2" />
<text  x="842.61" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="140.0" y="1973" width="0.2" height="15.0" fill="rgb(217,71,1)" rx="2" ry="2" />
<text  x="143.01" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="259.7" y="1781" width="0.2" height="15.0" fill="rgb(210,169,27)" rx="2" ry="2" />
<text  x="262.71" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="124.7" y="1573" width="0.4" height="15.0" fill="rgb(214,111,43)" rx="2" ry="2" />
<text  x="127.75" y="1583.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="539.9" y="1861" width="0.4" height="15.0" fill="rgb(206,145,33)" rx="2" ry="2" />
<text  x="542.95" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="117.2" y="37" width="0.2" height="15.0" fill="rgb(243,148,8)" rx="2" ry="2" />
<text  x="120.22" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="1146.6" y="1941" width="0.2" height="15.0" fill="rgb(206,164,35)" rx="2" ry="2" />
<text  x="1149.60" y="1951.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.08%)</title><rect x="129.5" y="1989" width="1.0" height="15.0" fill="rgb(252,46,31)" rx="2" ry="2" />
<text  x="132.51" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="505.9" y="1765" width="0.2" height="15.0" fill="rgb(231,174,45)" rx="2" ry="2" />
<text  x="508.86" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="224.0" y="1797" width="0.4" height="15.0" fill="rgb(215,32,48)" rx="2" ry="2" />
<text  x="227.04" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1477" width="0.2" height="15.0" fill="rgb(249,83,4)" rx="2" ry="2" />
<text  x="344.96" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="498.5" y="1621" width="0.2" height="15.0" fill="rgb(226,185,12)" rx="2" ry="2" />
<text  x="501.53" y="1631.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="264.3" y="1893" width="0.4" height="15.0" fill="rgb(239,78,35)" rx="2" ry="2" />
<text  x="267.27" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1175.9" y="1973" width="0.4" height="15.0" fill="rgb(224,228,35)" rx="2" ry="2" />
<text  x="1178.93" y="1983.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="994.4" y="1925" width="2.0" height="15.0" fill="rgb(221,56,6)" rx="2" ry="2" />
<text  x="997.39" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (5 samples, 0.08%)</title><rect x="1149.6" y="2053" width="1.0" height="15.0" fill="rgb(229,43,24)" rx="2" ry="2" />
<text  x="1152.57" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (23 samples, 0.39%)</title><rect x="614.5" y="1909" width="4.5" height="15.0" fill="rgb(242,154,16)" rx="2" ry="2" />
<text  x="617.47" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="623.0" y="2037" width="0.4" height="15.0" fill="rgb(248,74,31)" rx="2" ry="2" />
<text  x="625.99" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="616.8" y="1765" width="0.2" height="15.0" fill="rgb(219,140,39)" rx="2" ry="2" />
<text  x="619.85" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.72%)</title><rect x="670.8" y="1925" width="8.5" height="15.0" fill="rgb(223,125,10)" rx="2" ry="2" />
<text  x="673.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (3 samples, 0.05%)</title><rect x="144.8" y="1941" width="0.6" height="15.0" fill="rgb(240,7,12)" rx="2" ry="2" />
<text  x="147.77" y="1951.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="748.6" y="1781" width="0.2" height="15.0" fill="rgb(209,226,32)" rx="2" ry="2" />
<text  x="751.64" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="333.6" y="1637" width="0.2" height="15.0" fill="rgb(208,203,31)" rx="2" ry="2" />
<text  x="336.64" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (597 samples, 10.03%)</title><rect x="721.3" y="1877" width="118.3" height="15.0" fill="rgb(206,45,37)" rx="2" ry="2" />
<text  x="724.29" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="133.1" y="1925" width="0.2" height="15.0" fill="rgb(249,161,22)" rx="2" ry="2" />
<text  x="136.07" y="1935.5" ></text>
</g>
<g >
<title>ip_output (47 samples, 0.79%)</title><rect x="1110.5" y="1829" width="9.3" height="15.0" fill="rgb(231,221,0)" rx="2" ry="2" />
<text  x="1113.53" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="69.3" y="1845" width="0.2" height="15.0" fill="rgb(233,59,26)" rx="2" ry="2" />
<text  x="72.26" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="669.2" y="1909" width="0.4" height="15.0" fill="rgb(249,196,9)" rx="2" ry="2" />
<text  x="672.17" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="844.8" y="1861" width="0.2" height="15.0" fill="rgb(229,182,34)" rx="2" ry="2" />
<text  x="847.76" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (135 samples, 2.27%)</title><rect x="102.0" y="1957" width="26.7" height="15.0" fill="rgb(214,116,45)" rx="2" ry="2" />
<text  x="104.96" y="1967.5" >[..</text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="1028.7" y="1925" width="0.2" height="15.0" fill="rgb(243,22,20)" rx="2" ry="2" />
<text  x="1031.68" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="323.1" y="1669" width="0.2" height="15.0" fill="rgb(238,173,6)" rx="2" ry="2" />
<text  x="326.13" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1149.4" y="2037" width="0.2" height="15.0" fill="rgb(249,196,5)" rx="2" ry="2" />
<text  x="1152.37" y="2047.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12 samples, 0.20%)</title><rect x="207.4" y="2021" width="2.4" height="15.0" fill="rgb(222,129,7)" rx="2" ry="2" />
<text  x="210.39" y="2031.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="75.6" y="1925" width="0.2" height="15.0" fill="rgb(223,217,10)" rx="2" ry="2" />
<text  x="78.60" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="322.7" y="1829" width="0.2" height="15.0" fill="rgb(252,23,53)" rx="2" ry="2" />
<text  x="325.74" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1179.3" y="2021" width="0.2" height="15.0" fill="rgb(246,144,46)" rx="2" ry="2" />
<text  x="1182.30" y="2031.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="655.9" y="1989" width="0.4" height="15.0" fill="rgb(250,225,29)" rx="2" ry="2" />
<text  x="658.89" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="131.7" y="1957" width="0.2" height="15.0" fill="rgb(244,165,10)" rx="2" ry="2" />
<text  x="134.69" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="513.6" y="1941" width="0.2" height="15.0" fill="rgb(250,88,52)" rx="2" ry="2" />
<text  x="516.59" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="859.4" y="1909" width="0.2" height="15.0" fill="rgb(251,168,38)" rx="2" ry="2" />
<text  x="862.43" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="74.6" y="1781" width="0.2" height="15.0" fill="rgb(228,133,46)" rx="2" ry="2" />
<text  x="77.61" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="460.7" y="1829" width="0.2" height="15.0" fill="rgb(243,195,9)" rx="2" ry="2" />
<text  x="463.68" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="61.9" y="1829" width="0.2" height="15.0" fill="rgb(207,206,23)" rx="2" ry="2" />
<text  x="64.92" y="1839.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1140.5" y="2053" width="0.2" height="15.0" fill="rgb(254,41,3)" rx="2" ry="2" />
<text  x="1143.45" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="477.9" y="1845" width="0.4" height="15.0" fill="rgb(243,176,18)" rx="2" ry="2" />
<text  x="480.92" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (4 samples, 0.07%)</title><rect x="72.2" y="1957" width="0.8" height="15.0" fill="rgb(212,44,25)" rx="2" ry="2" />
<text  x="75.23" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="116.0" y="37" width="0.4" height="15.0" fill="rgb(217,110,29)" rx="2" ry="2" />
<text  x="119.03" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="903.8" y="2021" width="0.4" height="15.0" fill="rgb(220,74,12)" rx="2" ry="2" />
<text  x="906.82" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (8 samples, 0.13%)</title><rect x="511.0" y="1989" width="1.6" height="15.0" fill="rgb(210,154,44)" rx="2" ry="2" />
<text  x="514.01" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (43 samples, 0.72%)</title><rect x="1111.3" y="1621" width="8.5" height="15.0" fill="rgb(241,151,43)" rx="2" ry="2" />
<text  x="1114.32" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="160.8" y="1877" width="1.0" height="15.0" fill="rgb(215,75,16)" rx="2" ry="2" />
<text  x="163.82" y="1887.5" ></text>
</g>
<g >
<title>sock_rfree (16 samples, 0.27%)</title><rect x="1093.3" y="1893" width="3.2" height="15.0" fill="rgb(240,56,35)" rx="2" ry="2" />
<text  x="1096.29" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="621.6" y="2005" width="0.4" height="15.0" fill="rgb(237,220,37)" rx="2" ry="2" />
<text  x="624.60" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="93.8" y="1973" width="0.2" height="15.0" fill="rgb(238,205,4)" rx="2" ry="2" />
<text  x="96.83" y="1983.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.02%)</title><rect x="468.6" y="1893" width="0.2" height="15.0" fill="rgb(213,111,22)" rx="2" ry="2" />
<text  x="471.60" y="1903.5" ></text>
</g>
<g >
<title>sys_close (1 samples, 0.02%)</title><rect x="839.6" y="1877" width="0.2" height="15.0" fill="rgb(253,46,10)" rx="2" ry="2" />
<text  x="842.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (62 samples, 1.04%)</title><rect x="639.0" y="2005" width="12.3" height="15.0" fill="rgb(238,69,28)" rx="2" ry="2" />
<text  x="642.04" y="2015.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="10.2" y="1829" width="0.2" height="15.0" fill="rgb(246,17,12)" rx="2" ry="2" />
<text  x="13.20" y="1839.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="561.9" y="1829" width="0.2" height="15.0" fill="rgb(253,209,27)" rx="2" ry="2" />
<text  x="564.95" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="984.3" y="1941" width="0.2" height="15.0" fill="rgb(234,139,17)" rx="2" ry="2" />
<text  x="987.28" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="707.2" y="1765" width="0.2" height="15.0" fill="rgb(213,75,41)" rx="2" ry="2" />
<text  x="710.22" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (105 samples, 1.76%)</title><rect x="686.6" y="2037" width="20.8" height="15.0" fill="rgb(205,222,35)" rx="2" ry="2" />
<text  x="689.61" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="174.7" y="1989" width="1.2" height="15.0" fill="rgb(215,35,2)" rx="2" ry="2" />
<text  x="177.69" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="571.1" y="1973" width="0.4" height="15.0" fill="rgb(227,96,54)" rx="2" ry="2" />
<text  x="574.06" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (14 samples, 0.24%)</title><rect x="207.0" y="2037" width="2.8" height="15.0" fill="rgb(226,157,9)" rx="2" ry="2" />
<text  x="210.00" y="2047.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (91 samples, 1.53%)</title><rect x="487.6" y="1957" width="18.1" height="15.0" fill="rgb(233,160,43)" rx="2" ry="2" />
<text  x="490.63" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="836.0" y="1765" width="0.2" height="15.0" fill="rgb(210,0,11)" rx="2" ry="2" />
<text  x="839.04" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (108 samples, 1.81%)</title><rect x="143.0" y="1957" width="21.4" height="15.0" fill="rgb(245,43,0)" rx="2" ry="2" />
<text  x="145.98" y="1967.5" >f..</text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="646.6" y="1957" width="0.2" height="15.0" fill="rgb(209,166,3)" rx="2" ry="2" />
<text  x="649.57" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1111.5" y="1509" width="0.2" height="15.0" fill="rgb(224,220,35)" rx="2" ry="2" />
<text  x="1114.52" y="1519.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(243,109,36)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="259.7" y="1605" width="0.2" height="15.0" fill="rgb(244,144,24)" rx="2" ry="2" />
<text  x="262.71" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="535.8" y="1845" width="0.2" height="15.0" fill="rgb(229,206,15)" rx="2" ry="2" />
<text  x="538.79" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="226.4" y="1813" width="0.2" height="15.0" fill="rgb(244,87,12)" rx="2" ry="2" />
<text  x="229.42" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="662.2" y="1989" width="0.2" height="15.0" fill="rgb(248,53,10)" rx="2" ry="2" />
<text  x="665.23" y="1999.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="316.2" y="1765" width="0.4" height="15.0" fill="rgb(212,110,37)" rx="2" ry="2" />
<text  x="319.20" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="271.4" y="1813" width="0.2" height="15.0" fill="rgb(212,165,47)" rx="2" ry="2" />
<text  x="274.41" y="1823.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="622.6" y="1861" width="0.2" height="15.0" fill="rgb(212,28,14)" rx="2" ry="2" />
<text  x="625.59" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="732.2" y="1845" width="0.2" height="15.0" fill="rgb(248,2,16)" rx="2" ry="2" />
<text  x="735.19" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="320.8" y="1621" width="0.4" height="15.0" fill="rgb(244,213,48)" rx="2" ry="2" />
<text  x="323.76" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="902.4" y="1909" width="0.2" height="15.0" fill="rgb(232,110,31)" rx="2" ry="2" />
<text  x="905.43" y="1919.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="616.8" y="1589" width="0.2" height="15.0" fill="rgb(251,153,22)" rx="2" ry="2" />
<text  x="619.85" y="1599.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="752.0" y="1749" width="0.6" height="15.0" fill="rgb(207,70,2)" rx="2" ry="2" />
<text  x="755.01" y="1759.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (88 samples, 1.48%)</title><rect x="687.4" y="2005" width="17.4" height="15.0" fill="rgb(213,196,7)" rx="2" ry="2" />
<text  x="690.40" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (13 samples, 0.22%)</title><rect x="339.6" y="1925" width="2.6" height="15.0" fill="rgb(212,220,6)" rx="2" ry="2" />
<text  x="342.58" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="537.0" y="1813" width="0.2" height="15.0" fill="rgb(243,29,24)" rx="2" ry="2" />
<text  x="539.98" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="614.3" y="1909" width="0.2" height="15.0" fill="rgb(212,13,29)" rx="2" ry="2" />
<text  x="617.27" y="1919.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1096.3" y="1589" width="0.2" height="15.0" fill="rgb(239,196,3)" rx="2" ry="2" />
<text  x="1099.26" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="917.9" y="2021" width="1.2" height="15.0" fill="rgb(231,190,38)" rx="2" ry="2" />
<text  x="920.89" y="2031.5" ></text>
</g>
<g >
<title>std::__find_if&lt;unsigned long*, __gnu_cxx::__ops::_Iter_pred&lt;folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="999.1" y="1877" width="0.2" height="15.0" fill="rgb(207,229,3)" rx="2" ry="2" />
<text  x="1002.15" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="138.8" y="1973" width="0.4" height="15.0" fill="rgb(207,35,48)" rx="2" ry="2" />
<text  x="141.82" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="547.3" y="1797" width="0.2" height="15.0" fill="rgb(219,31,25)" rx="2" ry="2" />
<text  x="550.28" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="707.2" y="1829" width="0.2" height="15.0" fill="rgb(226,78,37)" rx="2" ry="2" />
<text  x="710.22" y="1839.5" ></text>
</g>
<g >
<title>dput.part.26 (63 samples, 1.06%)</title><rect x="736.2" y="1781" width="12.4" height="15.0" fill="rgb(249,123,47)" rx="2" ry="2" />
<text  x="739.15" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (1 samples, 0.02%)</title><rect x="1142.4" y="2021" width="0.2" height="15.0" fill="rgb(230,218,12)" rx="2" ry="2" />
<text  x="1145.44" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="622.2" y="1893" width="0.2" height="15.0" fill="rgb(238,30,47)" rx="2" ry="2" />
<text  x="625.20" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="540.3" y="1845" width="0.2" height="15.0" fill="rgb(224,100,33)" rx="2" ry="2" />
<text  x="543.35" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.0" y="2021" width="0.2" height="15.0" fill="rgb(213,3,28)" rx="2" ry="2" />
<text  x="582.98" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (4 samples, 0.07%)</title><rect x="1146.2" y="1973" width="0.8" height="15.0" fill="rgb(254,196,52)" rx="2" ry="2" />
<text  x="1149.20" y="1983.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="382.0" y="1925" width="0.8" height="15.0" fill="rgb(248,146,12)" rx="2" ry="2" />
<text  x="385.00" y="1935.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="834.9" y="1781" width="0.1" height="15.0" fill="rgb(228,12,17)" rx="2" ry="2" />
<text  x="837.85" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="215.3" y="1829" width="0.2" height="15.0" fill="rgb(243,9,49)" rx="2" ry="2" />
<text  x="218.32" y="1839.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (2 samples, 0.03%)</title><rect x="579.4" y="2021" width="0.4" height="15.0" fill="rgb(221,212,30)" rx="2" ry="2" />
<text  x="582.39" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="649.7" y="1973" width="0.2" height="15.0" fill="rgb(252,55,54)" rx="2" ry="2" />
<text  x="652.74" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="969.0" y="1717" width="0.2" height="15.0" fill="rgb(254,47,4)" rx="2" ry="2" />
<text  x="972.02" y="1727.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1117.9" y="1413" width="0.6" height="15.0" fill="rgb(240,34,52)" rx="2" ry="2" />
<text  x="1120.86" y="1423.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (88 samples, 1.48%)</title><rect x="666.6" y="1989" width="17.4" height="15.0" fill="rgb(211,7,49)" rx="2" ry="2" />
<text  x="669.59" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="525.9" y="1877" width="0.4" height="15.0" fill="rgb(245,6,8)" rx="2" ry="2" />
<text  x="528.88" y="1887.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="281.7" y="1765" width="0.2" height="15.0" fill="rgb(214,79,15)" rx="2" ry="2" />
<text  x="284.71" y="1775.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.6" y="1253" width="0.2" height="15.0" fill="rgb(215,34,33)" rx="2" ry="2" />
<text  x="105.55" y="1263.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="670.6" y="1925" width="0.2" height="15.0" fill="rgb(237,175,22)" rx="2" ry="2" />
<text  x="673.55" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.08%)</title><rect x="343.2" y="2005" width="0.9" height="15.0" fill="rgb(215,127,47)" rx="2" ry="2" />
<text  x="346.15" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (19 samples, 0.32%)</title><rect x="58.8" y="1925" width="3.7" height="15.0" fill="rgb(253,205,34)" rx="2" ry="2" />
<text  x="61.75" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="960.3" y="1989" width="0.2" height="15.0" fill="rgb(208,74,29)" rx="2" ry="2" />
<text  x="963.30" y="1999.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (21 samples, 0.35%)</title><rect x="409.5" y="1941" width="4.2" height="15.0" fill="rgb(245,142,7)" rx="2" ry="2" />
<text  x="412.54" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (4,753 samples, 79.83%)</title><rect x="97.8" y="2053" width="942.0" height="15.0" fill="rgb(227,4,12)" rx="2" ry="2" />
<text  x="100.80" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.7" y="1877" width="0.2" height="15.0" fill="rgb(215,222,2)" rx="2" ry="2" />
<text  x="64.73" y="1887.5" ></text>
</g>
<g >
<title>process_backlog (8 samples, 0.13%)</title><rect x="297.8" y="1653" width="1.6" height="15.0" fill="rgb(229,108,45)" rx="2" ry="2" />
<text  x="300.77" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="498.1" y="1877" width="0.8" height="15.0" fill="rgb(246,55,4)" rx="2" ry="2" />
<text  x="501.13" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="154.1" y="1733" width="0.2" height="15.0" fill="rgb(238,123,19)" rx="2" ry="2" />
<text  x="157.08" y="1743.5" ></text>
</g>
<g >
<title>sk_reset_timer (14 samples, 0.24%)</title><rect x="813.4" y="1637" width="2.8" height="15.0" fill="rgb(217,56,20)" rx="2" ry="2" />
<text  x="816.45" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="637.3" y="1973" width="1.1" height="15.0" fill="rgb(242,93,22)" rx="2" ry="2" />
<text  x="640.26" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="658.5" y="1989" width="0.2" height="15.0" fill="rgb(217,185,25)" rx="2" ry="2" />
<text  x="661.46" y="1999.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1112.7" y="1445" width="0.2" height="15.0" fill="rgb(214,225,47)" rx="2" ry="2" />
<text  x="1115.71" y="1455.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="739.3" y="1701" width="0.4" height="15.0" fill="rgb(234,59,38)" rx="2" ry="2" />
<text  x="742.32" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="330.5" y="1653" width="0.2" height="15.0" fill="rgb(211,113,39)" rx="2" ry="2" />
<text  x="333.47" y="1663.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="1003.7" y="1989" width="0.2" height="15.0" fill="rgb(249,164,42)" rx="2" ry="2" />
<text  x="1006.71" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="325.3" y="1653" width="0.2" height="15.0" fill="rgb(216,166,35)" rx="2" ry="2" />
<text  x="328.31" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_active_ (4 samples, 0.07%)</title><rect x="1140.8" y="2053" width="0.8" height="15.0" fill="rgb(207,69,48)" rx="2" ry="2" />
<text  x="1143.85" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1149.2" y="1941" width="0.2" height="15.0" fill="rgb(239,137,6)" rx="2" ry="2" />
<text  x="1152.17" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="619.4" y="1973" width="0.2" height="15.0" fill="rgb(217,194,34)" rx="2" ry="2" />
<text  x="622.42" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (3 samples, 0.05%)</title><rect x="696.1" y="1893" width="0.6" height="15.0" fill="rgb(217,225,15)" rx="2" ry="2" />
<text  x="699.12" y="1903.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (1 samples, 0.02%)</title><rect x="742.5" y="1637" width="0.2" height="15.0" fill="rgb(252,27,33)" rx="2" ry="2" />
<text  x="745.50" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="596.2" y="1765" width="0.2" height="15.0" fill="rgb(219,19,35)" rx="2" ry="2" />
<text  x="599.23" y="1775.5" ></text>
</g>
<g >
<title>__d_instantiate (4 samples, 0.07%)</title><rect x="413.7" y="1925" width="0.8" height="15.0" fill="rgb(240,191,25)" rx="2" ry="2" />
<text  x="416.71" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="382.2" y="1909" width="0.6" height="15.0" fill="rgb(224,96,52)" rx="2" ry="2" />
<text  x="385.19" y="1919.5" ></text>
</g>
<g >
<title>__GI___setsockopt (2 samples, 0.03%)</title><rect x="1169.6" y="2037" width="0.4" height="15.0" fill="rgb(242,26,33)" rx="2" ry="2" />
<text  x="1172.59" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1011.2" y="1957" width="0.2" height="15.0" fill="rgb(215,157,28)" rx="2" ry="2" />
<text  x="1014.24" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1163.6" y="1765" width="0.2" height="15.0" fill="rgb(241,20,22)" rx="2" ry="2" />
<text  x="1166.64" y="1775.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.22%)</title><rect x="11.4" y="1941" width="2.6" height="15.0" fill="rgb(232,66,50)" rx="2" ry="2" />
<text  x="14.39" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="898.9" y="1813" width="0.2" height="15.0" fill="rgb(210,87,28)" rx="2" ry="2" />
<text  x="901.86" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="82.1" y="1893" width="0.2" height="15.0" fill="rgb(217,130,22)" rx="2" ry="2" />
<text  x="85.14" y="1903.5" ></text>
</g>
<g >
<title>inet_release (388 samples, 6.52%)</title><rect x="753.8" y="1765" width="76.9" height="15.0" fill="rgb(214,69,51)" rx="2" ry="2" />
<text  x="756.79" y="1775.5" >inet_rel..</text>
</g>
<g >
<title>accept4@plt (1 samples, 0.02%)</title><rect x="24.9" y="2005" width="0.2" height="15.0" fill="rgb(222,123,7)" rx="2" ry="2" />
<text  x="27.86" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="872.7" y="1973" width="0.4" height="15.0" fill="rgb(209,27,18)" rx="2" ry="2" />
<text  x="875.70" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (9 samples, 0.15%)</title><rect x="571.7" y="2005" width="1.7" height="15.0" fill="rgb(224,141,38)" rx="2" ry="2" />
<text  x="574.66" y="2015.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="199.5" y="2021" width="0.2" height="15.0" fill="rgb(247,27,35)" rx="2" ry="2" />
<text  x="202.47" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="164.0" y="1941" width="0.2" height="15.0" fill="rgb(239,0,21)" rx="2" ry="2" />
<text  x="166.99" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (10 samples, 0.17%)</title><rect x="982.1" y="2037" width="2.0" height="15.0" fill="rgb(210,88,4)" rx="2" ry="2" />
<text  x="985.10" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="684.0" y="1877" width="0.2" height="15.0" fill="rgb(206,156,32)" rx="2" ry="2" />
<text  x="687.03" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="563.3" y="1893" width="0.2" height="15.0" fill="rgb(227,219,10)" rx="2" ry="2" />
<text  x="566.34" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="77.8" y="1941" width="0.6" height="15.0" fill="rgb(235,200,54)" rx="2" ry="2" />
<text  x="80.78" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="913.5" y="1989" width="0.8" height="15.0" fill="rgb(228,110,1)" rx="2" ry="2" />
<text  x="916.53" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="81.9" y="1909" width="0.4" height="15.0" fill="rgb(252,120,38)" rx="2" ry="2" />
<text  x="84.94" y="1919.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="161.4" y="1573" width="0.2" height="15.0" fill="rgb(254,36,29)" rx="2" ry="2" />
<text  x="164.41" y="1583.5" ></text>
</g>
<g >
<title>tcp_rcv_established (42 samples, 0.71%)</title><rect x="1111.5" y="1557" width="8.3" height="15.0" fill="rgb(236,143,37)" rx="2" ry="2" />
<text  x="1114.52" y="1567.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="871.1" y="2005" width="0.2" height="15.0" fill="rgb(213,59,21)" rx="2" ry="2" />
<text  x="874.12" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1163.6" y="1797" width="0.4" height="15.0" fill="rgb(249,19,18)" rx="2" ry="2" />
<text  x="1166.64" y="1807.5" ></text>
</g>
<g >
<title>sk_reset_timer (25 samples, 0.42%)</title><rect x="325.7" y="1781" width="5.0" height="15.0" fill="rgb(240,11,37)" rx="2" ry="2" />
<text  x="328.71" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="330.5" y="1637" width="0.2" height="15.0" fill="rgb(238,221,20)" rx="2" ry="2" />
<text  x="333.47" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (9 samples, 0.15%)</title><rect x="999.5" y="1893" width="1.8" height="15.0" fill="rgb(205,194,15)" rx="2" ry="2" />
<text  x="1002.54" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="343.5" y="1925" width="0.6" height="15.0" fill="rgb(246,158,24)" rx="2" ry="2" />
<text  x="346.55" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="274.8" y="1621" width="0.2" height="15.0" fill="rgb(231,52,39)" rx="2" ry="2" />
<text  x="277.78" y="1631.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="660.6" y="2005" width="0.2" height="15.0" fill="rgb(225,99,51)" rx="2" ry="2" />
<text  x="663.64" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="992.2" y="1973" width="1.8" height="15.0" fill="rgb(242,155,7)" rx="2" ry="2" />
<text  x="995.21" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="256.5" y="1637" width="0.2" height="15.0" fill="rgb(205,128,28)" rx="2" ry="2" />
<text  x="259.54" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="736.0" y="1669" width="0.2" height="15.0" fill="rgb(221,157,52)" rx="2" ry="2" />
<text  x="738.96" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="166.6" y="2005" width="0.2" height="15.0" fill="rgb(208,183,39)" rx="2" ry="2" />
<text  x="169.57" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="56.6" y="1941" width="1.0" height="15.0" fill="rgb(222,44,4)" rx="2" ry="2" />
<text  x="59.57" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1129.2" y="2037" width="0.2" height="15.0" fill="rgb(253,164,50)" rx="2" ry="2" />
<text  x="1132.16" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="517.0" y="1957" width="0.4" height="15.0" fill="rgb(213,125,19)" rx="2" ry="2" />
<text  x="519.96" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1099.0" y="1909" width="0.4" height="15.0" fill="rgb(241,5,8)" rx="2" ry="2" />
<text  x="1102.03" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="139.4" y="1941" width="0.2" height="15.0" fill="rgb(234,186,15)" rx="2" ry="2" />
<text  x="142.42" y="1951.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="898.5" y="2005" width="0.2" height="15.0" fill="rgb(221,95,5)" rx="2" ry="2" />
<text  x="901.47" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1189.6" y="2021" width="0.2" height="15.0" fill="rgb(240,137,2)" rx="2" ry="2" />
<text  x="1192.60" y="2031.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(241,60,18)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="849.1" y="1877" width="0.4" height="15.0" fill="rgb(211,187,30)" rx="2" ry="2" />
<text  x="852.12" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1107.0" y="1861" width="0.2" height="15.0" fill="rgb(232,90,18)" rx="2" ry="2" />
<text  x="1109.96" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="120.8" y="165" width="0.2" height="15.0" fill="rgb(211,103,7)" rx="2" ry="2" />
<text  x="123.79" y="175.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="1107.0" y="1733" width="0.2" height="15.0" fill="rgb(214,221,5)" rx="2" ry="2" />
<text  x="1109.96" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="596.2" y="1781" width="0.2" height="15.0" fill="rgb(206,180,46)" rx="2" ry="2" />
<text  x="599.23" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="215.3" y="1765" width="0.2" height="15.0" fill="rgb(236,205,28)" rx="2" ry="2" />
<text  x="218.32" y="1775.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="323.1" y="1525" width="0.2" height="15.0" fill="rgb(221,70,14)" rx="2" ry="2" />
<text  x="326.13" y="1535.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="578.4" y="1973" width="0.2" height="15.0" fill="rgb(242,132,10)" rx="2" ry="2" />
<text  x="581.40" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="903.6" y="1957" width="0.2" height="15.0" fill="rgb(217,200,7)" rx="2" ry="2" />
<text  x="906.62" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="127.7" y="1733" width="0.2" height="15.0" fill="rgb(207,89,50)" rx="2" ry="2" />
<text  x="130.72" y="1743.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="392.9" y="1669" width="0.2" height="15.0" fill="rgb(212,17,19)" rx="2" ry="2" />
<text  x="395.90" y="1679.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (12 samples, 0.20%)</title><rect x="11.4" y="1845" width="2.4" height="15.0" fill="rgb(227,91,21)" rx="2" ry="2" />
<text  x="14.39" y="1855.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="1083.8" y="1749" width="0.2" height="15.0" fill="rgb(218,191,8)" rx="2" ry="2" />
<text  x="1086.77" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="532.0" y="1845" width="0.2" height="15.0" fill="rgb(224,166,39)" rx="2" ry="2" />
<text  x="535.02" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseStart (1 samples, 0.02%)</title><rect x="712.4" y="1989" width="0.2" height="15.0" fill="rgb(209,116,18)" rx="2" ry="2" />
<text  x="715.37" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="333.6" y="1797" width="0.2" height="15.0" fill="rgb(226,211,20)" rx="2" ry="2" />
<text  x="336.64" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="537.0" y="1765" width="0.2" height="15.0" fill="rgb(221,124,36)" rx="2" ry="2" />
<text  x="539.98" y="1775.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="388.3" y="1909" width="0.2" height="15.0" fill="rgb(241,40,39)" rx="2" ry="2" />
<text  x="391.34" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="151.3" y="1877" width="0.2" height="15.0" fill="rgb(235,81,31)" rx="2" ry="2" />
<text  x="154.31" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.54%)</title><rect x="102.0" y="2005" width="29.9" height="15.0" fill="rgb(246,94,13)" rx="2" ry="2" />
<text  x="104.96" y="2015.5" >[u..</text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (25 samples, 0.42%)</title><rect x="58.2" y="1941" width="4.9" height="15.0" fill="rgb(236,78,33)" rx="2" ry="2" />
<text  x="61.16" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (291 samples, 4.89%)</title><rect x="36.4" y="2005" width="57.6" height="15.0" fill="rgb(213,68,38)" rx="2" ry="2" />
<text  x="39.36" y="2015.5" >folly:..</text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="210.4" y="1653" width="0.2" height="15.0" fill="rgb(254,45,41)" rx="2" ry="2" />
<text  x="213.37" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="859.4" y="1925" width="0.2" height="15.0" fill="rgb(246,125,7)" rx="2" ry="2" />
<text  x="862.43" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="163.2" y="1909" width="0.2" height="15.0" fill="rgb(235,70,37)" rx="2" ry="2" />
<text  x="166.20" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1079.0" y="1861" width="0.6" height="15.0" fill="rgb(221,26,3)" rx="2" ry="2" />
<text  x="1082.02" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.07%)</title><rect x="1034.4" y="2037" width="0.8" height="15.0" fill="rgb(234,116,14)" rx="2" ry="2" />
<text  x="1037.42" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="341.8" y="1781" width="0.4" height="15.0" fill="rgb(254,93,14)" rx="2" ry="2" />
<text  x="344.76" y="1791.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="112.3" y="53" width="1.0" height="15.0" fill="rgb(238,223,31)" rx="2" ry="2" />
<text  x="115.26" y="63.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.0" y="1909" width="0.2" height="15.0" fill="rgb(246,11,21)" rx="2" ry="2" />
<text  x="104.96" y="1919.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (3 samples, 0.05%)</title><rect x="85.5" y="1957" width="0.6" height="15.0" fill="rgb(233,104,53)" rx="2" ry="2" />
<text  x="88.51" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="73.6" y="1957" width="0.2" height="15.0" fill="rgb(225,199,9)" rx="2" ry="2" />
<text  x="76.62" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="684.0" y="1989" width="0.2" height="15.0" fill="rgb(212,177,13)" rx="2" ry="2" />
<text  x="687.03" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (9 samples, 0.15%)</title><rect x="764.1" y="1701" width="1.8" height="15.0" fill="rgb(219,196,10)" rx="2" ry="2" />
<text  x="767.10" y="1711.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="886.4" y="1957" width="0.2" height="15.0" fill="rgb(250,87,47)" rx="2" ry="2" />
<text  x="889.38" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.24%)</title><rect x="11.2" y="2021" width="2.8" height="15.0" fill="rgb(227,25,47)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (1 samples, 0.02%)</title><rect x="21.5" y="2037" width="0.2" height="15.0" fill="rgb(239,30,19)" rx="2" ry="2" />
<text  x="24.49" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="622.2" y="1957" width="0.2" height="15.0" fill="rgb(233,226,25)" rx="2" ry="2" />
<text  x="625.20" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="645.0" y="1925" width="0.4" height="15.0" fill="rgb(228,26,26)" rx="2" ry="2" />
<text  x="647.99" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="453" width="17.9" height="15.0" fill="rgb(237,111,37)" rx="2" ry="2" />
<text  x="106.35" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="119.8" y="85" width="0.2" height="15.0" fill="rgb(250,2,1)" rx="2" ry="2" />
<text  x="122.80" y="95.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="127.7" y="1653" width="0.2" height="15.0" fill="rgb(214,151,42)" rx="2" ry="2" />
<text  x="130.72" y="1663.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (2 samples, 0.03%)</title><rect x="683.6" y="1973" width="0.4" height="15.0" fill="rgb(220,30,1)" rx="2" ry="2" />
<text  x="686.63" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="121.0" y="69" width="0.2" height="15.0" fill="rgb(211,134,51)" rx="2" ry="2" />
<text  x="123.98" y="79.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="952.4" y="1989" width="0.6" height="15.0" fill="rgb(248,107,22)" rx="2" ry="2" />
<text  x="955.37" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.18%)</title><rect x="524.1" y="1989" width="2.2" height="15.0" fill="rgb(237,96,9)" rx="2" ry="2" />
<text  x="527.09" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="180.8" y="1973" width="1.4" height="15.0" fill="rgb(234,192,47)" rx="2" ry="2" />
<text  x="183.84" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="341.8" y="1765" width="0.4" height="15.0" fill="rgb(207,209,13)" rx="2" ry="2" />
<text  x="344.76" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1023.1" y="1989" width="0.2" height="15.0" fill="rgb(240,141,41)" rx="2" ry="2" />
<text  x="1026.13" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1173.9" y="1973" width="0.2" height="15.0" fill="rgb(210,91,42)" rx="2" ry="2" />
<text  x="1176.95" y="1983.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.03%)</title><rect x="1118.9" y="1509" width="0.3" height="15.0" fill="rgb(246,149,7)" rx="2" ry="2" />
<text  x="1121.85" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="51.6" y="1781" width="0.2" height="15.0" fill="rgb(207,144,32)" rx="2" ry="2" />
<text  x="54.62" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="707.2" y="1861" width="0.2" height="15.0" fill="rgb(219,27,33)" rx="2" ry="2" />
<text  x="710.22" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="969.0" y="1637" width="0.2" height="15.0" fill="rgb(222,27,51)" rx="2" ry="2" />
<text  x="972.02" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="102.8" y="1205" width="19.2" height="15.0" fill="rgb(208,201,2)" rx="2" ry="2" />
<text  x="105.75" y="1215.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="891.5" y="1925" width="0.2" height="15.0" fill="rgb(215,144,29)" rx="2" ry="2" />
<text  x="894.53" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (42 samples, 0.71%)</title><rect x="1111.5" y="1573" width="8.3" height="15.0" fill="rgb(222,69,7)" rx="2" ry="2" />
<text  x="1114.52" y="1583.5" ></text>
</g>
<g >
<title>_IO_setb (3 samples, 0.05%)</title><rect x="198.1" y="2037" width="0.6" height="15.0" fill="rgb(211,97,31)" rx="2" ry="2" />
<text  x="201.08" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="491.0" y="1653" width="0.2" height="15.0" fill="rgb(220,5,10)" rx="2" ry="2" />
<text  x="494.00" y="1663.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="14.0" y="2037" width="0.2" height="15.0" fill="rgb(205,9,2)" rx="2" ry="2" />
<text  x="16.96" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="517.2" y="1941" width="0.2" height="15.0" fill="rgb(254,37,32)" rx="2" ry="2" />
<text  x="520.16" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="410.7" y="1909" width="2.8" height="15.0" fill="rgb(218,52,41)" rx="2" ry="2" />
<text  x="413.73" y="1919.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::getEventBase (1 samples, 0.02%)</title><rect x="662.4" y="1989" width="0.2" height="15.0" fill="rgb(227,211,48)" rx="2" ry="2" />
<text  x="665.43" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="156.7" y="1877" width="0.8" height="15.0" fill="rgb(243,54,27)" rx="2" ry="2" />
<text  x="159.66" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="259.7" y="1733" width="0.2" height="15.0" fill="rgb(223,68,8)" rx="2" ry="2" />
<text  x="262.71" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="537.0" y="1861" width="0.2" height="15.0" fill="rgb(216,126,45)" rx="2" ry="2" />
<text  x="539.98" y="1871.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1033.4" y="1877" width="0.2" height="15.0" fill="rgb(212,193,52)" rx="2" ry="2" />
<text  x="1036.43" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (3 samples, 0.05%)</title><rect x="142.4" y="1957" width="0.6" height="15.0" fill="rgb(209,134,26)" rx="2" ry="2" />
<text  x="145.39" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="898.1" y="1957" width="0.2" height="15.0" fill="rgb(235,211,16)" rx="2" ry="2" />
<text  x="901.07" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="512.4" y="1957" width="0.2" height="15.0" fill="rgb(224,81,6)" rx="2" ry="2" />
<text  x="515.40" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="325.3" y="1669" width="0.2" height="15.0" fill="rgb(248,193,45)" rx="2" ry="2" />
<text  x="328.31" y="1679.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (53 samples, 0.89%)</title><rect x="608.5" y="1941" width="10.5" height="15.0" fill="rgb(216,197,43)" rx="2" ry="2" />
<text  x="611.52" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="382.8" y="1925" width="0.4" height="15.0" fill="rgb(230,161,47)" rx="2" ry="2" />
<text  x="385.79" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="895.9" y="1941" width="0.2" height="15.0" fill="rgb(220,169,17)" rx="2" ry="2" />
<text  x="898.89" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.4" y="1797" width="0.2" height="15.0" fill="rgb(251,179,5)" rx="2" ry="2" />
<text  x="229.42" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="67.9" y="1925" width="0.2" height="15.0" fill="rgb(247,48,28)" rx="2" ry="2" />
<text  x="70.87" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1845" width="0.2" height="15.0" fill="rgb(232,144,21)" rx="2" ry="2" />
<text  x="149.95" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="468.6" y="1925" width="0.2" height="15.0" fill="rgb(211,94,9)" rx="2" ry="2" />
<text  x="471.60" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="460.7" y="1749" width="0.2" height="15.0" fill="rgb(220,227,20)" rx="2" ry="2" />
<text  x="463.68" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (31 samples, 0.52%)</title><rect x="223.1" y="1909" width="6.1" height="15.0" fill="rgb(232,116,17)" rx="2" ry="2" />
<text  x="226.05" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (731 samples, 12.28%)</title><rect x="716.1" y="1973" width="144.9" height="15.0" fill="rgb(232,100,9)" rx="2" ry="2" />
<text  x="719.14" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (29 samples, 0.49%)</title><rect x="1006.7" y="2021" width="5.7" height="15.0" fill="rgb(225,34,0)" rx="2" ry="2" />
<text  x="1009.68" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.6" y="1797" width="0.2" height="15.0" fill="rgb(209,20,11)" rx="2" ry="2" />
<text  x="163.62" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="215.3" y="1877" width="0.2" height="15.0" fill="rgb(232,168,29)" rx="2" ry="2" />
<text  x="218.32" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="274.8" y="1845" width="0.4" height="15.0" fill="rgb(209,127,18)" rx="2" ry="2" />
<text  x="277.78" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="698.5" y="1861" width="0.4" height="15.0" fill="rgb(248,140,20)" rx="2" ry="2" />
<text  x="701.50" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="1142.8" y="1973" width="0.2" height="15.0" fill="rgb(242,159,12)" rx="2" ry="2" />
<text  x="1145.83" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="174.5" y="2021" width="0.2" height="15.0" fill="rgb(221,0,21)" rx="2" ry="2" />
<text  x="177.49" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="576.4" y="1941" width="0.2" height="15.0" fill="rgb(247,143,49)" rx="2" ry="2" />
<text  x="579.42" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="980.7" y="2021" width="1.4" height="15.0" fill="rgb(205,106,16)" rx="2" ry="2" />
<text  x="983.72" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.73%)</title><rect x="102.6" y="1301" width="20.4" height="15.0" fill="rgb(218,207,2)" rx="2" ry="2" />
<text  x="105.55" y="1311.5" ></text>
</g>
<g >
<title>skb_free_head (22 samples, 0.37%)</title><rect x="1114.1" y="1461" width="4.4" height="15.0" fill="rgb(243,86,25)" rx="2" ry="2" />
<text  x="1117.09" y="1471.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="880.6" y="1941" width="0.4" height="15.0" fill="rgb(208,88,4)" rx="2" ry="2" />
<text  x="883.63" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="322.5" y="1685" width="0.2" height="15.0" fill="rgb(207,52,46)" rx="2" ry="2" />
<text  x="325.54" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (85 samples, 1.43%)</title><rect x="549.9" y="2005" width="16.8" height="15.0" fill="rgb(246,59,4)" rx="2" ry="2" />
<text  x="552.86" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.13%)</title><rect x="594.6" y="1829" width="1.6" height="15.0" fill="rgb(205,211,17)" rx="2" ry="2" />
<text  x="597.65" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(221,212,10)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.10%)</title><rect x="595.0" y="1765" width="1.2" height="15.0" fill="rgb(209,61,17)" rx="2" ry="2" />
<text  x="598.05" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="330.5" y="1589" width="0.2" height="15.0" fill="rgb(231,44,37)" rx="2" ry="2" />
<text  x="333.47" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="215.3" y="1749" width="0.2" height="15.0" fill="rgb(235,160,3)" rx="2" ry="2" />
<text  x="218.32" y="1759.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (5 samples, 0.08%)</title><rect x="847.1" y="1925" width="1.0" height="15.0" fill="rgb(208,172,12)" rx="2" ry="2" />
<text  x="850.14" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="881.0" y="1909" width="0.2" height="15.0" fill="rgb(214,133,4)" rx="2" ry="2" />
<text  x="884.03" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="392.9" y="1877" width="0.2" height="15.0" fill="rgb(243,94,20)" rx="2" ry="2" />
<text  x="395.90" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="136.6" y="1925" width="0.2" height="15.0" fill="rgb(216,97,4)" rx="2" ry="2" />
<text  x="139.64" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="374.5" y="1925" width="0.2" height="15.0" fill="rgb(223,128,5)" rx="2" ry="2" />
<text  x="377.46" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1028.7" y="1957" width="0.2" height="15.0" fill="rgb(244,164,50)" rx="2" ry="2" />
<text  x="1031.68" y="1967.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(232,45,16)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1079.8" y="1797" width="0.2" height="15.0" fill="rgb(215,1,34)" rx="2" ry="2" />
<text  x="1082.81" y="1807.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="638.4" y="2005" width="0.6" height="15.0" fill="rgb(243,132,39)" rx="2" ry="2" />
<text  x="641.45" y="2015.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="392.9" y="1605" width="0.2" height="15.0" fill="rgb(231,143,54)" rx="2" ry="2" />
<text  x="395.90" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="74.6" y="1733" width="0.2" height="15.0" fill="rgb(254,92,51)" rx="2" ry="2" />
<text  x="77.61" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="707.2" y="1781" width="0.2" height="15.0" fill="rgb(253,42,39)" rx="2" ry="2" />
<text  x="710.22" y="1791.5" ></text>
</g>
<g >
<title>lock_sock_nested (8 samples, 0.13%)</title><rect x="261.1" y="1893" width="1.6" height="15.0" fill="rgb(227,189,2)" rx="2" ry="2" />
<text  x="264.10" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="745.9" y="1637" width="0.4" height="15.0" fill="rgb(205,91,9)" rx="2" ry="2" />
<text  x="748.86" y="1647.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="678.5" y="1877" width="0.4" height="15.0" fill="rgb(254,147,41)" rx="2" ry="2" />
<text  x="681.48" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="271.4" y="1781" width="0.2" height="15.0" fill="rgb(208,219,22)" rx="2" ry="2" />
<text  x="274.41" y="1791.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="330.5" y="1429" width="0.2" height="15.0" fill="rgb(216,25,17)" rx="2" ry="2" />
<text  x="333.47" y="1439.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="749.2" y="1797" width="0.2" height="15.0" fill="rgb(243,125,25)" rx="2" ry="2" />
<text  x="752.23" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="323.1" y="1605" width="0.2" height="15.0" fill="rgb(216,101,37)" rx="2" ry="2" />
<text  x="326.13" y="1615.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="462.3" y="1957" width="0.2" height="15.0" fill="rgb(246,80,12)" rx="2" ry="2" />
<text  x="465.26" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="171.3" y="1765" width="0.2" height="15.0" fill="rgb(243,61,46)" rx="2" ry="2" />
<text  x="174.32" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="630.5" y="1909" width="0.2" height="15.0" fill="rgb(254,117,22)" rx="2" ry="2" />
<text  x="633.52" y="1919.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="365.5" y="1925" width="0.2" height="15.0" fill="rgb(216,200,33)" rx="2" ry="2" />
<text  x="368.55" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="645.4" y="1925" width="0.2" height="15.0" fill="rgb(220,20,14)" rx="2" ry="2" />
<text  x="648.38" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="574.2" y="1989" width="0.2" height="15.0" fill="rgb(215,137,18)" rx="2" ry="2" />
<text  x="577.24" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (8 samples, 0.13%)</title><rect x="272.4" y="1861" width="1.6" height="15.0" fill="rgb(248,113,44)" rx="2" ry="2" />
<text  x="275.40" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1175.5" y="1861" width="0.2" height="15.0" fill="rgb(205,222,1)" rx="2" ry="2" />
<text  x="1178.53" y="1871.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="343.7" y="1653" width="0.2" height="15.0" fill="rgb(246,87,32)" rx="2" ry="2" />
<text  x="346.75" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="478.1" y="1781" width="0.2" height="15.0" fill="rgb(211,182,4)" rx="2" ry="2" />
<text  x="481.12" y="1791.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="675.9" y="1845" width="0.2" height="15.0" fill="rgb(246,101,39)" rx="2" ry="2" />
<text  x="678.91" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (26 samples, 0.44%)</title><rect x="1006.7" y="2005" width="5.1" height="15.0" fill="rgb(208,47,34)" rx="2" ry="2" />
<text  x="1009.68" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.13%)</title><rect x="539.4" y="1941" width="1.5" height="15.0" fill="rgb(206,215,18)" rx="2" ry="2" />
<text  x="542.36" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (6 samples, 0.10%)</title><rect x="958.9" y="2037" width="1.2" height="15.0" fill="rgb(232,201,27)" rx="2" ry="2" />
<text  x="961.92" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="149.5" y="1909" width="0.2" height="15.0" fill="rgb(217,109,6)" rx="2" ry="2" />
<text  x="152.52" y="1919.5" ></text>
</g>
<g >
<title>sock_destroy_inode (16 samples, 0.27%)</title><rect x="743.1" y="1685" width="3.2" height="15.0" fill="rgb(239,106,22)" rx="2" ry="2" />
<text  x="746.09" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (116 samples, 1.95%)</title><rect x="65.1" y="1989" width="23.0" height="15.0" fill="rgb(234,144,50)" rx="2" ry="2" />
<text  x="68.10" y="1999.5" >f..</text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="256.5" y="1621" width="0.2" height="15.0" fill="rgb(253,162,3)" rx="2" ry="2" />
<text  x="259.54" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="174.3" y="1797" width="0.2" height="15.0" fill="rgb(239,161,37)" rx="2" ry="2" />
<text  x="177.30" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="437" width="17.9" height="15.0" fill="rgb(209,34,43)" rx="2" ry="2" />
<text  x="106.35" y="447.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1107.0" y="1765" width="0.2" height="15.0" fill="rgb(235,9,32)" rx="2" ry="2" />
<text  x="1109.96" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (205 samples, 3.44%)</title><rect x="581.8" y="2037" width="40.6" height="15.0" fill="rgb(227,108,45)" rx="2" ry="2" />
<text  x="584.77" y="2047.5" >fac..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="335.6" y="1845" width="0.2" height="15.0" fill="rgb(238,82,40)" rx="2" ry="2" />
<text  x="338.62" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="898.9" y="1893" width="0.2" height="15.0" fill="rgb(231,23,26)" rx="2" ry="2" />
<text  x="901.86" y="1903.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="1083.8" y="1765" width="0.2" height="15.0" fill="rgb(251,13,4)" rx="2" ry="2" />
<text  x="1086.77" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~new_allocator (1 samples, 0.02%)</title><rect x="82.7" y="1893" width="0.2" height="15.0" fill="rgb(232,219,26)" rx="2" ry="2" />
<text  x="85.73" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="30.2" y="1941" width="0.2" height="15.0" fill="rgb(221,43,54)" rx="2" ry="2" />
<text  x="33.21" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (3 samples, 0.05%)</title><rect x="599.2" y="1829" width="0.6" height="15.0" fill="rgb(236,36,41)" rx="2" ry="2" />
<text  x="602.21" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="630.9" y="2005" width="0.2" height="15.0" fill="rgb(233,87,41)" rx="2" ry="2" />
<text  x="633.92" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (3 samples, 0.05%)</title><rect x="171.1" y="1989" width="0.6" height="15.0" fill="rgb(219,51,19)" rx="2" ry="2" />
<text  x="174.13" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1188.8" y="1973" width="0.2" height="15.0" fill="rgb(206,108,41)" rx="2" ry="2" />
<text  x="1191.81" y="1983.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="321.0" y="1541" width="0.2" height="15.0" fill="rgb(212,57,51)" rx="2" ry="2" />
<text  x="323.95" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="256.5" y="1733" width="0.2" height="15.0" fill="rgb(239,180,14)" rx="2" ry="2" />
<text  x="259.54" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1173.7" y="1957" width="0.2" height="15.0" fill="rgb(234,144,31)" rx="2" ry="2" />
<text  x="1176.75" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="631.7" y="2037" width="0.2" height="15.0" fill="rgb(231,133,19)" rx="2" ry="2" />
<text  x="634.71" y="2047.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="198.9" y="2021" width="0.4" height="15.0" fill="rgb(233,138,5)" rx="2" ry="2" />
<text  x="201.87" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="158.8" y="1893" width="0.2" height="15.0" fill="rgb(206,199,51)" rx="2" ry="2" />
<text  x="161.84" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="757" width="18.1" height="15.0" fill="rgb(205,14,26)" rx="2" ry="2" />
<text  x="106.35" y="767.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (2 samples, 0.03%)</title><rect x="605.4" y="1973" width="0.3" height="15.0" fill="rgb(212,58,28)" rx="2" ry="2" />
<text  x="608.35" y="1983.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="1023.1" y="1925" width="0.2" height="15.0" fill="rgb(229,66,34)" rx="2" ry="2" />
<text  x="1026.13" y="1935.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="62.5" y="1893" width="0.6" height="15.0" fill="rgb(240,27,52)" rx="2" ry="2" />
<text  x="65.52" y="1903.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1140.3" y="2053" width="0.2" height="15.0" fill="rgb(216,79,32)" rx="2" ry="2" />
<text  x="1143.26" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="795.4" y="1509" width="0.2" height="15.0" fill="rgb(227,109,48)" rx="2" ry="2" />
<text  x="798.41" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="323.1" y="1813" width="0.2" height="15.0" fill="rgb(223,64,54)" rx="2" ry="2" />
<text  x="326.13" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="154.1" y="1701" width="0.2" height="15.0" fill="rgb(216,68,42)" rx="2" ry="2" />
<text  x="157.08" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.7" y="1877" width="0.2" height="15.0" fill="rgb(245,35,12)" rx="2" ry="2" />
<text  x="543.74" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="855.7" y="1877" width="0.4" height="15.0" fill="rgb(240,12,49)" rx="2" ry="2" />
<text  x="858.66" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="736.0" y="1717" width="0.2" height="15.0" fill="rgb(210,118,30)" rx="2" ry="2" />
<text  x="738.96" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="225.6" y="1845" width="0.8" height="15.0" fill="rgb(232,152,32)" rx="2" ry="2" />
<text  x="228.63" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="51.6" y="1653" width="0.2" height="15.0" fill="rgb(210,34,3)" rx="2" ry="2" />
<text  x="54.62" y="1663.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1104.6" y="1893" width="0.6" height="15.0" fill="rgb(235,207,24)" rx="2" ry="2" />
<text  x="1107.58" y="1903.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="61.9" y="1813" width="0.2" height="15.0" fill="rgb(249,119,45)" rx="2" ry="2" />
<text  x="64.92" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="541.9" y="1989" width="0.4" height="15.0" fill="rgb(221,130,21)" rx="2" ry="2" />
<text  x="544.93" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="901.6" y="1861" width="0.2" height="15.0" fill="rgb(219,75,50)" rx="2" ry="2" />
<text  x="904.64" y="1871.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="538.0" y="1957" width="0.2" height="15.0" fill="rgb(220,180,15)" rx="2" ry="2" />
<text  x="540.97" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (127 samples, 2.13%)</title><rect x="102.2" y="1877" width="25.1" height="15.0" fill="rgb(224,12,31)" rx="2" ry="2" />
<text  x="105.16" y="1887.5" >[..</text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="297.4" y="1477" width="0.2" height="15.0" fill="rgb(231,61,50)" rx="2" ry="2" />
<text  x="300.37" y="1487.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="453.9" y="1973" width="0.2" height="15.0" fill="rgb(220,43,28)" rx="2" ry="2" />
<text  x="456.94" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1079.8" y="1861" width="0.2" height="15.0" fill="rgb(253,70,32)" rx="2" ry="2" />
<text  x="1082.81" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="274.8" y="1765" width="0.4" height="15.0" fill="rgb(223,66,51)" rx="2" ry="2" />
<text  x="277.78" y="1775.5" ></text>
</g>
<g >
<title>__dentry_kill (57 samples, 0.96%)</title><rect x="736.2" y="1765" width="11.3" height="15.0" fill="rgb(241,45,22)" rx="2" ry="2" />
<text  x="739.15" y="1775.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="852.5" y="1893" width="0.2" height="15.0" fill="rgb(247,129,23)" rx="2" ry="2" />
<text  x="855.49" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="223.1" y="1893" width="0.1" height="15.0" fill="rgb(227,206,51)" rx="2" ry="2" />
<text  x="226.05" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="957.7" y="2005" width="0.2" height="15.0" fill="rgb(254,175,42)" rx="2" ry="2" />
<text  x="960.73" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="530.8" y="1973" width="1.4" height="15.0" fill="rgb(219,3,15)" rx="2" ry="2" />
<text  x="533.83" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="839.6" y="1829" width="0.2" height="15.0" fill="rgb(238,165,5)" rx="2" ry="2" />
<text  x="842.61" y="1839.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="585.1" y="1877" width="0.2" height="15.0" fill="rgb(248,62,17)" rx="2" ry="2" />
<text  x="588.14" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (2 samples, 0.03%)</title><rect x="21.7" y="2037" width="0.4" height="15.0" fill="rgb(254,12,23)" rx="2" ry="2" />
<text  x="24.69" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="383.0" y="1749" width="0.2" height="15.0" fill="rgb(211,29,36)" rx="2" ry="2" />
<text  x="385.99" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="50.4" y="1893" width="0.8" height="15.0" fill="rgb(245,61,25)" rx="2" ry="2" />
<text  x="53.43" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="878.3" y="1925" width="0.3" height="15.0" fill="rgb(254,169,27)" rx="2" ry="2" />
<text  x="881.25" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="882.2" y="1861" width="0.4" height="15.0" fill="rgb(247,186,26)" rx="2" ry="2" />
<text  x="885.22" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (2 samples, 0.03%)</title><rect x="846.7" y="1925" width="0.4" height="15.0" fill="rgb(218,36,6)" rx="2" ry="2" />
<text  x="849.74" y="1935.5" ></text>
</g>
<g >
<title>tcp_push (224 samples, 3.76%)</title><rect x="287.1" y="1877" width="44.4" height="15.0" fill="rgb(237,172,49)" rx="2" ry="2" />
<text  x="290.06" y="1887.5" >tcp_..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="116.8" y="53" width="0.2" height="15.0" fill="rgb(234,128,10)" rx="2" ry="2" />
<text  x="119.82" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (96 samples, 1.61%)</title><rect x="873.1" y="2005" width="19.0" height="15.0" fill="rgb(233,83,46)" rx="2" ry="2" />
<text  x="876.10" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="539.9" y="1877" width="0.6" height="15.0" fill="rgb(219,89,54)" rx="2" ry="2" />
<text  x="542.95" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="154.1" y="1877" width="0.2" height="15.0" fill="rgb(237,222,49)" rx="2" ry="2" />
<text  x="157.08" y="1887.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="333.6" y="1621" width="0.2" height="15.0" fill="rgb(231,201,32)" rx="2" ry="2" />
<text  x="336.64" y="1631.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (5 samples, 0.08%)</title><rect x="883.6" y="1941" width="1.0" height="15.0" fill="rgb(219,119,40)" rx="2" ry="2" />
<text  x="886.60" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="881.0" y="1925" width="0.2" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="884.03" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="92.4" y="1941" width="0.2" height="15.0" fill="rgb(228,53,27)" rx="2" ry="2" />
<text  x="95.45" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="274.8" y="1701" width="0.4" height="15.0" fill="rgb(217,26,54)" rx="2" ry="2" />
<text  x="277.78" y="1711.5" ></text>
</g>
<g >
<title>expand_files (2 samples, 0.03%)</title><rect x="365.1" y="1925" width="0.4" height="15.0" fill="rgb(212,205,38)" rx="2" ry="2" />
<text  x="368.15" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="113.3" y="37" width="0.2" height="15.0" fill="rgb(226,108,7)" rx="2" ry="2" />
<text  x="116.25" y="47.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="975.2" y="2005" width="0.2" height="15.0" fill="rgb(215,59,45)" rx="2" ry="2" />
<text  x="978.17" y="2015.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="730.4" y="1701" width="0.8" height="15.0" fill="rgb(211,153,35)" rx="2" ry="2" />
<text  x="733.41" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (3 samples, 0.05%)</title><rect x="142.4" y="1941" width="0.6" height="15.0" fill="rgb(231,77,42)" rx="2" ry="2" />
<text  x="145.39" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (7 samples, 0.12%)</title><rect x="855.1" y="1909" width="1.4" height="15.0" fill="rgb(213,103,16)" rx="2" ry="2" />
<text  x="858.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 1.88%)</title><rect x="984.1" y="2021" width="22.2" height="15.0" fill="rgb(219,107,46)" rx="2" ry="2" />
<text  x="987.08" y="2031.5" >[..</text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="783.3" y="1477" width="0.2" height="15.0" fill="rgb(243,20,38)" rx="2" ry="2" />
<text  x="786.32" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 0.13%)</title><rect x="281.9" y="1845" width="1.6" height="15.0" fill="rgb(230,185,12)" rx="2" ry="2" />
<text  x="284.91" y="1855.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (2 samples, 0.03%)</title><rect x="1018.8" y="2005" width="0.4" height="15.0" fill="rgb(211,125,33)" rx="2" ry="2" />
<text  x="1021.77" y="2015.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (5 samples, 0.08%)</title><rect x="509.2" y="1941" width="1.0" height="15.0" fill="rgb(253,224,46)" rx="2" ry="2" />
<text  x="512.23" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_atr_compute_sig_hash_82599 (1 samples, 0.02%)</title><rect x="312.4" y="1637" width="0.2" height="15.0" fill="rgb(236,156,30)" rx="2" ry="2" />
<text  x="315.43" y="1647.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="475.9" y="1925" width="0.2" height="15.0" fill="rgb(231,106,50)" rx="2" ry="2" />
<text  x="478.94" y="1935.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="769.4" y="1701" width="0.2" height="15.0" fill="rgb(220,128,10)" rx="2" ry="2" />
<text  x="772.45" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="323.1" y="1781" width="0.2" height="15.0" fill="rgb(240,66,20)" rx="2" ry="2" />
<text  x="326.13" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="197.7" y="2021" width="0.2" height="15.0" fill="rgb(244,164,32)" rx="2" ry="2" />
<text  x="200.68" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="78.0" y="1925" width="0.4" height="15.0" fill="rgb(254,163,6)" rx="2" ry="2" />
<text  x="80.98" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (86 samples, 1.44%)</title><rect x="666.6" y="1973" width="17.0" height="15.0" fill="rgb(254,39,38)" rx="2" ry="2" />
<text  x="669.59" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1109.3" y="1893" width="0.6" height="15.0" fill="rgb(238,204,14)" rx="2" ry="2" />
<text  x="1112.34" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="259.7" y="1829" width="0.2" height="15.0" fill="rgb(210,75,2)" rx="2" ry="2" />
<text  x="262.71" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (8 samples, 0.13%)</title><rect x="888.0" y="1941" width="1.5" height="15.0" fill="rgb(206,127,18)" rx="2" ry="2" />
<text  x="890.96" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="161.4" y="1589" width="0.2" height="15.0" fill="rgb(227,92,26)" rx="2" ry="2" />
<text  x="164.41" y="1599.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="73.8" y="1925" width="0.2" height="15.0" fill="rgb(233,138,46)" rx="2" ry="2" />
<text  x="76.82" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="888.2" y="1797" width="0.2" height="15.0" fill="rgb(241,88,25)" rx="2" ry="2" />
<text  x="891.16" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1083.8" y="1845" width="0.2" height="15.0" fill="rgb(244,27,28)" rx="2" ry="2" />
<text  x="1086.77" y="1855.5" ></text>
</g>
<g >
<title>sch_direct_xmit (65 samples, 1.09%)</title><rect x="302.7" y="1701" width="12.9" height="15.0" fill="rgb(229,198,47)" rx="2" ry="2" />
<text  x="305.72" y="1711.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="561.9" y="1813" width="0.2" height="15.0" fill="rgb(209,129,5)" rx="2" ry="2" />
<text  x="564.95" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (130 samples, 2.18%)</title><rect x="102.2" y="1909" width="25.7" height="15.0" fill="rgb(227,65,8)" rx="2" ry="2" />
<text  x="105.16" y="1919.5" >[..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="280.7" y="1781" width="0.2" height="15.0" fill="rgb(234,77,21)" rx="2" ry="2" />
<text  x="283.72" y="1791.5" ></text>
</g>
<g >
<title>event_set (2 samples, 0.03%)</title><rect x="853.9" y="1925" width="0.4" height="15.0" fill="rgb(253,207,26)" rx="2" ry="2" />
<text  x="856.88" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="323.1" y="1653" width="0.2" height="15.0" fill="rgb(213,176,31)" rx="2" ry="2" />
<text  x="326.13" y="1663.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="931.0" y="1893" width="0.4" height="15.0" fill="rgb(222,229,51)" rx="2" ry="2" />
<text  x="933.97" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="330.5" y="1669" width="0.2" height="15.0" fill="rgb(205,170,12)" rx="2" ry="2" />
<text  x="333.47" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.2" y="1813" width="0.2" height="15.0" fill="rgb(216,223,33)" rx="2" ry="2" />
<text  x="163.23" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="907.6" y="1973" width="1.0" height="15.0" fill="rgb(233,125,33)" rx="2" ry="2" />
<text  x="910.58" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1188.8" y="1925" width="0.2" height="15.0" fill="rgb(234,204,5)" rx="2" ry="2" />
<text  x="1191.81" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="461.3" y="1813" width="0.2" height="15.0" fill="rgb(215,127,11)" rx="2" ry="2" />
<text  x="464.27" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="117.0" y="53" width="0.4" height="15.0" fill="rgb(244,187,31)" rx="2" ry="2" />
<text  x="120.02" y="63.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="145.8" y="1877" width="0.2" height="15.0" fill="rgb(212,153,10)" rx="2" ry="2" />
<text  x="148.76" y="1887.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(208,224,46)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="596.2" y="1653" width="0.2" height="15.0" fill="rgb(248,221,2)" rx="2" ry="2" />
<text  x="599.23" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="388.5" y="1941" width="0.4" height="15.0" fill="rgb(247,94,36)" rx="2" ry="2" />
<text  x="391.54" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1033.2" y="2021" width="0.4" height="15.0" fill="rgb(222,139,24)" rx="2" ry="2" />
<text  x="1036.23" y="2031.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="1041.4" y="2053" width="0.4" height="15.0" fill="rgb(247,1,3)" rx="2" ry="2" />
<text  x="1044.36" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="898.9" y="1781" width="0.2" height="15.0" fill="rgb(226,153,26)" rx="2" ry="2" />
<text  x="901.86" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="684.0" y="1861" width="0.2" height="15.0" fill="rgb(240,87,48)" rx="2" ry="2" />
<text  x="687.03" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="174.5" y="2005" width="0.2" height="15.0" fill="rgb(251,67,4)" rx="2" ry="2" />
<text  x="177.49" y="2015.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (3 samples, 0.05%)</title><rect x="581.2" y="2021" width="0.6" height="15.0" fill="rgb(234,16,18)" rx="2" ry="2" />
<text  x="584.17" y="2031.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="849.5" y="1589" width="0.2" height="15.0" fill="rgb(251,23,48)" rx="2" ry="2" />
<text  x="852.52" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="630.3" y="1909" width="0.2" height="15.0" fill="rgb(228,53,31)" rx="2" ry="2" />
<text  x="633.32" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="119.8" y="53" width="0.2" height="15.0" fill="rgb(212,76,51)" rx="2" ry="2" />
<text  x="122.80" y="63.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="549" width="17.9" height="15.0" fill="rgb(231,67,47)" rx="2" ry="2" />
<text  x="106.35" y="559.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="975.4" y="2021" width="0.2" height="15.0" fill="rgb(209,26,28)" rx="2" ry="2" />
<text  x="978.36" y="2031.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="804.9" y="1525" width="0.2" height="15.0" fill="rgb(236,72,1)" rx="2" ry="2" />
<text  x="807.92" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (8 samples, 0.13%)</title><rect x="105.7" y="37" width="1.6" height="15.0" fill="rgb(221,73,3)" rx="2" ry="2" />
<text  x="108.72" y="47.5" ></text>
</g>
<g >
<title>ipv4_mtu (5 samples, 0.08%)</title><rect x="818.4" y="1717" width="1.0" height="15.0" fill="rgb(224,88,39)" rx="2" ry="2" />
<text  x="821.40" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="688.2" y="1973" width="0.2" height="15.0" fill="rgb(223,186,40)" rx="2" ry="2" />
<text  x="691.19" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="520.9" y="1989" width="0.2" height="15.0" fill="rgb(223,145,5)" rx="2" ry="2" />
<text  x="523.92" y="1999.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="69.3" y="1509" width="0.2" height="15.0" fill="rgb(223,82,48)" rx="2" ry="2" />
<text  x="72.26" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (9 samples, 0.15%)</title><rect x="530.4" y="1989" width="1.8" height="15.0" fill="rgb(227,9,29)" rx="2" ry="2" />
<text  x="533.44" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="613" width="17.9" height="15.0" fill="rgb(246,145,10)" rx="2" ry="2" />
<text  x="106.35" y="623.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1144.4" y="1989" width="0.2" height="15.0" fill="rgb(221,135,42)" rx="2" ry="2" />
<text  x="1147.42" y="1999.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (395 samples, 6.63%)</title><rect x="17.3" y="2053" width="78.3" height="15.0" fill="rgb(254,55,3)" rx="2" ry="2" />
<text  x="20.33" y="2063.5" >[libevent..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="521.9" y="1925" width="0.2" height="15.0" fill="rgb(231,158,50)" rx="2" ry="2" />
<text  x="524.91" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1107.8" y="1925" width="0.2" height="15.0" fill="rgb(245,171,29)" rx="2" ry="2" />
<text  x="1110.75" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="717.7" y="1861" width="0.2" height="15.0" fill="rgb(233,217,33)" rx="2" ry="2" />
<text  x="720.72" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="1813" width="0.2" height="15.0" fill="rgb(242,11,40)" rx="2" ry="2" />
<text  x="1191.81" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1079.8" y="1845" width="0.2" height="15.0" fill="rgb(212,52,42)" rx="2" ry="2" />
<text  x="1082.81" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="510.8" y="1989" width="0.2" height="15.0" fill="rgb(218,17,31)" rx="2" ry="2" />
<text  x="513.82" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="736.0" y="1749" width="0.2" height="15.0" fill="rgb(250,86,14)" rx="2" ry="2" />
<text  x="738.96" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (9 samples, 0.15%)</title><rect x="1179.7" y="2037" width="1.8" height="15.0" fill="rgb(245,111,22)" rx="2" ry="2" />
<text  x="1182.69" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="676.7" y="1845" width="0.2" height="15.0" fill="rgb(235,59,1)" rx="2" ry="2" />
<text  x="679.70" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="968.8" y="1941" width="0.4" height="15.0" fill="rgb(205,61,16)" rx="2" ry="2" />
<text  x="971.82" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.4" y="2021" width="0.2" height="15.0" fill="rgb(245,5,29)" rx="2" ry="2" />
<text  x="98.42" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="453.7" y="1909" width="0.2" height="15.0" fill="rgb(232,170,51)" rx="2" ry="2" />
<text  x="456.74" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="161.4" y="1861" width="0.2" height="15.0" fill="rgb(243,127,32)" rx="2" ry="2" />
<text  x="164.41" y="1871.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="69.3" y="1541" width="0.2" height="15.0" fill="rgb(247,156,3)" rx="2" ry="2" />
<text  x="72.26" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="1178.5" y="2037" width="1.0" height="15.0" fill="rgb(240,130,34)" rx="2" ry="2" />
<text  x="1181.51" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (5 samples, 0.08%)</title><rect x="864.8" y="1973" width="1.0" height="15.0" fill="rgb(233,62,10)" rx="2" ry="2" />
<text  x="867.78" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (79 samples, 1.33%)</title><rect x="1151.6" y="1989" width="15.6" height="15.0" fill="rgb(239,33,23)" rx="2" ry="2" />
<text  x="1154.55" y="1999.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1181.5" y="2021" width="0.2" height="15.0" fill="rgb(207,54,42)" rx="2" ry="2" />
<text  x="1184.48" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1034.0" y="2005" width="0.2" height="15.0" fill="rgb(215,222,41)" rx="2" ry="2" />
<text  x="1037.03" y="2015.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="120.6" y="37" width="0.2" height="15.0" fill="rgb(249,83,42)" rx="2" ry="2" />
<text  x="123.59" y="47.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="570.3" y="2005" width="0.2" height="15.0" fill="rgb(211,118,50)" rx="2" ry="2" />
<text  x="573.27" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="33.0" y="1493" width="0.2" height="15.0" fill="rgb(223,83,25)" rx="2" ry="2" />
<text  x="35.99" y="1503.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="70.2" y="1861" width="0.8" height="15.0" fill="rgb(233,123,40)" rx="2" ry="2" />
<text  x="73.25" y="1871.5" ></text>
</g>
<g >
<title>dput (64 samples, 1.07%)</title><rect x="736.2" y="1797" width="12.6" height="15.0" fill="rgb(245,203,4)" rx="2" ry="2" />
<text  x="739.15" y="1807.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="298.0" y="1541" width="0.2" height="15.0" fill="rgb(242,207,20)" rx="2" ry="2" />
<text  x="300.96" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="392.9" y="1701" width="0.2" height="15.0" fill="rgb(232,85,9)" rx="2" ry="2" />
<text  x="395.90" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="335.6" y="1797" width="0.2" height="15.0" fill="rgb(217,92,20)" rx="2" ry="2" />
<text  x="338.62" y="1807.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="600.0" y="1829" width="0.8" height="15.0" fill="rgb(219,155,7)" rx="2" ry="2" />
<text  x="603.00" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="836.0" y="1781" width="0.2" height="15.0" fill="rgb(248,199,17)" rx="2" ry="2" />
<text  x="839.04" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="684.0" y="1749" width="0.2" height="15.0" fill="rgb(220,153,11)" rx="2" ry="2" />
<text  x="687.03" y="1759.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="338.6" y="1957" width="0.4" height="15.0" fill="rgb(239,61,24)" rx="2" ry="2" />
<text  x="341.59" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="829.7" y="1701" width="0.4" height="15.0" fill="rgb(231,160,34)" rx="2" ry="2" />
<text  x="832.70" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="323.1" y="1573" width="0.2" height="15.0" fill="rgb(234,63,11)" rx="2" ry="2" />
<text  x="326.13" y="1583.5" ></text>
</g>
<g >
<title>__fget_light (15 samples, 0.25%)</title><rect x="1125.6" y="1941" width="3.0" height="15.0" fill="rgb(221,151,11)" rx="2" ry="2" />
<text  x="1128.59" y="1951.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="287.1" y="1829" width="0.2" height="15.0" fill="rgb(240,107,17)" rx="2" ry="2" />
<text  x="290.06" y="1839.5" ></text>
</g>
<g >
<title>fput (6 samples, 0.10%)</title><rect x="837.2" y="1813" width="1.2" height="15.0" fill="rgb(212,88,10)" rx="2" ry="2" />
<text  x="840.23" y="1823.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="768.9" y="1701" width="0.2" height="15.0" fill="rgb(213,212,6)" rx="2" ry="2" />
<text  x="771.85" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (10 samples, 0.17%)</title><rect x="83.5" y="1957" width="2.0" height="15.0" fill="rgb(222,123,18)" rx="2" ry="2" />
<text  x="86.53" y="1967.5" ></text>
</g>
<g >
<title>tcp_recvmsg (278 samples, 4.67%)</title><rect x="1067.3" y="1941" width="55.1" height="15.0" fill="rgb(213,172,47)" rx="2" ry="2" />
<text  x="1070.32" y="1951.5" >tcp_r..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1175.5" y="1909" width="0.2" height="15.0" fill="rgb(243,73,9)" rx="2" ry="2" />
<text  x="1178.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (39 samples, 0.66%)</title><rect x="1111.7" y="1525" width="7.7" height="15.0" fill="rgb(243,122,35)" rx="2" ry="2" />
<text  x="1114.72" y="1535.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="64.5" y="1973" width="0.2" height="15.0" fill="rgb(241,64,8)" rx="2" ry="2" />
<text  x="67.50" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (68 samples, 1.14%)</title><rect x="670.2" y="1941" width="13.4" height="15.0" fill="rgb(232,90,5)" rx="2" ry="2" />
<text  x="673.16" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="280.9" y="1813" width="0.2" height="15.0" fill="rgb(250,188,17)" rx="2" ry="2" />
<text  x="283.92" y="1823.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="971.6" y="2021" width="0.4" height="15.0" fill="rgb(214,61,51)" rx="2" ry="2" />
<text  x="974.60" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="129.3" y="1973" width="0.2" height="15.0" fill="rgb(211,143,38)" rx="2" ry="2" />
<text  x="132.31" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="161.6" y="1749" width="0.2" height="15.0" fill="rgb(249,106,53)" rx="2" ry="2" />
<text  x="164.61" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="280.7" y="1573" width="0.2" height="15.0" fill="rgb(212,14,46)" rx="2" ry="2" />
<text  x="283.72" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="121.0" y="101" width="0.2" height="15.0" fill="rgb(220,129,30)" rx="2" ry="2" />
<text  x="123.98" y="111.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.61%)</title><rect x="102.9" y="1189" width="19.1" height="15.0" fill="rgb(254,78,1)" rx="2" ry="2" />
<text  x="105.95" y="1199.5" ></text>
</g>
<g >
<title>kmem_cache_free (12 samples, 0.20%)</title><rect x="466.4" y="1941" width="2.4" height="15.0" fill="rgb(247,209,14)" rx="2" ry="2" />
<text  x="469.42" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1493" width="0.2" height="15.0" fill="rgb(239,56,15)" rx="2" ry="2" />
<text  x="344.96" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="121.0" y="133" width="0.2" height="15.0" fill="rgb(245,167,47)" rx="2" ry="2" />
<text  x="123.98" y="143.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1181.5" y="1973" width="0.2" height="15.0" fill="rgb(213,29,21)" rx="2" ry="2" />
<text  x="1184.48" y="1983.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="1178.1" y="2053" width="0.2" height="15.0" fill="rgb(221,181,8)" rx="2" ry="2" />
<text  x="1181.11" y="2063.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="676.5" y="1845" width="0.2" height="15.0" fill="rgb(220,57,18)" rx="2" ry="2" />
<text  x="679.50" y="1855.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (4 samples, 0.07%)</title><rect x="976.0" y="2037" width="0.8" height="15.0" fill="rgb(219,181,0)" rx="2" ry="2" />
<text  x="978.96" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="10.2" y="1909" width="1.0" height="15.0" fill="rgb(253,60,32)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (2 samples, 0.03%)</title><rect x="215.1" y="1957" width="0.4" height="15.0" fill="rgb(210,225,48)" rx="2" ry="2" />
<text  x="218.12" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.42%)</title><rect x="960.9" y="2005" width="5.0" height="15.0" fill="rgb(224,93,38)" rx="2" ry="2" />
<text  x="963.90" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (132 samples, 2.22%)</title><rect x="290.8" y="1813" width="26.2" height="15.0" fill="rgb(221,87,27)" rx="2" ry="2" />
<text  x="293.83" y="1823.5" >i..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="956.7" y="1973" width="0.2" height="15.0" fill="rgb(242,114,33)" rx="2" ry="2" />
<text  x="959.73" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="161.4" y="1797" width="0.2" height="15.0" fill="rgb(233,180,32)" rx="2" ry="2" />
<text  x="164.41" y="1807.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="298.8" y="1381" width="0.4" height="15.0" fill="rgb(254,168,5)" rx="2" ry="2" />
<text  x="301.76" y="1391.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="354.4" y="2021" width="0.2" height="15.0" fill="rgb(224,127,47)" rx="2" ry="2" />
<text  x="357.45" y="2031.5" ></text>
</g>
<g >
<title>sock_destroy_inode (1 samples, 0.02%)</title><rect x="746.3" y="1701" width="0.2" height="15.0" fill="rgb(208,68,53)" rx="2" ry="2" />
<text  x="749.26" y="1711.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="567.3" y="1893" width="0.2" height="15.0" fill="rgb(207,226,21)" rx="2" ry="2" />
<text  x="570.30" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="505.9" y="1989" width="0.2" height="15.0" fill="rgb(241,103,8)" rx="2" ry="2" />
<text  x="508.86" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="826.7" y="1557" width="0.2" height="15.0" fill="rgb(214,110,38)" rx="2" ry="2" />
<text  x="829.72" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1188.8" y="1781" width="0.2" height="15.0" fill="rgb(231,31,22)" rx="2" ry="2" />
<text  x="1191.81" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="540.9" y="1973" width="0.4" height="15.0" fill="rgb(240,24,1)" rx="2" ry="2" />
<text  x="543.94" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="253.0" y="1717" width="0.2" height="15.0" fill="rgb(228,148,24)" rx="2" ry="2" />
<text  x="255.98" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="274.8" y="1669" width="0.4" height="15.0" fill="rgb(232,88,41)" rx="2" ry="2" />
<text  x="277.78" y="1679.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="891.7" y="1941" width="0.2" height="15.0" fill="rgb(208,194,30)" rx="2" ry="2" />
<text  x="894.73" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (7 samples, 0.12%)</title><rect x="980.7" y="2037" width="1.4" height="15.0" fill="rgb(245,66,20)" rx="2" ry="2" />
<text  x="983.72" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (7 samples, 0.12%)</title><rect x="132.3" y="1989" width="1.4" height="15.0" fill="rgb(221,29,25)" rx="2" ry="2" />
<text  x="135.28" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="260.9" y="1893" width="0.2" height="15.0" fill="rgb(239,72,22)" rx="2" ry="2" />
<text  x="263.90" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="895.9" y="1717" width="0.2" height="15.0" fill="rgb(230,87,15)" rx="2" ry="2" />
<text  x="898.89" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (12 samples, 0.20%)</title><rect x="901.4" y="2037" width="2.4" height="15.0" fill="rgb(209,183,7)" rx="2" ry="2" />
<text  x="904.44" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (104 samples, 1.75%)</title><rect x="665.0" y="2021" width="20.6" height="15.0" fill="rgb(205,103,5)" rx="2" ry="2" />
<text  x="668.01" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="330.5" y="1685" width="0.2" height="15.0" fill="rgb(244,6,22)" rx="2" ry="2" />
<text  x="333.47" y="1695.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="315.8" y="1669" width="0.2" height="15.0" fill="rgb(226,105,30)" rx="2" ry="2" />
<text  x="318.80" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="661" width="17.9" height="15.0" fill="rgb(213,64,34)" rx="2" ry="2" />
<text  x="106.35" y="671.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(236,3,18)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="35.0" y="2005" width="0.4" height="15.0" fill="rgb(243,186,35)" rx="2" ry="2" />
<text  x="37.97" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (3 samples, 0.05%)</title><rect x="979.7" y="2037" width="0.6" height="15.0" fill="rgb(238,108,0)" rx="2" ry="2" />
<text  x="982.72" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="185.4" y="1941" width="0.8" height="15.0" fill="rgb(205,158,26)" rx="2" ry="2" />
<text  x="188.39" y="1951.5" ></text>
</g>
<g >
<title>swiotlb_map_page (4 samples, 0.07%)</title><rect x="801.4" y="1509" width="0.7" height="15.0" fill="rgb(243,13,3)" rx="2" ry="2" />
<text  x="804.36" y="1519.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (3 samples, 0.05%)</title><rect x="761.5" y="1733" width="0.6" height="15.0" fill="rgb(250,0,41)" rx="2" ry="2" />
<text  x="764.52" y="1743.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="343.7" y="1717" width="0.2" height="15.0" fill="rgb(236,114,24)" rx="2" ry="2" />
<text  x="346.75" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (5 samples, 0.08%)</title><rect x="301.7" y="1685" width="1.0" height="15.0" fill="rgb(241,207,41)" rx="2" ry="2" />
<text  x="304.73" y="1695.5" ></text>
</g>
<g >
<title>kfree_call_rcu (5 samples, 0.08%)</title><rect x="743.1" y="1669" width="1.0" height="15.0" fill="rgb(235,33,29)" rx="2" ry="2" />
<text  x="746.09" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (1 samples, 0.02%)</title><rect x="621.0" y="1989" width="0.2" height="15.0" fill="rgb(218,203,41)" rx="2" ry="2" />
<text  x="624.01" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="144.0" y="1877" width="0.2" height="15.0" fill="rgb(206,24,37)" rx="2" ry="2" />
<text  x="146.97" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="127.7" y="1877" width="0.2" height="15.0" fill="rgb(237,68,24)" rx="2" ry="2" />
<text  x="130.72" y="1887.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="684.0" y="1733" width="0.2" height="15.0" fill="rgb(244,23,24)" rx="2" ry="2" />
<text  x="687.03" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="707.2" y="1797" width="0.2" height="15.0" fill="rgb(224,153,17)" rx="2" ry="2" />
<text  x="710.22" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="88.5" y="1989" width="0.4" height="15.0" fill="rgb(225,34,35)" rx="2" ry="2" />
<text  x="91.48" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="855.7" y="1797" width="0.4" height="15.0" fill="rgb(225,158,13)" rx="2" ry="2" />
<text  x="858.66" y="1807.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="388.3" y="1925" width="0.2" height="15.0" fill="rgb(207,177,34)" rx="2" ry="2" />
<text  x="391.34" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="203.8" y="2021" width="0.2" height="15.0" fill="rgb(251,63,49)" rx="2" ry="2" />
<text  x="206.83" y="2031.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (3 samples, 0.05%)</title><rect x="846.1" y="1925" width="0.6" height="15.0" fill="rgb(254,50,3)" rx="2" ry="2" />
<text  x="849.15" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (32 samples, 0.54%)</title><rect x="1130.1" y="2037" width="6.4" height="15.0" fill="rgb(253,158,28)" rx="2" ry="2" />
<text  x="1133.15" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="274.8" y="1877" width="0.4" height="15.0" fill="rgb(209,96,25)" rx="2" ry="2" />
<text  x="277.78" y="1887.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="383.8" y="1925" width="0.2" height="15.0" fill="rgb(238,167,36)" rx="2" ry="2" />
<text  x="386.78" y="1935.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="471.8" y="1845" width="0.2" height="15.0" fill="rgb(229,72,38)" rx="2" ry="2" />
<text  x="474.77" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="177.9" y="2005" width="0.2" height="15.0" fill="rgb(221,88,14)" rx="2" ry="2" />
<text  x="180.86" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1893" width="0.2" height="15.0" fill="rgb(205,169,41)" rx="2" ry="2" />
<text  x="149.95" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="235.9" y="2021" width="0.6" height="15.0" fill="rgb(211,149,43)" rx="2" ry="2" />
<text  x="238.93" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="320.8" y="1701" width="0.4" height="15.0" fill="rgb(205,59,51)" rx="2" ry="2" />
<text  x="323.76" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="33.0" y="1749" width="0.2" height="15.0" fill="rgb(235,72,40)" rx="2" ry="2" />
<text  x="35.99" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="229.4" y="1925" width="1.4" height="15.0" fill="rgb(237,34,45)" rx="2" ry="2" />
<text  x="232.39" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="898.1" y="1973" width="0.2" height="15.0" fill="rgb(251,40,15)" rx="2" ry="2" />
<text  x="901.07" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (2 samples, 0.03%)</title><rect x="619.2" y="1989" width="0.4" height="15.0" fill="rgb(208,92,3)" rx="2" ry="2" />
<text  x="622.22" y="1999.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="888.2" y="1653" width="0.2" height="15.0" fill="rgb(224,176,38)" rx="2" ry="2" />
<text  x="891.16" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (4 samples, 0.07%)</title><rect x="577.4" y="2005" width="0.8" height="15.0" fill="rgb(233,61,11)" rx="2" ry="2" />
<text  x="580.41" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="1173.4" y="1989" width="0.7" height="15.0" fill="rgb(213,124,37)" rx="2" ry="2" />
<text  x="1176.35" y="1999.5" ></text>
</g>
<g >
<title>__GI___setsockopt (12 samples, 0.20%)</title><rect x="212.7" y="1957" width="2.4" height="15.0" fill="rgb(237,221,13)" rx="2" ry="2" />
<text  x="215.74" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1188.8" y="1845" width="0.2" height="15.0" fill="rgb(230,210,49)" rx="2" ry="2" />
<text  x="1191.81" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="684.0" y="1813" width="0.2" height="15.0" fill="rgb(223,18,12)" rx="2" ry="2" />
<text  x="687.03" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="747.3" y="1653" width="0.2" height="15.0" fill="rgb(208,147,10)" rx="2" ry="2" />
<text  x="750.25" y="1663.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="186.6" y="1925" width="0.2" height="15.0" fill="rgb(237,97,2)" rx="2" ry="2" />
<text  x="189.58" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="91.3" y="1893" width="0.2" height="15.0" fill="rgb(209,199,28)" rx="2" ry="2" />
<text  x="94.26" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="54.4" y="1941" width="0.8" height="15.0" fill="rgb(229,51,28)" rx="2" ry="2" />
<text  x="57.39" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="84.1" y="1925" width="0.4" height="15.0" fill="rgb(210,140,27)" rx="2" ry="2" />
<text  x="87.12" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="917" width="18.1" height="15.0" fill="rgb(239,211,23)" rx="2" ry="2" />
<text  x="106.35" y="927.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="259.7" y="1861" width="0.2" height="15.0" fill="rgb(219,98,42)" rx="2" ry="2" />
<text  x="262.71" y="1871.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="518.3" y="1941" width="0.2" height="15.0" fill="rgb(207,111,40)" rx="2" ry="2" />
<text  x="521.35" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="458.1" y="1893" width="0.8" height="15.0" fill="rgb(253,11,11)" rx="2" ry="2" />
<text  x="461.10" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1144.8" y="2005" width="0.2" height="15.0" fill="rgb(252,6,26)" rx="2" ry="2" />
<text  x="1147.81" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="127.7" y="1845" width="0.2" height="15.0" fill="rgb(215,132,52)" rx="2" ry="2" />
<text  x="130.72" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="120.8" y="85" width="0.2" height="15.0" fill="rgb(237,36,28)" rx="2" ry="2" />
<text  x="123.79" y="95.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="596.2" y="1733" width="0.2" height="15.0" fill="rgb(243,93,3)" rx="2" ry="2" />
<text  x="599.23" y="1743.5" ></text>
</g>
<g >
<title>call_rcu_sched (6 samples, 0.10%)</title><rect x="735.0" y="1797" width="1.2" height="15.0" fill="rgb(252,143,13)" rx="2" ry="2" />
<text  x="737.96" y="1807.5" ></text>
</g>
<g >
<title>close@plt (1 samples, 0.02%)</title><rect x="844.4" y="1909" width="0.2" height="15.0" fill="rgb(222,113,33)" rx="2" ry="2" />
<text  x="847.36" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.2" y="1493" width="0.2" height="15.0" fill="rgb(215,219,35)" rx="2" ry="2" />
<text  x="127.16" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="220.3" y="1893" width="0.4" height="15.0" fill="rgb(235,94,44)" rx="2" ry="2" />
<text  x="223.28" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="865.8" y="1989" width="0.2" height="15.0" fill="rgb(234,55,50)" rx="2" ry="2" />
<text  x="868.77" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="253.0" y="1749" width="0.2" height="15.0" fill="rgb(239,192,22)" rx="2" ry="2" />
<text  x="255.98" y="1759.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="290.6" y="1813" width="0.2" height="15.0" fill="rgb(247,11,48)" rx="2" ry="2" />
<text  x="293.63" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (70 samples, 1.18%)</title><rect x="587.5" y="1909" width="13.9" height="15.0" fill="rgb(213,173,11)" rx="2" ry="2" />
<text  x="590.51" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="890.9" y="1973" width="0.2" height="15.0" fill="rgb(215,174,48)" rx="2" ry="2" />
<text  x="893.94" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (3 samples, 0.05%)</title><rect x="292.4" y="1765" width="0.6" height="15.0" fill="rgb(213,88,7)" rx="2" ry="2" />
<text  x="295.42" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="62.7" y="1877" width="0.4" height="15.0" fill="rgb(226,155,33)" rx="2" ry="2" />
<text  x="65.72" y="1887.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="282.7" y="1829" width="0.4" height="15.0" fill="rgb(210,115,29)" rx="2" ry="2" />
<text  x="285.70" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="880.6" y="1925" width="0.2" height="15.0" fill="rgb(241,125,45)" rx="2" ry="2" />
<text  x="883.63" y="1935.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1107.6" y="1909" width="0.2" height="15.0" fill="rgb(209,168,4)" rx="2" ry="2" />
<text  x="1110.55" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="878.1" y="1941" width="0.2" height="15.0" fill="rgb(241,11,32)" rx="2" ry="2" />
<text  x="881.06" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="333.6" y="1829" width="0.2" height="15.0" fill="rgb(208,102,13)" rx="2" ry="2" />
<text  x="336.64" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="888.2" y="1925" width="0.2" height="15.0" fill="rgb(216,111,14)" rx="2" ry="2" />
<text  x="891.16" y="1935.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="655.5" y="1989" width="0.2" height="15.0" fill="rgb(251,53,13)" rx="2" ry="2" />
<text  x="658.49" y="1999.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="343.7" y="1701" width="0.2" height="15.0" fill="rgb(237,215,15)" rx="2" ry="2" />
<text  x="346.75" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="252.8" y="1893" width="0.2" height="15.0" fill="rgb(223,217,47)" rx="2" ry="2" />
<text  x="255.78" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="172.7" y="1861" width="0.2" height="15.0" fill="rgb(227,160,11)" rx="2" ry="2" />
<text  x="175.71" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (6 samples, 0.10%)</title><rect x="512.6" y="1989" width="1.2" height="15.0" fill="rgb(226,103,30)" rx="2" ry="2" />
<text  x="515.60" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="148.9" y="1861" width="0.2" height="15.0" fill="rgb(212,54,17)" rx="2" ry="2" />
<text  x="151.93" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="642.8" y="1941" width="0.2" height="15.0" fill="rgb(211,189,45)" rx="2" ry="2" />
<text  x="645.81" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="179.4" y="1957" width="0.2" height="15.0" fill="rgb(220,54,29)" rx="2" ry="2" />
<text  x="182.45" y="1967.5" ></text>
</g>
<g >
<title>irq_may_run (1 samples, 0.02%)</title><rect x="152.5" y="1813" width="0.2" height="15.0" fill="rgb(245,43,41)" rx="2" ry="2" />
<text  x="155.50" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="320.8" y="1637" width="0.4" height="15.0" fill="rgb(242,195,30)" rx="2" ry="2" />
<text  x="323.76" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="174.3" y="1925" width="0.2" height="15.0" fill="rgb(251,46,1)" rx="2" ry="2" />
<text  x="177.30" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="895.9" y="1877" width="0.2" height="15.0" fill="rgb(236,86,2)" rx="2" ry="2" />
<text  x="898.89" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="142.6" y="1893" width="0.2" height="15.0" fill="rgb(207,152,14)" rx="2" ry="2" />
<text  x="145.59" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="69.3" y="1717" width="0.2" height="15.0" fill="rgb(209,36,39)" rx="2" ry="2" />
<text  x="72.26" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="212.5" y="1941" width="0.2" height="15.0" fill="rgb(243,77,22)" rx="2" ry="2" />
<text  x="215.55" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="881.2" y="1941" width="0.6" height="15.0" fill="rgb(241,80,4)" rx="2" ry="2" />
<text  x="884.23" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="707.4" y="2021" width="0.2" height="15.0" fill="rgb(219,123,10)" rx="2" ry="2" />
<text  x="710.42" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="518.0" y="1973" width="0.1" height="15.0" fill="rgb(246,191,47)" rx="2" ry="2" />
<text  x="520.95" y="1983.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="296.8" y="1637" width="0.2" height="15.0" fill="rgb(238,113,53)" rx="2" ry="2" />
<text  x="299.78" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="925.4" y="1941" width="0.2" height="15.0" fill="rgb(211,12,39)" rx="2" ry="2" />
<text  x="928.42" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="325.3" y="1733" width="0.2" height="15.0" fill="rgb(221,6,27)" rx="2" ry="2" />
<text  x="328.31" y="1743.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="231.2" y="1845" width="0.2" height="15.0" fill="rgb(253,141,41)" rx="2" ry="2" />
<text  x="234.18" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="341.8" y="1813" width="0.4" height="15.0" fill="rgb(237,228,6)" rx="2" ry="2" />
<text  x="344.76" y="1823.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="745.3" y="1653" width="1.0" height="15.0" fill="rgb(223,12,12)" rx="2" ry="2" />
<text  x="748.27" y="1663.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="274.6" y="1829" width="0.2" height="15.0" fill="rgb(210,19,10)" rx="2" ry="2" />
<text  x="277.58" y="1839.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="296.8" y="1621" width="0.2" height="15.0" fill="rgb(248,144,43)" rx="2" ry="2" />
<text  x="299.78" y="1631.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="281.7" y="1829" width="0.2" height="15.0" fill="rgb(225,196,30)" rx="2" ry="2" />
<text  x="284.71" y="1839.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="282.9" y="1813" width="0.2" height="15.0" fill="rgb(250,220,6)" rx="2" ry="2" />
<text  x="285.90" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="1143.8" y="1989" width="0.6" height="15.0" fill="rgb(226,76,15)" rx="2" ry="2" />
<text  x="1146.82" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="547.3" y="1861" width="0.2" height="15.0" fill="rgb(233,63,36)" rx="2" ry="2" />
<text  x="550.28" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="57.0" y="1909" width="0.2" height="15.0" fill="rgb(241,20,18)" rx="2" ry="2" />
<text  x="59.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (9 samples, 0.15%)</title><rect x="503.5" y="1893" width="1.8" height="15.0" fill="rgb(227,23,15)" rx="2" ry="2" />
<text  x="506.48" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (280 samples, 4.70%)</title><rect x="526.3" y="2037" width="55.5" height="15.0" fill="rgb(217,202,7)" rx="2" ry="2" />
<text  x="529.27" y="2047.5" >faceb..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="74.6" y="1685" width="0.2" height="15.0" fill="rgb(251,126,49)" rx="2" ry="2" />
<text  x="77.61" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="969.0" y="1605" width="0.2" height="15.0" fill="rgb(214,169,17)" rx="2" ry="2" />
<text  x="972.02" y="1615.5" ></text>
</g>
<g >
<title>security_inode_free (1 samples, 0.02%)</title><rect x="742.9" y="1669" width="0.2" height="15.0" fill="rgb(245,2,26)" rx="2" ry="2" />
<text  x="745.89" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (20 samples, 0.34%)</title><rect x="610.1" y="1893" width="4.0" height="15.0" fill="rgb(212,145,45)" rx="2" ry="2" />
<text  x="613.11" y="1903.5" ></text>
</g>
<g >
<title>free (27 samples, 0.45%)</title><rect x="1023.5" y="2037" width="5.4" height="15.0" fill="rgb(237,108,49)" rx="2" ry="2" />
<text  x="1026.52" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="959.7" y="2005" width="0.4" height="15.0" fill="rgb(207,72,2)" rx="2" ry="2" />
<text  x="962.71" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="171.3" y="1957" width="0.2" height="15.0" fill="rgb(239,23,51)" rx="2" ry="2" />
<text  x="174.32" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1179.9" y="1989" width="0.2" height="15.0" fill="rgb(230,29,39)" rx="2" ry="2" />
<text  x="1182.89" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.22%)</title><rect x="11.4" y="1909" width="2.6" height="15.0" fill="rgb(242,224,38)" rx="2" ry="2" />
<text  x="14.39" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.6" y="1909" width="0.2" height="15.0" fill="rgb(213,182,42)" rx="2" ry="2" />
<text  x="77.61" y="1919.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="1083.8" y="1781" width="0.2" height="15.0" fill="rgb(213,144,17)" rx="2" ry="2" />
<text  x="1086.77" y="1791.5" ></text>
</g>
<g >
<title>tcp_current_mss (15 samples, 0.25%)</title><rect x="827.1" y="1717" width="3.0" height="15.0" fill="rgb(226,204,22)" rx="2" ry="2" />
<text  x="830.12" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::clear (1 samples, 0.02%)</title><rect x="168.4" y="2021" width="0.1" height="15.0" fill="rgb(217,196,43)" rx="2" ry="2" />
<text  x="171.35" y="2031.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1183.3" y="2053" width="0.4" height="15.0" fill="rgb(217,178,18)" rx="2" ry="2" />
<text  x="1186.26" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (8 samples, 0.13%)</title><rect x="871.5" y="2005" width="1.6" height="15.0" fill="rgb(212,225,52)" rx="2" ry="2" />
<text  x="874.51" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="680.1" y="1765" width="0.2" height="15.0" fill="rgb(218,52,24)" rx="2" ry="2" />
<text  x="683.07" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="851.1" y="1941" width="1.8" height="15.0" fill="rgb(224,64,42)" rx="2" ry="2" />
<text  x="854.10" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="576.4" y="1957" width="0.2" height="15.0" fill="rgb(249,169,45)" rx="2" ry="2" />
<text  x="579.42" y="1967.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="1107.0" y="1717" width="0.2" height="15.0" fill="rgb(232,39,15)" rx="2" ry="2" />
<text  x="1109.96" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="103.1" y="1093" width="18.5" height="15.0" fill="rgb(222,175,34)" rx="2" ry="2" />
<text  x="106.15" y="1103.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1003.3" y="1989" width="0.2" height="15.0" fill="rgb(239,136,27)" rx="2" ry="2" />
<text  x="1006.31" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="518.1" y="1973" width="1.0" height="15.0" fill="rgb(205,31,4)" rx="2" ry="2" />
<text  x="521.15" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1107.2" y="1909" width="0.2" height="15.0" fill="rgb(218,134,12)" rx="2" ry="2" />
<text  x="1110.16" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="890.3" y="1925" width="0.6" height="15.0" fill="rgb(223,66,27)" rx="2" ry="2" />
<text  x="893.34" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="629.7" y="2005" width="1.2" height="15.0" fill="rgb(224,182,16)" rx="2" ry="2" />
<text  x="632.73" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="512.6" y="1973" width="0.4" height="15.0" fill="rgb(222,11,41)" rx="2" ry="2" />
<text  x="515.60" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (12 samples, 0.20%)</title><rect x="81.1" y="1957" width="2.4" height="15.0" fill="rgb(220,96,11)" rx="2" ry="2" />
<text  x="84.15" y="1967.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="898.9" y="2005" width="0.2" height="15.0" fill="rgb(206,11,15)" rx="2" ry="2" />
<text  x="901.86" y="2015.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (2 samples, 0.03%)</title><rect x="479.7" y="2021" width="0.4" height="15.0" fill="rgb(247,59,5)" rx="2" ry="2" />
<text  x="482.70" y="2031.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="617.6" y="1813" width="0.2" height="15.0" fill="rgb(207,104,50)" rx="2" ry="2" />
<text  x="620.64" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.7" y="1861" width="0.2" height="15.0" fill="rgb(250,103,38)" rx="2" ry="2" />
<text  x="543.74" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="888.6" y="1893" width="0.2" height="15.0" fill="rgb(228,192,18)" rx="2" ry="2" />
<text  x="891.56" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="274.8" y="1589" width="0.2" height="15.0" fill="rgb(216,197,29)" rx="2" ry="2" />
<text  x="277.78" y="1599.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="1097.2" y="1925" width="1.2" height="15.0" fill="rgb(240,190,39)" rx="2" ry="2" />
<text  x="1100.25" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (5 samples, 0.08%)</title><rect x="957.9" y="2037" width="1.0" height="15.0" fill="rgb(217,6,41)" rx="2" ry="2" />
<text  x="960.92" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="174.3" y="1829" width="0.2" height="15.0" fill="rgb(231,145,11)" rx="2" ry="2" />
<text  x="177.30" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="898.9" y="1989" width="0.2" height="15.0" fill="rgb(211,181,11)" rx="2" ry="2" />
<text  x="901.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (114 samples, 1.91%)</title><rect x="142.4" y="2005" width="22.6" height="15.0" fill="rgb(219,190,3)" rx="2" ry="2" />
<text  x="145.39" y="2015.5" >f..</text>
</g>
<g >
<title>validate_xmit_skb (11 samples, 0.18%)</title><rect x="802.7" y="1525" width="2.2" height="15.0" fill="rgb(243,7,30)" rx="2" ry="2" />
<text  x="805.74" y="1535.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="523.1" y="1941" width="0.6" height="15.0" fill="rgb(230,54,23)" rx="2" ry="2" />
<text  x="526.10" y="1951.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="621.2" y="2005" width="0.2" height="15.0" fill="rgb(232,136,6)" rx="2" ry="2" />
<text  x="624.21" y="2015.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (2 samples, 0.03%)</title><rect x="1013.6" y="2021" width="0.4" height="15.0" fill="rgb(225,147,23)" rx="2" ry="2" />
<text  x="1016.61" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (15 samples, 0.25%)</title><rect x="45.3" y="1973" width="2.9" height="15.0" fill="rgb(210,45,12)" rx="2" ry="2" />
<text  x="48.28" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="805.1" y="1573" width="0.2" height="15.0" fill="rgb(241,38,50)" rx="2" ry="2" />
<text  x="808.12" y="1583.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="849.7" y="1925" width="0.2" height="15.0" fill="rgb(221,107,25)" rx="2" ry="2" />
<text  x="852.71" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="856.5" y="1925" width="0.2" height="15.0" fill="rgb(253,87,40)" rx="2" ry="2" />
<text  x="859.45" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="293" width="17.9" height="15.0" fill="rgb(248,94,35)" rx="2" ry="2" />
<text  x="106.35" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="45.5" y="1957" width="0.4" height="15.0" fill="rgb(209,89,4)" rx="2" ry="2" />
<text  x="48.48" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (2 samples, 0.03%)</title><rect x="622.4" y="2005" width="0.4" height="15.0" fill="rgb(213,138,17)" rx="2" ry="2" />
<text  x="625.40" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (133 samples, 2.23%)</title><rect x="102.0" y="1925" width="26.3" height="15.0" fill="rgb(217,183,40)" rx="2" ry="2" />
<text  x="104.96" y="1935.5" >[..</text>
</g>
<g >
<title>tcp_v4_rcv (5 samples, 0.08%)</title><rect x="298.2" y="1541" width="1.0" height="15.0" fill="rgb(235,29,54)" rx="2" ry="2" />
<text  x="301.16" y="1551.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="400.4" y="1877" width="0.2" height="15.0" fill="rgb(250,134,16)" rx="2" ry="2" />
<text  x="403.43" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (7 samples, 0.12%)</title><rect x="631.9" y="2005" width="1.4" height="15.0" fill="rgb(245,95,27)" rx="2" ry="2" />
<text  x="634.91" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1154.1" y="1957" width="0.4" height="15.0" fill="rgb(221,121,50)" rx="2" ry="2" />
<text  x="1157.13" y="1967.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (2 samples, 0.03%)</title><rect x="742.3" y="1653" width="0.4" height="15.0" fill="rgb(224,80,24)" rx="2" ry="2" />
<text  x="745.30" y="1663.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1079.8" y="1829" width="0.2" height="15.0" fill="rgb(245,61,5)" rx="2" ry="2" />
<text  x="1082.81" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="616.8" y="1653" width="0.2" height="15.0" fill="rgb(246,156,52)" rx="2" ry="2" />
<text  x="619.85" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="891.3" y="1973" width="0.4" height="15.0" fill="rgb(242,7,43)" rx="2" ry="2" />
<text  x="894.33" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="836.0" y="1797" width="0.2" height="15.0" fill="rgb(254,166,11)" rx="2" ry="2" />
<text  x="839.04" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="881.0" y="1893" width="0.2" height="15.0" fill="rgb(210,45,8)" rx="2" ry="2" />
<text  x="884.03" y="1903.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="885.4" y="1925" width="0.6" height="15.0" fill="rgb(205,177,2)" rx="2" ry="2" />
<text  x="888.39" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.13%)</title><rect x="560.6" y="1909" width="1.5" height="15.0" fill="rgb(231,179,27)" rx="2" ry="2" />
<text  x="563.56" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (11 samples, 0.18%)</title><rect x="67.5" y="1941" width="2.2" height="15.0" fill="rgb(214,34,8)" rx="2" ry="2" />
<text  x="70.47" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="644.4" y="1925" width="0.2" height="15.0" fill="rgb(205,95,26)" rx="2" ry="2" />
<text  x="647.39" y="1935.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="255.6" y="1925" width="0.3" height="15.0" fill="rgb(230,66,7)" rx="2" ry="2" />
<text  x="258.55" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="535.8" y="1861" width="0.2" height="15.0" fill="rgb(254,208,3)" rx="2" ry="2" />
<text  x="538.79" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="890.5" y="1893" width="0.4" height="15.0" fill="rgb(224,7,33)" rx="2" ry="2" />
<text  x="893.54" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="46.9" y="1909" width="0.2" height="15.0" fill="rgb(221,123,18)" rx="2" ry="2" />
<text  x="49.86" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="54.2" y="1941" width="0.2" height="15.0" fill="rgb(228,104,19)" rx="2" ry="2" />
<text  x="57.20" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.0" y="1957" width="0.4" height="15.0" fill="rgb(244,186,30)" rx="2" ry="2" />
<text  x="576.05" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1175.5" y="1877" width="0.2" height="15.0" fill="rgb(232,46,49)" rx="2" ry="2" />
<text  x="1178.53" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="253.0" y="1893" width="0.2" height="15.0" fill="rgb(221,14,23)" rx="2" ry="2" />
<text  x="255.98" y="1903.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="719.1" y="1925" width="0.2" height="15.0" fill="rgb(245,143,11)" rx="2" ry="2" />
<text  x="722.11" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (3 samples, 0.05%)</title><rect x="167.8" y="2021" width="0.6" height="15.0" fill="rgb(209,219,31)" rx="2" ry="2" />
<text  x="170.76" y="2031.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="707.2" y="1733" width="0.2" height="15.0" fill="rgb(219,126,41)" rx="2" ry="2" />
<text  x="710.22" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="853" width="18.1" height="15.0" fill="rgb(216,39,11)" rx="2" ry="2" />
<text  x="106.35" y="863.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="563.3" y="1877" width="0.2" height="15.0" fill="rgb(210,62,36)" rx="2" ry="2" />
<text  x="566.34" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="131.5" y="1989" width="0.4" height="15.0" fill="rgb(239,151,31)" rx="2" ry="2" />
<text  x="134.49" y="1999.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (3 samples, 0.05%)</title><rect x="1152.3" y="1973" width="0.6" height="15.0" fill="rgb(215,76,4)" rx="2" ry="2" />
<text  x="1155.34" y="1983.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="809.5" y="1637" width="0.2" height="15.0" fill="rgb(217,79,12)" rx="2" ry="2" />
<text  x="812.48" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="498.5" y="1717" width="0.4" height="15.0" fill="rgb(233,15,28)" rx="2" ry="2" />
<text  x="501.53" y="1727.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.07%)</title><rect x="746.5" y="1701" width="0.8" height="15.0" fill="rgb(228,150,51)" rx="2" ry="2" />
<text  x="749.46" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="650.3" y="1957" width="0.6" height="15.0" fill="rgb(243,38,27)" rx="2" ry="2" />
<text  x="653.34" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="322.5" y="1605" width="0.2" height="15.0" fill="rgb(210,138,14)" rx="2" ry="2" />
<text  x="325.54" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="256.5" y="1861" width="0.2" height="15.0" fill="rgb(220,36,45)" rx="2" ry="2" />
<text  x="259.54" y="1871.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1009.5" y="1941" width="0.2" height="15.0" fill="rgb(245,83,21)" rx="2" ry="2" />
<text  x="1012.45" y="1951.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="297.0" y="1637" width="0.2" height="15.0" fill="rgb(205,73,30)" rx="2" ry="2" />
<text  x="299.97" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="253.0" y="1765" width="0.2" height="15.0" fill="rgb(212,46,36)" rx="2" ry="2" />
<text  x="255.98" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="144.2" y="1909" width="0.6" height="15.0" fill="rgb(212,209,23)" rx="2" ry="2" />
<text  x="147.17" y="1919.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="14.6" y="1829" width="0.2" height="15.0" fill="rgb(216,27,49)" rx="2" ry="2" />
<text  x="17.56" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="1147.0" y="1925" width="0.2" height="15.0" fill="rgb(222,206,10)" rx="2" ry="2" />
<text  x="1149.99" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.4" y="1781" width="0.2" height="15.0" fill="rgb(215,181,52)" rx="2" ry="2" />
<text  x="229.42" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.5" y="1861" width="0.2" height="15.0" fill="rgb(236,44,10)" rx="2" ry="2" />
<text  x="64.53" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="849.5" y="1749" width="0.2" height="15.0" fill="rgb(222,109,3)" rx="2" ry="2" />
<text  x="852.52" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="959.1" y="2005" width="0.2" height="15.0" fill="rgb(227,179,47)" rx="2" ry="2" />
<text  x="962.11" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.8" y="149" width="0.2" height="15.0" fill="rgb(242,176,11)" rx="2" ry="2" />
<text  x="123.79" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1011.2" y="1989" width="0.2" height="15.0" fill="rgb(226,108,25)" rx="2" ry="2" />
<text  x="1014.24" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="522.5" y="1989" width="0.2" height="15.0" fill="rgb(234,75,51)" rx="2" ry="2" />
<text  x="525.51" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="139.4" y="1973" width="0.2" height="15.0" fill="rgb(237,189,51)" rx="2" ry="2" />
<text  x="142.42" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="707.2" y="1845" width="0.2" height="15.0" fill="rgb(214,48,4)" rx="2" ry="2" />
<text  x="710.22" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="1178.3" y="2053" width="1.2" height="15.0" fill="rgb(226,90,54)" rx="2" ry="2" />
<text  x="1181.31" y="2063.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="476.3" y="1957" width="0.4" height="15.0" fill="rgb(239,34,37)" rx="2" ry="2" />
<text  x="479.33" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="1163.4" y="1893" width="0.6" height="15.0" fill="rgb(234,119,37)" rx="2" ry="2" />
<text  x="1166.44" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="960.9" y="1957" width="2.8" height="15.0" fill="rgb(213,135,39)" rx="2" ry="2" />
<text  x="963.90" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (11 samples, 0.18%)</title><rect x="1141.6" y="2053" width="2.2" height="15.0" fill="rgb(246,25,25)" rx="2" ry="2" />
<text  x="1144.64" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.85%)</title><rect x="102.6" y="1525" width="21.8" height="15.0" fill="rgb(220,103,40)" rx="2" ry="2" />
<text  x="105.55" y="1535.5" >[..</text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (6 samples, 0.10%)</title><rect x="1143.8" y="2037" width="1.2" height="15.0" fill="rgb(249,199,8)" rx="2" ry="2" />
<text  x="1146.82" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="532.0" y="1909" width="0.2" height="15.0" fill="rgb(235,53,16)" rx="2" ry="2" />
<text  x="535.02" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="210.4" y="1845" width="0.2" height="15.0" fill="rgb(250,77,37)" rx="2" ry="2" />
<text  x="213.37" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="72.0" y="1941" width="0.2" height="15.0" fill="rgb(236,161,13)" rx="2" ry="2" />
<text  x="75.03" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="253.0" y="1781" width="0.2" height="15.0" fill="rgb(250,10,3)" rx="2" ry="2" />
<text  x="255.98" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="629.7" y="1973" width="1.2" height="15.0" fill="rgb(230,152,46)" rx="2" ry="2" />
<text  x="632.73" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1163.4" y="1909" width="0.6" height="15.0" fill="rgb(247,191,17)" rx="2" ry="2" />
<text  x="1166.44" y="1919.5" ></text>
</g>
<g >
<title>skb_entail (12 samples, 0.20%)</title><rect x="284.7" y="1877" width="2.4" height="15.0" fill="rgb(212,160,1)" rx="2" ry="2" />
<text  x="287.69" y="1887.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="984.3" y="1733" width="0.2" height="15.0" fill="rgb(230,177,40)" rx="2" ry="2" />
<text  x="987.28" y="1743.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="203.2" y="1909" width="0.2" height="15.0" fill="rgb(228,88,2)" rx="2" ry="2" />
<text  x="206.23" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (62 samples, 1.04%)</title><rect x="607.3" y="2005" width="12.3" height="15.0" fill="rgb(217,17,20)" rx="2" ry="2" />
<text  x="610.33" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="836.2" y="1829" width="0.8" height="15.0" fill="rgb(236,153,18)" rx="2" ry="2" />
<text  x="839.24" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 2.25%)</title><rect x="102.0" y="1941" width="26.5" height="15.0" fill="rgb(231,128,43)" rx="2" ry="2" />
<text  x="104.96" y="1951.5" >[..</text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="498.1" y="1813" width="0.8" height="15.0" fill="rgb(223,63,8)" rx="2" ry="2" />
<text  x="501.13" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="679.3" y="1861" width="1.0" height="15.0" fill="rgb(208,224,25)" rx="2" ry="2" />
<text  x="682.27" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="171.3" y="1893" width="0.2" height="15.0" fill="rgb(244,198,36)" rx="2" ry="2" />
<text  x="174.32" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1188.8" y="1717" width="0.2" height="15.0" fill="rgb(243,160,24)" rx="2" ry="2" />
<text  x="1191.81" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="514.0" y="1973" width="0.2" height="15.0" fill="rgb(221,88,32)" rx="2" ry="2" />
<text  x="516.99" y="1983.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="69.3" y="1525" width="0.2" height="15.0" fill="rgb(217,45,35)" rx="2" ry="2" />
<text  x="72.26" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1175.5" y="1989" width="0.2" height="15.0" fill="rgb(248,116,29)" rx="2" ry="2" />
<text  x="1178.53" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="453.7" y="1877" width="0.2" height="15.0" fill="rgb(241,198,39)" rx="2" ry="2" />
<text  x="456.74" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="102.6" y="1365" width="20.6" height="15.0" fill="rgb(213,165,33)" rx="2" ry="2" />
<text  x="105.55" y="1375.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="83.9" y="1925" width="0.2" height="15.0" fill="rgb(222,168,37)" rx="2" ry="2" />
<text  x="86.92" y="1935.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (16 samples, 0.27%)</title><rect x="14.2" y="2069" width="3.1" height="15.0" fill="rgb(207,97,42)" rx="2" ry="2" />
<text  x="17.16" y="2079.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="325.5" y="1797" width="0.2" height="15.0" fill="rgb(241,71,19)" rx="2" ry="2" />
<text  x="328.51" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.35%)</title><rect x="624.2" y="2021" width="4.1" height="15.0" fill="rgb(250,9,19)" rx="2" ry="2" />
<text  x="627.18" y="2031.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1003.5" y="1989" width="0.2" height="15.0" fill="rgb(241,94,14)" rx="2" ry="2" />
<text  x="1006.51" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="596.2" y="1813" width="0.2" height="15.0" fill="rgb(229,50,51)" rx="2" ry="2" />
<text  x="599.23" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="325.3" y="1637" width="0.2" height="15.0" fill="rgb(231,25,19)" rx="2" ry="2" />
<text  x="328.31" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (2 samples, 0.03%)</title><rect x="903.8" y="2037" width="0.4" height="15.0" fill="rgb(216,76,22)" rx="2" ry="2" />
<text  x="906.82" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1188.8" y="1861" width="0.2" height="15.0" fill="rgb(230,49,13)" rx="2" ry="2" />
<text  x="1191.81" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="274.6" y="1781" width="0.2" height="15.0" fill="rgb(250,184,48)" rx="2" ry="2" />
<text  x="277.58" y="1791.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="212.1" y="1957" width="0.6" height="15.0" fill="rgb(251,189,41)" rx="2" ry="2" />
<text  x="215.15" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="62.5" y="1909" width="0.6" height="15.0" fill="rgb(224,220,7)" rx="2" ry="2" />
<text  x="65.52" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="215.3" y="1685" width="0.2" height="15.0" fill="rgb(238,129,35)" rx="2" ry="2" />
<text  x="218.32" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="926.8" y="1909" width="0.2" height="15.0" fill="rgb(253,35,34)" rx="2" ry="2" />
<text  x="929.81" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="180.4" y="1925" width="0.2" height="15.0" fill="rgb(220,7,43)" rx="2" ry="2" />
<text  x="183.44" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="622.8" y="2005" width="0.2" height="15.0" fill="rgb(228,226,44)" rx="2" ry="2" />
<text  x="625.79" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (8 samples, 0.13%)</title><rect x="705.2" y="2021" width="1.6" height="15.0" fill="rgb(241,80,34)" rx="2" ry="2" />
<text  x="708.24" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="680.1" y="1829" width="0.2" height="15.0" fill="rgb(238,15,42)" rx="2" ry="2" />
<text  x="683.07" y="1839.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="291.4" y="1797" width="0.2" height="15.0" fill="rgb(234,163,30)" rx="2" ry="2" />
<text  x="294.42" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="57.2" y="1861" width="0.2" height="15.0" fill="rgb(211,94,26)" rx="2" ry="2" />
<text  x="60.17" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.0" y="1957" width="0.2" height="15.0" fill="rgb(216,193,24)" rx="2" ry="2" />
<text  x="577.04" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="127.3" y="1877" width="0.2" height="15.0" fill="rgb(212,83,23)" rx="2" ry="2" />
<text  x="130.33" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1129.6" y="2021" width="0.5" height="15.0" fill="rgb(233,105,11)" rx="2" ry="2" />
<text  x="1132.55" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="259.7" y="1685" width="0.2" height="15.0" fill="rgb(237,160,50)" rx="2" ry="2" />
<text  x="262.71" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (44 samples, 0.74%)</title><rect x="1111.1" y="1669" width="8.7" height="15.0" fill="rgb(243,210,5)" rx="2" ry="2" />
<text  x="1114.12" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (26 samples, 0.44%)</title><rect x="924.6" y="1957" width="5.2" height="15.0" fill="rgb(209,219,34)" rx="2" ry="2" />
<text  x="927.63" y="1967.5" ></text>
</g>
<g >
<title>sys_futex (15 samples, 0.25%)</title><rect x="14.4" y="2005" width="2.9" height="15.0" fill="rgb(215,6,49)" rx="2" ry="2" />
<text  x="17.36" y="2015.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.1" y="997" width="0.2" height="15.0" fill="rgb(233,75,2)" rx="2" ry="2" />
<text  x="106.15" y="1007.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="921.7" y="1989" width="0.2" height="15.0" fill="rgb(218,127,4)" rx="2" ry="2" />
<text  x="924.66" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="320.6" y="1733" width="0.2" height="15.0" fill="rgb(220,190,22)" rx="2" ry="2" />
<text  x="323.56" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="322.5" y="1589" width="0.2" height="15.0" fill="rgb(223,89,45)" rx="2" ry="2" />
<text  x="325.54" y="1599.5" ></text>
</g>
<g >
<title>security_file_free (16 samples, 0.27%)</title><rect x="749.4" y="1797" width="3.2" height="15.0" fill="rgb(213,108,54)" rx="2" ry="2" />
<text  x="752.43" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="33.0" y="1605" width="0.2" height="15.0" fill="rgb(252,184,30)" rx="2" ry="2" />
<text  x="35.99" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (3 samples, 0.05%)</title><rect x="1143.8" y="2005" width="0.6" height="15.0" fill="rgb(250,166,44)" rx="2" ry="2" />
<text  x="1146.82" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="860.0" y="1957" width="0.2" height="15.0" fill="rgb(237,79,43)" rx="2" ry="2" />
<text  x="863.02" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="783.3" y="1525" width="0.2" height="15.0" fill="rgb(226,224,41)" rx="2" ry="2" />
<text  x="786.32" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="69.3" y="1781" width="0.2" height="15.0" fill="rgb(217,191,51)" rx="2" ry="2" />
<text  x="72.26" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1143.0" y="1989" width="0.4" height="15.0" fill="rgb(211,202,15)" rx="2" ry="2" />
<text  x="1146.03" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="256.5" y="1845" width="0.2" height="15.0" fill="rgb(219,163,32)" rx="2" ry="2" />
<text  x="259.54" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="74.6" y="1765" width="0.2" height="15.0" fill="rgb(219,47,1)" rx="2" ry="2" />
<text  x="77.61" y="1775.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="327.7" y="1733" width="0.4" height="15.0" fill="rgb(223,203,2)" rx="2" ry="2" />
<text  x="330.69" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="580.4" y="2021" width="0.4" height="15.0" fill="rgb(243,210,31)" rx="2" ry="2" />
<text  x="583.38" y="2031.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="460.5" y="1877" width="0.4" height="15.0" fill="rgb(222,218,6)" rx="2" ry="2" />
<text  x="463.48" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="339.2" y="1669" width="0.2" height="15.0" fill="rgb(245,227,8)" rx="2" ry="2" />
<text  x="342.19" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (5 samples, 0.08%)</title><rect x="524.7" y="1925" width="1.0" height="15.0" fill="rgb(206,130,2)" rx="2" ry="2" />
<text  x="527.69" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1033.4" y="1957" width="0.2" height="15.0" fill="rgb(229,222,36)" rx="2" ry="2" />
<text  x="1036.43" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(228,182,11)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (33 samples, 0.55%)</title><rect x="1112.3" y="1509" width="6.6" height="15.0" fill="rgb(230,108,33)" rx="2" ry="2" />
<text  x="1115.31" y="1519.5" ></text>
</g>
<g >
<title>get_empty_filp (1 samples, 0.02%)</title><rect x="414.7" y="1941" width="0.2" height="15.0" fill="rgb(228,183,36)" rx="2" ry="2" />
<text  x="417.70" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1175.5" y="1957" width="0.2" height="15.0" fill="rgb(214,155,6)" rx="2" ry="2" />
<text  x="1178.53" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="789" width="18.1" height="15.0" fill="rgb(206,5,17)" rx="2" ry="2" />
<text  x="106.35" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="294.4" y="1589" width="0.2" height="15.0" fill="rgb(225,126,41)" rx="2" ry="2" />
<text  x="297.40" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="253.0" y="1797" width="0.2" height="15.0" fill="rgb(205,228,14)" rx="2" ry="2" />
<text  x="255.98" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="941.1" y="1925" width="0.2" height="15.0" fill="rgb(241,4,17)" rx="2" ry="2" />
<text  x="944.08" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="532.0" y="1861" width="0.2" height="15.0" fill="rgb(230,150,32)" rx="2" ry="2" />
<text  x="535.02" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="524.7" y="1893" width="0.2" height="15.0" fill="rgb(248,51,18)" rx="2" ry="2" />
<text  x="527.69" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="274.8" y="1813" width="0.4" height="15.0" fill="rgb(236,73,51)" rx="2" ry="2" />
<text  x="277.78" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="600.8" y="1845" width="0.2" height="15.0" fill="rgb(237,166,23)" rx="2" ry="2" />
<text  x="603.79" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="210.4" y="1941" width="0.2" height="15.0" fill="rgb(216,149,29)" rx="2" ry="2" />
<text  x="213.37" y="1951.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="578.4" y="1989" width="0.2" height="15.0" fill="rgb(207,215,33)" rx="2" ry="2" />
<text  x="581.40" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="601.0" y="1877" width="0.2" height="15.0" fill="rgb(215,102,25)" rx="2" ry="2" />
<text  x="603.99" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="210.4" y="1669" width="0.2" height="15.0" fill="rgb(248,76,50)" rx="2" ry="2" />
<text  x="213.37" y="1679.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="124.6" y="1557" width="0.1" height="15.0" fill="rgb(214,89,46)" rx="2" ry="2" />
<text  x="127.55" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="885" width="18.1" height="15.0" fill="rgb(206,155,1)" rx="2" ry="2" />
<text  x="106.35" y="895.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="730.4" y="1813" width="0.8" height="15.0" fill="rgb(210,70,45)" rx="2" ry="2" />
<text  x="733.41" y="1823.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="973.2" y="2005" width="0.2" height="15.0" fill="rgb(245,147,29)" rx="2" ry="2" />
<text  x="976.18" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="460.7" y="1845" width="0.2" height="15.0" fill="rgb(231,60,53)" rx="2" ry="2" />
<text  x="463.68" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1177.9" y="2021" width="0.2" height="15.0" fill="rgb(247,76,24)" rx="2" ry="2" />
<text  x="1180.91" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="958.9" y="1989" width="0.2" height="15.0" fill="rgb(220,22,0)" rx="2" ry="2" />
<text  x="961.92" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="707.2" y="1717" width="0.2" height="15.0" fill="rgb(226,190,26)" rx="2" ry="2" />
<text  x="710.22" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="408.4" y="1829" width="0.2" height="15.0" fill="rgb(214,113,40)" rx="2" ry="2" />
<text  x="411.35" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (3 samples, 0.05%)</title><rect x="604.8" y="1941" width="0.6" height="15.0" fill="rgb(238,131,29)" rx="2" ry="2" />
<text  x="607.76" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="684.0" y="1957" width="0.2" height="15.0" fill="rgb(216,143,51)" rx="2" ry="2" />
<text  x="687.03" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="405.6" y="1877" width="0.2" height="15.0" fill="rgb(253,118,22)" rx="2" ry="2" />
<text  x="408.58" y="1887.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1031.1" y="2037" width="0.2" height="15.0" fill="rgb(225,24,32)" rx="2" ry="2" />
<text  x="1034.05" y="2047.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="783.3" y="1573" width="0.2" height="15.0" fill="rgb(236,108,26)" rx="2" ry="2" />
<text  x="786.32" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="655.3" y="1893" width="0.2" height="15.0" fill="rgb(218,199,42)" rx="2" ry="2" />
<text  x="658.29" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_mss (16 samples, 0.27%)</title><rect x="332.4" y="1877" width="3.2" height="15.0" fill="rgb(214,93,31)" rx="2" ry="2" />
<text  x="335.45" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="161.6" y="1765" width="0.2" height="15.0" fill="rgb(241,118,8)" rx="2" ry="2" />
<text  x="164.61" y="1775.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (51 samples, 0.86%)</title><rect x="1109.9" y="1877" width="10.1" height="15.0" fill="rgb(235,89,28)" rx="2" ry="2" />
<text  x="1112.93" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="616.8" y="1733" width="0.2" height="15.0" fill="rgb(242,225,13)" rx="2" ry="2" />
<text  x="619.85" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="537.0" y="1845" width="0.2" height="15.0" fill="rgb(232,100,42)" rx="2" ry="2" />
<text  x="539.98" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (13 samples, 0.22%)</title><rect x="533.6" y="1973" width="2.6" height="15.0" fill="rgb(208,120,54)" rx="2" ry="2" />
<text  x="536.61" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="617.4" y="1829" width="0.4" height="15.0" fill="rgb(213,24,25)" rx="2" ry="2" />
<text  x="620.44" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="271.4" y="1797" width="0.2" height="15.0" fill="rgb(233,9,40)" rx="2" ry="2" />
<text  x="274.41" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="461.3" y="1877" width="0.2" height="15.0" fill="rgb(241,171,19)" rx="2" ry="2" />
<text  x="464.27" y="1887.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (3 samples, 0.05%)</title><rect x="350.7" y="2037" width="0.6" height="15.0" fill="rgb(243,29,0)" rx="2" ry="2" />
<text  x="353.68" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="901.2" y="2005" width="0.2" height="15.0" fill="rgb(233,154,47)" rx="2" ry="2" />
<text  x="904.24" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="813.1" y="1669" width="0.1" height="15.0" fill="rgb(212,58,24)" rx="2" ry="2" />
<text  x="816.05" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="33.0" y="1941" width="0.2" height="15.0" fill="rgb(247,167,46)" rx="2" ry="2" />
<text  x="35.99" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="662.0" y="2037" width="0.2" height="15.0" fill="rgb(212,173,13)" rx="2" ry="2" />
<text  x="665.03" y="2047.5" ></text>
</g>
<g >
<title>__libc_fcntl (84 samples, 1.41%)</title><rect x="550.1" y="1989" width="16.6" height="15.0" fill="rgb(235,24,23)" rx="2" ry="2" />
<text  x="553.06" y="1999.5" ></text>
</g>
<g >
<title>ip_send_check (10 samples, 0.17%)</title><rect x="777.4" y="1621" width="2.0" height="15.0" fill="rgb(210,200,11)" rx="2" ry="2" />
<text  x="780.38" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="856.1" y="1877" width="0.4" height="15.0" fill="rgb(206,186,27)" rx="2" ry="2" />
<text  x="859.06" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="341.8" y="1685" width="0.4" height="15.0" fill="rgb(247,9,34)" rx="2" ry="2" />
<text  x="344.76" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="512.0" y="1957" width="0.2" height="15.0" fill="rgb(252,87,14)" rx="2" ry="2" />
<text  x="515.01" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="678.3" y="1845" width="0.2" height="15.0" fill="rgb(219,119,17)" rx="2" ry="2" />
<text  x="681.28" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="859.4" y="1877" width="0.2" height="15.0" fill="rgb(253,35,37)" rx="2" ry="2" />
<text  x="862.43" y="1887.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1098.4" y="1925" width="0.2" height="15.0" fill="rgb(242,154,8)" rx="2" ry="2" />
<text  x="1101.44" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="320.8" y="1717" width="0.4" height="15.0" fill="rgb(206,215,40)" rx="2" ry="2" />
<text  x="323.76" y="1727.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="760.3" y="1701" width="0.2" height="15.0" fill="rgb(212,180,33)" rx="2" ry="2" />
<text  x="763.33" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (36 samples, 0.60%)</title><rect x="56.0" y="1973" width="7.1" height="15.0" fill="rgb(230,206,47)" rx="2" ry="2" />
<text  x="58.98" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.13%)</title><rect x="884.8" y="1957" width="1.6" height="15.0" fill="rgb(245,174,15)" rx="2" ry="2" />
<text  x="887.79" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (117 samples, 1.97%)</title><rect x="583.4" y="2021" width="23.1" height="15.0" fill="rgb(229,21,54)" rx="2" ry="2" />
<text  x="586.35" y="2031.5" >f..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.5" y="1957" width="0.2" height="15.0" fill="rgb(239,211,22)" rx="2" ry="2" />
<text  x="943.48" y="1967.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="679.1" y="1909" width="0.2" height="15.0" fill="rgb(223,138,8)" rx="2" ry="2" />
<text  x="682.08" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (10 samples, 0.17%)</title><rect x="224.8" y="1877" width="2.0" height="15.0" fill="rgb(248,119,10)" rx="2" ry="2" />
<text  x="227.83" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1109.5" y="1781" width="0.2" height="15.0" fill="rgb(231,156,13)" rx="2" ry="2" />
<text  x="1112.54" y="1791.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="828.7" y="1701" width="0.2" height="15.0" fill="rgb(219,199,7)" rx="2" ry="2" />
<text  x="831.71" y="1711.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="392.9" y="1637" width="0.2" height="15.0" fill="rgb(252,196,41)" rx="2" ry="2" />
<text  x="395.90" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (7 samples, 0.12%)</title><rect x="298.0" y="1589" width="1.4" height="15.0" fill="rgb(219,229,23)" rx="2" ry="2" />
<text  x="300.96" y="1599.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="74.2" y="1941" width="0.4" height="15.0" fill="rgb(236,59,27)" rx="2" ry="2" />
<text  x="77.21" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="102.6" y="1397" width="21.2" height="15.0" fill="rgb(207,66,27)" rx="2" ry="2" />
<text  x="105.55" y="1407.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="909.0" y="1989" width="4.3" height="15.0" fill="rgb(220,49,42)" rx="2" ry="2" />
<text  x="911.97" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="714.6" y="1877" width="0.3" height="15.0" fill="rgb(211,46,20)" rx="2" ry="2" />
<text  x="717.55" y="1887.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (18 samples, 0.30%)</title><rect x="1125.2" y="1973" width="3.6" height="15.0" fill="rgb(231,215,16)" rx="2" ry="2" />
<text  x="1128.19" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="614.5" y="1877" width="0.4" height="15.0" fill="rgb(227,183,9)" rx="2" ry="2" />
<text  x="617.47" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="118.4" y="37" width="0.2" height="15.0" fill="rgb(219,159,42)" rx="2" ry="2" />
<text  x="121.41" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (15 samples, 0.25%)</title><rect x="888.0" y="1957" width="2.9" height="15.0" fill="rgb(224,206,14)" rx="2" ry="2" />
<text  x="890.96" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (35 samples, 0.59%)</title><rect x="1015.8" y="2021" width="6.9" height="15.0" fill="rgb(225,216,32)" rx="2" ry="2" />
<text  x="1018.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="469" width="17.9" height="15.0" fill="rgb(229,124,22)" rx="2" ry="2" />
<text  x="106.35" y="479.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="980.5" y="2037" width="0.2" height="15.0" fill="rgb(206,211,15)" rx="2" ry="2" />
<text  x="983.52" y="2047.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="337.6" y="1877" width="0.2" height="15.0" fill="rgb(233,204,24)" rx="2" ry="2" />
<text  x="340.60" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="510.2" y="1941" width="0.4" height="15.0" fill="rgb(234,189,52)" rx="2" ry="2" />
<text  x="513.22" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="68.3" y="1909" width="1.4" height="15.0" fill="rgb(215,147,0)" rx="2" ry="2" />
<text  x="71.27" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="491.0" y="1829" width="0.2" height="15.0" fill="rgb(220,99,40)" rx="2" ry="2" />
<text  x="494.00" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="120.8" y="69" width="0.2" height="15.0" fill="rgb(252,181,38)" rx="2" ry="2" />
<text  x="123.79" y="79.5" ></text>
</g>
<g >
<title>do_futex (13 samples, 0.22%)</title><rect x="11.4" y="1989" width="2.6" height="15.0" fill="rgb(249,69,52)" rx="2" ry="2" />
<text  x="14.39" y="1999.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (2 samples, 0.03%)</title><rect x="569.3" y="1989" width="0.4" height="15.0" fill="rgb(213,191,7)" rx="2" ry="2" />
<text  x="572.28" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="270.6" y="1765" width="0.2" height="15.0" fill="rgb(237,200,46)" rx="2" ry="2" />
<text  x="273.61" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="478.9" y="1957" width="0.4" height="15.0" fill="rgb(210,213,26)" rx="2" ry="2" />
<text  x="481.91" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="935.1" y="1861" width="0.2" height="15.0" fill="rgb(219,16,9)" rx="2" ry="2" />
<text  x="938.13" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="915.3" y="2005" width="0.8" height="15.0" fill="rgb(219,137,18)" rx="2" ry="2" />
<text  x="918.31" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="165.2" y="2005" width="0.2" height="15.0" fill="rgb(237,155,0)" rx="2" ry="2" />
<text  x="168.18" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1112.5" y="1477" width="0.4" height="15.0" fill="rgb(238,21,8)" rx="2" ry="2" />
<text  x="1115.51" y="1487.5" ></text>
</g>
<g >
<title>skb_release_data (28 samples, 0.47%)</title><rect x="1112.9" y="1477" width="5.6" height="15.0" fill="rgb(251,179,12)" rx="2" ry="2" />
<text  x="1115.91" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (179 samples, 3.01%)</title><rect x="922.3" y="2021" width="35.4" height="15.0" fill="rgb(226,176,18)" rx="2" ry="2" />
<text  x="925.25" y="2031.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="902.2" y="1957" width="1.2" height="15.0" fill="rgb(206,49,48)" rx="2" ry="2" />
<text  x="905.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="330.5" y="1461" width="0.2" height="15.0" fill="rgb(226,226,54)" rx="2" ry="2" />
<text  x="333.47" y="1471.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (4 samples, 0.07%)</title><rect x="998.4" y="1909" width="0.7" height="15.0" fill="rgb(217,74,33)" rx="2" ry="2" />
<text  x="1001.35" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="161.4" y="1605" width="0.2" height="15.0" fill="rgb(234,43,16)" rx="2" ry="2" />
<text  x="164.41" y="1615.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="585.1" y="1893" width="0.2" height="15.0" fill="rgb(222,195,14)" rx="2" ry="2" />
<text  x="588.14" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="39.5" y="1989" width="0.2" height="15.0" fill="rgb(206,81,30)" rx="2" ry="2" />
<text  x="42.53" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (19 samples, 0.32%)</title><rect x="1114.7" y="1429" width="3.8" height="15.0" fill="rgb(225,39,32)" rx="2" ry="2" />
<text  x="1117.69" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="113.5" y="53" width="2.5" height="15.0" fill="rgb(251,23,29)" rx="2" ry="2" />
<text  x="116.45" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="616.8" y="1797" width="0.2" height="15.0" fill="rgb(234,224,38)" rx="2" ry="2" />
<text  x="619.85" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1175.5" y="1941" width="0.2" height="15.0" fill="rgb(218,44,35)" rx="2" ry="2" />
<text  x="1178.53" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="413.9" y="1909" width="0.6" height="15.0" fill="rgb(226,11,34)" rx="2" ry="2" />
<text  x="416.90" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="210.4" y="2005" width="0.2" height="15.0" fill="rgb(234,83,14)" rx="2" ry="2" />
<text  x="213.37" y="2015.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="335.8" y="1893" width="0.2" height="15.0" fill="rgb(208,168,23)" rx="2" ry="2" />
<text  x="338.82" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (7 samples, 0.12%)</title><rect x="566.9" y="2005" width="1.4" height="15.0" fill="rgb(227,221,45)" rx="2" ry="2" />
<text  x="569.90" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="280.7" y="1749" width="0.2" height="15.0" fill="rgb(218,226,14)" rx="2" ry="2" />
<text  x="283.72" y="1759.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (8 samples, 0.13%)</title><rect x="594.6" y="1781" width="1.6" height="15.0" fill="rgb(236,215,12)" rx="2" ry="2" />
<text  x="597.65" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.8" y="101" width="0.2" height="15.0" fill="rgb(209,205,10)" rx="2" ry="2" />
<text  x="123.79" y="111.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="103.3" y="149" width="17.5" height="15.0" fill="rgb(207,170,14)" rx="2" ry="2" />
<text  x="106.35" y="159.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="957.9" y="2021" width="1.0" height="15.0" fill="rgb(227,30,53)" rx="2" ry="2" />
<text  x="960.92" y="2031.5" ></text>
</g>
<g >
<title>sys_setsockopt (36 samples, 0.60%)</title><rect x="695.3" y="1941" width="7.2" height="15.0" fill="rgb(240,89,46)" rx="2" ry="2" />
<text  x="698.33" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (7 samples, 0.12%)</title><rect x="710.6" y="1973" width="1.4" height="15.0" fill="rgb(205,61,24)" rx="2" ry="2" />
<text  x="713.59" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="968.8" y="1701" width="0.2" height="15.0" fill="rgb(212,6,5)" rx="2" ry="2" />
<text  x="971.82" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="850.1" y="1925" width="1.0" height="15.0" fill="rgb(248,0,10)" rx="2" ry="2" />
<text  x="853.11" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="986.7" y="1957" width="0.2" height="15.0" fill="rgb(252,120,37)" rx="2" ry="2" />
<text  x="989.66" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (14 samples, 0.24%)</title><rect x="78.4" y="1957" width="2.7" height="15.0" fill="rgb(212,33,29)" rx="2" ry="2" />
<text  x="81.37" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="1000.7" y="1877" width="0.4" height="15.0" fill="rgb(218,199,45)" rx="2" ry="2" />
<text  x="1003.73" y="1887.5" ></text>
</g>
<g >
<title>vfprintf (19 samples, 0.32%)</title><rect x="199.7" y="2021" width="3.7" height="15.0" fill="rgb(242,158,8)" rx="2" ry="2" />
<text  x="202.66" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="323.1" y="1765" width="0.2" height="15.0" fill="rgb(220,173,47)" rx="2" ry="2" />
<text  x="326.13" y="1775.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="1031.3" y="2037" width="0.3" height="15.0" fill="rgb(208,23,4)" rx="2" ry="2" />
<text  x="1034.25" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="1032.4" y="2037" width="0.8" height="15.0" fill="rgb(243,86,7)" rx="2" ry="2" />
<text  x="1035.44" y="2047.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(211,179,43)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="102.8" y="1221" width="19.2" height="15.0" fill="rgb(216,193,31)" rx="2" ry="2" />
<text  x="105.75" y="1231.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="843.8" y="1909" width="0.6" height="15.0" fill="rgb(254,4,4)" rx="2" ry="2" />
<text  x="846.77" y="1919.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1031.6" y="2037" width="0.2" height="15.0" fill="rgb(245,133,43)" rx="2" ry="2" />
<text  x="1034.65" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="903.4" y="1973" width="0.2" height="15.0" fill="rgb(226,2,51)" rx="2" ry="2" />
<text  x="906.42" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.1" y="1589" width="0.2" height="15.0" fill="rgb(211,184,48)" rx="2" ry="2" />
<text  x="128.15" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="210.4" y="1957" width="0.2" height="15.0" fill="rgb(222,212,54)" rx="2" ry="2" />
<text  x="213.37" y="1967.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (31 samples, 0.52%)</title><rect x="1006.3" y="2037" width="6.1" height="15.0" fill="rgb(232,7,33)" rx="2" ry="2" />
<text  x="1009.28" y="2047.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1111.5" y="1541" width="0.2" height="15.0" fill="rgb(216,156,4)" rx="2" ry="2" />
<text  x="1114.52" y="1551.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="453.7" y="1973" width="0.2" height="15.0" fill="rgb(240,56,27)" rx="2" ry="2" />
<text  x="456.74" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="315.4" y="1669" width="0.2" height="15.0" fill="rgb(207,146,52)" rx="2" ry="2" />
<text  x="318.40" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="541.5" y="1957" width="0.2" height="15.0" fill="rgb(208,142,7)" rx="2" ry="2" />
<text  x="544.54" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="33.0" y="1893" width="0.2" height="15.0" fill="rgb(228,82,43)" rx="2" ry="2" />
<text  x="35.99" y="1903.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="759.5" y="1733" width="0.2" height="15.0" fill="rgb(219,78,2)" rx="2" ry="2" />
<text  x="762.54" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="108.5" y="37" width="0.8" height="15.0" fill="rgb(245,182,48)" rx="2" ry="2" />
<text  x="111.50" y="47.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="810.3" y="1685" width="0.2" height="15.0" fill="rgb(248,187,35)" rx="2" ry="2" />
<text  x="813.28" y="1695.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="128.9" y="1957" width="0.2" height="15.0" fill="rgb(240,67,40)" rx="2" ry="2" />
<text  x="131.91" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (47 samples, 0.79%)</title><rect x="1110.5" y="1797" width="9.3" height="15.0" fill="rgb(254,150,27)" rx="2" ry="2" />
<text  x="1113.53" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="984.3" y="1877" width="0.2" height="15.0" fill="rgb(215,160,0)" rx="2" ry="2" />
<text  x="987.28" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::FunctionScheduler::RepeatFunc*, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1813" width="0.2" height="15.0" fill="rgb(213,53,22)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (6 samples, 0.10%)</title><rect x="80.0" y="1893" width="1.1" height="15.0" fill="rgb(228,4,13)" rx="2" ry="2" />
<text  x="82.96" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (20 samples, 0.34%)</title><rect x="133.9" y="1973" width="3.9" height="15.0" fill="rgb(206,44,41)" rx="2" ry="2" />
<text  x="136.87" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="10.6" y="1829" width="0.6" height="15.0" fill="rgb(241,64,29)" rx="2" ry="2" />
<text  x="13.59" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="479.1" y="1925" width="0.2" height="15.0" fill="rgb(212,184,2)" rx="2" ry="2" />
<text  x="482.11" y="1935.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (25 samples, 0.42%)</title><rect x="970.8" y="2037" width="5.0" height="15.0" fill="rgb(233,94,28)" rx="2" ry="2" />
<text  x="973.81" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="64.3" y="1973" width="0.2" height="15.0" fill="rgb(246,52,33)" rx="2" ry="2" />
<text  x="67.30" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="573.8" y="1925" width="0.2" height="15.0" fill="rgb(247,124,6)" rx="2" ry="2" />
<text  x="576.84" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (3 samples, 0.05%)</title><rect x="28.4" y="1973" width="0.6" height="15.0" fill="rgb(205,54,10)" rx="2" ry="2" />
<text  x="31.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="624.6" y="2005" width="0.4" height="15.0" fill="rgb(233,103,1)" rx="2" ry="2" />
<text  x="627.58" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="171.3" y="1925" width="0.2" height="15.0" fill="rgb(221,85,0)" rx="2" ry="2" />
<text  x="174.32" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (85 samples, 1.43%)</title><rect x="874.9" y="1989" width="16.8" height="15.0" fill="rgb(206,89,4)" rx="2" ry="2" />
<text  x="877.88" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="339.2" y="1925" width="0.2" height="15.0" fill="rgb(252,59,0)" rx="2" ry="2" />
<text  x="342.19" y="1935.5" ></text>
</g>
<g >
<title>sys_recvfrom (1 samples, 0.02%)</title><rect x="1129.0" y="2021" width="0.2" height="15.0" fill="rgb(207,99,2)" rx="2" ry="2" />
<text  x="1131.96" y="2031.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="344.3" y="2021" width="0.2" height="15.0" fill="rgb(244,184,19)" rx="2" ry="2" />
<text  x="347.34" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="320.8" y="1653" width="0.4" height="15.0" fill="rgb(250,61,39)" rx="2" ry="2" />
<text  x="323.76" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (69 samples, 1.16%)</title><rect x="217.7" y="1941" width="13.7" height="15.0" fill="rgb(216,127,19)" rx="2" ry="2" />
<text  x="220.70" y="1951.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="161.4" y="1541" width="0.2" height="15.0" fill="rgb(214,98,34)" rx="2" ry="2" />
<text  x="164.41" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="178.9" y="1973" width="0.4" height="15.0" fill="rgb(220,109,42)" rx="2" ry="2" />
<text  x="181.85" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="574.2" y="1877" width="0.2" height="15.0" fill="rgb(216,160,17)" rx="2" ry="2" />
<text  x="577.24" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="131.7" y="1925" width="0.2" height="15.0" fill="rgb(226,134,27)" rx="2" ry="2" />
<text  x="134.69" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5 samples, 0.08%)</title><rect x="1174.9" y="2005" width="1.0" height="15.0" fill="rgb(221,189,54)" rx="2" ry="2" />
<text  x="1177.94" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (18 samples, 0.30%)</title><rect x="532.6" y="1989" width="3.6" height="15.0" fill="rgb(207,210,32)" rx="2" ry="2" />
<text  x="535.62" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="172.7" y="1941" width="0.2" height="15.0" fill="rgb(241,27,26)" rx="2" ry="2" />
<text  x="175.71" y="1951.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="81.5" y="1925" width="0.2" height="15.0" fill="rgb(245,229,27)" rx="2" ry="2" />
<text  x="84.55" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (8 samples, 0.13%)</title><rect x="1103.6" y="1909" width="1.6" height="15.0" fill="rgb(241,202,10)" rx="2" ry="2" />
<text  x="1106.59" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="118.0" y="37" width="0.2" height="15.0" fill="rgb(241,166,6)" rx="2" ry="2" />
<text  x="121.01" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="872.9" y="1813" width="0.2" height="15.0" fill="rgb(213,66,16)" rx="2" ry="2" />
<text  x="875.90" y="1823.5" ></text>
</g>
<g >
<title>futex_wait (13 samples, 0.22%)</title><rect x="11.4" y="1973" width="2.6" height="15.0" fill="rgb(247,44,29)" rx="2" ry="2" />
<text  x="14.39" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.05%)</title><rect x="298.6" y="1509" width="0.6" height="15.0" fill="rgb(212,86,1)" rx="2" ry="2" />
<text  x="301.56" y="1519.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="154.1" y="1653" width="0.2" height="15.0" fill="rgb(233,185,27)" rx="2" ry="2" />
<text  x="157.08" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (2 samples, 0.03%)</title><rect x="580.8" y="2021" width="0.4" height="15.0" fill="rgb(225,180,48)" rx="2" ry="2" />
<text  x="583.78" y="2031.5" ></text>
</g>
<g >
<title>__fdget (16 samples, 0.27%)</title><rect x="1125.4" y="1957" width="3.2" height="15.0" fill="rgb(236,119,37)" rx="2" ry="2" />
<text  x="1128.39" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="851.7" y="1909" width="0.2" height="15.0" fill="rgb(217,162,47)" rx="2" ry="2" />
<text  x="854.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="117.0" y="69" width="0.6" height="15.0" fill="rgb(254,55,50)" rx="2" ry="2" />
<text  x="120.02" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="121.0" y="117" width="0.2" height="15.0" fill="rgb(238,91,44)" rx="2" ry="2" />
<text  x="123.98" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="328.1" y="1685" width="0.2" height="15.0" fill="rgb(248,9,49)" rx="2" ry="2" />
<text  x="331.09" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.15%)</title><rect x="750.8" y="1781" width="1.8" height="15.0" fill="rgb(224,49,40)" rx="2" ry="2" />
<text  x="753.82" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="929.2" y="1941" width="0.6" height="15.0" fill="rgb(254,165,39)" rx="2" ry="2" />
<text  x="932.19" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="171.3" y="1685" width="0.2" height="15.0" fill="rgb(234,83,45)" rx="2" ry="2" />
<text  x="174.32" y="1695.5" ></text>
</g>
<g >
<title>sock_poll (71 samples, 1.19%)</title><rect x="491.2" y="1909" width="14.1" height="15.0" fill="rgb(208,84,34)" rx="2" ry="2" />
<text  x="494.20" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="336.6" y="1909" width="0.2" height="15.0" fill="rgb(251,16,47)" rx="2" ry="2" />
<text  x="339.61" y="1919.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="87.9" y="1973" width="0.2" height="15.0" fill="rgb(254,58,3)" rx="2" ry="2" />
<text  x="90.89" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="895.9" y="1733" width="0.2" height="15.0" fill="rgb(209,202,36)" rx="2" ry="2" />
<text  x="898.89" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="120.0" y="101" width="0.4" height="15.0" fill="rgb(205,116,54)" rx="2" ry="2" />
<text  x="122.99" y="111.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 0.05%)</title><rect x="126.5" y="1829" width="0.6" height="15.0" fill="rgb(246,6,37)" rx="2" ry="2" />
<text  x="129.53" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="365.9" y="1941" width="0.2" height="15.0" fill="rgb(227,49,33)" rx="2" ry="2" />
<text  x="368.94" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="581" width="17.9" height="15.0" fill="rgb(208,121,7)" rx="2" ry="2" />
<text  x="106.35" y="591.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (15 samples, 0.25%)</title><rect x="339.4" y="1957" width="3.0" height="15.0" fill="rgb(234,174,38)" rx="2" ry="2" />
<text  x="342.39" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="162.2" y="1909" width="0.2" height="15.0" fill="rgb(221,151,5)" rx="2" ry="2" />
<text  x="165.21" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1147.0" y="1941" width="0.2" height="15.0" fill="rgb(240,9,13)" rx="2" ry="2" />
<text  x="1149.99" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="392.9" y="1733" width="0.2" height="15.0" fill="rgb(225,170,33)" rx="2" ry="2" />
<text  x="395.90" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="540.7" y="1909" width="0.2" height="15.0" fill="rgb(229,170,30)" rx="2" ry="2" />
<text  x="543.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.18%)</title><rect x="906.6" y="1989" width="2.2" height="15.0" fill="rgb(238,171,22)" rx="2" ry="2" />
<text  x="909.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (11 samples, 0.18%)</title><rect x="524.1" y="2037" width="2.2" height="15.0" fill="rgb(249,141,23)" rx="2" ry="2" />
<text  x="527.09" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="684.2" y="2005" width="0.2" height="15.0" fill="rgb(206,35,40)" rx="2" ry="2" />
<text  x="687.23" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="537.0" y="1797" width="0.2" height="15.0" fill="rgb(208,124,50)" rx="2" ry="2" />
<text  x="539.98" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="856.1" y="1893" width="0.4" height="15.0" fill="rgb(235,12,9)" rx="2" ry="2" />
<text  x="859.06" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (118 samples, 1.98%)</title><rect x="663.2" y="2037" width="23.4" height="15.0" fill="rgb(238,220,43)" rx="2" ry="2" />
<text  x="666.22" y="2047.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="297.2" y="1589" width="0.6" height="15.0" fill="rgb(251,55,29)" rx="2" ry="2" />
<text  x="300.17" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="898.9" y="1877" width="0.2" height="15.0" fill="rgb(249,98,24)" rx="2" ry="2" />
<text  x="901.86" y="1887.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (4 samples, 0.07%)</title><rect x="758.7" y="1733" width="0.8" height="15.0" fill="rgb(218,160,33)" rx="2" ry="2" />
<text  x="761.75" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1149.4" y="1989" width="0.2" height="15.0" fill="rgb(243,50,42)" rx="2" ry="2" />
<text  x="1152.37" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="223.8" y="1877" width="0.2" height="15.0" fill="rgb(247,105,1)" rx="2" ry="2" />
<text  x="226.84" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="392.9" y="1845" width="0.2" height="15.0" fill="rgb(249,61,6)" rx="2" ry="2" />
<text  x="395.90" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="36.2" y="2005" width="0.2" height="15.0" fill="rgb(220,205,19)" rx="2" ry="2" />
<text  x="39.16" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="181.4" y="1957" width="0.2" height="15.0" fill="rgb(223,16,21)" rx="2" ry="2" />
<text  x="184.43" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="121.0" y="37" width="0.2" height="15.0" fill="rgb(241,15,26)" rx="2" ry="2" />
<text  x="123.98" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (5 samples, 0.08%)</title><rect x="882.0" y="1909" width="1.0" height="15.0" fill="rgb(215,193,1)" rx="2" ry="2" />
<text  x="885.02" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="486.8" y="2021" width="0.4" height="15.0" fill="rgb(250,136,11)" rx="2" ry="2" />
<text  x="489.84" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="1033.6" y="2005" width="0.4" height="15.0" fill="rgb(205,93,46)" rx="2" ry="2" />
<text  x="1036.63" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="567.3" y="1957" width="0.2" height="15.0" fill="rgb(212,130,46)" rx="2" ry="2" />
<text  x="570.30" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="126.3" y="1765" width="0.2" height="15.0" fill="rgb(238,126,35)" rx="2" ry="2" />
<text  x="129.34" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="275.0" y="1621" width="0.2" height="15.0" fill="rgb(210,102,32)" rx="2" ry="2" />
<text  x="277.97" y="1631.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="984.3" y="1717" width="0.2" height="15.0" fill="rgb(217,140,36)" rx="2" ry="2" />
<text  x="987.28" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="707.6" y="2037" width="0.2" height="15.0" fill="rgb(230,65,45)" rx="2" ry="2" />
<text  x="710.62" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="256.5" y="1813" width="0.2" height="15.0" fill="rgb(238,173,41)" rx="2" ry="2" />
<text  x="259.54" y="1823.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (2 samples, 0.03%)</title><rect x="648.0" y="1973" width="0.4" height="15.0" fill="rgb(217,191,13)" rx="2" ry="2" />
<text  x="650.96" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="888.2" y="1733" width="0.2" height="15.0" fill="rgb(230,139,52)" rx="2" ry="2" />
<text  x="891.16" y="1743.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="708.2" y="2005" width="0.2" height="15.0" fill="rgb(217,189,4)" rx="2" ry="2" />
<text  x="711.21" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="537.2" y="1973" width="0.2" height="15.0" fill="rgb(247,47,16)" rx="2" ry="2" />
<text  x="540.18" y="1983.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="809.9" y="1653" width="0.4" height="15.0" fill="rgb(221,43,22)" rx="2" ry="2" />
<text  x="812.88" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.71%)</title><rect x="102.6" y="1269" width="20.2" height="15.0" fill="rgb(206,224,16)" rx="2" ry="2" />
<text  x="105.55" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (2 samples, 0.03%)</title><rect x="400.6" y="1893" width="0.4" height="15.0" fill="rgb(230,162,9)" rx="2" ry="2" />
<text  x="403.62" y="1903.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="915.1" y="2005" width="0.2" height="15.0" fill="rgb(233,63,29)" rx="2" ry="2" />
<text  x="918.12" y="2015.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="61.9" y="1765" width="0.2" height="15.0" fill="rgb(234,104,16)" rx="2" ry="2" />
<text  x="64.92" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="836.0" y="1861" width="0.2" height="15.0" fill="rgb(228,144,25)" rx="2" ry="2" />
<text  x="839.04" y="1871.5" ></text>
</g>
<g >
<title>sys_recvfrom (329 samples, 5.53%)</title><rect x="1063.8" y="2005" width="65.2" height="15.0" fill="rgb(229,48,7)" rx="2" ry="2" />
<text  x="1066.76" y="2015.5" >sys_rec..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="210.4" y="1989" width="0.2" height="15.0" fill="rgb(242,228,50)" rx="2" ry="2" />
<text  x="213.37" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (3 samples, 0.05%)</title><rect x="887.4" y="1957" width="0.6" height="15.0" fill="rgb(252,135,44)" rx="2" ry="2" />
<text  x="890.37" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="658.5" y="1973" width="0.2" height="15.0" fill="rgb(240,171,32)" rx="2" ry="2" />
<text  x="661.46" y="1983.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="405.0" y="1861" width="0.4" height="15.0" fill="rgb(239,120,47)" rx="2" ry="2" />
<text  x="407.98" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1180.5" y="1989" width="0.2" height="15.0" fill="rgb(223,0,8)" rx="2" ry="2" />
<text  x="1183.49" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="1169.0" y="2053" width="0.4" height="15.0" fill="rgb(219,146,25)" rx="2" ry="2" />
<text  x="1171.99" y="2063.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="461.9" y="1925" width="0.2" height="15.0" fill="rgb(225,17,40)" rx="2" ry="2" />
<text  x="464.86" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="297.6" y="1445" width="0.2" height="15.0" fill="rgb(211,111,44)" rx="2" ry="2" />
<text  x="300.57" y="1455.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (5 samples, 0.08%)</title><rect x="568.3" y="2005" width="1.0" height="15.0" fill="rgb(243,196,43)" rx="2" ry="2" />
<text  x="571.29" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="171.3" y="1621" width="0.2" height="15.0" fill="rgb(234,95,7)" rx="2" ry="2" />
<text  x="174.32" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="498.3" y="1733" width="0.6" height="15.0" fill="rgb(239,199,6)" rx="2" ry="2" />
<text  x="501.33" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="968.8" y="1765" width="0.4" height="15.0" fill="rgb(227,190,46)" rx="2" ry="2" />
<text  x="971.82" y="1775.5" ></text>
</g>
<g >
<title>sock_poll (40 samples, 0.67%)</title><rect x="454.3" y="1957" width="8.0" height="15.0" fill="rgb(253,65,48)" rx="2" ry="2" />
<text  x="457.33" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.2" y="1781" width="0.2" height="15.0" fill="rgb(244,196,17)" rx="2" ry="2" />
<text  x="163.23" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.76%)</title><rect x="1154.5" y="1957" width="8.9" height="15.0" fill="rgb(237,20,28)" rx="2" ry="2" />
<text  x="1157.52" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="167.6" y="2021" width="0.2" height="15.0" fill="rgb(217,147,30)" rx="2" ry="2" />
<text  x="170.56" y="2031.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="710.2" y="1957" width="0.2" height="15.0" fill="rgb(228,147,4)" rx="2" ry="2" />
<text  x="713.19" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="161.4" y="1749" width="0.2" height="15.0" fill="rgb(208,17,45)" rx="2" ry="2" />
<text  x="164.41" y="1759.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="966.6" y="2005" width="0.8" height="15.0" fill="rgb(222,60,38)" rx="2" ry="2" />
<text  x="969.64" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (3 samples, 0.05%)</title><rect x="549.3" y="1957" width="0.6" height="15.0" fill="rgb(242,187,14)" rx="2" ry="2" />
<text  x="552.26" y="1967.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="884.6" y="1941" width="0.2" height="15.0" fill="rgb(222,52,40)" rx="2" ry="2" />
<text  x="887.60" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1052.1" y="1973" width="0.2" height="15.0" fill="rgb(233,191,54)" rx="2" ry="2" />
<text  x="1055.06" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="176.5" y="1989" width="0.6" height="15.0" fill="rgb(229,31,28)" rx="2" ry="2" />
<text  x="179.48" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="903.6" y="1973" width="0.2" height="15.0" fill="rgb(253,120,22)" rx="2" ry="2" />
<text  x="906.62" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="274.6" y="1813" width="0.2" height="15.0" fill="rgb(217,51,6)" rx="2" ry="2" />
<text  x="277.58" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (93 samples, 1.56%)</title><rect x="686.8" y="2021" width="18.4" height="15.0" fill="rgb(205,23,6)" rx="2" ry="2" />
<text  x="689.81" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="539.6" y="1909" width="1.1" height="15.0" fill="rgb(245,185,7)" rx="2" ry="2" />
<text  x="542.55" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.4" y="1957" width="0.2" height="15.0" fill="rgb(212,57,49)" rx="2" ry="2" />
<text  x="576.44" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="859.4" y="1845" width="0.2" height="15.0" fill="rgb(211,30,36)" rx="2" ry="2" />
<text  x="862.43" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="498.1" y="1749" width="0.8" height="15.0" fill="rgb(254,39,54)" rx="2" ry="2" />
<text  x="501.13" y="1759.5" ></text>
</g>
<g >
<title>inet_sendmsg (389 samples, 6.53%)</title><rect x="258.9" y="1925" width="77.1" height="15.0" fill="rgb(229,103,41)" rx="2" ry="2" />
<text  x="261.92" y="1935.5" >inet_sen..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="513.6" y="1925" width="0.2" height="15.0" fill="rgb(246,51,27)" rx="2" ry="2" />
<text  x="516.59" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="939.9" y="1973" width="0.2" height="15.0" fill="rgb(219,91,0)" rx="2" ry="2" />
<text  x="942.89" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (43 samples, 0.72%)</title><rect x="1111.3" y="1605" width="8.5" height="15.0" fill="rgb(207,84,9)" rx="2" ry="2" />
<text  x="1114.32" y="1615.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (10 samples, 0.17%)</title><rect x="313.6" y="1685" width="2.0" height="15.0" fill="rgb(233,222,33)" rx="2" ry="2" />
<text  x="316.62" y="1695.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="416.5" y="2005" width="0.2" height="15.0" fill="rgb(210,176,13)" rx="2" ry="2" />
<text  x="419.48" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1032.2" y="2037" width="0.2" height="15.0" fill="rgb(233,168,2)" rx="2" ry="2" />
<text  x="1035.24" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1175.5" y="1797" width="0.2" height="15.0" fill="rgb(228,210,22)" rx="2" ry="2" />
<text  x="1178.53" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="968.8" y="1733" width="0.2" height="15.0" fill="rgb(244,5,22)" rx="2" ry="2" />
<text  x="971.82" y="1743.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1079.8" y="1813" width="0.2" height="15.0" fill="rgb(222,54,27)" rx="2" ry="2" />
<text  x="1082.81" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.05%)</title><rect x="1035.2" y="2037" width="0.6" height="15.0" fill="rgb(231,193,13)" rx="2" ry="2" />
<text  x="1038.22" y="2047.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.03%)</title><rect x="748.8" y="1797" width="0.4" height="15.0" fill="rgb(253,188,6)" rx="2" ry="2" />
<text  x="751.84" y="1807.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="253.0" y="1653" width="0.2" height="15.0" fill="rgb(218,78,38)" rx="2" ry="2" />
<text  x="255.98" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (26 samples, 0.44%)</title><rect x="796.0" y="1509" width="5.2" height="15.0" fill="rgb(236,97,29)" rx="2" ry="2" />
<text  x="799.01" y="1519.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="1001.3" y="1893" width="0.2" height="15.0" fill="rgb(241,62,2)" rx="2" ry="2" />
<text  x="1004.33" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (16 samples, 0.27%)</title><rect x="653.1" y="2005" width="3.2" height="15.0" fill="rgb(246,88,29)" rx="2" ry="2" />
<text  x="656.11" y="2015.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (356 samples, 5.98%)</title><rect x="265.1" y="1893" width="70.5" height="15.0" fill="rgb(208,108,40)" rx="2" ry="2" />
<text  x="268.07" y="1903.5" >tcp_sen..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="335.6" y="1877" width="0.2" height="15.0" fill="rgb(223,229,38)" rx="2" ry="2" />
<text  x="338.62" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="256.5" y="1701" width="0.2" height="15.0" fill="rgb(229,95,38)" rx="2" ry="2" />
<text  x="259.54" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="323.1" y="1797" width="0.2" height="15.0" fill="rgb(206,76,2)" rx="2" ry="2" />
<text  x="326.13" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="271.4" y="1845" width="0.2" height="15.0" fill="rgb(252,173,53)" rx="2" ry="2" />
<text  x="274.41" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (10 samples, 0.17%)</title><rect x="79.2" y="1941" width="1.9" height="15.0" fill="rgb(229,163,34)" rx="2" ry="2" />
<text  x="82.17" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="742.7" y="1621" width="0.2" height="15.0" fill="rgb(248,180,4)" rx="2" ry="2" />
<text  x="745.69" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="331.3" y="1733" width="0.2" height="15.0" fill="rgb(230,164,49)" rx="2" ry="2" />
<text  x="334.26" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="872.9" y="1797" width="0.2" height="15.0" fill="rgb(205,102,34)" rx="2" ry="2" />
<text  x="875.90" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="224.0" y="1845" width="0.4" height="15.0" fill="rgb(234,144,5)" rx="2" ry="2" />
<text  x="227.04" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="927.6" y="1941" width="1.4" height="15.0" fill="rgb(238,158,26)" rx="2" ry="2" />
<text  x="930.60" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1173.6" y="1957" width="0.1" height="15.0" fill="rgb(251,212,40)" rx="2" ry="2" />
<text  x="1176.55" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="89.7" y="1957" width="0.4" height="15.0" fill="rgb(222,189,4)" rx="2" ry="2" />
<text  x="92.67" y="1967.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1119.4" y="1525" width="0.2" height="15.0" fill="rgb(216,39,29)" rx="2" ry="2" />
<text  x="1122.45" y="1535.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="252.8" y="1973" width="0.4" height="15.0" fill="rgb(226,83,28)" rx="2" ry="2" />
<text  x="255.78" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="343.3" y="1989" width="0.8" height="15.0" fill="rgb(218,187,5)" rx="2" ry="2" />
<text  x="346.35" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1749" width="0.2" height="15.0" fill="rgb(231,169,34)" rx="2" ry="2" />
<text  x="259.54" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="284.3" y="1605" width="0.2" height="15.0" fill="rgb(234,104,9)" rx="2" ry="2" />
<text  x="287.29" y="1615.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="312.8" y="1637" width="0.2" height="15.0" fill="rgb(235,82,5)" rx="2" ry="2" />
<text  x="315.83" y="1647.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="323.7" y="1813" width="0.2" height="15.0" fill="rgb(242,202,40)" rx="2" ry="2" />
<text  x="326.73" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="622.2" y="1989" width="0.2" height="15.0" fill="rgb(208,85,12)" rx="2" ry="2" />
<text  x="625.20" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="537.0" y="1701" width="0.2" height="15.0" fill="rgb(216,86,1)" rx="2" ry="2" />
<text  x="539.98" y="1711.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.02%)</title><rect x="131.9" y="2005" width="0.2" height="15.0" fill="rgb(231,30,11)" rx="2" ry="2" />
<text  x="134.88" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="849.5" y="1717" width="0.2" height="15.0" fill="rgb(222,4,49)" rx="2" ry="2" />
<text  x="852.52" y="1727.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="453.7" y="1941" width="0.2" height="15.0" fill="rgb(242,17,3)" rx="2" ry="2" />
<text  x="456.74" y="1951.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="599.6" y="1813" width="0.2" height="15.0" fill="rgb(210,214,43)" rx="2" ry="2" />
<text  x="602.60" y="1823.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="253.4" y="1973" width="0.2" height="15.0" fill="rgb(208,82,29)" rx="2" ry="2" />
<text  x="256.37" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (127 samples, 2.13%)</title><rect x="102.2" y="1893" width="25.1" height="15.0" fill="rgb(231,87,22)" rx="2" ry="2" />
<text  x="105.16" y="1903.5" >[..</text>
</g>
<g >
<title>security_sock_graft (2 samples, 0.03%)</title><rect x="386.8" y="1941" width="0.3" height="15.0" fill="rgb(214,150,17)" rx="2" ry="2" />
<text  x="389.75" y="1951.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (34 samples, 0.57%)</title><rect x="795.6" y="1541" width="6.7" height="15.0" fill="rgb(253,209,52)" rx="2" ry="2" />
<text  x="798.61" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="645.6" y="1941" width="0.4" height="15.0" fill="rgb(233,207,28)" rx="2" ry="2" />
<text  x="648.58" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="805.9" y="1621" width="0.2" height="15.0" fill="rgb(246,119,29)" rx="2" ry="2" />
<text  x="808.92" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getSecurityProtocol[abi:cxx11] (3 samples, 0.05%)</title><rect x="232.0" y="1957" width="0.6" height="15.0" fill="rgb(225,220,23)" rx="2" ry="2" />
<text  x="234.97" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (1 samples, 0.02%)</title><rect x="1034.2" y="2005" width="0.2" height="15.0" fill="rgb(217,53,39)" rx="2" ry="2" />
<text  x="1037.23" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="616.4" y="1845" width="0.8" height="15.0" fill="rgb(218,20,1)" rx="2" ry="2" />
<text  x="619.45" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (3 samples, 0.05%)</title><rect x="545.1" y="1957" width="0.6" height="15.0" fill="rgb(249,223,32)" rx="2" ry="2" />
<text  x="548.10" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="1040.6" y="2053" width="0.8" height="15.0" fill="rgb(221,209,52)" rx="2" ry="2" />
<text  x="1043.57" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1180.7" y="1989" width="0.4" height="15.0" fill="rgb(216,152,17)" rx="2" ry="2" />
<text  x="1183.69" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="203.2" y="2005" width="0.2" height="15.0" fill="rgb(238,217,49)" rx="2" ry="2" />
<text  x="206.23" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1 samples, 0.02%)</title><rect x="619.6" y="2005" width="0.2" height="15.0" fill="rgb(240,142,3)" rx="2" ry="2" />
<text  x="622.62" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="958.3" y="1989" width="0.6" height="15.0" fill="rgb(243,12,12)" rx="2" ry="2" />
<text  x="961.32" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="919.5" y="1989" width="0.6" height="15.0" fill="rgb(243,195,40)" rx="2" ry="2" />
<text  x="922.48" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.2" y="37" width="0.2" height="15.0" fill="rgb(252,203,4)" rx="2" ry="2" />
<text  x="121.21" y="47.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="103.1" y="1029" width="18.3" height="15.0" fill="rgb(226,154,18)" rx="2" ry="2" />
<text  x="106.15" y="1039.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="505.9" y="1925" width="0.2" height="15.0" fill="rgb(217,140,29)" rx="2" ry="2" />
<text  x="508.86" y="1935.5" ></text>
</g>
<g >
<title>sys_epoll_wait (91 samples, 1.53%)</title><rect x="487.6" y="1989" width="18.1" height="15.0" fill="rgb(243,91,36)" rx="2" ry="2" />
<text  x="490.63" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="859.4" y="1893" width="0.2" height="15.0" fill="rgb(226,76,36)" rx="2" ry="2" />
<text  x="862.43" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="671.0" y="1909" width="0.1" height="15.0" fill="rgb(243,13,15)" rx="2" ry="2" />
<text  x="673.95" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="572.8" y="1941" width="0.2" height="15.0" fill="rgb(229,65,44)" rx="2" ry="2" />
<text  x="575.85" y="1951.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.10%)</title><rect x="291.8" y="1781" width="1.2" height="15.0" fill="rgb(212,25,11)" rx="2" ry="2" />
<text  x="294.82" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (51 samples, 0.86%)</title><rect x="608.9" y="1925" width="10.1" height="15.0" fill="rgb(254,60,37)" rx="2" ry="2" />
<text  x="611.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="576.6" y="1957" width="0.4" height="15.0" fill="rgb(248,170,18)" rx="2" ry="2" />
<text  x="579.61" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="74.6" y="1653" width="0.2" height="15.0" fill="rgb(214,94,34)" rx="2" ry="2" />
<text  x="77.61" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="281.7" y="1813" width="0.2" height="15.0" fill="rgb(238,51,8)" rx="2" ry="2" />
<text  x="284.71" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="644.8" y="1893" width="0.2" height="15.0" fill="rgb(213,99,29)" rx="2" ry="2" />
<text  x="647.79" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (2 samples, 0.03%)</title><rect x="187.4" y="2021" width="0.4" height="15.0" fill="rgb(216,23,24)" rx="2" ry="2" />
<text  x="190.38" y="2031.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="975.6" y="2021" width="0.2" height="15.0" fill="rgb(240,219,4)" rx="2" ry="2" />
<text  x="978.56" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="477.3" y="1973" width="0.4" height="15.0" fill="rgb(221,105,45)" rx="2" ry="2" />
<text  x="480.32" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="221.1" y="1845" width="0.2" height="15.0" fill="rgb(231,184,3)" rx="2" ry="2" />
<text  x="224.07" y="1855.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1109.5" y="1797" width="0.2" height="15.0" fill="rgb(210,8,13)" rx="2" ry="2" />
<text  x="1112.54" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="259.7" y="1765" width="0.2" height="15.0" fill="rgb(207,215,28)" rx="2" ry="2" />
<text  x="262.71" y="1775.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="747.3" y="1701" width="0.2" height="15.0" fill="rgb(215,72,11)" rx="2" ry="2" />
<text  x="750.25" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="957.9" y="1941" width="0.2" height="15.0" fill="rgb(240,208,49)" rx="2" ry="2" />
<text  x="960.92" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="213" width="17.9" height="15.0" fill="rgb(224,166,52)" rx="2" ry="2" />
<text  x="106.35" y="223.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="677.1" y="1829" width="1.2" height="15.0" fill="rgb(249,31,8)" rx="2" ry="2" />
<text  x="680.09" y="1839.5" ></text>
</g>
<g >
<title>tcp_send_ack (51 samples, 0.86%)</title><rect x="1109.9" y="1909" width="10.1" height="15.0" fill="rgb(218,210,3)" rx="2" ry="2" />
<text  x="1112.93" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="69.3" y="1637" width="0.2" height="15.0" fill="rgb(208,142,53)" rx="2" ry="2" />
<text  x="72.26" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="872.9" y="1941" width="0.2" height="15.0" fill="rgb(230,111,44)" rx="2" ry="2" />
<text  x="875.90" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="13.8" y="1893" width="0.2" height="15.0" fill="rgb(232,79,1)" rx="2" ry="2" />
<text  x="16.77" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="891.1" y="1973" width="0.2" height="15.0" fill="rgb(240,146,16)" rx="2" ry="2" />
<text  x="894.14" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (6 samples, 0.10%)</title><rect x="629.7" y="1957" width="1.2" height="15.0" fill="rgb(219,67,7)" rx="2" ry="2" />
<text  x="632.73" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="284.3" y="1669" width="0.2" height="15.0" fill="rgb(216,19,0)" rx="2" ry="2" />
<text  x="287.29" y="1679.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="505.9" y="2037" width="0.2" height="15.0" fill="rgb(246,221,6)" rx="2" ry="2" />
<text  x="508.86" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="517.2" y="1925" width="0.2" height="15.0" fill="rgb(242,10,22)" rx="2" ry="2" />
<text  x="520.16" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="1144.6" y="2021" width="0.4" height="15.0" fill="rgb(214,98,29)" rx="2" ry="2" />
<text  x="1147.62" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.6" y="1845" width="0.2" height="15.0" fill="rgb(228,126,49)" rx="2" ry="2" />
<text  x="163.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="85.1" y="1909" width="0.4" height="15.0" fill="rgb(223,204,14)" rx="2" ry="2" />
<text  x="88.11" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="354.2" y="1989" width="0.2" height="15.0" fill="rgb(223,37,3)" rx="2" ry="2" />
<text  x="357.25" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (45 samples, 0.76%)</title><rect x="1110.9" y="1733" width="8.9" height="15.0" fill="rgb(229,163,6)" rx="2" ry="2" />
<text  x="1113.92" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="661.4" y="2005" width="0.2" height="15.0" fill="rgb(251,127,18)" rx="2" ry="2" />
<text  x="664.44" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="54.4" y="1925" width="0.8" height="15.0" fill="rgb(218,108,28)" rx="2" ry="2" />
<text  x="57.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="954.4" y="1989" width="3.1" height="15.0" fill="rgb(230,30,2)" rx="2" ry="2" />
<text  x="957.36" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="547.3" y="1925" width="0.2" height="15.0" fill="rgb(243,225,40)" rx="2" ry="2" />
<text  x="550.28" y="1935.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="871.3" y="2005" width="0.2" height="15.0" fill="rgb(223,168,0)" rx="2" ry="2" />
<text  x="874.32" y="2015.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (1 samples, 0.02%)</title><rect x="529.6" y="2005" width="0.2" height="15.0" fill="rgb(241,175,48)" rx="2" ry="2" />
<text  x="532.64" y="2015.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (529 samples, 8.88%)</title><rect x="731.2" y="1861" width="104.8" height="15.0" fill="rgb(245,110,53)" rx="2" ry="2" />
<text  x="734.20" y="1871.5" >exit_to_user..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="669.6" y="1877" width="0.2" height="15.0" fill="rgb(216,171,18)" rx="2" ry="2" />
<text  x="672.56" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1174.5" y="1989" width="0.2" height="15.0" fill="rgb(233,204,18)" rx="2" ry="2" />
<text  x="1177.54" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="321.0" y="1557" width="0.2" height="15.0" fill="rgb(248,63,40)" rx="2" ry="2" />
<text  x="323.95" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="155.7" y="1893" width="0.4" height="15.0" fill="rgb(251,63,10)" rx="2" ry="2" />
<text  x="158.67" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="294.4" y="1685" width="0.2" height="15.0" fill="rgb(247,86,45)" rx="2" ry="2" />
<text  x="297.40" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (5 samples, 0.08%)</title><rect x="904.8" y="2005" width="1.0" height="15.0" fill="rgb(230,171,0)" rx="2" ry="2" />
<text  x="907.81" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="58.0" y="1861" width="0.2" height="15.0" fill="rgb(221,194,4)" rx="2" ry="2" />
<text  x="60.96" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="911.4" y="1973" width="0.1" height="15.0" fill="rgb(227,64,21)" rx="2" ry="2" />
<text  x="914.35" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="783.3" y="1509" width="0.2" height="15.0" fill="rgb(219,132,44)" rx="2" ry="2" />
<text  x="786.32" y="1519.5" ></text>
</g>
<g >
<title>skb_release_all (30 samples, 0.50%)</title><rect x="1112.9" y="1493" width="6.0" height="15.0" fill="rgb(229,152,14)" rx="2" ry="2" />
<text  x="1115.91" y="1503.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="649.3" y="1989" width="1.6" height="15.0" fill="rgb(213,133,23)" rx="2" ry="2" />
<text  x="652.35" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="977.5" y="2037" width="0.4" height="15.0" fill="rgb(222,73,41)" rx="2" ry="2" />
<text  x="980.54" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="646.4" y="1925" width="0.2" height="15.0" fill="rgb(218,43,38)" rx="2" ry="2" />
<text  x="649.38" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1099.6" y="1877" width="0.2" height="15.0" fill="rgb(236,166,10)" rx="2" ry="2" />
<text  x="1102.63" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="669.6" y="1861" width="0.2" height="15.0" fill="rgb(253,93,51)" rx="2" ry="2" />
<text  x="672.56" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1188.8" y="1749" width="0.2" height="15.0" fill="rgb(205,131,20)" rx="2" ry="2" />
<text  x="1191.81" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (85 samples, 1.43%)</title><rect x="146.2" y="1941" width="16.8" height="15.0" fill="rgb(212,181,37)" rx="2" ry="2" />
<text  x="149.15" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="151.5" y="1877" width="1.2" height="15.0" fill="rgb(231,173,34)" rx="2" ry="2" />
<text  x="154.50" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="1146.6" y="1957" width="0.4" height="15.0" fill="rgb(213,195,0)" rx="2" ry="2" />
<text  x="1149.60" y="1967.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="33.0" y="1557" width="0.2" height="15.0" fill="rgb(211,108,11)" rx="2" ry="2" />
<text  x="35.99" y="1567.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="363.8" y="1941" width="0.2" height="15.0" fill="rgb(208,187,10)" rx="2" ry="2" />
<text  x="366.76" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="783.1" y="1589" width="0.4" height="15.0" fill="rgb(207,195,36)" rx="2" ry="2" />
<text  x="786.12" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="343.7" y="1637" width="0.2" height="15.0" fill="rgb(220,47,52)" rx="2" ry="2" />
<text  x="346.75" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (2 samples, 0.03%)</title><rect x="967.4" y="2037" width="0.4" height="15.0" fill="rgb(206,2,2)" rx="2" ry="2" />
<text  x="970.44" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="582.8" y="2021" width="0.6" height="15.0" fill="rgb(232,178,42)" rx="2" ry="2" />
<text  x="585.76" y="2031.5" ></text>
</g>
<g >
<title>__alloc_fd (8 samples, 0.13%)</title><rect x="364.2" y="1941" width="1.5" height="15.0" fill="rgb(211,167,9)" rx="2" ry="2" />
<text  x="367.16" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1669" width="0.2" height="15.0" fill="rgb(239,170,49)" rx="2" ry="2" />
<text  x="259.54" y="1679.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="99.6" y="1957" width="0.2" height="15.0" fill="rgb(210,164,14)" rx="2" ry="2" />
<text  x="102.58" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="453.1" y="1973" width="0.2" height="15.0" fill="rgb(206,125,28)" rx="2" ry="2" />
<text  x="456.14" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (3 samples, 0.05%)</title><rect x="150.3" y="1893" width="0.6" height="15.0" fill="rgb(246,208,30)" rx="2" ry="2" />
<text  x="153.32" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="523.9" y="1957" width="0.2" height="15.0" fill="rgb(252,18,35)" rx="2" ry="2" />
<text  x="526.90" y="1967.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="669.6" y="1829" width="0.2" height="15.0" fill="rgb(245,20,18)" rx="2" ry="2" />
<text  x="672.56" y="1839.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (8 samples, 0.13%)</title><rect x="1137.5" y="2053" width="1.6" height="15.0" fill="rgb(231,210,48)" rx="2" ry="2" />
<text  x="1140.48" y="2063.5" ></text>
</g>
<g >
<title>sched_clock (4 samples, 0.07%)</title><rect x="810.5" y="1669" width="0.8" height="15.0" fill="rgb(232,16,53)" rx="2" ry="2" />
<text  x="813.47" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="328.3" y="1717" width="0.2" height="15.0" fill="rgb(223,31,7)" rx="2" ry="2" />
<text  x="331.29" y="1727.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="872.9" y="1653" width="0.2" height="15.0" fill="rgb(225,207,15)" rx="2" ry="2" />
<text  x="875.90" y="1663.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="1143.2" y="1973" width="0.2" height="15.0" fill="rgb(205,1,29)" rx="2" ry="2" />
<text  x="1146.23" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1052.1" y="1957" width="0.2" height="15.0" fill="rgb(247,178,25)" rx="2" ry="2" />
<text  x="1055.06" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="986.7" y="1925" width="0.2" height="15.0" fill="rgb(226,163,46)" rx="2" ry="2" />
<text  x="989.66" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (813 samples, 13.65%)</title><rect x="710.0" y="2005" width="161.1" height="15.0" fill="rgb(247,59,13)" rx="2" ry="2" />
<text  x="712.99" y="2015.5" >[unknown]</text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (2 samples, 0.03%)</title><rect x="578.2" y="2005" width="0.4" height="15.0" fill="rgb(244,178,13)" rx="2" ry="2" />
<text  x="581.20" y="2015.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1109.7" y="1829" width="0.2" height="15.0" fill="rgb(214,147,5)" rx="2" ry="2" />
<text  x="1112.73" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="298.6" y="1461" width="0.6" height="15.0" fill="rgb(218,88,7)" rx="2" ry="2" />
<text  x="301.56" y="1471.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="567.3" y="1941" width="0.2" height="15.0" fill="rgb(244,130,39)" rx="2" ry="2" />
<text  x="570.30" y="1951.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="142.8" y="1877" width="0.2" height="15.0" fill="rgb(244,101,19)" rx="2" ry="2" />
<text  x="145.78" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (1 samples, 0.02%)</title><rect x="29.2" y="1989" width="0.2" height="15.0" fill="rgb(248,83,29)" rx="2" ry="2" />
<text  x="32.22" y="1999.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="284.5" y="1861" width="0.2" height="15.0" fill="rgb(236,15,49)" rx="2" ry="2" />
<text  x="287.49" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="766.7" y="1685" width="0.4" height="15.0" fill="rgb(212,113,26)" rx="2" ry="2" />
<text  x="769.67" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="176.1" y="1957" width="0.2" height="15.0" fill="rgb(239,116,9)" rx="2" ry="2" />
<text  x="179.08" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="872.9" y="1781" width="0.2" height="15.0" fill="rgb(229,74,51)" rx="2" ry="2" />
<text  x="875.90" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.7" y="2005" width="0.2" height="15.0" fill="rgb(239,86,19)" rx="2" ry="2" />
<text  x="923.67" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="563.3" y="1813" width="0.2" height="15.0" fill="rgb(222,85,49)" rx="2" ry="2" />
<text  x="566.34" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="849.5" y="1669" width="0.2" height="15.0" fill="rgb(212,14,26)" rx="2" ry="2" />
<text  x="852.52" y="1679.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="161.4" y="1557" width="0.2" height="15.0" fill="rgb(233,114,18)" rx="2" ry="2" />
<text  x="164.41" y="1567.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="1129.8" y="1957" width="0.1" height="15.0" fill="rgb(217,203,49)" rx="2" ry="2" />
<text  x="1132.75" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1180.7" y="1973" width="0.4" height="15.0" fill="rgb(244,8,7)" rx="2" ry="2" />
<text  x="1183.69" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="927.4" y="1909" width="0.2" height="15.0" fill="rgb(216,103,27)" rx="2" ry="2" />
<text  x="930.40" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="663.0" y="2037" width="0.2" height="15.0" fill="rgb(213,163,6)" rx="2" ry="2" />
<text  x="666.02" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 0.76%)</title><rect x="103.3" y="53" width="9.0" height="15.0" fill="rgb(221,129,25)" rx="2" ry="2" />
<text  x="106.35" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="491.0" y="1909" width="0.2" height="15.0" fill="rgb(235,8,53)" rx="2" ry="2" />
<text  x="494.00" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="415.3" y="1925" width="0.6" height="15.0" fill="rgb(205,66,52)" rx="2" ry="2" />
<text  x="418.29" y="1935.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="1149.2" y="1893" width="0.2" height="15.0" fill="rgb(250,55,52)" rx="2" ry="2" />
<text  x="1152.17" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="931.2" y="1877" width="0.2" height="15.0" fill="rgb(205,92,17)" rx="2" ry="2" />
<text  x="934.17" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="898.1" y="2005" width="0.2" height="15.0" fill="rgb(240,82,28)" rx="2" ry="2" />
<text  x="901.07" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="161.4" y="1765" width="0.2" height="15.0" fill="rgb(211,117,16)" rx="2" ry="2" />
<text  x="164.41" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="747.3" y="1685" width="0.2" height="15.0" fill="rgb(222,151,32)" rx="2" ry="2" />
<text  x="750.25" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="468.6" y="1909" width="0.2" height="15.0" fill="rgb(227,128,0)" rx="2" ry="2" />
<text  x="471.60" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="322.5" y="1781" width="0.2" height="15.0" fill="rgb(216,111,38)" rx="2" ry="2" />
<text  x="325.54" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (1 samples, 0.02%)</title><rect x="1145.2" y="2053" width="0.2" height="15.0" fill="rgb(210,17,8)" rx="2" ry="2" />
<text  x="1148.21" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="363.2" y="1957" width="0.2" height="15.0" fill="rgb(243,96,10)" rx="2" ry="2" />
<text  x="366.17" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="526.1" y="1861" width="0.2" height="15.0" fill="rgb(239,166,29)" rx="2" ry="2" />
<text  x="529.08" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="922.6" y="2005" width="0.2" height="15.0" fill="rgb(230,159,11)" rx="2" ry="2" />
<text  x="925.65" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1028.7" y="1941" width="0.2" height="15.0" fill="rgb(241,100,12)" rx="2" ry="2" />
<text  x="1031.68" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="94.2" y="2005" width="0.2" height="15.0" fill="rgb(252,203,52)" rx="2" ry="2" />
<text  x="97.23" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="33.0" y="1589" width="0.2" height="15.0" fill="rgb(243,212,45)" rx="2" ry="2" />
<text  x="35.99" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.9" y="1909" width="0.2" height="15.0" fill="rgb(241,184,28)" rx="2" ry="2" />
<text  x="64.92" y="1919.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="525.9" y="1861" width="0.2" height="15.0" fill="rgb(246,208,51)" rx="2" ry="2" />
<text  x="528.88" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="144.2" y="1877" width="0.6" height="15.0" fill="rgb(223,142,10)" rx="2" ry="2" />
<text  x="147.17" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="231.8" y="1941" width="0.2" height="15.0" fill="rgb(250,57,39)" rx="2" ry="2" />
<text  x="234.77" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1181.5" y="1925" width="0.2" height="15.0" fill="rgb(236,121,29)" rx="2" ry="2" />
<text  x="1184.48" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="51.6" y="1765" width="0.2" height="15.0" fill="rgb(246,62,3)" rx="2" ry="2" />
<text  x="54.62" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (24 samples, 0.40%)</title><rect x="641.8" y="1957" width="4.8" height="15.0" fill="rgb(251,53,23)" rx="2" ry="2" />
<text  x="644.82" y="1967.5" ></text>
</g>
<g >
<title>ep_remove (58 samples, 0.97%)</title><rect x="462.5" y="1973" width="11.5" height="15.0" fill="rgb(213,41,0)" rx="2" ry="2" />
<text  x="465.46" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="161.4" y="1733" width="0.2" height="15.0" fill="rgb(233,91,12)" rx="2" ry="2" />
<text  x="164.41" y="1743.5" ></text>
</g>
<g >
<title>__skb_clone (21 samples, 0.35%)</title><rect x="317.0" y="1797" width="4.2" height="15.0" fill="rgb(217,215,25)" rx="2" ry="2" />
<text  x="319.99" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1109.3" y="1861" width="0.6" height="15.0" fill="rgb(232,188,17)" rx="2" ry="2" />
<text  x="1112.34" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="895.9" y="1909" width="0.2" height="15.0" fill="rgb(230,194,3)" rx="2" ry="2" />
<text  x="898.89" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1175.5" y="1893" width="0.2" height="15.0" fill="rgb(239,210,29)" rx="2" ry="2" />
<text  x="1178.53" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="460.7" y="1701" width="0.2" height="15.0" fill="rgb(226,153,7)" rx="2" ry="2" />
<text  x="463.68" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::size (2 samples, 0.03%)</title><rect x="28.6" y="1957" width="0.4" height="15.0" fill="rgb(215,202,1)" rx="2" ry="2" />
<text  x="31.63" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="215.3" y="1893" width="0.2" height="15.0" fill="rgb(245,93,47)" rx="2" ry="2" />
<text  x="218.32" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (9 samples, 0.15%)</title><rect x="378.0" y="1893" width="1.8" height="15.0" fill="rgb(246,151,13)" rx="2" ry="2" />
<text  x="381.03" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="140.0" y="1957" width="0.2" height="15.0" fill="rgb(233,222,54)" rx="2" ry="2" />
<text  x="143.01" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (1 samples, 0.02%)</title><rect x="234.0" y="2005" width="0.1" height="15.0" fill="rgb(253,80,29)" rx="2" ry="2" />
<text  x="236.95" y="2015.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (2 samples, 0.03%)</title><rect x="1019.8" y="1973" width="0.4" height="15.0" fill="rgb(222,174,10)" rx="2" ry="2" />
<text  x="1022.76" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="576.4" y="1909" width="0.2" height="15.0" fill="rgb(214,60,17)" rx="2" ry="2" />
<text  x="579.42" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="953.0" y="2005" width="0.8" height="15.0" fill="rgb(236,111,31)" rx="2" ry="2" />
<text  x="955.97" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="405.0" y="1893" width="0.4" height="15.0" fill="rgb(243,197,22)" rx="2" ry="2" />
<text  x="407.98" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="767.1" y="1685" width="0.2" height="15.0" fill="rgb(239,78,51)" rx="2" ry="2" />
<text  x="770.07" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="460.7" y="1717" width="0.2" height="15.0" fill="rgb(213,216,0)" rx="2" ry="2" />
<text  x="463.68" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="224.2" y="1781" width="0.2" height="15.0" fill="rgb(205,125,22)" rx="2" ry="2" />
<text  x="227.24" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="907.2" y="1973" width="0.4" height="15.0" fill="rgb(239,142,54)" rx="2" ry="2" />
<text  x="910.19" y="1983.5" ></text>
</g>
<g >
<title>do_fcntl (1 samples, 0.02%)</title><rect x="560.0" y="1941" width="0.2" height="15.0" fill="rgb(243,164,25)" rx="2" ry="2" />
<text  x="562.97" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="426.6" y="2021" width="0.8" height="15.0" fill="rgb(248,172,45)" rx="2" ry="2" />
<text  x="429.59" y="2031.5" ></text>
</g>
<g >
<title>epoll_ctl (331 samples, 5.56%)</title><rect x="420.6" y="2037" width="65.6" height="15.0" fill="rgb(254,32,14)" rx="2" ry="2" />
<text  x="423.64" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="882.6" y="1893" width="0.4" height="15.0" fill="rgb(210,48,8)" rx="2" ry="2" />
<text  x="885.61" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (2 samples, 0.03%)</title><rect x="859.6" y="1941" width="0.4" height="15.0" fill="rgb(230,95,0)" rx="2" ry="2" />
<text  x="862.62" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (31 samples, 0.52%)</title><rect x="796.0" y="1525" width="6.1" height="15.0" fill="rgb(226,172,45)" rx="2" ry="2" />
<text  x="799.01" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="263.3" y="1877" width="0.6" height="15.0" fill="rgb(229,43,0)" rx="2" ry="2" />
<text  x="266.28" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="141.6" y="2005" width="0.2" height="15.0" fill="rgb(228,187,15)" rx="2" ry="2" />
<text  x="144.60" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1109.3" y="1877" width="0.6" height="15.0" fill="rgb(207,19,33)" rx="2" ry="2" />
<text  x="1112.34" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1176.3" y="2005" width="0.4" height="15.0" fill="rgb(220,63,10)" rx="2" ry="2" />
<text  x="1179.33" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="220.3" y="1909" width="1.0" height="15.0" fill="rgb(234,165,18)" rx="2" ry="2" />
<text  x="223.28" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (38 samples, 0.64%)</title><rect x="1080.8" y="1893" width="7.5" height="15.0" fill="rgb(215,127,14)" rx="2" ry="2" />
<text  x="1083.80" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (6 samples, 0.10%)</title><rect x="949.6" y="1973" width="1.2" height="15.0" fill="rgb(252,212,37)" rx="2" ry="2" />
<text  x="952.60" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (17 samples, 0.29%)</title><rect x="296.0" y="1733" width="3.4" height="15.0" fill="rgb(232,85,35)" rx="2" ry="2" />
<text  x="298.98" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="736.0" y="1701" width="0.2" height="15.0" fill="rgb(243,64,5)" rx="2" ry="2" />
<text  x="738.96" y="1711.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="316.6" y="1797" width="0.2" height="15.0" fill="rgb(224,209,35)" rx="2" ry="2" />
<text  x="319.59" y="1807.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (21 samples, 0.35%)</title><rect x="990.0" y="1989" width="4.2" height="15.0" fill="rgb(213,161,14)" rx="2" ry="2" />
<text  x="993.03" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (45 samples, 0.76%)</title><rect x="25.5" y="2005" width="8.9" height="15.0" fill="rgb(224,42,6)" rx="2" ry="2" />
<text  x="28.46" y="2015.5" ></text>
</g>
<g >
<title>vfprintf (6 samples, 0.10%)</title><rect x="1137.9" y="2037" width="1.2" height="15.0" fill="rgb(242,120,18)" rx="2" ry="2" />
<text  x="1140.88" y="2047.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="61.9" y="1781" width="0.2" height="15.0" fill="rgb(241,113,42)" rx="2" ry="2" />
<text  x="64.92" y="1791.5" ></text>
</g>
<g >
<title>__check_heap_object (3 samples, 0.05%)</title><rect x="270.2" y="1861" width="0.6" height="15.0" fill="rgb(207,49,39)" rx="2" ry="2" />
<text  x="273.22" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="577.0" y="1957" width="0.2" height="15.0" fill="rgb(220,43,54)" rx="2" ry="2" />
<text  x="580.01" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (8 samples, 0.13%)</title><rect x="174.7" y="2021" width="1.6" height="15.0" fill="rgb(223,80,27)" rx="2" ry="2" />
<text  x="177.69" y="2031.5" ></text>
</g>
<g >
<title>do_futex (15 samples, 0.25%)</title><rect x="14.4" y="1989" width="2.9" height="15.0" fill="rgb(239,164,51)" rx="2" ry="2" />
<text  x="17.36" y="1999.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="464.2" y="1941" width="0.2" height="15.0" fill="rgb(243,111,40)" rx="2" ry="2" />
<text  x="467.24" y="1951.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="898.7" y="2005" width="0.2" height="15.0" fill="rgb(234,185,48)" rx="2" ry="2" />
<text  x="901.67" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="103.1" y="1077" width="18.3" height="15.0" fill="rgb(229,226,53)" rx="2" ry="2" />
<text  x="106.15" y="1087.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (962 samples, 16.16%)</title><rect x="710.0" y="2037" width="190.6" height="15.0" fill="rgb(237,213,24)" rx="2" ry="2" />
<text  x="712.99" y="2047.5" >facebook::memcache::McSe..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (3 samples, 0.05%)</title><rect x="197.1" y="2021" width="0.6" height="15.0" fill="rgb(224,172,4)" rx="2" ry="2" />
<text  x="200.09" y="2031.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="679.3" y="1813" width="0.8" height="15.0" fill="rgb(222,47,24)" rx="2" ry="2" />
<text  x="682.27" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="102.9" y="1125" width="18.7" height="15.0" fill="rgb(254,196,25)" rx="2" ry="2" />
<text  x="105.95" y="1135.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="705.4" y="2005" width="1.4" height="15.0" fill="rgb(249,12,41)" rx="2" ry="2" />
<text  x="708.44" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="210.4" y="1973" width="0.2" height="15.0" fill="rgb(209,227,27)" rx="2" ry="2" />
<text  x="213.37" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="537.0" y="1877" width="0.2" height="15.0" fill="rgb(208,12,27)" rx="2" ry="2" />
<text  x="539.98" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (4 samples, 0.07%)</title><rect x="39.7" y="1989" width="0.8" height="15.0" fill="rgb(219,43,6)" rx="2" ry="2" />
<text  x="42.73" y="1999.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="896.1" y="1957" width="0.2" height="15.0" fill="rgb(252,120,11)" rx="2" ry="2" />
<text  x="899.09" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (5 samples, 0.08%)</title><rect x="1172.2" y="1989" width="1.0" height="15.0" fill="rgb(239,162,11)" rx="2" ry="2" />
<text  x="1175.16" y="1999.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="188.0" y="2021" width="0.2" height="15.0" fill="rgb(211,66,17)" rx="2" ry="2" />
<text  x="190.97" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="124.7" y="1589" width="0.4" height="15.0" fill="rgb(245,78,37)" rx="2" ry="2" />
<text  x="127.75" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="655.3" y="1957" width="0.2" height="15.0" fill="rgb(250,45,54)" rx="2" ry="2" />
<text  x="658.29" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="957.9" y="1909" width="0.2" height="15.0" fill="rgb(209,149,2)" rx="2" ry="2" />
<text  x="960.92" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="511.4" y="1973" width="0.8" height="15.0" fill="rgb(225,25,11)" rx="2" ry="2" />
<text  x="514.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (32 samples, 0.54%)</title><rect x="931.8" y="1925" width="6.3" height="15.0" fill="rgb(223,54,20)" rx="2" ry="2" />
<text  x="934.76" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="1189.0" y="2053" width="0.4" height="15.0" fill="rgb(218,156,4)" rx="2" ry="2" />
<text  x="1192.01" y="2063.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1030.7" y="2037" width="0.4" height="15.0" fill="rgb(225,10,6)" rx="2" ry="2" />
<text  x="1033.66" y="2047.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.3" y="1973" width="0.2" height="15.0" fill="rgb(243,197,24)" rx="2" ry="2" />
<text  x="984.31" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="173.5" y="1989" width="0.6" height="15.0" fill="rgb(251,218,26)" rx="2" ry="2" />
<text  x="176.50" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1181.7" y="2021" width="0.4" height="15.0" fill="rgb(235,63,4)" rx="2" ry="2" />
<text  x="1184.68" y="2031.5" ></text>
</g>
<g >
<title>_copy_to_iter (10 samples, 0.17%)</title><rect x="1105.2" y="1909" width="2.0" height="15.0" fill="rgb(239,162,35)" rx="2" ry="2" />
<text  x="1108.18" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="51.6" y="1877" width="0.2" height="15.0" fill="rgb(221,71,9)" rx="2" ry="2" />
<text  x="54.62" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="809.9" y="1669" width="0.4" height="15.0" fill="rgb(234,154,15)" rx="2" ry="2" />
<text  x="812.88" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1009.7" y="1941" width="0.1" height="15.0" fill="rgb(237,222,34)" rx="2" ry="2" />
<text  x="1012.65" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="333.6" y="1861" width="0.2" height="15.0" fill="rgb(243,209,40)" rx="2" ry="2" />
<text  x="336.64" y="1871.5" ></text>
</g>
<g >
<title>import_iovec (10 samples, 0.17%)</title><rect x="255.9" y="1925" width="2.0" height="15.0" fill="rgb(221,137,7)" rx="2" ry="2" />
<text  x="258.95" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="968.8" y="1861" width="0.4" height="15.0" fill="rgb(206,179,12)" rx="2" ry="2" />
<text  x="971.82" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="389" width="17.9" height="15.0" fill="rgb(245,4,45)" rx="2" ry="2" />
<text  x="106.35" y="399.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.6" y="1973" width="0.2" height="15.0" fill="rgb(228,164,51)" rx="2" ry="2" />
<text  x="911.58" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="281.1" y="1829" width="0.2" height="15.0" fill="rgb(230,22,50)" rx="2" ry="2" />
<text  x="284.12" y="1839.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (5 samples, 0.08%)</title><rect x="1121.4" y="1925" width="1.0" height="15.0" fill="rgb(228,192,16)" rx="2" ry="2" />
<text  x="1124.43" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="878.3" y="1909" width="0.3" height="15.0" fill="rgb(232,115,33)" rx="2" ry="2" />
<text  x="881.25" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (4 samples, 0.07%)</title><rect x="1143.8" y="2021" width="0.8" height="15.0" fill="rgb(241,144,31)" rx="2" ry="2" />
<text  x="1146.82" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="103.3" y="133" width="17.3" height="15.0" fill="rgb(226,6,8)" rx="2" ry="2" />
<text  x="106.35" y="143.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (8 samples, 0.13%)</title><rect x="571.9" y="1973" width="1.5" height="15.0" fill="rgb(250,59,43)" rx="2" ry="2" />
<text  x="574.86" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="157.5" y="1909" width="0.1" height="15.0" fill="rgb(241,25,7)" rx="2" ry="2" />
<text  x="160.45" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="622.6" y="1925" width="0.2" height="15.0" fill="rgb(241,167,33)" rx="2" ry="2" />
<text  x="625.59" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="998.6" y="1893" width="0.5" height="15.0" fill="rgb(207,216,43)" rx="2" ry="2" />
<text  x="1001.55" y="1903.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="333.0" y="1861" width="0.6" height="15.0" fill="rgb(230,171,30)" rx="2" ry="2" />
<text  x="336.04" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="163.2" y="1925" width="0.2" height="15.0" fill="rgb(209,167,30)" rx="2" ry="2" />
<text  x="166.20" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (4 samples, 0.07%)</title><rect x="684.4" y="2005" width="0.8" height="15.0" fill="rgb(219,186,7)" rx="2" ry="2" />
<text  x="687.43" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="491.0" y="1701" width="0.2" height="15.0" fill="rgb(249,103,10)" rx="2" ry="2" />
<text  x="494.00" y="1711.5" ></text>
</g>
<g >
<title>tcp_set_state (2 samples, 0.03%)</title><rect x="830.3" y="1733" width="0.4" height="15.0" fill="rgb(235,225,20)" rx="2" ry="2" />
<text  x="833.29" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="161.6" y="1797" width="0.2" height="15.0" fill="rgb(217,135,51)" rx="2" ry="2" />
<text  x="164.61" y="1807.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (5 samples, 0.08%)</title><rect x="576.4" y="2005" width="1.0" height="15.0" fill="rgb(235,135,14)" rx="2" ry="2" />
<text  x="579.42" y="2015.5" ></text>
</g>
<g >
<title>kfree (21 samples, 0.35%)</title><rect x="1114.3" y="1445" width="4.2" height="15.0" fill="rgb(239,201,40)" rx="2" ry="2" />
<text  x="1117.29" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="284.3" y="1781" width="0.2" height="15.0" fill="rgb(208,80,40)" rx="2" ry="2" />
<text  x="287.29" y="1791.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="297.0" y="1621" width="0.2" height="15.0" fill="rgb(243,47,34)" rx="2" ry="2" />
<text  x="299.97" y="1631.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="343.7" y="1669" width="0.2" height="15.0" fill="rgb(215,133,15)" rx="2" ry="2" />
<text  x="346.75" y="1679.5" ></text>
</g>
<g >
<title>[[vdso]] (5 samples, 0.08%)</title><rect x="208.8" y="2005" width="1.0" height="15.0" fill="rgb(221,19,15)" rx="2" ry="2" />
<text  x="211.78" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="849.5" y="1797" width="0.2" height="15.0" fill="rgb(219,194,48)" rx="2" ry="2" />
<text  x="852.52" y="1807.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="127.9" y="1909" width="0.2" height="15.0" fill="rgb(254,13,45)" rx="2" ry="2" />
<text  x="130.92" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="74.8" y="1941" width="0.6" height="15.0" fill="rgb(228,0,21)" rx="2" ry="2" />
<text  x="77.81" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="886.6" y="1957" width="0.2" height="15.0" fill="rgb(226,5,36)" rx="2" ry="2" />
<text  x="889.58" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="826.7" y="1669" width="0.4" height="15.0" fill="rgb(245,126,3)" rx="2" ry="2" />
<text  x="829.72" y="1679.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="891.7" y="1957" width="0.2" height="15.0" fill="rgb(234,59,52)" rx="2" ry="2" />
<text  x="894.73" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (31 samples, 0.52%)</title><rect x="480.1" y="2021" width="6.1" height="15.0" fill="rgb(206,80,49)" rx="2" ry="2" />
<text  x="483.10" y="2031.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="775.0" y="1669" width="0.2" height="15.0" fill="rgb(229,180,7)" rx="2" ry="2" />
<text  x="778.00" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="74.6" y="1669" width="0.2" height="15.0" fill="rgb(212,49,9)" rx="2" ry="2" />
<text  x="77.61" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1107.0" y="1877" width="0.2" height="15.0" fill="rgb(252,226,24)" rx="2" ry="2" />
<text  x="1109.96" y="1887.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="574.2" y="1893" width="0.2" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="577.24" y="1903.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="805.1" y="1557" width="0.2" height="15.0" fill="rgb(240,123,28)" rx="2" ry="2" />
<text  x="808.12" y="1567.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="949.0" y="1973" width="0.6" height="15.0" fill="rgb(208,42,45)" rx="2" ry="2" />
<text  x="952.01" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="146.0" y="1941" width="0.2" height="15.0" fill="rgb(207,212,18)" rx="2" ry="2" />
<text  x="148.96" y="1951.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (10 samples, 0.17%)</title><rect x="1122.4" y="1957" width="2.0" height="15.0" fill="rgb(216,83,21)" rx="2" ry="2" />
<text  x="1125.42" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="297.2" y="1557" width="0.6" height="15.0" fill="rgb(218,201,12)" rx="2" ry="2" />
<text  x="300.17" y="1567.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="714.4" y="1861" width="0.2" height="15.0" fill="rgb(222,214,9)" rx="2" ry="2" />
<text  x="717.35" y="1871.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="529.8" y="2005" width="0.4" height="15.0" fill="rgb(235,71,41)" rx="2" ry="2" />
<text  x="532.84" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (15 samples, 0.25%)</title><rect x="296.4" y="1685" width="3.0" height="15.0" fill="rgb(217,102,46)" rx="2" ry="2" />
<text  x="299.38" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_init_req (1 samples, 0.02%)</title><rect x="505.9" y="1717" width="0.2" height="15.0" fill="rgb(232,172,43)" rx="2" ry="2" />
<text  x="508.86" y="1727.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (45 samples, 0.76%)</title><rect x="1110.9" y="1749" width="8.9" height="15.0" fill="rgb(206,112,9)" rx="2" ry="2" />
<text  x="1113.92" y="1759.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="300.9" y="1701" width="0.4" height="15.0" fill="rgb(218,104,30)" rx="2" ry="2" />
<text  x="303.94" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="968.8" y="1893" width="0.4" height="15.0" fill="rgb(207,166,32)" rx="2" ry="2" />
<text  x="971.82" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="127.7" y="1813" width="0.2" height="15.0" fill="rgb(253,86,14)" rx="2" ry="2" />
<text  x="130.72" y="1823.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="989.6" y="1989" width="0.4" height="15.0" fill="rgb(241,144,42)" rx="2" ry="2" />
<text  x="992.63" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="968.8" y="1781" width="0.4" height="15.0" fill="rgb(239,80,24)" rx="2" ry="2" />
<text  x="971.82" y="1791.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="700.9" y="1925" width="1.2" height="15.0" fill="rgb(244,54,50)" rx="2" ry="2" />
<text  x="703.88" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="75.8" y="1957" width="0.4" height="15.0" fill="rgb(240,99,7)" rx="2" ry="2" />
<text  x="78.80" y="1967.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="85.3" y="1893" width="0.2" height="15.0" fill="rgb(209,228,49)" rx="2" ry="2" />
<text  x="88.31" y="1903.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="852.7" y="1893" width="0.2" height="15.0" fill="rgb(237,131,2)" rx="2" ry="2" />
<text  x="855.69" y="1903.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="897.7" y="1989" width="0.2" height="15.0" fill="rgb(225,146,2)" rx="2" ry="2" />
<text  x="900.68" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="118.2" y="69" width="0.2" height="15.0" fill="rgb(226,162,14)" rx="2" ry="2" />
<text  x="121.21" y="79.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (40 samples, 0.67%)</title><rect x="221.3" y="1925" width="7.9" height="15.0" fill="rgb(250,119,44)" rx="2" ry="2" />
<text  x="224.27" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (26 samples, 0.44%)</title><rect x="169.3" y="2021" width="5.2" height="15.0" fill="rgb(214,112,28)" rx="2" ry="2" />
<text  x="172.34" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="333.6" y="1653" width="0.2" height="15.0" fill="rgb(220,151,37)" rx="2" ry="2" />
<text  x="336.64" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="33.0" y="1877" width="0.2" height="15.0" fill="rgb(223,93,10)" rx="2" ry="2" />
<text  x="35.99" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (8 samples, 0.13%)</title><rect x="938.3" y="1941" width="1.6" height="15.0" fill="rgb(217,197,6)" rx="2" ry="2" />
<text  x="941.30" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.03%)</title><rect x="622.0" y="2021" width="0.4" height="15.0" fill="rgb(226,192,38)" rx="2" ry="2" />
<text  x="625.00" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="172.7" y="1909" width="0.2" height="15.0" fill="rgb(213,75,48)" rx="2" ry="2" />
<text  x="175.71" y="1919.5" ></text>
</g>
<g >
<title>sys_futex (13 samples, 0.22%)</title><rect x="11.4" y="2005" width="2.6" height="15.0" fill="rgb(234,186,41)" rx="2" ry="2" />
<text  x="14.39" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="984.3" y="1925" width="0.2" height="15.0" fill="rgb(215,51,6)" rx="2" ry="2" />
<text  x="987.28" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (13 samples, 0.22%)</title><rect x="893.7" y="1973" width="2.6" height="15.0" fill="rgb(232,66,49)" rx="2" ry="2" />
<text  x="896.71" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="280.7" y="1765" width="0.2" height="15.0" fill="rgb(222,108,10)" rx="2" ry="2" />
<text  x="283.72" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (3 samples, 0.05%)</title><rect x="165.6" y="2005" width="0.6" height="15.0" fill="rgb(229,152,17)" rx="2" ry="2" />
<text  x="168.58" y="2015.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="228.0" y="1813" width="0.4" height="15.0" fill="rgb(210,181,53)" rx="2" ry="2" />
<text  x="231.00" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="937.7" y="1909" width="0.2" height="15.0" fill="rgb(234,14,36)" rx="2" ry="2" />
<text  x="940.71" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (5 samples, 0.08%)</title><rect x="850.1" y="1941" width="1.0" height="15.0" fill="rgb(254,52,40)" rx="2" ry="2" />
<text  x="853.11" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="325.3" y="1605" width="0.2" height="15.0" fill="rgb(246,97,19)" rx="2" ry="2" />
<text  x="328.31" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (1 samples, 0.02%)</title><rect x="578.6" y="2021" width="0.2" height="15.0" fill="rgb(218,108,42)" rx="2" ry="2" />
<text  x="581.60" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="479.1" y="1845" width="0.2" height="15.0" fill="rgb(211,147,11)" rx="2" ry="2" />
<text  x="482.11" y="1855.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (15 samples, 0.25%)</title><rect x="813.2" y="1653" width="3.0" height="15.0" fill="rgb(208,9,49)" rx="2" ry="2" />
<text  x="816.25" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="889.7" y="1877" width="0.2" height="15.0" fill="rgb(235,137,15)" rx="2" ry="2" />
<text  x="892.75" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.07%)</title><rect x="102.2" y="1845" width="24.3" height="15.0" fill="rgb(250,75,18)" rx="2" ry="2" />
<text  x="105.16" y="1855.5" >[..</text>
</g>
<g >
<title>rb_erase_cached (10 samples, 0.17%)</title><rect x="472.0" y="1957" width="2.0" height="15.0" fill="rgb(226,40,52)" rx="2" ry="2" />
<text  x="474.97" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="454.3" y="1941" width="0.2" height="15.0" fill="rgb(240,220,30)" rx="2" ry="2" />
<text  x="457.33" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="331.3" y="1749" width="0.2" height="15.0" fill="rgb(207,172,35)" rx="2" ry="2" />
<text  x="334.26" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_free (8 samples, 0.13%)</title><rect x="1078.4" y="1893" width="1.6" height="15.0" fill="rgb(218,174,35)" rx="2" ry="2" />
<text  x="1081.42" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (114 samples, 1.91%)</title><rect x="142.4" y="1989" width="22.6" height="15.0" fill="rgb(215,23,0)" rx="2" ry="2" />
<text  x="145.39" y="1999.5" >s..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="156.5" y="1877" width="0.2" height="15.0" fill="rgb(222,143,17)" rx="2" ry="2" />
<text  x="159.46" y="1887.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="1007.3" y="1845" width="0.2" height="15.0" fill="rgb(230,154,44)" rx="2" ry="2" />
<text  x="1010.27" y="1855.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1189.4" y="2021" width="0.2" height="15.0" fill="rgb(207,49,47)" rx="2" ry="2" />
<text  x="1192.41" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="525.7" y="1941" width="0.6" height="15.0" fill="rgb(246,209,52)" rx="2" ry="2" />
<text  x="528.68" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="408.4" y="1861" width="0.2" height="15.0" fill="rgb(216,1,53)" rx="2" ry="2" />
<text  x="411.35" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1023.1" y="1973" width="0.2" height="15.0" fill="rgb(233,198,21)" rx="2" ry="2" />
<text  x="1026.13" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="903.0" y="1893" width="0.4" height="15.0" fill="rgb(246,212,48)" rx="2" ry="2" />
<text  x="906.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1169.4" y="2053" width="0.2" height="15.0" fill="rgb(217,3,40)" rx="2" ry="2" />
<text  x="1172.39" y="2063.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (26 samples, 0.44%)</title><rect x="325.5" y="1813" width="5.2" height="15.0" fill="rgb(205,19,48)" rx="2" ry="2" />
<text  x="328.51" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="620.4" y="1973" width="0.4" height="15.0" fill="rgb(219,60,25)" rx="2" ry="2" />
<text  x="623.41" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="46.3" y="1941" width="1.2" height="15.0" fill="rgb(248,196,17)" rx="2" ry="2" />
<text  x="49.27" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="714.4" y="1893" width="0.2" height="15.0" fill="rgb(234,183,16)" rx="2" ry="2" />
<text  x="717.35" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (962 samples, 16.16%)</title><rect x="710.0" y="2021" width="190.6" height="15.0" fill="rgb(236,18,33)" rx="2" ry="2" />
<text  x="712.99" y="2031.5" >[unknown]</text>
</g>
<g >
<title>tcp_event_new_data_sent (25 samples, 0.42%)</title><rect x="811.3" y="1685" width="4.9" height="15.0" fill="rgb(220,89,8)" rx="2" ry="2" />
<text  x="814.27" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="622.2" y="1941" width="0.2" height="15.0" fill="rgb(222,111,29)" rx="2" ry="2" />
<text  x="625.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="907.0" y="1973" width="0.2" height="15.0" fill="rgb(242,3,15)" rx="2" ry="2" />
<text  x="909.99" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="51.6" y="1845" width="0.2" height="15.0" fill="rgb(245,82,2)" rx="2" ry="2" />
<text  x="54.62" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="635.7" y="2005" width="0.2" height="15.0" fill="rgb(229,27,19)" rx="2" ry="2" />
<text  x="638.67" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="259.7" y="1637" width="0.2" height="15.0" fill="rgb(221,109,31)" rx="2" ry="2" />
<text  x="262.71" y="1647.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="294.4" y="1477" width="0.2" height="15.0" fill="rgb(243,29,52)" rx="2" ry="2" />
<text  x="297.40" y="1487.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="91.3" y="1861" width="0.2" height="15.0" fill="rgb(221,144,6)" rx="2" ry="2" />
<text  x="94.26" y="1871.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="730.4" y="1861" width="0.8" height="15.0" fill="rgb(236,18,10)" rx="2" ry="2" />
<text  x="733.41" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (8 samples, 0.13%)</title><rect x="68.1" y="1925" width="1.6" height="15.0" fill="rgb(237,52,30)" rx="2" ry="2" />
<text  x="71.07" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="849.5" y="1765" width="0.2" height="15.0" fill="rgb(252,76,33)" rx="2" ry="2" />
<text  x="852.52" y="1775.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="323.1" y="1541" width="0.2" height="15.0" fill="rgb(242,204,2)" rx="2" ry="2" />
<text  x="326.13" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="968.8" y="1957" width="0.4" height="15.0" fill="rgb(222,49,44)" rx="2" ry="2" />
<text  x="971.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="174.3" y="1861" width="0.2" height="15.0" fill="rgb(209,139,13)" rx="2" ry="2" />
<text  x="177.30" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="658.5" y="1941" width="0.2" height="15.0" fill="rgb(229,41,29)" rx="2" ry="2" />
<text  x="661.46" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1078.2" y="1925" width="0.2" height="15.0" fill="rgb(246,85,47)" rx="2" ry="2" />
<text  x="1081.22" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="849.5" y="1701" width="0.2" height="15.0" fill="rgb(209,36,48)" rx="2" ry="2" />
<text  x="852.52" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="471.6" y="1925" width="0.2" height="15.0" fill="rgb(208,19,49)" rx="2" ry="2" />
<text  x="474.58" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.25%)</title><rect x="14.4" y="2037" width="2.9" height="15.0" fill="rgb(207,177,35)" rx="2" ry="2" />
<text  x="17.36" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="174.9" y="1957" width="0.8" height="15.0" fill="rgb(247,225,39)" rx="2" ry="2" />
<text  x="177.89" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="210.4" y="1861" width="0.2" height="15.0" fill="rgb(211,82,29)" rx="2" ry="2" />
<text  x="213.37" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="765.7" y="1669" width="0.2" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="768.68" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.13%)</title><rect x="344.5" y="2021" width="1.6" height="15.0" fill="rgb(220,160,5)" rx="2" ry="2" />
<text  x="347.54" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.15%)</title><rect x="594.6" y="1845" width="1.8" height="15.0" fill="rgb(239,90,35)" rx="2" ry="2" />
<text  x="597.65" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="325.3" y="1717" width="0.2" height="15.0" fill="rgb(210,25,24)" rx="2" ry="2" />
<text  x="328.31" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="102.6" y="1445" width="21.2" height="15.0" fill="rgb(222,162,35)" rx="2" ry="2" />
<text  x="105.55" y="1455.5" ></text>
</g>
<g >
<title>event_assign (4 samples, 0.07%)</title><rect x="965.9" y="2005" width="0.7" height="15.0" fill="rgb(243,133,39)" rx="2" ry="2" />
<text  x="968.85" y="2015.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="383.0" y="1685" width="0.2" height="15.0" fill="rgb(246,46,48)" rx="2" ry="2" />
<text  x="385.99" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="520.3" y="1973" width="0.2" height="15.0" fill="rgb(221,62,36)" rx="2" ry="2" />
<text  x="523.33" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="74.6" y="1637" width="0.2" height="15.0" fill="rgb(233,207,53)" rx="2" ry="2" />
<text  x="77.61" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="174.3" y="1909" width="0.2" height="15.0" fill="rgb(207,135,22)" rx="2" ry="2" />
<text  x="177.30" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="847.7" y="1877" width="0.4" height="15.0" fill="rgb(213,176,4)" rx="2" ry="2" />
<text  x="850.73" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (15 samples, 0.25%)</title><rect x="1146.0" y="2021" width="3.0" height="15.0" fill="rgb(253,5,20)" rx="2" ry="2" />
<text  x="1149.00" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.4" y="85" width="0.2" height="15.0" fill="rgb(251,53,35)" rx="2" ry="2" />
<text  x="123.39" y="95.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (3 samples, 0.05%)</title><rect x="11.4" y="1829" width="0.6" height="15.0" fill="rgb(237,38,27)" rx="2" ry="2" />
<text  x="14.39" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="649.9" y="1973" width="1.0" height="15.0" fill="rgb(253,182,38)" rx="2" ry="2" />
<text  x="652.94" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1163.6" y="1749" width="0.2" height="15.0" fill="rgb(254,68,15)" rx="2" ry="2" />
<text  x="1166.64" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (1 samples, 0.02%)</title><rect x="653.1" y="1989" width="0.2" height="15.0" fill="rgb(208,60,2)" rx="2" ry="2" />
<text  x="656.11" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="668.2" y="1909" width="1.0" height="15.0" fill="rgb(216,217,40)" rx="2" ry="2" />
<text  x="671.18" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="128.7" y="1941" width="0.2" height="15.0" fill="rgb(254,159,45)" rx="2" ry="2" />
<text  x="131.71" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="339.2" y="1685" width="0.2" height="15.0" fill="rgb(225,41,23)" rx="2" ry="2" />
<text  x="342.19" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="898.9" y="1797" width="0.2" height="15.0" fill="rgb(239,226,28)" rx="2" ry="2" />
<text  x="901.86" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="171.3" y="1941" width="0.2" height="15.0" fill="rgb(247,124,44)" rx="2" ry="2" />
<text  x="174.32" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.9" y="1877" width="0.2" height="15.0" fill="rgb(242,115,35)" rx="2" ry="2" />
<text  x="564.95" y="1887.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="299.0" y="1333" width="0.2" height="15.0" fill="rgb(209,60,32)" rx="2" ry="2" />
<text  x="301.96" y="1343.5" ></text>
</g>
<g >
<title>__libc_recv (11 samples, 0.18%)</title><rect x="963.7" y="1973" width="2.2" height="15.0" fill="rgb(228,89,48)" rx="2" ry="2" />
<text  x="966.67" y="1983.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="406.2" y="1877" width="0.2" height="15.0" fill="rgb(208,208,19)" rx="2" ry="2" />
<text  x="409.17" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="133.5" y="1941" width="0.2" height="15.0" fill="rgb(241,165,9)" rx="2" ry="2" />
<text  x="136.47" y="1951.5" ></text>
</g>
<g >
<title>ksize (5 samples, 0.08%)</title><rect x="283.5" y="1845" width="1.0" height="15.0" fill="rgb(207,217,46)" rx="2" ry="2" />
<text  x="286.50" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="366.3" y="1941" width="0.2" height="15.0" fill="rgb(206,131,18)" rx="2" ry="2" />
<text  x="369.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="505.9" y="1733" width="0.2" height="15.0" fill="rgb(223,105,25)" rx="2" ry="2" />
<text  x="508.86" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="131.7" y="1973" width="0.2" height="15.0" fill="rgb(245,31,19)" rx="2" ry="2" />
<text  x="134.69" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.6" y="101" width="0.2" height="15.0" fill="rgb(240,91,44)" rx="2" ry="2" />
<text  x="123.59" y="111.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="539.8" y="1877" width="0.1" height="15.0" fill="rgb(234,20,1)" rx="2" ry="2" />
<text  x="542.75" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="635.1" y="2005" width="0.6" height="15.0" fill="rgb(223,130,53)" rx="2" ry="2" />
<text  x="638.08" y="2015.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.6" y="2021" width="0.2" height="15.0" fill="rgb(205,176,2)" rx="2" ry="2" />
<text  x="101.59" y="2031.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (47 samples, 0.79%)</title><rect x="275.4" y="1877" width="9.3" height="15.0" fill="rgb(244,151,18)" rx="2" ry="2" />
<text  x="278.37" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="33.2" y="1989" width="0.2" height="15.0" fill="rgb(225,148,9)" rx="2" ry="2" />
<text  x="36.19" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="919.3" y="2037" width="0.2" height="15.0" fill="rgb(242,137,44)" rx="2" ry="2" />
<text  x="922.28" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="518.9" y="1957" width="0.2" height="15.0" fill="rgb(250,221,50)" rx="2" ry="2" />
<text  x="521.94" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1146.2" y="1941" width="0.2" height="15.0" fill="rgb(219,87,1)" rx="2" ry="2" />
<text  x="1149.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="174.3" y="1781" width="0.2" height="15.0" fill="rgb(238,190,36)" rx="2" ry="2" />
<text  x="177.30" y="1791.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="804.7" y="1509" width="0.2" height="15.0" fill="rgb(253,190,0)" rx="2" ry="2" />
<text  x="807.73" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="343.7" y="1781" width="0.4" height="15.0" fill="rgb(206,109,12)" rx="2" ry="2" />
<text  x="346.75" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="274.8" y="1653" width="0.4" height="15.0" fill="rgb(214,92,5)" rx="2" ry="2" />
<text  x="277.78" y="1663.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="698.1" y="1877" width="0.8" height="15.0" fill="rgb(214,39,46)" rx="2" ry="2" />
<text  x="701.10" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="164.2" y="1941" width="0.2" height="15.0" fill="rgb(214,167,3)" rx="2" ry="2" />
<text  x="167.19" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="210.4" y="1797" width="0.2" height="15.0" fill="rgb(241,229,39)" rx="2" ry="2" />
<text  x="213.37" y="1807.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="274.8" y="1573" width="0.2" height="15.0" fill="rgb(224,23,10)" rx="2" ry="2" />
<text  x="277.78" y="1583.5" ></text>
</g>
<g >
<title>ip_local_out (126 samples, 2.12%)</title><rect x="291.6" y="1797" width="25.0" height="15.0" fill="rgb(253,147,0)" rx="2" ry="2" />
<text  x="294.62" y="1807.5" >i..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="323.1" y="1557" width="0.2" height="15.0" fill="rgb(206,53,22)" rx="2" ry="2" />
<text  x="326.13" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="669.6" y="1909" width="0.2" height="15.0" fill="rgb(245,177,1)" rx="2" ry="2" />
<text  x="672.56" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="262.9" y="1877" width="0.4" height="15.0" fill="rgb(216,35,30)" rx="2" ry="2" />
<text  x="265.89" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="891.7" y="1989" width="0.2" height="15.0" fill="rgb(254,112,21)" rx="2" ry="2" />
<text  x="894.73" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.7" y="1685" width="0.2" height="15.0" fill="rgb(231,111,18)" rx="2" ry="2" />
<text  x="128.74" y="1695.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4 samples, 0.07%)</title><rect x="1124.4" y="1957" width="0.8" height="15.0" fill="rgb(218,64,3)" rx="2" ry="2" />
<text  x="1127.40" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (2 samples, 0.03%)</title><rect x="145.6" y="1909" width="0.4" height="15.0" fill="rgb(233,164,21)" rx="2" ry="2" />
<text  x="148.56" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="51.6" y="1749" width="0.2" height="15.0" fill="rgb(207,62,20)" rx="2" ry="2" />
<text  x="54.62" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (3 samples, 0.05%)</title><rect x="145.4" y="1941" width="0.6" height="15.0" fill="rgb(209,31,54)" rx="2" ry="2" />
<text  x="148.36" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="563.3" y="1941" width="0.2" height="15.0" fill="rgb(220,108,25)" rx="2" ry="2" />
<text  x="566.34" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1096.3" y="1845" width="0.2" height="15.0" fill="rgb(220,226,52)" rx="2" ry="2" />
<text  x="1099.26" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="154.1" y="1749" width="0.2" height="15.0" fill="rgb(206,145,45)" rx="2" ry="2" />
<text  x="157.08" y="1759.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="567.3" y="1909" width="0.2" height="15.0" fill="rgb(236,130,0)" rx="2" ry="2" />
<text  x="570.30" y="1919.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1107.4" y="1909" width="0.2" height="15.0" fill="rgb(213,91,23)" rx="2" ry="2" />
<text  x="1110.36" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="872.9" y="1733" width="0.2" height="15.0" fill="rgb(220,227,36)" rx="2" ry="2" />
<text  x="875.90" y="1743.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="130.7" y="1989" width="0.2" height="15.0" fill="rgb(247,70,39)" rx="2" ry="2" />
<text  x="133.70" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1146.4" y="1957" width="0.2" height="15.0" fill="rgb(220,209,46)" rx="2" ry="2" />
<text  x="1149.40" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="174.3" y="1845" width="0.2" height="15.0" fill="rgb(247,82,27)" rx="2" ry="2" />
<text  x="177.30" y="1855.5" ></text>
</g>
<g >
<title>accept4 (346 samples, 5.81%)</title><rect x="351.3" y="2037" width="68.5" height="15.0" fill="rgb(228,105,51)" rx="2" ry="2" />
<text  x="354.28" y="2047.5" >accept4</text>
</g>
<g >
<title>inet_recvmsg (283 samples, 4.75%)</title><rect x="1066.3" y="1957" width="56.1" height="15.0" fill="rgb(251,150,41)" rx="2" ry="2" />
<text  x="1069.33" y="1967.5" >inet_..</text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="440.9" y="1989" width="0.2" height="15.0" fill="rgb(211,22,54)" rx="2" ry="2" />
<text  x="443.86" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="165.4" y="1989" width="0.2" height="15.0" fill="rgb(238,160,13)" rx="2" ry="2" />
<text  x="168.38" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="203.2" y="1973" width="0.2" height="15.0" fill="rgb(221,226,31)" rx="2" ry="2" />
<text  x="206.23" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1096.3" y="1669" width="0.2" height="15.0" fill="rgb(217,124,51)" rx="2" ry="2" />
<text  x="1099.26" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8 samples, 0.13%)</title><rect x="1008.3" y="1973" width="1.5" height="15.0" fill="rgb(246,169,16)" rx="2" ry="2" />
<text  x="1011.26" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="584.3" y="1909" width="1.0" height="15.0" fill="rgb(228,54,5)" rx="2" ry="2" />
<text  x="587.34" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="127.7" y="1829" width="0.2" height="15.0" fill="rgb(240,110,36)" rx="2" ry="2" />
<text  x="130.72" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="203.2" y="1957" width="0.2" height="15.0" fill="rgb(233,93,19)" rx="2" ry="2" />
<text  x="206.23" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="776.2" y="1653" width="0.2" height="15.0" fill="rgb(238,174,20)" rx="2" ry="2" />
<text  x="779.19" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.61%)</title><rect x="102.9" y="1157" width="19.1" height="15.0" fill="rgb(213,221,45)" rx="2" ry="2" />
<text  x="105.95" y="1167.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="535.6" y="1909" width="0.6" height="15.0" fill="rgb(230,84,43)" rx="2" ry="2" />
<text  x="538.59" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="939.7" y="1909" width="0.2" height="15.0" fill="rgb(249,117,51)" rx="2" ry="2" />
<text  x="942.69" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="1145.0" y="2053" width="0.2" height="15.0" fill="rgb(230,91,7)" rx="2" ry="2" />
<text  x="1148.01" y="2063.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="704.8" y="2005" width="0.4" height="15.0" fill="rgb(210,66,22)" rx="2" ry="2" />
<text  x="707.84" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="230.2" y="1877" width="0.2" height="15.0" fill="rgb(246,87,14)" rx="2" ry="2" />
<text  x="233.18" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="256.5" y="1653" width="0.2" height="15.0" fill="rgb(214,75,17)" rx="2" ry="2" />
<text  x="259.54" y="1663.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.05%)</title><rect x="399.6" y="1861" width="0.6" height="15.0" fill="rgb(232,107,3)" rx="2" ry="2" />
<text  x="402.63" y="1871.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (2 samples, 0.03%)</title><rect x="549.5" y="1941" width="0.4" height="15.0" fill="rgb(221,181,12)" rx="2" ry="2" />
<text  x="552.46" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (122 samples, 2.05%)</title><rect x="40.5" y="1989" width="24.2" height="15.0" fill="rgb(247,162,10)" rx="2" ry="2" />
<text  x="43.52" y="1999.5" >f..</text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="686.4" y="2021" width="0.2" height="15.0" fill="rgb(245,46,6)" rx="2" ry="2" />
<text  x="689.41" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="343.3" y="1941" width="0.8" height="15.0" fill="rgb(220,132,31)" rx="2" ry="2" />
<text  x="346.35" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="69.3" y="1813" width="0.2" height="15.0" fill="rgb(240,86,51)" rx="2" ry="2" />
<text  x="72.26" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="984.3" y="1781" width="0.2" height="15.0" fill="rgb(243,218,12)" rx="2" ry="2" />
<text  x="987.28" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="330.5" y="1621" width="0.2" height="15.0" fill="rgb(227,24,6)" rx="2" ry="2" />
<text  x="333.47" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="984.1" y="2005" width="0.2" height="15.0" fill="rgb(244,171,53)" rx="2" ry="2" />
<text  x="987.08" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (20 samples, 0.34%)</title><rect x="1145.4" y="2053" width="4.0" height="15.0" fill="rgb(237,74,47)" rx="2" ry="2" />
<text  x="1148.41" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="236.9" y="2021" width="3.2" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="239.92" y="2031.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="52.8" y="1941" width="0.4" height="15.0" fill="rgb(236,110,15)" rx="2" ry="2" />
<text  x="55.81" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="643.2" y="1925" width="0.6" height="15.0" fill="rgb(207,162,48)" rx="2" ry="2" />
<text  x="646.20" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (32 samples, 0.54%)</title><rect x="640.6" y="1973" width="6.4" height="15.0" fill="rgb(215,177,32)" rx="2" ry="2" />
<text  x="643.63" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="341.6" y="1845" width="0.6" height="15.0" fill="rgb(250,136,12)" rx="2" ry="2" />
<text  x="344.57" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="33.0" y="1541" width="0.2" height="15.0" fill="rgb(215,205,13)" rx="2" ry="2" />
<text  x="35.99" y="1551.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="804.5" y="1509" width="0.2" height="15.0" fill="rgb(210,124,4)" rx="2" ry="2" />
<text  x="807.53" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="596.2" y="1797" width="0.2" height="15.0" fill="rgb(221,166,28)" rx="2" ry="2" />
<text  x="599.23" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="210.4" y="1925" width="0.2" height="15.0" fill="rgb(244,87,49)" rx="2" ry="2" />
<text  x="213.37" y="1935.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="848.9" y="1893" width="0.6" height="15.0" fill="rgb(248,109,36)" rx="2" ry="2" />
<text  x="851.92" y="1903.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1084.0" y="1877" width="0.2" height="15.0" fill="rgb(227,169,54)" rx="2" ry="2" />
<text  x="1086.97" y="1887.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="57.4" y="1893" width="0.2" height="15.0" fill="rgb(218,119,5)" rx="2" ry="2" />
<text  x="60.37" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="33.0" y="1797" width="0.2" height="15.0" fill="rgb(251,173,28)" rx="2" ry="2" />
<text  x="35.99" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="717.7" y="1877" width="0.2" height="15.0" fill="rgb(253,179,10)" rx="2" ry="2" />
<text  x="720.72" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (6 samples, 0.10%)</title><rect x="107.3" y="37" width="1.2" height="15.0" fill="rgb(243,17,3)" rx="2" ry="2" />
<text  x="110.31" y="47.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="561.9" y="1765" width="0.2" height="15.0" fill="rgb(231,68,10)" rx="2" ry="2" />
<text  x="564.95" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="84.3" y="1909" width="0.2" height="15.0" fill="rgb(248,99,18)" rx="2" ry="2" />
<text  x="87.32" y="1919.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(235,62,8)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="969.0" y="1621" width="0.2" height="15.0" fill="rgb(243,60,23)" rx="2" ry="2" />
<text  x="972.02" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="341.8" y="1717" width="0.4" height="15.0" fill="rgb(222,117,22)" rx="2" ry="2" />
<text  x="344.76" y="1727.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (328 samples, 5.51%)</title><rect x="1063.8" y="1989" width="65.0" height="15.0" fill="rgb(232,9,37)" rx="2" ry="2" />
<text  x="1066.76" y="1999.5" >SYSC_re..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="872.9" y="1845" width="0.2" height="15.0" fill="rgb(235,150,38)" rx="2" ry="2" />
<text  x="875.90" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (4 samples, 0.07%)</title><rect x="1167.8" y="2053" width="0.8" height="15.0" fill="rgb(208,83,10)" rx="2" ry="2" />
<text  x="1170.80" y="2063.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="330.7" y="1829" width="0.2" height="15.0" fill="rgb(209,32,23)" rx="2" ry="2" />
<text  x="333.67" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="327.5" y="1749" width="0.6" height="15.0" fill="rgb(205,101,40)" rx="2" ry="2" />
<text  x="330.49" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="625.0" y="2005" width="2.9" height="15.0" fill="rgb(243,196,8)" rx="2" ry="2" />
<text  x="627.97" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="981.1" y="1989" width="0.6" height="15.0" fill="rgb(239,61,35)" rx="2" ry="2" />
<text  x="984.11" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="537.0" y="1829" width="0.2" height="15.0" fill="rgb(249,67,17)" rx="2" ry="2" />
<text  x="539.98" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="354.2" y="2021" width="0.2" height="15.0" fill="rgb(240,113,33)" rx="2" ry="2" />
<text  x="357.25" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="479.1" y="1829" width="0.2" height="15.0" fill="rgb(221,96,54)" rx="2" ry="2" />
<text  x="482.11" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.76%)</title><rect x="102.6" y="1381" width="20.8" height="15.0" fill="rgb(217,36,32)" rx="2" ry="2" />
<text  x="105.55" y="1391.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (91 samples, 1.53%)</title><rect x="986.9" y="2005" width="18.0" height="15.0" fill="rgb(226,227,4)" rx="2" ry="2" />
<text  x="989.86" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="119.8" y="69" width="0.2" height="15.0" fill="rgb(234,82,30)" rx="2" ry="2" />
<text  x="122.80" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="339.0" y="1957" width="0.4" height="15.0" fill="rgb(240,205,21)" rx="2" ry="2" />
<text  x="341.99" y="1967.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="415.1" y="1941" width="0.8" height="15.0" fill="rgb(228,17,32)" rx="2" ry="2" />
<text  x="418.09" y="1951.5" ></text>
</g>
<g >
<title>tcp_try_fastopen (1 samples, 0.02%)</title><rect x="1096.3" y="1573" width="0.2" height="15.0" fill="rgb(217,169,42)" rx="2" ry="2" />
<text  x="1099.26" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1149.2" y="1973" width="0.2" height="15.0" fill="rgb(239,124,3)" rx="2" ry="2" />
<text  x="1152.17" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.13%)</title><rect x="594.6" y="1797" width="1.6" height="15.0" fill="rgb(217,116,32)" rx="2" ry="2" />
<text  x="597.65" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="537.0" y="1749" width="0.2" height="15.0" fill="rgb(210,187,6)" rx="2" ry="2" />
<text  x="539.98" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="146.7" y="1925" width="0.2" height="15.0" fill="rgb(210,194,54)" rx="2" ry="2" />
<text  x="149.75" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="144.0" y="1893" width="0.2" height="15.0" fill="rgb(250,226,6)" rx="2" ry="2" />
<text  x="146.97" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (51 samples, 0.86%)</title><rect x="1109.9" y="1893" width="10.1" height="15.0" fill="rgb(223,60,29)" rx="2" ry="2" />
<text  x="1112.93" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="479.1" y="1877" width="0.2" height="15.0" fill="rgb(227,130,22)" rx="2" ry="2" />
<text  x="482.11" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1175.5" y="1781" width="0.2" height="15.0" fill="rgb(235,173,25)" rx="2" ry="2" />
<text  x="1178.53" y="1791.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="453.7" y="1925" width="0.2" height="15.0" fill="rgb(246,64,44)" rx="2" ry="2" />
<text  x="456.74" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="70.2" y="1845" width="0.8" height="15.0" fill="rgb(207,54,14)" rx="2" ry="2" />
<text  x="73.25" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="535.4" y="1925" width="0.2" height="15.0" fill="rgb(216,220,0)" rx="2" ry="2" />
<text  x="538.39" y="1935.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="129.1" y="1973" width="0.2" height="15.0" fill="rgb(205,57,38)" rx="2" ry="2" />
<text  x="132.11" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="172.3" y="1957" width="0.2" height="15.0" fill="rgb(246,74,42)" rx="2" ry="2" />
<text  x="175.31" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (4 samples, 0.07%)</title><rect x="977.9" y="2037" width="0.8" height="15.0" fill="rgb(254,137,48)" rx="2" ry="2" />
<text  x="980.94" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1861" width="0.2" height="15.0" fill="rgb(228,76,49)" rx="2" ry="2" />
<text  x="149.95" y="1871.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (1 samples, 0.02%)</title><rect x="1019.0" y="1989" width="0.2" height="15.0" fill="rgb(236,148,45)" rx="2" ry="2" />
<text  x="1021.97" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (8 samples, 0.13%)</title><rect x="1169.6" y="2053" width="1.6" height="15.0" fill="rgb(226,142,3)" rx="2" ry="2" />
<text  x="1172.59" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (10 samples, 0.17%)</title><rect x="574.4" y="2005" width="2.0" height="15.0" fill="rgb(232,58,10)" rx="2" ry="2" />
<text  x="577.43" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="658.7" y="2037" width="0.2" height="15.0" fill="rgb(242,1,23)" rx="2" ry="2" />
<text  x="661.66" y="2047.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="714.7" y="1845" width="0.2" height="15.0" fill="rgb(227,215,50)" rx="2" ry="2" />
<text  x="717.75" y="1855.5" ></text>
</g>
<g >
<title>__snprintf (4 samples, 0.07%)</title><rect x="349.1" y="2037" width="0.8" height="15.0" fill="rgb(235,139,4)" rx="2" ry="2" />
<text  x="352.10" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="477.9" y="1925" width="0.4" height="15.0" fill="rgb(243,13,33)" rx="2" ry="2" />
<text  x="480.92" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (31 samples, 0.52%)</title><rect x="536.2" y="2005" width="6.1" height="15.0" fill="rgb(240,85,49)" rx="2" ry="2" />
<text  x="539.18" y="2015.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (22 samples, 0.37%)</title><rect x="457.3" y="1925" width="4.4" height="15.0" fill="rgb(218,178,28)" rx="2" ry="2" />
<text  x="460.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (5 samples, 0.08%)</title><rect x="38.5" y="1989" width="1.0" height="15.0" fill="rgb(227,213,10)" rx="2" ry="2" />
<text  x="41.54" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (8 samples, 0.13%)</title><rect x="863.0" y="1989" width="1.6" height="15.0" fill="rgb(215,106,3)" rx="2" ry="2" />
<text  x="865.99" y="1999.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(252,119,21)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (15 samples, 0.25%)</title><rect x="813.2" y="1669" width="3.0" height="15.0" fill="rgb(236,36,23)" rx="2" ry="2" />
<text  x="816.25" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.24%)</title><rect x="615.7" y="1861" width="2.7" height="15.0" fill="rgb(232,226,53)" rx="2" ry="2" />
<text  x="618.66" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="684.0" y="1909" width="0.2" height="15.0" fill="rgb(248,157,25)" rx="2" ry="2" />
<text  x="687.03" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="181.6" y="1957" width="0.6" height="15.0" fill="rgb(237,21,19)" rx="2" ry="2" />
<text  x="184.63" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="845.9" y="1893" width="0.2" height="15.0" fill="rgb(244,227,48)" rx="2" ry="2" />
<text  x="848.95" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="119.8" y="37" width="0.2" height="15.0" fill="rgb(218,169,9)" rx="2" ry="2" />
<text  x="122.80" y="47.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (167 samples, 2.80%)</title><rect x="289.4" y="1829" width="33.1" height="15.0" fill="rgb(213,88,47)" rx="2" ry="2" />
<text  x="292.44" y="1839.5" >__..</text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="313.2" y="1653" width="0.4" height="15.0" fill="rgb(229,211,20)" rx="2" ry="2" />
<text  x="316.22" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="320.8" y="1733" width="0.4" height="15.0" fill="rgb(241,25,10)" rx="2" ry="2" />
<text  x="323.76" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="98.8" y="2021" width="2.0" height="15.0" fill="rgb(243,185,1)" rx="2" ry="2" />
<text  x="101.79" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="532.0" y="1893" width="0.2" height="15.0" fill="rgb(253,58,1)" rx="2" ry="2" />
<text  x="535.02" y="1903.5" ></text>
</g>
<g >
<title>SYSC_getpeername (1 samples, 0.02%)</title><rect x="714.7" y="1829" width="0.2" height="15.0" fill="rgb(228,142,54)" rx="2" ry="2" />
<text  x="717.75" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.83%)</title><rect x="102.6" y="1493" width="21.6" height="15.0" fill="rgb(245,82,48)" rx="2" ry="2" />
<text  x="105.55" y="1503.5" >[..</text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="314.8" y="1653" width="0.4" height="15.0" fill="rgb(221,197,33)" rx="2" ry="2" />
<text  x="317.81" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="127.3" y="1893" width="0.2" height="15.0" fill="rgb(209,147,54)" rx="2" ry="2" />
<text  x="130.33" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (83 samples, 1.39%)</title><rect x="507.2" y="2005" width="16.5" height="15.0" fill="rgb(207,93,8)" rx="2" ry="2" />
<text  x="510.25" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (1 samples, 0.02%)</title><rect x="921.3" y="2005" width="0.2" height="15.0" fill="rgb(221,98,23)" rx="2" ry="2" />
<text  x="924.26" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="210.4" y="1829" width="0.2" height="15.0" fill="rgb(242,27,33)" rx="2" ry="2" />
<text  x="213.37" y="1839.5" ></text>
</g>
<g >
<title>sys_gettid (3 samples, 0.05%)</title><rect x="1162.5" y="1925" width="0.5" height="15.0" fill="rgb(244,79,37)" rx="2" ry="2" />
<text  x="1165.45" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="622.6" y="1973" width="0.2" height="15.0" fill="rgb(227,3,50)" rx="2" ry="2" />
<text  x="625.59" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="563.3" y="1925" width="0.2" height="15.0" fill="rgb(226,195,19)" rx="2" ry="2" />
<text  x="566.34" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (1 samples, 0.02%)</title><rect x="86.1" y="1973" width="0.2" height="15.0" fill="rgb(243,96,25)" rx="2" ry="2" />
<text  x="89.10" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="322.5" y="1669" width="0.2" height="15.0" fill="rgb(223,108,49)" rx="2" ry="2" />
<text  x="325.54" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="903.6" y="1989" width="0.2" height="15.0" fill="rgb(220,3,17)" rx="2" ry="2" />
<text  x="906.62" y="1999.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="630.7" y="1941" width="0.2" height="15.0" fill="rgb(241,54,35)" rx="2" ry="2" />
<text  x="633.72" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (5 samples, 0.08%)</title><rect x="575.0" y="1973" width="1.0" height="15.0" fill="rgb(216,183,45)" rx="2" ry="2" />
<text  x="578.03" y="1983.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (184 samples, 3.09%)</title><rect x="442.0" y="1989" width="36.5" height="15.0" fill="rgb(224,164,10)" rx="2" ry="2" />
<text  x="445.05" y="1999.5" >sys..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="896.3" y="1973" width="0.2" height="15.0" fill="rgb(232,192,46)" rx="2" ry="2" />
<text  x="899.29" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="886.8" y="1941" width="0.2" height="15.0" fill="rgb(205,203,52)" rx="2" ry="2" />
<text  x="889.78" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (127 samples, 2.13%)</title><rect x="102.2" y="1861" width="25.1" height="15.0" fill="rgb(239,194,36)" rx="2" ry="2" />
<text  x="105.16" y="1871.5" >[..</text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (3 samples, 0.05%)</title><rect x="568.7" y="1989" width="0.6" height="15.0" fill="rgb(226,169,7)" rx="2" ry="2" />
<text  x="571.69" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="933.7" y="1877" width="0.4" height="15.0" fill="rgb(243,103,38)" rx="2" ry="2" />
<text  x="936.75" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (19 samples, 0.32%)</title><rect x="1007.5" y="1989" width="3.7" height="15.0" fill="rgb(213,211,36)" rx="2" ry="2" />
<text  x="1010.47" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="252.8" y="1941" width="0.4" height="15.0" fill="rgb(222,98,52)" rx="2" ry="2" />
<text  x="255.78" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (7 samples, 0.12%)</title><rect x="1008.5" y="1957" width="1.3" height="15.0" fill="rgb(218,97,8)" rx="2" ry="2" />
<text  x="1011.46" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="229.6" y="1909" width="1.0" height="15.0" fill="rgb(234,72,21)" rx="2" ry="2" />
<text  x="232.59" y="1919.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1066.9" y="1941" width="0.2" height="15.0" fill="rgb(240,173,15)" rx="2" ry="2" />
<text  x="1069.93" y="1951.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (53 samples, 0.89%)</title><rect x="1013.0" y="2037" width="10.5" height="15.0" fill="rgb(212,222,47)" rx="2" ry="2" />
<text  x="1016.02" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (3 samples, 0.05%)</title><rect x="658.1" y="2021" width="0.6" height="15.0" fill="rgb(232,140,37)" rx="2" ry="2" />
<text  x="661.07" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="712.0" y="1973" width="0.2" height="15.0" fill="rgb(248,181,33)" rx="2" ry="2" />
<text  x="714.98" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="229.8" y="1893" width="0.4" height="15.0" fill="rgb(235,94,41)" rx="2" ry="2" />
<text  x="232.79" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (100 samples, 1.68%)</title><rect x="102.8" y="1253" width="19.8" height="15.0" fill="rgb(208,164,9)" rx="2" ry="2" />
<text  x="105.75" y="1263.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="538.4" y="1957" width="0.4" height="15.0" fill="rgb(226,59,29)" rx="2" ry="2" />
<text  x="541.36" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="382.8" y="1893" width="0.4" height="15.0" fill="rgb(250,180,33)" rx="2" ry="2" />
<text  x="385.79" y="1903.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="599.8" y="1861" width="1.2" height="15.0" fill="rgb(232,167,19)" rx="2" ry="2" />
<text  x="602.80" y="1871.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="393.7" y="1909" width="0.2" height="15.0" fill="rgb(218,218,53)" rx="2" ry="2" />
<text  x="396.69" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="577.8" y="1957" width="0.2" height="15.0" fill="rgb(210,126,47)" rx="2" ry="2" />
<text  x="580.80" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="485" width="17.9" height="15.0" fill="rgb(222,102,53)" rx="2" ry="2" />
<text  x="106.35" y="495.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="869" width="18.1" height="15.0" fill="rgb(221,160,54)" rx="2" ry="2" />
<text  x="106.35" y="879.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="297.6" y="1477" width="0.2" height="15.0" fill="rgb(252,218,10)" rx="2" ry="2" />
<text  x="300.57" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1181.1" y="2021" width="0.2" height="15.0" fill="rgb(246,30,49)" rx="2" ry="2" />
<text  x="1184.08" y="2031.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="146.0" y="1925" width="0.2" height="15.0" fill="rgb(231,80,15)" rx="2" ry="2" />
<text  x="148.96" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (4 samples, 0.07%)</title><rect x="708.8" y="2037" width="0.8" height="15.0" fill="rgb(210,145,7)" rx="2" ry="2" />
<text  x="711.80" y="2047.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (20 samples, 0.34%)</title><rect x="696.9" y="1893" width="4.0" height="15.0" fill="rgb(250,168,43)" rx="2" ry="2" />
<text  x="699.91" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="759.7" y="1733" width="1.0" height="15.0" fill="rgb(214,109,31)" rx="2" ry="2" />
<text  x="762.74" y="1743.5" ></text>
</g>
<g >
<title>security_file_alloc (11 samples, 0.18%)</title><rect x="407.2" y="1909" width="2.1" height="15.0" fill="rgb(224,124,32)" rx="2" ry="2" />
<text  x="410.16" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="335.6" y="1829" width="0.2" height="15.0" fill="rgb(242,34,44)" rx="2" ry="2" />
<text  x="338.62" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="333.6" y="1701" width="0.2" height="15.0" fill="rgb(218,112,21)" rx="2" ry="2" />
<text  x="336.64" y="1711.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1176.1" y="1957" width="0.2" height="15.0" fill="rgb(233,184,40)" rx="2" ry="2" />
<text  x="1179.13" y="1967.5" ></text>
</g>
<g >
<title>call_rcu_sched (4 samples, 0.07%)</title><rect x="463.6" y="1957" width="0.8" height="15.0" fill="rgb(215,94,5)" rx="2" ry="2" />
<text  x="466.65" y="1967.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="901.6" y="1877" width="0.2" height="15.0" fill="rgb(228,180,54)" rx="2" ry="2" />
<text  x="904.64" y="1887.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (6 samples, 0.10%)</title><rect x="756.0" y="1733" width="1.2" height="15.0" fill="rgb(235,43,35)" rx="2" ry="2" />
<text  x="758.97" y="1743.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1013.4" y="2021" width="0.2" height="15.0" fill="rgb(222,38,50)" rx="2" ry="2" />
<text  x="1016.42" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="153.3" y="1909" width="0.2" height="15.0" fill="rgb(224,142,22)" rx="2" ry="2" />
<text  x="156.29" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (301 samples, 5.06%)</title><rect x="35.8" y="2021" width="59.6" height="15.0" fill="rgb(234,55,5)" rx="2" ry="2" />
<text  x="38.76" y="2031.5" >folly:..</text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.1" y="1605" width="0.2" height="15.0" fill="rgb(213,13,25)" rx="2" ry="2" />
<text  x="128.15" y="1615.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="383.0" y="1669" width="0.2" height="15.0" fill="rgb(249,16,30)" rx="2" ry="2" />
<text  x="385.99" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="164.4" y="1957" width="0.2" height="15.0" fill="rgb(206,131,38)" rx="2" ry="2" />
<text  x="167.39" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="958.9" y="2021" width="1.2" height="15.0" fill="rgb(250,92,4)" rx="2" ry="2" />
<text  x="961.92" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (24 samples, 0.40%)</title><rect x="543.3" y="1989" width="4.8" height="15.0" fill="rgb(207,33,44)" rx="2" ry="2" />
<text  x="546.32" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (7 samples, 0.12%)</title><rect x="896.5" y="2005" width="1.4" height="15.0" fill="rgb(245,217,1)" rx="2" ry="2" />
<text  x="899.49" y="2015.5" ></text>
</g>
<g >
<title>dentry_free (7 samples, 0.12%)</title><rect x="737.3" y="1749" width="1.4" height="15.0" fill="rgb(221,193,45)" rx="2" ry="2" />
<text  x="740.34" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="889.5" y="1909" width="0.4" height="15.0" fill="rgb(217,89,32)" rx="2" ry="2" />
<text  x="892.55" y="1919.5" ></text>
</g>
<g >
<title>__libc_fcntl (5 samples, 0.08%)</title><rect x="235.9" y="2037" width="1.0" height="15.0" fill="rgb(218,222,20)" rx="2" ry="2" />
<text  x="238.93" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1096.3" y="1637" width="0.2" height="15.0" fill="rgb(231,30,4)" rx="2" ry="2" />
<text  x="1099.26" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="524.9" y="1877" width="0.2" height="15.0" fill="rgb(232,116,10)" rx="2" ry="2" />
<text  x="527.89" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="161.4" y="1829" width="0.2" height="15.0" fill="rgb(207,182,6)" rx="2" ry="2" />
<text  x="164.41" y="1839.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="171.5" y="1973" width="0.2" height="15.0" fill="rgb(243,185,47)" rx="2" ry="2" />
<text  x="174.52" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1144.0" y="1973" width="0.4" height="15.0" fill="rgb(229,115,34)" rx="2" ry="2" />
<text  x="1147.02" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (12 samples, 0.20%)</title><rect x="999.3" y="1909" width="2.4" height="15.0" fill="rgb(238,3,2)" rx="2" ry="2" />
<text  x="1002.34" y="1919.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (5 samples, 0.08%)</title><rect x="331.5" y="1877" width="0.9" height="15.0" fill="rgb(212,182,20)" rx="2" ry="2" />
<text  x="334.46" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="949" width="18.1" height="15.0" fill="rgb(241,27,26)" rx="2" ry="2" />
<text  x="106.35" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="855.7" y="1893" width="0.4" height="15.0" fill="rgb(211,20,28)" rx="2" ry="2" />
<text  x="858.66" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="901.6" y="1941" width="0.2" height="15.0" fill="rgb(214,164,40)" rx="2" ry="2" />
<text  x="904.64" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="927.0" y="1909" width="0.4" height="15.0" fill="rgb(245,18,20)" rx="2" ry="2" />
<text  x="930.01" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (3 samples, 0.05%)</title><rect x="623.4" y="2037" width="0.6" height="15.0" fill="rgb(241,7,45)" rx="2" ry="2" />
<text  x="626.39" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1099.6" y="1893" width="0.2" height="15.0" fill="rgb(238,86,7)" rx="2" ry="2" />
<text  x="1102.63" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="284.3" y="1765" width="0.2" height="15.0" fill="rgb(207,101,49)" rx="2" ry="2" />
<text  x="287.29" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (255 samples, 4.28%)</title><rect x="528.1" y="2021" width="50.5" height="15.0" fill="rgb(251,104,37)" rx="2" ry="2" />
<text  x="531.06" y="2031.5" >folly..</text>
</g>
<g >
<title>folly::SocketAddress::operator= (3 samples, 0.05%)</title><rect x="605.9" y="2005" width="0.6" height="15.0" fill="rgb(213,226,6)" rx="2" ry="2" />
<text  x="608.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (21 samples, 0.35%)</title><rect x="624.2" y="2037" width="4.1" height="15.0" fill="rgb(230,197,52)" rx="2" ry="2" />
<text  x="627.18" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="168.9" y="2021" width="0.4" height="15.0" fill="rgb(225,118,41)" rx="2" ry="2" />
<text  x="171.95" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="642.4" y="1941" width="0.4" height="15.0" fill="rgb(222,134,2)" rx="2" ry="2" />
<text  x="645.41" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (7 samples, 0.12%)</title><rect x="109.7" y="37" width="1.4" height="15.0" fill="rgb(239,63,13)" rx="2" ry="2" />
<text  x="112.69" y="47.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="967.2" y="1989" width="0.2" height="15.0" fill="rgb(248,40,22)" rx="2" ry="2" />
<text  x="970.24" y="1999.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="348.1" y="2037" width="0.2" height="15.0" fill="rgb(224,47,35)" rx="2" ry="2" />
<text  x="351.11" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="629.5" y="1941" width="0.2" height="15.0" fill="rgb(252,224,50)" rx="2" ry="2" />
<text  x="632.53" y="1951.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1010.0" y="1925" width="0.4" height="15.0" fill="rgb(214,61,32)" rx="2" ry="2" />
<text  x="1013.05" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (2 samples, 0.03%)</title><rect x="621.6" y="2021" width="0.4" height="15.0" fill="rgb(229,199,31)" rx="2" ry="2" />
<text  x="624.60" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="154.1" y="1621" width="0.2" height="15.0" fill="rgb(245,108,24)" rx="2" ry="2" />
<text  x="157.08" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (83 samples, 1.39%)</title><rect x="215.5" y="1957" width="16.5" height="15.0" fill="rgb(227,162,46)" rx="2" ry="2" />
<text  x="218.52" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (5 samples, 0.08%)</title><rect x="654.5" y="1989" width="1.0" height="15.0" fill="rgb(226,192,39)" rx="2" ry="2" />
<text  x="657.50" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="51.6" y="1829" width="0.2" height="15.0" fill="rgb(234,215,20)" rx="2" ry="2" />
<text  x="54.62" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="161.4" y="1845" width="0.2" height="15.0" fill="rgb(213,150,20)" rx="2" ry="2" />
<text  x="164.41" y="1855.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="695.9" y="1925" width="0.2" height="15.0" fill="rgb(223,40,1)" rx="2" ry="2" />
<text  x="698.92" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (12 samples, 0.20%)</title><rect x="530.2" y="2005" width="2.4" height="15.0" fill="rgb(226,111,2)" rx="2" ry="2" />
<text  x="533.24" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (15 samples, 0.25%)</title><rect x="154.7" y="1925" width="2.9" height="15.0" fill="rgb(237,140,3)" rx="2" ry="2" />
<text  x="157.68" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (4 samples, 0.07%)</title><rect x="815.4" y="1605" width="0.8" height="15.0" fill="rgb(229,87,14)" rx="2" ry="2" />
<text  x="818.43" y="1615.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="143.4" y="1941" width="0.2" height="15.0" fill="rgb(227,123,50)" rx="2" ry="2" />
<text  x="146.38" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1163.6" y="1813" width="0.4" height="15.0" fill="rgb(212,63,49)" rx="2" ry="2" />
<text  x="1166.64" y="1823.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="740.9" y="1701" width="0.2" height="15.0" fill="rgb(242,52,24)" rx="2" ry="2" />
<text  x="743.91" y="1711.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="126.5" y="1845" width="0.6" height="15.0" fill="rgb(206,197,3)" rx="2" ry="2" />
<text  x="129.53" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="761.1" y="1717" width="0.4" height="15.0" fill="rgb(232,23,28)" rx="2" ry="2" />
<text  x="764.13" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (79 samples, 1.33%)</title><rect x="1151.6" y="2037" width="15.6" height="15.0" fill="rgb(216,210,19)" rx="2" ry="2" />
<text  x="1154.55" y="2047.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (4 samples, 0.07%)</title><rect x="743.3" y="1653" width="0.8" height="15.0" fill="rgb(210,55,3)" rx="2" ry="2" />
<text  x="746.29" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1107.0" y="1829" width="0.2" height="15.0" fill="rgb(222,5,39)" rx="2" ry="2" />
<text  x="1109.96" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="175.3" y="1925" width="0.4" height="15.0" fill="rgb(251,121,8)" rx="2" ry="2" />
<text  x="178.29" y="1935.5" ></text>
</g>
<g >
<title>evict (37 samples, 0.62%)</title><rect x="740.1" y="1717" width="7.4" height="15.0" fill="rgb(253,180,41)" rx="2" ry="2" />
<text  x="743.12" y="1727.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="568.9" y="1973" width="0.4" height="15.0" fill="rgb(207,155,12)" rx="2" ry="2" />
<text  x="571.88" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="1038.6" y="2021" width="0.8" height="15.0" fill="rgb(229,87,30)" rx="2" ry="2" />
<text  x="1041.59" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="333.6" y="1717" width="0.2" height="15.0" fill="rgb(249,184,2)" rx="2" ry="2" />
<text  x="336.64" y="1727.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (46 samples, 0.77%)</title><rect x="1110.7" y="1765" width="9.1" height="15.0" fill="rgb(252,211,10)" rx="2" ry="2" />
<text  x="1113.73" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="323.1" y="1733" width="0.2" height="15.0" fill="rgb(211,131,4)" rx="2" ry="2" />
<text  x="326.13" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="886.8" y="1957" width="0.2" height="15.0" fill="rgb(234,110,25)" rx="2" ry="2" />
<text  x="889.78" y="1967.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="476.5" y="1941" width="0.2" height="15.0" fill="rgb(206,215,53)" rx="2" ry="2" />
<text  x="479.53" y="1951.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="505.5" y="1925" width="0.2" height="15.0" fill="rgb(218,72,34)" rx="2" ry="2" />
<text  x="508.47" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="942.1" y="1941" width="0.2" height="15.0" fill="rgb(247,106,40)" rx="2" ry="2" />
<text  x="945.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.02%)</title><rect x="831.1" y="1765" width="0.2" height="15.0" fill="rgb(234,33,28)" rx="2" ry="2" />
<text  x="834.08" y="1775.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1011.0" y="1973" width="0.2" height="15.0" fill="rgb(249,191,54)" rx="2" ry="2" />
<text  x="1014.04" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="585.3" y="1909" width="0.2" height="15.0" fill="rgb(251,208,0)" rx="2" ry="2" />
<text  x="588.33" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="57.6" y="1925" width="0.6" height="15.0" fill="rgb(237,143,10)" rx="2" ry="2" />
<text  x="60.56" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="90.3" y="1957" width="0.4" height="15.0" fill="rgb(210,39,21)" rx="2" ry="2" />
<text  x="93.27" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="274.8" y="1685" width="0.4" height="15.0" fill="rgb(254,49,16)" rx="2" ry="2" />
<text  x="277.78" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="294.4" y="1541" width="0.2" height="15.0" fill="rgb(244,42,0)" rx="2" ry="2" />
<text  x="297.40" y="1551.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="323.1" y="1829" width="0.2" height="15.0" fill="rgb(214,25,18)" rx="2" ry="2" />
<text  x="326.13" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="163.8" y="1941" width="0.2" height="15.0" fill="rgb(226,82,29)" rx="2" ry="2" />
<text  x="166.79" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1011.2" y="1973" width="0.2" height="15.0" fill="rgb(218,97,34)" rx="2" ry="2" />
<text  x="1014.24" y="1983.5" ></text>
</g>
<g >
<title>task_work_add (3 samples, 0.05%)</title><rect x="837.8" y="1797" width="0.6" height="15.0" fill="rgb(225,103,49)" rx="2" ry="2" />
<text  x="840.82" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="35.4" y="2005" width="0.4" height="15.0" fill="rgb(234,213,33)" rx="2" ry="2" />
<text  x="38.37" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.4" y="69" width="0.2" height="15.0" fill="rgb(209,205,45)" rx="2" ry="2" />
<text  x="123.39" y="79.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="998.9" y="1877" width="0.2" height="15.0" fill="rgb(222,4,10)" rx="2" ry="2" />
<text  x="1001.95" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="333.6" y="1813" width="0.2" height="15.0" fill="rgb(220,193,43)" rx="2" ry="2" />
<text  x="336.64" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (10 samples, 0.17%)</title><rect x="81.3" y="1941" width="2.0" height="15.0" fill="rgb(209,86,26)" rx="2" ry="2" />
<text  x="84.35" y="1951.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="857.0" y="1861" width="0.4" height="15.0" fill="rgb(226,1,49)" rx="2" ry="2" />
<text  x="860.05" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="366.1" y="1941" width="0.2" height="15.0" fill="rgb(246,34,18)" rx="2" ry="2" />
<text  x="369.14" y="1951.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="342.6" y="2005" width="0.2" height="15.0" fill="rgb(216,116,25)" rx="2" ry="2" />
<text  x="345.56" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1099.6" y="1909" width="0.2" height="15.0" fill="rgb(247,19,44)" rx="2" ry="2" />
<text  x="1102.63" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="969.0" y="1749" width="0.2" height="15.0" fill="rgb(210,212,38)" rx="2" ry="2" />
<text  x="972.02" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1096.3" y="1653" width="0.2" height="15.0" fill="rgb(212,11,3)" rx="2" ry="2" />
<text  x="1099.26" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="382.8" y="1909" width="0.4" height="15.0" fill="rgb(228,73,29)" rx="2" ry="2" />
<text  x="385.79" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="168.5" y="2021" width="0.2" height="15.0" fill="rgb(232,137,49)" rx="2" ry="2" />
<text  x="171.55" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.73%)</title><rect x="102.6" y="1317" width="20.4" height="15.0" fill="rgb(229,78,23)" rx="2" ry="2" />
<text  x="105.55" y="1327.5" ></text>
</g>
<g >
<title>detach_if_pending (2 samples, 0.03%)</title><rect x="813.4" y="1621" width="0.4" height="15.0" fill="rgb(251,226,52)" rx="2" ry="2" />
<text  x="816.45" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1181.5" y="1989" width="0.2" height="15.0" fill="rgb(246,179,31)" rx="2" ry="2" />
<text  x="1184.48" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="858.8" y="1941" width="0.2" height="15.0" fill="rgb(245,187,43)" rx="2" ry="2" />
<text  x="861.83" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="616.8" y="1637" width="0.2" height="15.0" fill="rgb(230,154,27)" rx="2" ry="2" />
<text  x="619.85" y="1647.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="491.0" y="1621" width="0.2" height="15.0" fill="rgb(224,198,0)" rx="2" ry="2" />
<text  x="494.00" y="1631.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (3 samples, 0.05%)</title><rect x="172.1" y="1989" width="0.6" height="15.0" fill="rgb(247,191,33)" rx="2" ry="2" />
<text  x="175.12" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="471.6" y="1893" width="0.2" height="15.0" fill="rgb(251,3,29)" rx="2" ry="2" />
<text  x="474.58" y="1903.5" ></text>
</g>
<g >
<title>ip_output (132 samples, 2.22%)</title><rect x="779.4" y="1637" width="26.1" height="15.0" fill="rgb(207,160,48)" rx="2" ry="2" />
<text  x="782.36" y="1647.5" >i..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="383.0" y="1829" width="0.2" height="15.0" fill="rgb(245,170,44)" rx="2" ry="2" />
<text  x="385.99" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="505.9" y="1845" width="0.2" height="15.0" fill="rgb(237,130,37)" rx="2" ry="2" />
<text  x="508.86" y="1855.5" ></text>
</g>
<g >
<title>task_work_run (523 samples, 8.78%)</title><rect x="732.4" y="1845" width="103.6" height="15.0" fill="rgb(227,212,35)" rx="2" ry="2" />
<text  x="735.39" y="1855.5" >task_work_run</text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (2 samples, 0.03%)</title><rect x="27.0" y="1989" width="0.4" height="15.0" fill="rgb(224,194,36)" rx="2" ry="2" />
<text  x="30.04" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1096.3" y="1621" width="0.2" height="15.0" fill="rgb(229,71,45)" rx="2" ry="2" />
<text  x="1099.26" y="1631.5" ></text>
</g>
<g >
<title>____fput (513 samples, 8.62%)</title><rect x="733.6" y="1829" width="101.6" height="15.0" fill="rgb(227,148,15)" rx="2" ry="2" />
<text  x="736.58" y="1839.5" >____fput</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="139.4" y="1957" width="0.2" height="15.0" fill="rgb(248,177,34)" rx="2" ry="2" />
<text  x="142.42" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="33.0" y="1717" width="0.2" height="15.0" fill="rgb(210,40,27)" rx="2" ry="2" />
<text  x="35.99" y="1727.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="343.7" y="1749" width="0.2" height="15.0" fill="rgb(254,40,40)" rx="2" ry="2" />
<text  x="346.75" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="895.9" y="1701" width="0.2" height="15.0" fill="rgb(247,138,31)" rx="2" ry="2" />
<text  x="898.89" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="644.6" y="1925" width="0.4" height="15.0" fill="rgb(233,174,54)" rx="2" ry="2" />
<text  x="647.59" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="846.1" y="1909" width="0.2" height="15.0" fill="rgb(213,180,3)" rx="2" ry="2" />
<text  x="849.15" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="136.4" y="1941" width="0.4" height="15.0" fill="rgb(236,98,41)" rx="2" ry="2" />
<text  x="139.44" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="91.3" y="1925" width="0.2" height="15.0" fill="rgb(229,83,46)" rx="2" ry="2" />
<text  x="94.26" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="253.0" y="1701" width="0.2" height="15.0" fill="rgb(247,42,38)" rx="2" ry="2" />
<text  x="255.98" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="174.3" y="2005" width="0.2" height="15.0" fill="rgb(253,63,9)" rx="2" ry="2" />
<text  x="177.30" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="712.2" y="1973" width="0.2" height="15.0" fill="rgb(243,63,27)" rx="2" ry="2" />
<text  x="715.17" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="215.3" y="1813" width="0.2" height="15.0" fill="rgb(249,126,24)" rx="2" ry="2" />
<text  x="218.32" y="1823.5" ></text>
</g>
<g >
<title>isspace (3 samples, 0.05%)</title><rect x="1022.7" y="2021" width="0.6" height="15.0" fill="rgb(229,183,3)" rx="2" ry="2" />
<text  x="1025.73" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::close (632 samples, 10.61%)</title><rect x="719.3" y="1925" width="125.3" height="15.0" fill="rgb(240,103,52)" rx="2" ry="2" />
<text  x="722.31" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="253.0" y="1845" width="0.2" height="15.0" fill="rgb(207,88,1)" rx="2" ry="2" />
<text  x="255.98" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="751.6" y="1765" width="1.0" height="15.0" fill="rgb(221,68,40)" rx="2" ry="2" />
<text  x="754.61" y="1775.5" ></text>
</g>
<g >
<title>make_kgid (3 samples, 0.05%)</title><rect x="395.3" y="1893" width="0.6" height="15.0" fill="rgb(249,168,29)" rx="2" ry="2" />
<text  x="398.27" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="342.0" y="1589" width="0.2" height="15.0" fill="rgb(207,22,7)" rx="2" ry="2" />
<text  x="344.96" y="1599.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="1109.5" y="1765" width="0.2" height="15.0" fill="rgb(205,172,15)" rx="2" ry="2" />
<text  x="1112.54" y="1775.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="954.2" y="2005" width="0.2" height="15.0" fill="rgb(227,212,32)" rx="2" ry="2" />
<text  x="957.16" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="259.7" y="1813" width="0.2" height="15.0" fill="rgb(242,188,4)" rx="2" ry="2" />
<text  x="262.71" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (82 samples, 1.38%)</title><rect x="1080.2" y="1909" width="16.3" height="15.0" fill="rgb(208,216,21)" rx="2" ry="2" />
<text  x="1083.20" y="1919.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="405.0" y="1877" width="0.4" height="15.0" fill="rgb(208,88,51)" rx="2" ry="2" />
<text  x="407.98" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="524.9" y="1893" width="0.2" height="15.0" fill="rgb(217,132,20)" rx="2" ry="2" />
<text  x="527.89" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="655.3" y="1941" width="0.2" height="15.0" fill="rgb(217,191,44)" rx="2" ry="2" />
<text  x="658.29" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="47.5" y="1941" width="0.7" height="15.0" fill="rgb(254,178,10)" rx="2" ry="2" />
<text  x="50.46" y="1951.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="548.3" y="1989" width="0.2" height="15.0" fill="rgb(206,46,10)" rx="2" ry="2" />
<text  x="551.27" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="901.8" y="1973" width="0.2" height="15.0" fill="rgb(207,74,51)" rx="2" ry="2" />
<text  x="904.84" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="605.7" y="1989" width="0.2" height="15.0" fill="rgb(208,169,31)" rx="2" ry="2" />
<text  x="608.75" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="765.5" y="1653" width="0.2" height="15.0" fill="rgb(214,103,38)" rx="2" ry="2" />
<text  x="768.49" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (10 samples, 0.17%)</title><rect x="49.8" y="1941" width="2.0" height="15.0" fill="rgb(215,71,37)" rx="2" ry="2" />
<text  x="52.84" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="284.3" y="1589" width="0.2" height="15.0" fill="rgb(212,11,51)" rx="2" ry="2" />
<text  x="287.29" y="1599.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="166.4" y="1989" width="0.2" height="15.0" fill="rgb(220,205,24)" rx="2" ry="2" />
<text  x="169.37" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="210.4" y="1701" width="0.2" height="15.0" fill="rgb(211,151,36)" rx="2" ry="2" />
<text  x="213.37" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="573.8" y="1909" width="0.2" height="15.0" fill="rgb(228,8,40)" rx="2" ry="2" />
<text  x="576.84" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="342.2" y="1941" width="0.2" height="15.0" fill="rgb(230,199,34)" rx="2" ry="2" />
<text  x="345.16" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="991.2" y="1957" width="0.2" height="15.0" fill="rgb(224,202,37)" rx="2" ry="2" />
<text  x="994.22" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1877" width="0.2" height="15.0" fill="rgb(220,111,17)" rx="2" ry="2" />
<text  x="149.95" y="1887.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="477.1" y="1957" width="0.2" height="15.0" fill="rgb(213,138,19)" rx="2" ry="2" />
<text  x="480.12" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="706.2" y="1973" width="0.4" height="15.0" fill="rgb(246,6,53)" rx="2" ry="2" />
<text  x="709.23" y="1983.5" ></text>
</g>
<g >
<title>page_frag_free (21 samples, 0.35%)</title><rect x="1084.2" y="1861" width="4.1" height="15.0" fill="rgb(243,143,53)" rx="2" ry="2" />
<text  x="1087.17" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="643.8" y="1909" width="0.6" height="15.0" fill="rgb(239,81,54)" rx="2" ry="2" />
<text  x="646.80" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="991.4" y="1973" width="0.6" height="15.0" fill="rgb(218,228,38)" rx="2" ry="2" />
<text  x="994.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="117.6" y="53" width="0.4" height="15.0" fill="rgb(226,201,46)" rx="2" ry="2" />
<text  x="120.62" y="63.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="929.6" y="1925" width="0.2" height="15.0" fill="rgb(231,143,50)" rx="2" ry="2" />
<text  x="932.58" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (5 samples, 0.08%)</title><rect x="179.6" y="1989" width="1.0" height="15.0" fill="rgb(208,163,47)" rx="2" ry="2" />
<text  x="182.65" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="33.0" y="1621" width="0.2" height="15.0" fill="rgb(207,159,8)" rx="2" ry="2" />
<text  x="35.99" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="133.3" y="1941" width="0.2" height="15.0" fill="rgb(243,60,18)" rx="2" ry="2" />
<text  x="136.27" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (45 samples, 0.76%)</title><rect x="1110.9" y="1717" width="8.9" height="15.0" fill="rgb(210,126,45)" rx="2" ry="2" />
<text  x="1113.92" y="1727.5" ></text>
</g>
<g >
<title>inode_init_always (12 samples, 0.20%)</title><rect x="393.9" y="1909" width="2.4" height="15.0" fill="rgb(243,19,12)" rx="2" ry="2" />
<text  x="396.89" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="883.0" y="1909" width="0.4" height="15.0" fill="rgb(245,166,18)" rx="2" ry="2" />
<text  x="886.01" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1149.2" y="2021" width="0.2" height="15.0" fill="rgb(211,146,41)" rx="2" ry="2" />
<text  x="1152.17" y="2031.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="849.5" y="1637" width="0.2" height="15.0" fill="rgb(237,178,13)" rx="2" ry="2" />
<text  x="852.52" y="1647.5" ></text>
</g>
<g >
<title>map_id_range_down (2 samples, 0.03%)</title><rect x="395.5" y="1877" width="0.4" height="15.0" fill="rgb(244,222,45)" rx="2" ry="2" />
<text  x="398.47" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (2 samples, 0.03%)</title><rect x="662.2" y="2037" width="0.4" height="15.0" fill="rgb(209,79,51)" rx="2" ry="2" />
<text  x="665.23" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="661.2" y="1989" width="0.2" height="15.0" fill="rgb(213,91,13)" rx="2" ry="2" />
<text  x="664.24" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1144.2" y="1957" width="0.2" height="15.0" fill="rgb(230,203,19)" rx="2" ry="2" />
<text  x="1147.22" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="74.2" y="1957" width="0.6" height="15.0" fill="rgb(220,143,15)" rx="2" ry="2" />
<text  x="77.21" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="215.3" y="1797" width="0.2" height="15.0" fill="rgb(214,9,47)" rx="2" ry="2" />
<text  x="218.32" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1163.4" y="1925" width="0.6" height="15.0" fill="rgb(206,72,35)" rx="2" ry="2" />
<text  x="1166.44" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="331.3" y="1797" width="0.2" height="15.0" fill="rgb(211,216,13)" rx="2" ry="2" />
<text  x="334.26" y="1807.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="413.3" y="1893" width="0.2" height="15.0" fill="rgb(234,37,25)" rx="2" ry="2" />
<text  x="416.31" y="1903.5" ></text>
</g>
<g >
<title>security_file_fcntl (1 samples, 0.02%)</title><rect x="563.1" y="1925" width="0.2" height="15.0" fill="rgb(206,66,1)" rx="2" ry="2" />
<text  x="566.14" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="222.3" y="1877" width="0.2" height="15.0" fill="rgb(253,113,28)" rx="2" ry="2" />
<text  x="225.26" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="884.8" y="1925" width="0.2" height="15.0" fill="rgb(254,144,12)" rx="2" ry="2" />
<text  x="887.79" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_fin (344 samples, 5.78%)</title><rect x="762.1" y="1733" width="68.2" height="15.0" fill="rgb(251,16,23)" rx="2" ry="2" />
<text  x="765.12" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="803.9" y="1493" width="0.2" height="15.0" fill="rgb(237,40,10)" rx="2" ry="2" />
<text  x="806.93" y="1503.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="223.4" y="1877" width="0.2" height="15.0" fill="rgb(216,168,18)" rx="2" ry="2" />
<text  x="226.45" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1121.2" y="1909" width="0.2" height="15.0" fill="rgb(247,43,26)" rx="2" ry="2" />
<text  x="1124.23" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="984.3" y="1861" width="0.2" height="15.0" fill="rgb(217,51,8)" rx="2" ry="2" />
<text  x="987.28" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="912.3" y="1973" width="0.2" height="15.0" fill="rgb(206,136,35)" rx="2" ry="2" />
<text  x="915.34" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="704.6" y="1989" width="0.2" height="15.0" fill="rgb(252,227,42)" rx="2" ry="2" />
<text  x="707.64" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="231.2" y="1909" width="0.2" height="15.0" fill="rgb(216,126,24)" rx="2" ry="2" />
<text  x="234.18" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="294.4" y="1653" width="0.2" height="15.0" fill="rgb(239,210,0)" rx="2" ry="2" />
<text  x="297.40" y="1663.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="649.2" y="1957" width="0.1" height="15.0" fill="rgb(254,126,40)" rx="2" ry="2" />
<text  x="652.15" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (1 samples, 0.02%)</title><rect x="860.6" y="1957" width="0.2" height="15.0" fill="rgb(237,200,17)" rx="2" ry="2" />
<text  x="863.61" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="271.4" y="1765" width="0.2" height="15.0" fill="rgb(226,208,47)" rx="2" ry="2" />
<text  x="274.41" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="322.5" y="1637" width="0.2" height="15.0" fill="rgb(250,5,28)" rx="2" ry="2" />
<text  x="325.54" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1188.8" y="1957" width="0.2" height="15.0" fill="rgb(215,162,37)" rx="2" ry="2" />
<text  x="1191.81" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.4" y="1893" width="0.2" height="15.0" fill="rgb(207,171,54)" rx="2" ry="2" />
<text  x="884.42" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (14 samples, 0.24%)</title><rect x="14.6" y="1845" width="2.7" height="15.0" fill="rgb(241,54,50)" rx="2" ry="2" />
<text  x="17.56" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="294.4" y="1621" width="0.2" height="15.0" fill="rgb(221,42,33)" rx="2" ry="2" />
<text  x="297.40" y="1631.5" ></text>
</g>
<g >
<title>inet_accept (108 samples, 1.81%)</title><rect x="365.7" y="1957" width="21.4" height="15.0" fill="rgb(212,195,23)" rx="2" ry="2" />
<text  x="368.74" y="1967.5" >i..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="888.2" y="1701" width="0.2" height="15.0" fill="rgb(239,159,1)" rx="2" ry="2" />
<text  x="891.16" y="1711.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="737.9" y="1717" width="0.6" height="15.0" fill="rgb(251,130,0)" rx="2" ry="2" />
<text  x="740.94" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="979.5" y="2021" width="0.2" height="15.0" fill="rgb(219,219,52)" rx="2" ry="2" />
<text  x="982.53" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onWriteQuiescence (2 samples, 0.03%)</title><rect x="712.6" y="1989" width="0.4" height="15.0" fill="rgb(248,11,35)" rx="2" ry="2" />
<text  x="715.57" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="294.4" y="1525" width="0.2" height="15.0" fill="rgb(252,124,27)" rx="2" ry="2" />
<text  x="297.40" y="1535.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (3 samples, 0.05%)</title><rect x="696.1" y="1909" width="0.6" height="15.0" fill="rgb(248,178,39)" rx="2" ry="2" />
<text  x="699.12" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="839.6" y="1813" width="0.2" height="15.0" fill="rgb(224,59,19)" rx="2" ry="2" />
<text  x="842.61" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="846.3" y="1909" width="0.4" height="15.0" fill="rgb(232,36,49)" rx="2" ry="2" />
<text  x="849.35" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (61 samples, 1.02%)</title><rect x="551.2" y="1957" width="12.1" height="15.0" fill="rgb(240,171,40)" rx="2" ry="2" />
<text  x="554.25" y="1967.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="25.1" y="2005" width="0.4" height="15.0" fill="rgb(252,59,27)" rx="2" ry="2" />
<text  x="28.06" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.05%)</title><rect x="405.8" y="1893" width="0.6" height="15.0" fill="rgb(231,24,40)" rx="2" ry="2" />
<text  x="408.78" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="697.9" y="1877" width="0.2" height="15.0" fill="rgb(206,218,50)" rx="2" ry="2" />
<text  x="700.90" y="1887.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="836.0" y="1749" width="0.2" height="15.0" fill="rgb(210,132,13)" rx="2" ry="2" />
<text  x="839.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="577.2" y="1989" width="0.2" height="15.0" fill="rgb(234,200,49)" rx="2" ry="2" />
<text  x="580.21" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (19 samples, 0.32%)</title><rect x="88.9" y="1973" width="3.7" height="15.0" fill="rgb(249,111,28)" rx="2" ry="2" />
<text  x="91.88" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="57.6" y="1893" width="0.6" height="15.0" fill="rgb(244,140,24)" rx="2" ry="2" />
<text  x="60.56" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="1180.1" y="2005" width="0.6" height="15.0" fill="rgb(228,198,2)" rx="2" ry="2" />
<text  x="1183.09" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="172.7" y="1973" width="0.2" height="15.0" fill="rgb(218,104,4)" rx="2" ry="2" />
<text  x="175.71" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="872.9" y="1861" width="0.2" height="15.0" fill="rgb(229,45,23)" rx="2" ry="2" />
<text  x="875.90" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="658.9" y="2037" width="3.1" height="15.0" fill="rgb(228,164,6)" rx="2" ry="2" />
<text  x="661.86" y="2047.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (1 samples, 0.02%)</title><rect x="86.7" y="1973" width="0.2" height="15.0" fill="rgb(231,54,16)" rx="2" ry="2" />
<text  x="89.70" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="903.4" y="1957" width="0.2" height="15.0" fill="rgb(220,64,6)" rx="2" ry="2" />
<text  x="906.42" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="154.1" y="1861" width="0.2" height="15.0" fill="rgb(214,60,40)" rx="2" ry="2" />
<text  x="157.08" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="868.1" y="1957" width="0.4" height="15.0" fill="rgb(242,41,48)" rx="2" ry="2" />
<text  x="871.15" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (4 samples, 0.07%)</title><rect x="259.9" y="1893" width="0.8" height="15.0" fill="rgb(231,226,30)" rx="2" ry="2" />
<text  x="262.91" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="498.1" y="1829" width="0.8" height="15.0" fill="rgb(205,70,52)" rx="2" ry="2" />
<text  x="501.13" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="501" width="17.9" height="15.0" fill="rgb(224,13,4)" rx="2" ry="2" />
<text  x="106.35" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="270.6" y="1797" width="0.2" height="15.0" fill="rgb(214,179,45)" rx="2" ry="2" />
<text  x="273.61" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="902.4" y="1925" width="0.2" height="15.0" fill="rgb(207,115,9)" rx="2" ry="2" />
<text  x="905.43" y="1935.5" ></text>
</g>
<g >
<title>ep_poll (91 samples, 1.53%)</title><rect x="487.6" y="1973" width="18.1" height="15.0" fill="rgb(205,98,43)" rx="2" ry="2" />
<text  x="490.63" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="297.2" y="1637" width="0.6" height="15.0" fill="rgb(247,225,11)" rx="2" ry="2" />
<text  x="300.17" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="154.1" y="1765" width="0.2" height="15.0" fill="rgb(222,215,27)" rx="2" ry="2" />
<text  x="157.08" y="1775.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="979.3" y="2037" width="0.2" height="15.0" fill="rgb(216,221,21)" rx="2" ry="2" />
<text  x="982.33" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="383.0" y="1765" width="0.2" height="15.0" fill="rgb(216,223,33)" rx="2" ry="2" />
<text  x="385.99" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (2 samples, 0.03%)</title><rect x="523.7" y="1989" width="0.4" height="15.0" fill="rgb(233,40,50)" rx="2" ry="2" />
<text  x="526.70" y="1999.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1118.5" y="1477" width="0.4" height="15.0" fill="rgb(246,25,44)" rx="2" ry="2" />
<text  x="1121.45" y="1487.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (30 samples, 0.50%)</title><rect x="223.2" y="1893" width="6.0" height="15.0" fill="rgb(237,219,13)" rx="2" ry="2" />
<text  x="226.25" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (5 samples, 0.08%)</title><rect x="869.1" y="1989" width="1.0" height="15.0" fill="rgb(221,151,31)" rx="2" ry="2" />
<text  x="872.14" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="1163.6" y="1717" width="0.2" height="15.0" fill="rgb(214,52,42)" rx="2" ry="2" />
<text  x="1166.64" y="1727.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="1012.4" y="2037" width="0.6" height="15.0" fill="rgb(240,148,2)" rx="2" ry="2" />
<text  x="1015.43" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="684.0" y="1797" width="0.2" height="15.0" fill="rgb(232,181,3)" rx="2" ry="2" />
<text  x="687.03" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1010.0" y="1941" width="0.4" height="15.0" fill="rgb(228,20,49)" rx="2" ry="2" />
<text  x="1013.05" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="68.5" y="1893" width="1.2" height="15.0" fill="rgb(247,182,49)" rx="2" ry="2" />
<text  x="71.46" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="210.4" y="1733" width="0.2" height="15.0" fill="rgb(219,42,41)" rx="2" ry="2" />
<text  x="213.37" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="895.9" y="1829" width="0.2" height="15.0" fill="rgb(214,106,10)" rx="2" ry="2" />
<text  x="898.89" y="1839.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="747.3" y="1573" width="0.2" height="15.0" fill="rgb(224,105,13)" rx="2" ry="2" />
<text  x="750.25" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="383.0" y="1701" width="0.2" height="15.0" fill="rgb(216,8,17)" rx="2" ry="2" />
<text  x="385.99" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="926.4" y="1925" width="1.0" height="15.0" fill="rgb(220,85,15)" rx="2" ry="2" />
<text  x="929.41" y="1935.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.0" y="1221" width="0.2" height="15.0" fill="rgb(224,124,9)" rx="2" ry="2" />
<text  x="124.98" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="1173.2" y="1989" width="0.2" height="15.0" fill="rgb(220,87,51)" rx="2" ry="2" />
<text  x="1176.15" y="1999.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="415.5" y="1909" width="0.4" height="15.0" fill="rgb(208,86,29)" rx="2" ry="2" />
<text  x="418.49" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="13.8" y="1861" width="0.2" height="15.0" fill="rgb(232,130,27)" rx="2" ry="2" />
<text  x="16.77" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (1 samples, 0.02%)</title><rect x="897.9" y="2005" width="0.2" height="15.0" fill="rgb(253,36,38)" rx="2" ry="2" />
<text  x="900.87" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.02%)</title><rect x="551.2" y="1973" width="12.1" height="15.0" fill="rgb(244,40,42)" rx="2" ry="2" />
<text  x="554.25" y="1983.5" ></text>
</g>
<g >
<title>__skb_clone (17 samples, 0.29%)</title><rect x="806.3" y="1653" width="3.4" height="15.0" fill="rgb(244,22,15)" rx="2" ry="2" />
<text  x="809.31" y="1663.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="154.1" y="1605" width="0.2" height="15.0" fill="rgb(242,122,15)" rx="2" ry="2" />
<text  x="157.08" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1163.6" y="1845" width="0.4" height="15.0" fill="rgb(235,200,29)" rx="2" ry="2" />
<text  x="1166.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (327 samples, 5.49%)</title><rect x="101.8" y="2021" width="64.8" height="15.0" fill="rgb(215,147,46)" rx="2" ry="2" />
<text  x="104.76" y="2031.5" >[unknown]</text>
</g>
<g >
<title>_atomic_dec_and_lock (2 samples, 0.03%)</title><rect x="739.3" y="1717" width="0.4" height="15.0" fill="rgb(212,109,16)" rx="2" ry="2" />
<text  x="742.32" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="901.2" y="2021" width="0.2" height="15.0" fill="rgb(213,69,48)" rx="2" ry="2" />
<text  x="904.24" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="342.0" y="1525" width="0.2" height="15.0" fill="rgb(252,62,44)" rx="2" ry="2" />
<text  x="344.96" y="1535.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (7 samples, 0.12%)</title><rect x="967.8" y="2005" width="1.4" height="15.0" fill="rgb(236,50,31)" rx="2" ry="2" />
<text  x="970.83" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="400.2" y="1877" width="0.2" height="15.0" fill="rgb(217,204,33)" rx="2" ry="2" />
<text  x="403.23" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1174.3" y="1989" width="0.2" height="15.0" fill="rgb(216,170,34)" rx="2" ry="2" />
<text  x="1177.34" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="1033.2" y="2005" width="0.4" height="15.0" fill="rgb(237,116,50)" rx="2" ry="2" />
<text  x="1036.23" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="120.4" y="101" width="0.2" height="15.0" fill="rgb(234,213,5)" rx="2" ry="2" />
<text  x="123.39" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="710.2" y="1973" width="0.2" height="15.0" fill="rgb(222,208,50)" rx="2" ry="2" />
<text  x="713.19" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="259.7" y="1669" width="0.2" height="15.0" fill="rgb(207,16,7)" rx="2" ry="2" />
<text  x="262.71" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="928.8" y="1893" width="0.2" height="15.0" fill="rgb(214,226,24)" rx="2" ry="2" />
<text  x="931.79" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="159.8" y="1877" width="0.6" height="15.0" fill="rgb(250,191,43)" rx="2" ry="2" />
<text  x="162.83" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="133.7" y="1989" width="0.2" height="15.0" fill="rgb(236,42,6)" rx="2" ry="2" />
<text  x="136.67" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (9 samples, 0.15%)</title><rect x="594.6" y="1893" width="1.8" height="15.0" fill="rgb(207,207,44)" rx="2" ry="2" />
<text  x="597.65" y="1903.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="338.0" y="1957" width="0.2" height="15.0" fill="rgb(241,195,11)" rx="2" ry="2" />
<text  x="341.00" y="1967.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.03%)</title><rect x="406.8" y="1909" width="0.4" height="15.0" fill="rgb(213,178,36)" rx="2" ry="2" />
<text  x="409.77" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="761.3" y="1701" width="0.2" height="15.0" fill="rgb(211,187,34)" rx="2" ry="2" />
<text  x="764.32" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="622.4" y="2021" width="0.6" height="15.0" fill="rgb(212,166,53)" rx="2" ry="2" />
<text  x="625.40" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="891.7" y="1973" width="0.2" height="15.0" fill="rgb(212,63,35)" rx="2" ry="2" />
<text  x="894.73" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (3 samples, 0.05%)</title><rect x="1014.4" y="2021" width="0.6" height="15.0" fill="rgb(239,106,5)" rx="2" ry="2" />
<text  x="1017.41" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="862.8" y="1973" width="0.2" height="15.0" fill="rgb(254,191,8)" rx="2" ry="2" />
<text  x="865.79" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="547.3" y="1781" width="0.2" height="15.0" fill="rgb(207,209,4)" rx="2" ry="2" />
<text  x="550.28" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="969.0" y="1685" width="0.2" height="15.0" fill="rgb(226,77,43)" rx="2" ry="2" />
<text  x="972.02" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1109.3" y="1909" width="0.6" height="15.0" fill="rgb(249,101,31)" rx="2" ry="2" />
<text  x="1112.34" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="51.6" y="1669" width="0.2" height="15.0" fill="rgb(224,98,42)" rx="2" ry="2" />
<text  x="54.62" y="1679.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="401.0" y="1893" width="0.4" height="15.0" fill="rgb(223,146,51)" rx="2" ry="2" />
<text  x="404.02" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="904.8" y="2021" width="1.0" height="15.0" fill="rgb(240,74,32)" rx="2" ry="2" />
<text  x="907.81" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="616.8" y="1701" width="0.2" height="15.0" fill="rgb(248,154,8)" rx="2" ry="2" />
<text  x="619.85" y="1711.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1021.7" y="1989" width="0.2" height="15.0" fill="rgb(242,169,2)" rx="2" ry="2" />
<text  x="1024.74" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="95.4" y="1989" width="0.2" height="15.0" fill="rgb(240,185,28)" rx="2" ry="2" />
<text  x="98.42" y="1999.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="330.9" y="1829" width="0.4" height="15.0" fill="rgb(224,158,22)" rx="2" ry="2" />
<text  x="333.86" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.24%)</title><rect x="14.6" y="1909" width="2.7" height="15.0" fill="rgb(235,210,19)" rx="2" ry="2" />
<text  x="17.56" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="463.1" y="1957" width="0.5" height="15.0" fill="rgb(208,122,41)" rx="2" ry="2" />
<text  x="466.05" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="33.0" y="1573" width="0.2" height="15.0" fill="rgb(245,222,10)" rx="2" ry="2" />
<text  x="35.99" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="512.8" y="1957" width="0.2" height="15.0" fill="rgb(231,157,44)" rx="2" ry="2" />
<text  x="515.80" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1010.0" y="1909" width="0.2" height="15.0" fill="rgb(225,21,15)" rx="2" ry="2" />
<text  x="1013.05" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (44 samples, 0.74%)</title><rect x="1111.1" y="1685" width="8.7" height="15.0" fill="rgb(232,172,1)" rx="2" ry="2" />
<text  x="1114.12" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="916.7" y="2005" width="0.2" height="15.0" fill="rgb(249,34,34)" rx="2" ry="2" />
<text  x="919.70" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1173.0" y="1973" width="0.2" height="15.0" fill="rgb(253,162,1)" rx="2" ry="2" />
<text  x="1175.96" y="1983.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="805.5" y="1653" width="0.4" height="15.0" fill="rgb(243,76,37)" rx="2" ry="2" />
<text  x="808.52" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="562.1" y="1925" width="0.2" height="15.0" fill="rgb(212,50,20)" rx="2" ry="2" />
<text  x="565.15" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="398.6" y="1877" width="0.4" height="15.0" fill="rgb(241,60,49)" rx="2" ry="2" />
<text  x="401.64" y="1887.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="343.7" y="1733" width="0.2" height="15.0" fill="rgb(252,22,47)" rx="2" ry="2" />
<text  x="346.75" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="61.9" y="1845" width="0.2" height="15.0" fill="rgb(217,139,41)" rx="2" ry="2" />
<text  x="64.92" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1107.0" y="1813" width="0.2" height="15.0" fill="rgb(228,165,4)" rx="2" ry="2" />
<text  x="1109.96" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="343.2" y="1989" width="0.1" height="15.0" fill="rgb(233,40,35)" rx="2" ry="2" />
<text  x="346.15" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="154.1" y="1829" width="0.2" height="15.0" fill="rgb(237,176,53)" rx="2" ry="2" />
<text  x="157.08" y="1839.5" ></text>
</g>
<g >
<title>free (27 samples, 0.45%)</title><rect x="188.6" y="2021" width="5.3" height="15.0" fill="rgb(236,175,37)" rx="2" ry="2" />
<text  x="191.57" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="619.0" y="1989" width="0.2" height="15.0" fill="rgb(217,57,2)" rx="2" ry="2" />
<text  x="622.03" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="127.7" y="1781" width="0.2" height="15.0" fill="rgb(230,103,5)" rx="2" ry="2" />
<text  x="130.72" y="1791.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="195.1" y="2021" width="0.2" height="15.0" fill="rgb(244,73,19)" rx="2" ry="2" />
<text  x="198.11" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="280.7" y="1605" width="0.2" height="15.0" fill="rgb(216,14,29)" rx="2" ry="2" />
<text  x="283.72" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="383.0" y="1813" width="0.2" height="15.0" fill="rgb(219,17,28)" rx="2" ry="2" />
<text  x="385.99" y="1823.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="598.6" y="1845" width="0.2" height="15.0" fill="rgb(214,88,47)" rx="2" ry="2" />
<text  x="601.61" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="91.5" y="1941" width="0.2" height="15.0" fill="rgb(231,128,52)" rx="2" ry="2" />
<text  x="94.45" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (6 samples, 0.10%)</title><rect x="1176.7" y="2021" width="1.2" height="15.0" fill="rgb(219,1,1)" rx="2" ry="2" />
<text  x="1179.72" y="2031.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1079.8" y="1781" width="0.2" height="15.0" fill="rgb(219,54,36)" rx="2" ry="2" />
<text  x="1082.81" y="1791.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="942.3" y="1989" width="0.2" height="15.0" fill="rgb(205,186,39)" rx="2" ry="2" />
<text  x="945.27" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="686.0" y="2021" width="0.4" height="15.0" fill="rgb(210,217,21)" rx="2" ry="2" />
<text  x="689.01" y="2031.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="491.0" y="1605" width="0.2" height="15.0" fill="rgb(205,71,17)" rx="2" ry="2" />
<text  x="494.00" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="127.7" y="1669" width="0.2" height="15.0" fill="rgb(227,106,6)" rx="2" ry="2" />
<text  x="130.72" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (18 samples, 0.30%)</title><rect x="532.6" y="2005" width="3.6" height="15.0" fill="rgb(248,19,10)" rx="2" ry="2" />
<text  x="535.62" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="284.3" y="1829" width="0.2" height="15.0" fill="rgb(232,9,40)" rx="2" ry="2" />
<text  x="287.29" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="466.2" y="1941" width="0.2" height="15.0" fill="rgb(221,229,52)" rx="2" ry="2" />
<text  x="469.22" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="881.4" y="1909" width="0.4" height="15.0" fill="rgb(221,41,23)" rx="2" ry="2" />
<text  x="884.42" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="230.6" y="1909" width="0.2" height="15.0" fill="rgb(218,106,16)" rx="2" ry="2" />
<text  x="233.58" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="540.7" y="1845" width="0.2" height="15.0" fill="rgb(229,158,8)" rx="2" ry="2" />
<text  x="543.74" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="171.3" y="1733" width="0.2" height="15.0" fill="rgb(236,34,24)" rx="2" ry="2" />
<text  x="174.32" y="1743.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="594.8" y="1765" width="0.2" height="15.0" fill="rgb(210,77,18)" rx="2" ry="2" />
<text  x="597.85" y="1775.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="274.2" y="1861" width="0.4" height="15.0" fill="rgb(209,205,27)" rx="2" ry="2" />
<text  x="277.18" y="1871.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="10.2" y="1893" width="0.2" height="15.0" fill="rgb(225,212,22)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="298.8" y="1413" width="0.4" height="15.0" fill="rgb(222,196,0)" rx="2" ry="2" />
<text  x="301.76" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="901" width="18.1" height="15.0" fill="rgb(222,26,44)" rx="2" ry="2" />
<text  x="106.35" y="911.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="968.8" y="1877" width="0.4" height="15.0" fill="rgb(245,103,33)" rx="2" ry="2" />
<text  x="971.82" y="1887.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="330.5" y="1413" width="0.2" height="15.0" fill="rgb(225,3,13)" rx="2" ry="2" />
<text  x="333.47" y="1423.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="339.2" y="1845" width="0.2" height="15.0" fill="rgb(207,197,33)" rx="2" ry="2" />
<text  x="342.19" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (5 samples, 0.08%)</title><rect x="665.6" y="1989" width="1.0" height="15.0" fill="rgb(221,7,34)" rx="2" ry="2" />
<text  x="668.60" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="968.8" y="1829" width="0.4" height="15.0" fill="rgb(237,12,39)" rx="2" ry="2" />
<text  x="971.82" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="383.0" y="1781" width="0.2" height="15.0" fill="rgb(235,86,40)" rx="2" ry="2" />
<text  x="385.99" y="1791.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="677.5" y="1813" width="0.8" height="15.0" fill="rgb(208,38,16)" rx="2" ry="2" />
<text  x="680.49" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="55.0" y="1877" width="0.2" height="15.0" fill="rgb(245,78,53)" rx="2" ry="2" />
<text  x="57.99" y="1887.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (4 samples, 0.07%)</title><rect x="1033.6" y="2037" width="0.8" height="15.0" fill="rgb(237,181,1)" rx="2" ry="2" />
<text  x="1036.63" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="655.3" y="1861" width="0.2" height="15.0" fill="rgb(252,148,33)" rx="2" ry="2" />
<text  x="658.29" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1020.6" y="2005" width="0.1" height="15.0" fill="rgb(234,121,38)" rx="2" ry="2" />
<text  x="1023.55" y="2015.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="810.5" y="1685" width="0.8" height="15.0" fill="rgb(237,194,3)" rx="2" ry="2" />
<text  x="813.47" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="713.6" y="1989" width="0.2" height="15.0" fill="rgb(224,49,50)" rx="2" ry="2" />
<text  x="716.56" y="1999.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="294.0" y="1749" width="0.6" height="15.0" fill="rgb(240,224,27)" rx="2" ry="2" />
<text  x="297.00" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="901.2" y="2037" width="0.2" height="15.0" fill="rgb(236,59,45)" rx="2" ry="2" />
<text  x="904.24" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="354.2" y="2005" width="0.2" height="15.0" fill="rgb(208,127,32)" rx="2" ry="2" />
<text  x="357.25" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (5 samples, 0.08%)</title><rect x="847.1" y="1909" width="1.0" height="15.0" fill="rgb(210,111,51)" rx="2" ry="2" />
<text  x="850.14" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="1031.8" y="2037" width="0.4" height="15.0" fill="rgb(238,136,17)" rx="2" ry="2" />
<text  x="1034.85" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="116.6" y="37" width="0.2" height="15.0" fill="rgb(226,51,27)" rx="2" ry="2" />
<text  x="119.62" y="47.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="294.4" y="1493" width="0.2" height="15.0" fill="rgb(238,92,36)" rx="2" ry="2" />
<text  x="297.40" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1180.7" y="2005" width="0.4" height="15.0" fill="rgb(238,77,46)" rx="2" ry="2" />
<text  x="1183.69" y="2015.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="234.3" y="2037" width="0.4" height="15.0" fill="rgb(218,14,25)" rx="2" ry="2" />
<text  x="237.35" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="51.6" y="1733" width="0.2" height="15.0" fill="rgb(237,110,41)" rx="2" ry="2" />
<text  x="54.62" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1147.0" y="1989" width="0.2" height="15.0" fill="rgb(213,42,45)" rx="2" ry="2" />
<text  x="1149.99" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="179.4" y="1941" width="0.2" height="15.0" fill="rgb(222,5,3)" rx="2" ry="2" />
<text  x="182.45" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="177.1" y="2021" width="1.0" height="15.0" fill="rgb(233,21,37)" rx="2" ry="2" />
<text  x="180.07" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="563.3" y="1845" width="0.2" height="15.0" fill="rgb(209,45,1)" rx="2" ry="2" />
<text  x="566.34" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (37 samples, 0.62%)</title><rect x="132.3" y="2005" width="7.3" height="15.0" fill="rgb(248,62,15)" rx="2" ry="2" />
<text  x="135.28" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="660.6" y="2021" width="0.2" height="15.0" fill="rgb(233,78,6)" rx="2" ry="2" />
<text  x="663.64" y="2031.5" ></text>
</g>
<g >
<title>lockref_put_return (2 samples, 0.03%)</title><rect x="748.2" y="1765" width="0.4" height="15.0" fill="rgb(229,34,53)" rx="2" ry="2" />
<text  x="751.24" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="881.0" y="1877" width="0.2" height="15.0" fill="rgb(252,76,45)" rx="2" ry="2" />
<text  x="884.03" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (47 samples, 0.79%)</title><rect x="1110.5" y="1813" width="9.3" height="15.0" fill="rgb(206,123,32)" rx="2" ry="2" />
<text  x="1113.53" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="69.3" y="1621" width="0.2" height="15.0" fill="rgb(210,161,25)" rx="2" ry="2" />
<text  x="72.26" y="1631.5" ></text>
</g>
<g >
<title>free_pages.part.91 (1 samples, 0.02%)</title><rect x="10.2" y="1845" width="0.2" height="15.0" fill="rgb(212,185,22)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="154.1" y="1685" width="0.2" height="15.0" fill="rgb(251,185,29)" rx="2" ry="2" />
<text  x="157.08" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="215.3" y="1845" width="0.2" height="15.0" fill="rgb(214,206,47)" rx="2" ry="2" />
<text  x="218.32" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="281.7" y="1845" width="0.2" height="15.0" fill="rgb(254,79,38)" rx="2" ry="2" />
<text  x="284.71" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="117.8" y="37" width="0.2" height="15.0" fill="rgb(238,228,17)" rx="2" ry="2" />
<text  x="120.81" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="323.1" y="1717" width="0.2" height="15.0" fill="rgb(231,60,21)" rx="2" ry="2" />
<text  x="326.13" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="210.0" y="2005" width="0.4" height="15.0" fill="rgb(214,203,26)" rx="2" ry="2" />
<text  x="212.97" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="848.9" y="1925" width="0.6" height="15.0" fill="rgb(213,181,34)" rx="2" ry="2" />
<text  x="851.92" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="986.7" y="1973" width="0.2" height="15.0" fill="rgb(210,97,19)" rx="2" ry="2" />
<text  x="989.66" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="471.8" y="1909" width="0.2" height="15.0" fill="rgb(234,181,45)" rx="2" ry="2" />
<text  x="474.77" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="533.4" y="1973" width="0.2" height="15.0" fill="rgb(242,9,34)" rx="2" ry="2" />
<text  x="536.41" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="321.0" y="1605" width="0.2" height="15.0" fill="rgb(236,109,21)" rx="2" ry="2" />
<text  x="323.95" y="1615.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (70 samples, 1.18%)</title><rect x="669.8" y="1957" width="13.8" height="15.0" fill="rgb(233,69,34)" rx="2" ry="2" />
<text  x="672.76" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1143.0" y="1893" width="0.2" height="15.0" fill="rgb(215,86,5)" rx="2" ry="2" />
<text  x="1146.03" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (6 samples, 0.10%)</title><rect x="894.7" y="1957" width="1.2" height="15.0" fill="rgb(205,58,16)" rx="2" ry="2" />
<text  x="897.70" y="1967.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (4 samples, 0.07%)</title><rect x="116.0" y="53" width="0.8" height="15.0" fill="rgb(210,136,28)" rx="2" ry="2" />
<text  x="119.03" y="63.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="69.3" y="1573" width="0.2" height="15.0" fill="rgb(242,130,16)" rx="2" ry="2" />
<text  x="72.26" y="1583.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (5 samples, 0.08%)</title><rect x="100.8" y="2037" width="1.0" height="15.0" fill="rgb(235,134,46)" rx="2" ry="2" />
<text  x="103.77" y="2047.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="126.1" y="1765" width="0.2" height="15.0" fill="rgb(221,97,38)" rx="2" ry="2" />
<text  x="129.14" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="619.8" y="2005" width="0.2" height="15.0" fill="rgb(233,142,35)" rx="2" ry="2" />
<text  x="622.82" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (6 samples, 0.10%)</title><rect x="1142.6" y="2021" width="1.2" height="15.0" fill="rgb(217,33,5)" rx="2" ry="2" />
<text  x="1145.63" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="618.8" y="1893" width="0.2" height="15.0" fill="rgb(210,34,17)" rx="2" ry="2" />
<text  x="621.83" y="1903.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="348.3" y="2037" width="0.4" height="15.0" fill="rgb(206,154,27)" rx="2" ry="2" />
<text  x="351.30" y="2047.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="498.5" y="1589" width="0.2" height="15.0" fill="rgb(222,78,50)" rx="2" ry="2" />
<text  x="501.53" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.9" y="1861" width="0.2" height="15.0" fill="rgb(235,159,34)" rx="2" ry="2" />
<text  x="564.95" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (34 samples, 0.57%)</title><rect x="56.4" y="1957" width="6.7" height="15.0" fill="rgb(207,44,22)" rx="2" ry="2" />
<text  x="59.38" y="1967.5" ></text>
</g>
<g >
<title>__GI___getsockname (95 samples, 1.60%)</title><rect x="585.9" y="1941" width="18.9" height="15.0" fill="rgb(231,206,49)" rx="2" ry="2" />
<text  x="588.93" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1096.3" y="1813" width="0.2" height="15.0" fill="rgb(245,201,31)" rx="2" ry="2" />
<text  x="1099.26" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="742.7" y="1589" width="0.2" height="15.0" fill="rgb(231,49,29)" rx="2" ry="2" />
<text  x="745.69" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="826.9" y="1557" width="0.2" height="15.0" fill="rgb(215,34,23)" rx="2" ry="2" />
<text  x="829.92" y="1567.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="51.6" y="1621" width="0.2" height="15.0" fill="rgb(250,174,27)" rx="2" ry="2" />
<text  x="54.62" y="1631.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="1180.3" y="1989" width="0.2" height="15.0" fill="rgb(240,3,45)" rx="2" ry="2" />
<text  x="1183.29" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (41 samples, 0.69%)</title><rect x="1111.7" y="1541" width="8.1" height="15.0" fill="rgb(206,109,26)" rx="2" ry="2" />
<text  x="1114.72" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (23 samples, 0.39%)</title><rect x="133.9" y="1989" width="4.5" height="15.0" fill="rgb(213,127,1)" rx="2" ry="2" />
<text  x="136.87" y="1999.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="618.2" y="1829" width="0.2" height="15.0" fill="rgb(208,96,18)" rx="2" ry="2" />
<text  x="621.23" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (30 samples, 0.50%)</title><rect x="514.2" y="1989" width="5.9" height="15.0" fill="rgb(234,229,22)" rx="2" ry="2" />
<text  x="517.19" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12 samples, 0.20%)</title><rect x="11.4" y="1877" width="2.4" height="15.0" fill="rgb(242,58,54)" rx="2" ry="2" />
<text  x="14.39" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (4 samples, 0.07%)</title><rect x="1021.9" y="1989" width="0.8" height="15.0" fill="rgb(209,86,52)" rx="2" ry="2" />
<text  x="1024.94" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="33.8" y="1973" width="0.2" height="15.0" fill="rgb(232,202,31)" rx="2" ry="2" />
<text  x="36.78" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1175.7" y="1989" width="0.2" height="15.0" fill="rgb(221,65,37)" rx="2" ry="2" />
<text  x="1178.73" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="161.4" y="1781" width="0.2" height="15.0" fill="rgb(208,159,18)" rx="2" ry="2" />
<text  x="164.41" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="571.5" y="2005" width="0.2" height="15.0" fill="rgb(246,29,53)" rx="2" ry="2" />
<text  x="574.46" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="330.5" y="1445" width="0.2" height="15.0" fill="rgb(212,6,6)" rx="2" ry="2" />
<text  x="333.47" y="1455.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (15 samples, 0.25%)</title><rect x="97.8" y="2037" width="3.0" height="15.0" fill="rgb(221,143,20)" rx="2" ry="2" />
<text  x="100.80" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="104.1" y="37" width="0.2" height="15.0" fill="rgb(247,224,53)" rx="2" ry="2" />
<text  x="107.14" y="47.5" ></text>
</g>
<g >
<title>ip_local_out (145 samples, 2.44%)</title><rect x="776.8" y="1653" width="28.7" height="15.0" fill="rgb(223,122,14)" rx="2" ry="2" />
<text  x="779.78" y="1663.5" >ip..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="505.9" y="2005" width="0.2" height="15.0" fill="rgb(238,160,38)" rx="2" ry="2" />
<text  x="508.86" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="339.2" y="1781" width="0.2" height="15.0" fill="rgb(213,46,10)" rx="2" ry="2" />
<text  x="342.19" y="1791.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="32.0" y="1973" width="0.2" height="15.0" fill="rgb(252,115,35)" rx="2" ry="2" />
<text  x="35.00" y="1983.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="257.3" y="1893" width="0.2" height="15.0" fill="rgb(238,130,50)" rx="2" ry="2" />
<text  x="260.34" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.6" y="1861" width="0.2" height="15.0" fill="rgb(253,144,5)" rx="2" ry="2" />
<text  x="77.61" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="664.8" y="2021" width="0.2" height="15.0" fill="rgb(223,226,28)" rx="2" ry="2" />
<text  x="667.81" y="2031.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1111.3" y="1573" width="0.2" height="15.0" fill="rgb(249,189,39)" rx="2" ry="2" />
<text  x="1114.32" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="491.0" y="1733" width="0.2" height="15.0" fill="rgb(214,156,8)" rx="2" ry="2" />
<text  x="494.00" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="655.3" y="1813" width="0.2" height="15.0" fill="rgb(222,167,8)" rx="2" ry="2" />
<text  x="658.29" y="1823.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="849.5" y="1605" width="0.2" height="15.0" fill="rgb(228,88,0)" rx="2" ry="2" />
<text  x="852.52" y="1615.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="801.0" y="1493" width="0.2" height="15.0" fill="rgb(220,107,46)" rx="2" ry="2" />
<text  x="803.96" y="1503.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="860.8" y="1957" width="0.2" height="15.0" fill="rgb(243,123,38)" rx="2" ry="2" />
<text  x="863.81" y="1967.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="156.3" y="1893" width="0.4" height="15.0" fill="rgb(236,130,2)" rx="2" ry="2" />
<text  x="159.26" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="895.9" y="1749" width="0.2" height="15.0" fill="rgb(245,73,43)" rx="2" ry="2" />
<text  x="898.89" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="569.9" y="2005" width="0.4" height="15.0" fill="rgb(222,225,29)" rx="2" ry="2" />
<text  x="572.88" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (58 samples, 0.97%)</title><rect x="607.5" y="1989" width="11.5" height="15.0" fill="rgb(245,40,18)" rx="2" ry="2" />
<text  x="610.53" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1909" width="0.2" height="15.0" fill="rgb(254,140,15)" rx="2" ry="2" />
<text  x="148.36" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="171.3" y="1877" width="0.2" height="15.0" fill="rgb(210,46,34)" rx="2" ry="2" />
<text  x="174.32" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="316.8" y="1781" width="0.2" height="15.0" fill="rgb(240,104,14)" rx="2" ry="2" />
<text  x="319.79" y="1791.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="235.3" y="2037" width="0.6" height="15.0" fill="rgb(244,180,11)" rx="2" ry="2" />
<text  x="238.34" y="2047.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="895.9" y="1653" width="0.2" height="15.0" fill="rgb(219,19,54)" rx="2" ry="2" />
<text  x="898.89" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="342.0" y="1445" width="0.2" height="15.0" fill="rgb(252,82,17)" rx="2" ry="2" />
<text  x="344.96" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="620.8" y="1973" width="0.2" height="15.0" fill="rgb(240,207,39)" rx="2" ry="2" />
<text  x="623.81" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (27 samples, 0.45%)</title><rect x="421.2" y="2021" width="5.4" height="15.0" fill="rgb(237,160,5)" rx="2" ry="2" />
<text  x="424.24" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="680.1" y="1781" width="0.2" height="15.0" fill="rgb(223,205,11)" rx="2" ry="2" />
<text  x="683.07" y="1791.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="412.5" y="1893" width="0.2" height="15.0" fill="rgb(232,164,6)" rx="2" ry="2" />
<text  x="415.52" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (2 samples, 0.03%)</title><rect x="685.2" y="2005" width="0.4" height="15.0" fill="rgb(232,205,50)" rx="2" ry="2" />
<text  x="688.22" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (45 samples, 0.76%)</title><rect x="942.5" y="2005" width="8.9" height="15.0" fill="rgb(251,101,40)" rx="2" ry="2" />
<text  x="945.47" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="146.9" y="1925" width="0.2" height="15.0" fill="rgb(229,101,22)" rx="2" ry="2" />
<text  x="149.95" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="299.2" y="1557" width="0.2" height="15.0" fill="rgb(209,1,50)" rx="2" ry="2" />
<text  x="302.15" y="1567.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1015.0" y="2021" width="0.2" height="15.0" fill="rgb(207,151,25)" rx="2" ry="2" />
<text  x="1018.00" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="117.4" y="53" width="0.2" height="15.0" fill="rgb(221,33,41)" rx="2" ry="2" />
<text  x="120.42" y="63.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="665.2" y="1989" width="0.4" height="15.0" fill="rgb(234,164,34)" rx="2" ry="2" />
<text  x="668.20" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (11 samples, 0.18%)</title><rect x="379.8" y="1925" width="2.2" height="15.0" fill="rgb(241,19,46)" rx="2" ry="2" />
<text  x="382.82" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="408.4" y="1813" width="0.2" height="15.0" fill="rgb(241,159,35)" rx="2" ry="2" />
<text  x="411.35" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg (389 samples, 6.53%)</title><rect x="258.9" y="1909" width="77.1" height="15.0" fill="rgb(232,51,54)" rx="2" ry="2" />
<text  x="261.92" y="1919.5" >tcp_send..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="142.2" y="1989" width="0.2" height="15.0" fill="rgb(232,200,2)" rx="2" ry="2" />
<text  x="145.19" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="225.8" y="1797" width="0.4" height="15.0" fill="rgb(242,128,10)" rx="2" ry="2" />
<text  x="228.82" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="661.8" y="2005" width="0.2" height="15.0" fill="rgb(214,62,10)" rx="2" ry="2" />
<text  x="664.83" y="2015.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="274.6" y="1877" width="0.2" height="15.0" fill="rgb(232,211,51)" rx="2" ry="2" />
<text  x="277.58" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="709" width="18.1" height="15.0" fill="rgb(243,100,53)" rx="2" ry="2" />
<text  x="106.35" y="719.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="707.2" y="1957" width="0.2" height="15.0" fill="rgb(240,135,37)" rx="2" ry="2" />
<text  x="710.22" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="232.6" y="1957" width="0.4" height="15.0" fill="rgb(211,84,35)" rx="2" ry="2" />
<text  x="235.56" y="1967.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="968.8" y="1717" width="0.2" height="15.0" fill="rgb(251,159,44)" rx="2" ry="2" />
<text  x="971.82" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="920.9" y="2037" width="1.0" height="15.0" fill="rgb(239,188,3)" rx="2" ry="2" />
<text  x="923.86" y="2047.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="321.5" y="1797" width="0.4" height="15.0" fill="rgb(221,208,54)" rx="2" ry="2" />
<text  x="324.55" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="137.8" y="1973" width="0.4" height="15.0" fill="rgb(231,15,26)" rx="2" ry="2" />
<text  x="140.83" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="599.0" y="1845" width="0.2" height="15.0" fill="rgb(226,170,2)" rx="2" ry="2" />
<text  x="602.01" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="979.7" y="2021" width="0.6" height="15.0" fill="rgb(215,20,42)" rx="2" ry="2" />
<text  x="982.72" y="2031.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.2" y="1781" width="0.2" height="15.0" fill="rgb(221,126,35)" rx="2" ry="2" />
<text  x="105.16" y="1791.5" ></text>
</g>
<g >
<title>__internal_add_timer (2 samples, 0.03%)</title><rect x="327.1" y="1749" width="0.4" height="15.0" fill="rgb(215,135,26)" rx="2" ry="2" />
<text  x="330.10" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="706.6" y="1989" width="0.2" height="15.0" fill="rgb(228,55,9)" rx="2" ry="2" />
<text  x="709.62" y="1999.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1129.4" y="2037" width="0.2" height="15.0" fill="rgb(241,146,25)" rx="2" ry="2" />
<text  x="1132.36" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="669.0" y="1877" width="0.2" height="15.0" fill="rgb(210,100,45)" rx="2" ry="2" />
<text  x="671.97" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="341.8" y="1749" width="0.4" height="15.0" fill="rgb(250,211,41)" rx="2" ry="2" />
<text  x="344.76" y="1759.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="742.3" y="1637" width="0.2" height="15.0" fill="rgb(242,110,33)" rx="2" ry="2" />
<text  x="745.30" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="888.2" y="1861" width="0.2" height="15.0" fill="rgb(205,154,21)" rx="2" ry="2" />
<text  x="891.16" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="928.4" y="1925" width="0.6" height="15.0" fill="rgb(222,13,23)" rx="2" ry="2" />
<text  x="931.39" y="1935.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="784.3" y="1557" width="0.4" height="15.0" fill="rgb(212,174,8)" rx="2" ry="2" />
<text  x="787.31" y="1567.5" ></text>
</g>
<g >
<title>folly::netops::recv (7 samples, 0.12%)</title><rect x="52.2" y="1957" width="1.4" height="15.0" fill="rgb(211,142,41)" rx="2" ry="2" />
<text  x="55.21" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (4 samples, 0.07%)</title><rect x="118.8" y="53" width="0.8" height="15.0" fill="rgb(230,151,48)" rx="2" ry="2" />
<text  x="121.80" y="63.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (8 samples, 0.13%)</title><rect x="1122.8" y="1925" width="1.6" height="15.0" fill="rgb(245,160,34)" rx="2" ry="2" />
<text  x="1125.81" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="849.5" y="1925" width="0.2" height="15.0" fill="rgb(210,13,32)" rx="2" ry="2" />
<text  x="852.52" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="875.3" y="1973" width="0.2" height="15.0" fill="rgb(221,215,20)" rx="2" ry="2" />
<text  x="878.28" y="1983.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="398.6" y="1861" width="0.4" height="15.0" fill="rgb(248,164,44)" rx="2" ry="2" />
<text  x="401.64" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="614.1" y="1893" width="0.2" height="15.0" fill="rgb(241,181,52)" rx="2" ry="2" />
<text  x="617.07" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1143.0" y="1957" width="0.2" height="15.0" fill="rgb(245,137,41)" rx="2" ry="2" />
<text  x="1146.03" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (155 samples, 2.60%)</title><rect x="775.2" y="1669" width="30.7" height="15.0" fill="rgb(211,203,0)" rx="2" ry="2" />
<text  x="778.20" y="1679.5" >ip..</text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="534.2" y="1941" width="2.0" height="15.0" fill="rgb(213,191,28)" rx="2" ry="2" />
<text  x="537.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="933" width="18.1" height="15.0" fill="rgb(217,76,25)" rx="2" ry="2" />
<text  x="106.35" y="943.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="984.3" y="1701" width="0.2" height="15.0" fill="rgb(242,226,4)" rx="2" ry="2" />
<text  x="987.28" y="1711.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="93.4" y="1973" width="0.2" height="15.0" fill="rgb(250,94,18)" rx="2" ry="2" />
<text  x="96.44" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="127.7" y="1717" width="0.2" height="15.0" fill="rgb(248,217,49)" rx="2" ry="2" />
<text  x="130.72" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="259.7" y="1653" width="0.2" height="15.0" fill="rgb(217,208,33)" rx="2" ry="2" />
<text  x="262.71" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="866.6" y="1989" width="0.2" height="15.0" fill="rgb(236,36,23)" rx="2" ry="2" />
<text  x="869.56" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="146.6" y="1925" width="0.1" height="15.0" fill="rgb(241,156,9)" rx="2" ry="2" />
<text  x="149.55" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="471.8" y="1893" width="0.2" height="15.0" fill="rgb(215,12,39)" rx="2" ry="2" />
<text  x="474.77" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="707.2" y="1989" width="0.2" height="15.0" fill="rgb(206,89,10)" rx="2" ry="2" />
<text  x="710.22" y="1999.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="1001.7" y="1909" width="0.6" height="15.0" fill="rgb(233,139,24)" rx="2" ry="2" />
<text  x="1004.72" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="128.1" y="1909" width="0.2" height="15.0" fill="rgb(236,32,46)" rx="2" ry="2" />
<text  x="131.12" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="33.0" y="1701" width="0.2" height="15.0" fill="rgb(246,187,15)" rx="2" ry="2" />
<text  x="35.99" y="1711.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="780.3" y="1605" width="0.6" height="15.0" fill="rgb(246,158,36)" rx="2" ry="2" />
<text  x="783.35" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1174.5" y="1973" width="0.2" height="15.0" fill="rgb(250,16,17)" rx="2" ry="2" />
<text  x="1177.54" y="1983.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="519.9" y="1957" width="0.2" height="15.0" fill="rgb(206,94,20)" rx="2" ry="2" />
<text  x="522.93" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1175.5" y="1701" width="0.2" height="15.0" fill="rgb(241,53,8)" rx="2" ry="2" />
<text  x="1178.53" y="1711.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="656.3" y="1989" width="0.2" height="15.0" fill="rgb(213,139,31)" rx="2" ry="2" />
<text  x="659.28" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now@plt (1 samples, 0.02%)</title><rect x="14.2" y="2037" width="0.2" height="15.0" fill="rgb(238,133,22)" rx="2" ry="2" />
<text  x="17.16" y="2047.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="118.4" y="69" width="0.2" height="15.0" fill="rgb(205,39,42)" rx="2" ry="2" />
<text  x="121.41" y="79.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="127.5" y="1893" width="0.2" height="15.0" fill="rgb(247,118,39)" rx="2" ry="2" />
<text  x="130.52" y="1903.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="209.8" y="2037" width="0.2" height="15.0" fill="rgb(227,92,36)" rx="2" ry="2" />
<text  x="212.77" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1028.7" y="1893" width="0.2" height="15.0" fill="rgb(218,8,28)" rx="2" ry="2" />
<text  x="1031.68" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="850.7" y="1893" width="0.4" height="15.0" fill="rgb(237,115,14)" rx="2" ry="2" />
<text  x="853.71" y="1903.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="279.9" y="1813" width="1.0" height="15.0" fill="rgb(242,111,13)" rx="2" ry="2" />
<text  x="282.93" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="280.7" y="1637" width="0.2" height="15.0" fill="rgb(224,38,8)" rx="2" ry="2" />
<text  x="283.72" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::AsyncWriter (1 samples, 0.02%)</title><rect x="567.3" y="1989" width="0.2" height="15.0" fill="rgb(210,112,30)" rx="2" ry="2" />
<text  x="570.30" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="997.6" y="1909" width="0.4" height="15.0" fill="rgb(249,59,39)" rx="2" ry="2" />
<text  x="1000.56" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.6" y="1957" width="0.4" height="15.0" fill="rgb(219,86,39)" rx="2" ry="2" />
<text  x="576.64" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="888.2" y="1893" width="0.2" height="15.0" fill="rgb(229,169,12)" rx="2" ry="2" />
<text  x="891.16" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (13 samples, 0.22%)</title><rect x="11.4" y="1925" width="2.6" height="15.0" fill="rgb(239,13,48)" rx="2" ry="2" />
<text  x="14.39" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (12 samples, 0.20%)</title><rect x="533.8" y="1957" width="2.4" height="15.0" fill="rgb(215,115,24)" rx="2" ry="2" />
<text  x="536.81" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="92.6" y="1973" width="0.8" height="15.0" fill="rgb(254,33,17)" rx="2" ry="2" />
<text  x="95.64" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="662.2" y="2005" width="0.4" height="15.0" fill="rgb(231,27,23)" rx="2" ry="2" />
<text  x="665.23" y="2015.5" ></text>
</g>
<g >
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="363.4" y="1957" width="0.4" height="15.0" fill="rgb(230,19,54)" rx="2" ry="2" />
<text  x="366.37" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="1004.7" y="1989" width="0.2" height="15.0" fill="rgb(222,115,40)" rx="2" ry="2" />
<text  x="1007.70" y="1999.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="509.8" y="1893" width="0.4" height="15.0" fill="rgb(229,222,41)" rx="2" ry="2" />
<text  x="512.83" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="917.9" y="1989" width="0.6" height="15.0" fill="rgb(229,61,23)" rx="2" ry="2" />
<text  x="920.89" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (39 samples, 0.66%)</title><rect x="639.2" y="1989" width="7.8" height="15.0" fill="rgb(214,206,48)" rx="2" ry="2" />
<text  x="642.24" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="328.3" y="1701" width="0.2" height="15.0" fill="rgb(243,209,6)" rx="2" ry="2" />
<text  x="331.29" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="859.4" y="1861" width="0.2" height="15.0" fill="rgb(241,15,7)" rx="2" ry="2" />
<text  x="862.43" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="154.1" y="1909" width="0.2" height="15.0" fill="rgb(216,143,33)" rx="2" ry="2" />
<text  x="157.08" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="684.0" y="1973" width="0.2" height="15.0" fill="rgb(246,114,11)" rx="2" ry="2" />
<text  x="687.03" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="479.1" y="1909" width="0.2" height="15.0" fill="rgb(236,40,38)" rx="2" ry="2" />
<text  x="482.11" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (387 samples, 6.50%)</title><rect x="1052.3" y="2021" width="76.7" height="15.0" fill="rgb(206,198,17)" rx="2" ry="2" />
<text  x="1055.26" y="2031.5" >do_sysca..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="661.6" y="2005" width="0.2" height="15.0" fill="rgb(231,59,43)" rx="2" ry="2" />
<text  x="664.64" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="616.8" y="1573" width="0.2" height="15.0" fill="rgb(237,189,45)" rx="2" ry="2" />
<text  x="619.85" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="563.3" y="1973" width="0.2" height="15.0" fill="rgb(234,206,48)" rx="2" ry="2" />
<text  x="566.34" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="916.9" y="2037" width="0.4" height="15.0" fill="rgb(210,93,34)" rx="2" ry="2" />
<text  x="919.90" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="392.9" y="1621" width="0.2" height="15.0" fill="rgb(229,48,22)" rx="2" ry="2" />
<text  x="395.90" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="622.2" y="1973" width="0.2" height="15.0" fill="rgb(207,208,2)" rx="2" ry="2" />
<text  x="625.20" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="453.7" y="1893" width="0.2" height="15.0" fill="rgb(239,219,51)" rx="2" ry="2" />
<text  x="456.74" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="994.4" y="1957" width="2.0" height="15.0" fill="rgb(221,192,43)" rx="2" ry="2" />
<text  x="997.39" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="89.3" y="1957" width="0.4" height="15.0" fill="rgb(214,144,19)" rx="2" ry="2" />
<text  x="92.27" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10 samples, 0.17%)</title><rect x="940.3" y="1973" width="2.0" height="15.0" fill="rgb(212,124,46)" rx="2" ry="2" />
<text  x="943.29" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="747.3" y="1605" width="0.2" height="15.0" fill="rgb(211,218,18)" rx="2" ry="2" />
<text  x="750.25" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="53.6" y="1957" width="0.6" height="15.0" fill="rgb(208,106,52)" rx="2" ry="2" />
<text  x="56.60" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="631.5" y="2037" width="0.2" height="15.0" fill="rgb(239,59,16)" rx="2" ry="2" />
<text  x="634.51" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="312.6" y="1637" width="0.2" height="15.0" fill="rgb(209,164,47)" rx="2" ry="2" />
<text  x="315.63" y="1647.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="713.8" y="1941" width="0.2" height="15.0" fill="rgb(221,52,8)" rx="2" ry="2" />
<text  x="716.76" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="91.3" y="1909" width="0.2" height="15.0" fill="rgb(212,109,49)" rx="2" ry="2" />
<text  x="94.26" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1175.9" y="1989" width="0.4" height="15.0" fill="rgb(220,183,19)" rx="2" ry="2" />
<text  x="1178.93" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="547.3" y="1765" width="0.2" height="15.0" fill="rgb(206,170,15)" rx="2" ry="2" />
<text  x="550.28" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="717.7" y="1909" width="0.2" height="15.0" fill="rgb(225,109,44)" rx="2" ry="2" />
<text  x="720.72" y="1919.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (4 samples, 0.07%)</title><rect x="1019.4" y="1989" width="0.8" height="15.0" fill="rgb(211,17,5)" rx="2" ry="2" />
<text  x="1022.36" y="1999.5" ></text>
</g>
<g >
<title>schedule (14 samples, 0.24%)</title><rect x="14.6" y="1941" width="2.7" height="15.0" fill="rgb(208,51,4)" rx="2" ry="2" />
<text  x="17.56" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="148.9" y="1845" width="0.2" height="15.0" fill="rgb(238,175,25)" rx="2" ry="2" />
<text  x="151.93" y="1855.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="161.8" y="1877" width="0.4" height="15.0" fill="rgb(224,153,23)" rx="2" ry="2" />
<text  x="164.81" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="297.2" y="1541" width="0.6" height="15.0" fill="rgb(233,79,24)" rx="2" ry="2" />
<text  x="300.17" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1144.8" y="1941" width="0.2" height="15.0" fill="rgb(230,203,52)" rx="2" ry="2" />
<text  x="1147.81" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="274.8" y="1541" width="0.2" height="15.0" fill="rgb(211,103,3)" rx="2" ry="2" />
<text  x="277.78" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="576.4" y="1973" width="0.2" height="15.0" fill="rgb(240,195,42)" rx="2" ry="2" />
<text  x="579.42" y="1983.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="328.1" y="1669" width="0.2" height="15.0" fill="rgb(239,8,2)" rx="2" ry="2" />
<text  x="331.09" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="638.6" y="1989" width="0.4" height="15.0" fill="rgb(232,65,11)" rx="2" ry="2" />
<text  x="641.65" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (3 samples, 0.05%)</title><rect x="145.4" y="1925" width="0.6" height="15.0" fill="rgb(217,161,32)" rx="2" ry="2" />
<text  x="148.36" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="706.8" y="2021" width="0.2" height="15.0" fill="rgb(215,53,14)" rx="2" ry="2" />
<text  x="709.82" y="2031.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="325.1" y="1813" width="0.2" height="15.0" fill="rgb(253,105,35)" rx="2" ry="2" />
<text  x="328.12" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="640.4" y="1973" width="0.2" height="15.0" fill="rgb(227,183,17)" rx="2" ry="2" />
<text  x="643.43" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="741.3" y="1701" width="0.2" height="15.0" fill="rgb(215,195,29)" rx="2" ry="2" />
<text  x="744.31" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="571.5" y="1989" width="0.2" height="15.0" fill="rgb(213,15,53)" rx="2" ry="2" />
<text  x="574.46" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.87%)</title><rect x="906.6" y="2021" width="10.3" height="15.0" fill="rgb(236,79,37)" rx="2" ry="2" />
<text  x="909.59" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1175.5" y="1749" width="0.2" height="15.0" fill="rgb(224,146,23)" rx="2" ry="2" />
<text  x="1178.53" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.8" y="1141" width="0.2" height="15.0" fill="rgb(241,226,27)" rx="2" ry="2" />
<text  x="124.78" y="1151.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="154.3" y="1925" width="0.4" height="15.0" fill="rgb(233,42,12)" rx="2" ry="2" />
<text  x="157.28" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="498.1" y="1861" width="0.8" height="15.0" fill="rgb(236,119,16)" rx="2" ry="2" />
<text  x="501.13" y="1871.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="256.5" y="1605" width="0.2" height="15.0" fill="rgb(217,173,5)" rx="2" ry="2" />
<text  x="259.54" y="1615.5" ></text>
</g>
<g >
<title>get_empty_filp (35 samples, 0.59%)</title><rect x="402.4" y="1925" width="6.9" height="15.0" fill="rgb(213,4,52)" rx="2" ry="2" />
<text  x="405.41" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="69.3" y="1653" width="0.2" height="15.0" fill="rgb(210,119,19)" rx="2" ry="2" />
<text  x="72.26" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="898.9" y="1861" width="0.2" height="15.0" fill="rgb(234,91,41)" rx="2" ry="2" />
<text  x="901.86" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="994.0" y="1957" width="0.2" height="15.0" fill="rgb(219,221,52)" rx="2" ry="2" />
<text  x="996.99" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1175.5" y="1765" width="0.2" height="15.0" fill="rgb(243,123,35)" rx="2" ry="2" />
<text  x="1178.53" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="515.4" y="1941" width="0.6" height="15.0" fill="rgb(223,30,51)" rx="2" ry="2" />
<text  x="518.37" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1149.4" y="2053" width="0.2" height="15.0" fill="rgb(231,76,54)" rx="2" ry="2" />
<text  x="1152.37" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="537.0" y="1893" width="0.2" height="15.0" fill="rgb(232,204,4)" rx="2" ry="2" />
<text  x="539.98" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="521.1" y="1989" width="1.2" height="15.0" fill="rgb(217,59,20)" rx="2" ry="2" />
<text  x="524.12" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.8" y="1941" width="0.2" height="15.0" fill="rgb(247,105,6)" rx="2" ry="2" />
<text  x="576.84" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="986.7" y="1941" width="0.2" height="15.0" fill="rgb(245,54,2)" rx="2" ry="2" />
<text  x="989.66" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1163.4" y="1941" width="0.6" height="15.0" fill="rgb(208,67,38)" rx="2" ry="2" />
<text  x="1166.44" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="77.8" y="1925" width="0.2" height="15.0" fill="rgb(214,88,13)" rx="2" ry="2" />
<text  x="80.78" y="1935.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1010.2" y="1909" width="0.2" height="15.0" fill="rgb(222,103,42)" rx="2" ry="2" />
<text  x="1013.25" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;unsigned long*, __gnu_cxx::__ops::_Iter_pred&lt;folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="999.1" y="1861" width="0.2" height="15.0" fill="rgb(222,6,8)" rx="2" ry="2" />
<text  x="1002.15" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1144.8" y="1989" width="0.2" height="15.0" fill="rgb(216,223,53)" rx="2" ry="2" />
<text  x="1147.81" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="614.1" y="1909" width="0.2" height="15.0" fill="rgb(206,133,52)" rx="2" ry="2" />
<text  x="617.07" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="405.4" y="1893" width="0.4" height="15.0" fill="rgb(233,10,47)" rx="2" ry="2" />
<text  x="408.38" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="259.7" y="1589" width="0.2" height="15.0" fill="rgb(229,104,5)" rx="2" ry="2" />
<text  x="262.71" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="1003.9" y="1973" width="0.8" height="15.0" fill="rgb(251,27,3)" rx="2" ry="2" />
<text  x="1006.90" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="675.5" y="1861" width="0.4" height="15.0" fill="rgb(245,9,16)" rx="2" ry="2" />
<text  x="678.51" y="1871.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (9 samples, 0.15%)</title><rect x="227.4" y="1845" width="1.8" height="15.0" fill="rgb(215,90,47)" rx="2" ry="2" />
<text  x="230.41" y="1855.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="460.7" y="1653" width="0.2" height="15.0" fill="rgb(215,8,46)" rx="2" ry="2" />
<text  x="463.68" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="547.3" y="1941" width="0.2" height="15.0" fill="rgb(239,96,51)" rx="2" ry="2" />
<text  x="550.28" y="1951.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="328.5" y="1749" width="0.2" height="15.0" fill="rgb(246,10,2)" rx="2" ry="2" />
<text  x="331.49" y="1759.5" ></text>
</g>
<g >
<title>folly::netops::recv (5 samples, 0.08%)</title><rect x="63.1" y="1973" width="1.0" height="15.0" fill="rgb(217,93,18)" rx="2" ry="2" />
<text  x="66.11" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="33.0" y="1509" width="0.2" height="15.0" fill="rgb(243,213,47)" rx="2" ry="2" />
<text  x="35.99" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="339.2" y="1733" width="0.2" height="15.0" fill="rgb(232,79,39)" rx="2" ry="2" />
<text  x="342.19" y="1743.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="618.0" y="1845" width="0.2" height="15.0" fill="rgb(214,163,25)" rx="2" ry="2" />
<text  x="621.03" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="519.5" y="1941" width="0.2" height="15.0" fill="rgb(215,54,53)" rx="2" ry="2" />
<text  x="522.54" y="1951.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(218,109,51)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (1 samples, 0.02%)</title><rect x="34.0" y="1973" width="0.2" height="15.0" fill="rgb(238,85,6)" rx="2" ry="2" />
<text  x="36.98" y="1983.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="734.6" y="1797" width="0.4" height="15.0" fill="rgb(253,90,26)" rx="2" ry="2" />
<text  x="737.57" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="145.8" y="1893" width="0.2" height="15.0" fill="rgb(228,47,47)" rx="2" ry="2" />
<text  x="148.76" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1175.9" y="2005" width="0.4" height="15.0" fill="rgb(240,126,48)" rx="2" ry="2" />
<text  x="1178.93" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="568.1" y="1941" width="0.2" height="15.0" fill="rgb(221,122,34)" rx="2" ry="2" />
<text  x="571.09" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.31%)</title><rect x="103.3" y="85" width="15.5" height="15.0" fill="rgb(233,160,26)" rx="2" ry="2" />
<text  x="106.35" y="95.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="800.8" y="1493" width="0.2" height="15.0" fill="rgb(212,140,47)" rx="2" ry="2" />
<text  x="803.76" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (34 samples, 0.57%)</title><rect x="306.9" y="1669" width="6.7" height="15.0" fill="rgb(235,81,5)" rx="2" ry="2" />
<text  x="309.88" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="521.9" y="1941" width="0.2" height="15.0" fill="rgb(238,16,13)" rx="2" ry="2" />
<text  x="524.91" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="1063.6" y="2005" width="0.2" height="15.0" fill="rgb(243,122,13)" rx="2" ry="2" />
<text  x="1066.56" y="2015.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="805.3" y="1605" width="0.2" height="15.0" fill="rgb(246,142,45)" rx="2" ry="2" />
<text  x="808.32" y="1615.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (14 samples, 0.24%)</title><rect x="14.6" y="1893" width="2.7" height="15.0" fill="rgb(221,204,24)" rx="2" ry="2" />
<text  x="17.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 0.49%)</title><rect x="960.9" y="2021" width="5.7" height="15.0" fill="rgb(251,200,39)" rx="2" ry="2" />
<text  x="963.90" y="2031.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="887.0" y="1957" width="0.2" height="15.0" fill="rgb(235,167,15)" rx="2" ry="2" />
<text  x="889.97" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (78 samples, 1.31%)</title><rect x="875.5" y="1973" width="15.4" height="15.0" fill="rgb(235,141,46)" rx="2" ry="2" />
<text  x="878.48" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (7 samples, 0.12%)</title><rect x="298.0" y="1573" width="1.4" height="15.0" fill="rgb(223,20,18)" rx="2" ry="2" />
<text  x="300.96" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="968.8" y="1845" width="0.4" height="15.0" fill="rgb(241,73,25)" rx="2" ry="2" />
<text  x="971.82" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (11 samples, 0.18%)</title><rect x="184.6" y="1957" width="2.2" height="15.0" fill="rgb(237,41,47)" rx="2" ry="2" />
<text  x="187.60" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="630.3" y="1925" width="0.2" height="15.0" fill="rgb(253,3,47)" rx="2" ry="2" />
<text  x="633.32" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="845.4" y="1925" width="0.2" height="15.0" fill="rgb(212,99,22)" rx="2" ry="2" />
<text  x="848.35" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="498.1" y="1797" width="0.8" height="15.0" fill="rgb(248,66,49)" rx="2" ry="2" />
<text  x="501.13" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.2" y="1829" width="0.2" height="15.0" fill="rgb(209,7,54)" rx="2" ry="2" />
<text  x="163.23" y="1839.5" ></text>
</g>
<g >
<title>errseq_sample (1 samples, 0.02%)</title><rect x="402.2" y="1925" width="0.2" height="15.0" fill="rgb(225,16,40)" rx="2" ry="2" />
<text  x="405.21" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="461.3" y="1829" width="0.2" height="15.0" fill="rgb(234,32,50)" rx="2" ry="2" />
<text  x="464.27" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="99.6" y="1941" width="0.2" height="15.0" fill="rgb(243,158,28)" rx="2" ry="2" />
<text  x="102.58" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.02%)</title><rect x="102.4" y="1733" width="23.7" height="15.0" fill="rgb(215,216,42)" rx="2" ry="2" />
<text  x="105.35" y="1743.5" >[..</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="14.2" y="2053" width="0.2" height="15.0" fill="rgb(233,11,34)" rx="2" ry="2" />
<text  x="17.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="662.2" y="2021" width="0.4" height="15.0" fill="rgb(243,28,32)" rx="2" ry="2" />
<text  x="665.23" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (1 samples, 0.02%)</title><rect x="713.2" y="1989" width="0.2" height="15.0" fill="rgb(249,70,3)" rx="2" ry="2" />
<text  x="716.16" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="61.5" y="1829" width="0.2" height="15.0" fill="rgb(248,94,26)" rx="2" ry="2" />
<text  x="64.53" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="655.3" y="1877" width="0.2" height="15.0" fill="rgb(234,67,21)" rx="2" ry="2" />
<text  x="658.29" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="914.3" y="1989" width="0.2" height="15.0" fill="rgb(219,217,39)" rx="2" ry="2" />
<text  x="917.32" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="661.8" y="1973" width="0.2" height="15.0" fill="rgb(210,170,24)" rx="2" ry="2" />
<text  x="664.83" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (6 samples, 0.10%)</title><rect x="881.8" y="1925" width="1.2" height="15.0" fill="rgb(208,180,19)" rx="2" ry="2" />
<text  x="884.82" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="230.0" y="1877" width="0.2" height="15.0" fill="rgb(246,188,50)" rx="2" ry="2" />
<text  x="232.99" y="1887.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="986.7" y="1893" width="0.2" height="15.0" fill="rgb(227,225,31)" rx="2" ry="2" />
<text  x="989.66" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="872.9" y="1893" width="0.2" height="15.0" fill="rgb(215,94,52)" rx="2" ry="2" />
<text  x="875.90" y="1903.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="519.5" y="1957" width="0.2" height="15.0" fill="rgb(225,118,4)" rx="2" ry="2" />
<text  x="522.54" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="627.9" y="2005" width="0.2" height="15.0" fill="rgb(210,31,54)" rx="2" ry="2" />
<text  x="630.94" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="161.4" y="1813" width="0.2" height="15.0" fill="rgb(210,41,11)" rx="2" ry="2" />
<text  x="164.41" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="142.6" y="1909" width="0.4" height="15.0" fill="rgb(234,145,12)" rx="2" ry="2" />
<text  x="145.59" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1107.0" y="1781" width="0.2" height="15.0" fill="rgb(237,192,11)" rx="2" ry="2" />
<text  x="1109.96" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="320.4" y="1733" width="0.2" height="15.0" fill="rgb(221,202,47)" rx="2" ry="2" />
<text  x="323.36" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="102.8" y="1237" width="19.6" height="15.0" fill="rgb(222,56,48)" rx="2" ry="2" />
<text  x="105.75" y="1247.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (44 samples, 0.74%)</title><rect x="738.7" y="1749" width="8.8" height="15.0" fill="rgb(239,27,15)" rx="2" ry="2" />
<text  x="741.73" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="661.2" y="2005" width="0.2" height="15.0" fill="rgb(226,199,51)" rx="2" ry="2" />
<text  x="664.24" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.60%)</title><rect x="631.9" y="2021" width="7.1" height="15.0" fill="rgb(208,207,49)" rx="2" ry="2" />
<text  x="634.91" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="339.2" y="1909" width="0.2" height="15.0" fill="rgb(238,47,54)" rx="2" ry="2" />
<text  x="342.19" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.03%)</title><rect x="143.8" y="1941" width="0.4" height="15.0" fill="rgb(239,55,30)" rx="2" ry="2" />
<text  x="146.78" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(253,4,21)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="141.8" y="2005" width="0.6" height="15.0" fill="rgb(252,104,54)" rx="2" ry="2" />
<text  x="144.79" y="2015.5" ></text>
</g>
<g >
<title>add_wait_queue (6 samples, 0.10%)</title><rect x="458.1" y="1909" width="1.2" height="15.0" fill="rgb(225,0,5)" rx="2" ry="2" />
<text  x="461.10" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (3 samples, 0.05%)</title><rect x="643.8" y="1925" width="0.6" height="15.0" fill="rgb(250,55,19)" rx="2" ry="2" />
<text  x="646.80" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1175.5" y="1813" width="0.2" height="15.0" fill="rgb(211,49,52)" rx="2" ry="2" />
<text  x="1178.53" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="929.4" y="1925" width="0.2" height="15.0" fill="rgb(251,166,10)" rx="2" ry="2" />
<text  x="932.39" y="1935.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.10%)</title><rect x="195.3" y="2021" width="1.2" height="15.0" fill="rgb(221,165,33)" rx="2" ry="2" />
<text  x="198.30" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1129.9" y="1957" width="0.2" height="15.0" fill="rgb(225,72,3)" rx="2" ry="2" />
<text  x="1132.95" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="150.9" y="1893" width="0.6" height="15.0" fill="rgb(226,213,34)" rx="2" ry="2" />
<text  x="153.91" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="1172.6" y="1973" width="0.2" height="15.0" fill="rgb(253,25,47)" rx="2" ry="2" />
<text  x="1175.56" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="105.5" y="37" width="0.2" height="15.0" fill="rgb(211,30,41)" rx="2" ry="2" />
<text  x="108.53" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (13 samples, 0.22%)</title><rect x="67.1" y="1957" width="2.6" height="15.0" fill="rgb(214,91,21)" rx="2" ry="2" />
<text  x="70.08" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (92 samples, 1.55%)</title><rect x="487.4" y="2021" width="18.3" height="15.0" fill="rgb(242,199,45)" rx="2" ry="2" />
<text  x="490.43" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="215.3" y="1861" width="0.2" height="15.0" fill="rgb(247,115,48)" rx="2" ry="2" />
<text  x="218.32" y="1871.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1151.6" y="1973" width="0.3" height="15.0" fill="rgb(226,9,30)" rx="2" ry="2" />
<text  x="1154.55" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (5 samples, 0.08%)</title><rect x="629.7" y="1941" width="1.0" height="15.0" fill="rgb(226,229,5)" rx="2" ry="2" />
<text  x="632.73" y="1951.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="714.7" y="1813" width="0.2" height="15.0" fill="rgb(214,204,26)" rx="2" ry="2" />
<text  x="717.75" y="1823.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="73.8" y="1957" width="0.2" height="15.0" fill="rgb(209,100,42)" rx="2" ry="2" />
<text  x="76.82" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (11 samples, 0.18%)</title><rect x="744.1" y="1669" width="2.2" height="15.0" fill="rgb(250,137,54)" rx="2" ry="2" />
<text  x="747.08" y="1679.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="901.6" y="1973" width="0.2" height="15.0" fill="rgb(228,105,35)" rx="2" ry="2" />
<text  x="904.64" y="1983.5" ></text>
</g>
<g >
<title>__destroy_inode (6 samples, 0.10%)</title><rect x="741.9" y="1685" width="1.2" height="15.0" fill="rgb(243,181,16)" rx="2" ry="2" />
<text  x="744.90" y="1695.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (11 samples, 0.18%)</title><rect x="994.2" y="1973" width="2.2" height="15.0" fill="rgb(222,65,0)" rx="2" ry="2" />
<text  x="997.19" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="849.5" y="1829" width="0.2" height="15.0" fill="rgb(251,227,34)" rx="2" ry="2" />
<text  x="852.52" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="520.1" y="1989" width="0.4" height="15.0" fill="rgb(205,165,16)" rx="2" ry="2" />
<text  x="523.13" y="1999.5" ></text>
</g>
<g >
<title>tcp_poll (23 samples, 0.39%)</title><rect x="498.9" y="1893" width="4.6" height="15.0" fill="rgb(246,10,51)" rx="2" ry="2" />
<text  x="501.93" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="980.3" y="2037" width="0.2" height="15.0" fill="rgb(219,148,7)" rx="2" ry="2" />
<text  x="983.32" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="315.8" y="1701" width="0.2" height="15.0" fill="rgb(212,86,23)" rx="2" ry="2" />
<text  x="318.80" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="574.2" y="1925" width="0.2" height="15.0" fill="rgb(223,58,19)" rx="2" ry="2" />
<text  x="577.24" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="714.9" y="1957" width="0.2" height="15.0" fill="rgb(241,47,2)" rx="2" ry="2" />
<text  x="717.95" y="1967.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="215.3" y="1621" width="0.2" height="15.0" fill="rgb(235,226,24)" rx="2" ry="2" />
<text  x="218.32" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="460.7" y="1765" width="0.2" height="15.0" fill="rgb(246,32,30)" rx="2" ry="2" />
<text  x="463.68" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="491.0" y="1845" width="0.2" height="15.0" fill="rgb(243,101,47)" rx="2" ry="2" />
<text  x="494.00" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1163.8" y="1765" width="0.2" height="15.0" fill="rgb(246,140,17)" rx="2" ry="2" />
<text  x="1166.84" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="263.9" y="1877" width="0.4" height="15.0" fill="rgb(239,68,41)" rx="2" ry="2" />
<text  x="266.88" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1007.3" y="1957" width="0.2" height="15.0" fill="rgb(218,178,18)" rx="2" ry="2" />
<text  x="1010.27" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="547.9" y="1957" width="0.2" height="15.0" fill="rgb(213,157,34)" rx="2" ry="2" />
<text  x="550.88" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19 samples, 0.32%)</title><rect x="389.3" y="1925" width="3.8" height="15.0" fill="rgb(234,119,50)" rx="2" ry="2" />
<text  x="392.33" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="116.8" y="37" width="0.2" height="15.0" fill="rgb(249,5,53)" rx="2" ry="2" />
<text  x="119.82" y="47.5" ></text>
</g>
<g >
<title>ep_send_events_proc (89 samples, 1.49%)</title><rect x="488.0" y="1941" width="17.7" height="15.0" fill="rgb(247,64,38)" rx="2" ry="2" />
<text  x="491.02" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="406.6" y="1909" width="0.2" height="15.0" fill="rgb(247,13,19)" rx="2" ry="2" />
<text  x="409.57" y="1919.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="895.9" y="1637" width="0.2" height="15.0" fill="rgb(231,99,50)" rx="2" ry="2" />
<text  x="898.89" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="505.9" y="1813" width="0.2" height="15.0" fill="rgb(225,43,52)" rx="2" ry="2" />
<text  x="508.86" y="1823.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="730.4" y="1845" width="0.8" height="15.0" fill="rgb(222,198,51)" rx="2" ry="2" />
<text  x="733.41" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="933.9" y="1861" width="0.2" height="15.0" fill="rgb(211,56,16)" rx="2" ry="2" />
<text  x="936.94" y="1871.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.4" y="1077" width="0.2" height="15.0" fill="rgb(245,50,53)" rx="2" ry="2" />
<text  x="124.38" y="1087.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1033.4" y="1925" width="0.2" height="15.0" fill="rgb(234,14,37)" rx="2" ry="2" />
<text  x="1036.43" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="705.4" y="1989" width="1.2" height="15.0" fill="rgb(247,10,52)" rx="2" ry="2" />
<text  x="708.44" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::FunctionScheduler::RepeatFunc*, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1797" width="0.2" height="15.0" fill="rgb(231,226,46)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1142.8" y="1989" width="0.2" height="15.0" fill="rgb(211,49,10)" rx="2" ry="2" />
<text  x="1145.83" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="514.0" y="1957" width="0.2" height="15.0" fill="rgb(245,101,49)" rx="2" ry="2" />
<text  x="516.99" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="784.1" y="1557" width="0.2" height="15.0" fill="rgb(207,88,28)" rx="2" ry="2" />
<text  x="787.11" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="628.1" y="2005" width="0.2" height="15.0" fill="rgb(221,6,25)" rx="2" ry="2" />
<text  x="631.14" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="904.6" y="2037" width="0.2" height="15.0" fill="rgb(236,114,6)" rx="2" ry="2" />
<text  x="907.61" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="341.8" y="1701" width="0.4" height="15.0" fill="rgb(206,60,33)" rx="2" ry="2" />
<text  x="344.76" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="339.2" y="1861" width="0.2" height="15.0" fill="rgb(248,83,31)" rx="2" ry="2" />
<text  x="342.19" y="1871.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="101.8" y="2005" width="0.2" height="15.0" fill="rgb(213,209,29)" rx="2" ry="2" />
<text  x="104.76" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="113.5" y="37" width="0.2" height="15.0" fill="rgb(238,142,28)" rx="2" ry="2" />
<text  x="116.45" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (114 samples, 1.91%)</title><rect x="142.4" y="1973" width="22.6" height="15.0" fill="rgb(207,110,6)" rx="2" ry="2" />
<text  x="145.39" y="1983.5" >f..</text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (4 samples, 0.07%)</title><rect x="518.1" y="1957" width="0.8" height="15.0" fill="rgb(206,24,21)" rx="2" ry="2" />
<text  x="521.15" y="1967.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="810.9" y="1653" width="0.4" height="15.0" fill="rgb(207,39,32)" rx="2" ry="2" />
<text  x="813.87" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="172.7" y="1893" width="0.2" height="15.0" fill="rgb(224,35,7)" rx="2" ry="2" />
<text  x="175.71" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="163.4" y="1925" width="0.4" height="15.0" fill="rgb(234,14,16)" rx="2" ry="2" />
<text  x="166.40" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (6 samples, 0.10%)</title><rect x="296.6" y="1653" width="1.2" height="15.0" fill="rgb(215,161,3)" rx="2" ry="2" />
<text  x="299.58" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="522.7" y="1973" width="1.0" height="15.0" fill="rgb(253,45,26)" rx="2" ry="2" />
<text  x="525.71" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="460.7" y="1813" width="0.2" height="15.0" fill="rgb(239,148,43)" rx="2" ry="2" />
<text  x="463.68" y="1823.5" ></text>
</g>
<g >
<title>skb_clone (21 samples, 0.35%)</title><rect x="317.0" y="1813" width="4.2" height="15.0" fill="rgb(243,35,10)" rx="2" ry="2" />
<text  x="319.99" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="342.8" y="2021" width="0.4" height="15.0" fill="rgb(248,130,3)" rx="2" ry="2" />
<text  x="345.75" y="2031.5" ></text>
</g>
<g >
<title>__fdget (13 samples, 0.22%)</title><rect x="339.6" y="1941" width="2.6" height="15.0" fill="rgb(223,24,31)" rx="2" ry="2" />
<text  x="342.58" y="1951.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (5 samples, 0.08%)</title><rect x="749.8" y="1781" width="1.0" height="15.0" fill="rgb(220,37,23)" rx="2" ry="2" />
<text  x="752.83" y="1791.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="477.1" y="1941" width="0.2" height="15.0" fill="rgb(245,36,29)" rx="2" ry="2" />
<text  x="480.12" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(232,83,0)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>malloc (9 samples, 0.15%)</title><rect x="1028.9" y="2037" width="1.8" height="15.0" fill="rgb(220,93,47)" rx="2" ry="2" />
<text  x="1031.87" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="471.8" y="1941" width="0.2" height="15.0" fill="rgb(250,126,9)" rx="2" ry="2" />
<text  x="474.77" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="805.9" y="1653" width="0.2" height="15.0" fill="rgb(208,135,7)" rx="2" ry="2" />
<text  x="808.92" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="888.4" y="1909" width="0.6" height="15.0" fill="rgb(250,46,53)" rx="2" ry="2" />
<text  x="891.36" y="1919.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="301.1" y="1669" width="0.2" height="15.0" fill="rgb(215,229,9)" rx="2" ry="2" />
<text  x="304.14" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="844.8" y="1893" width="0.2" height="15.0" fill="rgb(205,66,0)" rx="2" ry="2" />
<text  x="847.76" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (14 samples, 0.24%)</title><rect x="893.5" y="1989" width="2.8" height="15.0" fill="rgb(220,165,1)" rx="2" ry="2" />
<text  x="896.51" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1011.8" y="2005" width="0.2" height="15.0" fill="rgb(247,210,50)" rx="2" ry="2" />
<text  x="1014.83" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="119.6" y="53" width="0.2" height="15.0" fill="rgb(230,55,53)" rx="2" ry="2" />
<text  x="122.60" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="120.0" y="69" width="0.4" height="15.0" fill="rgb(217,136,41)" rx="2" ry="2" />
<text  x="122.99" y="79.5" ></text>
</g>
<g >
<title>sched_clock_tick (1 samples, 0.02%)</title><rect x="453.7" y="1861" width="0.2" height="15.0" fill="rgb(243,160,33)" rx="2" ry="2" />
<text  x="456.74" y="1871.5" ></text>
</g>
<g >
<title>remove_wait_queue (15 samples, 0.25%)</title><rect x="468.8" y="1941" width="3.0" height="15.0" fill="rgb(226,61,34)" rx="2" ry="2" />
<text  x="471.80" y="1951.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="383.2" y="1925" width="0.2" height="15.0" fill="rgb(230,71,40)" rx="2" ry="2" />
<text  x="386.18" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="330.5" y="1605" width="0.2" height="15.0" fill="rgb(237,176,46)" rx="2" ry="2" />
<text  x="333.47" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="461.7" y="1925" width="0.2" height="15.0" fill="rgb(208,61,29)" rx="2" ry="2" />
<text  x="464.67" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="708.2" y="2021" width="0.2" height="15.0" fill="rgb(232,69,52)" rx="2" ry="2" />
<text  x="711.21" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="717.7" y="1893" width="0.2" height="15.0" fill="rgb(224,84,21)" rx="2" ry="2" />
<text  x="720.72" y="1903.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="812.9" y="1669" width="0.2" height="15.0" fill="rgb(215,173,17)" rx="2" ry="2" />
<text  x="815.85" y="1679.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="128.7" y="1957" width="0.2" height="15.0" fill="rgb(217,65,48)" rx="2" ry="2" />
<text  x="131.71" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="128.5" y="1941" width="0.2" height="15.0" fill="rgb(237,121,7)" rx="2" ry="2" />
<text  x="131.52" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (12 samples, 0.20%)</title><rect x="1146.2" y="2005" width="2.4" height="15.0" fill="rgb(247,170,30)" rx="2" ry="2" />
<text  x="1149.20" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (657 samples, 11.03%)</title><rect x="717.9" y="1941" width="130.2" height="15.0" fill="rgb(237,217,22)" rx="2" ry="2" />
<text  x="720.92" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="284.3" y="1797" width="0.2" height="15.0" fill="rgb(230,146,49)" rx="2" ry="2" />
<text  x="287.29" y="1807.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="714.7" y="1765" width="0.2" height="15.0" fill="rgb(206,158,4)" rx="2" ry="2" />
<text  x="717.75" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (5 samples, 0.08%)</title><rect x="985.9" y="2005" width="1.0" height="15.0" fill="rgb(216,111,27)" rx="2" ry="2" />
<text  x="988.87" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="103.3" y="117" width="17.3" height="15.0" fill="rgb(206,119,38)" rx="2" ry="2" />
<text  x="106.35" y="127.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="596.2" y="1701" width="0.2" height="15.0" fill="rgb(232,128,39)" rx="2" ry="2" />
<text  x="599.23" y="1711.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="148.9" y="1813" width="0.2" height="15.0" fill="rgb(210,104,19)" rx="2" ry="2" />
<text  x="151.93" y="1823.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="735.8" y="1765" width="0.2" height="15.0" fill="rgb(248,86,21)" rx="2" ry="2" />
<text  x="738.76" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (16 samples, 0.27%)</title><rect x="954.4" y="2005" width="3.1" height="15.0" fill="rgb(206,123,25)" rx="2" ry="2" />
<text  x="957.36" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="171.3" y="1845" width="0.2" height="15.0" fill="rgb(208,134,40)" rx="2" ry="2" />
<text  x="174.32" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="392.9" y="1717" width="0.2" height="15.0" fill="rgb(227,220,24)" rx="2" ry="2" />
<text  x="395.90" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="339.0" y="1861" width="0.2" height="15.0" fill="rgb(211,111,10)" rx="2" ry="2" />
<text  x="341.99" y="1871.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1176.1" y="1941" width="0.2" height="15.0" fill="rgb(216,145,9)" rx="2" ry="2" />
<text  x="1179.13" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="257.1" y="1893" width="0.2" height="15.0" fill="rgb(241,182,27)" rx="2" ry="2" />
<text  x="260.14" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="845.6" y="1909" width="0.5" height="15.0" fill="rgb(249,133,20)" rx="2" ry="2" />
<text  x="848.55" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="839.6" y="1797" width="0.2" height="15.0" fill="rgb(248,124,23)" rx="2" ry="2" />
<text  x="842.61" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="171.3" y="1701" width="0.2" height="15.0" fill="rgb(209,180,33)" rx="2" ry="2" />
<text  x="174.32" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="1146.8" y="1941" width="0.2" height="15.0" fill="rgb(219,42,40)" rx="2" ry="2" />
<text  x="1149.80" y="1951.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="940.9" y="1925" width="0.2" height="15.0" fill="rgb(209,125,16)" rx="2" ry="2" />
<text  x="943.88" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (4 samples, 0.07%)</title><rect x="1150.6" y="2053" width="0.8" height="15.0" fill="rgb(209,133,34)" rx="2" ry="2" />
<text  x="1153.56" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="567.3" y="1973" width="0.2" height="15.0" fill="rgb(235,132,38)" rx="2" ry="2" />
<text  x="570.30" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="320.6" y="1765" width="0.6" height="15.0" fill="rgb(220,67,40)" rx="2" ry="2" />
<text  x="323.56" y="1775.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="367.1" y="1941" width="0.2" height="15.0" fill="rgb(232,45,50)" rx="2" ry="2" />
<text  x="370.13" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="888.2" y="1813" width="0.2" height="15.0" fill="rgb(244,126,37)" rx="2" ry="2" />
<text  x="891.16" y="1823.5" ></text>
</g>
<g >
<title>rcu_nmi_exit (1 samples, 0.02%)</title><rect x="17.1" y="1829" width="0.2" height="15.0" fill="rgb(213,128,23)" rx="2" ry="2" />
<text  x="20.13" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (43 samples, 0.72%)</title><rect x="1111.3" y="1589" width="8.5" height="15.0" fill="rgb(246,19,33)" rx="2" ry="2" />
<text  x="1114.32" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_init_ts_off (1 samples, 0.02%)</title><rect x="341.8" y="1589" width="0.2" height="15.0" fill="rgb(230,190,2)" rx="2" ry="2" />
<text  x="344.76" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="77.4" y="1941" width="0.4" height="15.0" fill="rgb(217,207,1)" rx="2" ry="2" />
<text  x="80.38" y="1951.5" ></text>
</g>
<g >
<title>__d_alloc (21 samples, 0.35%)</title><rect x="409.5" y="1925" width="4.2" height="15.0" fill="rgb(237,64,38)" rx="2" ry="2" />
<text  x="412.54" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="10.0" y="1829" width="0.2" height="15.0" fill="rgb(211,91,7)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.0" y="1861" width="0.2" height="15.0" fill="rgb(242,120,15)" rx="2" ry="2" />
<text  x="494.00" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="54.8" y="1909" width="0.2" height="15.0" fill="rgb(244,73,47)" rx="2" ry="2" />
<text  x="57.79" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="51.2" y="1925" width="0.6" height="15.0" fill="rgb(208,21,2)" rx="2" ry="2" />
<text  x="54.22" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (42 samples, 0.71%)</title><rect x="178.5" y="2021" width="8.3" height="15.0" fill="rgb(235,213,40)" rx="2" ry="2" />
<text  x="181.46" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="111.5" y="37" width="0.2" height="15.0" fill="rgb(237,81,41)" rx="2" ry="2" />
<text  x="114.47" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (6 samples, 0.10%)</title><rect x="147.9" y="1909" width="1.2" height="15.0" fill="rgb(242,98,0)" rx="2" ry="2" />
<text  x="150.94" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="220.9" y="1845" width="0.2" height="15.0" fill="rgb(242,98,13)" rx="2" ry="2" />
<text  x="223.87" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="707.2" y="1749" width="0.2" height="15.0" fill="rgb(245,133,36)" rx="2" ry="2" />
<text  x="710.22" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="118.8" y="37" width="0.8" height="15.0" fill="rgb(226,161,31)" rx="2" ry="2" />
<text  x="121.80" y="47.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.41%)</title><rect x="103.3" y="101" width="16.7" height="15.0" fill="rgb(208,205,42)" rx="2" ry="2" />
<text  x="106.35" y="111.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1096.3" y="1877" width="0.2" height="15.0" fill="rgb(232,145,30)" rx="2" ry="2" />
<text  x="1099.26" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="330.5" y="1717" width="0.2" height="15.0" fill="rgb(217,199,6)" rx="2" ry="2" />
<text  x="333.47" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="176.5" y="2005" width="0.6" height="15.0" fill="rgb(245,45,33)" rx="2" ry="2" />
<text  x="179.48" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="937.5" y="1893" width="0.2" height="15.0" fill="rgb(211,174,39)" rx="2" ry="2" />
<text  x="940.51" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="222.1" y="1909" width="1.0" height="15.0" fill="rgb(229,74,50)" rx="2" ry="2" />
<text  x="225.06" y="1919.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (4 samples, 0.07%)</title><rect x="1039.8" y="2053" width="0.8" height="15.0" fill="rgb(205,150,28)" rx="2" ry="2" />
<text  x="1042.77" y="2063.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="872.9" y="1669" width="0.2" height="15.0" fill="rgb(234,81,47)" rx="2" ry="2" />
<text  x="875.90" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="573.4" y="1973" width="0.8" height="15.0" fill="rgb(235,154,20)" rx="2" ry="2" />
<text  x="576.44" y="1983.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1149.2" y="1925" width="0.2" height="15.0" fill="rgb(247,202,1)" rx="2" ry="2" />
<text  x="1152.17" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (2 samples, 0.03%)</title><rect x="1167.2" y="2053" width="0.4" height="15.0" fill="rgb(237,214,18)" rx="2" ry="2" />
<text  x="1170.21" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="573.8" y="1893" width="0.2" height="15.0" fill="rgb(247,62,54)" rx="2" ry="2" />
<text  x="576.84" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1012.0" y="2005" width="0.2" height="15.0" fill="rgb(219,189,15)" rx="2" ry="2" />
<text  x="1015.03" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="739.7" y="1717" width="0.2" height="15.0" fill="rgb(238,28,13)" rx="2" ry="2" />
<text  x="742.72" y="1727.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="562.7" y="1925" width="0.4" height="15.0" fill="rgb(250,85,4)" rx="2" ry="2" />
<text  x="565.74" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.4" y="1525" width="0.2" height="15.0" fill="rgb(253,203,42)" rx="2" ry="2" />
<text  x="127.35" y="1535.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="507.1" y="2005" width="0.1" height="15.0" fill="rgb(242,120,26)" rx="2" ry="2" />
<text  x="510.05" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="253.0" y="1637" width="0.2" height="15.0" fill="rgb(232,159,49)" rx="2" ry="2" />
<text  x="255.98" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1083.8" y="1829" width="0.2" height="15.0" fill="rgb(220,112,21)" rx="2" ry="2" />
<text  x="1086.77" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="479.5" y="2005" width="0.2" height="15.0" fill="rgb(216,167,24)" rx="2" ry="2" />
<text  x="482.50" y="2015.5" ></text>
</g>
<g >
<title>sys_close (15 samples, 0.25%)</title><rect x="836.2" y="1861" width="3.0" height="15.0" fill="rgb(224,146,12)" rx="2" ry="2" />
<text  x="839.24" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.02%)</title><rect x="102.4" y="1749" width="23.7" height="15.0" fill="rgb(239,169,25)" rx="2" ry="2" />
<text  x="105.35" y="1759.5" >[..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="142.6" y="1925" width="0.4" height="15.0" fill="rgb(212,57,50)" rx="2" ry="2" />
<text  x="145.59" y="1935.5" ></text>
</g>
<g >
<title>secure_tcp_ts_off (1 samples, 0.02%)</title><rect x="341.8" y="1573" width="0.2" height="15.0" fill="rgb(229,190,9)" rx="2" ry="2" />
<text  x="344.76" y="1583.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (6 samples, 0.10%)</title><rect x="524.5" y="1941" width="1.2" height="15.0" fill="rgb(226,218,34)" rx="2" ry="2" />
<text  x="527.49" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (14 samples, 0.24%)</title><rect x="628.3" y="2037" width="2.8" height="15.0" fill="rgb(206,2,11)" rx="2" ry="2" />
<text  x="631.34" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="298.6" y="1477" width="0.6" height="15.0" fill="rgb(239,104,14)" rx="2" ry="2" />
<text  x="301.56" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1079.8" y="1877" width="0.2" height="15.0" fill="rgb(239,185,37)" rx="2" ry="2" />
<text  x="1082.81" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="152.9" y="1893" width="0.2" height="15.0" fill="rgb(244,157,45)" rx="2" ry="2" />
<text  x="155.89" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="662.6" y="2037" width="0.4" height="15.0" fill="rgb(225,128,35)" rx="2" ry="2" />
<text  x="665.63" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="183.0" y="1973" width="0.2" height="15.0" fill="rgb(237,66,21)" rx="2" ry="2" />
<text  x="186.02" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1148.0" y="1989" width="0.2" height="15.0" fill="rgb(216,46,53)" rx="2" ry="2" />
<text  x="1150.98" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="172.7" y="1845" width="0.2" height="15.0" fill="rgb(244,189,23)" rx="2" ry="2" />
<text  x="175.71" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="82.7" y="1925" width="0.2" height="15.0" fill="rgb(208,111,8)" rx="2" ry="2" />
<text  x="85.73" y="1935.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="57.6" y="1909" width="0.6" height="15.0" fill="rgb(227,6,41)" rx="2" ry="2" />
<text  x="60.56" y="1919.5" ></text>
</g>
<g >
<title>SYSC_getsockname (23 samples, 0.39%)</title><rect x="596.4" y="1877" width="4.6" height="15.0" fill="rgb(228,227,30)" rx="2" ry="2" />
<text  x="599.43" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.05%)</title><rect x="460.3" y="1893" width="0.6" height="15.0" fill="rgb(231,217,5)" rx="2" ry="2" />
<text  x="463.28" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="280.7" y="1685" width="0.2" height="15.0" fill="rgb(219,134,41)" rx="2" ry="2" />
<text  x="283.72" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="131.3" y="1989" width="0.2" height="15.0" fill="rgb(254,178,34)" rx="2" ry="2" />
<text  x="134.29" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="901.4" y="1989" width="0.4" height="15.0" fill="rgb(236,103,52)" rx="2" ry="2" />
<text  x="904.44" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (109 samples, 1.83%)</title><rect x="783.5" y="1573" width="21.6" height="15.0" fill="rgb(222,156,10)" rx="2" ry="2" />
<text  x="786.52" y="1583.5" >_..</text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (8 samples, 0.13%)</title><rect x="27.4" y="1989" width="1.6" height="15.0" fill="rgb(224,168,24)" rx="2" ry="2" />
<text  x="30.44" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="896.3" y="1957" width="0.2" height="15.0" fill="rgb(249,215,23)" rx="2" ry="2" />
<text  x="899.29" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="127.7" y="1621" width="0.2" height="15.0" fill="rgb(247,22,42)" rx="2" ry="2" />
<text  x="130.72" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="864.6" y="1973" width="0.2" height="15.0" fill="rgb(227,40,33)" rx="2" ry="2" />
<text  x="867.58" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="104.7" y="37" width="0.2" height="15.0" fill="rgb(240,38,28)" rx="2" ry="2" />
<text  x="107.73" y="47.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.02%)</title><rect x="388.9" y="1941" width="0.2" height="15.0" fill="rgb(237,139,52)" rx="2" ry="2" />
<text  x="391.93" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.0" y="1205" width="0.2" height="15.0" fill="rgb(254,167,13)" rx="2" ry="2" />
<text  x="124.98" y="1215.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="133.3" y="1925" width="0.2" height="15.0" fill="rgb(218,206,3)" rx="2" ry="2" />
<text  x="136.27" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="99.6" y="1989" width="0.2" height="15.0" fill="rgb(217,139,48)" rx="2" ry="2" />
<text  x="102.58" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="226.4" y="1829" width="0.4" height="15.0" fill="rgb(214,218,52)" rx="2" ry="2" />
<text  x="229.42" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (11 samples, 0.18%)</title><rect x="636.3" y="2005" width="2.1" height="15.0" fill="rgb(238,204,0)" rx="2" ry="2" />
<text  x="639.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="709.8" y="2037" width="0.2" height="15.0" fill="rgb(254,140,2)" rx="2" ry="2" />
<text  x="712.80" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (8 samples, 0.13%)</title><rect x="934.1" y="1893" width="1.6" height="15.0" fill="rgb(248,40,12)" rx="2" ry="2" />
<text  x="937.14" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="524.7" y="1909" width="1.0" height="15.0" fill="rgb(253,204,7)" rx="2" ry="2" />
<text  x="527.69" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="505.9" y="1909" width="0.2" height="15.0" fill="rgb(226,46,38)" rx="2" ry="2" />
<text  x="508.86" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (4 samples, 0.07%)</title><rect x="576.4" y="1989" width="0.8" height="15.0" fill="rgb(223,168,47)" rx="2" ry="2" />
<text  x="579.42" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="902.8" y="1909" width="0.2" height="15.0" fill="rgb(231,59,16)" rx="2" ry="2" />
<text  x="905.83" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (4 samples, 0.07%)</title><rect x="567.5" y="1989" width="0.8" height="15.0" fill="rgb(246,64,35)" rx="2" ry="2" />
<text  x="570.50" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.25%)</title><rect x="14.4" y="2021" width="2.9" height="15.0" fill="rgb(222,216,51)" rx="2" ry="2" />
<text  x="17.36" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.24%)</title><rect x="296.6" y="1669" width="2.8" height="15.0" fill="rgb(252,33,26)" rx="2" ry="2" />
<text  x="299.58" y="1679.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="62.5" y="1925" width="0.6" height="15.0" fill="rgb(220,198,5)" rx="2" ry="2" />
<text  x="65.52" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="855.7" y="1861" width="0.4" height="15.0" fill="rgb(241,128,7)" rx="2" ry="2" />
<text  x="858.66" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="156.7" y="1893" width="0.8" height="15.0" fill="rgb(239,174,9)" rx="2" ry="2" />
<text  x="159.66" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="679.3" y="1925" width="1.0" height="15.0" fill="rgb(221,202,16)" rx="2" ry="2" />
<text  x="682.27" y="1935.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (3 samples, 0.05%)</title><rect x="696.1" y="1925" width="0.6" height="15.0" fill="rgb(249,30,31)" rx="2" ry="2" />
<text  x="699.12" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="846.7" y="1909" width="0.2" height="15.0" fill="rgb(228,216,48)" rx="2" ry="2" />
<text  x="849.74" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="570.5" y="2005" width="0.2" height="15.0" fill="rgb(217,217,10)" rx="2" ry="2" />
<text  x="573.47" y="2015.5" ></text>
</g>
<g >
<title>__fget (15 samples, 0.25%)</title><rect x="1125.6" y="1925" width="3.0" height="15.0" fill="rgb(210,164,34)" rx="2" ry="2" />
<text  x="1128.59" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="123.4" y="1381" width="0.2" height="15.0" fill="rgb(221,27,26)" rx="2" ry="2" />
<text  x="126.36" y="1391.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="112.3" y="37" width="1.0" height="15.0" fill="rgb(245,151,38)" rx="2" ry="2" />
<text  x="115.26" y="47.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="785.5" y="1541" width="0.2" height="15.0" fill="rgb(224,199,26)" rx="2" ry="2" />
<text  x="788.50" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="144.0" y="1861" width="0.2" height="15.0" fill="rgb(241,209,26)" rx="2" ry="2" />
<text  x="146.97" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="468.2" y="1909" width="0.2" height="15.0" fill="rgb(239,80,27)" rx="2" ry="2" />
<text  x="471.21" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="179.8" y="1957" width="0.2" height="15.0" fill="rgb(235,185,46)" rx="2" ry="2" />
<text  x="182.85" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="919.1" y="2037" width="0.2" height="15.0" fill="rgb(205,39,53)" rx="2" ry="2" />
<text  x="922.08" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="256.5" y="1829" width="0.2" height="15.0" fill="rgb(231,153,28)" rx="2" ry="2" />
<text  x="259.54" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="1078.8" y="1877" width="0.8" height="15.0" fill="rgb(238,102,41)" rx="2" ry="2" />
<text  x="1081.82" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="661.8" y="1989" width="0.2" height="15.0" fill="rgb(237,164,16)" rx="2" ry="2" />
<text  x="664.83" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="891.5" y="1909" width="0.2" height="15.0" fill="rgb(217,89,31)" rx="2" ry="2" />
<text  x="894.53" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="622.6" y="1957" width="0.2" height="15.0" fill="rgb(213,187,35)" rx="2" ry="2" />
<text  x="625.59" y="1967.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="505.3" y="1909" width="0.2" height="15.0" fill="rgb(216,87,21)" rx="2" ry="2" />
<text  x="508.27" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="491.0" y="1893" width="0.2" height="15.0" fill="rgb(222,21,9)" rx="2" ry="2" />
<text  x="494.00" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="122.4" y="1237" width="0.2" height="15.0" fill="rgb(234,173,0)" rx="2" ry="2" />
<text  x="125.37" y="1247.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.0" y="1877" width="0.2" height="15.0" fill="rgb(253,205,9)" rx="2" ry="2" />
<text  x="494.00" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="868.5" y="1989" width="0.2" height="15.0" fill="rgb(251,33,23)" rx="2" ry="2" />
<text  x="871.54" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1181.1" y="2005" width="0.2" height="15.0" fill="rgb(251,18,42)" rx="2" ry="2" />
<text  x="1184.08" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="839.6" y="1781" width="0.2" height="15.0" fill="rgb(206,16,10)" rx="2" ry="2" />
<text  x="842.61" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="187.0" y="2021" width="0.4" height="15.0" fill="rgb(238,207,5)" rx="2" ry="2" />
<text  x="189.98" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="125.5" y="1637" width="0.2" height="15.0" fill="rgb(225,217,53)" rx="2" ry="2" />
<text  x="128.54" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="380.0" y="1909" width="1.8" height="15.0" fill="rgb(219,95,1)" rx="2" ry="2" />
<text  x="383.01" y="1919.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (19 samples, 0.32%)</title><rect x="170.3" y="2005" width="3.8" height="15.0" fill="rgb(233,81,48)" rx="2" ry="2" />
<text  x="173.33" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="547.3" y="1733" width="0.2" height="15.0" fill="rgb(206,131,9)" rx="2" ry="2" />
<text  x="550.28" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="901.4" y="2005" width="2.4" height="15.0" fill="rgb(224,203,49)" rx="2" ry="2" />
<text  x="904.44" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="881.0" y="1941" width="0.2" height="15.0" fill="rgb(232,165,19)" rx="2" ry="2" />
<text  x="884.03" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="428.2" y="2005" width="0.4" height="15.0" fill="rgb(207,194,2)" rx="2" ry="2" />
<text  x="431.17" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="171.3" y="1781" width="0.2" height="15.0" fill="rgb(215,44,3)" rx="2" ry="2" />
<text  x="174.32" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="998.0" y="1909" width="0.4" height="15.0" fill="rgb(225,136,54)" rx="2" ry="2" />
<text  x="1000.96" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="51.6" y="1861" width="0.2" height="15.0" fill="rgb(208,60,37)" rx="2" ry="2" />
<text  x="54.62" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="928.6" y="1909" width="0.4" height="15.0" fill="rgb(215,52,34)" rx="2" ry="2" />
<text  x="931.59" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="181.2" y="1957" width="0.2" height="15.0" fill="rgb(254,143,32)" rx="2" ry="2" />
<text  x="184.23" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="203.2" y="1989" width="0.2" height="15.0" fill="rgb(221,189,35)" rx="2" ry="2" />
<text  x="206.23" y="1999.5" ></text>
</g>
<g >
<title>tcp_setsockopt (2 samples, 0.03%)</title><rect x="702.1" y="1925" width="0.4" height="15.0" fill="rgb(230,11,43)" rx="2" ry="2" />
<text  x="705.07" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (41 samples, 0.69%)</title><rect x="930.2" y="1941" width="8.1" height="15.0" fill="rgb(246,96,13)" rx="2" ry="2" />
<text  x="933.18" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="922.4" y="1989" width="0.2" height="15.0" fill="rgb(241,168,0)" rx="2" ry="2" />
<text  x="925.45" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="984.3" y="1669" width="0.2" height="15.0" fill="rgb(216,90,14)" rx="2" ry="2" />
<text  x="987.28" y="1679.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="257.7" y="1893" width="0.2" height="15.0" fill="rgb(237,189,51)" rx="2" ry="2" />
<text  x="260.73" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1189.4" y="2037" width="0.4" height="15.0" fill="rgb(246,1,37)" rx="2" ry="2" />
<text  x="1192.41" y="2047.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="33.0" y="1669" width="0.2" height="15.0" fill="rgb(236,72,38)" rx="2" ry="2" />
<text  x="35.99" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="220.7" y="1893" width="0.6" height="15.0" fill="rgb(247,55,29)" rx="2" ry="2" />
<text  x="223.67" y="1903.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="143.6" y="1941" width="0.2" height="15.0" fill="rgb(232,142,6)" rx="2" ry="2" />
<text  x="146.58" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="844.6" y="1925" width="0.2" height="15.0" fill="rgb(246,132,49)" rx="2" ry="2" />
<text  x="847.56" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="366.5" y="1941" width="0.2" height="15.0" fill="rgb(240,93,0)" rx="2" ry="2" />
<text  x="369.54" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="175.3" y="1909" width="0.4" height="15.0" fill="rgb(210,125,29)" rx="2" ry="2" />
<text  x="178.29" y="1919.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (6 samples, 0.10%)</title><rect x="756.0" y="1717" width="1.2" height="15.0" fill="rgb(223,103,8)" rx="2" ry="2" />
<text  x="758.97" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="895.9" y="1925" width="0.2" height="15.0" fill="rgb(220,87,9)" rx="2" ry="2" />
<text  x="898.89" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="477.9" y="1973" width="0.4" height="15.0" fill="rgb(242,170,43)" rx="2" ry="2" />
<text  x="480.92" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (5 samples, 0.08%)</title><rect x="74.8" y="1957" width="1.0" height="15.0" fill="rgb(212,97,25)" rx="2" ry="2" />
<text  x="77.81" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (4 samples, 0.07%)</title><rect x="877.9" y="1957" width="0.7" height="15.0" fill="rgb(245,68,54)" rx="2" ry="2" />
<text  x="880.86" y="1967.5" ></text>
</g>
<g >
<title>security_inode_alloc (2 samples, 0.03%)</title><rect x="395.9" y="1893" width="0.4" height="15.0" fill="rgb(241,69,51)" rx="2" ry="2" />
<text  x="398.87" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="936.5" y="1893" width="0.6" height="15.0" fill="rgb(207,27,2)" rx="2" ry="2" />
<text  x="939.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="867.2" y="1989" width="1.3" height="15.0" fill="rgb(216,176,26)" rx="2" ry="2" />
<text  x="870.15" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (5 samples, 0.08%)</title><rect x="399.2" y="1877" width="1.0" height="15.0" fill="rgb(230,204,40)" rx="2" ry="2" />
<text  x="402.24" y="1887.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="182.4" y="1973" width="0.2" height="15.0" fill="rgb(223,164,6)" rx="2" ry="2" />
<text  x="185.42" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="333.6" y="1749" width="0.2" height="15.0" fill="rgb(228,131,41)" rx="2" ry="2" />
<text  x="336.64" y="1759.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="62.9" y="1861" width="0.2" height="15.0" fill="rgb(212,48,44)" rx="2" ry="2" />
<text  x="65.92" y="1871.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1112.7" y="1413" width="0.2" height="15.0" fill="rgb(221,130,53)" rx="2" ry="2" />
<text  x="1115.71" y="1423.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.0" y="1461" width="0.2" height="15.0" fill="rgb(217,63,33)" rx="2" ry="2" />
<text  x="126.96" y="1471.5" ></text>
</g>
<g >
<title>tcp_write_xmit (245 samples, 4.11%)</title><rect x="769.8" y="1701" width="48.6" height="15.0" fill="rgb(231,166,13)" rx="2" ry="2" />
<text  x="772.85" y="1711.5" >tcp_..</text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="1140.7" y="2053" width="0.1" height="15.0" fill="rgb(227,87,12)" rx="2" ry="2" />
<text  x="1143.65" y="2063.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="328.1" y="1733" width="0.2" height="15.0" fill="rgb(205,93,11)" rx="2" ry="2" />
<text  x="331.09" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="256.5" y="1717" width="0.2" height="15.0" fill="rgb(244,169,17)" rx="2" ry="2" />
<text  x="259.54" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (79 samples, 1.33%)</title><rect x="1151.6" y="2005" width="15.6" height="15.0" fill="rgb(234,187,30)" rx="2" ry="2" />
<text  x="1154.55" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="958.1" y="2005" width="0.8" height="15.0" fill="rgb(249,147,41)" rx="2" ry="2" />
<text  x="961.12" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="144.0" y="1909" width="0.2" height="15.0" fill="rgb(249,2,29)" rx="2" ry="2" />
<text  x="146.97" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="222.9" y="1861" width="0.2" height="15.0" fill="rgb(223,77,40)" rx="2" ry="2" />
<text  x="225.85" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="274.6" y="1861" width="0.2" height="15.0" fill="rgb(208,109,0)" rx="2" ry="2" />
<text  x="277.58" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="643.4" y="1909" width="0.4" height="15.0" fill="rgb(248,75,9)" rx="2" ry="2" />
<text  x="646.40" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.2" y="661" width="0.2" height="15.0" fill="rgb(224,95,31)" rx="2" ry="2" />
<text  x="124.18" y="671.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="1001.5" y="1893" width="0.2" height="15.0" fill="rgb(235,210,51)" rx="2" ry="2" />
<text  x="1004.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="280.7" y="1557" width="0.2" height="15.0" fill="rgb(249,76,13)" rx="2" ry="2" />
<text  x="283.72" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="320.8" y="1749" width="0.4" height="15.0" fill="rgb(254,92,46)" rx="2" ry="2" />
<text  x="323.76" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="144.0" y="1925" width="0.2" height="15.0" fill="rgb(208,154,18)" rx="2" ry="2" />
<text  x="146.97" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="888.2" y="1781" width="0.2" height="15.0" fill="rgb(215,110,27)" rx="2" ry="2" />
<text  x="891.16" y="1791.5" ></text>
</g>
<g >
<title>locks_remove_posix (3 samples, 0.05%)</title><rect x="838.4" y="1813" width="0.6" height="15.0" fill="rgb(216,116,26)" rx="2" ry="2" />
<text  x="841.42" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11 samples, 0.18%)</title><rect x="459.3" y="1909" width="2.2" height="15.0" fill="rgb(244,37,32)" rx="2" ry="2" />
<text  x="462.29" y="1919.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="30.8" y="1957" width="0.2" height="15.0" fill="rgb(225,4,10)" rx="2" ry="2" />
<text  x="33.81" y="1967.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="170.9" y="1989" width="0.2" height="15.0" fill="rgb(220,149,6)" rx="2" ry="2" />
<text  x="173.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="714.4" y="1845" width="0.2" height="15.0" fill="rgb(242,49,21)" rx="2" ry="2" />
<text  x="717.35" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="498.1" y="1893" width="0.8" height="15.0" fill="rgb(236,206,12)" rx="2" ry="2" />
<text  x="501.13" y="1903.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (123 samples, 2.07%)</title><rect x="210.0" y="2037" width="24.3" height="15.0" fill="rgb(251,53,46)" rx="2" ry="2" />
<text  x="212.97" y="2047.5" >_..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="120.8" y="181" width="0.2" height="15.0" fill="rgb(243,104,32)" rx="2" ry="2" />
<text  x="123.79" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="172.7" y="1957" width="0.2" height="15.0" fill="rgb(248,90,22)" rx="2" ry="2" />
<text  x="175.71" y="1967.5" ></text>
</g>
<g >
<title>up_write (18 samples, 0.30%)</title><rect x="831.3" y="1765" width="3.6" height="15.0" fill="rgb(215,41,33)" rx="2" ry="2" />
<text  x="834.28" y="1775.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="801.2" y="1509" width="0.2" height="15.0" fill="rgb(252,221,3)" rx="2" ry="2" />
<text  x="804.16" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.72%)</title><rect x="906.6" y="2005" width="8.5" height="15.0" fill="rgb(208,38,14)" rx="2" ry="2" />
<text  x="909.59" y="2015.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="275.2" y="1877" width="0.2" height="15.0" fill="rgb(216,108,45)" rx="2" ry="2" />
<text  x="278.17" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="284.3" y="1621" width="0.2" height="15.0" fill="rgb(215,225,26)" rx="2" ry="2" />
<text  x="287.29" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1175.5" y="1717" width="0.2" height="15.0" fill="rgb(239,46,51)" rx="2" ry="2" />
<text  x="1178.53" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.98%)</title><rect x="102.4" y="1685" width="23.3" height="15.0" fill="rgb(220,66,11)" rx="2" ry="2" />
<text  x="105.35" y="1695.5" >[..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="636.1" y="2005" width="0.2" height="15.0" fill="rgb(223,175,44)" rx="2" ry="2" />
<text  x="639.07" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="574.2" y="1973" width="0.2" height="15.0" fill="rgb(243,228,29)" rx="2" ry="2" />
<text  x="577.24" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="563.3" y="1957" width="0.2" height="15.0" fill="rgb(216,3,20)" rx="2" ry="2" />
<text  x="566.34" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="548.1" y="1973" width="0.2" height="15.0" fill="rgb(241,33,4)" rx="2" ry="2" />
<text  x="551.08" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="179.8" y="1941" width="0.2" height="15.0" fill="rgb(215,223,27)" rx="2" ry="2" />
<text  x="182.85" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="512.8" y="1941" width="0.2" height="15.0" fill="rgb(246,91,40)" rx="2" ry="2" />
<text  x="515.80" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="622.6" y="1909" width="0.2" height="15.0" fill="rgb(232,48,1)" rx="2" ry="2" />
<text  x="625.59" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="563.3" y="1861" width="0.2" height="15.0" fill="rgb(234,26,36)" rx="2" ry="2" />
<text  x="566.34" y="1871.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="541.1" y="1957" width="0.2" height="15.0" fill="rgb(254,183,30)" rx="2" ry="2" />
<text  x="544.14" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="826.7" y="1573" width="0.4" height="15.0" fill="rgb(246,121,26)" rx="2" ry="2" />
<text  x="829.72" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1149.0" y="2021" width="0.2" height="15.0" fill="rgb(235,116,18)" rx="2" ry="2" />
<text  x="1151.98" y="2031.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="383.8" y="1909" width="0.2" height="15.0" fill="rgb(227,50,21)" rx="2" ry="2" />
<text  x="386.78" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="856.3" y="1861" width="0.2" height="15.0" fill="rgb(231,3,41)" rx="2" ry="2" />
<text  x="859.25" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="294.4" y="1701" width="0.2" height="15.0" fill="rgb(210,46,3)" rx="2" ry="2" />
<text  x="297.40" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="477.9" y="1829" width="0.4" height="15.0" fill="rgb(225,114,54)" rx="2" ry="2" />
<text  x="480.92" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="125.3" y="1605" width="0.2" height="15.0" fill="rgb(248,93,22)" rx="2" ry="2" />
<text  x="128.34" y="1615.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.13%)</title><rect x="698.9" y="1877" width="1.6" height="15.0" fill="rgb(226,67,41)" rx="2" ry="2" />
<text  x="701.89" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="742.7" y="1605" width="0.2" height="15.0" fill="rgb(239,147,52)" rx="2" ry="2" />
<text  x="745.69" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="498.5" y="1653" width="0.4" height="15.0" fill="rgb(208,18,46)" rx="2" ry="2" />
<text  x="501.53" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="343.7" y="1765" width="0.2" height="15.0" fill="rgb(219,6,32)" rx="2" ry="2" />
<text  x="346.75" y="1775.5" ></text>
</g>
<g >
<title>inet_getname (7 samples, 0.12%)</title><rect x="596.6" y="1861" width="1.4" height="15.0" fill="rgb(227,188,54)" rx="2" ry="2" />
<text  x="599.63" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="175.7" y="1957" width="0.2" height="15.0" fill="rgb(240,50,49)" rx="2" ry="2" />
<text  x="178.68" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="224.0" y="1861" width="0.4" height="15.0" fill="rgb(244,61,53)" rx="2" ry="2" />
<text  x="227.04" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="628.7" y="2021" width="2.4" height="15.0" fill="rgb(215,33,14)" rx="2" ry="2" />
<text  x="631.74" y="2031.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="888.2" y="1637" width="0.2" height="15.0" fill="rgb(215,58,44)" rx="2" ry="2" />
<text  x="891.16" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.24%)</title><rect x="11.2" y="2037" width="2.8" height="15.0" fill="rgb(249,61,54)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="537.0" y="1781" width="0.2" height="15.0" fill="rgb(222,4,40)" rx="2" ry="2" />
<text  x="539.98" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="316.8" y="1765" width="0.2" height="15.0" fill="rgb(239,43,47)" rx="2" ry="2" />
<text  x="319.79" y="1775.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="253.0" y="1669" width="0.2" height="15.0" fill="rgb(221,132,46)" rx="2" ry="2" />
<text  x="255.98" y="1679.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="737.7" y="1733" width="1.0" height="15.0" fill="rgb(252,224,12)" rx="2" ry="2" />
<text  x="740.74" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="984.3" y="1989" width="0.2" height="15.0" fill="rgb(208,53,40)" rx="2" ry="2" />
<text  x="987.28" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (20 samples, 0.34%)</title><rect x="614.5" y="1893" width="3.9" height="15.0" fill="rgb(243,133,36)" rx="2" ry="2" />
<text  x="617.47" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1148.8" y="2005" width="0.2" height="15.0" fill="rgb(231,228,8)" rx="2" ry="2" />
<text  x="1151.78" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="279.9" y="1797" width="0.8" height="15.0" fill="rgb(209,227,5)" rx="2" ry="2" />
<text  x="282.93" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="795.4" y="1493" width="0.2" height="15.0" fill="rgb(240,116,48)" rx="2" ry="2" />
<text  x="798.41" y="1503.5" ></text>
</g>
<g >
<title>sock_rfree (7 samples, 0.12%)</title><rect x="1091.9" y="1877" width="1.4" height="15.0" fill="rgb(211,77,52)" rx="2" ry="2" />
<text  x="1094.90" y="1887.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="14.4" y="2053" width="2.9" height="15.0" fill="rgb(246,228,0)" rx="2" ry="2" />
<text  x="17.36" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1188.8" y="1829" width="0.2" height="15.0" fill="rgb(235,21,10)" rx="2" ry="2" />
<text  x="1191.81" y="1839.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1137.5" y="2037" width="0.2" height="15.0" fill="rgb(207,217,12)" rx="2" ry="2" />
<text  x="1140.48" y="2047.5" ></text>
</g>
<g >
<title>sch_direct_xmit (91 samples, 1.53%)</title><rect x="787.1" y="1557" width="18.0" height="15.0" fill="rgb(241,47,48)" rx="2" ry="2" />
<text  x="790.09" y="1567.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="980.9" y="1989" width="0.2" height="15.0" fill="rgb(254,225,37)" rx="2" ry="2" />
<text  x="983.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.83%)</title><rect x="102.6" y="1477" width="21.6" height="15.0" fill="rgb(254,162,42)" rx="2" ry="2" />
<text  x="105.55" y="1487.5" >[..</text>
</g>
<g >
<title>ep_item_poll.isra.12 (42 samples, 0.71%)</title><rect x="454.1" y="1973" width="8.4" height="15.0" fill="rgb(226,68,28)" rx="2" ry="2" />
<text  x="457.14" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="331.3" y="1765" width="0.2" height="15.0" fill="rgb(207,149,46)" rx="2" ry="2" />
<text  x="334.26" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="141.2" y="2005" width="0.2" height="15.0" fill="rgb(227,169,33)" rx="2" ry="2" />
<text  x="144.20" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="120.6" y="53" width="0.2" height="15.0" fill="rgb(251,124,6)" rx="2" ry="2" />
<text  x="123.59" y="63.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="817.2" y="1653" width="0.2" height="15.0" fill="rgb(246,212,53)" rx="2" ry="2" />
<text  x="820.21" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="33.0" y="1781" width="0.2" height="15.0" fill="rgb(234,14,25)" rx="2" ry="2" />
<text  x="35.99" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.08%)</title><rect x="343.2" y="2021" width="0.9" height="15.0" fill="rgb(210,31,14)" rx="2" ry="2" />
<text  x="346.15" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (46 samples, 0.77%)</title><rect x="1110.7" y="1781" width="9.1" height="15.0" fill="rgb(220,201,25)" rx="2" ry="2" />
<text  x="1113.73" y="1791.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15 samples, 0.25%)</title><rect x="296.4" y="1701" width="3.0" height="15.0" fill="rgb(237,189,34)" rx="2" ry="2" />
<text  x="299.38" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="323.1" y="1621" width="0.2" height="15.0" fill="rgb(211,113,2)" rx="2" ry="2" />
<text  x="326.13" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (4 samples, 0.07%)</title><rect x="966.6" y="2037" width="0.8" height="15.0" fill="rgb(220,148,13)" rx="2" ry="2" />
<text  x="969.64" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="478.1" y="1765" width="0.2" height="15.0" fill="rgb(208,142,7)" rx="2" ry="2" />
<text  x="481.12" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="118.8" y="85" width="1.0" height="15.0" fill="rgb(250,94,44)" rx="2" ry="2" />
<text  x="121.80" y="95.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (16 samples, 0.27%)</title><rect x="183.6" y="1989" width="3.2" height="15.0" fill="rgb(208,209,30)" rx="2" ry="2" />
<text  x="186.61" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="284.3" y="1701" width="0.2" height="15.0" fill="rgb(227,137,46)" rx="2" ry="2" />
<text  x="287.29" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="284.3" y="1717" width="0.2" height="15.0" fill="rgb(206,154,11)" rx="2" ry="2" />
<text  x="287.29" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="960.1" y="2021" width="0.6" height="15.0" fill="rgb(240,139,8)" rx="2" ry="2" />
<text  x="963.10" y="2031.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="979.1" y="2037" width="0.2" height="15.0" fill="rgb(211,103,2)" rx="2" ry="2" />
<text  x="982.13" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="872.9" y="1685" width="0.2" height="15.0" fill="rgb(240,64,13)" rx="2" ry="2" />
<text  x="875.90" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (6 samples, 0.10%)</title><rect x="1143.8" y="2053" width="1.2" height="15.0" fill="rgb(246,183,48)" rx="2" ry="2" />
<text  x="1146.82" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1109.5" y="1829" width="0.2" height="15.0" fill="rgb(253,187,18)" rx="2" ry="2" />
<text  x="1112.54" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="174.3" y="1893" width="0.2" height="15.0" fill="rgb(254,172,43)" rx="2" ry="2" />
<text  x="177.30" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (3 samples, 0.05%)</title><rect x="900.6" y="2005" width="0.6" height="15.0" fill="rgb(218,137,39)" rx="2" ry="2" />
<text  x="903.65" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="478.9" y="2005" width="0.4" height="15.0" fill="rgb(210,4,28)" rx="2" ry="2" />
<text  x="481.91" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (3 samples, 0.05%)</title><rect x="866.0" y="1989" width="0.6" height="15.0" fill="rgb(234,36,28)" rx="2" ry="2" />
<text  x="868.97" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="344.1" y="2005" width="0.2" height="15.0" fill="rgb(212,150,51)" rx="2" ry="2" />
<text  x="347.14" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="161.4" y="1717" width="0.2" height="15.0" fill="rgb(233,227,11)" rx="2" ry="2" />
<text  x="164.41" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1007.3" y="1925" width="0.2" height="15.0" fill="rgb(214,30,7)" rx="2" ry="2" />
<text  x="1010.27" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="31.0" y="1973" width="1.0" height="15.0" fill="rgb(220,91,42)" rx="2" ry="2" />
<text  x="34.01" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (9 samples, 0.15%)</title><rect x="83.7" y="1941" width="1.8" height="15.0" fill="rgb(249,228,53)" rx="2" ry="2" />
<text  x="86.73" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="478.9" y="1941" width="0.4" height="15.0" fill="rgb(243,160,24)" rx="2" ry="2" />
<text  x="481.91" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (3 samples, 0.05%)</title><rect x="567.7" y="1973" width="0.6" height="15.0" fill="rgb(212,69,53)" rx="2" ry="2" />
<text  x="570.70" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="74.6" y="1621" width="0.2" height="15.0" fill="rgb(241,221,10)" rx="2" ry="2" />
<text  x="77.61" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="367.1" y="1925" width="0.2" height="15.0" fill="rgb(210,123,26)" rx="2" ry="2" />
<text  x="370.13" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="230.2" y="1893" width="0.2" height="15.0" fill="rgb(239,134,35)" rx="2" ry="2" />
<text  x="233.18" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="888.2" y="1685" width="0.2" height="15.0" fill="rgb(248,226,9)" rx="2" ry="2" />
<text  x="891.16" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (25 samples, 0.42%)</title><rect x="960.9" y="1989" width="5.0" height="15.0" fill="rgb(207,119,49)" rx="2" ry="2" />
<text  x="963.90" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="888.2" y="1669" width="0.2" height="15.0" fill="rgb(228,8,39)" rx="2" ry="2" />
<text  x="891.16" y="1679.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="993.8" y="1957" width="0.2" height="15.0" fill="rgb(221,86,29)" rx="2" ry="2" />
<text  x="996.80" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="490.8" y="1909" width="0.2" height="15.0" fill="rgb(241,28,35)" rx="2" ry="2" />
<text  x="493.80" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="339.2" y="1893" width="0.2" height="15.0" fill="rgb(226,52,36)" rx="2" ry="2" />
<text  x="342.19" y="1903.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="127.7" y="1605" width="0.2" height="15.0" fill="rgb(213,15,6)" rx="2" ry="2" />
<text  x="130.72" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="215.3" y="1925" width="0.2" height="15.0" fill="rgb(207,121,0)" rx="2" ry="2" />
<text  x="218.32" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="736.0" y="1573" width="0.2" height="15.0" fill="rgb(216,99,25)" rx="2" ry="2" />
<text  x="738.96" y="1583.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="714.7" y="1797" width="0.2" height="15.0" fill="rgb(211,49,45)" rx="2" ry="2" />
<text  x="717.75" y="1807.5" ></text>
</g>
<g >
<title>sys_getpeername (22 samples, 0.37%)</title><rect x="674.7" y="1893" width="4.4" height="15.0" fill="rgb(230,38,6)" rx="2" ry="2" />
<text  x="677.72" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 2.03%)</title><rect x="102.4" y="1781" width="23.9" height="15.0" fill="rgb(254,163,7)" rx="2" ry="2" />
<text  x="105.35" y="1791.5" >[..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1188.8" y="2021" width="0.2" height="15.0" fill="rgb(214,58,1)" rx="2" ry="2" />
<text  x="1191.81" y="2031.5" ></text>
</g>
<g >
<title>sys_accept4 (280 samples, 4.70%)</title><rect x="361.0" y="1989" width="55.5" height="15.0" fill="rgb(235,33,21)" rx="2" ry="2" />
<text  x="363.99" y="1999.5" >sys_a..</text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="163.4" y="1941" width="0.4" height="15.0" fill="rgb(240,38,23)" rx="2" ry="2" />
<text  x="166.40" y="1951.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="1098.6" y="1925" width="1.0" height="15.0" fill="rgb(252,135,41)" rx="2" ry="2" />
<text  x="1101.64" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="655.3" y="1925" width="0.2" height="15.0" fill="rgb(242,147,51)" rx="2" ry="2" />
<text  x="658.29" y="1935.5" ></text>
</g>
<g >
<title>sock_recvmsg (298 samples, 5.01%)</title><rect x="1066.1" y="1973" width="59.1" height="15.0" fill="rgb(243,13,49)" rx="2" ry="2" />
<text  x="1069.13" y="1983.5" >sock_r..</text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="412.9" y="1893" width="0.4" height="15.0" fill="rgb(233,151,52)" rx="2" ry="2" />
<text  x="415.91" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="210.4" y="1781" width="0.2" height="15.0" fill="rgb(236,220,54)" rx="2" ry="2" />
<text  x="213.37" y="1791.5" ></text>
</g>
<g >
<title>__alloc_skb (25 samples, 0.42%)</title><rect x="763.5" y="1717" width="5.0" height="15.0" fill="rgb(214,94,9)" rx="2" ry="2" />
<text  x="766.50" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (79 samples, 1.33%)</title><rect x="1151.6" y="2053" width="15.6" height="15.0" fill="rgb(246,42,9)" rx="2" ry="2" />
<text  x="1154.55" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="707.2" y="2005" width="0.2" height="15.0" fill="rgb(247,130,23)" rx="2" ry="2" />
<text  x="710.22" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="852.9" y="1941" width="0.2" height="15.0" fill="rgb(215,222,44)" rx="2" ry="2" />
<text  x="855.89" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="131.7" y="1877" width="0.2" height="15.0" fill="rgb(247,11,14)" rx="2" ry="2" />
<text  x="134.69" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="91.3" y="1877" width="0.2" height="15.0" fill="rgb(245,129,33)" rx="2" ry="2" />
<text  x="94.26" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="57.0" y="1893" width="0.2" height="15.0" fill="rgb(226,126,11)" rx="2" ry="2" />
<text  x="59.97" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="103.1" y="1045" width="18.3" height="15.0" fill="rgb(205,158,42)" rx="2" ry="2" />
<text  x="106.15" y="1055.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="506.9" y="2005" width="0.2" height="15.0" fill="rgb(240,49,12)" rx="2" ry="2" />
<text  x="509.85" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="206.8" y="2021" width="0.2" height="15.0" fill="rgb(240,169,3)" rx="2" ry="2" />
<text  x="209.80" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="196.5" y="2021" width="0.6" height="15.0" fill="rgb(243,46,41)" rx="2" ry="2" />
<text  x="199.49" y="2031.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="937.9" y="1909" width="0.2" height="15.0" fill="rgb(237,26,1)" rx="2" ry="2" />
<text  x="940.91" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="928.0" y="1925" width="0.4" height="15.0" fill="rgb(240,28,41)" rx="2" ry="2" />
<text  x="931.00" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="574.2" y="1941" width="0.2" height="15.0" fill="rgb(250,48,41)" rx="2" ry="2" />
<text  x="577.24" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="74.6" y="1925" width="0.2" height="15.0" fill="rgb(238,215,19)" rx="2" ry="2" />
<text  x="77.61" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="121.0" y="181" width="0.2" height="15.0" fill="rgb(207,69,3)" rx="2" ry="2" />
<text  x="123.98" y="191.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (14 samples, 0.24%)</title><rect x="14.6" y="1957" width="2.7" height="15.0" fill="rgb(219,30,15)" rx="2" ry="2" />
<text  x="17.56" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="252.8" y="1909" width="0.4" height="15.0" fill="rgb(219,175,3)" rx="2" ry="2" />
<text  x="255.78" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="805" width="18.1" height="15.0" fill="rgb(228,96,20)" rx="2" ry="2" />
<text  x="106.35" y="815.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (2 samples, 0.03%)</title><rect x="103.7" y="37" width="0.4" height="15.0" fill="rgb(252,155,46)" rx="2" ry="2" />
<text  x="106.74" y="47.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1109.7" y="1845" width="0.2" height="15.0" fill="rgb(239,197,10)" rx="2" ry="2" />
<text  x="1112.73" y="1855.5" ></text>
</g>
<g >
<title>__copy_skb_header (4 samples, 0.07%)</title><rect x="319.8" y="1781" width="0.8" height="15.0" fill="rgb(224,36,17)" rx="2" ry="2" />
<text  x="322.76" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="294.4" y="1557" width="0.2" height="15.0" fill="rgb(207,159,18)" rx="2" ry="2" />
<text  x="297.40" y="1567.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="73.0" y="1957" width="0.2" height="15.0" fill="rgb(235,227,40)" rx="2" ry="2" />
<text  x="76.02" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="280.7" y="1621" width="0.2" height="15.0" fill="rgb(219,190,22)" rx="2" ry="2" />
<text  x="283.72" y="1631.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (56 samples, 0.94%)</title><rect x="607.9" y="1973" width="11.1" height="15.0" fill="rgb(221,180,34)" rx="2" ry="2" />
<text  x="610.93" y="1983.5" ></text>
</g>
<g >
<title>mntget (1 samples, 0.02%)</title><rect x="387.7" y="1957" width="0.2" height="15.0" fill="rgb(221,100,40)" rx="2" ry="2" />
<text  x="390.74" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="104.5" y="37" width="0.2" height="15.0" fill="rgb(212,112,32)" rx="2" ry="2" />
<text  x="107.53" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (6 samples, 0.10%)</title><rect x="964.7" y="1957" width="1.2" height="15.0" fill="rgb(208,24,39)" rx="2" ry="2" />
<text  x="967.66" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="828.5" y="1701" width="0.2" height="15.0" fill="rgb(235,57,1)" rx="2" ry="2" />
<text  x="831.51" y="1711.5" ></text>
</g>
<g >
<title>sock_close (416 samples, 6.99%)</title><rect x="752.6" y="1797" width="82.4" height="15.0" fill="rgb(226,59,43)" rx="2" ry="2" />
<text  x="755.60" y="1807.5" >sock_close</text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="343.5" y="1845" width="0.6" height="15.0" fill="rgb(231,98,54)" rx="2" ry="2" />
<text  x="346.55" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (15 samples, 0.25%)</title><rect x="1172.0" y="2005" width="2.9" height="15.0" fill="rgb(205,178,22)" rx="2" ry="2" />
<text  x="1174.97" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="339.2" y="1877" width="0.2" height="15.0" fill="rgb(221,91,18)" rx="2" ry="2" />
<text  x="342.19" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="144.0" y="1845" width="0.2" height="15.0" fill="rgb(234,36,44)" rx="2" ry="2" />
<text  x="146.97" y="1855.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="381.8" y="1909" width="0.2" height="15.0" fill="rgb(227,183,52)" rx="2" ry="2" />
<text  x="384.80" y="1919.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="702.7" y="1973" width="1.9" height="15.0" fill="rgb(229,32,45)" rx="2" ry="2" />
<text  x="705.66" y="1983.5" ></text>
</g>
<g >
<title>[mcrouter] (123 samples, 2.07%)</title><rect x="210.0" y="2021" width="24.3" height="15.0" fill="rgb(226,108,41)" rx="2" ry="2" />
<text  x="212.97" y="2031.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="547.3" y="1813" width="0.2" height="15.0" fill="rgb(239,169,9)" rx="2" ry="2" />
<text  x="550.28" y="1823.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1179.5" y="2053" width="0.2" height="15.0" fill="rgb(239,209,14)" rx="2" ry="2" />
<text  x="1182.50" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="680.1" y="1797" width="0.2" height="15.0" fill="rgb(220,109,25)" rx="2" ry="2" />
<text  x="683.07" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="280.7" y="1669" width="0.2" height="15.0" fill="rgb(207,210,30)" rx="2" ry="2" />
<text  x="283.72" y="1679.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1112.3" y="1493" width="0.6" height="15.0" fill="rgb(231,23,4)" rx="2" ry="2" />
<text  x="1115.31" y="1503.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="121.0" y="53" width="0.2" height="15.0" fill="rgb(215,167,31)" rx="2" ry="2" />
<text  x="123.98" y="63.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.07%)</title><rect x="102.2" y="1829" width="24.3" height="15.0" fill="rgb(244,175,17)" rx="2" ry="2" />
<text  x="105.16" y="1839.5" >[..</text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="275.0" y="1573" width="0.2" height="15.0" fill="rgb(238,119,25)" rx="2" ry="2" />
<text  x="277.97" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="951.8" y="2005" width="0.4" height="15.0" fill="rgb(245,166,44)" rx="2" ry="2" />
<text  x="954.78" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="99.6" y="1973" width="0.2" height="15.0" fill="rgb(224,11,2)" rx="2" ry="2" />
<text  x="102.58" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="760.9" y="1717" width="0.2" height="15.0" fill="rgb(207,19,50)" rx="2" ry="2" />
<text  x="763.93" y="1727.5" ></text>
</g>
<g >
<title>event_base_set (2 samples, 0.03%)</title><rect x="99.8" y="2005" width="0.4" height="15.0" fill="rgb(224,78,17)" rx="2" ry="2" />
<text  x="102.78" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (2 samples, 0.03%)</title><rect x="231.4" y="1941" width="0.4" height="15.0" fill="rgb(223,34,0)" rx="2" ry="2" />
<text  x="234.37" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="968.8" y="1973" width="0.4" height="15.0" fill="rgb(225,79,52)" rx="2" ry="2" />
<text  x="971.82" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="341.6" y="1877" width="0.6" height="15.0" fill="rgb(219,93,16)" rx="2" ry="2" />
<text  x="344.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1033.6" y="2021" width="0.8" height="15.0" fill="rgb(234,5,6)" rx="2" ry="2" />
<text  x="1036.63" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1112.5" y="1461" width="0.4" height="15.0" fill="rgb(253,35,23)" rx="2" ry="2" />
<text  x="1115.51" y="1471.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="74.6" y="1701" width="0.2" height="15.0" fill="rgb(252,199,18)" rx="2" ry="2" />
<text  x="77.61" y="1711.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="228.6" y="1829" width="0.6" height="15.0" fill="rgb(211,134,49)" rx="2" ry="2" />
<text  x="231.60" y="1839.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="933.0" y="1893" width="0.2" height="15.0" fill="rgb(223,214,40)" rx="2" ry="2" />
<text  x="935.95" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1028.7" y="2005" width="0.2" height="15.0" fill="rgb(205,11,36)" rx="2" ry="2" />
<text  x="1031.68" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="786.1" y="1525" width="1.0" height="15.0" fill="rgb(242,166,42)" rx="2" ry="2" />
<text  x="789.10" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="220.9" y="1877" width="0.4" height="15.0" fill="rgb(242,150,54)" rx="2" ry="2" />
<text  x="223.87" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="658.5" y="2005" width="0.2" height="15.0" fill="rgb(235,101,42)" rx="2" ry="2" />
<text  x="661.46" y="2015.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="767.3" y="1701" width="1.2" height="15.0" fill="rgb(217,63,6)" rx="2" ry="2" />
<text  x="770.27" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="94.4" y="2005" width="0.8" height="15.0" fill="rgb(233,144,21)" rx="2" ry="2" />
<text  x="97.43" y="2015.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="264.7" y="1893" width="0.4" height="15.0" fill="rgb(243,24,37)" rx="2" ry="2" />
<text  x="267.67" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="738.3" y="1701" width="0.2" height="15.0" fill="rgb(225,199,15)" rx="2" ry="2" />
<text  x="741.33" y="1711.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="1181.5" y="2053" width="0.6" height="15.0" fill="rgb(244,1,29)" rx="2" ry="2" />
<text  x="1184.48" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="655.3" y="1829" width="0.2" height="15.0" fill="rgb(226,216,6)" rx="2" ry="2" />
<text  x="658.29" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="680.1" y="1813" width="0.2" height="15.0" fill="rgb(205,139,7)" rx="2" ry="2" />
<text  x="683.07" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="64.5" y="1957" width="0.2" height="15.0" fill="rgb(246,19,49)" rx="2" ry="2" />
<text  x="67.50" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1010.8" y="1957" width="0.2" height="15.0" fill="rgb(209,16,50)" rx="2" ry="2" />
<text  x="1013.84" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="969.0" y="1589" width="0.2" height="15.0" fill="rgb(205,136,41)" rx="2" ry="2" />
<text  x="972.02" y="1599.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="769.6" y="1701" width="0.2" height="15.0" fill="rgb(244,64,48)" rx="2" ry="2" />
<text  x="772.65" y="1711.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="817.0" y="1669" width="0.4" height="15.0" fill="rgb(205,67,29)" rx="2" ry="2" />
<text  x="820.01" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="795.4" y="1525" width="0.2" height="15.0" fill="rgb(217,47,14)" rx="2" ry="2" />
<text  x="798.41" y="1535.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="984.5" y="2005" width="0.8" height="15.0" fill="rgb(225,47,9)" rx="2" ry="2" />
<text  x="987.48" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (35 samples, 0.59%)</title><rect x="147.1" y="1925" width="7.0" height="15.0" fill="rgb(254,104,13)" rx="2" ry="2" />
<text  x="150.14" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="547.3" y="1845" width="0.2" height="15.0" fill="rgb(240,201,17)" rx="2" ry="2" />
<text  x="550.28" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="616.8" y="1669" width="0.2" height="15.0" fill="rgb(216,162,37)" rx="2" ry="2" />
<text  x="619.85" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="736.0" y="1765" width="0.2" height="15.0" fill="rgb(206,172,45)" rx="2" ry="2" />
<text  x="738.96" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="61.9" y="1877" width="0.2" height="15.0" fill="rgb(239,180,35)" rx="2" ry="2" />
<text  x="64.92" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="339.0" y="1893" width="0.2" height="15.0" fill="rgb(211,22,11)" rx="2" ry="2" />
<text  x="341.99" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="629.5" y="1957" width="0.2" height="15.0" fill="rgb(208,28,40)" rx="2" ry="2" />
<text  x="632.53" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1099.6" y="1861" width="0.2" height="15.0" fill="rgb(232,226,53)" rx="2" ry="2" />
<text  x="1102.63" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (40 samples, 0.67%)</title><rect x="671.1" y="1909" width="8.0" height="15.0" fill="rgb(219,125,3)" rx="2" ry="2" />
<text  x="674.15" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="872.9" y="1957" width="0.2" height="15.0" fill="rgb(217,163,51)" rx="2" ry="2" />
<text  x="875.90" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="132.3" y="1973" width="1.4" height="15.0" fill="rgb(240,50,39)" rx="2" ry="2" />
<text  x="135.28" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="113.8" y="37" width="1.4" height="15.0" fill="rgb(224,97,49)" rx="2" ry="2" />
<text  x="116.85" y="47.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="139.8" y="1973" width="0.2" height="15.0" fill="rgb(249,148,34)" rx="2" ry="2" />
<text  x="142.81" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (4 samples, 0.07%)</title><rect x="1003.9" y="1989" width="0.8" height="15.0" fill="rgb(239,218,7)" rx="2" ry="2" />
<text  x="1006.90" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="131.7" y="1893" width="0.2" height="15.0" fill="rgb(216,73,18)" rx="2" ry="2" />
<text  x="134.69" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (10 samples, 0.17%)</title><rect x="1020.7" y="2005" width="2.0" height="15.0" fill="rgb(225,100,27)" rx="2" ry="2" />
<text  x="1023.75" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="84.5" y="1909" width="0.4" height="15.0" fill="rgb(206,19,27)" rx="2" ry="2" />
<text  x="87.52" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="223.6" y="1877" width="0.2" height="15.0" fill="rgb(219,209,10)" rx="2" ry="2" />
<text  x="226.64" y="1887.5" ></text>
</g>
<g >
<title>d_instantiate (4 samples, 0.07%)</title><rect x="413.7" y="1941" width="0.8" height="15.0" fill="rgb(230,91,6)" rx="2" ry="2" />
<text  x="416.71" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1023.1" y="1941" width="0.2" height="15.0" fill="rgb(236,194,46)" rx="2" ry="2" />
<text  x="1026.13" y="1951.5" ></text>
</g>
<g >
<title>security_socket_accept (3 samples, 0.05%)</title><rect x="387.9" y="1957" width="0.6" height="15.0" fill="rgb(228,216,25)" rx="2" ry="2" />
<text  x="390.94" y="1967.5" ></text>
</g>
<g >
<title>[mcrouter] (35 samples, 0.59%)</title><rect x="996.4" y="1941" width="6.9" height="15.0" fill="rgb(241,29,39)" rx="2" ry="2" />
<text  x="999.37" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="136.4" y="1957" width="0.4" height="15.0" fill="rgb(209,206,19)" rx="2" ry="2" />
<text  x="139.44" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (36 samples, 0.60%)</title><rect x="631.9" y="2037" width="7.1" height="15.0" fill="rgb(236,96,38)" rx="2" ry="2" />
<text  x="634.91" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (5 samples, 0.08%)</title><rect x="848.9" y="1941" width="1.0" height="15.0" fill="rgb(209,137,25)" rx="2" ry="2" />
<text  x="851.92" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="872.9" y="1829" width="0.2" height="15.0" fill="rgb(232,96,16)" rx="2" ry="2" />
<text  x="875.90" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="172.7" y="1829" width="0.2" height="15.0" fill="rgb(230,208,30)" rx="2" ry="2" />
<text  x="175.71" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="161.6" y="1845" width="0.2" height="15.0" fill="rgb(247,176,47)" rx="2" ry="2" />
<text  x="164.61" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1035.8" y="2037" width="0.2" height="15.0" fill="rgb(216,210,49)" rx="2" ry="2" />
<text  x="1038.81" y="2047.5" ></text>
</g>
<g >
<title>tcp_close (385 samples, 6.47%)</title><rect x="754.4" y="1749" width="76.3" height="15.0" fill="rgb(219,109,12)" rx="2" ry="2" />
<text  x="757.39" y="1759.5" >tcp_close</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="881.6" y="1861" width="0.2" height="15.0" fill="rgb(231,26,25)" rx="2" ry="2" />
<text  x="884.62" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="474.5" y="1973" width="2.4" height="15.0" fill="rgb(213,195,38)" rx="2" ry="2" />
<text  x="477.55" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="846.9" y="1909" width="0.2" height="15.0" fill="rgb(206,195,15)" rx="2" ry="2" />
<text  x="849.94" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="579.2" y="2021" width="0.2" height="15.0" fill="rgb(250,127,21)" rx="2" ry="2" />
<text  x="582.19" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="154.1" y="1925" width="0.2" height="15.0" fill="rgb(237,165,31)" rx="2" ry="2" />
<text  x="157.08" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="836.0" y="1813" width="0.2" height="15.0" fill="rgb(232,117,3)" rx="2" ry="2" />
<text  x="839.04" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="619.8" y="1989" width="0.2" height="15.0" fill="rgb(206,138,47)" rx="2" ry="2" />
<text  x="622.82" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="93.4" y="1957" width="0.2" height="15.0" fill="rgb(216,90,53)" rx="2" ry="2" />
<text  x="96.44" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (3 samples, 0.05%)</title><rect x="912.7" y="1973" width="0.6" height="15.0" fill="rgb(228,105,41)" rx="2" ry="2" />
<text  x="915.74" y="1983.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="899.1" y="2005" width="0.2" height="15.0" fill="rgb(215,92,14)" rx="2" ry="2" />
<text  x="902.06" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="977.3" y="2037" width="0.2" height="15.0" fill="rgb(247,15,32)" rx="2" ry="2" />
<text  x="980.35" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="46.7" y="1925" width="0.2" height="15.0" fill="rgb(212,8,38)" rx="2" ry="2" />
<text  x="49.66" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (12 samples, 0.20%)</title><rect x="11.4" y="1893" width="2.4" height="15.0" fill="rgb(225,155,16)" rx="2" ry="2" />
<text  x="14.39" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="342.0" y="1557" width="0.2" height="15.0" fill="rgb(219,39,7)" rx="2" ry="2" />
<text  x="344.96" y="1567.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="399.0" y="1877" width="0.2" height="15.0" fill="rgb(223,59,34)" rx="2" ry="2" />
<text  x="402.04" y="1887.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="647.8" y="1973" width="0.2" height="15.0" fill="rgb(216,108,36)" rx="2" ry="2" />
<text  x="650.76" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (4 samples, 0.07%)</title><rect x="656.5" y="2005" width="0.8" height="15.0" fill="rgb(222,82,9)" rx="2" ry="2" />
<text  x="659.48" y="2015.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="707.2" y="1653" width="0.2" height="15.0" fill="rgb(252,42,37)" rx="2" ry="2" />
<text  x="710.22" y="1663.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="118.0" y="53" width="0.2" height="15.0" fill="rgb(221,149,50)" rx="2" ry="2" />
<text  x="121.01" y="63.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="215.3" y="1701" width="0.2" height="15.0" fill="rgb(221,207,37)" rx="2" ry="2" />
<text  x="218.32" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="69.3" y="1685" width="0.2" height="15.0" fill="rgb(239,76,17)" rx="2" ry="2" />
<text  x="72.26" y="1695.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="325.3" y="1813" width="0.2" height="15.0" fill="rgb(254,2,6)" rx="2" ry="2" />
<text  x="328.31" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1011.4" y="1989" width="0.4" height="15.0" fill="rgb(244,228,9)" rx="2" ry="2" />
<text  x="1014.43" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.13%)</title><rect x="583.9" y="1925" width="1.6" height="15.0" fill="rgb(247,103,4)" rx="2" ry="2" />
<text  x="586.95" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (11 samples, 0.18%)</title><rect x="854.3" y="1925" width="2.2" height="15.0" fill="rgb(244,215,5)" rx="2" ry="2" />
<text  x="857.27" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="33.0" y="1733" width="0.2" height="15.0" fill="rgb(218,120,46)" rx="2" ry="2" />
<text  x="35.99" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="636.5" y="1989" width="1.9" height="15.0" fill="rgb(253,175,39)" rx="2" ry="2" />
<text  x="639.47" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="341.6" y="1893" width="0.6" height="15.0" fill="rgb(240,94,24)" rx="2" ry="2" />
<text  x="344.57" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (4 samples, 0.07%)</title><rect x="747.5" y="1765" width="0.7" height="15.0" fill="rgb(208,93,24)" rx="2" ry="2" />
<text  x="750.45" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="968.8" y="1909" width="0.4" height="15.0" fill="rgb(253,164,11)" rx="2" ry="2" />
<text  x="971.82" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="512.2" y="1973" width="0.4" height="15.0" fill="rgb(217,25,11)" rx="2" ry="2" />
<text  x="515.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="280.7" y="1541" width="0.2" height="15.0" fill="rgb(240,143,53)" rx="2" ry="2" />
<text  x="283.72" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="284.3" y="1637" width="0.2" height="15.0" fill="rgb(221,98,12)" rx="2" ry="2" />
<text  x="287.29" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="57.2" y="1829" width="0.2" height="15.0" fill="rgb(231,170,7)" rx="2" ry="2" />
<text  x="60.17" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="928.2" y="1909" width="0.2" height="15.0" fill="rgb(242,92,21)" rx="2" ry="2" />
<text  x="931.20" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="747.3" y="1637" width="0.2" height="15.0" fill="rgb(219,156,42)" rx="2" ry="2" />
<text  x="750.25" y="1647.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="844.8" y="1925" width="0.2" height="15.0" fill="rgb(251,222,40)" rx="2" ry="2" />
<text  x="847.76" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="569.7" y="2005" width="0.2" height="15.0" fill="rgb(239,169,33)" rx="2" ry="2" />
<text  x="572.68" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (2 samples, 0.03%)</title><rect x="73.2" y="1957" width="0.4" height="15.0" fill="rgb(254,163,24)" rx="2" ry="2" />
<text  x="76.22" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="13.8" y="1813" width="0.2" height="15.0" fill="rgb(212,156,48)" rx="2" ry="2" />
<text  x="16.77" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="127.7" y="1861" width="0.2" height="15.0" fill="rgb(254,142,44)" rx="2" ry="2" />
<text  x="130.72" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.6" y="1829" width="0.2" height="15.0" fill="rgb(243,96,7)" rx="2" ry="2" />
<text  x="77.61" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="631.1" y="2037" width="0.4" height="15.0" fill="rgb(206,153,0)" rx="2" ry="2" />
<text  x="634.12" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="707.2" y="1813" width="0.2" height="15.0" fill="rgb(234,12,18)" rx="2" ry="2" />
<text  x="710.22" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.2" y="1845" width="0.2" height="15.0" fill="rgb(226,32,46)" rx="2" ry="2" />
<text  x="163.23" y="1855.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (10 samples, 0.17%)</title><rect x="710.4" y="1989" width="2.0" height="15.0" fill="rgb(239,127,18)" rx="2" ry="2" />
<text  x="713.39" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="113.3" y="53" width="0.2" height="15.0" fill="rgb(224,31,49)" rx="2" ry="2" />
<text  x="116.25" y="63.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="478.1" y="1717" width="0.2" height="15.0" fill="rgb(229,216,50)" rx="2" ry="2" />
<text  x="481.12" y="1727.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="215.3" y="1669" width="0.2" height="15.0" fill="rgb(208,91,22)" rx="2" ry="2" />
<text  x="218.32" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="75.0" y="1909" width="0.4" height="15.0" fill="rgb(223,194,9)" rx="2" ry="2" />
<text  x="78.01" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1004.3" y="1957" width="0.4" height="15.0" fill="rgb(237,46,41)" rx="2" ry="2" />
<text  x="1007.30" y="1967.5" ></text>
</g>
<g >
<title>syscall (71 samples, 1.19%)</title><rect x="1153.1" y="1973" width="14.1" height="15.0" fill="rgb(228,70,40)" rx="2" ry="2" />
<text  x="1156.14" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1177.1" y="2005" width="0.2" height="15.0" fill="rgb(222,70,14)" rx="2" ry="2" />
<text  x="1180.12" y="2015.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (5 samples, 0.08%)</title><rect x="816.4" y="1685" width="1.0" height="15.0" fill="rgb(226,157,28)" rx="2" ry="2" />
<text  x="819.42" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="460.7" y="1733" width="0.2" height="15.0" fill="rgb(249,194,48)" rx="2" ry="2" />
<text  x="463.68" y="1743.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="322.9" y="1829" width="0.2" height="15.0" fill="rgb(247,133,24)" rx="2" ry="2" />
<text  x="325.94" y="1839.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.15%)</title><rect x="594.6" y="1877" width="1.8" height="15.0" fill="rgb(252,114,37)" rx="2" ry="2" />
<text  x="597.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="103.3" y="165" width="17.5" height="15.0" fill="rgb(207,191,49)" rx="2" ry="2" />
<text  x="106.35" y="175.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="69.3" y="1477" width="0.2" height="15.0" fill="rgb(244,168,26)" rx="2" ry="2" />
<text  x="72.26" y="1487.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="88.1" y="1989" width="0.4" height="15.0" fill="rgb(217,226,47)" rx="2" ry="2" />
<text  x="91.09" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="896.3" y="2005" width="0.2" height="15.0" fill="rgb(212,191,0)" rx="2" ry="2" />
<text  x="899.29" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="343.9" y="1765" width="0.2" height="15.0" fill="rgb(232,202,43)" rx="2" ry="2" />
<text  x="346.94" y="1775.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="69.3" y="1605" width="0.2" height="15.0" fill="rgb(226,61,13)" rx="2" ry="2" />
<text  x="72.26" y="1615.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="301.1" y="1685" width="0.2" height="15.0" fill="rgb(237,20,3)" rx="2" ry="2" />
<text  x="304.14" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="920.5" y="1989" width="0.2" height="15.0" fill="rgb(249,187,45)" rx="2" ry="2" />
<text  x="923.47" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (7 samples, 0.12%)</title><rect x="902.0" y="1973" width="1.4" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="905.04" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1007.3" y="1893" width="0.2" height="15.0" fill="rgb(236,201,9)" rx="2" ry="2" />
<text  x="1010.27" y="1903.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.1" y="1925" width="0.2" height="15.0" fill="rgb(224,196,40)" rx="2" ry="2" />
<text  x="941.11" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="547.3" y="1957" width="0.2" height="15.0" fill="rgb(212,15,47)" rx="2" ry="2" />
<text  x="550.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="498.5" y="1605" width="0.2" height="15.0" fill="rgb(237,50,17)" rx="2" ry="2" />
<text  x="501.53" y="1615.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="203.2" y="1925" width="0.2" height="15.0" fill="rgb(223,21,33)" rx="2" ry="2" />
<text  x="206.23" y="1935.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="537.0" y="1973" width="0.2" height="15.0" fill="rgb(226,132,50)" rx="2" ry="2" />
<text  x="539.98" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (92 samples, 1.55%)</title><rect x="487.4" y="2005" width="18.3" height="15.0" fill="rgb(244,22,15)" rx="2" ry="2" />
<text  x="490.43" y="2015.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="281.7" y="1781" width="0.2" height="15.0" fill="rgb(225,131,23)" rx="2" ry="2" />
<text  x="284.71" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="479.1" y="1893" width="0.2" height="15.0" fill="rgb(214,49,39)" rx="2" ry="2" />
<text  x="482.11" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (26 samples, 0.44%)</title><rect x="1171.6" y="2021" width="5.1" height="15.0" fill="rgb(253,56,35)" rx="2" ry="2" />
<text  x="1174.57" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.22%)</title><rect x="514.8" y="1973" width="2.6" height="15.0" fill="rgb(212,183,48)" rx="2" ry="2" />
<text  x="517.78" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="460.7" y="1781" width="0.2" height="15.0" fill="rgb(208,145,3)" rx="2" ry="2" />
<text  x="463.68" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="878.5" y="1877" width="0.1" height="15.0" fill="rgb(251,103,38)" rx="2" ry="2" />
<text  x="881.45" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="76.2" y="1957" width="0.2" height="15.0" fill="rgb(208,173,31)" rx="2" ry="2" />
<text  x="79.19" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="882.2" y="1845" width="0.2" height="15.0" fill="rgb(250,122,40)" rx="2" ry="2" />
<text  x="885.22" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="707.2" y="1893" width="0.2" height="15.0" fill="rgb(240,206,30)" rx="2" ry="2" />
<text  x="710.22" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (15 samples, 0.25%)</title><rect x="183.8" y="1973" width="3.0" height="15.0" fill="rgb(215,218,42)" rx="2" ry="2" />
<text  x="186.81" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (31 samples, 0.52%)</title><rect x="878.6" y="1957" width="6.2" height="15.0" fill="rgb(244,134,32)" rx="2" ry="2" />
<text  x="881.65" y="1967.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="57.6" y="1877" width="0.6" height="15.0" fill="rgb(215,113,43)" rx="2" ry="2" />
<text  x="60.56" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="498.1" y="1781" width="0.8" height="15.0" fill="rgb(247,156,45)" rx="2" ry="2" />
<text  x="501.13" y="1791.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="313.0" y="1653" width="0.2" height="15.0" fill="rgb(246,30,48)" rx="2" ry="2" />
<text  x="316.03" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="297.6" y="1461" width="0.2" height="15.0" fill="rgb(248,134,52)" rx="2" ry="2" />
<text  x="300.57" y="1471.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="598.0" y="1861" width="0.8" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="601.02" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="828.9" y="1701" width="0.8" height="15.0" fill="rgb(222,207,4)" rx="2" ry="2" />
<text  x="831.90" y="1711.5" ></text>
</g>
<g >
<title>__sock_release (415 samples, 6.97%)</title><rect x="752.6" y="1781" width="82.3" height="15.0" fill="rgb(243,14,45)" rx="2" ry="2" />
<text  x="755.60" y="1791.5" >__sock_re..</text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="1170.0" y="2021" width="1.2" height="15.0" fill="rgb(207,198,50)" rx="2" ry="2" />
<text  x="1172.98" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="478.1" y="1797" width="0.2" height="15.0" fill="rgb(246,141,45)" rx="2" ry="2" />
<text  x="481.12" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="253.0" y="1733" width="0.2" height="15.0" fill="rgb(242,158,48)" rx="2" ry="2" />
<text  x="255.98" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="627.5" y="1973" width="0.4" height="15.0" fill="rgb(250,11,36)" rx="2" ry="2" />
<text  x="630.55" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="524.5" y="1957" width="1.8" height="15.0" fill="rgb(232,113,16)" rx="2" ry="2" />
<text  x="527.49" y="1967.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="895.9" y="1669" width="0.2" height="15.0" fill="rgb(244,85,40)" rx="2" ry="2" />
<text  x="898.89" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (2 samples, 0.03%)</title><rect x="620.0" y="1989" width="0.4" height="15.0" fill="rgb(221,25,50)" rx="2" ry="2" />
<text  x="623.02" y="1999.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="477.7" y="1973" width="0.2" height="15.0" fill="rgb(218,48,29)" rx="2" ry="2" />
<text  x="480.72" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="901.4" y="2021" width="2.4" height="15.0" fill="rgb(253,198,37)" rx="2" ry="2" />
<text  x="904.44" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="984.3" y="1765" width="0.2" height="15.0" fill="rgb(240,169,32)" rx="2" ry="2" />
<text  x="987.28" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (5 samples, 0.08%)</title><rect x="980.7" y="2005" width="1.0" height="15.0" fill="rgb(224,140,10)" rx="2" ry="2" />
<text  x="983.72" y="2015.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="69.3" y="1589" width="0.2" height="15.0" fill="rgb(238,181,21)" rx="2" ry="2" />
<text  x="72.26" y="1599.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="576.0" y="1989" width="0.4" height="15.0" fill="rgb(231,178,11)" rx="2" ry="2" />
<text  x="579.02" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="655.3" y="1845" width="0.2" height="15.0" fill="rgb(246,57,30)" rx="2" ry="2" />
<text  x="658.29" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="902.6" y="1909" width="0.2" height="15.0" fill="rgb(225,55,1)" rx="2" ry="2" />
<text  x="905.63" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="523.7" y="1973" width="0.4" height="15.0" fill="rgb(207,56,8)" rx="2" ry="2" />
<text  x="526.70" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="158.6" y="1893" width="0.2" height="15.0" fill="rgb(241,67,38)" rx="2" ry="2" />
<text  x="161.64" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="280.7" y="1589" width="0.2" height="15.0" fill="rgb(234,157,9)" rx="2" ry="2" />
<text  x="283.72" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1177.5" y="2005" width="0.4" height="15.0" fill="rgb(245,101,10)" rx="2" ry="2" />
<text  x="1180.51" y="2015.5" ></text>
</g>
<g >
<title>mcrouter (5,917 samples, 99.38%)</title><rect x="17.3" y="2069" width="1172.7" height="15.0" fill="rgb(219,221,36)" rx="2" ry="2" />
<text  x="20.33" y="2079.5" >mcrouter</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="479.3" y="2021" width="0.4" height="15.0" fill="rgb(221,134,5)" rx="2" ry="2" />
<text  x="482.30" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="849.5" y="1861" width="0.2" height="15.0" fill="rgb(236,115,44)" rx="2" ry="2" />
<text  x="852.52" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="630.9" y="1989" width="0.2" height="15.0" fill="rgb(215,133,28)" rx="2" ry="2" />
<text  x="633.92" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="497.9" y="1893" width="0.2" height="15.0" fill="rgb(236,71,13)" rx="2" ry="2" />
<text  x="500.93" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="331.3" y="1813" width="0.2" height="15.0" fill="rgb(208,150,15)" rx="2" ry="2" />
<text  x="334.26" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (14 samples, 0.24%)</title><rect x="14.6" y="1925" width="2.7" height="15.0" fill="rgb(209,203,53)" rx="2" ry="2" />
<text  x="17.56" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="699.1" y="1861" width="0.2" height="15.0" fill="rgb(244,159,41)" rx="2" ry="2" />
<text  x="702.09" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="478.9" y="2021" width="0.4" height="15.0" fill="rgb(211,176,14)" rx="2" ry="2" />
<text  x="481.91" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="851.9" y="1909" width="0.4" height="15.0" fill="rgb(233,44,44)" rx="2" ry="2" />
<text  x="854.89" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="975.8" y="2037" width="0.2" height="15.0" fill="rgb(218,184,14)" rx="2" ry="2" />
<text  x="978.76" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="547.3" y="1749" width="0.2" height="15.0" fill="rgb(244,64,40)" rx="2" ry="2" />
<text  x="550.28" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="888.8" y="1893" width="0.2" height="15.0" fill="rgb(208,28,25)" rx="2" ry="2" />
<text  x="891.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="335.6" y="1893" width="0.2" height="15.0" fill="rgb(216,133,38)" rx="2" ry="2" />
<text  x="338.62" y="1903.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (21 samples, 0.35%)</title><rect x="696.7" y="1925" width="4.2" height="15.0" fill="rgb(237,173,34)" rx="2" ry="2" />
<text  x="699.71" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="171.3" y="1829" width="0.2" height="15.0" fill="rgb(219,196,6)" rx="2" ry="2" />
<text  x="174.32" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="540.7" y="1893" width="0.2" height="15.0" fill="rgb(215,218,24)" rx="2" ry="2" />
<text  x="543.74" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="904.2" y="2037" width="0.4" height="15.0" fill="rgb(246,156,45)" rx="2" ry="2" />
<text  x="907.22" y="2047.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="676.9" y="1861" width="1.6" height="15.0" fill="rgb(233,158,23)" rx="2" ry="2" />
<text  x="679.90" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="173.3" y="1973" width="0.2" height="15.0" fill="rgb(222,227,5)" rx="2" ry="2" />
<text  x="176.31" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="614.1" y="1877" width="0.2" height="15.0" fill="rgb(216,46,53)" rx="2" ry="2" />
<text  x="617.07" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="968.8" y="1797" width="0.4" height="15.0" fill="rgb(221,227,13)" rx="2" ry="2" />
<text  x="971.82" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1129.8" y="1989" width="0.3" height="15.0" fill="rgb(254,154,51)" rx="2" ry="2" />
<text  x="1132.75" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="461.5" y="1909" width="0.2" height="15.0" fill="rgb(241,144,41)" rx="2" ry="2" />
<text  x="464.47" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="882.2" y="1877" width="0.4" height="15.0" fill="rgb(213,220,45)" rx="2" ry="2" />
<text  x="885.22" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="102.6" y="1429" width="21.2" height="15.0" fill="rgb(236,55,16)" rx="2" ry="2" />
<text  x="105.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="578.0" y="1989" width="0.2" height="15.0" fill="rgb(220,164,12)" rx="2" ry="2" />
<text  x="581.00" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="166.6" y="2021" width="0.2" height="15.0" fill="rgb(237,198,50)" rx="2" ry="2" />
<text  x="169.57" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="128.9" y="1941" width="0.2" height="15.0" fill="rgb(205,32,39)" rx="2" ry="2" />
<text  x="131.91" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="382.8" y="1861" width="0.4" height="15.0" fill="rgb(236,173,12)" rx="2" ry="2" />
<text  x="385.79" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.6" y="117" width="0.2" height="15.0" fill="rgb(223,13,27)" rx="2" ry="2" />
<text  x="123.59" y="127.5" ></text>
</g>
<g >
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="803.5" y="1509" width="1.0" height="15.0" fill="rgb(240,131,49)" rx="2" ry="2" />
<text  x="806.54" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1146.2" y="1957" width="0.2" height="15.0" fill="rgb(211,181,5)" rx="2" ry="2" />
<text  x="1149.20" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="102.6" y="1333" width="20.6" height="15.0" fill="rgb(213,90,27)" rx="2" ry="2" />
<text  x="105.55" y="1343.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (3 samples, 0.05%)</title><rect x="960.1" y="2037" width="0.6" height="15.0" fill="rgb(245,218,49)" rx="2" ry="2" />
<text  x="963.10" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1143.0" y="1941" width="0.2" height="15.0" fill="rgb(220,96,33)" rx="2" ry="2" />
<text  x="1146.03" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="210.4" y="1877" width="0.2" height="15.0" fill="rgb(211,66,39)" rx="2" ry="2" />
<text  x="213.37" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="343.5" y="1829" width="0.6" height="15.0" fill="rgb(237,0,35)" rx="2" ry="2" />
<text  x="346.55" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="209.8" y="2021" width="0.2" height="15.0" fill="rgb(206,10,45)" rx="2" ry="2" />
<text  x="212.77" y="2031.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="491.0" y="1637" width="0.2" height="15.0" fill="rgb(225,124,52)" rx="2" ry="2" />
<text  x="494.00" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="491.0" y="1717" width="0.2" height="15.0" fill="rgb(242,151,12)" rx="2" ry="2" />
<text  x="494.00" y="1727.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (224 samples, 3.76%)</title><rect x="287.1" y="1861" width="44.4" height="15.0" fill="rgb(234,41,53)" rx="2" ry="2" />
<text  x="290.06" y="1871.5" >__tc..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="140.2" y="1973" width="0.4" height="15.0" fill="rgb(238,76,45)" rx="2" ry="2" />
<text  x="143.21" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="280.7" y="1717" width="0.2" height="15.0" fill="rgb(217,57,52)" rx="2" ry="2" />
<text  x="283.72" y="1727.5" ></text>
</g>
<g >
<title>skb_clone (18 samples, 0.30%)</title><rect x="806.1" y="1669" width="3.6" height="15.0" fill="rgb(229,111,38)" rx="2" ry="2" />
<text  x="809.11" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="109.3" y="37" width="0.4" height="15.0" fill="rgb(238,53,39)" rx="2" ry="2" />
<text  x="112.29" y="47.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="522.3" y="1989" width="0.2" height="15.0" fill="rgb(233,224,22)" rx="2" ry="2" />
<text  x="525.31" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="256.5" y="1765" width="0.2" height="15.0" fill="rgb(219,131,8)" rx="2" ry="2" />
<text  x="259.54" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="118.6" y="53" width="0.2" height="15.0" fill="rgb(211,34,41)" rx="2" ry="2" />
<text  x="121.61" y="63.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (5 samples, 0.08%)</title><rect x="50.2" y="1925" width="1.0" height="15.0" fill="rgb(253,22,32)" rx="2" ry="2" />
<text  x="53.23" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="51.6" y="1893" width="0.2" height="15.0" fill="rgb(215,34,17)" rx="2" ry="2" />
<text  x="54.62" y="1903.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="853.7" y="1925" width="0.2" height="15.0" fill="rgb(228,81,8)" rx="2" ry="2" />
<text  x="856.68" y="1935.5" ></text>
</g>
<g >
<title>filp_close (10 samples, 0.17%)</title><rect x="837.0" y="1829" width="2.0" height="15.0" fill="rgb(234,122,7)" rx="2" ry="2" />
<text  x="840.03" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (2 samples, 0.03%)</title><rect x="657.3" y="2005" width="0.4" height="15.0" fill="rgb(209,99,51)" rx="2" ry="2" />
<text  x="660.28" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="563.7" y="1973" width="3.0" height="15.0" fill="rgb(237,28,40)" rx="2" ry="2" />
<text  x="566.73" y="1983.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1119.2" y="1509" width="0.2" height="15.0" fill="rgb(240,154,41)" rx="2" ry="2" />
<text  x="1122.25" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (5 samples, 0.08%)</title><rect x="889.9" y="1941" width="1.0" height="15.0" fill="rgb(243,35,33)" rx="2" ry="2" />
<text  x="892.95" y="1951.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="335.4" y="1829" width="0.2" height="15.0" fill="rgb(243,31,10)" rx="2" ry="2" />
<text  x="338.42" y="1839.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(212,219,39)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="322.5" y="1749" width="0.2" height="15.0" fill="rgb(214,138,1)" rx="2" ry="2" />
<text  x="325.54" y="1759.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="51.6" y="1637" width="0.2" height="15.0" fill="rgb(213,122,5)" rx="2" ry="2" />
<text  x="54.62" y="1647.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="302.3" y="1669" width="0.4" height="15.0" fill="rgb(234,53,26)" rx="2" ry="2" />
<text  x="305.32" y="1679.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="130.5" y="1989" width="0.2" height="15.0" fill="rgb(230,58,39)" rx="2" ry="2" />
<text  x="133.50" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="730.4" y="1733" width="0.8" height="15.0" fill="rgb(209,96,49)" rx="2" ry="2" />
<text  x="733.41" y="1743.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="984.3" y="1749" width="0.2" height="15.0" fill="rgb(230,79,3)" rx="2" ry="2" />
<text  x="987.28" y="1759.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (4 samples, 0.07%)</title><rect x="159.6" y="1893" width="0.8" height="15.0" fill="rgb(245,125,22)" rx="2" ry="2" />
<text  x="162.63" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="260.7" y="1893" width="0.2" height="15.0" fill="rgb(218,148,16)" rx="2" ry="2" />
<text  x="263.71" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="895.9" y="1781" width="0.2" height="15.0" fill="rgb(245,153,43)" rx="2" ry="2" />
<text  x="898.89" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="984.3" y="1893" width="0.2" height="15.0" fill="rgb(232,2,35)" rx="2" ry="2" />
<text  x="987.28" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="144.2" y="1893" width="0.6" height="15.0" fill="rgb(218,174,29)" rx="2" ry="2" />
<text  x="147.17" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1051.9" y="2021" width="0.4" height="15.0" fill="rgb(205,75,21)" rx="2" ry="2" />
<text  x="1054.86" y="2031.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="10.4" y="1829" width="0.2" height="15.0" fill="rgb(234,101,18)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (8 samples, 0.13%)</title><rect x="1105.6" y="1893" width="1.6" height="15.0" fill="rgb(213,112,19)" rx="2" ry="2" />
<text  x="1108.57" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="535.6" y="1893" width="0.4" height="15.0" fill="rgb(247,63,16)" rx="2" ry="2" />
<text  x="538.59" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="405" width="17.9" height="15.0" fill="rgb(238,212,50)" rx="2" ry="2" />
<text  x="106.35" y="415.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1973" width="0.2" height="15.0" fill="rgb(219,186,31)" rx="2" ry="2" />
<text  x="141.23" y="1983.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="131.7" y="1861" width="0.2" height="15.0" fill="rgb(237,44,39)" rx="2" ry="2" />
<text  x="134.69" y="1871.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1148.2" y="1989" width="0.2" height="15.0" fill="rgb(234,102,50)" rx="2" ry="2" />
<text  x="1151.18" y="1999.5" ></text>
</g>
<g >
<title>__GI___setsockopt (85 samples, 1.43%)</title><rect x="687.8" y="1989" width="16.8" height="15.0" fill="rgb(231,53,26)" rx="2" ry="2" />
<text  x="690.80" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="666.0" y="1973" width="0.6" height="15.0" fill="rgb(206,47,23)" rx="2" ry="2" />
<text  x="669.00" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="714.2" y="1909" width="0.4" height="15.0" fill="rgb(252,85,36)" rx="2" ry="2" />
<text  x="717.16" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="532.2" y="1989" width="0.4" height="15.0" fill="rgb(216,20,2)" rx="2" ry="2" />
<text  x="535.22" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="845.6" y="1925" width="0.5" height="15.0" fill="rgb(215,226,52)" rx="2" ry="2" />
<text  x="848.55" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="93.8" y="1957" width="0.2" height="15.0" fill="rgb(205,200,5)" rx="2" ry="2" />
<text  x="96.83" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="174.3" y="1957" width="0.2" height="15.0" fill="rgb(208,139,2)" rx="2" ry="2" />
<text  x="177.30" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="898.3" y="2005" width="0.2" height="15.0" fill="rgb(229,71,1)" rx="2" ry="2" />
<text  x="901.27" y="2015.5" ></text>
</g>
<g >
<title>new_inode_pseudo (62 samples, 1.04%)</title><rect x="389.1" y="1941" width="12.3" height="15.0" fill="rgb(246,136,53)" rx="2" ry="2" />
<text  x="392.13" y="1951.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="61.9" y="1749" width="0.2" height="15.0" fill="rgb(234,35,48)" rx="2" ry="2" />
<text  x="64.92" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1083.8" y="1877" width="0.2" height="15.0" fill="rgb(213,101,30)" rx="2" ry="2" />
<text  x="1086.77" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="29.0" y="1989" width="0.2" height="15.0" fill="rgb(208,25,19)" rx="2" ry="2" />
<text  x="32.03" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="890.1" y="1925" width="0.2" height="15.0" fill="rgb(237,92,34)" rx="2" ry="2" />
<text  x="893.14" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="71.8" y="1925" width="0.2" height="15.0" fill="rgb(211,5,30)" rx="2" ry="2" />
<text  x="74.83" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="421" width="17.9" height="15.0" fill="rgb(239,96,50)" rx="2" ry="2" />
<text  x="106.35" y="431.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="210.4" y="1717" width="0.2" height="15.0" fill="rgb(234,118,13)" rx="2" ry="2" />
<text  x="213.37" y="1727.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (35 samples, 0.59%)</title><rect x="996.4" y="1957" width="6.9" height="15.0" fill="rgb(233,153,3)" rx="2" ry="2" />
<text  x="999.37" y="1967.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="760.9" y="1733" width="0.6" height="15.0" fill="rgb(253,145,34)" rx="2" ry="2" />
<text  x="763.93" y="1743.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="760.3" y="1717" width="0.2" height="15.0" fill="rgb(241,203,37)" rx="2" ry="2" />
<text  x="763.33" y="1727.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="783.3" y="1557" width="0.2" height="15.0" fill="rgb(236,144,16)" rx="2" ry="2" />
<text  x="786.32" y="1567.5" ></text>
</g>
<g >
<title>syscall (17 samples, 0.29%)</title><rect x="1036.0" y="2037" width="3.4" height="15.0" fill="rgb(244,54,50)" rx="2" ry="2" />
<text  x="1039.01" y="2047.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="476.7" y="1957" width="0.2" height="15.0" fill="rgb(249,15,16)" rx="2" ry="2" />
<text  x="479.73" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="684.0" y="1717" width="0.2" height="15.0" fill="rgb(223,180,32)" rx="2" ry="2" />
<text  x="687.03" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="339.2" y="1701" width="0.2" height="15.0" fill="rgb(224,6,12)" rx="2" ry="2" />
<text  x="342.19" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="741" width="18.1" height="15.0" fill="rgb(205,2,50)" rx="2" ry="2" />
<text  x="106.35" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="33.0" y="1765" width="0.2" height="15.0" fill="rgb(219,199,3)" rx="2" ry="2" />
<text  x="35.99" y="1775.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="468.4" y="1909" width="0.2" height="15.0" fill="rgb(253,223,40)" rx="2" ry="2" />
<text  x="471.40" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="121.0" y="85" width="0.2" height="15.0" fill="rgb(251,34,21)" rx="2" ry="2" />
<text  x="123.98" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="616.8" y="1685" width="0.2" height="15.0" fill="rgb(222,199,42)" rx="2" ry="2" />
<text  x="619.85" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="479.1" y="1861" width="0.2" height="15.0" fill="rgb(250,100,38)" rx="2" ry="2" />
<text  x="482.11" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="765.5" y="1669" width="0.2" height="15.0" fill="rgb(224,134,36)" rx="2" ry="2" />
<text  x="768.49" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="521.1" y="1973" width="1.0" height="15.0" fill="rgb(214,12,26)" rx="2" ry="2" />
<text  x="524.12" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1098.8" y="1909" width="0.2" height="15.0" fill="rgb(205,228,42)" rx="2" ry="2" />
<text  x="1101.83" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="679.3" y="1765" width="0.2" height="15.0" fill="rgb(251,205,33)" rx="2" ry="2" />
<text  x="682.27" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="154.1" y="1781" width="0.2" height="15.0" fill="rgb(242,7,24)" rx="2" ry="2" />
<text  x="157.08" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.02%)</title><rect x="102.4" y="1717" width="23.7" height="15.0" fill="rgb(221,133,34)" rx="2" ry="2" />
<text  x="105.35" y="1727.5" >[..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="898.9" y="1909" width="0.2" height="15.0" fill="rgb(248,128,23)" rx="2" ry="2" />
<text  x="901.86" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="75.6" y="1909" width="0.2" height="15.0" fill="rgb(215,78,3)" rx="2" ry="2" />
<text  x="78.60" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="1128.8" y="1989" width="0.2" height="15.0" fill="rgb(250,170,24)" rx="2" ry="2" />
<text  x="1131.76" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="878.5" y="1861" width="0.1" height="15.0" fill="rgb(211,172,3)" rx="2" ry="2" />
<text  x="881.45" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::AsyncSocketBase (1 samples, 0.02%)</title><rect x="566.7" y="2005" width="0.2" height="15.0" fill="rgb(249,63,44)" rx="2" ry="2" />
<text  x="569.70" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1188.8" y="1941" width="0.2" height="15.0" fill="rgb(210,58,1)" rx="2" ry="2" />
<text  x="1191.81" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="62.1" y="1909" width="0.4" height="15.0" fill="rgb(247,161,29)" rx="2" ry="2" />
<text  x="65.12" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="60.9" y="1877" width="0.8" height="15.0" fill="rgb(216,72,19)" rx="2" ry="2" />
<text  x="63.93" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="212.7" y="1941" width="2.4" height="15.0" fill="rgb(217,171,30)" rx="2" ry="2" />
<text  x="215.74" y="1951.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.02%)</title><rect x="835.0" y="1813" width="0.2" height="15.0" fill="rgb(230,67,9)" rx="2" ry="2" />
<text  x="838.05" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="154.1" y="1893" width="0.2" height="15.0" fill="rgb(244,105,35)" rx="2" ry="2" />
<text  x="157.08" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="513.2" y="1941" width="0.4" height="15.0" fill="rgb(219,46,13)" rx="2" ry="2" />
<text  x="516.19" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="69.3" y="1829" width="0.2" height="15.0" fill="rgb(234,52,37)" rx="2" ry="2" />
<text  x="72.26" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (10 samples, 0.17%)</title><rect x="227.2" y="1877" width="2.0" height="15.0" fill="rgb(249,58,39)" rx="2" ry="2" />
<text  x="230.21" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (9 samples, 0.15%)</title><rect x="79.4" y="1925" width="1.7" height="15.0" fill="rgb(219,53,13)" rx="2" ry="2" />
<text  x="82.37" y="1935.5" ></text>
</g>
<g >
<title>sock_alloc_inode (26 samples, 0.44%)</title><rect x="396.3" y="1909" width="5.1" height="15.0" fill="rgb(210,98,0)" rx="2" ry="2" />
<text  x="399.26" y="1919.5" ></text>
</g>
<g >
<title>__fget (13 samples, 0.22%)</title><rect x="339.6" y="1909" width="2.6" height="15.0" fill="rgb(227,218,36)" rx="2" ry="2" />
<text  x="342.58" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="179.1" y="1957" width="0.2" height="15.0" fill="rgb(227,129,15)" rx="2" ry="2" />
<text  x="182.05" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="140.4" y="1957" width="0.2" height="15.0" fill="rgb(219,61,14)" rx="2" ry="2" />
<text  x="143.41" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (2 samples, 0.03%)</title><rect x="171.7" y="1989" width="0.4" height="15.0" fill="rgb(235,30,48)" rx="2" ry="2" />
<text  x="174.72" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="118.6" y="69" width="0.2" height="15.0" fill="rgb(242,192,14)" rx="2" ry="2" />
<text  x="121.61" y="79.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="891.9" y="1989" width="0.2" height="15.0" fill="rgb(254,110,49)" rx="2" ry="2" />
<text  x="894.93" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="849.9" y="1941" width="0.2" height="15.0" fill="rgb(236,32,53)" rx="2" ry="2" />
<text  x="852.91" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="561.9" y="1845" width="0.2" height="15.0" fill="rgb(216,199,43)" rx="2" ry="2" />
<text  x="564.95" y="1855.5" ></text>
</g>
<g >
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="286.5" y="1861" width="0.6" height="15.0" fill="rgb(226,137,12)" rx="2" ry="2" />
<text  x="289.47" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1129.6" y="2037" width="0.5" height="15.0" fill="rgb(247,18,33)" rx="2" ry="2" />
<text  x="1132.55" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (3 samples, 0.05%)</title><rect x="917.3" y="2037" width="0.6" height="15.0" fill="rgb(217,224,5)" rx="2" ry="2" />
<text  x="920.30" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="92.0" y="1957" width="0.6" height="15.0" fill="rgb(234,8,40)" rx="2" ry="2" />
<text  x="95.05" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.6" y="1829" width="0.2" height="15.0" fill="rgb(218,184,43)" rx="2" ry="2" />
<text  x="163.62" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="322.5" y="1717" width="0.2" height="15.0" fill="rgb(236,131,2)" rx="2" ry="2" />
<text  x="325.54" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="940.1" y="1973" width="0.2" height="15.0" fill="rgb(245,89,43)" rx="2" ry="2" />
<text  x="943.09" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="537.0" y="1717" width="0.2" height="15.0" fill="rgb(238,163,15)" rx="2" ry="2" />
<text  x="539.98" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="294.4" y="1733" width="0.2" height="15.0" fill="rgb(239,91,2)" rx="2" ry="2" />
<text  x="297.40" y="1743.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="882.4" y="1829" width="0.2" height="15.0" fill="rgb(216,203,38)" rx="2" ry="2" />
<text  x="885.42" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="888.2" y="1845" width="0.2" height="15.0" fill="rgb(210,42,0)" rx="2" ry="2" />
<text  x="891.16" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="30.4" y="1941" width="0.4" height="15.0" fill="rgb(221,143,26)" rx="2" ry="2" />
<text  x="33.41" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="887.2" y="1957" width="0.2" height="15.0" fill="rgb(250,138,52)" rx="2" ry="2" />
<text  x="890.17" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.8" y="1957" width="0.2" height="15.0" fill="rgb(230,90,24)" rx="2" ry="2" />
<text  x="578.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="951.4" y="2005" width="0.4" height="15.0" fill="rgb(218,177,10)" rx="2" ry="2" />
<text  x="954.38" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="889.5" y="1925" width="0.4" height="15.0" fill="rgb(210,167,35)" rx="2" ry="2" />
<text  x="892.55" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="963.7" y="1957" width="0.2" height="15.0" fill="rgb(229,183,40)" rx="2" ry="2" />
<text  x="966.67" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="698.3" y="1861" width="0.2" height="15.0" fill="rgb(233,87,46)" rx="2" ry="2" />
<text  x="701.30" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="270.6" y="1781" width="0.2" height="15.0" fill="rgb(206,1,45)" rx="2" ry="2" />
<text  x="273.61" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1175.5" y="1925" width="0.2" height="15.0" fill="rgb(245,63,34)" rx="2" ry="2" />
<text  x="1178.53" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="741.1" y="1701" width="0.2" height="15.0" fill="rgb(225,221,35)" rx="2" ry="2" />
<text  x="744.11" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (2 samples, 0.03%)</title><rect x="657.7" y="2021" width="0.4" height="15.0" fill="rgb(246,9,21)" rx="2" ry="2" />
<text  x="660.67" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="132.7" y="1941" width="0.6" height="15.0" fill="rgb(227,27,33)" rx="2" ry="2" />
<text  x="135.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="115.2" y="37" width="0.2" height="15.0" fill="rgb(248,121,13)" rx="2" ry="2" />
<text  x="118.24" y="47.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="274.6" y="1797" width="0.2" height="15.0" fill="rgb(222,185,51)" rx="2" ry="2" />
<text  x="277.58" y="1807.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="323.9" y="1797" width="0.4" height="15.0" fill="rgb(213,74,42)" rx="2" ry="2" />
<text  x="326.93" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="920.3" y="1989" width="0.2" height="15.0" fill="rgb(206,45,53)" rx="2" ry="2" />
<text  x="923.27" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="328.3" y="1685" width="0.2" height="15.0" fill="rgb(230,34,10)" rx="2" ry="2" />
<text  x="331.29" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="140.4" y="1925" width="0.2" height="15.0" fill="rgb(232,119,12)" rx="2" ry="2" />
<text  x="143.41" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.81%)</title><rect x="102.6" y="1461" width="21.4" height="15.0" fill="rgb(240,136,11)" rx="2" ry="2" />
<text  x="105.55" y="1471.5" >[..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="183.2" y="1989" width="0.4" height="15.0" fill="rgb(237,40,4)" rx="2" ry="2" />
<text  x="186.21" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="919.9" y="1973" width="0.2" height="15.0" fill="rgb(215,102,10)" rx="2" ry="2" />
<text  x="922.87" y="1983.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(242,157,17)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (5 samples, 0.08%)</title><rect x="972.4" y="2021" width="1.0" height="15.0" fill="rgb(212,212,53)" rx="2" ry="2" />
<text  x="975.39" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="127.7" y="1685" width="0.2" height="15.0" fill="rgb(224,202,8)" rx="2" ry="2" />
<text  x="130.72" y="1695.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="34.6" y="2005" width="0.2" height="15.0" fill="rgb(240,28,3)" rx="2" ry="2" />
<text  x="37.58" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="679.3" y="1829" width="0.8" height="15.0" fill="rgb(233,157,1)" rx="2" ry="2" />
<text  x="682.27" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (1 samples, 0.02%)</title><rect x="960.7" y="2037" width="0.2" height="15.0" fill="rgb(207,227,52)" rx="2" ry="2" />
<text  x="963.70" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="699.3" y="1861" width="1.2" height="15.0" fill="rgb(226,224,40)" rx="2" ry="2" />
<text  x="702.29" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="171.3" y="1653" width="0.2" height="15.0" fill="rgb(241,191,44)" rx="2" ry="2" />
<text  x="174.32" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (1 samples, 0.02%)</title><rect x="647.0" y="1989" width="0.2" height="15.0" fill="rgb(217,101,6)" rx="2" ry="2" />
<text  x="649.97" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1163.4" y="1877" width="0.6" height="15.0" fill="rgb(239,57,33)" rx="2" ry="2" />
<text  x="1166.44" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="174.3" y="1877" width="0.2" height="15.0" fill="rgb(233,105,28)" rx="2" ry="2" />
<text  x="177.30" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="525.7" y="1925" width="0.6" height="15.0" fill="rgb(250,72,46)" rx="2" ry="2" />
<text  x="528.68" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (2 samples, 0.03%)</title><rect x="64.7" y="1989" width="0.4" height="15.0" fill="rgb(254,123,25)" rx="2" ry="2" />
<text  x="67.70" y="1999.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1181.9" y="2005" width="0.2" height="15.0" fill="rgb(241,21,28)" rx="2" ry="2" />
<text  x="1184.87" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (37 samples, 0.62%)</title><rect x="1043.1" y="2037" width="7.4" height="15.0" fill="rgb(208,188,5)" rx="2" ry="2" />
<text  x="1046.14" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="620.6" y="1957" width="0.2" height="15.0" fill="rgb(240,58,42)" rx="2" ry="2" />
<text  x="623.61" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="343.5" y="1893" width="0.6" height="15.0" fill="rgb(209,114,49)" rx="2" ry="2" />
<text  x="346.55" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.6" y="1893" width="0.2" height="15.0" fill="rgb(244,167,12)" rx="2" ry="2" />
<text  x="884.62" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="74.6" y="1749" width="0.2" height="15.0" fill="rgb(217,76,43)" rx="2" ry="2" />
<text  x="77.61" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="505.9" y="1957" width="0.2" height="15.0" fill="rgb(253,39,51)" rx="2" ry="2" />
<text  x="508.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.98%)</title><rect x="102.4" y="1653" width="23.3" height="15.0" fill="rgb(243,19,1)" rx="2" ry="2" />
<text  x="105.35" y="1663.5" >[..</text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="159.0" y="1893" width="0.6" height="15.0" fill="rgb(239,115,15)" rx="2" ry="2" />
<text  x="162.04" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="225.6" y="1829" width="0.8" height="15.0" fill="rgb(212,160,9)" rx="2" ry="2" />
<text  x="228.63" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="895.9" y="1861" width="0.2" height="15.0" fill="rgb(235,30,35)" rx="2" ry="2" />
<text  x="898.89" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1015.6" y="2021" width="0.2" height="15.0" fill="rgb(213,184,53)" rx="2" ry="2" />
<text  x="1018.60" y="2031.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="1164.2" y="1957" width="3.0" height="15.0" fill="rgb(246,157,23)" rx="2" ry="2" />
<text  x="1167.24" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="162.4" y="1925" width="0.6" height="15.0" fill="rgb(236,56,9)" rx="2" ry="2" />
<text  x="165.41" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="895.9" y="1685" width="0.2" height="15.0" fill="rgb(227,81,12)" rx="2" ry="2" />
<text  x="898.89" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="95.2" y="2005" width="0.2" height="15.0" fill="rgb(206,144,27)" rx="2" ry="2" />
<text  x="98.22" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1164.0" y="1941" width="0.2" height="15.0" fill="rgb(244,171,7)" rx="2" ry="2" />
<text  x="1167.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="565" width="17.9" height="15.0" fill="rgb(249,50,12)" rx="2" ry="2" />
<text  x="106.35" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="898.1" y="1941" width="0.2" height="15.0" fill="rgb(231,204,39)" rx="2" ry="2" />
<text  x="901.07" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="997" width="18.1" height="15.0" fill="rgb(234,162,52)" rx="2" ry="2" />
<text  x="106.35" y="1007.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="457.9" y="1909" width="0.2" height="15.0" fill="rgb(221,92,43)" rx="2" ry="2" />
<text  x="460.90" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (180 samples, 3.02%)</title><rect x="922.3" y="2037" width="35.6" height="15.0" fill="rgb(237,30,9)" rx="2" ry="2" />
<text  x="925.25" y="2047.5" >fac..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1175.5" y="1829" width="0.2" height="15.0" fill="rgb(228,157,50)" rx="2" ry="2" />
<text  x="1178.53" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (505 samples, 8.48%)</title><rect x="242.5" y="2005" width="100.1" height="15.0" fill="rgb(208,192,5)" rx="2" ry="2" />
<text  x="245.47" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="171.3" y="1637" width="0.2" height="15.0" fill="rgb(240,29,31)" rx="2" ry="2" />
<text  x="174.32" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="261" width="17.9" height="15.0" fill="rgb(232,7,10)" rx="2" ry="2" />
<text  x="106.35" y="271.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="321.0" y="1573" width="0.2" height="15.0" fill="rgb(253,102,25)" rx="2" ry="2" />
<text  x="323.95" y="1583.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="969.0" y="1669" width="0.2" height="15.0" fill="rgb(213,14,8)" rx="2" ry="2" />
<text  x="972.02" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="815.4" y="1589" width="0.8" height="15.0" fill="rgb(215,167,13)" rx="2" ry="2" />
<text  x="818.43" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="68.1" y="1909" width="0.2" height="15.0" fill="rgb(230,124,52)" rx="2" ry="2" />
<text  x="71.07" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="224.6" y="1861" width="0.2" height="15.0" fill="rgb(228,32,21)" rx="2" ry="2" />
<text  x="227.64" y="1871.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="325.3" y="1541" width="0.2" height="15.0" fill="rgb(253,224,45)" rx="2" ry="2" />
<text  x="328.31" y="1551.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="510.2" y="1925" width="0.4" height="15.0" fill="rgb(221,138,19)" rx="2" ry="2" />
<text  x="513.22" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="315.8" y="1717" width="0.2" height="15.0" fill="rgb(219,118,40)" rx="2" ry="2" />
<text  x="318.80" y="1727.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="490.6" y="1909" width="0.2" height="15.0" fill="rgb(205,30,44)" rx="2" ry="2" />
<text  x="493.60" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="1147.2" y="1989" width="0.8" height="15.0" fill="rgb(213,115,10)" rx="2" ry="2" />
<text  x="1150.19" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="343.3" y="1957" width="0.8" height="15.0" fill="rgb(234,226,46)" rx="2" ry="2" />
<text  x="346.35" y="1967.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(252,129,19)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (1 samples, 0.02%)</title><rect x="541.7" y="1989" width="0.2" height="15.0" fill="rgb(246,182,9)" rx="2" ry="2" />
<text  x="544.73" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (69 samples, 1.16%)</title><rect x="688.8" y="1957" width="13.7" height="15.0" fill="rgb(244,31,24)" rx="2" ry="2" />
<text  x="691.79" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="912.5" y="1973" width="0.2" height="15.0" fill="rgb(249,20,48)" rx="2" ry="2" />
<text  x="915.54" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="935.7" y="1893" width="0.8" height="15.0" fill="rgb(229,153,16)" rx="2" ry="2" />
<text  x="938.73" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (736 samples, 12.36%)</title><rect x="715.1" y="1989" width="145.9" height="15.0" fill="rgb(228,111,38)" rx="2" ry="2" />
<text  x="718.15" y="1999.5" >facebook::memcache..</text>
</g>
<g >
<title>tcp_rcv_space_adjust (7 samples, 0.12%)</title><rect x="1120.0" y="1925" width="1.4" height="15.0" fill="rgb(246,141,17)" rx="2" ry="2" />
<text  x="1123.04" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="40.3" y="1973" width="0.2" height="15.0" fill="rgb(231,107,30)" rx="2" ry="2" />
<text  x="43.32" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::close (4 samples, 0.07%)</title><rect x="858.0" y="1941" width="0.8" height="15.0" fill="rgb(206,91,14)" rx="2" ry="2" />
<text  x="861.04" y="1951.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="337.8" y="1893" width="0.2" height="15.0" fill="rgb(207,219,15)" rx="2" ry="2" />
<text  x="340.80" y="1903.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (3 samples, 0.05%)</title><rect x="599.2" y="1845" width="0.6" height="15.0" fill="rgb(247,100,9)" rx="2" ry="2" />
<text  x="602.21" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (4 samples, 0.07%)</title><rect x="905.8" y="2037" width="0.8" height="15.0" fill="rgb(217,189,39)" rx="2" ry="2" />
<text  x="908.80" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="117.4" y="37" width="0.2" height="15.0" fill="rgb(223,173,20)" rx="2" ry="2" />
<text  x="120.42" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="1097.4" y="1909" width="1.0" height="15.0" fill="rgb(208,69,9)" rx="2" ry="2" />
<text  x="1100.45" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="461.3" y="1861" width="0.2" height="15.0" fill="rgb(254,111,14)" rx="2" ry="2" />
<text  x="464.27" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (6 samples, 0.10%)</title><rect x="653.3" y="1989" width="1.2" height="15.0" fill="rgb(237,218,18)" rx="2" ry="2" />
<text  x="656.31" y="1999.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="899.3" y="2005" width="0.2" height="15.0" fill="rgb(241,114,51)" rx="2" ry="2" />
<text  x="902.26" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1096.3" y="1717" width="0.2" height="15.0" fill="rgb(250,65,34)" rx="2" ry="2" />
<text  x="1099.26" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="175.1" y="1941" width="0.6" height="15.0" fill="rgb(241,22,6)" rx="2" ry="2" />
<text  x="178.09" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1163.6" y="1861" width="0.4" height="15.0" fill="rgb(251,131,5)" rx="2" ry="2" />
<text  x="1166.64" y="1871.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="153.9" y="1909" width="0.2" height="15.0" fill="rgb(205,57,29)" rx="2" ry="2" />
<text  x="156.88" y="1919.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="122.2" y="1221" width="0.2" height="15.0" fill="rgb(244,123,7)" rx="2" ry="2" />
<text  x="125.17" y="1231.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="123.8" y="1445" width="0.2" height="15.0" fill="rgb(228,66,2)" rx="2" ry="2" />
<text  x="126.76" y="1455.5" ></text>
</g>
<g >
<title>ep_remove (2 samples, 0.03%)</title><rect x="441.5" y="1989" width="0.3" height="15.0" fill="rgb(233,57,1)" rx="2" ry="2" />
<text  x="444.45" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6 samples, 0.10%)</title><rect x="899.5" y="2005" width="1.1" height="15.0" fill="rgb(252,84,29)" rx="2" ry="2" />
<text  x="902.46" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="333.6" y="1669" width="0.2" height="15.0" fill="rgb(214,191,0)" rx="2" ry="2" />
<text  x="336.64" y="1679.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="322.5" y="1541" width="0.2" height="15.0" fill="rgb(221,204,37)" rx="2" ry="2" />
<text  x="325.54" y="1551.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="730.4" y="1685" width="0.8" height="15.0" fill="rgb(236,205,2)" rx="2" ry="2" />
<text  x="733.41" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="178.9" y="1989" width="0.7" height="15.0" fill="rgb(239,96,0)" rx="2" ry="2" />
<text  x="181.85" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (4 samples, 0.07%)</title><rect x="1142.6" y="2005" width="0.8" height="15.0" fill="rgb(226,21,15)" rx="2" ry="2" />
<text  x="1145.63" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="117.6" y="37" width="0.2" height="15.0" fill="rgb(234,214,15)" rx="2" ry="2" />
<text  x="120.62" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (11 samples, 0.18%)</title><rect x="508.6" y="1973" width="2.2" height="15.0" fill="rgb(242,41,54)" rx="2" ry="2" />
<text  x="511.64" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="505.9" y="1941" width="0.2" height="15.0" fill="rgb(213,184,9)" rx="2" ry="2" />
<text  x="508.86" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="616.8" y="1749" width="0.2" height="15.0" fill="rgb(244,11,14)" rx="2" ry="2" />
<text  x="619.85" y="1759.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="301.5" y="1685" width="0.2" height="15.0" fill="rgb(215,163,37)" rx="2" ry="2" />
<text  x="304.53" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="333.6" y="1765" width="0.2" height="15.0" fill="rgb(234,29,38)" rx="2" ry="2" />
<text  x="336.64" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="968.8" y="1989" width="0.4" height="15.0" fill="rgb(220,134,22)" rx="2" ry="2" />
<text  x="971.82" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="120.0" y="85" width="0.4" height="15.0" fill="rgb(252,109,5)" rx="2" ry="2" />
<text  x="122.99" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1909" width="0.2" height="15.0" fill="rgb(206,59,4)" rx="2" ry="2" />
<text  x="149.95" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="523.7" y="2005" width="0.4" height="15.0" fill="rgb(211,36,54)" rx="2" ry="2" />
<text  x="526.70" y="2015.5" ></text>
</g>
<g >
<title>__libc_recv (477 samples, 8.01%)</title><rect x="1042.0" y="2053" width="94.5" height="15.0" fill="rgb(208,102,26)" rx="2" ry="2" />
<text  x="1044.95" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (3 samples, 0.05%)</title><rect x="979.7" y="2005" width="0.6" height="15.0" fill="rgb(228,162,4)" rx="2" ry="2" />
<text  x="982.72" y="2015.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="561.9" y="1781" width="0.2" height="15.0" fill="rgb(223,38,0)" rx="2" ry="2" />
<text  x="564.95" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="203.2" y="1941" width="0.2" height="15.0" fill="rgb(215,53,1)" rx="2" ry="2" />
<text  x="206.23" y="1951.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="819.4" y="1717" width="0.2" height="15.0" fill="rgb(214,215,49)" rx="2" ry="2" />
<text  x="822.39" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (5 samples, 0.08%)</title><rect x="522.7" y="1989" width="1.0" height="15.0" fill="rgb(253,118,36)" rx="2" ry="2" />
<text  x="525.71" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="531.4" y="1941" width="0.2" height="15.0" fill="rgb(239,32,51)" rx="2" ry="2" />
<text  x="534.43" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="939.3" y="1909" width="0.4" height="15.0" fill="rgb(213,10,0)" rx="2" ry="2" />
<text  x="942.29" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="460.7" y="1797" width="0.2" height="15.0" fill="rgb(251,50,26)" rx="2" ry="2" />
<text  x="463.68" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (82 samples, 1.38%)</title><rect x="299.4" y="1717" width="16.2" height="15.0" fill="rgb(236,114,32)" rx="2" ry="2" />
<text  x="302.35" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="78.0" y="1909" width="0.4" height="15.0" fill="rgb(245,170,53)" rx="2" ry="2" />
<text  x="80.98" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="1174.7" y="1989" width="0.2" height="15.0" fill="rgb(230,71,34)" rx="2" ry="2" />
<text  x="1177.74" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="520.7" y="1989" width="0.2" height="15.0" fill="rgb(234,107,33)" rx="2" ry="2" />
<text  x="523.73" y="1999.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="222.5" y="1877" width="0.2" height="15.0" fill="rgb(210,192,43)" rx="2" ry="2" />
<text  x="225.46" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="453.3" y="1973" width="0.4" height="15.0" fill="rgb(214,180,37)" rx="2" ry="2" />
<text  x="456.34" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="29.6" y="1957" width="0.2" height="15.0" fill="rgb(246,9,43)" rx="2" ry="2" />
<text  x="32.62" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.4" y="1989" width="0.2" height="15.0" fill="rgb(220,44,39)" rx="2" ry="2" />
<text  x="1036.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_current_mss (9 samples, 0.15%)</title><rect x="333.8" y="1861" width="1.8" height="15.0" fill="rgb(218,147,24)" rx="2" ry="2" />
<text  x="336.84" y="1871.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9 samples, 0.15%)</title><rect x="764.1" y="1685" width="1.8" height="15.0" fill="rgb(219,131,41)" rx="2" ry="2" />
<text  x="767.10" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="963.9" y="1957" width="0.8" height="15.0" fill="rgb(237,95,43)" rx="2" ry="2" />
<text  x="966.87" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="563.3" y="1829" width="0.2" height="15.0" fill="rgb(207,49,19)" rx="2" ry="2" />
<text  x="566.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.51%)</title><rect x="103.3" y="325" width="17.9" height="15.0" fill="rgb(205,191,15)" rx="2" ry="2" />
<text  x="106.35" y="335.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1099.2" y="1893" width="0.2" height="15.0" fill="rgb(229,156,20)" rx="2" ry="2" />
<text  x="1102.23" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="69.3" y="1493" width="0.2" height="15.0" fill="rgb(216,219,5)" rx="2" ry="2" />
<text  x="72.26" y="1503.5" ></text>
</g>
<g >
<title>tcp_setsockopt (21 samples, 0.35%)</title><rect x="696.7" y="1909" width="4.2" height="15.0" fill="rgb(241,3,7)" rx="2" ry="2" />
<text  x="699.71" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="956.9" y="1973" width="0.4" height="15.0" fill="rgb(248,69,36)" rx="2" ry="2" />
<text  x="959.93" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1181.5" y="1957" width="0.2" height="15.0" fill="rgb(208,39,47)" rx="2" ry="2" />
<text  x="1184.48" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (1 samples, 0.02%)</title><rect x="621.4" y="2021" width="0.2" height="15.0" fill="rgb(250,206,49)" rx="2" ry="2" />
<text  x="624.40" y="2031.5" ></text>
</g>
<g >
<title>skb_release_head_state (25 samples, 0.42%)</title><rect x="1088.3" y="1893" width="5.0" height="15.0" fill="rgb(236,178,18)" rx="2" ry="2" />
<text  x="1091.33" y="1903.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="258.1" y="1941" width="0.2" height="15.0" fill="rgb(225,214,9)" rx="2" ry="2" />
<text  x="261.13" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="409.1" y="1877" width="0.2" height="15.0" fill="rgb(206,55,19)" rx="2" ry="2" />
<text  x="412.15" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.71%)</title><rect x="102.6" y="1285" width="20.2" height="15.0" fill="rgb(225,110,16)" rx="2" ry="2" />
<text  x="105.55" y="1295.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1149.2" y="2005" width="0.2" height="15.0" fill="rgb(243,19,8)" rx="2" ry="2" />
<text  x="1152.17" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="154.1" y="1717" width="0.2" height="15.0" fill="rgb(221,202,47)" rx="2" ry="2" />
<text  x="157.08" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1188.8" y="2037" width="0.2" height="15.0" fill="rgb(219,45,20)" rx="2" ry="2" />
<text  x="1191.81" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="131.7" y="1941" width="0.2" height="15.0" fill="rgb(232,150,9)" rx="2" ry="2" />
<text  x="134.69" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (8 samples, 0.13%)</title><rect x="297.8" y="1605" width="1.6" height="15.0" fill="rgb(251,119,46)" rx="2" ry="2" />
<text  x="300.77" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (97 samples, 1.63%)</title><rect x="665.0" y="2005" width="19.2" height="15.0" fill="rgb(232,172,51)" rx="2" ry="2" />
<text  x="668.01" y="2015.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (2 samples, 0.03%)</title><rect x="830.7" y="1765" width="0.4" height="15.0" fill="rgb(223,136,13)" rx="2" ry="2" />
<text  x="833.69" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="628.9" y="2005" width="0.8" height="15.0" fill="rgb(249,220,6)" rx="2" ry="2" />
<text  x="631.94" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="1128.6" y="1957" width="0.2" height="15.0" fill="rgb(244,11,27)" rx="2" ry="2" />
<text  x="1131.56" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="826.7" y="1541" width="0.2" height="15.0" fill="rgb(216,100,1)" rx="2" ry="2" />
<text  x="829.72" y="1551.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="679.5" y="1765" width="0.6" height="15.0" fill="rgb(233,16,37)" rx="2" ry="2" />
<text  x="682.47" y="1775.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="596.2" y="1669" width="0.2" height="15.0" fill="rgb(250,118,35)" rx="2" ry="2" />
<text  x="599.23" y="1679.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="747.3" y="1621" width="0.2" height="15.0" fill="rgb(225,165,43)" rx="2" ry="2" />
<text  x="750.25" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="629.3" y="1973" width="0.4" height="15.0" fill="rgb(251,106,33)" rx="2" ry="2" />
<text  x="632.33" y="1983.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="817.4" y="1685" width="0.2" height="15.0" fill="rgb(213,18,34)" rx="2" ry="2" />
<text  x="820.41" y="1695.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="479.1" y="1813" width="0.2" height="15.0" fill="rgb(254,110,28)" rx="2" ry="2" />
<text  x="482.11" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="736.0" y="1605" width="0.2" height="15.0" fill="rgb(254,56,11)" rx="2" ry="2" />
<text  x="738.96" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 0.69%)</title><rect x="1154.9" y="1941" width="8.1" height="15.0" fill="rgb(231,119,13)" rx="2" ry="2" />
<text  x="1157.92" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17 samples, 0.29%)</title><rect x="303.1" y="1685" width="3.4" height="15.0" fill="rgb(206,144,15)" rx="2" ry="2" />
<text  x="306.12" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="521.7" y="1957" width="0.2" height="15.0" fill="rgb(212,47,30)" rx="2" ry="2" />
<text  x="524.72" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1007.3" y="1941" width="0.2" height="15.0" fill="rgb(237,34,28)" rx="2" ry="2" />
<text  x="1010.27" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="339.2" y="1765" width="0.2" height="15.0" fill="rgb(218,57,0)" rx="2" ry="2" />
<text  x="342.19" y="1775.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="339.0" y="1909" width="0.2" height="15.0" fill="rgb(251,203,29)" rx="2" ry="2" />
<text  x="341.99" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.03%)</title><rect x="617.4" y="1845" width="0.4" height="15.0" fill="rgb(210,60,3)" rx="2" ry="2" />
<text  x="620.44" y="1855.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="730.4" y="1829" width="0.8" height="15.0" fill="rgb(217,11,20)" rx="2" ry="2" />
<text  x="733.41" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="562.5" y="1893" width="0.2" height="15.0" fill="rgb(226,75,22)" rx="2" ry="2" />
<text  x="565.54" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="51.6" y="1909" width="0.2" height="15.0" fill="rgb(212,227,35)" rx="2" ry="2" />
<text  x="54.62" y="1919.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="730.4" y="1797" width="0.8" height="15.0" fill="rgb(252,95,35)" rx="2" ry="2" />
<text  x="733.41" y="1807.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1111.5" y="1477" width="0.2" height="15.0" fill="rgb(210,97,22)" rx="2" ry="2" />
<text  x="1114.52" y="1487.5" ></text>
</g>
<g >
<title>fput (3 samples, 0.05%)</title><rect x="474.0" y="1973" width="0.5" height="15.0" fill="rgb(214,5,38)" rx="2" ry="2" />
<text  x="476.95" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="323.1" y="1685" width="0.2" height="15.0" fill="rgb(216,166,23)" rx="2" ry="2" />
<text  x="326.13" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="325.3" y="1589" width="0.2" height="15.0" fill="rgb(235,194,36)" rx="2" ry="2" />
<text  x="328.31" y="1599.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="935.5" y="1877" width="0.2" height="15.0" fill="rgb(210,9,50)" rx="2" ry="2" />
<text  x="938.53" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1020.4" y="1989" width="0.2" height="15.0" fill="rgb(234,8,49)" rx="2" ry="2" />
<text  x="1023.35" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (11 samples, 0.18%)</title><rect x="69.9" y="1941" width="2.1" height="15.0" fill="rgb(215,150,38)" rx="2" ry="2" />
<text  x="72.85" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="136.0" y="1941" width="0.4" height="15.0" fill="rgb(245,201,28)" rx="2" ry="2" />
<text  x="139.05" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="530.8" y="1957" width="1.4" height="15.0" fill="rgb(212,172,17)" rx="2" ry="2" />
<text  x="533.83" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="127.7" y="1701" width="0.2" height="15.0" fill="rgb(218,189,9)" rx="2" ry="2" />
<text  x="130.72" y="1711.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="215.3" y="1637" width="0.2" height="15.0" fill="rgb(225,193,6)" rx="2" ry="2" />
<text  x="218.32" y="1647.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="166.8" y="2021" width="0.2" height="15.0" fill="rgb(233,182,29)" rx="2" ry="2" />
<text  x="169.77" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="123.0" y="1317" width="0.2" height="15.0" fill="rgb(211,47,11)" rx="2" ry="2" />
<text  x="125.97" y="1327.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="519.7" y="1973" width="0.4" height="15.0" fill="rgb(205,115,12)" rx="2" ry="2" />
<text  x="522.73" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="343.5" y="1861" width="0.6" height="15.0" fill="rgb(219,70,42)" rx="2" ry="2" />
<text  x="346.55" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="922.1" y="2037" width="0.2" height="15.0" fill="rgb(216,165,46)" rx="2" ry="2" />
<text  x="925.05" y="2047.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="596.2" y="1685" width="0.2" height="15.0" fill="rgb(228,49,28)" rx="2" ry="2" />
<text  x="599.23" y="1695.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (9 samples, 0.15%)</title><rect x="1179.7" y="2053" width="1.8" height="15.0" fill="rgb(230,116,24)" rx="2" ry="2" />
<text  x="1182.69" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="740.7" y="1701" width="0.2" height="15.0" fill="rgb(215,116,11)" rx="2" ry="2" />
<text  x="743.71" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (605 samples, 10.16%)</title><rect x="719.9" y="1893" width="119.9" height="15.0" fill="rgb(240,116,22)" rx="2" ry="2" />
<text  x="722.90" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (5 samples, 0.08%)</title><rect x="714.0" y="1941" width="0.9" height="15.0" fill="rgb(223,58,35)" rx="2" ry="2" />
<text  x="716.96" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="646.8" y="1957" width="0.2" height="15.0" fill="rgb(251,211,40)" rx="2" ry="2" />
<text  x="649.77" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="969.0" y="1653" width="0.2" height="15.0" fill="rgb(217,23,44)" rx="2" ry="2" />
<text  x="972.02" y="1663.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="858.8" y="1893" width="0.2" height="15.0" fill="rgb(228,186,38)" rx="2" ry="2" />
<text  x="861.83" y="1903.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="809.7" y="1669" width="0.2" height="15.0" fill="rgb(233,61,4)" rx="2" ry="2" />
<text  x="812.68" y="1679.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (3 samples, 0.05%)</title><rect x="517.4" y="1957" width="0.6" height="15.0" fill="rgb(240,227,27)" rx="2" ry="2" />
<text  x="520.36" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="1010.4" y="1973" width="0.4" height="15.0" fill="rgb(244,222,54)" rx="2" ry="2" />
<text  x="1013.44" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (8 samples, 0.13%)</title><rect x="297.8" y="1621" width="1.6" height="15.0" fill="rgb(238,21,50)" rx="2" ry="2" />
<text  x="300.77" y="1631.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="127.7" y="1573" width="0.2" height="15.0" fill="rgb(218,95,13)" rx="2" ry="2" />
<text  x="130.72" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (8 samples, 0.13%)</title><rect x="297.8" y="1637" width="1.6" height="15.0" fill="rgb(222,53,9)" rx="2" ry="2" />
<text  x="300.77" y="1647.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (5 samples, 0.08%)</title><rect x="90.7" y="1957" width="1.0" height="15.0" fill="rgb(240,15,50)" rx="2" ry="2" />
<text  x="93.66" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="661.8" y="2021" width="0.2" height="15.0" fill="rgb(236,97,6)" rx="2" ry="2" />
<text  x="664.83" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="55.0" y="1909" width="0.2" height="15.0" fill="rgb(219,68,46)" rx="2" ry="2" />
<text  x="57.99" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (1 samples, 0.02%)</title><rect x="548.1" y="1989" width="0.2" height="15.0" fill="rgb(215,80,34)" rx="2" ry="2" />
<text  x="551.08" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="680.1" y="1749" width="0.2" height="15.0" fill="rgb(251,33,7)" rx="2" ry="2" />
<text  x="683.07" y="1759.5" ></text>
</g>
<g >
<title>sys_getsockname (2 samples, 0.03%)</title><rect x="601.4" y="1909" width="0.4" height="15.0" fill="rgb(242,41,7)" rx="2" ry="2" />
<text  x="604.39" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="136.8" y="1957" width="0.6" height="15.0" fill="rgb(250,187,21)" rx="2" ry="2" />
<text  x="139.84" y="1967.5" ></text>
</g>
<g >
<title>wakeup_source_unregister (1 samples, 0.02%)</title><rect x="478.3" y="1973" width="0.2" height="15.0" fill="rgb(250,47,49)" rx="2" ry="2" />
<text  x="481.31" y="1983.5" ></text>
</g>
<g >
<title>release_sock (10 samples, 0.17%)</title><rect x="384.8" y="1941" width="2.0" height="15.0" fill="rgb(214,219,46)" rx="2" ry="2" />
<text  x="387.77" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="491.0" y="1797" width="0.2" height="15.0" fill="rgb(225,39,34)" rx="2" ry="2" />
<text  x="494.00" y="1807.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1007.3" y="1861" width="0.2" height="15.0" fill="rgb(226,183,32)" rx="2" ry="2" />
<text  x="1010.27" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="836.0" y="1845" width="0.2" height="15.0" fill="rgb(229,87,25)" rx="2" ry="2" />
<text  x="839.04" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="322.5" y="1813" width="0.2" height="15.0" fill="rgb(242,150,47)" rx="2" ry="2" />
<text  x="325.54" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (100 samples, 1.68%)</title><rect x="66.3" y="1973" width="19.8" height="15.0" fill="rgb(238,60,24)" rx="2" ry="2" />
<text  x="69.28" y="1983.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (3 samples, 0.05%)</title><rect x="742.3" y="1669" width="0.6" height="15.0" fill="rgb(222,183,49)" rx="2" ry="2" />
<text  x="745.30" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="118.6" y="37" width="0.2" height="15.0" fill="rgb(231,194,21)" rx="2" ry="2" />
<text  x="121.61" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.15%)</title><rect x="328.7" y="1733" width="1.8" height="15.0" fill="rgb(240,62,45)" rx="2" ry="2" />
<text  x="331.68" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="535.0" y="1925" width="0.4" height="15.0" fill="rgb(237,219,20)" rx="2" ry="2" />
<text  x="537.99" y="1935.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="471.8" y="1861" width="0.2" height="15.0" fill="rgb(227,157,46)" rx="2" ry="2" />
<text  x="474.77" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="174.3" y="1941" width="0.2" height="15.0" fill="rgb(237,0,42)" rx="2" ry="2" />
<text  x="177.30" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="253.0" y="1829" width="0.2" height="15.0" fill="rgb(229,91,32)" rx="2" ry="2" />
<text  x="255.98" y="1839.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="815.2" y="1605" width="0.2" height="15.0" fill="rgb(236,54,9)" rx="2" ry="2" />
<text  x="818.23" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="826.7" y="1525" width="0.2" height="15.0" fill="rgb(233,61,33)" rx="2" ry="2" />
<text  x="829.72" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="231.2" y="1829" width="0.2" height="15.0" fill="rgb(216,152,33)" rx="2" ry="2" />
<text  x="234.18" y="1839.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="298.4" y="1525" width="0.2" height="15.0" fill="rgb(245,66,29)" rx="2" ry="2" />
<text  x="301.36" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="343.7" y="1685" width="0.2" height="15.0" fill="rgb(234,115,8)" rx="2" ry="2" />
<text  x="346.75" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="392.9" y="1861" width="0.2" height="15.0" fill="rgb(226,210,15)" rx="2" ry="2" />
<text  x="395.90" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="707.2" y="1973" width="0.2" height="15.0" fill="rgb(211,172,0)" rx="2" ry="2" />
<text  x="710.22" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="103.3" y="773" width="18.1" height="15.0" fill="rgb(229,187,29)" rx="2" ry="2" />
<text  x="106.35" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="176.1" y="1989" width="0.2" height="15.0" fill="rgb(232,156,30)" rx="2" ry="2" />
<text  x="179.08" y="1999.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="321.9" y="1813" width="0.2" height="15.0" fill="rgb(216,57,50)" rx="2" ry="2" />
<text  x="324.94" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="274.8" y="1861" width="0.4" height="15.0" fill="rgb(229,197,52)" rx="2" ry="2" />
<text  x="277.78" y="1871.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (2 samples, 0.03%)</title><rect x="103.3" y="37" width="0.4" height="15.0" fill="rgb(212,150,32)" rx="2" ry="2" />
<text  x="106.35" y="47.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.07%)</title><rect x="102.2" y="1797" width="24.3" height="15.0" fill="rgb(224,13,48)" rx="2" ry="2" />
<text  x="105.16" y="1807.5" >[..</text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (22 samples, 0.37%)</title><rect x="853.1" y="1941" width="4.3" height="15.0" fill="rgb(251,136,47)" rx="2" ry="2" />
<text  x="856.08" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="994.0" y="1973" width="0.2" height="15.0" fill="rgb(219,45,19)" rx="2" ry="2" />
<text  x="996.99" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="563.3" y="1797" width="0.2" height="15.0" fill="rgb(253,196,2)" rx="2" ry="2" />
<text  x="566.34" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="93.8" y="1989" width="0.2" height="15.0" fill="rgb(213,143,41)" rx="2" ry="2" />
<text  x="96.83" y="1999.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="82.7" y="1877" width="0.2" height="15.0" fill="rgb(229,114,37)" rx="2" ry="2" />
<text  x="85.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="505.9" y="1797" width="0.2" height="15.0" fill="rgb(208,199,40)" rx="2" ry="2" />
<text  x="508.86" y="1807.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="976.8" y="2037" width="0.5" height="15.0" fill="rgb(216,178,44)" rx="2" ry="2" />
<text  x="979.75" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1096.3" y="1685" width="0.2" height="15.0" fill="rgb(245,172,20)" rx="2" ry="2" />
<text  x="1099.26" y="1695.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="930.6" y="1925" width="1.2" height="15.0" fill="rgb(227,46,8)" rx="2" ry="2" />
<text  x="933.57" y="1935.5" ></text>
</g>
<g >
<title>__fdget_raw (8 samples, 0.13%)</title><rect x="560.6" y="1925" width="1.5" height="15.0" fill="rgb(220,155,43)" rx="2" ry="2" />
<text  x="563.56" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="1172.0" y="1989" width="0.2" height="15.0" fill="rgb(234,27,49)" rx="2" ry="2" />
<text  x="1174.97" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1163.4" y="1957" width="0.6" height="15.0" fill="rgb(205,166,39)" rx="2" ry="2" />
<text  x="1166.44" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="171.3" y="1717" width="0.2" height="15.0" fill="rgb(249,51,54)" rx="2" ry="2" />
<text  x="174.32" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="857.0" y="1893" width="0.4" height="15.0" fill="rgb(241,14,47)" rx="2" ry="2" />
<text  x="860.05" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="849.5" y="1877" width="0.2" height="15.0" fill="rgb(240,89,41)" rx="2" ry="2" />
<text  x="852.52" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="919.9" y="1957" width="0.2" height="15.0" fill="rgb(229,77,10)" rx="2" ry="2" />
<text  x="922.87" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="891.5" y="1941" width="0.2" height="15.0" fill="rgb(228,145,29)" rx="2" ry="2" />
<text  x="894.53" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="111.7" y="37" width="0.4" height="15.0" fill="rgb(228,187,0)" rx="2" ry="2" />
<text  x="114.67" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="888.2" y="1765" width="0.2" height="15.0" fill="rgb(215,7,13)" rx="2" ry="2" />
<text  x="891.16" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="274.6" y="1845" width="0.2" height="15.0" fill="rgb(230,35,42)" rx="2" ry="2" />
<text  x="277.58" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="171.3" y="1813" width="0.2" height="15.0" fill="rgb(235,79,14)" rx="2" ry="2" />
<text  x="174.32" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1149.2" y="2037" width="0.2" height="15.0" fill="rgb(228,104,43)" rx="2" ry="2" />
<text  x="1152.17" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="984.3" y="1973" width="0.2" height="15.0" fill="rgb(243,165,43)" rx="2" ry="2" />
<text  x="987.28" y="1983.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.03%)</title><rect x="476.9" y="1973" width="0.4" height="15.0" fill="rgb(247,78,24)" rx="2" ry="2" />
<text  x="479.93" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="954.0" y="2005" width="0.2" height="15.0" fill="rgb(236,5,50)" rx="2" ry="2" />
<text  x="956.96" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="816.2" y="1685" width="0.2" height="15.0" fill="rgb(231,202,12)" rx="2" ry="2" />
<text  x="819.22" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1177.3" y="2005" width="0.2" height="15.0" fill="rgb(222,132,1)" rx="2" ry="2" />
<text  x="1180.32" y="2015.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="257.5" y="1893" width="0.2" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="260.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (2 samples, 0.03%)</title><rect x="341.8" y="1621" width="0.4" height="15.0" fill="rgb(239,226,5)" rx="2" ry="2" />
<text  x="344.76" y="1631.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="857.2" y="1845" width="0.2" height="15.0" fill="rgb(233,35,33)" rx="2" ry="2" />
<text  x="860.25" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="903.8" y="2005" width="0.2" height="15.0" fill="rgb(252,68,48)" rx="2" ry="2" />
<text  x="906.82" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="908.8" y="1989" width="0.2" height="15.0" fill="rgb(245,163,12)" rx="2" ry="2" />
<text  x="911.77" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (1 samples, 0.02%)</title><rect x="66.1" y="1973" width="0.2" height="15.0" fill="rgb(206,109,1)" rx="2" ry="2" />
<text  x="69.09" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313 samples, 5.26%)</title><rect x="354.6" y="2021" width="62.1" height="15.0" fill="rgb(240,103,50)" rx="2" ry="2" />
<text  x="357.65" y="2031.5" >entry_..</text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (114 samples, 1.91%)</title><rect x="583.4" y="2005" width="22.5" height="15.0" fill="rgb(236,50,40)" rx="2" ry="2" />
<text  x="586.35" y="2015.5" >f..</text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="274.6" y="1765" width="0.2" height="15.0" fill="rgb(252,142,48)" rx="2" ry="2" />
<text  x="277.58" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="256.5" y="1909" width="0.2" height="15.0" fill="rgb(216,41,32)" rx="2" ry="2" />
<text  x="259.54" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="153.5" y="1909" width="0.4" height="15.0" fill="rgb(247,69,10)" rx="2" ry="2" />
<text  x="156.49" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="957.3" y="1973" width="0.2" height="15.0" fill="rgb(242,213,23)" rx="2" ry="2" />
<text  x="960.33" y="1983.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="906.6" y="1973" width="0.4" height="15.0" fill="rgb(216,176,1)" rx="2" ry="2" />
<text  x="909.59" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="253.0" y="1813" width="0.2" height="15.0" fill="rgb(235,195,35)" rx="2" ry="2" />
<text  x="255.98" y="1823.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="679.3" y="1797" width="0.8" height="15.0" fill="rgb(214,82,38)" rx="2" ry="2" />
<text  x="682.27" y="1807.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="126.3" y="1781" width="0.2" height="15.0" fill="rgb(209,127,10)" rx="2" ry="2" />
<text  x="129.34" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="315.8" y="1653" width="0.2" height="15.0" fill="rgb(234,224,31)" rx="2" ry="2" />
<text  x="318.80" y="1663.5" ></text>
</g>
<g >
<title>event_del@plt (1 samples, 0.02%)</title><rect x="60.3" y="1909" width="0.2" height="15.0" fill="rgb(253,1,36)" rx="2" ry="2" />
<text  x="63.34" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="57.4" y="1909" width="0.2" height="15.0" fill="rgb(240,144,2)" rx="2" ry="2" />
<text  x="60.37" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (13 samples, 0.22%)</title><rect x="69.7" y="1957" width="2.5" height="15.0" fill="rgb(222,106,26)" rx="2" ry="2" />
<text  x="72.65" y="1967.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="813.2" y="1637" width="0.2" height="15.0" fill="rgb(250,133,12)" rx="2" ry="2" />
<text  x="816.25" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="498.1" y="1765" width="0.8" height="15.0" fill="rgb(217,223,1)" rx="2" ry="2" />
<text  x="501.13" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="51.6" y="1717" width="0.2" height="15.0" fill="rgb(220,221,29)" rx="2" ry="2" />
<text  x="54.62" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="736.0" y="1621" width="0.2" height="15.0" fill="rgb(230,177,32)" rx="2" ry="2" />
<text  x="738.96" y="1631.5" ></text>
</g>
<g >
<title>__kfree_skb (94 samples, 1.58%)</title><rect x="1078.4" y="1925" width="18.7" height="15.0" fill="rgb(213,102,13)" rx="2" ry="2" />
<text  x="1081.42" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="331.1" y="1813" width="0.2" height="15.0" fill="rgb(226,126,7)" rx="2" ry="2" />
<text  x="334.06" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="478.1" y="1733" width="0.2" height="15.0" fill="rgb(238,98,48)" rx="2" ry="2" />
<text  x="481.12" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="927.4" y="1925" width="0.2" height="15.0" fill="rgb(222,191,14)" rx="2" ry="2" />
<text  x="930.40" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (111 samples, 1.86%)</title><rect x="583.4" y="1973" width="22.0" height="15.0" fill="rgb(207,121,22)" rx="2" ry="2" />
<text  x="586.35" y="1983.5" >f..</text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="847.3" y="1893" width="0.4" height="15.0" fill="rgb(219,144,23)" rx="2" ry="2" />
<text  x="850.34" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (44 samples, 0.74%)</title><rect x="1111.1" y="1653" width="8.7" height="15.0" fill="rgb(240,179,19)" rx="2" ry="2" />
<text  x="1114.12" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (7 samples, 0.12%)</title><rect x="713.8" y="1973" width="1.3" height="15.0" fill="rgb(236,126,4)" rx="2" ry="2" />
<text  x="716.76" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="297.4" y="1509" width="0.4" height="15.0" fill="rgb(249,46,15)" rx="2" ry="2" />
<text  x="300.37" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="325.3" y="1621" width="0.2" height="15.0" fill="rgb(212,59,10)" rx="2" ry="2" />
<text  x="328.31" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="51.6" y="1685" width="0.2" height="15.0" fill="rgb(227,229,5)" rx="2" ry="2" />
<text  x="54.62" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="330.5" y="1557" width="0.2" height="15.0" fill="rgb(226,80,33)" rx="2" ry="2" />
<text  x="333.47" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="900.6" y="2021" width="0.6" height="15.0" fill="rgb(249,130,45)" rx="2" ry="2" />
<text  x="903.65" y="2031.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="335.0" y="1845" width="0.6" height="15.0" fill="rgb(212,163,22)" rx="2" ry="2" />
<text  x="338.03" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="713.8" y="1909" width="0.2" height="15.0" fill="rgb(247,148,32)" rx="2" ry="2" />
<text  x="716.76" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.10%)</title><rect x="298.0" y="1557" width="1.2" height="15.0" fill="rgb(211,168,47)" rx="2" ry="2" />
<text  x="300.96" y="1567.5" ></text>
</g>
<g >
<title>__close_fd (14 samples, 0.24%)</title><rect x="836.2" y="1845" width="2.8" height="15.0" fill="rgb(226,203,16)" rx="2" ry="2" />
<text  x="839.24" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (2 samples, 0.03%)</title><rect x="513.8" y="1989" width="0.4" height="15.0" fill="rgb(249,98,23)" rx="2" ry="2" />
<text  x="516.79" y="1999.5" ></text>
</g>
</g>
</svg>
