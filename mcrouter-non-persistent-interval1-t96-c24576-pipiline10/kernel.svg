<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="571.0" y="2005" width="0.2" height="15.0" fill="rgb(215,53,39)" rx="2" ry="2" />
<text  x="573.98" y="2015.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1185.8" y="2053" width="0.2" height="15.0" fill="rgb(234,52,3)" rx="2" ry="2" />
<text  x="1188.81" y="2063.5" ></text>
</g>
<g >
<title>__ip_local_out (14 samples, 0.24%)</title><rect x="779.2" y="1637" width="2.8" height="15.0" fill="rgb(252,83,12)" rx="2" ry="2" />
<text  x="782.18" y="1647.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="81.8" y="1941" width="0.2" height="15.0" fill="rgb(239,113,20)" rx="2" ry="2" />
<text  x="84.79" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="399.7" y="1813" width="0.2" height="15.0" fill="rgb(239,111,42)" rx="2" ry="2" />
<text  x="402.68" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="687.2" y="1813" width="0.2" height="15.0" fill="rgb(253,220,10)" rx="2" ry="2" />
<text  x="690.25" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="874.9" y="1989" width="0.6" height="15.0" fill="rgb(251,74,22)" rx="2" ry="2" />
<text  x="877.91" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="527.9" y="1637" width="0.2" height="15.0" fill="rgb(240,74,7)" rx="2" ry="2" />
<text  x="530.91" y="1647.5" ></text>
</g>
<g >
<title>__GI___setsockopt (16 samples, 0.27%)</title><rect x="197.7" y="1957" width="3.2" height="15.0" fill="rgb(241,181,29)" rx="2" ry="2" />
<text  x="200.66" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (2 samples, 0.03%)</title><rect x="1148.1" y="2005" width="0.4" height="15.0" fill="rgb(228,199,40)" rx="2" ry="2" />
<text  x="1151.12" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="237.1" y="1925" width="0.2" height="15.0" fill="rgb(247,24,7)" rx="2" ry="2" />
<text  x="240.15" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="546.1" y="1909" width="0.8" height="15.0" fill="rgb(240,151,24)" rx="2" ry="2" />
<text  x="549.06" y="1919.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="381.7" y="1877" width="0.2" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="384.73" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="747.9" y="1765" width="0.4" height="15.0" fill="rgb(224,84,26)" rx="2" ry="2" />
<text  x="750.87" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="341.0" y="1717" width="0.4" height="15.0" fill="rgb(232,67,25)" rx="2" ry="2" />
<text  x="344.05" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="473.1" y="1909" width="0.2" height="15.0" fill="rgb(213,108,48)" rx="2" ry="2" />
<text  x="476.07" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="482.8" y="1797" width="0.2" height="15.0" fill="rgb(223,141,32)" rx="2" ry="2" />
<text  x="485.84" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="669.3" y="1813" width="0.6" height="15.0" fill="rgb(228,56,4)" rx="2" ry="2" />
<text  x="672.30" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (22 samples, 0.37%)</title><rect x="986.4" y="1925" width="4.4" height="15.0" fill="rgb(229,123,25)" rx="2" ry="2" />
<text  x="989.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="245" width="17.7" height="15.0" fill="rgb(217,41,29)" rx="2" ry="2" />
<text  x="96.36" y="255.5" ></text>
</g>
<g >
<title>security_socket_accept (2 samples, 0.03%)</title><rect x="366.4" y="1957" width="0.4" height="15.0" fill="rgb(231,187,47)" rx="2" ry="2" />
<text  x="369.37" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="450.3" y="1909" width="0.4" height="15.0" fill="rgb(240,84,23)" rx="2" ry="2" />
<text  x="453.33" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="205.6" y="1877" width="0.2" height="15.0" fill="rgb(247,132,43)" rx="2" ry="2" />
<text  x="208.64" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="957.1" y="1973" width="0.2" height="15.0" fill="rgb(240,157,19)" rx="2" ry="2" />
<text  x="960.07" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="656.3" y="2005" width="0.6" height="15.0" fill="rgb(244,12,18)" rx="2" ry="2" />
<text  x="659.34" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="915.6" y="1845" width="0.2" height="15.0" fill="rgb(229,167,45)" rx="2" ry="2" />
<text  x="918.59" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="484.6" y="1765" width="0.2" height="15.0" fill="rgb(228,156,44)" rx="2" ry="2" />
<text  x="487.63" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="517.1" y="1973" width="0.6" height="15.0" fill="rgb(207,215,42)" rx="2" ry="2" />
<text  x="520.14" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1163.9" y="1909" width="0.2" height="15.0" fill="rgb(207,170,44)" rx="2" ry="2" />
<text  x="1166.88" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1090.7" y="1829" width="0.2" height="15.0" fill="rgb(215,4,1)" rx="2" ry="2" />
<text  x="1093.69" y="1839.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="992.0" y="2005" width="0.4" height="15.0" fill="rgb(250,117,25)" rx="2" ry="2" />
<text  x="994.97" y="2015.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="450.7" y="1845" width="0.2" height="15.0" fill="rgb(250,59,1)" rx="2" ry="2" />
<text  x="453.73" y="1855.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="863.5" y="1941" width="0.4" height="15.0" fill="rgb(237,193,51)" rx="2" ry="2" />
<text  x="866.54" y="1951.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="747.9" y="1509" width="0.2" height="15.0" fill="rgb(252,201,40)" rx="2" ry="2" />
<text  x="750.87" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1189.4" y="1813" width="0.2" height="15.0" fill="rgb(227,219,38)" rx="2" ry="2" />
<text  x="1192.40" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="861.9" y="1765" width="0.2" height="15.0" fill="rgb(206,57,16)" rx="2" ry="2" />
<text  x="864.95" y="1775.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (5 samples, 0.08%)</title><rect x="968.2" y="2021" width="1.0" height="15.0" fill="rgb(210,219,15)" rx="2" ry="2" />
<text  x="971.24" y="2031.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1118.6" y="1909" width="0.4" height="15.0" fill="rgb(247,66,17)" rx="2" ry="2" />
<text  x="1121.61" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="371.4" y="1861" width="0.2" height="15.0" fill="rgb(209,160,8)" rx="2" ry="2" />
<text  x="374.36" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1150.7" y="1525" width="0.2" height="15.0" fill="rgb(253,179,17)" rx="2" ry="2" />
<text  x="1153.71" y="1535.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="350.8" y="1637" width="0.2" height="15.0" fill="rgb(243,197,42)" rx="2" ry="2" />
<text  x="353.82" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="988.2" y="1637" width="0.2" height="15.0" fill="rgb(254,98,29)" rx="2" ry="2" />
<text  x="991.18" y="1647.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="530.1" y="1941" width="0.2" height="15.0" fill="rgb(242,100,13)" rx="2" ry="2" />
<text  x="533.10" y="1951.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (2 samples, 0.03%)</title><rect x="387.7" y="1861" width="0.4" height="15.0" fill="rgb(228,143,18)" rx="2" ry="2" />
<text  x="390.71" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="868.5" y="1989" width="0.8" height="15.0" fill="rgb(238,48,7)" rx="2" ry="2" />
<text  x="871.53" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.0" y="1701" width="0.2" height="15.0" fill="rgb(208,170,19)" rx="2" ry="2" />
<text  x="844.01" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="309" width="17.7" height="15.0" fill="rgb(228,88,4)" rx="2" ry="2" />
<text  x="96.36" y="319.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="902.6" y="2005" width="0.2" height="15.0" fill="rgb(211,41,35)" rx="2" ry="2" />
<text  x="905.63" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (58 samples, 0.98%)</title><rect x="1105.6" y="1845" width="11.6" height="15.0" fill="rgb(245,132,16)" rx="2" ry="2" />
<text  x="1108.64" y="1855.5" ></text>
</g>
<g >
<title>wake_up_bit (3 samples, 0.05%)</title><rect x="745.7" y="1701" width="0.6" height="15.0" fill="rgb(243,204,39)" rx="2" ry="2" />
<text  x="748.68" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="870.5" y="1973" width="0.8" height="15.0" fill="rgb(237,201,14)" rx="2" ry="2" />
<text  x="873.52" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="915.6" y="1813" width="0.2" height="15.0" fill="rgb(251,128,11)" rx="2" ry="2" />
<text  x="918.59" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="578.4" y="1925" width="0.2" height="15.0" fill="rgb(228,204,12)" rx="2" ry="2" />
<text  x="581.36" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="940.5" y="1941" width="0.4" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" />
<text  x="943.52" y="1951.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1183.6" y="1989" width="0.2" height="15.0" fill="rgb(240,120,14)" rx="2" ry="2" />
<text  x="1186.62" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="47.3" y="1893" width="0.2" height="15.0" fill="rgb(207,147,6)" rx="2" ry="2" />
<text  x="50.29" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="255.1" y="1637" width="0.2" height="15.0" fill="rgb(205,184,52)" rx="2" ry="2" />
<text  x="258.09" y="1647.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="865.1" y="1957" width="0.2" height="15.0" fill="rgb(221,81,21)" rx="2" ry="2" />
<text  x="868.14" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="79.2" y="1973" width="0.2" height="15.0" fill="rgb(254,163,23)" rx="2" ry="2" />
<text  x="82.20" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (97 samples, 1.64%)</title><rect x="59.1" y="1973" width="19.3" height="15.0" fill="rgb(215,209,50)" rx="2" ry="2" />
<text  x="62.06" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="507.4" y="1877" width="0.2" height="15.0" fill="rgb(239,228,20)" rx="2" ry="2" />
<text  x="510.37" y="1887.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="341.2" y="1637" width="0.2" height="15.0" fill="rgb(249,59,11)" rx="2" ry="2" />
<text  x="344.25" y="1647.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="825.5" y="1573" width="0.1" height="15.0" fill="rgb(231,32,41)" rx="2" ry="2" />
<text  x="828.45" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (2 samples, 0.03%)</title><rect x="1155.1" y="1973" width="0.4" height="15.0" fill="rgb(251,86,33)" rx="2" ry="2" />
<text  x="1158.10" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1105.0" y="1909" width="0.4" height="15.0" fill="rgb(241,44,35)" rx="2" ry="2" />
<text  x="1108.04" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="874.5" y="2005" width="0.2" height="15.0" fill="rgb(211,89,37)" rx="2" ry="2" />
<text  x="877.51" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="481.0" y="1957" width="0.2" height="15.0" fill="rgb(211,145,13)" rx="2" ry="2" />
<text  x="484.04" y="1967.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="765.8" y="1669" width="0.2" height="15.0" fill="rgb(207,94,15)" rx="2" ry="2" />
<text  x="768.82" y="1679.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (4 samples, 0.07%)</title><rect x="734.7" y="1717" width="0.8" height="15.0" fill="rgb(221,193,35)" rx="2" ry="2" />
<text  x="737.71" y="1727.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1105.0" y="1541" width="0.2" height="15.0" fill="rgb(233,53,8)" rx="2" ry="2" />
<text  x="1108.04" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="402.9" y="1845" width="0.2" height="15.0" fill="rgb(236,162,45)" rx="2" ry="2" />
<text  x="405.87" y="1855.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="400.5" y="1909" width="1.0" height="15.0" fill="rgb(207,182,26)" rx="2" ry="2" />
<text  x="403.47" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="613.1" y="1829" width="0.4" height="15.0" fill="rgb(242,225,6)" rx="2" ry="2" />
<text  x="616.06" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="93.2" y="1365" width="19.7" height="15.0" fill="rgb(241,124,15)" rx="2" ry="2" />
<text  x="96.16" y="1375.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="379.7" y="1621" width="0.2" height="15.0" fill="rgb(247,59,48)" rx="2" ry="2" />
<text  x="382.73" y="1631.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="525.3" y="1989" width="0.2" height="15.0" fill="rgb(230,9,39)" rx="2" ry="2" />
<text  x="528.32" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="785.8" y="1397" width="0.2" height="15.0" fill="rgb(232,75,10)" rx="2" ry="2" />
<text  x="788.76" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.0" y="1909" width="0.2" height="15.0" fill="rgb(209,70,42)" rx="2" ry="2" />
<text  x="138.04" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (584 samples, 9.87%)</title><rect x="725.1" y="1861" width="116.5" height="15.0" fill="rgb(236,33,47)" rx="2" ry="2" />
<text  x="728.14" y="1871.5" >exit_to_usermo..</text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="26.0" y="1973" width="0.2" height="15.0" fill="rgb(229,56,30)" rx="2" ry="2" />
<text  x="28.95" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14 samples, 0.24%)</title><rect x="280.2" y="1685" width="2.8" height="15.0" fill="rgb(205,138,43)" rx="2" ry="2" />
<text  x="283.22" y="1695.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="687.2" y="1845" width="0.2" height="15.0" fill="rgb(252,75,17)" rx="2" ry="2" />
<text  x="690.25" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="357.0" y="1733" width="0.2" height="15.0" fill="rgb(244,146,13)" rx="2" ry="2" />
<text  x="360.00" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (33 samples, 0.56%)</title><rect x="1174.0" y="2037" width="6.6" height="15.0" fill="rgb(245,183,29)" rx="2" ry="2" />
<text  x="1177.05" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="341.0" y="1861" width="0.4" height="15.0" fill="rgb(207,81,0)" rx="2" ry="2" />
<text  x="344.05" y="1871.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="82.0" y="1941" width="0.2" height="15.0" fill="rgb(241,151,0)" rx="2" ry="2" />
<text  x="84.99" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="725.9" y="1685" width="0.2" height="15.0" fill="rgb(229,12,11)" rx="2" ry="2" />
<text  x="728.94" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (8 samples, 0.14%)</title><rect x="975.0" y="2037" width="1.6" height="15.0" fill="rgb(225,226,5)" rx="2" ry="2" />
<text  x="978.02" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="543.7" y="1957" width="0.2" height="15.0" fill="rgb(222,92,26)" rx="2" ry="2" />
<text  x="546.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (5 samples, 0.08%)</title><rect x="1147.7" y="2053" width="1.0" height="15.0" fill="rgb(212,90,40)" rx="2" ry="2" />
<text  x="1150.72" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="450.3" y="1781" width="0.4" height="15.0" fill="rgb(246,58,43)" rx="2" ry="2" />
<text  x="453.33" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="152.6" y="1829" width="0.2" height="15.0" fill="rgb(252,2,6)" rx="2" ry="2" />
<text  x="155.59" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="294.8" y="1749" width="0.2" height="15.0" fill="rgb(237,104,45)" rx="2" ry="2" />
<text  x="297.78" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="322.9" y="2005" width="0.2" height="15.0" fill="rgb(206,204,8)" rx="2" ry="2" />
<text  x="325.90" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="212.6" y="1829" width="0.2" height="15.0" fill="rgb(234,145,31)" rx="2" ry="2" />
<text  x="215.62" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="111.3" y="357" width="0.2" height="15.0" fill="rgb(209,25,30)" rx="2" ry="2" />
<text  x="114.31" y="367.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (29 samples, 0.49%)</title><rect x="542.5" y="1989" width="5.7" height="15.0" fill="rgb(244,56,29)" rx="2" ry="2" />
<text  x="545.47" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (4 samples, 0.07%)</title><rect x="885.3" y="1861" width="0.8" height="15.0" fill="rgb(222,39,4)" rx="2" ry="2" />
<text  x="888.28" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (36 samples, 0.61%)</title><rect x="624.6" y="2037" width="7.2" height="15.0" fill="rgb(210,74,6)" rx="2" ry="2" />
<text  x="627.63" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="928.0" y="1909" width="0.2" height="15.0" fill="rgb(215,14,29)" rx="2" ry="2" />
<text  x="930.96" y="1919.5" ></text>
</g>
<g >
<title>kfree (19 samples, 0.32%)</title><rect x="1110.2" y="1445" width="3.8" height="15.0" fill="rgb(223,181,21)" rx="2" ry="2" />
<text  x="1113.23" y="1455.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="29.1" y="1989" width="0.4" height="15.0" fill="rgb(242,191,48)" rx="2" ry="2" />
<text  x="32.14" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.7" y="389" width="0.2" height="15.0" fill="rgb(248,148,15)" rx="2" ry="2" />
<text  x="114.71" y="399.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (65 samples, 1.10%)</title><rect x="554.8" y="2005" width="13.0" height="15.0" fill="rgb(254,99,15)" rx="2" ry="2" />
<text  x="557.83" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="747.5" y="1541" width="0.2" height="15.0" fill="rgb(210,171,38)" rx="2" ry="2" />
<text  x="750.48" y="1551.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="650.4" y="1989" width="0.6" height="15.0" fill="rgb(243,55,5)" rx="2" ry="2" />
<text  x="653.35" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1180.2" y="1973" width="0.2" height="15.0" fill="rgb(210,0,29)" rx="2" ry="2" />
<text  x="1183.23" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="835.0" y="1589" width="0.2" height="15.0" fill="rgb(233,138,8)" rx="2" ry="2" />
<text  x="838.02" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="93.2" y="1493" width="20.3" height="15.0" fill="rgb(244,139,44)" rx="2" ry="2" />
<text  x="96.16" y="1503.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="81.8" y="1909" width="0.2" height="15.0" fill="rgb(232,73,46)" rx="2" ry="2" />
<text  x="84.79" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="766.2" y="1493" width="0.2" height="15.0" fill="rgb(230,144,25)" rx="2" ry="2" />
<text  x="769.22" y="1503.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="527.9" y="1717" width="0.2" height="15.0" fill="rgb(236,39,36)" rx="2" ry="2" />
<text  x="530.91" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="80.4" y="1973" width="2.2" height="15.0" fill="rgb(226,223,39)" rx="2" ry="2" />
<text  x="83.40" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.08%)</title><rect x="846.0" y="1845" width="1.0" height="15.0" fill="rgb(254,120,42)" rx="2" ry="2" />
<text  x="848.99" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (1 samples, 0.02%)</title><rect x="568.8" y="2005" width="0.2" height="15.0" fill="rgb(230,66,10)" rx="2" ry="2" />
<text  x="571.79" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="29.5" y="1989" width="0.2" height="15.0" fill="rgb(205,169,8)" rx="2" ry="2" />
<text  x="32.54" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="599.5" y="1589" width="0.2" height="15.0" fill="rgb(230,185,25)" rx="2" ry="2" />
<text  x="602.50" y="1599.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="523.9" y="1989" width="0.2" height="15.0" fill="rgb(221,198,7)" rx="2" ry="2" />
<text  x="526.92" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="638.8" y="1893" width="0.2" height="15.0" fill="rgb(217,77,17)" rx="2" ry="2" />
<text  x="641.79" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="177.9" y="1973" width="0.2" height="15.0" fill="rgb(238,16,14)" rx="2" ry="2" />
<text  x="180.92" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (2 samples, 0.03%)</title><rect x="627.4" y="2005" width="0.4" height="15.0" fill="rgb(212,185,37)" rx="2" ry="2" />
<text  x="630.42" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="622.6" y="1957" width="0.2" height="15.0" fill="rgb(243,112,5)" rx="2" ry="2" />
<text  x="625.63" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="585.9" y="1925" width="0.4" height="15.0" fill="rgb(232,21,18)" rx="2" ry="2" />
<text  x="588.94" y="1935.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="322.9" y="1909" width="0.2" height="15.0" fill="rgb(245,140,3)" rx="2" ry="2" />
<text  x="325.90" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="10.2" y="1877" width="1.0" height="15.0" fill="rgb(240,151,46)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (6 samples, 0.10%)</title><rect x="162.4" y="2005" width="1.2" height="15.0" fill="rgb(227,214,53)" rx="2" ry="2" />
<text  x="165.36" y="2015.5" ></text>
</g>
<g >
<title>new_inode_pseudo (72 samples, 1.22%)</title><rect x="367.8" y="1941" width="14.3" height="15.0" fill="rgb(233,45,33)" rx="2" ry="2" />
<text  x="370.77" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1079.5" y="1557" width="0.2" height="15.0" fill="rgb(212,58,13)" rx="2" ry="2" />
<text  x="1082.52" y="1567.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="672.9" y="2005" width="0.4" height="15.0" fill="rgb(217,153,8)" rx="2" ry="2" />
<text  x="675.89" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1072.3" y="1829" width="0.2" height="15.0" fill="rgb(227,134,6)" rx="2" ry="2" />
<text  x="1075.34" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (1 samples, 0.02%)</title><rect x="31.1" y="1973" width="0.2" height="15.0" fill="rgb(214,5,40)" rx="2" ry="2" />
<text  x="34.14" y="1983.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (2 samples, 0.03%)</title><rect x="970.2" y="2037" width="0.4" height="15.0" fill="rgb(232,183,4)" rx="2" ry="2" />
<text  x="973.23" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="909.8" y="1765" width="0.2" height="15.0" fill="rgb(227,132,17)" rx="2" ry="2" />
<text  x="912.81" y="1775.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="565.0" y="1877" width="0.2" height="15.0" fill="rgb(207,215,29)" rx="2" ry="2" />
<text  x="568.00" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="121.3" y="1733" width="0.2" height="15.0" fill="rgb(225,81,1)" rx="2" ry="2" />
<text  x="124.28" y="1743.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="62.8" y="1845" width="0.4" height="15.0" fill="rgb(245,119,48)" rx="2" ry="2" />
<text  x="65.85" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="350.8" y="1589" width="0.2" height="15.0" fill="rgb(252,29,44)" rx="2" ry="2" />
<text  x="353.82" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="54.3" y="1829" width="0.2" height="15.0" fill="rgb(242,111,7)" rx="2" ry="2" />
<text  x="57.27" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="482.8" y="1861" width="0.2" height="15.0" fill="rgb(253,34,35)" rx="2" ry="2" />
<text  x="485.84" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="948.9" y="1989" width="0.2" height="15.0" fill="rgb(211,159,27)" rx="2" ry="2" />
<text  x="951.89" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="936.7" y="1733" width="0.2" height="15.0" fill="rgb(221,203,35)" rx="2" ry="2" />
<text  x="939.73" y="1743.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="1090.7" y="1669" width="0.2" height="15.0" fill="rgb(215,143,51)" rx="2" ry="2" />
<text  x="1093.69" y="1679.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (7 samples, 0.12%)</title><rect x="744.3" y="1701" width="1.4" height="15.0" fill="rgb(210,99,45)" rx="2" ry="2" />
<text  x="747.28" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="75.4" y="1925" width="0.4" height="15.0" fill="rgb(233,46,36)" rx="2" ry="2" />
<text  x="78.41" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="323.5" y="2037" width="0.2" height="15.0" fill="rgb(226,197,8)" rx="2" ry="2" />
<text  x="326.50" y="2047.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="240.5" y="1893" width="1.0" height="15.0" fill="rgb(228,179,16)" rx="2" ry="2" />
<text  x="243.54" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="546.9" y="1941" width="0.4" height="15.0" fill="rgb(227,228,27)" rx="2" ry="2" />
<text  x="549.85" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="637.2" y="1925" width="0.8" height="15.0" fill="rgb(224,152,24)" rx="2" ry="2" />
<text  x="640.19" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="956.9" y="1989" width="0.4" height="15.0" fill="rgb(233,156,3)" rx="2" ry="2" />
<text  x="959.87" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="892.1" y="1909" width="0.2" height="15.0" fill="rgb(249,84,1)" rx="2" ry="2" />
<text  x="895.06" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="933" width="18.5" height="15.0" fill="rgb(243,20,43)" rx="2" ry="2" />
<text  x="96.36" y="943.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="28.9" y="1957" width="0.2" height="15.0" fill="rgb(219,158,27)" rx="2" ry="2" />
<text  x="31.95" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="47.7" y="1925" width="0.2" height="15.0" fill="rgb(231,155,21)" rx="2" ry="2" />
<text  x="50.69" y="1935.5" ></text>
</g>
<g >
<title>tcp_tso_segs (4 samples, 0.07%)</title><rect x="303.4" y="1829" width="0.8" height="15.0" fill="rgb(235,114,10)" rx="2" ry="2" />
<text  x="306.35" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1 samples, 0.02%)</title><rect x="616.5" y="1989" width="0.2" height="15.0" fill="rgb(218,118,33)" rx="2" ry="2" />
<text  x="619.45" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="956.7" y="2005" width="0.2" height="15.0" fill="rgb(238,46,46)" rx="2" ry="2" />
<text  x="959.67" y="2015.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="973.0" y="2037" width="0.4" height="15.0" fill="rgb(217,78,3)" rx="2" ry="2" />
<text  x="976.03" y="2047.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="1177.6" y="1941" width="0.2" height="15.0" fill="rgb(213,168,38)" rx="2" ry="2" />
<text  x="1180.64" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="969.4" y="2037" width="0.2" height="15.0" fill="rgb(211,189,23)" rx="2" ry="2" />
<text  x="972.44" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="111.5" y="181" width="0.2" height="15.0" fill="rgb(254,227,23)" rx="2" ry="2" />
<text  x="114.51" y="191.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1115.8" y="1509" width="0.2" height="15.0" fill="rgb(236,166,22)" rx="2" ry="2" />
<text  x="1118.81" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (66 samples, 1.12%)</title><rect x="631.8" y="2005" width="13.2" height="15.0" fill="rgb(205,220,49)" rx="2" ry="2" />
<text  x="634.81" y="2015.5" ></text>
</g>
<g >
<title>isspace (2 samples, 0.03%)</title><rect x="1009.9" y="2021" width="0.4" height="15.0" fill="rgb(246,14,21)" rx="2" ry="2" />
<text  x="1012.92" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="976.4" y="2005" width="0.2" height="15.0" fill="rgb(206,140,50)" rx="2" ry="2" />
<text  x="979.42" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="958.3" y="1957" width="2.2" height="15.0" fill="rgb(248,223,28)" rx="2" ry="2" />
<text  x="961.27" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="626.4" y="1989" width="0.2" height="15.0" fill="rgb(252,91,23)" rx="2" ry="2" />
<text  x="629.42" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="215.2" y="1925" width="0.4" height="15.0" fill="rgb(225,67,46)" rx="2" ry="2" />
<text  x="218.21" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="747.9" y="1557" width="0.4" height="15.0" fill="rgb(250,50,34)" rx="2" ry="2" />
<text  x="750.87" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="527.3" y="2005" width="0.8" height="15.0" fill="rgb(219,143,50)" rx="2" ry="2" />
<text  x="530.31" y="2015.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (3 samples, 0.05%)</title><rect x="885.5" y="1845" width="0.6" height="15.0" fill="rgb(208,83,8)" rx="2" ry="2" />
<text  x="888.48" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1135.4" y="1749" width="0.2" height="15.0" fill="rgb(242,98,23)" rx="2" ry="2" />
<text  x="1138.36" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (30 samples, 0.51%)</title><rect x="542.3" y="2005" width="5.9" height="15.0" fill="rgb(212,201,7)" rx="2" ry="2" />
<text  x="545.27" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="642.6" y="1957" width="0.2" height="15.0" fill="rgb(232,187,40)" rx="2" ry="2" />
<text  x="645.58" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="630.2" y="1973" width="0.6" height="15.0" fill="rgb(247,181,45)" rx="2" ry="2" />
<text  x="633.21" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="513.2" y="1925" width="0.1" height="15.0" fill="rgb(221,215,33)" rx="2" ry="2" />
<text  x="516.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="578.8" y="1957" width="0.4" height="15.0" fill="rgb(249,206,18)" rx="2" ry="2" />
<text  x="581.76" y="1967.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="614.9" y="1893" width="0.2" height="15.0" fill="rgb(217,45,5)" rx="2" ry="2" />
<text  x="617.86" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (13 samples, 0.22%)</title><rect x="927.0" y="1957" width="2.6" height="15.0" fill="rgb(215,221,44)" rx="2" ry="2" />
<text  x="929.96" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="170.9" y="1941" width="0.2" height="15.0" fill="rgb(234,95,48)" rx="2" ry="2" />
<text  x="173.94" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="521.3" y="1941" width="0.2" height="15.0" fill="rgb(233,101,39)" rx="2" ry="2" />
<text  x="524.33" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="241.9" y="1733" width="0.2" height="15.0" fill="rgb(236,209,49)" rx="2" ry="2" />
<text  x="244.93" y="1743.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="350.8" y="1893" width="0.2" height="15.0" fill="rgb(240,152,38)" rx="2" ry="2" />
<text  x="353.82" y="1903.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="388.3" y="1877" width="0.2" height="15.0" fill="rgb(235,54,28)" rx="2" ry="2" />
<text  x="391.31" y="1887.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (6 samples, 0.10%)</title><rect x="377.5" y="1861" width="1.2" height="15.0" fill="rgb(234,58,21)" rx="2" ry="2" />
<text  x="380.54" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.42%)</title><rect x="675.9" y="1973" width="16.7" height="15.0" fill="rgb(209,112,48)" rx="2" ry="2" />
<text  x="678.88" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="610.7" y="1877" width="0.2" height="15.0" fill="rgb(220,152,5)" rx="2" ry="2" />
<text  x="613.67" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1026.3" y="1973" width="0.2" height="15.0" fill="rgb(221,125,39)" rx="2" ry="2" />
<text  x="1029.27" y="1983.5" ></text>
</g>
<g >
<title>task_work_run (575 samples, 9.72%)</title><rect x="726.9" y="1845" width="114.7" height="15.0" fill="rgb(213,70,19)" rx="2" ry="2" />
<text  x="729.93" y="1855.5" >task_work_run</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="111.1" y="181" width="0.2" height="15.0" fill="rgb(207,104,13)" rx="2" ry="2" />
<text  x="114.11" y="191.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (3 samples, 0.05%)</title><rect x="968.6" y="2005" width="0.6" height="15.0" fill="rgb(220,41,8)" rx="2" ry="2" />
<text  x="971.64" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.0" y="1637" width="0.2" height="15.0" fill="rgb(225,118,6)" rx="2" ry="2" />
<text  x="844.01" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="484.6" y="1733" width="0.2" height="15.0" fill="rgb(218,59,3)" rx="2" ry="2" />
<text  x="487.63" y="1743.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="986.0" y="1909" width="0.2" height="15.0" fill="rgb(215,18,34)" rx="2" ry="2" />
<text  x="988.99" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="600.1" y="1845" width="0.6" height="15.0" fill="rgb(246,109,3)" rx="2" ry="2" />
<text  x="603.10" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (12 samples, 0.20%)</title><rect x="273.4" y="1669" width="2.4" height="15.0" fill="rgb(232,105,46)" rx="2" ry="2" />
<text  x="276.44" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1090.7" y="1797" width="0.2" height="15.0" fill="rgb(242,145,46)" rx="2" ry="2" />
<text  x="1093.69" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="56.7" y="1829" width="0.2" height="15.0" fill="rgb(241,10,37)" rx="2" ry="2" />
<text  x="59.67" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1128.0" y="1557" width="0.2" height="15.0" fill="rgb(228,73,14)" rx="2" ry="2" />
<text  x="1130.98" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="235.7" y="1893" width="0.4" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="238.75" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2 samples, 0.03%)</title><rect x="1179.6" y="1989" width="0.4" height="15.0" fill="rgb(226,39,50)" rx="2" ry="2" />
<text  x="1182.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.93%)</title><rect x="93.0" y="1797" width="22.7" height="15.0" fill="rgb(207,62,35)" rx="2" ry="2" />
<text  x="95.96" y="1807.5" >[..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="60.9" y="1893" width="1.0" height="15.0" fill="rgb(236,133,40)" rx="2" ry="2" />
<text  x="63.85" y="1903.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="303.2" y="1813" width="0.2" height="15.0" fill="rgb(228,219,8)" rx="2" ry="2" />
<text  x="306.16" y="1823.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (2 samples, 0.03%)</title><rect x="668.3" y="1845" width="0.4" height="15.0" fill="rgb(220,127,9)" rx="2" ry="2" />
<text  x="671.30" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="540.1" y="1925" width="0.6" height="15.0" fill="rgb(237,96,29)" rx="2" ry="2" />
<text  x="543.07" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="824.1" y="1685" width="0.2" height="15.0" fill="rgb(248,180,13)" rx="2" ry="2" />
<text  x="827.05" y="1695.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="643.6" y="1957" width="0.8" height="15.0" fill="rgb(205,104,14)" rx="2" ry="2" />
<text  x="646.57" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="469.5" y="1845" width="0.2" height="15.0" fill="rgb(228,155,54)" rx="2" ry="2" />
<text  x="472.48" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="527.9" y="1765" width="0.2" height="15.0" fill="rgb(228,82,27)" rx="2" ry="2" />
<text  x="530.91" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="564.8" y="1861" width="0.2" height="15.0" fill="rgb(248,97,36)" rx="2" ry="2" />
<text  x="567.80" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="110.1" y="69" width="0.2" height="15.0" fill="rgb(247,105,23)" rx="2" ry="2" />
<text  x="113.11" y="79.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="113.7" y="1525" width="0.2" height="15.0" fill="rgb(250,51,16)" rx="2" ry="2" />
<text  x="116.70" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1017.1" y="1861" width="0.4" height="15.0" fill="rgb(238,172,24)" rx="2" ry="2" />
<text  x="1020.10" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="920.4" y="2021" width="0.6" height="15.0" fill="rgb(232,22,28)" rx="2" ry="2" />
<text  x="923.38" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="904.0" y="2005" width="1.2" height="15.0" fill="rgb(216,71,51)" rx="2" ry="2" />
<text  x="907.02" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="562.4" y="1893" width="0.2" height="15.0" fill="rgb(241,65,8)" rx="2" ry="2" />
<text  x="565.41" y="1903.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="81.8" y="1669" width="0.2" height="15.0" fill="rgb(209,70,54)" rx="2" ry="2" />
<text  x="84.79" y="1679.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="835.0" y="1413" width="0.2" height="15.0" fill="rgb(205,171,44)" rx="2" ry="2" />
<text  x="838.02" y="1423.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="729.1" y="1797" width="0.2" height="15.0" fill="rgb(217,204,44)" rx="2" ry="2" />
<text  x="732.13" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (23 samples, 0.39%)</title><rect x="651.6" y="2037" width="4.5" height="15.0" fill="rgb(206,69,24)" rx="2" ry="2" />
<text  x="654.55" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="984.4" y="1973" width="0.2" height="15.0" fill="rgb(213,46,48)" rx="2" ry="2" />
<text  x="987.39" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="930.1" y="1941" width="0.2" height="15.0" fill="rgb(206,27,41)" rx="2" ry="2" />
<text  x="933.15" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="869" width="18.5" height="15.0" fill="rgb(244,53,2)" rx="2" ry="2" />
<text  x="96.36" y="879.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (10 samples, 0.17%)</title><rect x="142.2" y="1925" width="2.0" height="15.0" fill="rgb(223,176,24)" rx="2" ry="2" />
<text  x="145.22" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="895.2" y="1989" width="0.2" height="15.0" fill="rgb(210,34,50)" rx="2" ry="2" />
<text  x="898.25" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="835.0" y="1349" width="0.2" height="15.0" fill="rgb(211,99,40)" rx="2" ry="2" />
<text  x="838.02" y="1359.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (21 samples, 0.35%)</title><rect x="704.2" y="1941" width="4.2" height="15.0" fill="rgb(237,188,27)" rx="2" ry="2" />
<text  x="707.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="111.5" y="101" width="0.2" height="15.0" fill="rgb(248,51,51)" rx="2" ry="2" />
<text  x="114.51" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="578.4" y="1845" width="0.2" height="15.0" fill="rgb(238,85,22)" rx="2" ry="2" />
<text  x="581.36" y="1855.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="846.8" y="1765" width="0.2" height="15.0" fill="rgb(221,204,32)" rx="2" ry="2" />
<text  x="849.79" y="1775.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="27.4" y="1941" width="0.9" height="15.0" fill="rgb(225,206,7)" rx="2" ry="2" />
<text  x="30.35" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (708 samples, 11.97%)</title><rect x="712.8" y="1941" width="141.2" height="15.0" fill="rgb(226,156,52)" rx="2" ry="2" />
<text  x="715.78" y="1951.5" >folly::AsyncSocke..</text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="866.7" y="1973" width="0.2" height="15.0" fill="rgb(218,227,19)" rx="2" ry="2" />
<text  x="869.73" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="810.5" y="1589" width="0.2" height="15.0" fill="rgb(235,153,43)" rx="2" ry="2" />
<text  x="813.49" y="1599.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="357.2" y="1925" width="1.2" height="15.0" fill="rgb(237,203,13)" rx="2" ry="2" />
<text  x="360.20" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="855.4" y="1845" width="0.2" height="15.0" fill="rgb(253,93,37)" rx="2" ry="2" />
<text  x="858.36" y="1855.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="365.6" y="1957" width="0.6" height="15.0" fill="rgb(209,109,34)" rx="2" ry="2" />
<text  x="368.58" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1173.8" y="2037" width="0.2" height="15.0" fill="rgb(254,121,40)" rx="2" ry="2" />
<text  x="1176.85" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="997.8" y="1525" width="0.2" height="15.0" fill="rgb(224,180,0)" rx="2" ry="2" />
<text  x="1000.75" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="578.4" y="1893" width="0.2" height="15.0" fill="rgb(209,162,41)" rx="2" ry="2" />
<text  x="581.36" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="156.6" y="1845" width="0.2" height="15.0" fill="rgb(224,228,19)" rx="2" ry="2" />
<text  x="159.58" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="834.0" y="1637" width="0.2" height="15.0" fill="rgb(214,227,38)" rx="2" ry="2" />
<text  x="837.03" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="255.1" y="1717" width="0.2" height="15.0" fill="rgb(234,61,53)" rx="2" ry="2" />
<text  x="258.09" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="862.7" y="1909" width="0.8" height="15.0" fill="rgb(235,67,25)" rx="2" ry="2" />
<text  x="865.74" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="537.3" y="1925" width="0.2" height="15.0" fill="rgb(207,65,40)" rx="2" ry="2" />
<text  x="540.28" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.0" y="1621" width="0.2" height="15.0" fill="rgb(233,134,48)" rx="2" ry="2" />
<text  x="844.01" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="241.9" y="1781" width="0.2" height="15.0" fill="rgb(216,35,24)" rx="2" ry="2" />
<text  x="244.93" y="1791.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="106.7" y="37" width="0.2" height="15.0" fill="rgb(226,149,5)" rx="2" ry="2" />
<text  x="109.72" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="903.4" y="1989" width="0.4" height="15.0" fill="rgb(226,140,30)" rx="2" ry="2" />
<text  x="906.43" y="1999.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="53.9" y="1877" width="0.4" height="15.0" fill="rgb(220,158,25)" rx="2" ry="2" />
<text  x="56.87" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (359 samples, 6.07%)</title><rect x="413.4" y="2005" width="71.6" height="15.0" fill="rgb(217,22,4)" rx="2" ry="2" />
<text  x="416.44" y="2015.5" >do_sysca..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="855.0" y="1909" width="1.0" height="15.0" fill="rgb(214,180,45)" rx="2" ry="2" />
<text  x="857.97" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4,707 samples, 79.55%)</title><rect x="87.2" y="2053" width="938.7" height="15.0" fill="rgb(245,140,51)" rx="2" ry="2" />
<text  x="90.18" y="2063.5" >[unknown]</text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="207.6" y="1877" width="0.6" height="15.0" fill="rgb(253,106,34)" rx="2" ry="2" />
<text  x="210.63" y="1887.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="538.3" y="1717" width="0.2" height="15.0" fill="rgb(209,210,20)" rx="2" ry="2" />
<text  x="541.28" y="1727.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (2 samples, 0.03%)</title><rect x="669.3" y="1621" width="0.4" height="15.0" fill="rgb(216,47,28)" rx="2" ry="2" />
<text  x="672.30" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1135.4" y="1781" width="0.2" height="15.0" fill="rgb(208,86,11)" rx="2" ry="2" />
<text  x="1138.36" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="982.6" y="1973" width="1.8" height="15.0" fill="rgb(207,89,16)" rx="2" ry="2" />
<text  x="985.60" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="121.3" y="1893" width="0.2" height="15.0" fill="rgb(225,83,22)" rx="2" ry="2" />
<text  x="124.28" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (9 samples, 0.15%)</title><rect x="74.4" y="1941" width="1.8" height="15.0" fill="rgb(224,211,31)" rx="2" ry="2" />
<text  x="77.41" y="1951.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="1027.1" y="2053" width="0.4" height="15.0" fill="rgb(231,162,50)" rx="2" ry="2" />
<text  x="1030.07" y="2063.5" ></text>
</g>
<g >
<title>security_file_alloc (14 samples, 0.24%)</title><rect x="390.7" y="1909" width="2.8" height="15.0" fill="rgb(210,63,45)" rx="2" ry="2" />
<text  x="393.70" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="851.0" y="1925" width="0.2" height="15.0" fill="rgb(250,129,0)" rx="2" ry="2" />
<text  x="853.98" y="1935.5" ></text>
</g>
<g >
<title>__memchr_avx2 (7 samples, 0.12%)</title><rect x="320.3" y="2037" width="1.4" height="15.0" fill="rgb(216,95,46)" rx="2" ry="2" />
<text  x="323.31" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="613.1" y="1845" width="0.6" height="15.0" fill="rgb(242,194,51)" rx="2" ry="2" />
<text  x="616.06" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="903.6" y="1957" width="0.2" height="15.0" fill="rgb(216,102,35)" rx="2" ry="2" />
<text  x="906.63" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="887.7" y="1717" width="0.2" height="15.0" fill="rgb(236,219,33)" rx="2" ry="2" />
<text  x="890.67" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (2 samples, 0.03%)</title><rect x="973.4" y="2005" width="0.4" height="15.0" fill="rgb(239,227,47)" rx="2" ry="2" />
<text  x="976.42" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="139.2" y="1893" width="0.4" height="15.0" fill="rgb(235,44,43)" rx="2" ry="2" />
<text  x="142.23" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="291.0" y="1653" width="0.2" height="15.0" fill="rgb(253,209,44)" rx="2" ry="2" />
<text  x="293.99" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="624.4" y="2037" width="0.2" height="15.0" fill="rgb(240,148,13)" rx="2" ry="2" />
<text  x="627.43" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="127.1" y="1973" width="0.2" height="15.0" fill="rgb(240,169,4)" rx="2" ry="2" />
<text  x="130.06" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="855.2" y="1813" width="0.2" height="15.0" fill="rgb(210,158,4)" rx="2" ry="2" />
<text  x="858.16" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="547.5" y="1973" width="0.7" height="15.0" fill="rgb(213,141,32)" rx="2" ry="2" />
<text  x="550.45" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="865.5" y="1957" width="0.2" height="15.0" fill="rgb(226,21,14)" rx="2" ry="2" />
<text  x="868.53" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (10 samples, 0.17%)</title><rect x="573.4" y="2005" width="2.0" height="15.0" fill="rgb(234,106,18)" rx="2" ry="2" />
<text  x="576.38" y="2015.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="56.7" y="1765" width="0.2" height="15.0" fill="rgb(234,21,48)" rx="2" ry="2" />
<text  x="59.67" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (110 samples, 1.86%)</title><rect x="196.3" y="1989" width="21.9" height="15.0" fill="rgb(213,14,10)" rx="2" ry="2" />
<text  x="199.26" y="1999.5" >f..</text>
</g>
<g >
<title>accept4 (1 samples, 0.02%)</title><rect x="21.2" y="2005" width="0.2" height="15.0" fill="rgb(230,86,35)" rx="2" ry="2" />
<text  x="24.17" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="152.6" y="1781" width="0.2" height="15.0" fill="rgb(219,23,8)" rx="2" ry="2" />
<text  x="155.59" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1049.6" y="1845" width="0.2" height="15.0" fill="rgb(207,185,46)" rx="2" ry="2" />
<text  x="1052.60" y="1855.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (3 samples, 0.05%)</title><rect x="1005.9" y="2005" width="0.6" height="15.0" fill="rgb(242,68,7)" rx="2" ry="2" />
<text  x="1008.93" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="1461" width="0.2" height="15.0" fill="rgb(216,96,47)" rx="2" ry="2" />
<text  x="1153.71" y="1471.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="295.2" y="1797" width="0.4" height="15.0" fill="rgb(252,197,45)" rx="2" ry="2" />
<text  x="298.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="669.3" y="1701" width="0.6" height="15.0" fill="rgb(222,46,3)" rx="2" ry="2" />
<text  x="672.30" y="1711.5" ></text>
</g>
<g >
<title>page_frag_free (20 samples, 0.34%)</title><rect x="1075.9" y="1861" width="4.0" height="15.0" fill="rgb(251,111,27)" rx="2" ry="2" />
<text  x="1078.93" y="1871.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1150.7" y="1541" width="0.2" height="15.0" fill="rgb(210,47,52)" rx="2" ry="2" />
<text  x="1153.71" y="1551.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="527.9" y="1685" width="0.2" height="15.0" fill="rgb(221,11,15)" rx="2" ry="2" />
<text  x="530.91" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="673.5" y="1989" width="0.2" height="15.0" fill="rgb(226,16,27)" rx="2" ry="2" />
<text  x="676.49" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="766.2" y="1525" width="0.2" height="15.0" fill="rgb(254,157,18)" rx="2" ry="2" />
<text  x="769.22" y="1535.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="222.2" y="2021" width="0.2" height="15.0" fill="rgb(224,113,37)" rx="2" ry="2" />
<text  x="225.19" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="970.4" y="1797" width="0.2" height="15.0" fill="rgb(229,157,14)" rx="2" ry="2" />
<text  x="973.43" y="1807.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (18 samples, 0.30%)</title><rect x="186.3" y="2021" width="3.6" height="15.0" fill="rgb(208,125,31)" rx="2" ry="2" />
<text  x="189.29" y="2031.5" ></text>
</g>
<g >
<title>sock_close (446 samples, 7.54%)</title><rect x="751.7" y="1797" width="88.9" height="15.0" fill="rgb(250,13,40)" rx="2" ry="2" />
<text  x="754.66" y="1807.5" >sock_close</text>
</g>
<g >
<title>__close (676 samples, 11.42%)</title><rect x="714.2" y="1909" width="134.8" height="15.0" fill="rgb(254,56,32)" rx="2" ry="2" />
<text  x="717.17" y="1919.5" >__close</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="546.5" y="1861" width="0.2" height="15.0" fill="rgb(226,34,28)" rx="2" ry="2" />
<text  x="549.45" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="200.9" y="1957" width="0.1" height="15.0" fill="rgb(208,139,6)" rx="2" ry="2" />
<text  x="203.85" y="1967.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="106.5" y="37" width="0.2" height="15.0" fill="rgb(222,60,18)" rx="2" ry="2" />
<text  x="109.52" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="111.5" y="229" width="0.2" height="15.0" fill="rgb(246,119,47)" rx="2" ry="2" />
<text  x="114.51" y="239.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="681.9" y="1941" width="0.2" height="15.0" fill="rgb(229,28,23)" rx="2" ry="2" />
<text  x="684.86" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.64%)</title><rect x="1157.7" y="1941" width="7.6" height="15.0" fill="rgb(223,159,38)" rx="2" ry="2" />
<text  x="1160.69" y="1951.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1083.5" y="1733" width="0.2" height="15.0" fill="rgb(226,175,36)" rx="2" ry="2" />
<text  x="1086.51" y="1743.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="508.8" y="1925" width="0.2" height="15.0" fill="rgb(252,116,7)" rx="2" ry="2" />
<text  x="511.76" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="133.4" y="1909" width="0.2" height="15.0" fill="rgb(242,78,44)" rx="2" ry="2" />
<text  x="136.44" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="610.7" y="1717" width="0.2" height="15.0" fill="rgb(225,183,2)" rx="2" ry="2" />
<text  x="613.67" y="1727.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (2 samples, 0.03%)</title><rect x="991.2" y="1989" width="0.4" height="15.0" fill="rgb(248,37,19)" rx="2" ry="2" />
<text  x="994.17" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="653.5" y="2021" width="0.2" height="15.0" fill="rgb(206,113,9)" rx="2" ry="2" />
<text  x="656.55" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="537.3" y="1685" width="0.2" height="15.0" fill="rgb(238,144,32)" rx="2" ry="2" />
<text  x="540.28" y="1695.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="240.3" y="1877" width="0.2" height="15.0" fill="rgb(250,136,8)" rx="2" ry="2" />
<text  x="243.34" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="56.7" y="1877" width="0.2" height="15.0" fill="rgb(243,71,53)" rx="2" ry="2" />
<text  x="59.67" y="1887.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="747.1" y="1765" width="0.4" height="15.0" fill="rgb(239,19,48)" rx="2" ry="2" />
<text  x="750.08" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="257.3" y="1845" width="0.2" height="15.0" fill="rgb(249,141,6)" rx="2" ry="2" />
<text  x="260.29" y="1855.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="429.4" y="1989" width="0.2" height="15.0" fill="rgb(215,183,5)" rx="2" ry="2" />
<text  x="432.39" y="1999.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (6 samples, 0.10%)</title><rect x="257.9" y="1861" width="1.2" height="15.0" fill="rgb(216,84,30)" rx="2" ry="2" />
<text  x="260.89" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="612.5" y="1845" width="0.6" height="15.0" fill="rgb(219,206,17)" rx="2" ry="2" />
<text  x="615.46" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="617.8" y="2037" width="0.6" height="15.0" fill="rgb(243,210,38)" rx="2" ry="2" />
<text  x="620.85" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="371.4" y="1829" width="0.2" height="15.0" fill="rgb(227,35,49)" rx="2" ry="2" />
<text  x="374.36" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (105 samples, 1.77%)</title><rect x="197.3" y="1973" width="20.9" height="15.0" fill="rgb(211,190,5)" rx="2" ry="2" />
<text  x="200.26" y="1983.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="890.5" y="1925" width="0.2" height="15.0" fill="rgb(244,65,44)" rx="2" ry="2" />
<text  x="893.46" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="162.2" y="2021" width="0.2" height="15.0" fill="rgb(239,139,35)" rx="2" ry="2" />
<text  x="165.16" y="2031.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="815.7" y="1669" width="0.6" height="15.0" fill="rgb(207,39,53)" rx="2" ry="2" />
<text  x="818.68" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (27 samples, 0.46%)</title><rect x="121.9" y="1989" width="5.4" height="15.0" fill="rgb(215,193,34)" rx="2" ry="2" />
<text  x="124.88" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="519.7" y="1957" width="0.2" height="15.0" fill="rgb(227,112,2)" rx="2" ry="2" />
<text  x="522.73" y="1967.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="996.2" y="1941" width="0.2" height="15.0" fill="rgb(248,16,51)" rx="2" ry="2" />
<text  x="999.16" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="161.8" y="2005" width="0.2" height="15.0" fill="rgb(228,31,54)" rx="2" ry="2" />
<text  x="164.76" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="661.3" y="1861" width="0.2" height="15.0" fill="rgb(250,178,21)" rx="2" ry="2" />
<text  x="664.32" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="527.9" y="1701" width="0.2" height="15.0" fill="rgb(222,196,53)" rx="2" ry="2" />
<text  x="530.91" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="846.2" y="1685" width="0.6" height="15.0" fill="rgb(211,14,51)" rx="2" ry="2" />
<text  x="849.19" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (15 samples, 0.25%)</title><rect x="539.3" y="1957" width="3.0" height="15.0" fill="rgb(209,55,47)" rx="2" ry="2" />
<text  x="542.27" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="810.5" y="1493" width="0.2" height="15.0" fill="rgb(249,106,31)" rx="2" ry="2" />
<text  x="813.49" y="1503.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="469.5" y="1829" width="0.2" height="15.0" fill="rgb(235,128,45)" rx="2" ry="2" />
<text  x="472.48" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="915.6" y="1637" width="0.2" height="15.0" fill="rgb(235,102,44)" rx="2" ry="2" />
<text  x="918.59" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="656.3" y="2021" width="0.8" height="15.0" fill="rgb(236,183,11)" rx="2" ry="2" />
<text  x="659.34" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="660.5" y="1925" width="1.0" height="15.0" fill="rgb(251,52,54)" rx="2" ry="2" />
<text  x="663.53" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (5 samples, 0.08%)</title><rect x="897.2" y="1957" width="1.0" height="15.0" fill="rgb(244,72,32)" rx="2" ry="2" />
<text  x="900.24" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="469.5" y="1861" width="0.2" height="15.0" fill="rgb(207,14,36)" rx="2" ry="2" />
<text  x="472.48" y="1871.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1128.0" y="1685" width="0.2" height="15.0" fill="rgb(223,11,22)" rx="2" ry="2" />
<text  x="1130.98" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="537.5" y="1989" width="0.2" height="15.0" fill="rgb(213,185,28)" rx="2" ry="2" />
<text  x="540.48" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="994.4" y="2021" width="0.2" height="15.0" fill="rgb(209,77,30)" rx="2" ry="2" />
<text  x="997.36" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="75.2" y="1893" width="0.2" height="15.0" fill="rgb(226,194,9)" rx="2" ry="2" />
<text  x="78.21" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="909.8" y="1685" width="0.2" height="15.0" fill="rgb(253,134,17)" rx="2" ry="2" />
<text  x="912.81" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="548.8" y="1989" width="3.0" height="15.0" fill="rgb(233,128,17)" rx="2" ry="2" />
<text  x="551.85" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="902.8" y="2005" width="0.2" height="15.0" fill="rgb(216,85,43)" rx="2" ry="2" />
<text  x="905.83" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1105.0" y="1829" width="0.2" height="15.0" fill="rgb(230,227,41)" rx="2" ry="2" />
<text  x="1108.04" y="1839.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(216,43,10)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="294.6" y="1829" width="0.2" height="15.0" fill="rgb(241,205,12)" rx="2" ry="2" />
<text  x="297.58" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="300.6" y="1717" width="0.2" height="15.0" fill="rgb(233,25,10)" rx="2" ry="2" />
<text  x="303.56" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (15 samples, 0.25%)</title><rect x="62.6" y="1941" width="3.0" height="15.0" fill="rgb(219,89,5)" rx="2" ry="2" />
<text  x="65.65" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="232.2" y="1941" width="0.2" height="15.0" fill="rgb(217,130,44)" rx="2" ry="2" />
<text  x="235.16" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (8 samples, 0.14%)</title><rect x="204.2" y="1925" width="1.6" height="15.0" fill="rgb(225,151,19)" rx="2" ry="2" />
<text  x="207.24" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="903.8" y="2005" width="0.2" height="15.0" fill="rgb(232,78,54)" rx="2" ry="2" />
<text  x="906.82" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.2" y="1909" width="0.2" height="15.0" fill="rgb(206,150,11)" rx="2" ry="2" />
<text  x="77.21" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="766.2" y="1509" width="0.2" height="15.0" fill="rgb(219,120,3)" rx="2" ry="2" />
<text  x="769.22" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="481.2" y="1797" width="0.4" height="15.0" fill="rgb(210,80,10)" rx="2" ry="2" />
<text  x="484.24" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="973.8" y="2037" width="0.4" height="15.0" fill="rgb(244,168,31)" rx="2" ry="2" />
<text  x="976.82" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1150.7" y="1925" width="0.2" height="15.0" fill="rgb(233,159,7)" rx="2" ry="2" />
<text  x="1153.71" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1150.7" y="1877" width="0.2" height="15.0" fill="rgb(252,89,50)" rx="2" ry="2" />
<text  x="1153.71" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="972.4" y="1797" width="0.2" height="15.0" fill="rgb(227,1,35)" rx="2" ry="2" />
<text  x="975.43" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="821" width="18.5" height="15.0" fill="rgb(227,71,5)" rx="2" ry="2" />
<text  x="96.36" y="831.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.05%)</title><rect x="1100.5" y="1909" width="0.6" height="15.0" fill="rgb(249,4,11)" rx="2" ry="2" />
<text  x="1103.46" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1118.4" y="1637" width="0.2" height="15.0" fill="rgb(237,159,19)" rx="2" ry="2" />
<text  x="1121.41" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1121.8" y="1765" width="0.2" height="15.0" fill="rgb(227,145,50)" rx="2" ry="2" />
<text  x="1124.80" y="1775.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="376.9" y="1845" width="0.2" height="15.0" fill="rgb(254,19,47)" rx="2" ry="2" />
<text  x="379.94" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="111.3" y="277" width="0.2" height="15.0" fill="rgb(254,164,23)" rx="2" ry="2" />
<text  x="114.31" y="287.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1054.8" y="1941" width="0.2" height="15.0" fill="rgb(232,134,3)" rx="2" ry="2" />
<text  x="1057.79" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (49 samples, 0.83%)</title><rect x="1106.8" y="1573" width="9.8" height="15.0" fill="rgb(247,31,24)" rx="2" ry="2" />
<text  x="1109.84" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1125" width="18.7" height="15.0" fill="rgb(238,142,12)" rx="2" ry="2" />
<text  x="96.16" y="1135.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="379.9" y="1877" width="0.2" height="15.0" fill="rgb(240,225,14)" rx="2" ry="2" />
<text  x="382.93" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="903.0" y="2005" width="0.8" height="15.0" fill="rgb(247,83,9)" rx="2" ry="2" />
<text  x="906.03" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (21 samples, 0.35%)</title><rect x="543.3" y="1973" width="4.2" height="15.0" fill="rgb(207,125,5)" rx="2" ry="2" />
<text  x="546.26" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="111.7" y="325" width="0.2" height="15.0" fill="rgb(223,40,31)" rx="2" ry="2" />
<text  x="114.71" y="335.5" ></text>
</g>
<g >
<title>tcp_poll (43 samples, 0.73%)</title><rect x="453.3" y="1941" width="8.6" height="15.0" fill="rgb(222,133,40)" rx="2" ry="2" />
<text  x="456.32" y="1951.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="565.0" y="1861" width="0.2" height="15.0" fill="rgb(240,104,28)" rx="2" ry="2" />
<text  x="568.00" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="915.6" y="1749" width="0.2" height="15.0" fill="rgb(220,98,28)" rx="2" ry="2" />
<text  x="918.59" y="1759.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="958.1" y="1973" width="0.2" height="15.0" fill="rgb(209,21,7)" rx="2" ry="2" />
<text  x="961.07" y="1983.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="71.0" y="1797" width="0.2" height="15.0" fill="rgb(234,55,35)" rx="2" ry="2" />
<text  x="74.02" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (5 samples, 0.08%)</title><rect x="885.1" y="1925" width="1.0" height="15.0" fill="rgb(206,135,24)" rx="2" ry="2" />
<text  x="888.08" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (8 samples, 0.14%)</title><rect x="1171.3" y="2021" width="1.5" height="15.0" fill="rgb(207,163,25)" rx="2" ry="2" />
<text  x="1174.25" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="909.8" y="1813" width="0.2" height="15.0" fill="rgb(250,43,4)" rx="2" ry="2" />
<text  x="912.81" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="65.2" y="1925" width="0.4" height="15.0" fill="rgb(247,225,43)" rx="2" ry="2" />
<text  x="68.24" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (8 samples, 0.14%)</title><rect x="124.5" y="1957" width="1.6" height="15.0" fill="rgb(233,56,42)" rx="2" ry="2" />
<text  x="127.47" y="1967.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="936.7" y="1621" width="0.2" height="15.0" fill="rgb(215,127,50)" rx="2" ry="2" />
<text  x="939.73" y="1631.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1128.0" y="1653" width="0.2" height="15.0" fill="rgb(215,53,6)" rx="2" ry="2" />
<text  x="1130.98" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="1169.3" y="2053" width="0.4" height="15.0" fill="rgb(250,62,28)" rx="2" ry="2" />
<text  x="1172.26" y="2063.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="585.7" y="1845" width="0.2" height="15.0" fill="rgb(251,38,29)" rx="2" ry="2" />
<text  x="588.74" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="316.9" y="1925" width="0.4" height="15.0" fill="rgb(206,72,13)" rx="2" ry="2" />
<text  x="319.92" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="894.3" y="1813" width="0.2" height="15.0" fill="rgb(237,12,29)" rx="2" ry="2" />
<text  x="897.25" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="450.3" y="1925" width="0.4" height="15.0" fill="rgb(245,124,24)" rx="2" ry="2" />
<text  x="453.33" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="52.3" y="1941" width="1.2" height="15.0" fill="rgb(217,57,30)" rx="2" ry="2" />
<text  x="55.28" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="121.7" y="1957" width="0.2" height="15.0" fill="rgb(211,118,3)" rx="2" ry="2" />
<text  x="124.68" y="1967.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1049.6" y="1701" width="0.2" height="15.0" fill="rgb(230,55,43)" rx="2" ry="2" />
<text  x="1052.60" y="1711.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="11.6" y="1829" width="0.2" height="15.0" fill="rgb(241,105,54)" rx="2" ry="2" />
<text  x="14.60" y="1839.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="92.2" y="1877" width="0.2" height="15.0" fill="rgb(252,141,10)" rx="2" ry="2" />
<text  x="95.16" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.25%)</title><rect x="611.5" y="1893" width="3.0" height="15.0" fill="rgb(225,18,29)" rx="2" ry="2" />
<text  x="614.47" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="859.2" y="1749" width="0.2" height="15.0" fill="rgb(250,133,29)" rx="2" ry="2" />
<text  x="862.15" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="56.7" y="1893" width="0.2" height="15.0" fill="rgb(220,79,7)" rx="2" ry="2" />
<text  x="59.67" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="681.9" y="1893" width="0.2" height="15.0" fill="rgb(228,69,10)" rx="2" ry="2" />
<text  x="684.86" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="110.9" y="117" width="0.2" height="15.0" fill="rgb(239,174,11)" rx="2" ry="2" />
<text  x="113.91" y="127.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1114.0" y="1477" width="0.2" height="15.0" fill="rgb(211,135,51)" rx="2" ry="2" />
<text  x="1117.02" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="970.4" y="1957" width="0.2" height="15.0" fill="rgb(236,35,22)" rx="2" ry="2" />
<text  x="973.43" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (2 samples, 0.03%)</title><rect x="572.0" y="2005" width="0.4" height="15.0" fill="rgb(232,103,21)" rx="2" ry="2" />
<text  x="574.98" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="116.9" y="1957" width="0.2" height="15.0" fill="rgb(207,90,20)" rx="2" ry="2" />
<text  x="119.89" y="1967.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="339.5" y="1925" width="0.2" height="15.0" fill="rgb(250,98,21)" rx="2" ry="2" />
<text  x="342.45" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13 samples, 0.22%)</title><rect x="11.4" y="1877" width="2.6" height="15.0" fill="rgb(244,113,10)" rx="2" ry="2" />
<text  x="14.40" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="110.1" y="85" width="0.2" height="15.0" fill="rgb(210,122,23)" rx="2" ry="2" />
<text  x="113.11" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="510.2" y="2037" width="0.2" height="15.0" fill="rgb(254,157,49)" rx="2" ry="2" />
<text  x="513.16" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="892.5" y="1909" width="0.2" height="15.0" fill="rgb(249,93,32)" rx="2" ry="2" />
<text  x="895.46" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="396.9" y="1813" width="0.2" height="15.0" fill="rgb(250,65,7)" rx="2" ry="2" />
<text  x="399.89" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (5 samples, 0.08%)</title><rect x="572.4" y="2005" width="1.0" height="15.0" fill="rgb(212,129,19)" rx="2" ry="2" />
<text  x="575.38" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="982.2" y="1973" width="0.2" height="15.0" fill="rgb(249,46,44)" rx="2" ry="2" />
<text  x="985.20" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="644.8" y="1973" width="0.2" height="15.0" fill="rgb(232,114,41)" rx="2" ry="2" />
<text  x="647.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="527.9" y="1733" width="0.2" height="15.0" fill="rgb(215,194,38)" rx="2" ry="2" />
<text  x="530.91" y="1743.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1017.1" y="1733" width="0.2" height="15.0" fill="rgb(218,126,41)" rx="2" ry="2" />
<text  x="1020.10" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1135.4" y="1829" width="0.2" height="15.0" fill="rgb(237,133,35)" rx="2" ry="2" />
<text  x="1138.36" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="929.4" y="1925" width="0.2" height="15.0" fill="rgb(224,169,15)" rx="2" ry="2" />
<text  x="932.35" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="747.5" y="1557" width="0.2" height="15.0" fill="rgb(250,77,11)" rx="2" ry="2" />
<text  x="750.48" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="469.5" y="1701" width="0.2" height="15.0" fill="rgb(221,12,33)" rx="2" ry="2" />
<text  x="472.48" y="1711.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="1557" width="0.2" height="15.0" fill="rgb(231,116,28)" rx="2" ry="2" />
<text  x="1153.71" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="639.0" y="1925" width="0.2" height="15.0" fill="rgb(209,149,35)" rx="2" ry="2" />
<text  x="641.99" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="83.8" y="2005" width="0.2" height="15.0" fill="rgb(224,149,6)" rx="2" ry="2" />
<text  x="86.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="725.9" y="1637" width="0.2" height="15.0" fill="rgb(211,223,42)" rx="2" ry="2" />
<text  x="728.94" y="1647.5" ></text>
</g>
<g >
<title>event_assign (5 samples, 0.08%)</title><rect x="962.1" y="2005" width="1.0" height="15.0" fill="rgb(217,227,25)" rx="2" ry="2" />
<text  x="965.06" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (3 samples, 0.05%)</title><rect x="1155.5" y="1973" width="0.6" height="15.0" fill="rgb(205,50,33)" rx="2" ry="2" />
<text  x="1158.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (47 samples, 0.79%)</title><rect x="119.1" y="2005" width="9.4" height="15.0" fill="rgb(206,56,37)" rx="2" ry="2" />
<text  x="122.09" y="2015.5" ></text>
</g>
<g >
<title>task_work_add (4 samples, 0.07%)</title><rect x="843.8" y="1797" width="0.8" height="15.0" fill="rgb(205,86,2)" rx="2" ry="2" />
<text  x="846.80" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1135.4" y="1925" width="0.2" height="15.0" fill="rgb(224,18,15)" rx="2" ry="2" />
<text  x="1138.36" y="1935.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="785.4" y="1477" width="0.2" height="15.0" fill="rgb(229,191,3)" rx="2" ry="2" />
<text  x="788.37" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="241.9" y="1701" width="0.2" height="15.0" fill="rgb(243,147,23)" rx="2" ry="2" />
<text  x="244.93" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="49.3" y="1957" width="0.2" height="15.0" fill="rgb(230,6,27)" rx="2" ry="2" />
<text  x="52.29" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.74%)</title><rect x="93.2" y="1525" width="20.5" height="15.0" fill="rgb(217,122,6)" rx="2" ry="2" />
<text  x="96.16" y="1535.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1052.4" y="1973" width="0.2" height="15.0" fill="rgb(218,96,21)" rx="2" ry="2" />
<text  x="1055.40" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="547.9" y="1957" width="0.1" height="15.0" fill="rgb(211,122,7)" rx="2" ry="2" />
<text  x="550.85" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="29.3" y="1941" width="0.2" height="15.0" fill="rgb(208,136,32)" rx="2" ry="2" />
<text  x="32.34" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="975.0" y="2005" width="1.4" height="15.0" fill="rgb(212,146,26)" rx="2" ry="2" />
<text  x="978.02" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (5 samples, 0.08%)</title><rect x="892.9" y="1893" width="1.0" height="15.0" fill="rgb(219,202,11)" rx="2" ry="2" />
<text  x="895.86" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="915.6" y="1829" width="0.2" height="15.0" fill="rgb(209,85,52)" rx="2" ry="2" />
<text  x="918.59" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="212.2" y="1765" width="0.2" height="15.0" fill="rgb(211,39,50)" rx="2" ry="2" />
<text  x="215.22" y="1775.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="341.2" y="1653" width="0.2" height="15.0" fill="rgb(235,66,2)" rx="2" ry="2" />
<text  x="344.25" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="747.5" y="1685" width="0.2" height="15.0" fill="rgb(238,130,44)" rx="2" ry="2" />
<text  x="750.48" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="311.3" y="1829" width="0.4" height="15.0" fill="rgb(222,92,39)" rx="2" ry="2" />
<text  x="314.33" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="970.4" y="1765" width="0.2" height="15.0" fill="rgb(233,149,36)" rx="2" ry="2" />
<text  x="973.43" y="1775.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="116.7" y="1957" width="0.2" height="15.0" fill="rgb(248,104,30)" rx="2" ry="2" />
<text  x="119.69" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="143.6" y="1845" width="0.2" height="15.0" fill="rgb(244,118,11)" rx="2" ry="2" />
<text  x="146.62" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="620.4" y="2005" width="0.4" height="15.0" fill="rgb(246,64,11)" rx="2" ry="2" />
<text  x="623.44" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="393.3" y="1877" width="0.2" height="15.0" fill="rgb(239,180,5)" rx="2" ry="2" />
<text  x="396.30" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="32.3" y="2005" width="0.2" height="15.0" fill="rgb(205,3,18)" rx="2" ry="2" />
<text  x="35.34" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="277" width="17.7" height="15.0" fill="rgb(208,228,27)" rx="2" ry="2" />
<text  x="96.36" y="287.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="317.1" y="1829" width="0.2" height="15.0" fill="rgb(206,36,42)" rx="2" ry="2" />
<text  x="320.12" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="599.5" y="1813" width="0.2" height="15.0" fill="rgb(216,189,44)" rx="2" ry="2" />
<text  x="602.50" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="241.9" y="1829" width="0.2" height="15.0" fill="rgb(216,59,10)" rx="2" ry="2" />
<text  x="244.93" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (24 samples, 0.41%)</title><rect x="537.5" y="2005" width="4.8" height="15.0" fill="rgb(226,16,14)" rx="2" ry="2" />
<text  x="540.48" y="2015.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="687.4" y="1877" width="1.0" height="15.0" fill="rgb(252,150,40)" rx="2" ry="2" />
<text  x="690.45" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="277.6" y="1701" width="0.6" height="15.0" fill="rgb(242,187,46)" rx="2" ry="2" />
<text  x="280.63" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="43.7" y="1877" width="0.4" height="15.0" fill="rgb(224,187,35)" rx="2" ry="2" />
<text  x="46.70" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="669.3" y="1829" width="0.6" height="15.0" fill="rgb(222,6,33)" rx="2" ry="2" />
<text  x="672.30" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1049.6" y="1813" width="0.2" height="15.0" fill="rgb(228,27,6)" rx="2" ry="2" />
<text  x="1052.60" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="421" width="18.5" height="15.0" fill="rgb(246,226,23)" rx="2" ry="2" />
<text  x="96.36" y="431.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (2 samples, 0.03%)</title><rect x="730.5" y="1765" width="0.4" height="15.0" fill="rgb(216,85,14)" rx="2" ry="2" />
<text  x="733.52" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="970.4" y="1941" width="0.2" height="15.0" fill="rgb(242,172,3)" rx="2" ry="2" />
<text  x="973.43" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="87.0" y="1989" width="0.2" height="15.0" fill="rgb(221,58,49)" rx="2" ry="2" />
<text  x="89.98" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="538.3" y="1813" width="0.2" height="15.0" fill="rgb(225,152,19)" rx="2" ry="2" />
<text  x="541.28" y="1823.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="232.2" y="1877" width="0.2" height="15.0" fill="rgb(253,56,54)" rx="2" ry="2" />
<text  x="235.16" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (21 samples, 0.35%)</title><rect x="704.2" y="1973" width="4.2" height="15.0" fill="rgb(220,149,54)" rx="2" ry="2" />
<text  x="707.20" y="1983.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.02%)</title><rect x="841.0" y="1813" width="0.2" height="15.0" fill="rgb(209,164,45)" rx="2" ry="2" />
<text  x="844.01" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.5" y="1765" width="0.2" height="15.0" fill="rgb(234,48,33)" rx="2" ry="2" />
<text  x="118.50" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="861.7" y="1829" width="0.2" height="15.0" fill="rgb(234,181,44)" rx="2" ry="2" />
<text  x="864.75" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="952.7" y="1749" width="0.2" height="15.0" fill="rgb(209,15,4)" rx="2" ry="2" />
<text  x="955.68" y="1759.5" ></text>
</g>
<g >
<title>jump_fcontext (8 samples, 0.14%)</title><rect x="992.4" y="2005" width="1.6" height="15.0" fill="rgb(228,142,11)" rx="2" ry="2" />
<text  x="995.37" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="152.6" y="1861" width="0.2" height="15.0" fill="rgb(219,219,6)" rx="2" ry="2" />
<text  x="155.59" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="341.0" y="1877" width="0.4" height="15.0" fill="rgb(243,71,2)" rx="2" ry="2" />
<text  x="344.05" y="1887.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(214,119,26)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>tcp_ack (48 samples, 0.81%)</title><rect x="1106.8" y="1541" width="9.6" height="15.0" fill="rgb(228,228,35)" rx="2" ry="2" />
<text  x="1109.84" y="1551.5" ></text>
</g>
<g >
<title>netif_rx (3 samples, 0.05%)</title><rect x="1116.6" y="1717" width="0.6" height="15.0" fill="rgb(208,9,17)" rx="2" ry="2" />
<text  x="1119.61" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="210.0" y="1877" width="0.2" height="15.0" fill="rgb(254,103,22)" rx="2" ry="2" />
<text  x="213.02" y="1887.5" ></text>
</g>
<g >
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="290.0" y="1669" width="0.6" height="15.0" fill="rgb(242,109,29)" rx="2" ry="2" />
<text  x="292.99" y="1679.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="952.7" y="1653" width="0.2" height="15.0" fill="rgb(226,76,35)" rx="2" ry="2" />
<text  x="955.68" y="1663.5" ></text>
</g>
<g >
<title>make_kuid (2 samples, 0.03%)</title><rect x="373.4" y="1893" width="0.4" height="15.0" fill="rgb(214,148,25)" rx="2" ry="2" />
<text  x="376.35" y="1903.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (2 samples, 0.03%)</title><rect x="520.3" y="1941" width="0.4" height="15.0" fill="rgb(229,76,22)" rx="2" ry="2" />
<text  x="523.33" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="349.8" y="1925" width="0.8" height="15.0" fill="rgb(253,126,34)" rx="2" ry="2" />
<text  x="352.82" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="669.5" y="1509" width="0.2" height="15.0" fill="rgb(253,181,5)" rx="2" ry="2" />
<text  x="672.50" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (1 samples, 0.02%)</title><rect x="84.2" y="2021" width="0.2" height="15.0" fill="rgb(253,1,8)" rx="2" ry="2" />
<text  x="87.19" y="2031.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (30 samples, 0.51%)</title><rect x="1128.6" y="2037" width="6.0" height="15.0" fill="rgb(221,182,19)" rx="2" ry="2" />
<text  x="1131.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 1.98%)</title><rect x="93.0" y="1909" width="23.3" height="15.0" fill="rgb(242,188,52)" rx="2" ry="2" />
<text  x="95.96" y="1919.5" >[..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="990.4" y="1909" width="0.4" height="15.0" fill="rgb(249,142,4)" rx="2" ry="2" />
<text  x="993.38" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_active_ (14 samples, 0.24%)</title><rect x="1141.5" y="2053" width="2.8" height="15.0" fill="rgb(211,154,51)" rx="2" ry="2" />
<text  x="1144.54" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="77.6" y="1717" width="0.2" height="15.0" fill="rgb(218,101,1)" rx="2" ry="2" />
<text  x="80.61" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="835.0" y="1445" width="0.2" height="15.0" fill="rgb(251,96,52)" rx="2" ry="2" />
<text  x="838.02" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1118.4" y="1653" width="0.2" height="15.0" fill="rgb(238,27,43)" rx="2" ry="2" />
<text  x="1121.41" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (3 samples, 0.05%)</title><rect x="995.6" y="1957" width="0.6" height="15.0" fill="rgb(236,85,12)" rx="2" ry="2" />
<text  x="998.56" y="1967.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="212.2" y="1669" width="0.2" height="15.0" fill="rgb(217,92,43)" rx="2" ry="2" />
<text  x="215.22" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="341.0" y="1749" width="0.4" height="15.0" fill="rgb(224,148,10)" rx="2" ry="2" />
<text  x="344.05" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.14%)</title><rect x="119.7" y="1973" width="1.6" height="15.0" fill="rgb(242,93,31)" rx="2" ry="2" />
<text  x="122.68" y="1983.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="322.9" y="1957" width="0.2" height="15.0" fill="rgb(244,162,17)" rx="2" ry="2" />
<text  x="325.90" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (2 samples, 0.03%)</title><rect x="133.8" y="1941" width="0.4" height="15.0" fill="rgb(225,28,26)" rx="2" ry="2" />
<text  x="136.84" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (3 samples, 0.05%)</title><rect x="68.8" y="1941" width="0.6" height="15.0" fill="rgb(232,192,0)" rx="2" ry="2" />
<text  x="71.83" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1118.4" y="1813" width="0.2" height="15.0" fill="rgb(208,38,13)" rx="2" ry="2" />
<text  x="1121.41" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="859.0" y="1909" width="0.4" height="15.0" fill="rgb(221,148,17)" rx="2" ry="2" />
<text  x="861.95" y="1919.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="543.5" y="1957" width="0.2" height="15.0" fill="rgb(229,138,9)" rx="2" ry="2" />
<text  x="546.46" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="212.2" y="1653" width="0.2" height="15.0" fill="rgb(219,215,37)" rx="2" ry="2" />
<text  x="215.22" y="1663.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (6 samples, 0.10%)</title><rect x="391.1" y="1893" width="1.2" height="15.0" fill="rgb(217,201,0)" rx="2" ry="2" />
<text  x="394.10" y="1903.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1026.9" y="2053" width="0.2" height="15.0" fill="rgb(205,142,46)" rx="2" ry="2" />
<text  x="1029.87" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="834.0" y="1621" width="0.2" height="15.0" fill="rgb(222,22,11)" rx="2" ry="2" />
<text  x="837.03" y="1631.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="900.2" y="2005" width="0.2" height="15.0" fill="rgb(242,165,34)" rx="2" ry="2" />
<text  x="903.23" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="565.2" y="1797" width="0.4" height="15.0" fill="rgb(236,24,0)" rx="2" ry="2" />
<text  x="568.20" y="1807.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (3 samples, 0.05%)</title><rect x="155.0" y="2021" width="0.6" height="15.0" fill="rgb(218,73,37)" rx="2" ry="2" />
<text  x="157.98" y="2031.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="697.0" y="1797" width="0.2" height="15.0" fill="rgb(249,175,21)" rx="2" ry="2" />
<text  x="700.02" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="624.0" y="2037" width="0.4" height="15.0" fill="rgb(247,34,33)" rx="2" ry="2" />
<text  x="627.03" y="2047.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="599.5" y="1525" width="0.2" height="15.0" fill="rgb(206,219,13)" rx="2" ry="2" />
<text  x="602.50" y="1535.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1105.0" y="1557" width="0.2" height="15.0" fill="rgb(233,50,45)" rx="2" ry="2" />
<text  x="1108.04" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="748.1" y="1525" width="0.2" height="15.0" fill="rgb(232,186,50)" rx="2" ry="2" />
<text  x="751.07" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="899.2" y="1909" width="0.2" height="15.0" fill="rgb(251,135,53)" rx="2" ry="2" />
<text  x="902.24" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="131.1" y="1909" width="0.2" height="15.0" fill="rgb(232,111,33)" rx="2" ry="2" />
<text  x="134.05" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="929.2" y="1941" width="0.2" height="15.0" fill="rgb(228,60,52)" rx="2" ry="2" />
<text  x="932.15" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="36.5" y="1957" width="0.6" height="15.0" fill="rgb(220,84,6)" rx="2" ry="2" />
<text  x="39.52" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (7 samples, 0.12%)</title><rect x="654.7" y="2021" width="1.4" height="15.0" fill="rgb(208,227,7)" rx="2" ry="2" />
<text  x="657.74" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="841.0" y="1541" width="0.2" height="15.0" fill="rgb(215,178,9)" rx="2" ry="2" />
<text  x="844.01" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="746.3" y="1765" width="0.2" height="15.0" fill="rgb(223,35,4)" rx="2" ry="2" />
<text  x="749.28" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1147.5" y="2021" width="0.2" height="15.0" fill="rgb(246,182,18)" rx="2" ry="2" />
<text  x="1150.52" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (2 samples, 0.03%)</title><rect x="130.9" y="1957" width="0.4" height="15.0" fill="rgb(217,210,25)" rx="2" ry="2" />
<text  x="133.85" y="1967.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (3 samples, 0.05%)</title><rect x="998.8" y="1973" width="0.5" height="15.0" fill="rgb(213,139,44)" rx="2" ry="2" />
<text  x="1001.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="402.9" y="1701" width="0.2" height="15.0" fill="rgb(247,118,3)" rx="2" ry="2" />
<text  x="405.87" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="1180.8" y="2053" width="1.2" height="15.0" fill="rgb(254,192,46)" rx="2" ry="2" />
<text  x="1183.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="93.2" y="1189" width="18.9" height="15.0" fill="rgb(251,105,2)" rx="2" ry="2" />
<text  x="96.16" y="1199.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="114.7" y="1653" width="0.2" height="15.0" fill="rgb(209,61,17)" rx="2" ry="2" />
<text  x="117.70" y="1663.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="479.0" y="1925" width="0.2" height="15.0" fill="rgb(242,80,42)" rx="2" ry="2" />
<text  x="482.05" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="47.5" y="1893" width="0.2" height="15.0" fill="rgb(241,86,8)" rx="2" ry="2" />
<text  x="50.49" y="1903.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="538.3" y="1653" width="0.2" height="15.0" fill="rgb(214,43,52)" rx="2" ry="2" />
<text  x="541.28" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="481.2" y="1909" width="0.4" height="15.0" fill="rgb(216,76,27)" rx="2" ry="2" />
<text  x="484.24" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="77.6" y="1797" width="0.2" height="15.0" fill="rgb(245,154,52)" rx="2" ry="2" />
<text  x="80.61" y="1807.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="971.4" y="1957" width="0.8" height="15.0" fill="rgb(218,175,44)" rx="2" ry="2" />
<text  x="974.43" y="1967.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="527.9" y="1653" width="0.2" height="15.0" fill="rgb(210,82,3)" rx="2" ry="2" />
<text  x="530.91" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::aggregate (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(240,47,19)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="1017.1" y="1765" width="0.4" height="15.0" fill="rgb(229,31,25)" rx="2" ry="2" />
<text  x="1020.10" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (7 samples, 0.12%)</title><rect x="903.8" y="2037" width="1.4" height="15.0" fill="rgb(207,72,39)" rx="2" ry="2" />
<text  x="906.82" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="915.6" y="1893" width="0.2" height="15.0" fill="rgb(234,177,53)" rx="2" ry="2" />
<text  x="918.59" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="782.0" y="1637" width="0.2" height="15.0" fill="rgb(206,59,2)" rx="2" ry="2" />
<text  x="784.98" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="107.7" y="69" width="0.2" height="15.0" fill="rgb(222,197,35)" rx="2" ry="2" />
<text  x="110.72" y="79.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (48 samples, 0.81%)</title><rect x="452.7" y="1973" width="9.6" height="15.0" fill="rgb(239,58,49)" rx="2" ry="2" />
<text  x="455.72" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="982.0" y="1957" width="0.2" height="15.0" fill="rgb(237,87,32)" rx="2" ry="2" />
<text  x="985.00" y="1967.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="74.2" y="1653" width="0.2" height="15.0" fill="rgb(212,12,5)" rx="2" ry="2" />
<text  x="77.21" y="1663.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="144.8" y="1893" width="0.2" height="15.0" fill="rgb(205,7,53)" rx="2" ry="2" />
<text  x="147.81" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="835.0" y="1493" width="0.2" height="15.0" fill="rgb(219,87,24)" rx="2" ry="2" />
<text  x="838.02" y="1503.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="492.2" y="2021" width="0.2" height="15.0" fill="rgb(209,175,1)" rx="2" ry="2" />
<text  x="495.21" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="918.2" y="2005" width="0.8" height="15.0" fill="rgb(222,194,11)" rx="2" ry="2" />
<text  x="921.18" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="614.5" y="1893" width="0.4" height="15.0" fill="rgb(222,16,48)" rx="2" ry="2" />
<text  x="617.46" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="502.4" y="1861" width="0.4" height="15.0" fill="rgb(234,192,1)" rx="2" ry="2" />
<text  x="505.38" y="1871.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="152.6" y="1653" width="0.2" height="15.0" fill="rgb(230,119,1)" rx="2" ry="2" />
<text  x="155.59" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="152.6" y="1925" width="0.2" height="15.0" fill="rgb(247,134,20)" rx="2" ry="2" />
<text  x="155.59" y="1935.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (13 samples, 0.22%)</title><rect x="245.1" y="1877" width="2.6" height="15.0" fill="rgb(209,123,8)" rx="2" ry="2" />
<text  x="248.12" y="1887.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (8 samples, 0.14%)</title><rect x="251.1" y="1829" width="1.6" height="15.0" fill="rgb(228,61,11)" rx="2" ry="2" />
<text  x="254.11" y="1839.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (11 samples, 0.19%)</title><rect x="1119.8" y="1925" width="2.2" height="15.0" fill="rgb(245,27,51)" rx="2" ry="2" />
<text  x="1122.80" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (78 samples, 1.32%)</title><rect x="925.4" y="2005" width="15.5" height="15.0" fill="rgb(248,60,13)" rx="2" ry="2" />
<text  x="928.36" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="859.2" y="1877" width="0.2" height="15.0" fill="rgb(212,217,27)" rx="2" ry="2" />
<text  x="862.15" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (874 samples, 14.77%)</title><rect x="700.0" y="2005" width="174.3" height="15.0" fill="rgb(222,185,42)" rx="2" ry="2" />
<text  x="703.01" y="2015.5" >[unknown]</text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="851.2" y="1893" width="0.2" height="15.0" fill="rgb(205,102,47)" rx="2" ry="2" />
<text  x="854.18" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1090.7" y="1861" width="0.2" height="15.0" fill="rgb(210,24,13)" rx="2" ry="2" />
<text  x="1093.69" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1189.4" y="1957" width="0.2" height="15.0" fill="rgb(239,83,36)" rx="2" ry="2" />
<text  x="1192.40" y="1967.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="340.0" y="1925" width="0.2" height="15.0" fill="rgb(225,160,0)" rx="2" ry="2" />
<text  x="343.05" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="29.3" y="1877" width="0.2" height="15.0" fill="rgb(237,118,16)" rx="2" ry="2" />
<text  x="32.34" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (2 samples, 0.03%)</title><rect x="36.7" y="1941" width="0.4" height="15.0" fill="rgb(207,29,0)" rx="2" ry="2" />
<text  x="39.72" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1253" width="19.3" height="15.0" fill="rgb(254,66,17)" rx="2" ry="2" />
<text  x="96.16" y="1263.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="997.8" y="1653" width="0.2" height="15.0" fill="rgb(236,161,9)" rx="2" ry="2" />
<text  x="1000.75" y="1663.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="538.3" y="1669" width="0.2" height="15.0" fill="rgb(230,229,14)" rx="2" ry="2" />
<text  x="541.28" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="437" width="18.5" height="15.0" fill="rgb(222,97,53)" rx="2" ry="2" />
<text  x="96.36" y="447.5" ></text>
</g>
<g >
<title>__fput (565 samples, 9.55%)</title><rect x="727.9" y="1813" width="112.7" height="15.0" fill="rgb(235,104,9)" rx="2" ry="2" />
<text  x="730.93" y="1823.5" >__fput</text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (6 samples, 0.10%)</title><rect x="129.7" y="2005" width="1.2" height="15.0" fill="rgb(212,59,52)" rx="2" ry="2" />
<text  x="132.66" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="104.7" y="37" width="1.2" height="15.0" fill="rgb(246,71,29)" rx="2" ry="2" />
<text  x="107.73" y="47.5" ></text>
</g>
<g >
<title>__libc_fcntl (64 samples, 1.08%)</title><rect x="555.0" y="1989" width="12.8" height="15.0" fill="rgb(212,10,43)" rx="2" ry="2" />
<text  x="558.03" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="615.7" y="1877" width="0.8" height="15.0" fill="rgb(220,74,10)" rx="2" ry="2" />
<text  x="618.65" y="1887.5" ></text>
</g>
<g >
<title>event_base_loop (3 samples, 0.05%)</title><rect x="1140.5" y="2053" width="0.6" height="15.0" fill="rgb(232,58,46)" rx="2" ry="2" />
<text  x="1143.54" y="2063.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (7 samples, 0.12%)</title><rect x="246.1" y="1861" width="1.4" height="15.0" fill="rgb(223,187,13)" rx="2" ry="2" />
<text  x="249.12" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="884.3" y="1909" width="0.4" height="15.0" fill="rgb(238,19,35)" rx="2" ry="2" />
<text  x="887.28" y="1919.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="669.9" y="1925" width="2.4" height="15.0" fill="rgb(230,147,5)" rx="2" ry="2" />
<text  x="672.90" y="1935.5" ></text>
</g>
<g >
<title>kfree_skbmem (6 samples, 0.10%)</title><rect x="1108.4" y="1493" width="1.2" height="15.0" fill="rgb(225,33,15)" rx="2" ry="2" />
<text  x="1111.44" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11 samples, 0.19%)</title><rect x="359.6" y="1925" width="2.2" height="15.0" fill="rgb(215,49,9)" rx="2" ry="2" />
<text  x="362.59" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="623.4" y="1925" width="0.2" height="15.0" fill="rgb(206,17,47)" rx="2" ry="2" />
<text  x="626.43" y="1935.5" ></text>
</g>
<g >
<title>__sk_dst_check (4 samples, 0.07%)</title><rect x="778.4" y="1653" width="0.8" height="15.0" fill="rgb(253,99,42)" rx="2" ry="2" />
<text  x="781.39" y="1663.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="516.9" y="1989" width="0.8" height="15.0" fill="rgb(223,22,20)" rx="2" ry="2" />
<text  x="519.94" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="215.8" y="1941" width="0.2" height="15.0" fill="rgb(218,119,34)" rx="2" ry="2" />
<text  x="218.81" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="73.8" y="1909" width="0.4" height="15.0" fill="rgb(208,148,39)" rx="2" ry="2" />
<text  x="76.82" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="132.4" y="1941" width="1.2" height="15.0" fill="rgb(231,42,0)" rx="2" ry="2" />
<text  x="135.45" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="110.5" y="69" width="0.2" height="15.0" fill="rgb(235,177,48)" rx="2" ry="2" />
<text  x="113.51" y="79.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="885.1" y="1909" width="1.0" height="15.0" fill="rgb(242,11,26)" rx="2" ry="2" />
<text  x="888.08" y="1919.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="61.7" y="1877" width="0.2" height="15.0" fill="rgb(247,154,12)" rx="2" ry="2" />
<text  x="64.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="93.2" y="1573" width="20.9" height="15.0" fill="rgb(211,25,8)" rx="2" ry="2" />
<text  x="96.16" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="350.8" y="1701" width="0.2" height="15.0" fill="rgb(214,99,40)" rx="2" ry="2" />
<text  x="353.82" y="1711.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (277 samples, 4.68%)</title><rect x="429.8" y="1989" width="55.2" height="15.0" fill="rgb(251,184,35)" rx="2" ry="2" />
<text  x="432.79" y="1999.5" >sys_e..</text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (4 samples, 0.07%)</title><rect x="553.8" y="1957" width="0.8" height="15.0" fill="rgb(249,151,11)" rx="2" ry="2" />
<text  x="556.83" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="638.4" y="1909" width="0.6" height="15.0" fill="rgb(234,62,12)" rx="2" ry="2" />
<text  x="641.39" y="1919.5" ></text>
</g>
<g >
<title>iput (60 samples, 1.01%)</title><rect x="734.3" y="1733" width="12.0" height="15.0" fill="rgb(251,42,18)" rx="2" ry="2" />
<text  x="737.31" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="574.2" y="1957" width="0.6" height="15.0" fill="rgb(244,31,16)" rx="2" ry="2" />
<text  x="577.17" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="610.7" y="1749" width="0.2" height="15.0" fill="rgb(243,92,26)" rx="2" ry="2" />
<text  x="613.67" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="653.5" y="2005" width="0.2" height="15.0" fill="rgb(248,41,25)" rx="2" ry="2" />
<text  x="656.55" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="244.5" y="1877" width="0.4" height="15.0" fill="rgb(245,3,28)" rx="2" ry="2" />
<text  x="247.52" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="28.5" y="1941" width="0.4" height="15.0" fill="rgb(218,221,54)" rx="2" ry="2" />
<text  x="31.55" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="110.1" y="37" width="0.2" height="15.0" fill="rgb(242,219,15)" rx="2" ry="2" />
<text  x="113.11" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="29.3" y="1829" width="0.2" height="15.0" fill="rgb(213,102,39)" rx="2" ry="2" />
<text  x="32.34" y="1839.5" ></text>
</g>
<g >
<title>copyout (3 samples, 0.05%)</title><rect x="1101.1" y="1909" width="0.6" height="15.0" fill="rgb(246,6,30)" rx="2" ry="2" />
<text  x="1104.06" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1181.8" y="2021" width="0.2" height="15.0" fill="rgb(206,148,5)" rx="2" ry="2" />
<text  x="1184.82" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="379.7" y="1701" width="0.2" height="15.0" fill="rgb(213,7,8)" rx="2" ry="2" />
<text  x="382.73" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (13 samples, 0.22%)</title><rect x="80.2" y="1989" width="2.6" height="15.0" fill="rgb(207,175,31)" rx="2" ry="2" />
<text  x="83.20" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="128.5" y="1957" width="0.2" height="15.0" fill="rgb(246,178,11)" rx="2" ry="2" />
<text  x="131.46" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1189.4" y="1781" width="0.2" height="15.0" fill="rgb(232,72,5)" rx="2" ry="2" />
<text  x="1192.40" y="1791.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="999.9" y="1989" width="0.2" height="15.0" fill="rgb(246,126,11)" rx="2" ry="2" />
<text  x="1002.95" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1079.5" y="1445" width="0.2" height="15.0" fill="rgb(205,68,42)" rx="2" ry="2" />
<text  x="1082.52" y="1455.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1079.5" y="1509" width="0.2" height="15.0" fill="rgb(224,18,33)" rx="2" ry="2" />
<text  x="1082.52" y="1519.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="550.2" y="1957" width="1.4" height="15.0" fill="rgb(238,47,23)" rx="2" ry="2" />
<text  x="553.24" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1178.0" y="1973" width="0.4" height="15.0" fill="rgb(216,223,0)" rx="2" ry="2" />
<text  x="1181.03" y="1983.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="255.1" y="1589" width="0.2" height="15.0" fill="rgb(234,13,32)" rx="2" ry="2" />
<text  x="258.09" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="128.5" y="1941" width="0.2" height="15.0" fill="rgb(220,201,38)" rx="2" ry="2" />
<text  x="131.46" y="1951.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (11 samples, 0.19%)</title><rect x="1119.8" y="1941" width="2.2" height="15.0" fill="rgb(232,41,3)" rx="2" ry="2" />
<text  x="1122.80" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="72.6" y="1941" width="0.2" height="15.0" fill="rgb(222,219,17)" rx="2" ry="2" />
<text  x="75.62" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="952.7" y="1861" width="0.2" height="15.0" fill="rgb(252,205,44)" rx="2" ry="2" />
<text  x="955.68" y="1871.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="218.0" y="1957" width="0.2" height="15.0" fill="rgb(224,84,40)" rx="2" ry="2" />
<text  x="221.00" y="1967.5" ></text>
</g>
<g >
<title>sys_setsockopt (3 samples, 0.05%)</title><rect x="692.0" y="1957" width="0.6" height="15.0" fill="rgb(216,226,33)" rx="2" ry="2" />
<text  x="695.03" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1017.1" y="1909" width="0.4" height="15.0" fill="rgb(243,208,29)" rx="2" ry="2" />
<text  x="1020.10" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="31.1" y="1957" width="0.2" height="15.0" fill="rgb(215,22,32)" rx="2" ry="2" />
<text  x="34.14" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1128.0" y="1845" width="0.2" height="15.0" fill="rgb(211,18,6)" rx="2" ry="2" />
<text  x="1130.98" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="861.7" y="1861" width="0.2" height="15.0" fill="rgb(229,185,49)" rx="2" ry="2" />
<text  x="864.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="578.6" y="1973" width="0.2" height="15.0" fill="rgb(229,42,10)" rx="2" ry="2" />
<text  x="581.56" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="915.6" y="1797" width="0.2" height="15.0" fill="rgb(232,79,46)" rx="2" ry="2" />
<text  x="918.59" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="825.5" y="1589" width="0.1" height="15.0" fill="rgb(233,50,54)" rx="2" ry="2" />
<text  x="828.45" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="538.3" y="1941" width="0.2" height="15.0" fill="rgb(231,35,12)" rx="2" ry="2" />
<text  x="541.28" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="1115.6" y="1509" width="0.2" height="15.0" fill="rgb(251,173,33)" rx="2" ry="2" />
<text  x="1118.61" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="950.1" y="2005" width="0.2" height="15.0" fill="rgb(216,114,23)" rx="2" ry="2" />
<text  x="953.09" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (30 samples, 0.51%)</title><rect x="296.8" y="1765" width="6.0" height="15.0" fill="rgb(253,5,18)" rx="2" ry="2" />
<text  x="299.77" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (467 samples, 7.89%)</title><rect x="1034.2" y="2037" width="93.2" height="15.0" fill="rgb(242,192,5)" rx="2" ry="2" />
<text  x="1037.25" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="911.0" y="1989" width="4.0" height="15.0" fill="rgb(241,199,50)" rx="2" ry="2" />
<text  x="914.00" y="1999.5" ></text>
</g>
<g >
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="1116.6" y="1701" width="0.6" height="15.0" fill="rgb(213,119,23)" rx="2" ry="2" />
<text  x="1119.61" y="1711.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="640.6" y="1957" width="0.2" height="15.0" fill="rgb(251,223,9)" rx="2" ry="2" />
<text  x="643.58" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (134 samples, 2.26%)</title><rect x="783.4" y="1605" width="26.7" height="15.0" fill="rgb(209,158,10)" rx="2" ry="2" />
<text  x="786.37" y="1615.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="482.8" y="1957" width="0.2" height="15.0" fill="rgb(247,99,9)" rx="2" ry="2" />
<text  x="485.84" y="1967.5" ></text>
</g>
<g >
<title>__fget (19 samples, 0.32%)</title><rect x="1122.6" y="1925" width="3.8" height="15.0" fill="rgb(247,190,3)" rx="2" ry="2" />
<text  x="1125.59" y="1935.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="743.3" y="1685" width="0.4" height="15.0" fill="rgb(252,47,22)" rx="2" ry="2" />
<text  x="746.29" y="1695.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="687.4" y="1829" width="0.8" height="15.0" fill="rgb(235,144,21)" rx="2" ry="2" />
<text  x="690.45" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="49.7" y="1893" width="0.4" height="15.0" fill="rgb(246,6,54)" rx="2" ry="2" />
<text  x="52.69" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="484.6" y="1893" width="0.2" height="15.0" fill="rgb(209,29,11)" rx="2" ry="2" />
<text  x="487.63" y="1903.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1116.2" y="1525" width="0.2" height="15.0" fill="rgb(208,105,52)" rx="2" ry="2" />
<text  x="1119.21" y="1535.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="1019.7" y="2037" width="0.4" height="15.0" fill="rgb(233,211,8)" rx="2" ry="2" />
<text  x="1022.69" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="972.4" y="1925" width="0.2" height="15.0" fill="rgb(206,224,24)" rx="2" ry="2" />
<text  x="975.43" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1183.6" y="2005" width="0.2" height="15.0" fill="rgb(231,121,10)" rx="2" ry="2" />
<text  x="1186.62" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="835.0" y="1637" width="0.2" height="15.0" fill="rgb(226,101,11)" rx="2" ry="2" />
<text  x="838.02" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="924.4" y="1973" width="0.2" height="15.0" fill="rgb(211,174,0)" rx="2" ry="2" />
<text  x="927.37" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (30 samples, 0.51%)</title><rect x="51.3" y="1973" width="6.0" height="15.0" fill="rgb(214,3,0)" rx="2" ry="2" />
<text  x="54.28" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="54.3" y="1845" width="0.2" height="15.0" fill="rgb(234,144,31)" rx="2" ry="2" />
<text  x="57.27" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="273.4" y="1557" width="0.2" height="15.0" fill="rgb(235,214,54)" rx="2" ry="2" />
<text  x="276.44" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (5 samples, 0.08%)</title><rect x="885.1" y="1941" width="1.0" height="15.0" fill="rgb(248,77,18)" rx="2" ry="2" />
<text  x="888.08" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="928.6" y="1925" width="0.4" height="15.0" fill="rgb(233,149,40)" rx="2" ry="2" />
<text  x="931.55" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="928.2" y="1925" width="0.2" height="15.0" fill="rgb(213,51,6)" rx="2" ry="2" />
<text  x="931.15" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="973.0" y="2021" width="0.4" height="15.0" fill="rgb(214,205,48)" rx="2" ry="2" />
<text  x="976.03" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="987.6" y="1909" width="0.4" height="15.0" fill="rgb(207,189,48)" rx="2" ry="2" />
<text  x="990.58" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1121.8" y="1909" width="0.2" height="15.0" fill="rgb(251,183,47)" rx="2" ry="2" />
<text  x="1124.80" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="726.1" y="1749" width="0.8" height="15.0" fill="rgb(241,205,42)" rx="2" ry="2" />
<text  x="729.14" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1128.0" y="1813" width="0.2" height="15.0" fill="rgb(229,176,44)" rx="2" ry="2" />
<text  x="1130.98" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="232.2" y="1957" width="0.2" height="15.0" fill="rgb(226,143,41)" rx="2" ry="2" />
<text  x="235.16" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="241.1" y="1861" width="0.2" height="15.0" fill="rgb(222,66,4)" rx="2" ry="2" />
<text  x="244.13" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="903.0" y="1989" width="0.2" height="15.0" fill="rgb(247,70,19)" rx="2" ry="2" />
<text  x="906.03" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="482.8" y="1685" width="0.2" height="15.0" fill="rgb(254,228,21)" rx="2" ry="2" />
<text  x="485.84" y="1695.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.03%)</title><rect x="509.4" y="2037" width="0.4" height="15.0" fill="rgb(216,118,7)" rx="2" ry="2" />
<text  x="512.36" y="2047.5" ></text>
</g>
<g >
<title>skb_release_data (36 samples, 0.61%)</title><rect x="1072.7" y="1893" width="7.2" height="15.0" fill="rgb(224,102,27)" rx="2" ry="2" />
<text  x="1075.74" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="311.3" y="1717" width="0.2" height="15.0" fill="rgb(229,88,40)" rx="2" ry="2" />
<text  x="314.33" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="537.3" y="1941" width="0.2" height="15.0" fill="rgb(216,226,4)" rx="2" ry="2" />
<text  x="540.28" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="92.4" y="2021" width="0.2" height="15.0" fill="rgb(254,150,43)" rx="2" ry="2" />
<text  x="95.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="577.4" y="1957" width="0.4" height="15.0" fill="rgb(220,12,40)" rx="2" ry="2" />
<text  x="580.37" y="1967.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="747.9" y="1525" width="0.2" height="15.0" fill="rgb(243,145,20)" rx="2" ry="2" />
<text  x="750.87" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="450.3" y="1845" width="0.4" height="15.0" fill="rgb(251,9,16)" rx="2" ry="2" />
<text  x="453.33" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1090.7" y="1765" width="0.2" height="15.0" fill="rgb(231,164,46)" rx="2" ry="2" />
<text  x="1093.69" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="255.1" y="1797" width="0.2" height="15.0" fill="rgb(230,32,8)" rx="2" ry="2" />
<text  x="258.09" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="139.6" y="1893" width="0.8" height="15.0" fill="rgb(208,92,45)" rx="2" ry="2" />
<text  x="142.63" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (33 samples, 0.56%)</title><rect x="930.3" y="1941" width="6.6" height="15.0" fill="rgb(232,99,26)" rx="2" ry="2" />
<text  x="933.35" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="948.7" y="1973" width="0.2" height="15.0" fill="rgb(239,199,45)" rx="2" ry="2" />
<text  x="951.70" y="1983.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (3 samples, 0.05%)</title><rect x="183.5" y="2021" width="0.6" height="15.0" fill="rgb(249,229,11)" rx="2" ry="2" />
<text  x="186.50" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="997.8" y="1493" width="0.2" height="15.0" fill="rgb(220,218,14)" rx="2" ry="2" />
<text  x="1000.75" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="469.5" y="1925" width="0.2" height="15.0" fill="rgb(247,150,19)" rx="2" ry="2" />
<text  x="472.48" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="469.5" y="1781" width="0.2" height="15.0" fill="rgb(210,36,21)" rx="2" ry="2" />
<text  x="472.48" y="1791.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="87.0" y="1829" width="0.2" height="15.0" fill="rgb(234,68,52)" rx="2" ry="2" />
<text  x="89.98" y="1839.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="863.9" y="1941" width="0.4" height="15.0" fill="rgb(253,51,42)" rx="2" ry="2" />
<text  x="866.94" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="139.4" y="1877" width="0.2" height="15.0" fill="rgb(253,99,9)" rx="2" ry="2" />
<text  x="142.43" y="1887.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="358.4" y="1925" width="0.8" height="15.0" fill="rgb(233,12,52)" rx="2" ry="2" />
<text  x="361.40" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="154.8" y="1941" width="0.2" height="15.0" fill="rgb(243,88,5)" rx="2" ry="2" />
<text  x="157.78" y="1951.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="527.9" y="1669" width="0.2" height="15.0" fill="rgb(239,0,19)" rx="2" ry="2" />
<text  x="530.91" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="696.2" y="2005" width="1.8" height="15.0" fill="rgb(217,10,51)" rx="2" ry="2" />
<text  x="699.22" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="871.5" y="1989" width="0.6" height="15.0" fill="rgb(241,199,34)" rx="2" ry="2" />
<text  x="874.52" y="1999.5" ></text>
</g>
<g >
<title>free (16 samples, 0.27%)</title><rect x="174.9" y="2021" width="3.2" height="15.0" fill="rgb(208,108,51)" rx="2" ry="2" />
<text  x="177.92" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (5 samples, 0.08%)</title><rect x="578.4" y="1989" width="1.0" height="15.0" fill="rgb(229,80,6)" rx="2" ry="2" />
<text  x="581.36" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1184.4" y="2021" width="0.2" height="15.0" fill="rgb(233,149,46)" rx="2" ry="2" />
<text  x="1187.42" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (379 samples, 6.41%)</title><rect x="326.7" y="2005" width="75.6" height="15.0" fill="rgb(239,27,33)" rx="2" ry="2" />
<text  x="329.69" y="2015.5" >do_sysca..</text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="93.2" y="1685" width="21.7" height="15.0" fill="rgb(215,178,10)" rx="2" ry="2" />
<text  x="96.16" y="1695.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (11 samples, 0.19%)</title><rect x="1170.7" y="2053" width="2.1" height="15.0" fill="rgb(241,71,35)" rx="2" ry="2" />
<text  x="1173.66" y="2063.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1115.2" y="1509" width="0.2" height="15.0" fill="rgb(236,97,53)" rx="2" ry="2" />
<text  x="1118.22" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="861.9" y="1877" width="0.2" height="15.0" fill="rgb(248,88,40)" rx="2" ry="2" />
<text  x="864.95" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="484.6" y="1877" width="0.2" height="15.0" fill="rgb(216,202,53)" rx="2" ry="2" />
<text  x="487.63" y="1887.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="683.7" y="1893" width="0.2" height="15.0" fill="rgb(236,124,10)" rx="2" ry="2" />
<text  x="686.66" y="1903.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="1134.6" y="1893" width="0.2" height="15.0" fill="rgb(212,20,21)" rx="2" ry="2" />
<text  x="1137.56" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="510.4" y="2037" width="0.4" height="15.0" fill="rgb(247,1,28)" rx="2" ry="2" />
<text  x="513.36" y="2047.5" ></text>
</g>
<g >
<title>sock_alloc_file (90 samples, 1.52%)</title><rect x="382.1" y="1957" width="18.0" height="15.0" fill="rgb(214,16,31)" rx="2" ry="2" />
<text  x="385.13" y="1967.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="747.5" y="1429" width="0.2" height="15.0" fill="rgb(228,153,35)" rx="2" ry="2" />
<text  x="750.48" y="1439.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="782.8" y="1605" width="0.4" height="15.0" fill="rgb(231,13,47)" rx="2" ry="2" />
<text  x="785.77" y="1615.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="767.2" y="1685" width="0.2" height="15.0" fill="rgb(224,71,13)" rx="2" ry="2" />
<text  x="770.22" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 0.69%)</title><rect x="556.4" y="1957" width="8.2" height="15.0" fill="rgb(245,1,20)" rx="2" ry="2" />
<text  x="559.43" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="888.5" y="1941" width="0.4" height="15.0" fill="rgb(206,73,52)" rx="2" ry="2" />
<text  x="891.47" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (1 samples, 0.02%)</title><rect x="902.0" y="2005" width="0.2" height="15.0" fill="rgb(231,71,38)" rx="2" ry="2" />
<text  x="905.03" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="972.4" y="1845" width="0.2" height="15.0" fill="rgb(225,113,37)" rx="2" ry="2" />
<text  x="975.43" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (22 samples, 0.37%)</title><rect x="352.8" y="1909" width="4.4" height="15.0" fill="rgb(223,68,50)" rx="2" ry="2" />
<text  x="355.81" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (12 samples, 0.20%)</title><rect x="99.9" y="37" width="2.4" height="15.0" fill="rgb(242,145,53)" rx="2" ry="2" />
<text  x="102.94" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="956.9" y="2005" width="0.4" height="15.0" fill="rgb(245,215,18)" rx="2" ry="2" />
<text  x="959.87" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1079.5" y="1765" width="0.2" height="15.0" fill="rgb(215,129,4)" rx="2" ry="2" />
<text  x="1082.52" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="93.2" y="1509" width="20.3" height="15.0" fill="rgb(220,119,37)" rx="2" ry="2" />
<text  x="96.16" y="1519.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="257.3" y="1573" width="0.2" height="15.0" fill="rgb(248,114,7)" rx="2" ry="2" />
<text  x="260.29" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1150.7" y="1717" width="0.2" height="15.0" fill="rgb(223,51,46)" rx="2" ry="2" />
<text  x="1153.71" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="93.0" y="1749" width="21.9" height="15.0" fill="rgb(234,2,52)" rx="2" ry="2" />
<text  x="95.96" y="1759.5" >[..</text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="523.7" y="1973" width="0.2" height="15.0" fill="rgb(249,16,41)" rx="2" ry="2" />
<text  x="526.72" y="1983.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="51.5" y="1829" width="0.2" height="15.0" fill="rgb(243,215,44)" rx="2" ry="2" />
<text  x="54.48" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="640.2" y="1925" width="0.2" height="15.0" fill="rgb(229,63,10)" rx="2" ry="2" />
<text  x="643.18" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="747.9" y="1685" width="0.4" height="15.0" fill="rgb(208,8,8)" rx="2" ry="2" />
<text  x="750.87" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="257.3" y="1813" width="0.2" height="15.0" fill="rgb(245,67,49)" rx="2" ry="2" />
<text  x="260.29" y="1823.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="696.4" y="1973" width="0.2" height="15.0" fill="rgb(205,151,33)" rx="2" ry="2" />
<text  x="699.42" y="1983.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="807.5" y="1509" width="0.4" height="15.0" fill="rgb(238,49,22)" rx="2" ry="2" />
<text  x="810.50" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1121.8" y="1877" width="0.2" height="15.0" fill="rgb(207,45,28)" rx="2" ry="2" />
<text  x="1124.80" y="1887.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1149.5" y="1941" width="0.2" height="15.0" fill="rgb(246,168,41)" rx="2" ry="2" />
<text  x="1152.52" y="1951.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="291.4" y="1781" width="0.4" height="15.0" fill="rgb(245,73,25)" rx="2" ry="2" />
<text  x="294.39" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (22 samples, 0.37%)</title><rect x="986.4" y="1957" width="4.4" height="15.0" fill="rgb(237,2,23)" rx="2" ry="2" />
<text  x="989.39" y="1967.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="88.6" y="2005" width="0.6" height="15.0" fill="rgb(212,73,54)" rx="2" ry="2" />
<text  x="91.57" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="379.7" y="1829" width="0.2" height="15.0" fill="rgb(208,133,5)" rx="2" ry="2" />
<text  x="382.73" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="576.4" y="1925" width="0.2" height="15.0" fill="rgb(239,203,32)" rx="2" ry="2" />
<text  x="579.37" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="316.9" y="1861" width="0.4" height="15.0" fill="rgb(254,199,6)" rx="2" ry="2" />
<text  x="319.92" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="212.0" y="1829" width="0.6" height="15.0" fill="rgb(240,49,38)" rx="2" ry="2" />
<text  x="215.02" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="585.7" y="1909" width="0.2" height="15.0" fill="rgb(252,5,31)" rx="2" ry="2" />
<text  x="588.74" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.0" y="1685" width="0.2" height="15.0" fill="rgb(242,86,0)" rx="2" ry="2" />
<text  x="844.01" y="1695.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="690.6" y="1877" width="0.8" height="15.0" fill="rgb(208,133,26)" rx="2" ry="2" />
<text  x="693.64" y="1887.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="579.8" y="1989" width="0.2" height="15.0" fill="rgb(252,43,47)" rx="2" ry="2" />
<text  x="582.76" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="57.1" y="1957" width="0.2" height="15.0" fill="rgb(213,151,24)" rx="2" ry="2" />
<text  x="60.06" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="615.3" y="1973" width="0.2" height="15.0" fill="rgb(210,201,3)" rx="2" ry="2" />
<text  x="618.26" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="747.9" y="1589" width="0.4" height="15.0" fill="rgb(246,16,3)" rx="2" ry="2" />
<text  x="750.87" y="1599.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.6" y="1941" width="0.2" height="15.0" fill="rgb(226,87,31)" rx="2" ry="2" />
<text  x="577.57" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="894.3" y="1845" width="0.2" height="15.0" fill="rgb(210,23,54)" rx="2" ry="2" />
<text  x="897.25" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1079.7" y="1733" width="0.2" height="15.0" fill="rgb(221,42,53)" rx="2" ry="2" />
<text  x="1082.72" y="1743.5" ></text>
</g>
<g >
<title>[[vdso]] (5 samples, 0.08%)</title><rect x="193.3" y="2005" width="1.0" height="15.0" fill="rgb(227,131,48)" rx="2" ry="2" />
<text  x="196.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="923.4" y="1989" width="0.2" height="15.0" fill="rgb(213,158,7)" rx="2" ry="2" />
<text  x="926.37" y="1999.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (384 samples, 6.49%)</title><rect x="1049.8" y="1989" width="76.6" height="15.0" fill="rgb(247,75,52)" rx="2" ry="2" />
<text  x="1052.80" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="316.9" y="1909" width="0.4" height="15.0" fill="rgb(224,63,34)" rx="2" ry="2" />
<text  x="319.92" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="747.9" y="1781" width="0.4" height="15.0" fill="rgb(238,221,2)" rx="2" ry="2" />
<text  x="750.87" y="1791.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="241.9" y="1685" width="0.2" height="15.0" fill="rgb(206,218,32)" rx="2" ry="2" />
<text  x="244.93" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="864.9" y="1957" width="0.2" height="15.0" fill="rgb(247,208,43)" rx="2" ry="2" />
<text  x="867.94" y="1967.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="81.8" y="1637" width="0.2" height="15.0" fill="rgb(206,165,54)" rx="2" ry="2" />
<text  x="84.79" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="77.6" y="1845" width="0.2" height="15.0" fill="rgb(247,43,44)" rx="2" ry="2" />
<text  x="80.61" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="527.9" y="1941" width="0.2" height="15.0" fill="rgb(235,107,39)" rx="2" ry="2" />
<text  x="530.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="565.4" y="1733" width="0.2" height="15.0" fill="rgb(216,102,17)" rx="2" ry="2" />
<text  x="568.40" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="75.0" y="1909" width="0.2" height="15.0" fill="rgb(212,106,34)" rx="2" ry="2" />
<text  x="78.01" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="585.7" y="1877" width="0.2" height="15.0" fill="rgb(242,1,49)" rx="2" ry="2" />
<text  x="588.74" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="103.5" y="37" width="0.4" height="15.0" fill="rgb(213,58,22)" rx="2" ry="2" />
<text  x="106.53" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="599.5" y="1749" width="0.2" height="15.0" fill="rgb(219,200,32)" rx="2" ry="2" />
<text  x="602.50" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="257.3" y="1717" width="0.2" height="15.0" fill="rgb(245,211,26)" rx="2" ry="2" />
<text  x="260.29" y="1727.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="484.0" y="1973" width="0.6" height="15.0" fill="rgb(237,167,51)" rx="2" ry="2" />
<text  x="487.03" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="991.0" y="1989" width="0.2" height="15.0" fill="rgb(217,6,47)" rx="2" ry="2" />
<text  x="993.97" y="1999.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="618.2" y="1925" width="0.2" height="15.0" fill="rgb(220,119,34)" rx="2" ry="2" />
<text  x="621.25" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (2 samples, 0.03%)</title><rect x="617.4" y="2021" width="0.4" height="15.0" fill="rgb(236,10,50)" rx="2" ry="2" />
<text  x="620.45" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1121.8" y="1733" width="0.2" height="15.0" fill="rgb(231,44,48)" rx="2" ry="2" />
<text  x="1124.80" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.14%)</title><rect x="207.0" y="1909" width="1.6" height="15.0" fill="rgb(238,168,38)" rx="2" ry="2" />
<text  x="210.03" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="632.8" y="1973" width="0.4" height="15.0" fill="rgb(225,154,25)" rx="2" ry="2" />
<text  x="635.81" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="626.4" y="1973" width="0.2" height="15.0" fill="rgb(248,194,38)" rx="2" ry="2" />
<text  x="629.42" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="891.7" y="1877" width="0.2" height="15.0" fill="rgb(253,34,6)" rx="2" ry="2" />
<text  x="894.66" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (5 samples, 0.08%)</title><rect x="885.1" y="1893" width="1.0" height="15.0" fill="rgb(213,145,34)" rx="2" ry="2" />
<text  x="888.08" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="732.1" y="1749" width="0.2" height="15.0" fill="rgb(242,217,20)" rx="2" ry="2" />
<text  x="735.12" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1128.0" y="1957" width="0.2" height="15.0" fill="rgb(229,57,1)" rx="2" ry="2" />
<text  x="1130.98" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1183.8" y="1973" width="0.2" height="15.0" fill="rgb(226,112,46)" rx="2" ry="2" />
<text  x="1186.82" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(238,144,31)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="732.5" y="1733" width="0.2" height="15.0" fill="rgb(237,75,23)" rx="2" ry="2" />
<text  x="735.52" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="359.0" y="1909" width="0.2" height="15.0" fill="rgb(215,152,47)" rx="2" ry="2" />
<text  x="361.99" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.2" y="1669" width="0.2" height="15.0" fill="rgb(248,216,39)" rx="2" ry="2" />
<text  x="844.21" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="630.6" y="1957" width="0.2" height="15.0" fill="rgb(248,26,44)" rx="2" ry="2" />
<text  x="633.61" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (2 samples, 0.03%)</title><rect x="919.8" y="2037" width="0.4" height="15.0" fill="rgb(219,179,1)" rx="2" ry="2" />
<text  x="922.78" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1189.4" y="2037" width="0.2" height="15.0" fill="rgb(254,199,34)" rx="2" ry="2" />
<text  x="1192.40" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.6" y="1941" width="0.2" height="15.0" fill="rgb(222,121,53)" rx="2" ry="2" />
<text  x="163.57" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="988.2" y="1781" width="0.2" height="15.0" fill="rgb(229,100,27)" rx="2" ry="2" />
<text  x="991.18" y="1791.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1090.3" y="1893" width="0.2" height="15.0" fill="rgb(214,131,37)" rx="2" ry="2" />
<text  x="1093.29" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="615.7" y="1973" width="0.8" height="15.0" fill="rgb(253,61,43)" rx="2" ry="2" />
<text  x="618.65" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.94%)</title><rect x="93.0" y="1845" width="22.9" height="15.0" fill="rgb(212,173,8)" rx="2" ry="2" />
<text  x="95.96" y="1855.5" >[..</text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="835.0" y="1397" width="0.2" height="15.0" fill="rgb(206,44,8)" rx="2" ry="2" />
<text  x="838.02" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="56.7" y="1845" width="0.2" height="15.0" fill="rgb(209,88,33)" rx="2" ry="2" />
<text  x="59.67" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="252.5" y="1541" width="0.2" height="15.0" fill="rgb(239,141,5)" rx="2" ry="2" />
<text  x="255.50" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="725.9" y="1781" width="0.2" height="15.0" fill="rgb(222,185,43)" rx="2" ry="2" />
<text  x="728.94" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="450.7" y="1909" width="0.2" height="15.0" fill="rgb(248,65,43)" rx="2" ry="2" />
<text  x="453.73" y="1919.5" ></text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.03%)</title><rect x="88.2" y="2005" width="0.4" height="15.0" fill="rgb(246,122,19)" rx="2" ry="2" />
<text  x="91.17" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="68.0" y="1941" width="0.4" height="15.0" fill="rgb(226,211,41)" rx="2" ry="2" />
<text  x="71.03" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (1 samples, 0.02%)</title><rect x="569.8" y="2005" width="0.2" height="15.0" fill="rgb(247,123,43)" rx="2" ry="2" />
<text  x="572.79" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1049.6" y="1973" width="0.2" height="15.0" fill="rgb(238,54,11)" rx="2" ry="2" />
<text  x="1052.60" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="81.8" y="1749" width="0.2" height="15.0" fill="rgb(248,61,32)" rx="2" ry="2" />
<text  x="84.79" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1157.5" y="1941" width="0.2" height="15.0" fill="rgb(239,197,19)" rx="2" ry="2" />
<text  x="1160.49" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="810.3" y="1589" width="0.2" height="15.0" fill="rgb(220,174,24)" rx="2" ry="2" />
<text  x="813.29" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="405" width="18.5" height="15.0" fill="rgb(244,180,15)" rx="2" ry="2" />
<text  x="96.36" y="415.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="641.0" y="1973" width="0.2" height="15.0" fill="rgb(220,15,45)" rx="2" ry="2" />
<text  x="643.98" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="357.0" y="1829" width="0.2" height="15.0" fill="rgb(214,12,51)" rx="2" ry="2" />
<text  x="360.00" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="688.2" y="1861" width="0.2" height="15.0" fill="rgb(246,64,46)" rx="2" ry="2" />
<text  x="691.25" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="161.2" y="1973" width="0.4" height="15.0" fill="rgb(249,137,16)" rx="2" ry="2" />
<text  x="164.16" y="1983.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="402.7" y="1909" width="0.2" height="15.0" fill="rgb(232,91,27)" rx="2" ry="2" />
<text  x="405.67" y="1919.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (4 samples, 0.07%)</title><rect x="967.4" y="2021" width="0.8" height="15.0" fill="rgb(254,63,52)" rx="2" ry="2" />
<text  x="970.44" y="2031.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="371.4" y="1813" width="0.2" height="15.0" fill="rgb(237,123,51)" rx="2" ry="2" />
<text  x="374.36" y="1823.5" ></text>
</g>
<g >
<title>call_rcu_sched (6 samples, 0.10%)</title><rect x="729.7" y="1797" width="1.2" height="15.0" fill="rgb(243,195,48)" rx="2" ry="2" />
<text  x="732.73" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="607.1" y="1989" width="0.2" height="15.0" fill="rgb(237,3,27)" rx="2" ry="2" />
<text  x="610.08" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="527.5" y="1941" width="0.4" height="15.0" fill="rgb(240,42,6)" rx="2" ry="2" />
<text  x="530.51" y="1951.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (28 samples, 0.47%)</title><rect x="818.5" y="1669" width="5.6" height="15.0" fill="rgb(207,17,29)" rx="2" ry="2" />
<text  x="821.47" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="924.8" y="1733" width="0.2" height="15.0" fill="rgb(227,34,9)" rx="2" ry="2" />
<text  x="927.76" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1017.1" y="1893" width="0.4" height="15.0" fill="rgb(239,41,47)" rx="2" ry="2" />
<text  x="1020.10" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="71.0" y="1829" width="0.2" height="15.0" fill="rgb(223,100,3)" rx="2" ry="2" />
<text  x="74.02" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="858.8" y="1909" width="0.2" height="15.0" fill="rgb(244,131,22)" rx="2" ry="2" />
<text  x="861.75" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="970.4" y="2021" width="0.2" height="15.0" fill="rgb(208,70,0)" rx="2" ry="2" />
<text  x="973.43" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="984.4" y="1957" width="0.2" height="15.0" fill="rgb(218,129,25)" rx="2" ry="2" />
<text  x="987.39" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="859.6" y="1941" width="0.2" height="15.0" fill="rgb(253,28,19)" rx="2" ry="2" />
<text  x="862.55" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="127.3" y="1973" width="1.0" height="15.0" fill="rgb(221,143,50)" rx="2" ry="2" />
<text  x="130.26" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="562.4" y="1925" width="0.2" height="15.0" fill="rgb(218,119,9)" rx="2" ry="2" />
<text  x="565.41" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="74.4" y="1925" width="0.2" height="15.0" fill="rgb(216,178,24)" rx="2" ry="2" />
<text  x="77.41" y="1935.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="846.6" y="1589" width="0.2" height="15.0" fill="rgb(247,100,30)" rx="2" ry="2" />
<text  x="849.59" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="172.1" y="1957" width="0.8" height="15.0" fill="rgb(246,157,4)" rx="2" ry="2" />
<text  x="175.13" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="169.9" y="1957" width="0.2" height="15.0" fill="rgb(247,2,25)" rx="2" ry="2" />
<text  x="172.94" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1189.4" y="1877" width="0.2" height="15.0" fill="rgb(214,101,0)" rx="2" ry="2" />
<text  x="1192.40" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1175.8" y="1973" width="0.4" height="15.0" fill="rgb(241,5,43)" rx="2" ry="2" />
<text  x="1178.84" y="1983.5" ></text>
</g>
<g >
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1165.3" y="1941" width="0.2" height="15.0" fill="rgb(222,49,39)" rx="2" ry="2" />
<text  x="1168.27" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1017.1" y="1973" width="0.4" height="15.0" fill="rgb(242,38,16)" rx="2" ry="2" />
<text  x="1020.10" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.15%)</title><rect x="631.8" y="2021" width="13.6" height="15.0" fill="rgb(222,6,12)" rx="2" ry="2" />
<text  x="634.81" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (7 samples, 0.12%)</title><rect x="72.8" y="1957" width="1.4" height="15.0" fill="rgb(249,124,48)" rx="2" ry="2" />
<text  x="75.82" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="970.4" y="1733" width="0.2" height="15.0" fill="rgb(205,222,49)" rx="2" ry="2" />
<text  x="973.43" y="1743.5" ></text>
</g>
<g >
<title>ip_finish_output2 (103 samples, 1.74%)</title><rect x="270.8" y="1749" width="20.6" height="15.0" fill="rgb(222,91,12)" rx="2" ry="2" />
<text  x="273.85" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="640.4" y="1957" width="0.2" height="15.0" fill="rgb(222,102,21)" rx="2" ry="2" />
<text  x="643.38" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (2 samples, 0.03%)</title><rect x="60.3" y="1957" width="0.4" height="15.0" fill="rgb(250,72,12)" rx="2" ry="2" />
<text  x="63.26" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="687.4" y="1845" width="0.8" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="690.45" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1105.0" y="1861" width="0.4" height="15.0" fill="rgb(216,26,6)" rx="2" ry="2" />
<text  x="1108.04" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="599.5" y="1621" width="0.2" height="15.0" fill="rgb(226,129,11)" rx="2" ry="2" />
<text  x="602.50" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="545.5" y="1925" width="0.2" height="15.0" fill="rgb(220,100,49)" rx="2" ry="2" />
<text  x="548.46" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (31 samples, 0.52%)</title><rect x="1174.2" y="2021" width="6.2" height="15.0" fill="rgb(205,92,0)" rx="2" ry="2" />
<text  x="1177.25" y="2031.5" ></text>
</g>
<g >
<title>mutex_lock (4 samples, 0.07%)</title><rect x="482.2" y="1973" width="0.8" height="15.0" fill="rgb(249,75,22)" rx="2" ry="2" />
<text  x="485.24" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="973.2" y="2005" width="0.2" height="15.0" fill="rgb(247,202,47)" rx="2" ry="2" />
<text  x="976.22" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1118.4" y="1717" width="0.2" height="15.0" fill="rgb(218,117,39)" rx="2" ry="2" />
<text  x="1121.41" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9 samples, 0.15%)</title><rect x="995.0" y="1973" width="1.8" height="15.0" fill="rgb(251,34,29)" rx="2" ry="2" />
<text  x="997.96" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1176.0" y="1957" width="0.2" height="15.0" fill="rgb(207,191,28)" rx="2" ry="2" />
<text  x="1179.04" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (3 samples, 0.05%)</title><rect x="746.5" y="1765" width="0.6" height="15.0" fill="rgb(229,182,40)" rx="2" ry="2" />
<text  x="749.48" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (15 samples, 0.25%)</title><rect x="41.1" y="1973" width="3.0" height="15.0" fill="rgb(227,193,6)" rx="2" ry="2" />
<text  x="44.11" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="884.3" y="1893" width="0.4" height="15.0" fill="rgb(222,15,21)" rx="2" ry="2" />
<text  x="887.28" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="132.2" y="1941" width="0.2" height="15.0" fill="rgb(241,40,30)" rx="2" ry="2" />
<text  x="135.25" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="205.0" y="1861" width="0.6" height="15.0" fill="rgb(231,4,18)" rx="2" ry="2" />
<text  x="208.04" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="135.0" y="1925" width="0.2" height="15.0" fill="rgb(223,170,53)" rx="2" ry="2" />
<text  x="138.04" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="493.0" y="1941" width="0.2" height="15.0" fill="rgb(230,153,45)" rx="2" ry="2" />
<text  x="496.01" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="610.7" y="1653" width="0.2" height="15.0" fill="rgb(213,67,52)" rx="2" ry="2" />
<text  x="613.67" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="469.5" y="1813" width="0.2" height="15.0" fill="rgb(218,141,25)" rx="2" ry="2" />
<text  x="472.48" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="54.3" y="1781" width="0.2" height="15.0" fill="rgb(216,76,6)" rx="2" ry="2" />
<text  x="57.27" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="257.3" y="1621" width="0.2" height="15.0" fill="rgb(254,101,0)" rx="2" ry="2" />
<text  x="260.29" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1135.4" y="1909" width="0.2" height="15.0" fill="rgb(217,214,26)" rx="2" ry="2" />
<text  x="1138.36" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="855.2" y="1845" width="0.2" height="15.0" fill="rgb(232,105,28)" rx="2" ry="2" />
<text  x="858.16" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="578.4" y="1781" width="0.2" height="15.0" fill="rgb(249,49,7)" rx="2" ry="2" />
<text  x="581.36" y="1791.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1109.4" y="1445" width="0.2" height="15.0" fill="rgb(231,187,38)" rx="2" ry="2" />
<text  x="1112.43" y="1455.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="785.4" y="1461" width="0.2" height="15.0" fill="rgb(232,204,35)" rx="2" ry="2" />
<text  x="788.37" y="1471.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1017.1" y="1925" width="0.4" height="15.0" fill="rgb(207,81,6)" rx="2" ry="2" />
<text  x="1020.10" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="537.3" y="1957" width="0.2" height="15.0" fill="rgb(205,4,14)" rx="2" ry="2" />
<text  x="540.28" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (36 samples, 0.61%)</title><rect x="607.9" y="1941" width="7.2" height="15.0" fill="rgb(246,134,38)" rx="2" ry="2" />
<text  x="610.88" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="885.1" y="1861" width="0.2" height="15.0" fill="rgb(249,51,51)" rx="2" ry="2" />
<text  x="888.08" y="1871.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (14 samples, 0.24%)</title><rect x="1119.2" y="1957" width="2.8" height="15.0" fill="rgb(209,95,37)" rx="2" ry="2" />
<text  x="1122.20" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.73%)</title><rect x="1156.9" y="1957" width="8.6" height="15.0" fill="rgb(249,59,18)" rx="2" ry="2" />
<text  x="1159.90" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="539.9" y="1925" width="0.2" height="15.0" fill="rgb(237,116,53)" rx="2" ry="2" />
<text  x="542.87" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="766.0" y="1669" width="0.2" height="15.0" fill="rgb(214,84,36)" rx="2" ry="2" />
<text  x="769.02" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="924.8" y="1749" width="0.2" height="15.0" fill="rgb(205,75,26)" rx="2" ry="2" />
<text  x="927.76" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="902.0" y="2021" width="0.6" height="15.0" fill="rgb(232,212,22)" rx="2" ry="2" />
<text  x="905.03" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="113.5" y="1493" width="0.2" height="15.0" fill="rgb(206,176,28)" rx="2" ry="2" />
<text  x="116.50" y="1503.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="619.6" y="2021" width="0.2" height="15.0" fill="rgb(254,193,36)" rx="2" ry="2" />
<text  x="622.64" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="873.7" y="1877" width="0.2" height="15.0" fill="rgb(217,123,36)" rx="2" ry="2" />
<text  x="876.71" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="610.7" y="1493" width="0.2" height="15.0" fill="rgb(205,36,42)" rx="2" ry="2" />
<text  x="613.67" y="1503.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="169.7" y="1957" width="0.2" height="15.0" fill="rgb(224,68,28)" rx="2" ry="2" />
<text  x="172.74" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="706.4" y="1813" width="0.2" height="15.0" fill="rgb(242,115,18)" rx="2" ry="2" />
<text  x="709.39" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="978.6" y="1989" width="0.2" height="15.0" fill="rgb(227,199,33)" rx="2" ry="2" />
<text  x="981.61" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="953.1" y="2005" width="0.2" height="15.0" fill="rgb(215,78,30)" rx="2" ry="2" />
<text  x="956.08" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="62.8" y="1909" width="0.6" height="15.0" fill="rgb(208,114,31)" rx="2" ry="2" />
<text  x="65.85" y="1919.5" ></text>
</g>
<g >
<title>skb_clone (9 samples, 0.15%)</title><rect x="291.8" y="1813" width="1.8" height="15.0" fill="rgb(249,101,40)" rx="2" ry="2" />
<text  x="294.79" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1079.7" y="1749" width="0.2" height="15.0" fill="rgb(225,136,54)" rx="2" ry="2" />
<text  x="1082.72" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (790 samples, 13.35%)</title><rect x="708.4" y="1989" width="157.5" height="15.0" fill="rgb(223,23,42)" rx="2" ry="2" />
<text  x="711.39" y="1999.5" >facebook::memcache::..</text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="63.0" y="1829" width="0.2" height="15.0" fill="rgb(205,58,37)" rx="2" ry="2" />
<text  x="66.05" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="969.6" y="2037" width="0.2" height="15.0" fill="rgb(251,155,26)" rx="2" ry="2" />
<text  x="972.63" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="313.7" y="1829" width="0.2" height="15.0" fill="rgb(219,22,43)" rx="2" ry="2" />
<text  x="316.72" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="47.3" y="1877" width="0.2" height="15.0" fill="rgb(252,43,34)" rx="2" ry="2" />
<text  x="50.29" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="538.3" y="1733" width="0.2" height="15.0" fill="rgb(238,4,12)" rx="2" ry="2" />
<text  x="541.28" y="1743.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="111.1" y="69" width="0.2" height="15.0" fill="rgb(245,175,13)" rx="2" ry="2" />
<text  x="114.11" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="311.3" y="1845" width="0.4" height="15.0" fill="rgb(229,152,11)" rx="2" ry="2" />
<text  x="314.33" y="1855.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="760.6" y="1733" width="0.2" height="15.0" fill="rgb(214,100,36)" rx="2" ry="2" />
<text  x="763.64" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="402.9" y="1717" width="0.2" height="15.0" fill="rgb(250,64,54)" rx="2" ry="2" />
<text  x="405.87" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="924.8" y="1781" width="0.2" height="15.0" fill="rgb(237,226,17)" rx="2" ry="2" />
<text  x="927.76" y="1791.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="971.4" y="1925" width="0.8" height="15.0" fill="rgb(211,207,45)" rx="2" ry="2" />
<text  x="974.43" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (5 samples, 0.08%)</title><rect x="60.9" y="1925" width="1.0" height="15.0" fill="rgb(231,219,21)" rx="2" ry="2" />
<text  x="63.85" y="1935.5" ></text>
</g>
<g >
<title>sys_getsockname (47 samples, 0.79%)</title><rect x="594.1" y="1893" width="9.4" height="15.0" fill="rgb(243,175,14)" rx="2" ry="2" />
<text  x="597.12" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="892.1" y="1941" width="0.2" height="15.0" fill="rgb(226,137,16)" rx="2" ry="2" />
<text  x="895.06" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="147.0" y="1877" width="0.2" height="15.0" fill="rgb(222,206,6)" rx="2" ry="2" />
<text  x="150.01" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="162.4" y="1973" width="1.2" height="15.0" fill="rgb(242,224,46)" rx="2" ry="2" />
<text  x="165.36" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="111.1" y="133" width="0.2" height="15.0" fill="rgb(233,6,21)" rx="2" ry="2" />
<text  x="114.11" y="143.5" ></text>
</g>
<g >
<title>ip_rcv (50 samples, 0.85%)</title><rect x="1106.6" y="1653" width="10.0" height="15.0" fill="rgb(212,227,10)" rx="2" ry="2" />
<text  x="1109.64" y="1663.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="896.6" y="1989" width="0.2" height="15.0" fill="rgb(222,161,11)" rx="2" ry="2" />
<text  x="899.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="157.0" y="2021" width="0.2" height="15.0" fill="rgb(244,52,40)" rx="2" ry="2" />
<text  x="159.98" y="2031.5" ></text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.10%)</title><rect x="251.5" y="1813" width="1.2" height="15.0" fill="rgb(242,163,4)" rx="2" ry="2" />
<text  x="254.50" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="58.1" y="1909" width="0.2" height="15.0" fill="rgb(231,128,23)" rx="2" ry="2" />
<text  x="61.06" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="963.1" y="2005" width="1.0" height="15.0" fill="rgb(224,207,9)" rx="2" ry="2" />
<text  x="966.05" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="884.5" y="1861" width="0.2" height="15.0" fill="rgb(244,105,10)" rx="2" ry="2" />
<text  x="887.48" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="641.2" y="1973" width="0.2" height="15.0" fill="rgb(228,83,28)" rx="2" ry="2" />
<text  x="644.18" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="537.3" y="1541" width="0.2" height="15.0" fill="rgb(206,99,7)" rx="2" ry="2" />
<text  x="540.28" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.7" y="1925" width="0.2" height="15.0" fill="rgb(227,124,4)" rx="2" ry="2" />
<text  x="890.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="533" width="18.5" height="15.0" fill="rgb(229,182,38)" rx="2" ry="2" />
<text  x="96.36" y="543.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="257.3" y="1605" width="0.2" height="15.0" fill="rgb(217,12,50)" rx="2" ry="2" />
<text  x="260.29" y="1615.5" ></text>
</g>
<g >
<title>mcrouter (5,890 samples, 99.54%)</title><rect x="15.4" y="2069" width="1174.6" height="15.0" fill="rgb(219,69,29)" rx="2" ry="2" />
<text  x="18.38" y="2079.5" >mcrouter</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1072.3" y="1797" width="0.2" height="15.0" fill="rgb(235,204,21)" rx="2" ry="2" />
<text  x="1075.34" y="1807.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="469.5" y="1637" width="0.2" height="15.0" fill="rgb(239,49,17)" rx="2" ry="2" />
<text  x="472.48" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (2 samples, 0.03%)</title><rect x="725.5" y="1845" width="0.4" height="15.0" fill="rgb(215,189,52)" rx="2" ry="2" />
<text  x="728.54" y="1855.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6 samples, 0.10%)</title><rect x="1096.3" y="1893" width="1.2" height="15.0" fill="rgb(221,194,16)" rx="2" ry="2" />
<text  x="1099.27" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="111.3" y="197" width="0.2" height="15.0" fill="rgb(246,163,43)" rx="2" ry="2" />
<text  x="114.31" y="207.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="481.2" y="1717" width="0.2" height="15.0" fill="rgb(218,9,35)" rx="2" ry="2" />
<text  x="484.24" y="1727.5" ></text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="748.3" y="1781" width="0.2" height="15.0" fill="rgb(228,78,12)" rx="2" ry="2" />
<text  x="751.27" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="121.3" y="1797" width="0.2" height="15.0" fill="rgb(242,171,8)" rx="2" ry="2" />
<text  x="124.28" y="1807.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (11 samples, 0.19%)</title><rect x="700.2" y="1989" width="2.2" height="15.0" fill="rgb(239,94,23)" rx="2" ry="2" />
<text  x="703.21" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="380.9" y="1861" width="0.6" height="15.0" fill="rgb(213,216,35)" rx="2" ry="2" />
<text  x="383.93" y="1871.5" ></text>
</g>
<g >
<title>security_socket_getpeername (1 samples, 0.02%)</title><rect x="706.6" y="1813" width="0.2" height="15.0" fill="rgb(211,150,25)" rx="2" ry="2" />
<text  x="709.59" y="1823.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="265.5" y="1813" width="0.2" height="15.0" fill="rgb(215,11,43)" rx="2" ry="2" />
<text  x="268.46" y="1823.5" ></text>
</g>
<g >
<title>secure_tcp_seq (1 samples, 0.02%)</title><rect x="482.8" y="1637" width="0.2" height="15.0" fill="rgb(238,186,46)" rx="2" ry="2" />
<text  x="485.84" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="570.8" y="1973" width="0.2" height="15.0" fill="rgb(250,212,3)" rx="2" ry="2" />
<text  x="573.78" y="1983.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (15 samples, 0.25%)</title><rect x="341.4" y="1941" width="3.0" height="15.0" fill="rgb(250,194,30)" rx="2" ry="2" />
<text  x="344.44" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1128.0" y="1893" width="0.2" height="15.0" fill="rgb(243,97,32)" rx="2" ry="2" />
<text  x="1130.98" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="861.5" y="1813" width="0.2" height="15.0" fill="rgb(233,86,8)" rx="2" ry="2" />
<text  x="864.55" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1141" width="18.7" height="15.0" fill="rgb(205,172,19)" rx="2" ry="2" />
<text  x="96.16" y="1151.5" ></text>
</g>
<g >
<title>validate_xmit_skb (11 samples, 0.19%)</title><rect x="807.9" y="1525" width="2.2" height="15.0" fill="rgb(222,103,1)" rx="2" ry="2" />
<text  x="810.90" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (8 samples, 0.14%)</title><rect x="922.6" y="2037" width="1.6" height="15.0" fill="rgb(223,17,6)" rx="2" ry="2" />
<text  x="925.57" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="450.3" y="1861" width="0.4" height="15.0" fill="rgb(242,131,17)" rx="2" ry="2" />
<text  x="453.33" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="150.6" y="2005" width="0.4" height="15.0" fill="rgb(245,189,50)" rx="2" ry="2" />
<text  x="153.59" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="681.9" y="1861" width="0.2" height="15.0" fill="rgb(216,196,38)" rx="2" ry="2" />
<text  x="684.86" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="863.1" y="1861" width="0.2" height="15.0" fill="rgb(236,157,31)" rx="2" ry="2" />
<text  x="866.14" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="545.1" y="1941" width="1.8" height="15.0" fill="rgb(235,53,10)" rx="2" ry="2" />
<text  x="548.06" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="469.5" y="1909" width="0.2" height="15.0" fill="rgb(242,30,16)" rx="2" ry="2" />
<text  x="472.48" y="1919.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="874.3" y="2005" width="0.2" height="15.0" fill="rgb(220,221,51)" rx="2" ry="2" />
<text  x="877.31" y="2015.5" ></text>
</g>
<g >
<title>map_id_range_down (2 samples, 0.03%)</title><rect x="373.4" y="1877" width="0.4" height="15.0" fill="rgb(223,16,44)" rx="2" ry="2" />
<text  x="376.35" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="92.2" y="1957" width="0.2" height="15.0" fill="rgb(206,13,6)" rx="2" ry="2" />
<text  x="95.16" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="516.5" y="1941" width="0.4" height="15.0" fill="rgb(245,167,12)" rx="2" ry="2" />
<text  x="519.54" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (4 samples, 0.07%)</title><rect x="71.2" y="1957" width="0.8" height="15.0" fill="rgb(231,95,1)" rx="2" ry="2" />
<text  x="74.22" y="1967.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="1017.5" y="2037" width="1.2" height="15.0" fill="rgb(222,71,2)" rx="2" ry="2" />
<text  x="1020.50" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="952.7" y="1973" width="0.2" height="15.0" fill="rgb(247,202,18)" rx="2" ry="2" />
<text  x="955.68" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="555.6" y="1973" width="0.2" height="15.0" fill="rgb(225,228,50)" rx="2" ry="2" />
<text  x="558.63" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="884.3" y="1877" width="0.4" height="15.0" fill="rgb(225,42,32)" rx="2" ry="2" />
<text  x="887.28" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="19.8" y="2037" width="0.2" height="15.0" fill="rgb(239,43,4)" rx="2" ry="2" />
<text  x="22.77" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="735.1" y="1701" width="0.4" height="15.0" fill="rgb(245,6,31)" rx="2" ry="2" />
<text  x="738.11" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="450.7" y="1925" width="0.2" height="15.0" fill="rgb(226,138,40)" rx="2" ry="2" />
<text  x="453.73" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.2" y="1797" width="0.2" height="15.0" fill="rgb(229,22,18)" rx="2" ry="2" />
<text  x="844.21" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1128.0" y="1781" width="0.2" height="15.0" fill="rgb(215,92,2)" rx="2" ry="2" />
<text  x="1130.98" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (14 samples, 0.24%)</title><rect x="41.3" y="1957" width="2.8" height="15.0" fill="rgb(226,175,42)" rx="2" ry="2" />
<text  x="44.31" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="880.7" y="1909" width="0.4" height="15.0" fill="rgb(215,214,34)" rx="2" ry="2" />
<text  x="883.69" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="60.9" y="1909" width="1.0" height="15.0" fill="rgb(221,99,14)" rx="2" ry="2" />
<text  x="63.85" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="613.1" y="1813" width="0.2" height="15.0" fill="rgb(206,120,2)" rx="2" ry="2" />
<text  x="616.06" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="108.9" y="69" width="0.2" height="15.0" fill="rgb(243,42,5)" rx="2" ry="2" />
<text  x="111.91" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="81.8" y="1797" width="0.2" height="15.0" fill="rgb(206,68,13)" rx="2" ry="2" />
<text  x="84.79" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="253.5" y="1813" width="0.2" height="15.0" fill="rgb(240,111,6)" rx="2" ry="2" />
<text  x="256.50" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="212.2" y="1717" width="0.2" height="15.0" fill="rgb(243,56,31)" rx="2" ry="2" />
<text  x="215.22" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="77.4" y="1909" width="0.4" height="15.0" fill="rgb(228,212,9)" rx="2" ry="2" />
<text  x="80.41" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (6 samples, 0.10%)</title><rect x="578.4" y="2005" width="1.2" height="15.0" fill="rgb(223,212,10)" rx="2" ry="2" />
<text  x="581.36" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="725.9" y="1845" width="0.2" height="15.0" fill="rgb(210,25,12)" rx="2" ry="2" />
<text  x="728.94" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1152.7" y="1989" width="0.2" height="15.0" fill="rgb(231,90,50)" rx="2" ry="2" />
<text  x="1155.71" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="350.8" y="1541" width="0.2" height="15.0" fill="rgb(208,215,26)" rx="2" ry="2" />
<text  x="353.82" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1079.5" y="1829" width="0.2" height="15.0" fill="rgb(238,83,38)" rx="2" ry="2" />
<text  x="1082.52" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="147.8" y="1925" width="0.2" height="15.0" fill="rgb(248,42,20)" rx="2" ry="2" />
<text  x="150.80" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::ScopeGuardImplBase (2 samples, 0.03%)</title><rect x="148.4" y="1877" width="0.4" height="15.0" fill="rgb(232,34,41)" rx="2" ry="2" />
<text  x="151.40" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (21 samples, 0.35%)</title><rect x="208.8" y="1893" width="4.2" height="15.0" fill="rgb(222,77,4)" rx="2" ry="2" />
<text  x="211.83" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1118.4" y="1733" width="0.2" height="15.0" fill="rgb(224,194,21)" rx="2" ry="2" />
<text  x="1121.41" y="1743.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1117.2" y="1861" width="0.2" height="15.0" fill="rgb(233,115,21)" rx="2" ry="2" />
<text  x="1120.21" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1049.6" y="1653" width="0.2" height="15.0" fill="rgb(233,75,44)" rx="2" ry="2" />
<text  x="1052.60" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="111.3" y="213" width="0.2" height="15.0" fill="rgb(238,199,11)" rx="2" ry="2" />
<text  x="114.31" y="223.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11 samples, 0.19%)</title><rect x="273.6" y="1637" width="2.2" height="15.0" fill="rgb(209,201,21)" rx="2" ry="2" />
<text  x="276.64" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="894.3" y="1893" width="0.2" height="15.0" fill="rgb(253,140,43)" rx="2" ry="2" />
<text  x="897.25" y="1903.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="669.1" y="1909" width="0.2" height="15.0" fill="rgb(227,217,25)" rx="2" ry="2" />
<text  x="672.10" y="1919.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="379.7" y="1589" width="0.2" height="15.0" fill="rgb(206,210,14)" rx="2" ry="2" />
<text  x="382.73" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1121.8" y="1813" width="0.2" height="15.0" fill="rgb(226,218,52)" rx="2" ry="2" />
<text  x="1124.80" y="1823.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="10.2" y="1893" width="1.0" height="15.0" fill="rgb(227,14,26)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="835.0" y="1461" width="0.2" height="15.0" fill="rgb(228,91,17)" rx="2" ry="2" />
<text  x="838.02" y="1471.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="697.2" y="1973" width="0.6" height="15.0" fill="rgb(241,171,44)" rx="2" ry="2" />
<text  x="700.22" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="26.8" y="1957" width="2.1" height="15.0" fill="rgb(250,6,28)" rx="2" ry="2" />
<text  x="29.75" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="970.4" y="1989" width="0.2" height="15.0" fill="rgb(224,224,40)" rx="2" ry="2" />
<text  x="973.43" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="290.6" y="1669" width="0.6" height="15.0" fill="rgb(233,29,20)" rx="2" ry="2" />
<text  x="293.59" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="908.2" y="1989" width="2.2" height="15.0" fill="rgb(249,194,39)" rx="2" ry="2" />
<text  x="911.21" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="971.4" y="1941" width="0.8" height="15.0" fill="rgb(222,214,40)" rx="2" ry="2" />
<text  x="974.43" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="29.3" y="1845" width="0.2" height="15.0" fill="rgb(241,125,44)" rx="2" ry="2" />
<text  x="32.34" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="643.4" y="1957" width="0.2" height="15.0" fill="rgb(244,79,19)" rx="2" ry="2" />
<text  x="646.38" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="818.1" y="1621" width="0.2" height="15.0" fill="rgb(234,34,32)" rx="2" ry="2" />
<text  x="821.07" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1079.7" y="1589" width="0.2" height="15.0" fill="rgb(245,63,32)" rx="2" ry="2" />
<text  x="1082.72" y="1599.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="1477" width="0.2" height="15.0" fill="rgb(213,137,7)" rx="2" ry="2" />
<text  x="1153.71" y="1487.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="898.6" y="1957" width="0.2" height="15.0" fill="rgb(237,41,29)" rx="2" ry="2" />
<text  x="901.64" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="53.1" y="1909" width="0.2" height="15.0" fill="rgb(249,118,12)" rx="2" ry="2" />
<text  x="56.08" y="1919.5" ></text>
</g>
<g >
<title>__skb_clone (13 samples, 0.22%)</title><rect x="810.9" y="1653" width="2.6" height="15.0" fill="rgb(217,79,45)" rx="2" ry="2" />
<text  x="813.89" y="1663.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="631.6" y="1957" width="0.2" height="15.0" fill="rgb(251,170,49)" rx="2" ry="2" />
<text  x="634.61" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="211.0" y="1829" width="0.4" height="15.0" fill="rgb(211,65,14)" rx="2" ry="2" />
<text  x="214.02" y="1839.5" ></text>
</g>
<g >
<title>fput (5 samples, 0.08%)</title><rect x="475.3" y="1973" width="1.0" height="15.0" fill="rgb(222,24,53)" rx="2" ry="2" />
<text  x="478.26" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (6 samples, 0.10%)</title><rect x="1153.3" y="2053" width="1.2" height="15.0" fill="rgb(237,211,53)" rx="2" ry="2" />
<text  x="1156.31" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="111.7" y="309" width="0.2" height="15.0" fill="rgb(230,11,32)" rx="2" ry="2" />
<text  x="114.71" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="111.3" y="325" width="0.2" height="15.0" fill="rgb(240,2,15)" rx="2" ry="2" />
<text  x="114.31" y="335.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="631.8" y="1989" width="0.4" height="15.0" fill="rgb(242,100,42)" rx="2" ry="2" />
<text  x="634.81" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="120.5" y="1941" width="0.8" height="15.0" fill="rgb(214,55,17)" rx="2" ry="2" />
<text  x="123.48" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="207.0" y="1893" width="1.6" height="15.0" fill="rgb(222,118,48)" rx="2" ry="2" />
<text  x="210.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="925.2" y="2005" width="0.2" height="15.0" fill="rgb(250,113,48)" rx="2" ry="2" />
<text  x="928.16" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="81.8" y="1701" width="0.2" height="15.0" fill="rgb(246,10,22)" rx="2" ry="2" />
<text  x="84.79" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (4 samples, 0.07%)</title><rect x="69.8" y="1941" width="0.8" height="15.0" fill="rgb(222,135,5)" rx="2" ry="2" />
<text  x="72.83" y="1951.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (13 samples, 0.22%)</title><rect x="11.4" y="1957" width="2.6" height="15.0" fill="rgb(231,100,37)" rx="2" ry="2" />
<text  x="14.40" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="313.7" y="1845" width="0.2" height="15.0" fill="rgb(254,158,38)" rx="2" ry="2" />
<text  x="316.72" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="578.4" y="1797" width="0.2" height="15.0" fill="rgb(248,166,2)" rx="2" ry="2" />
<text  x="581.36" y="1807.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="51.5" y="1909" width="0.2" height="15.0" fill="rgb(206,69,52)" rx="2" ry="2" />
<text  x="54.48" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="149.6" y="1877" width="0.2" height="15.0" fill="rgb(228,96,8)" rx="2" ry="2" />
<text  x="152.60" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="935.3" y="1861" width="0.4" height="15.0" fill="rgb(242,17,8)" rx="2" ry="2" />
<text  x="938.33" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="289.4" y="1637" width="0.2" height="15.0" fill="rgb(250,100,17)" rx="2" ry="2" />
<text  x="292.39" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (6 samples, 0.10%)</title><rect x="1150.1" y="1989" width="1.2" height="15.0" fill="rgb(246,122,54)" rx="2" ry="2" />
<text  x="1153.11" y="1999.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (2 samples, 0.03%)</title><rect x="29.7" y="1989" width="0.4" height="15.0" fill="rgb(214,190,14)" rx="2" ry="2" />
<text  x="32.74" y="1999.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="759.6" y="1733" width="1.0" height="15.0" fill="rgb(215,47,14)" rx="2" ry="2" />
<text  x="762.64" y="1743.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="1117.0" y="1685" width="0.2" height="15.0" fill="rgb(222,136,39)" rx="2" ry="2" />
<text  x="1120.01" y="1695.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="599.5" y="1557" width="0.2" height="15.0" fill="rgb(215,80,8)" rx="2" ry="2" />
<text  x="602.50" y="1567.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="782.2" y="1621" width="0.2" height="15.0" fill="rgb(232,108,49)" rx="2" ry="2" />
<text  x="785.18" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="93.4" y="149" width="17.5" height="15.0" fill="rgb(222,221,15)" rx="2" ry="2" />
<text  x="96.36" y="159.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="111.3" y="261" width="0.2" height="15.0" fill="rgb(234,8,39)" rx="2" ry="2" />
<text  x="114.31" y="271.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="997.8" y="1813" width="0.2" height="15.0" fill="rgb(210,139,29)" rx="2" ry="2" />
<text  x="1000.75" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (17 samples, 0.29%)</title><rect x="890.5" y="1957" width="3.4" height="15.0" fill="rgb(211,147,53)" rx="2" ry="2" />
<text  x="893.46" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="570.8" y="1925" width="0.2" height="15.0" fill="rgb(228,11,48)" rx="2" ry="2" />
<text  x="573.78" y="1935.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="481.4" y="1765" width="0.2" height="15.0" fill="rgb(248,29,32)" rx="2" ry="2" />
<text  x="484.44" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="669.3" y="1861" width="0.6" height="15.0" fill="rgb(219,221,40)" rx="2" ry="2" />
<text  x="672.30" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="75.8" y="1925" width="0.4" height="15.0" fill="rgb(242,51,1)" rx="2" ry="2" />
<text  x="78.81" y="1935.5" ></text>
</g>
<g >
<title>ep_send_events_proc (79 samples, 1.34%)</title><rect x="493.2" y="1941" width="15.8" height="15.0" fill="rgb(254,188,33)" rx="2" ry="2" />
<text  x="496.21" y="1951.5" ></text>
</g>
<g >
<title>netif_skb_features (6 samples, 0.10%)</title><rect x="808.3" y="1509" width="1.2" height="15.0" fill="rgb(245,89,45)" rx="2" ry="2" />
<text  x="811.30" y="1519.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (2 samples, 0.03%)</title><rect x="580.6" y="2021" width="0.4" height="15.0" fill="rgb(210,188,23)" rx="2" ry="2" />
<text  x="583.56" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1079.7" y="1797" width="0.2" height="15.0" fill="rgb(224,197,6)" rx="2" ry="2" />
<text  x="1082.72" y="1807.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (60 samples, 1.01%)</title><rect x="1105.4" y="1893" width="12.0" height="15.0" fill="rgb(209,220,42)" rx="2" ry="2" />
<text  x="1108.44" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="111.7" y="149" width="0.2" height="15.0" fill="rgb(251,47,53)" rx="2" ry="2" />
<text  x="114.71" y="159.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1072.3" y="1877" width="0.2" height="15.0" fill="rgb(241,225,52)" rx="2" ry="2" />
<text  x="1075.34" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="578.2" y="1989" width="0.2" height="15.0" fill="rgb(237,204,41)" rx="2" ry="2" />
<text  x="581.16" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (6 samples, 0.10%)</title><rect x="649.2" y="1973" width="1.2" height="15.0" fill="rgb(221,45,36)" rx="2" ry="2" />
<text  x="652.16" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="989.6" y="1893" width="0.2" height="15.0" fill="rgb(242,135,41)" rx="2" ry="2" />
<text  x="992.58" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="835.0" y="1429" width="0.2" height="15.0" fill="rgb(223,170,29)" rx="2" ry="2" />
<text  x="838.02" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="880.7" y="1925" width="0.4" height="15.0" fill="rgb(238,214,25)" rx="2" ry="2" />
<text  x="883.69" y="1935.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="29.3" y="1733" width="0.2" height="15.0" fill="rgb(223,31,51)" rx="2" ry="2" />
<text  x="32.34" y="1743.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="899.2" y="1861" width="0.2" height="15.0" fill="rgb(247,224,2)" rx="2" ry="2" />
<text  x="902.24" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="29.3" y="1781" width="0.2" height="15.0" fill="rgb(208,210,27)" rx="2" ry="2" />
<text  x="32.34" y="1791.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (5 samples, 0.08%)</title><rect x="274.4" y="1477" width="1.0" height="15.0" fill="rgb(222,6,6)" rx="2" ry="2" />
<text  x="277.44" y="1487.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="339.1" y="1957" width="0.2" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="342.05" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="810.5" y="1461" width="0.2" height="15.0" fill="rgb(253,122,49)" rx="2" ry="2" />
<text  x="813.49" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="402.7" y="1893" width="0.2" height="15.0" fill="rgb(208,64,34)" rx="2" ry="2" />
<text  x="405.67" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="818.1" y="1589" width="0.2" height="15.0" fill="rgb(234,63,9)" rx="2" ry="2" />
<text  x="821.07" y="1599.5" ></text>
</g>
<g >
<title>__GI___getpeername (18 samples, 0.30%)</title><rect x="704.8" y="1893" width="3.6" height="15.0" fill="rgb(212,167,5)" rx="2" ry="2" />
<text  x="707.80" y="1903.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="450.3" y="1653" width="0.2" height="15.0" fill="rgb(211,100,40)" rx="2" ry="2" />
<text  x="453.33" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="484.6" y="1909" width="0.2" height="15.0" fill="rgb(227,196,46)" rx="2" ry="2" />
<text  x="487.63" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="551.2" y="1941" width="0.4" height="15.0" fill="rgb(214,224,25)" rx="2" ry="2" />
<text  x="554.24" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="747.9" y="1573" width="0.4" height="15.0" fill="rgb(218,34,13)" rx="2" ry="2" />
<text  x="750.87" y="1583.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (15 samples, 0.25%)</title><rect x="394.7" y="1909" width="3.0" height="15.0" fill="rgb(231,29,40)" rx="2" ry="2" />
<text  x="397.69" y="1919.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="118.7" y="2005" width="0.2" height="15.0" fill="rgb(245,109,36)" rx="2" ry="2" />
<text  x="121.69" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="74.8" y="1925" width="0.6" height="15.0" fill="rgb(219,153,36)" rx="2" ry="2" />
<text  x="77.81" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (5 samples, 0.08%)</title><rect x="907.2" y="2037" width="1.0" height="15.0" fill="rgb(232,73,17)" rx="2" ry="2" />
<text  x="910.21" y="2047.5" ></text>
</g>
<g >
<title>sys_sendmsg (4 samples, 0.07%)</title><rect x="315.3" y="2005" width="0.8" height="15.0" fill="rgb(239,26,11)" rx="2" ry="2" />
<text  x="318.32" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="194.3" y="2021" width="0.2" height="15.0" fill="rgb(212,5,4)" rx="2" ry="2" />
<text  x="197.27" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="211.0" y="1845" width="0.4" height="15.0" fill="rgb(235,77,41)" rx="2" ry="2" />
<text  x="214.02" y="1855.5" ></text>
</g>
<g >
<title>destroy_inode (27 samples, 0.46%)</title><rect x="737.9" y="1701" width="5.4" height="15.0" fill="rgb(245,138,51)" rx="2" ry="2" />
<text  x="740.90" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (21 samples, 0.35%)</title><rect x="1175.0" y="2005" width="4.2" height="15.0" fill="rgb(221,168,8)" rx="2" ry="2" />
<text  x="1178.04" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="862.9" y="1829" width="0.2" height="15.0" fill="rgb(229,116,32)" rx="2" ry="2" />
<text  x="865.94" y="1839.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="584.7" y="1893" width="0.2" height="15.0" fill="rgb(212,0,36)" rx="2" ry="2" />
<text  x="587.74" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="949.3" y="1989" width="0.2" height="15.0" fill="rgb(210,115,2)" rx="2" ry="2" />
<text  x="952.29" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="156.6" y="1877" width="0.2" height="15.0" fill="rgb(240,105,37)" rx="2" ry="2" />
<text  x="159.58" y="1887.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="178.1" y="2021" width="0.2" height="15.0" fill="rgb(220,59,44)" rx="2" ry="2" />
<text  x="181.12" y="2031.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="726.1" y="1781" width="0.8" height="15.0" fill="rgb(230,118,50)" rx="2" ry="2" />
<text  x="729.14" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="929.2" y="1893" width="0.2" height="15.0" fill="rgb(218,222,44)" rx="2" ry="2" />
<text  x="932.15" y="1903.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="293.6" y="1813" width="0.2" height="15.0" fill="rgb(205,4,37)" rx="2" ry="2" />
<text  x="296.58" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.15%)</title><rect x="749.9" y="1781" width="1.8" height="15.0" fill="rgb(218,115,26)" rx="2" ry="2" />
<text  x="752.87" y="1791.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (4 samples, 0.07%)</title><rect x="521.1" y="1957" width="0.8" height="15.0" fill="rgb(213,99,21)" rx="2" ry="2" />
<text  x="524.13" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1180.2" y="2005" width="0.2" height="15.0" fill="rgb(227,140,5)" rx="2" ry="2" />
<text  x="1183.23" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1134.6" y="2021" width="0.2" height="15.0" fill="rgb(250,197,50)" rx="2" ry="2" />
<text  x="1137.56" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="111.1" y="149" width="0.2" height="15.0" fill="rgb(229,142,1)" rx="2" ry="2" />
<text  x="114.11" y="159.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (3 samples, 0.05%)</title><rect x="738.5" y="1653" width="0.6" height="15.0" fill="rgb(216,177,17)" rx="2" ry="2" />
<text  x="741.50" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="536.3" y="1957" width="1.0" height="15.0" fill="rgb(243,114,31)" rx="2" ry="2" />
<text  x="539.28" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (7 samples, 0.12%)</title><rect x="377.3" y="1877" width="1.4" height="15.0" fill="rgb(216,0,48)" rx="2" ry="2" />
<text  x="380.34" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="669.3" y="1797" width="0.6" height="15.0" fill="rgb(215,18,46)" rx="2" ry="2" />
<text  x="672.30" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1147.1" y="1989" width="0.2" height="15.0" fill="rgb(253,60,32)" rx="2" ry="2" />
<text  x="1150.12" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="274.6" y="1365" width="0.4" height="15.0" fill="rgb(214,205,5)" rx="2" ry="2" />
<text  x="277.64" y="1375.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1128.0" y="1701" width="0.2" height="15.0" fill="rgb(223,89,16)" rx="2" ry="2" />
<text  x="1130.98" y="1711.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1182.0" y="2053" width="0.2" height="15.0" fill="rgb(216,214,21)" rx="2" ry="2" />
<text  x="1185.02" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="56.7" y="1797" width="0.2" height="15.0" fill="rgb(244,222,13)" rx="2" ry="2" />
<text  x="59.67" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="924.8" y="1829" width="0.2" height="15.0" fill="rgb(217,39,26)" rx="2" ry="2" />
<text  x="927.76" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (66 samples, 1.12%)</title><rect x="202.4" y="1941" width="13.2" height="15.0" fill="rgb(235,123,46)" rx="2" ry="2" />
<text  x="205.45" y="1951.5" ></text>
</g>
<g >
<title>event_base_set@plt (1 samples, 0.02%)</title><rect x="538.9" y="1957" width="0.2" height="15.0" fill="rgb(207,23,32)" rx="2" ry="2" />
<text  x="541.88" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="645" width="18.5" height="15.0" fill="rgb(232,168,53)" rx="2" ry="2" />
<text  x="96.36" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="111.3" y="293" width="0.2" height="15.0" fill="rgb(205,67,31)" rx="2" ry="2" />
<text  x="114.31" y="303.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1090.7" y="1733" width="0.2" height="15.0" fill="rgb(231,88,48)" rx="2" ry="2" />
<text  x="1093.69" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="655.7" y="2005" width="0.2" height="15.0" fill="rgb(226,84,39)" rx="2" ry="2" />
<text  x="658.74" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="255.1" y="1669" width="0.2" height="15.0" fill="rgb(252,1,8)" rx="2" ry="2" />
<text  x="258.09" y="1679.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1008.1" y="1989" width="0.2" height="15.0" fill="rgb(225,190,52)" rx="2" ry="2" />
<text  x="1011.12" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="909.8" y="1861" width="0.2" height="15.0" fill="rgb(216,193,52)" rx="2" ry="2" />
<text  x="912.81" y="1871.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (6 samples, 0.10%)</title><rect x="507.6" y="1893" width="1.2" height="15.0" fill="rgb(220,210,49)" rx="2" ry="2" />
<text  x="510.57" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="841.0" y="1477" width="0.2" height="15.0" fill="rgb(219,90,2)" rx="2" ry="2" />
<text  x="844.01" y="1487.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="889.3" y="1941" width="1.0" height="15.0" fill="rgb(240,60,45)" rx="2" ry="2" />
<text  x="892.27" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (13 samples, 0.22%)</title><rect x="821.5" y="1605" width="2.6" height="15.0" fill="rgb(210,228,50)" rx="2" ry="2" />
<text  x="824.46" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="924.8" y="1813" width="0.2" height="15.0" fill="rgb(212,70,18)" rx="2" ry="2" />
<text  x="927.76" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="988.2" y="1861" width="0.2" height="15.0" fill="rgb(224,172,54)" rx="2" ry="2" />
<text  x="991.18" y="1871.5" ></text>
</g>
<g >
<title>inet_reqsk_alloc (1 samples, 0.02%)</title><rect x="1079.7" y="1541" width="0.2" height="15.0" fill="rgb(230,201,51)" rx="2" ry="2" />
<text  x="1082.72" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="536.1" y="1941" width="0.2" height="15.0" fill="rgb(244,201,37)" rx="2" ry="2" />
<text  x="539.08" y="1951.5" ></text>
</g>
<g >
<title>__libc_recv (8 samples, 0.14%)</title><rect x="960.5" y="1973" width="1.6" height="15.0" fill="rgb(211,127,15)" rx="2" ry="2" />
<text  x="963.46" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="87.0" y="1861" width="0.2" height="15.0" fill="rgb(217,157,45)" rx="2" ry="2" />
<text  x="89.98" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1189.4" y="1829" width="0.2" height="15.0" fill="rgb(216,190,12)" rx="2" ry="2" />
<text  x="1192.40" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="851.8" y="1765" width="0.2" height="15.0" fill="rgb(215,50,49)" rx="2" ry="2" />
<text  x="854.77" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="165.8" y="1941" width="0.2" height="15.0" fill="rgb(215,87,30)" rx="2" ry="2" />
<text  x="168.75" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="851.8" y="1909" width="0.2" height="15.0" fill="rgb(245,54,21)" rx="2" ry="2" />
<text  x="854.77" y="1919.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="350.8" y="1557" width="0.2" height="15.0" fill="rgb(241,145,31)" rx="2" ry="2" />
<text  x="353.82" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="673.5" y="1829" width="0.2" height="15.0" fill="rgb(232,67,5)" rx="2" ry="2" />
<text  x="676.49" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="153.2" y="2005" width="0.2" height="15.0" fill="rgb(222,90,6)" rx="2" ry="2" />
<text  x="156.19" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="173.1" y="1973" width="0.2" height="15.0" fill="rgb(248,11,3)" rx="2" ry="2" />
<text  x="176.13" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="77.6" y="1877" width="0.2" height="15.0" fill="rgb(254,43,24)" rx="2" ry="2" />
<text  x="80.61" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="54.3" y="1877" width="0.2" height="15.0" fill="rgb(234,1,51)" rx="2" ry="2" />
<text  x="57.27" y="1887.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="899.2" y="1877" width="0.2" height="15.0" fill="rgb(216,43,14)" rx="2" ry="2" />
<text  x="902.24" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="635.8" y="1941" width="0.2" height="15.0" fill="rgb(244,2,2)" rx="2" ry="2" />
<text  x="638.80" y="1951.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="373.2" y="1893" width="0.2" height="15.0" fill="rgb(251,176,29)" rx="2" ry="2" />
<text  x="376.15" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="165.8" y="1957" width="0.2" height="15.0" fill="rgb(233,151,23)" rx="2" ry="2" />
<text  x="168.75" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="851.2" y="1909" width="0.2" height="15.0" fill="rgb(242,102,8)" rx="2" ry="2" />
<text  x="854.18" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="77.6" y="1685" width="0.2" height="15.0" fill="rgb(252,25,20)" rx="2" ry="2" />
<text  x="80.61" y="1695.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (10 samples, 0.17%)</title><rect x="311.9" y="1893" width="2.0" height="15.0" fill="rgb(216,16,3)" rx="2" ry="2" />
<text  x="314.93" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.94%)</title><rect x="93.0" y="1813" width="22.9" height="15.0" fill="rgb(245,197,19)" rx="2" ry="2" />
<text  x="95.96" y="1823.5" >[..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="760.2" y="1717" width="0.2" height="15.0" fill="rgb(239,80,5)" rx="2" ry="2" />
<text  x="763.24" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="673.5" y="1893" width="0.2" height="15.0" fill="rgb(210,136,40)" rx="2" ry="2" />
<text  x="676.49" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (112 samples, 1.89%)</title><rect x="269.1" y="1765" width="22.3" height="15.0" fill="rgb(223,4,24)" rx="2" ry="2" />
<text  x="272.05" y="1775.5" >i..</text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="599.5" y="1541" width="0.2" height="15.0" fill="rgb(219,64,52)" rx="2" ry="2" />
<text  x="602.50" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="111.5" y="197" width="0.2" height="15.0" fill="rgb(224,224,19)" rx="2" ry="2" />
<text  x="114.51" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="273.4" y="1605" width="0.2" height="15.0" fill="rgb(249,65,0)" rx="2" ry="2" />
<text  x="276.44" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (88 samples, 1.49%)</title><rect x="131.6" y="1957" width="17.6" height="15.0" fill="rgb(219,218,30)" rx="2" ry="2" />
<text  x="134.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="469.5" y="1669" width="0.2" height="15.0" fill="rgb(216,21,28)" rx="2" ry="2" />
<text  x="472.48" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="350.8" y="1797" width="0.2" height="15.0" fill="rgb(207,90,30)" rx="2" ry="2" />
<text  x="353.82" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1149.5" y="1957" width="0.2" height="15.0" fill="rgb(226,70,34)" rx="2" ry="2" />
<text  x="1152.52" y="1967.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="209.2" y="1877" width="0.2" height="15.0" fill="rgb(249,170,5)" rx="2" ry="2" />
<text  x="212.23" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="210.8" y="1813" width="0.2" height="15.0" fill="rgb(252,121,50)" rx="2" ry="2" />
<text  x="213.82" y="1823.5" ></text>
</g>
<g >
<title>__dentry_kill (74 samples, 1.25%)</title><rect x="731.5" y="1765" width="14.8" height="15.0" fill="rgb(227,59,31)" rx="2" ry="2" />
<text  x="734.52" y="1775.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.02%)</title><rect x="322.9" y="1893" width="0.2" height="15.0" fill="rgb(245,122,32)" rx="2" ry="2" />
<text  x="325.90" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="211.8" y="1845" width="1.0" height="15.0" fill="rgb(253,10,32)" rx="2" ry="2" />
<text  x="214.82" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="99.5" y="37" width="0.4" height="15.0" fill="rgb(236,160,46)" rx="2" ry="2" />
<text  x="102.54" y="47.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1152.1" y="2005" width="0.2" height="15.0" fill="rgb(224,191,52)" rx="2" ry="2" />
<text  x="1155.11" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.5" y="1861" width="0.2" height="15.0" fill="rgb(238,7,53)" rx="2" ry="2" />
<text  x="543.47" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="725.9" y="1621" width="0.2" height="15.0" fill="rgb(236,91,3)" rx="2" ry="2" />
<text  x="728.94" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="624.6" y="2005" width="0.4" height="15.0" fill="rgb(249,220,23)" rx="2" ry="2" />
<text  x="627.63" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (12 samples, 0.20%)</title><rect x="534.9" y="1989" width="2.4" height="15.0" fill="rgb(239,27,29)" rx="2" ry="2" />
<text  x="537.89" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="136.0" y="1861" width="0.2" height="15.0" fill="rgb(215,33,41)" rx="2" ry="2" />
<text  x="139.04" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="177.9" y="1877" width="0.2" height="15.0" fill="rgb(222,229,19)" rx="2" ry="2" />
<text  x="180.92" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (3 samples, 0.05%)</title><rect x="1150.3" y="1973" width="0.6" height="15.0" fill="rgb(216,190,6)" rx="2" ry="2" />
<text  x="1153.31" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.5" y="1973" width="0.2" height="15.0" fill="rgb(233,214,2)" rx="2" ry="2" />
<text  x="1002.55" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="110.7" y="85" width="0.2" height="15.0" fill="rgb(216,217,8)" rx="2" ry="2" />
<text  x="113.71" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="128.9" y="2005" width="0.4" height="15.0" fill="rgb(234,112,1)" rx="2" ry="2" />
<text  x="131.86" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1178.6" y="1989" width="0.4" height="15.0" fill="rgb(250,170,51)" rx="2" ry="2" />
<text  x="1181.63" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="846.2" y="1717" width="0.6" height="15.0" fill="rgb(216,149,8)" rx="2" ry="2" />
<text  x="849.19" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1079.5" y="1749" width="0.2" height="15.0" fill="rgb(251,189,27)" rx="2" ry="2" />
<text  x="1082.52" y="1759.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="512.4" y="1957" width="0.9" height="15.0" fill="rgb(237,185,41)" rx="2" ry="2" />
<text  x="515.35" y="1967.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="924.8" y="1717" width="0.2" height="15.0" fill="rgb(215,157,11)" rx="2" ry="2" />
<text  x="927.76" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1118.4" y="1829" width="0.2" height="15.0" fill="rgb(231,203,24)" rx="2" ry="2" />
<text  x="1121.41" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="853.4" y="1893" width="0.6" height="15.0" fill="rgb(208,147,30)" rx="2" ry="2" />
<text  x="856.37" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1183.8" y="2005" width="0.2" height="15.0" fill="rgb(219,227,12)" rx="2" ry="2" />
<text  x="1186.82" y="2015.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (39 samples, 0.66%)</title><rect x="816.3" y="1685" width="7.8" height="15.0" fill="rgb(231,11,49)" rx="2" ry="2" />
<text  x="819.28" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="396.9" y="1845" width="0.2" height="15.0" fill="rgb(207,139,14)" rx="2" ry="2" />
<text  x="399.89" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="257.3" y="1829" width="0.2" height="15.0" fill="rgb(249,161,27)" rx="2" ry="2" />
<text  x="260.29" y="1839.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="26.0" y="1957" width="0.2" height="15.0" fill="rgb(231,101,7)" rx="2" ry="2" />
<text  x="28.95" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="111.7" y="357" width="0.2" height="15.0" fill="rgb(241,50,14)" rx="2" ry="2" />
<text  x="114.71" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="473.1" y="1925" width="0.2" height="15.0" fill="rgb(234,185,15)" rx="2" ry="2" />
<text  x="476.07" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="715.8" y="1893" width="0.2" height="15.0" fill="rgb(250,228,36)" rx="2" ry="2" />
<text  x="718.77" y="1903.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="241.3" y="1877" width="0.2" height="15.0" fill="rgb(239,103,12)" rx="2" ry="2" />
<text  x="244.33" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="77.0" y="1893" width="0.2" height="15.0" fill="rgb(249,198,19)" rx="2" ry="2" />
<text  x="80.01" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1153.1" y="2021" width="0.2" height="15.0" fill="rgb(238,47,22)" rx="2" ry="2" />
<text  x="1156.11" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="972.4" y="1829" width="0.2" height="15.0" fill="rgb(205,152,23)" rx="2" ry="2" />
<text  x="975.43" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="571.6" y="1989" width="0.4" height="15.0" fill="rgb(220,55,47)" rx="2" ry="2" />
<text  x="574.58" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="666.9" y="1861" width="0.4" height="15.0" fill="rgb(229,102,32)" rx="2" ry="2" />
<text  x="669.91" y="1871.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="889.7" y="1925" width="0.4" height="15.0" fill="rgb(214,162,31)" rx="2" ry="2" />
<text  x="892.67" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="810.3" y="1525" width="0.2" height="15.0" fill="rgb(225,86,40)" rx="2" ry="2" />
<text  x="813.29" y="1535.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1146.7" y="2005" width="0.4" height="15.0" fill="rgb(231,156,24)" rx="2" ry="2" />
<text  x="1149.72" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="775.8" y="1669" width="0.2" height="15.0" fill="rgb(230,122,43)" rx="2" ry="2" />
<text  x="778.79" y="1679.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="366.6" y="1909" width="0.2" height="15.0" fill="rgb(253,163,0)" rx="2" ry="2" />
<text  x="369.57" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1189.4" y="1941" width="0.2" height="15.0" fill="rgb(253,157,34)" rx="2" ry="2" />
<text  x="1192.40" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="350.8" y="1861" width="0.2" height="15.0" fill="rgb(245,17,38)" rx="2" ry="2" />
<text  x="353.82" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="729.1" y="1781" width="0.2" height="15.0" fill="rgb(238,152,32)" rx="2" ry="2" />
<text  x="732.13" y="1791.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (15 samples, 0.25%)</title><rect x="763.8" y="1701" width="3.0" height="15.0" fill="rgb(226,101,11)" rx="2" ry="2" />
<text  x="766.83" y="1711.5" ></text>
</g>
<g >
<title>__slab_alloc (8 samples, 0.14%)</title><rect x="375.5" y="1877" width="1.6" height="15.0" fill="rgb(247,30,5)" rx="2" ry="2" />
<text  x="378.55" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (121 samples, 2.04%)</title><rect x="786.0" y="1589" width="24.1" height="15.0" fill="rgb(209,195,0)" rx="2" ry="2" />
<text  x="788.96" y="1599.5" >d..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (29 samples, 0.49%)</title><rect x="517.7" y="1989" width="5.8" height="15.0" fill="rgb(247,4,51)" rx="2" ry="2" />
<text  x="520.74" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (69 samples, 1.17%)</title><rect x="659.5" y="2021" width="13.8" height="15.0" fill="rgb(216,148,18)" rx="2" ry="2" />
<text  x="662.53" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (23 samples, 0.39%)</title><rect x="1109.6" y="1493" width="4.6" height="15.0" fill="rgb(215,222,38)" rx="2" ry="2" />
<text  x="1112.63" y="1503.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (31 samples, 0.52%)</title><rect x="683.7" y="1925" width="6.1" height="15.0" fill="rgb(213,159,3)" rx="2" ry="2" />
<text  x="686.66" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="110.1" y="101" width="0.2" height="15.0" fill="rgb(227,182,35)" rx="2" ry="2" />
<text  x="113.11" y="111.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="259.9" y="1845" width="0.4" height="15.0" fill="rgb(209,16,48)" rx="2" ry="2" />
<text  x="262.88" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="705.0" y="1877" width="0.2" height="15.0" fill="rgb(215,152,54)" rx="2" ry="2" />
<text  x="708.00" y="1887.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="253.5" y="1829" width="0.2" height="15.0" fill="rgb(224,113,53)" rx="2" ry="2" />
<text  x="256.50" y="1839.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="835.0" y="1285" width="0.2" height="15.0" fill="rgb(250,21,1)" rx="2" ry="2" />
<text  x="838.02" y="1295.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="704.6" y="1877" width="0.2" height="15.0" fill="rgb(224,177,22)" rx="2" ry="2" />
<text  x="707.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.03%)</title><rect x="77.8" y="1909" width="0.4" height="15.0" fill="rgb(222,30,50)" rx="2" ry="2" />
<text  x="80.80" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="212.2" y="1685" width="0.2" height="15.0" fill="rgb(215,122,47)" rx="2" ry="2" />
<text  x="215.22" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="972.4" y="1877" width="0.2" height="15.0" fill="rgb(254,73,9)" rx="2" ry="2" />
<text  x="975.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="341.0" y="1685" width="0.4" height="15.0" fill="rgb(247,75,40)" rx="2" ry="2" />
<text  x="344.05" y="1695.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="390.5" y="1909" width="0.2" height="15.0" fill="rgb(234,199,33)" rx="2" ry="2" />
<text  x="393.50" y="1919.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.12%)</title><rect x="375.7" y="1861" width="1.4" height="15.0" fill="rgb(217,190,48)" rx="2" ry="2" />
<text  x="378.75" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="810.5" y="1509" width="0.2" height="15.0" fill="rgb(206,60,27)" rx="2" ry="2" />
<text  x="813.49" y="1519.5" ></text>
</g>
<g >
<title>import_iovec (9 samples, 0.15%)</title><rect x="235.2" y="1925" width="1.7" height="15.0" fill="rgb(237,169,25)" rx="2" ry="2" />
<text  x="238.15" y="1935.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="81.8" y="1621" width="0.2" height="15.0" fill="rgb(252,213,19)" rx="2" ry="2" />
<text  x="84.79" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="570.8" y="1941" width="0.2" height="15.0" fill="rgb(215,192,0)" rx="2" ry="2" />
<text  x="573.78" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="541.9" y="1941" width="0.4" height="15.0" fill="rgb(250,194,7)" rx="2" ry="2" />
<text  x="544.87" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="509.0" y="1925" width="0.2" height="15.0" fill="rgb(241,129,5)" rx="2" ry="2" />
<text  x="511.96" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="538.3" y="1877" width="0.2" height="15.0" fill="rgb(244,96,37)" rx="2" ry="2" />
<text  x="541.28" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="111.7" y="277" width="0.2" height="15.0" fill="rgb(214,88,42)" rx="2" ry="2" />
<text  x="114.71" y="287.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="800.5" y="1509" width="0.2" height="15.0" fill="rgb(243,29,45)" rx="2" ry="2" />
<text  x="803.52" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="957.7" y="2005" width="0.2" height="15.0" fill="rgb(248,14,46)" rx="2" ry="2" />
<text  x="960.67" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="599.5" y="1429" width="0.2" height="15.0" fill="rgb(235,170,23)" rx="2" ry="2" />
<text  x="602.50" y="1439.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="341.0" y="1813" width="0.4" height="15.0" fill="rgb(219,101,31)" rx="2" ry="2" />
<text  x="344.05" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="402.9" y="1861" width="0.2" height="15.0" fill="rgb(230,73,20)" rx="2" ry="2" />
<text  x="405.87" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (3 samples, 0.05%)</title><rect x="920.4" y="2037" width="0.6" height="15.0" fill="rgb(231,111,37)" rx="2" ry="2" />
<text  x="923.38" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1079.5" y="1733" width="0.2" height="15.0" fill="rgb(250,195,37)" rx="2" ry="2" />
<text  x="1082.52" y="1743.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (12 samples, 0.20%)</title><rect x="84.8" y="2053" width="2.4" height="15.0" fill="rgb(246,185,38)" rx="2" ry="2" />
<text  x="87.78" y="2063.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1052.6" y="1973" width="0.2" height="15.0" fill="rgb(235,227,40)" rx="2" ry="2" />
<text  x="1055.60" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="538.3" y="1749" width="0.2" height="15.0" fill="rgb(246,94,51)" rx="2" ry="2" />
<text  x="541.28" y="1759.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="970.6" y="2037" width="0.8" height="15.0" fill="rgb(206,91,49)" rx="2" ry="2" />
<text  x="973.63" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="909.8" y="1749" width="0.2" height="15.0" fill="rgb(211,55,0)" rx="2" ry="2" />
<text  x="912.81" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="131.1" y="1893" width="0.2" height="15.0" fill="rgb(236,41,53)" rx="2" ry="2" />
<text  x="134.05" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="313.7" y="1813" width="0.2" height="15.0" fill="rgb(224,225,41)" rx="2" ry="2" />
<text  x="316.72" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="697.0" y="1877" width="0.2" height="15.0" fill="rgb(217,89,19)" rx="2" ry="2" />
<text  x="700.02" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1150.7" y="1797" width="0.2" height="15.0" fill="rgb(238,22,48)" rx="2" ry="2" />
<text  x="1153.71" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.2" y="2021" width="0.2" height="15.0" fill="rgb(245,80,42)" rx="2" ry="2" />
<text  x="583.16" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="68.2" y="1925" width="0.2" height="15.0" fill="rgb(239,24,16)" rx="2" ry="2" />
<text  x="71.23" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (32 samples, 0.54%)</title><rect x="296.4" y="1797" width="6.4" height="15.0" fill="rgb(232,193,27)" rx="2" ry="2" />
<text  x="299.37" y="1807.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="521.5" y="1941" width="0.4" height="15.0" fill="rgb(249,193,54)" rx="2" ry="2" />
<text  x="524.53" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (13 samples, 0.22%)</title><rect x="11.4" y="1925" width="2.6" height="15.0" fill="rgb(237,74,3)" rx="2" ry="2" />
<text  x="14.40" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="972.4" y="1909" width="0.2" height="15.0" fill="rgb(238,156,36)" rx="2" ry="2" />
<text  x="975.43" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1008.3" y="2005" width="0.2" height="15.0" fill="rgb(216,51,49)" rx="2" ry="2" />
<text  x="1011.32" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="311.3" y="1621" width="0.2" height="15.0" fill="rgb(254,141,4)" rx="2" ry="2" />
<text  x="314.33" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="952.7" y="1941" width="0.2" height="15.0" fill="rgb(215,120,49)" rx="2" ry="2" />
<text  x="955.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="870.1" y="1989" width="0.2" height="15.0" fill="rgb(252,191,20)" rx="2" ry="2" />
<text  x="873.12" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (3 samples, 0.05%)</title><rect x="36.5" y="1973" width="0.6" height="15.0" fill="rgb(237,163,7)" rx="2" ry="2" />
<text  x="39.52" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="810.3" y="1557" width="0.2" height="15.0" fill="rgb(230,92,13)" rx="2" ry="2" />
<text  x="813.29" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="899.2" y="1893" width="0.2" height="15.0" fill="rgb(226,175,12)" rx="2" ry="2" />
<text  x="902.24" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="861.3" y="1845" width="0.4" height="15.0" fill="rgb(243,101,48)" rx="2" ry="2" />
<text  x="864.35" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="851.8" y="1685" width="0.2" height="15.0" fill="rgb(238,195,52)" rx="2" ry="2" />
<text  x="854.77" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_ack (2 samples, 0.03%)</title><rect x="669.3" y="1637" width="0.4" height="15.0" fill="rgb(227,49,7)" rx="2" ry="2" />
<text  x="672.30" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1333" width="19.3" height="15.0" fill="rgb(229,50,43)" rx="2" ry="2" />
<text  x="96.16" y="1343.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="989.0" y="1893" width="0.6" height="15.0" fill="rgb(253,166,3)" rx="2" ry="2" />
<text  x="991.98" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="481.2" y="1957" width="0.4" height="15.0" fill="rgb(248,20,35)" rx="2" ry="2" />
<text  x="484.24" y="1967.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (2 samples, 0.03%)</title><rect x="976.0" y="1941" width="0.4" height="15.0" fill="rgb(251,30,27)" rx="2" ry="2" />
<text  x="979.02" y="1951.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="667.7" y="1861" width="0.6" height="15.0" fill="rgb(217,56,43)" rx="2" ry="2" />
<text  x="670.70" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="527.9" y="1925" width="0.2" height="15.0" fill="rgb(217,142,9)" rx="2" ry="2" />
<text  x="530.91" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="988.2" y="1765" width="0.2" height="15.0" fill="rgb(248,68,22)" rx="2" ry="2" />
<text  x="991.18" y="1775.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="341.0" y="1893" width="0.4" height="15.0" fill="rgb(253,17,37)" rx="2" ry="2" />
<text  x="344.05" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1269" width="19.3" height="15.0" fill="rgb(224,59,16)" rx="2" ry="2" />
<text  x="96.16" y="1279.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="92.2" y="1973" width="0.2" height="15.0" fill="rgb(205,96,28)" rx="2" ry="2" />
<text  x="95.16" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (94 samples, 1.59%)</title><rect x="791.3" y="1557" width="18.8" height="15.0" fill="rgb(253,44,36)" rx="2" ry="2" />
<text  x="794.35" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (25 samples, 0.42%)</title><rect x="635.4" y="1957" width="5.0" height="15.0" fill="rgb(244,76,21)" rx="2" ry="2" />
<text  x="638.40" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="970.4" y="1877" width="0.2" height="15.0" fill="rgb(228,120,3)" rx="2" ry="2" />
<text  x="973.43" y="1887.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="862.7" y="1845" width="0.4" height="15.0" fill="rgb(206,1,0)" rx="2" ry="2" />
<text  x="865.74" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="615.9" y="1813" width="0.6" height="15.0" fill="rgb(230,19,49)" rx="2" ry="2" />
<text  x="618.85" y="1823.5" ></text>
</g>
<g >
<title>___d_drop (1 samples, 0.02%)</title><rect x="731.3" y="1765" width="0.2" height="15.0" fill="rgb(230,174,9)" rx="2" ry="2" />
<text  x="734.32" y="1775.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="107.7" y="37" width="0.2" height="15.0" fill="rgb(234,164,46)" rx="2" ry="2" />
<text  x="110.72" y="47.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="61.3" y="1845" width="0.2" height="15.0" fill="rgb(251,132,52)" rx="2" ry="2" />
<text  x="64.25" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1285" width="19.3" height="15.0" fill="rgb(249,101,41)" rx="2" ry="2" />
<text  x="96.16" y="1295.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="81.8" y="1925" width="0.2" height="15.0" fill="rgb(230,74,43)" rx="2" ry="2" />
<text  x="84.79" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="990.8" y="1989" width="0.2" height="15.0" fill="rgb(249,67,8)" rx="2" ry="2" />
<text  x="993.77" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="981" width="18.7" height="15.0" fill="rgb(223,114,49)" rx="2" ry="2" />
<text  x="96.16" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="909.8" y="1733" width="0.2" height="15.0" fill="rgb(253,228,28)" rx="2" ry="2" />
<text  x="912.81" y="1743.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="852.4" y="1909" width="0.2" height="15.0" fill="rgb(241,0,31)" rx="2" ry="2" />
<text  x="855.37" y="1919.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (3 samples, 0.05%)</title><rect x="551.8" y="1973" width="0.6" height="15.0" fill="rgb(235,4,10)" rx="2" ry="2" />
<text  x="554.84" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (8 samples, 0.14%)</title><rect x="1145.7" y="2021" width="1.6" height="15.0" fill="rgb(218,1,15)" rx="2" ry="2" />
<text  x="1148.73" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="294.2" y="1813" width="0.4" height="15.0" fill="rgb(219,207,31)" rx="2" ry="2" />
<text  x="297.18" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="210.8" y="1749" width="0.2" height="15.0" fill="rgb(227,208,31)" rx="2" ry="2" />
<text  x="213.82" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1118.4" y="1797" width="0.2" height="15.0" fill="rgb(217,200,40)" rx="2" ry="2" />
<text  x="1121.41" y="1807.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="111.3" y="69" width="0.2" height="15.0" fill="rgb(223,196,32)" rx="2" ry="2" />
<text  x="114.31" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.0" y="1653" width="0.2" height="15.0" fill="rgb(254,52,50)" rx="2" ry="2" />
<text  x="844.01" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (13 samples, 0.22%)</title><rect x="534.9" y="2005" width="2.6" height="15.0" fill="rgb(237,206,48)" rx="2" ry="2" />
<text  x="537.89" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="29.1" y="1973" width="0.2" height="15.0" fill="rgb(209,48,19)" rx="2" ry="2" />
<text  x="32.14" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="53.5" y="1941" width="1.2" height="15.0" fill="rgb(247,205,54)" rx="2" ry="2" />
<text  x="56.47" y="1951.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="61.1" y="1877" width="0.6" height="15.0" fill="rgb(230,207,8)" rx="2" ry="2" />
<text  x="64.05" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="14.2" y="2037" width="1.2" height="15.0" fill="rgb(212,90,22)" rx="2" ry="2" />
<text  x="17.19" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="257.3" y="1589" width="0.2" height="15.0" fill="rgb(208,126,29)" rx="2" ry="2" />
<text  x="260.29" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.0" y="1797" width="0.2" height="15.0" fill="rgb(234,152,7)" rx="2" ry="2" />
<text  x="844.01" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="341.0" y="1781" width="0.4" height="15.0" fill="rgb(244,173,2)" rx="2" ry="2" />
<text  x="344.05" y="1791.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="748.5" y="1797" width="0.2" height="15.0" fill="rgb(233,187,25)" rx="2" ry="2" />
<text  x="751.47" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (19 samples, 0.32%)</title><rect x="859.8" y="1941" width="3.7" height="15.0" fill="rgb(242,109,32)" rx="2" ry="2" />
<text  x="862.75" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.41%)</title><rect x="958.3" y="2021" width="4.8" height="15.0" fill="rgb(249,178,18)" rx="2" ry="2" />
<text  x="961.27" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="669.3" y="1733" width="0.6" height="15.0" fill="rgb(209,104,29)" rx="2" ry="2" />
<text  x="672.30" y="1743.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="452.1" y="1973" width="0.6" height="15.0" fill="rgb(227,123,12)" rx="2" ry="2" />
<text  x="455.13" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="43.9" y="1861" width="0.2" height="15.0" fill="rgb(250,123,26)" rx="2" ry="2" />
<text  x="46.90" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="128.7" y="1989" width="0.2" height="15.0" fill="rgb(245,84,40)" rx="2" ry="2" />
<text  x="131.66" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1079.7" y="1813" width="0.2" height="15.0" fill="rgb(210,68,44)" rx="2" ry="2" />
<text  x="1082.72" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="909.8" y="1909" width="0.2" height="15.0" fill="rgb(250,139,15)" rx="2" ry="2" />
<text  x="912.81" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="852.8" y="1861" width="0.2" height="15.0" fill="rgb(238,115,31)" rx="2" ry="2" />
<text  x="855.77" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1150.7" y="1669" width="0.2" height="15.0" fill="rgb(218,160,41)" rx="2" ry="2" />
<text  x="1153.71" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="597" width="18.5" height="15.0" fill="rgb(238,26,10)" rx="2" ry="2" />
<text  x="96.36" y="607.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="317.1" y="1797" width="0.2" height="15.0" fill="rgb(207,222,7)" rx="2" ry="2" />
<text  x="320.12" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (61 samples, 1.03%)</title><rect x="979.6" y="2005" width="12.2" height="15.0" fill="rgb(214,170,6)" rx="2" ry="2" />
<text  x="982.61" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="895.0" y="1973" width="0.2" height="15.0" fill="rgb(208,56,26)" rx="2" ry="2" />
<text  x="898.05" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="40.9" y="1973" width="0.2" height="15.0" fill="rgb(254,2,15)" rx="2" ry="2" />
<text  x="43.91" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="988.4" y="1893" width="0.2" height="15.0" fill="rgb(227,64,47)" rx="2" ry="2" />
<text  x="991.38" y="1903.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="565.4" y="1701" width="0.2" height="15.0" fill="rgb(246,182,44)" rx="2" ry="2" />
<text  x="568.40" y="1711.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="673.5" y="1717" width="0.2" height="15.0" fill="rgb(242,124,30)" rx="2" ry="2" />
<text  x="676.49" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="238.5" y="1893" width="0.2" height="15.0" fill="rgb(229,202,0)" rx="2" ry="2" />
<text  x="241.54" y="1903.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="259.7" y="1845" width="0.2" height="15.0" fill="rgb(254,223,34)" rx="2" ry="2" />
<text  x="262.68" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1083.5" y="1829" width="0.2" height="15.0" fill="rgb(240,105,19)" rx="2" ry="2" />
<text  x="1086.51" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (105 samples, 1.77%)</title><rect x="58.5" y="1989" width="20.9" height="15.0" fill="rgb(220,144,2)" rx="2" ry="2" />
<text  x="61.46" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="197.7" y="1941" width="3.2" height="15.0" fill="rgb(230,134,49)" rx="2" ry="2" />
<text  x="200.66" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (3 samples, 0.05%)</title><rect x="527.5" y="1989" width="0.6" height="15.0" fill="rgb(238,91,2)" rx="2" ry="2" />
<text  x="530.51" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11 samples, 0.19%)</title><rect x="807.9" y="1541" width="2.2" height="15.0" fill="rgb(215,38,29)" rx="2" ry="2" />
<text  x="810.90" y="1551.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="750.9" y="1749" width="0.8" height="15.0" fill="rgb(241,167,41)" rx="2" ry="2" />
<text  x="753.87" y="1759.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1127.8" y="1925" width="0.2" height="15.0" fill="rgb(215,203,49)" rx="2" ry="2" />
<text  x="1130.78" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="74.2" y="1749" width="0.2" height="15.0" fill="rgb(246,166,20)" rx="2" ry="2" />
<text  x="77.21" y="1759.5" ></text>
</g>
<g >
<title>process_backlog (11 samples, 0.19%)</title><rect x="273.6" y="1653" width="2.2" height="15.0" fill="rgb(218,225,33)" rx="2" ry="2" />
<text  x="276.64" y="1663.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="68.0" y="1957" width="0.4" height="15.0" fill="rgb(252,223,27)" rx="2" ry="2" />
<text  x="71.03" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="965.6" y="2005" width="0.6" height="15.0" fill="rgb(237,71,36)" rx="2" ry="2" />
<text  x="968.65" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="93.2" y="1413" width="20.1" height="15.0" fill="rgb(254,14,37)" rx="2" ry="2" />
<text  x="96.16" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="859.2" y="1669" width="0.2" height="15.0" fill="rgb(225,206,14)" rx="2" ry="2" />
<text  x="862.15" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="204.4" y="1909" width="0.2" height="15.0" fill="rgb(239,118,50)" rx="2" ry="2" />
<text  x="207.44" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="835.0" y="1573" width="0.2" height="15.0" fill="rgb(243,209,30)" rx="2" ry="2" />
<text  x="838.02" y="1583.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="174.7" y="2021" width="0.2" height="15.0" fill="rgb(205,41,4)" rx="2" ry="2" />
<text  x="177.73" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="623.2" y="1909" width="0.2" height="15.0" fill="rgb(249,151,40)" rx="2" ry="2" />
<text  x="626.23" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_xmit (286 samples, 4.83%)</title><rect x="769.2" y="1701" width="57.0" height="15.0" fill="rgb(245,44,34)" rx="2" ry="2" />
<text  x="772.21" y="1711.5" >tcp_wr..</text>
</g>
<g >
<title>tcp_rearm_rto (32 samples, 0.54%)</title><rect x="296.4" y="1813" width="6.4" height="15.0" fill="rgb(230,153,31)" rx="2" ry="2" />
<text  x="299.37" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="118.3" y="1989" width="0.4" height="15.0" fill="rgb(252,96,6)" rx="2" ry="2" />
<text  x="121.29" y="1999.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="729.3" y="1797" width="0.4" height="15.0" fill="rgb(206,201,17)" rx="2" ry="2" />
<text  x="732.33" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="999.3" y="1973" width="0.2" height="15.0" fill="rgb(243,183,43)" rx="2" ry="2" />
<text  x="1002.35" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="485" width="18.5" height="15.0" fill="rgb(239,8,51)" rx="2" ry="2" />
<text  x="96.36" y="495.5" ></text>
</g>
<g >
<title>tcp_poll (24 samples, 0.41%)</title><rect x="502.8" y="1893" width="4.8" height="15.0" fill="rgb(250,24,25)" rx="2" ry="2" />
<text  x="505.78" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.0" y="1573" width="0.2" height="15.0" fill="rgb(237,135,4)" rx="2" ry="2" />
<text  x="844.01" y="1583.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (11 samples, 0.19%)</title><rect x="119.7" y="1989" width="2.2" height="15.0" fill="rgb(228,147,3)" rx="2" ry="2" />
<text  x="122.68" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="870.7" y="1957" width="0.6" height="15.0" fill="rgb(249,153,31)" rx="2" ry="2" />
<text  x="873.72" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="388.5" y="1893" width="0.2" height="15.0" fill="rgb(226,7,51)" rx="2" ry="2" />
<text  x="391.51" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (5 samples, 0.08%)</title><rect x="135.2" y="1925" width="1.0" height="15.0" fill="rgb(215,219,22)" rx="2" ry="2" />
<text  x="138.24" y="1935.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (46 samples, 0.78%)</title><rect x="1107.0" y="1525" width="9.2" height="15.0" fill="rgb(217,163,32)" rx="2" ry="2" />
<text  x="1110.04" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="703.4" y="1989" width="0.2" height="15.0" fill="rgb(210,27,26)" rx="2" ry="2" />
<text  x="706.40" y="1999.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="1134.6" y="1973" width="0.2" height="15.0" fill="rgb(245,153,50)" rx="2" ry="2" />
<text  x="1137.56" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="111.7" y="373" width="0.2" height="15.0" fill="rgb(226,72,4)" rx="2" ry="2" />
<text  x="114.71" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="322.9" y="1973" width="0.2" height="15.0" fill="rgb(237,31,41)" rx="2" ry="2" />
<text  x="325.90" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="527.9" y="1797" width="0.2" height="15.0" fill="rgb(238,176,8)" rx="2" ry="2" />
<text  x="530.91" y="1807.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="565.2" y="1669" width="0.2" height="15.0" fill="rgb(243,129,38)" rx="2" ry="2" />
<text  x="568.20" y="1679.5" ></text>
</g>
<g >
<title>ep_poll (82 samples, 1.39%)</title><rect x="492.8" y="1973" width="16.4" height="15.0" fill="rgb(208,69,28)" rx="2" ry="2" />
<text  x="495.81" y="1983.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="846.6" y="1557" width="0.2" height="15.0" fill="rgb(216,99,47)" rx="2" ry="2" />
<text  x="849.59" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="961.3" y="1957" width="0.8" height="15.0" fill="rgb(231,84,13)" rx="2" ry="2" />
<text  x="964.26" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="548.0" y="1957" width="0.2" height="15.0" fill="rgb(242,79,11)" rx="2" ry="2" />
<text  x="551.05" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (1 samples, 0.02%)</title><rect x="579.2" y="1973" width="0.2" height="15.0" fill="rgb(235,61,8)" rx="2" ry="2" />
<text  x="582.16" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (21 samples, 0.35%)</title><rect x="1122.2" y="1941" width="4.2" height="15.0" fill="rgb(235,201,11)" rx="2" ry="2" />
<text  x="1125.20" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="948.9" y="1957" width="0.2" height="15.0" fill="rgb(216,187,45)" rx="2" ry="2" />
<text  x="951.89" y="1967.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1113.8" y="1413" width="0.2" height="15.0" fill="rgb(221,136,24)" rx="2" ry="2" />
<text  x="1116.82" y="1423.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1128.0" y="1605" width="0.2" height="15.0" fill="rgb(240,5,50)" rx="2" ry="2" />
<text  x="1130.98" y="1615.5" ></text>
</g>
<g >
<title>expand_files (2 samples, 0.03%)</title><rect x="339.7" y="1925" width="0.3" height="15.0" fill="rgb(231,129,20)" rx="2" ry="2" />
<text  x="342.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_mss (29 samples, 0.49%)</title><rect x="306.1" y="1877" width="5.8" height="15.0" fill="rgb(240,195,4)" rx="2" ry="2" />
<text  x="309.15" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="402.9" y="1829" width="0.2" height="15.0" fill="rgb(211,163,46)" rx="2" ry="2" />
<text  x="405.87" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="766.2" y="1477" width="0.2" height="15.0" fill="rgb(217,110,51)" rx="2" ry="2" />
<text  x="769.22" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (17 samples, 0.29%)</title><rect x="1144.3" y="2053" width="3.4" height="15.0" fill="rgb(221,171,43)" rx="2" ry="2" />
<text  x="1147.33" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="165.2" y="1973" width="0.4" height="15.0" fill="rgb(208,45,16)" rx="2" ry="2" />
<text  x="168.15" y="1983.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="528.3" y="2021" width="0.2" height="15.0" fill="rgb(206,78,43)" rx="2" ry="2" />
<text  x="531.31" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (14 samples, 0.24%)</title><rect x="548.8" y="1973" width="2.8" height="15.0" fill="rgb(252,173,27)" rx="2" ry="2" />
<text  x="551.85" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="94.4" y="37" width="0.2" height="15.0" fill="rgb(205,192,12)" rx="2" ry="2" />
<text  x="97.36" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="163.2" y="1925" width="0.4" height="15.0" fill="rgb(243,112,35)" rx="2" ry="2" />
<text  x="166.16" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="952.7" y="1893" width="0.2" height="15.0" fill="rgb(224,201,25)" rx="2" ry="2" />
<text  x="955.68" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1128.0" y="1909" width="0.2" height="15.0" fill="rgb(252,66,2)" rx="2" ry="2" />
<text  x="1130.98" y="1919.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.17%)</title><rect x="1077.3" y="1829" width="2.0" height="15.0" fill="rgb(214,22,6)" rx="2" ry="2" />
<text  x="1080.32" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (652 samples, 11.02%)</title><rect x="716.0" y="1893" width="130.0" height="15.0" fill="rgb(225,96,43)" rx="2" ry="2" />
<text  x="718.97" y="1903.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="610.7" y="1701" width="0.2" height="15.0" fill="rgb(237,101,40)" rx="2" ry="2" />
<text  x="613.67" y="1711.5" ></text>
</g>
<g >
<title>ksize (4 samples, 0.07%)</title><rect x="254.3" y="1845" width="0.8" height="15.0" fill="rgb(222,215,42)" rx="2" ry="2" />
<text  x="257.30" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="311.3" y="1653" width="0.2" height="15.0" fill="rgb(227,92,47)" rx="2" ry="2" />
<text  x="314.33" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1079.5" y="1573" width="0.2" height="15.0" fill="rgb(250,190,17)" rx="2" ry="2" />
<text  x="1082.52" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="936.7" y="1925" width="0.2" height="15.0" fill="rgb(217,68,21)" rx="2" ry="2" />
<text  x="939.73" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="252.5" y="1797" width="0.2" height="15.0" fill="rgb(238,30,12)" rx="2" ry="2" />
<text  x="255.50" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="970.4" y="1845" width="0.2" height="15.0" fill="rgb(250,85,18)" rx="2" ry="2" />
<text  x="973.43" y="1855.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="1052.2" y="1973" width="0.2" height="15.0" fill="rgb(206,14,20)" rx="2" ry="2" />
<text  x="1055.20" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="936.7" y="1861" width="0.2" height="15.0" fill="rgb(205,171,34)" rx="2" ry="2" />
<text  x="939.73" y="1871.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="706.8" y="1813" width="0.4" height="15.0" fill="rgb(226,157,34)" rx="2" ry="2" />
<text  x="709.79" y="1823.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="460.9" y="1877" width="0.4" height="15.0" fill="rgb(240,159,39)" rx="2" ry="2" />
<text  x="463.90" y="1887.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="707.0" y="1797" width="0.2" height="15.0" fill="rgb(208,190,27)" rx="2" ry="2" />
<text  x="709.99" y="1807.5" ></text>
</g>
<g >
<title>ip_output (112 samples, 1.89%)</title><rect x="269.1" y="1781" width="22.3" height="15.0" fill="rgb(208,127,27)" rx="2" ry="2" />
<text  x="272.05" y="1791.5" >i..</text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="1027.5" y="2053" width="0.2" height="15.0" fill="rgb(227,92,27)" rx="2" ry="2" />
<text  x="1030.47" y="2063.5" ></text>
</g>
<g >
<title>skb_free_head (20 samples, 0.34%)</title><rect x="1075.9" y="1877" width="4.0" height="15.0" fill="rgb(249,218,14)" rx="2" ry="2" />
<text  x="1078.93" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="154.8" y="1909" width="0.2" height="15.0" fill="rgb(253,83,11)" rx="2" ry="2" />
<text  x="157.78" y="1919.5" ></text>
</g>
<g >
<title>ip_copy_addrs (6 samples, 0.10%)</title><rect x="265.7" y="1813" width="1.2" height="15.0" fill="rgb(210,123,24)" rx="2" ry="2" />
<text  x="268.66" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="208.2" y="1877" width="0.2" height="15.0" fill="rgb(233,195,24)" rx="2" ry="2" />
<text  x="211.23" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="241.9" y="1861" width="0.2" height="15.0" fill="rgb(236,208,38)" rx="2" ry="2" />
<text  x="244.93" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="871.3" y="1989" width="0.2" height="15.0" fill="rgb(245,199,44)" rx="2" ry="2" />
<text  x="874.32" y="1999.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (1 samples, 0.02%)</title><rect x="1005.7" y="1989" width="0.2" height="15.0" fill="rgb(206,186,17)" rx="2" ry="2" />
<text  x="1008.73" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="485.8" y="1813" width="0.2" height="15.0" fill="rgb(245,116,39)" rx="2" ry="2" />
<text  x="488.83" y="1823.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="651.0" y="1989" width="0.2" height="15.0" fill="rgb(210,57,24)" rx="2" ry="2" />
<text  x="653.95" y="1999.5" ></text>
</g>
<g >
<title>__libc_recv (536 samples, 9.06%)</title><rect x="1027.7" y="2053" width="106.9" height="15.0" fill="rgb(249,131,29)" rx="2" ry="2" />
<text  x="1030.67" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="538.3" y="1909" width="0.2" height="15.0" fill="rgb(224,61,28)" rx="2" ry="2" />
<text  x="541.28" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="972.4" y="1893" width="0.2" height="15.0" fill="rgb(217,158,28)" rx="2" ry="2" />
<text  x="975.43" y="1903.5" ></text>
</g>
<g >
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="1017.1" y="1701" width="0.2" height="15.0" fill="rgb(205,62,14)" rx="2" ry="2" />
<text  x="1020.10" y="1711.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="56.7" y="1781" width="0.2" height="15.0" fill="rgb(205,38,19)" rx="2" ry="2" />
<text  x="59.67" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="177.9" y="1989" width="0.2" height="15.0" fill="rgb(251,83,3)" rx="2" ry="2" />
<text  x="180.92" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="195.7" y="2005" width="0.6" height="15.0" fill="rgb(240,149,22)" rx="2" ry="2" />
<text  x="198.67" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="144.0" y="1909" width="0.2" height="15.0" fill="rgb(230,134,7)" rx="2" ry="2" />
<text  x="147.01" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="988.2" y="1829" width="0.2" height="15.0" fill="rgb(253,163,6)" rx="2" ry="2" />
<text  x="991.18" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="998.0" y="1973" width="0.4" height="15.0" fill="rgb(234,37,9)" rx="2" ry="2" />
<text  x="1000.95" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (15 samples, 0.25%)</title><rect x="144.2" y="1909" width="3.0" height="15.0" fill="rgb(208,21,34)" rx="2" ry="2" />
<text  x="147.21" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="874.7" y="2005" width="0.8" height="15.0" fill="rgb(216,152,2)" rx="2" ry="2" />
<text  x="877.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="703.0" y="1989" width="0.4" height="15.0" fill="rgb(246,35,15)" rx="2" ry="2" />
<text  x="706.00" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="152.6" y="1685" width="0.2" height="15.0" fill="rgb(251,166,25)" rx="2" ry="2" />
<text  x="155.59" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="484.6" y="1701" width="0.2" height="15.0" fill="rgb(224,216,51)" rx="2" ry="2" />
<text  x="487.63" y="1711.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1128.0" y="1669" width="0.2" height="15.0" fill="rgb(221,91,42)" rx="2" ry="2" />
<text  x="1130.98" y="1679.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="394.5" y="1909" width="0.2" height="15.0" fill="rgb(208,122,31)" rx="2" ry="2" />
<text  x="397.49" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="311.3" y="1701" width="0.2" height="15.0" fill="rgb(238,196,42)" rx="2" ry="2" />
<text  x="314.33" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="93.2" y="1349" width="19.7" height="15.0" fill="rgb(209,152,9)" rx="2" ry="2" />
<text  x="96.16" y="1359.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (2 samples, 0.03%)</title><rect x="1185.4" y="2053" width="0.4" height="15.0" fill="rgb(233,196,22)" rx="2" ry="2" />
<text  x="1188.41" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="530.3" y="1973" width="0.2" height="15.0" fill="rgb(230,81,48)" rx="2" ry="2" />
<text  x="533.30" y="1983.5" ></text>
</g>
<g >
<title>remove_wait_queue (18 samples, 0.30%)</title><rect x="469.7" y="1941" width="3.6" height="15.0" fill="rgb(212,107,48)" rx="2" ry="2" />
<text  x="472.68" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="808.9" y="1493" width="0.2" height="15.0" fill="rgb(237,75,46)" rx="2" ry="2" />
<text  x="811.90" y="1503.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="127.3" y="1989" width="1.2" height="15.0" fill="rgb(224,100,40)" rx="2" ry="2" />
<text  x="130.26" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1170.7" y="2021" width="0.4" height="15.0" fill="rgb(232,225,23)" rx="2" ry="2" />
<text  x="1173.66" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="134.2" y="1909" width="0.2" height="15.0" fill="rgb(241,87,11)" rx="2" ry="2" />
<text  x="137.24" y="1919.5" ></text>
</g>
<g >
<title>sys_fcntl (2 samples, 0.03%)</title><rect x="564.6" y="1957" width="0.4" height="15.0" fill="rgb(242,42,6)" rx="2" ry="2" />
<text  x="567.60" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="107.9" y="37" width="0.2" height="15.0" fill="rgb(232,95,52)" rx="2" ry="2" />
<text  x="110.92" y="47.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="669.5" y="1429" width="0.2" height="15.0" fill="rgb(206,208,3)" rx="2" ry="2" />
<text  x="672.50" y="1439.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (39 samples, 0.66%)</title><rect x="1172.8" y="2053" width="7.8" height="15.0" fill="rgb(233,187,9)" rx="2" ry="2" />
<text  x="1175.85" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="74.2" y="1669" width="0.2" height="15.0" fill="rgb(246,147,36)" rx="2" ry="2" />
<text  x="77.21" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (1 samples, 0.02%)</title><rect x="656.9" y="1989" width="0.2" height="15.0" fill="rgb(238,188,46)" rx="2" ry="2" />
<text  x="659.94" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="117.1" y="1973" width="0.2" height="15.0" fill="rgb(240,214,43)" rx="2" ry="2" />
<text  x="120.09" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="537.3" y="1749" width="0.2" height="15.0" fill="rgb(214,105,1)" rx="2" ry="2" />
<text  x="540.28" y="1759.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="528.7" y="1957" width="0.2" height="15.0" fill="rgb(248,47,16)" rx="2" ry="2" />
<text  x="531.71" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1026.3" y="1989" width="0.2" height="15.0" fill="rgb(251,109,5)" rx="2" ry="2" />
<text  x="1029.27" y="1999.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1150.7" y="1621" width="0.2" height="15.0" fill="rgb(254,41,37)" rx="2" ry="2" />
<text  x="1153.71" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="111.5" y="261" width="0.2" height="15.0" fill="rgb(232,188,54)" rx="2" ry="2" />
<text  x="114.51" y="271.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="357.0" y="1749" width="0.2" height="15.0" fill="rgb(238,170,38)" rx="2" ry="2" />
<text  x="360.00" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="84.4" y="2037" width="0.4" height="15.0" fill="rgb(251,124,49)" rx="2" ry="2" />
<text  x="87.39" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="988.2" y="1669" width="0.2" height="15.0" fill="rgb(225,173,6)" rx="2" ry="2" />
<text  x="991.18" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1118.4" y="1765" width="0.2" height="15.0" fill="rgb(233,63,0)" rx="2" ry="2" />
<text  x="1121.41" y="1775.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="697.0" y="1829" width="0.2" height="15.0" fill="rgb(223,37,42)" rx="2" ry="2" />
<text  x="700.02" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="929.0" y="1925" width="0.2" height="15.0" fill="rgb(238,158,24)" rx="2" ry="2" />
<text  x="931.95" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1025.5" y="2021" width="0.2" height="15.0" fill="rgb(208,110,1)" rx="2" ry="2" />
<text  x="1028.47" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="73.6" y="1925" width="0.2" height="15.0" fill="rgb(217,165,19)" rx="2" ry="2" />
<text  x="76.62" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1183.8" y="1989" width="0.2" height="15.0" fill="rgb(224,20,20)" rx="2" ry="2" />
<text  x="1186.82" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="73.8" y="1925" width="0.4" height="15.0" fill="rgb(254,151,32)" rx="2" ry="2" />
<text  x="76.82" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1083.5" y="1765" width="0.2" height="15.0" fill="rgb(226,148,20)" rx="2" ry="2" />
<text  x="1086.51" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="625.0" y="2005" width="0.4" height="15.0" fill="rgb(210,93,50)" rx="2" ry="2" />
<text  x="628.03" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="887.7" y="1797" width="0.2" height="15.0" fill="rgb(211,113,27)" rx="2" ry="2" />
<text  x="890.67" y="1807.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (2 samples, 0.03%)</title><rect x="31.7" y="2005" width="0.4" height="15.0" fill="rgb(224,101,11)" rx="2" ry="2" />
<text  x="34.74" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="835.0" y="1557" width="0.2" height="15.0" fill="rgb(205,123,43)" rx="2" ry="2" />
<text  x="838.02" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1135.4" y="1989" width="0.2" height="15.0" fill="rgb(222,151,32)" rx="2" ry="2" />
<text  x="1138.36" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1127.8" y="2037" width="0.4" height="15.0" fill="rgb(223,118,6)" rx="2" ry="2" />
<text  x="1130.78" y="2047.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="745.5" y="1685" width="0.2" height="15.0" fill="rgb(235,103,16)" rx="2" ry="2" />
<text  x="748.48" y="1695.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="371.4" y="1909" width="0.2" height="15.0" fill="rgb(216,203,10)" rx="2" ry="2" />
<text  x="374.36" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="469" width="18.5" height="15.0" fill="rgb(233,175,2)" rx="2" ry="2" />
<text  x="96.36" y="479.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="599.5" y="1733" width="0.2" height="15.0" fill="rgb(248,141,39)" rx="2" ry="2" />
<text  x="602.50" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="988.2" y="1685" width="0.2" height="15.0" fill="rgb(252,193,20)" rx="2" ry="2" />
<text  x="991.18" y="1695.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="697.4" y="1957" width="0.4" height="15.0" fill="rgb(216,37,13)" rx="2" ry="2" />
<text  x="700.42" y="1967.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="749.5" y="1781" width="0.4" height="15.0" fill="rgb(220,191,50)" rx="2" ry="2" />
<text  x="752.47" y="1791.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1118.8" y="1877" width="0.2" height="15.0" fill="rgb(223,5,43)" rx="2" ry="2" />
<text  x="1121.81" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="861.7" y="1813" width="0.2" height="15.0" fill="rgb(242,5,11)" rx="2" ry="2" />
<text  x="864.75" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="638.0" y="1925" width="1.0" height="15.0" fill="rgb(207,160,44)" rx="2" ry="2" />
<text  x="640.99" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1049.6" y="2005" width="0.2" height="15.0" fill="rgb(210,198,1)" rx="2" ry="2" />
<text  x="1052.60" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="110.3" y="69" width="0.2" height="15.0" fill="rgb(244,30,43)" rx="2" ry="2" />
<text  x="113.31" y="79.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="245.9" y="1861" width="0.2" height="15.0" fill="rgb(219,47,22)" rx="2" ry="2" />
<text  x="248.92" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="217.8" y="1861" width="0.2" height="15.0" fill="rgb(245,57,46)" rx="2" ry="2" />
<text  x="220.80" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1127.8" y="1989" width="0.4" height="15.0" fill="rgb(246,136,49)" rx="2" ry="2" />
<text  x="1130.78" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.2" y="1749" width="0.2" height="15.0" fill="rgb(215,125,28)" rx="2" ry="2" />
<text  x="844.21" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="785.4" y="1493" width="0.6" height="15.0" fill="rgb(245,59,30)" rx="2" ry="2" />
<text  x="788.37" y="1503.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="989.8" y="1893" width="0.2" height="15.0" fill="rgb(233,157,31)" rx="2" ry="2" />
<text  x="992.78" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1150.3" y="1957" width="0.2" height="15.0" fill="rgb(207,193,18)" rx="2" ry="2" />
<text  x="1153.31" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="211.6" y="1877" width="1.4" height="15.0" fill="rgb(248,12,8)" rx="2" ry="2" />
<text  x="214.62" y="1887.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="753.3" y="1749" width="0.2" height="15.0" fill="rgb(212,166,19)" rx="2" ry="2" />
<text  x="756.26" y="1759.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="642.0" y="1957" width="0.6" height="15.0" fill="rgb(247,60,14)" rx="2" ry="2" />
<text  x="644.98" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="846.4" y="1653" width="0.2" height="15.0" fill="rgb(239,185,51)" rx="2" ry="2" />
<text  x="849.39" y="1663.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="144.8" y="1861" width="0.2" height="15.0" fill="rgb(221,57,28)" rx="2" ry="2" />
<text  x="147.81" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="610.7" y="1861" width="0.2" height="15.0" fill="rgb(241,148,38)" rx="2" ry="2" />
<text  x="613.67" y="1871.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="311.1" y="1845" width="0.2" height="15.0" fill="rgb(225,145,43)" rx="2" ry="2" />
<text  x="314.13" y="1855.5" ></text>
</g>
<g >
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="813.7" y="1669" width="0.8" height="15.0" fill="rgb(238,226,22)" rx="2" ry="2" />
<text  x="816.68" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="908.8" y="1973" width="1.2" height="15.0" fill="rgb(244,172,47)" rx="2" ry="2" />
<text  x="911.81" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="54.5" y="1925" width="0.2" height="15.0" fill="rgb(248,108,23)" rx="2" ry="2" />
<text  x="57.47" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="108.9" y="53" width="0.2" height="15.0" fill="rgb(229,79,27)" rx="2" ry="2" />
<text  x="111.91" y="63.5" ></text>
</g>
<g >
<title>syscall (56 samples, 0.95%)</title><rect x="1156.9" y="1973" width="11.2" height="15.0" fill="rgb(220,45,4)" rx="2" ry="2" />
<text  x="1159.90" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="861.9" y="1909" width="0.2" height="15.0" fill="rgb(237,225,39)" rx="2" ry="2" />
<text  x="864.95" y="1919.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="152.6" y="1669" width="0.2" height="15.0" fill="rgb(235,96,37)" rx="2" ry="2" />
<text  x="155.59" y="1679.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.03%)</title><rect x="48.3" y="1941" width="0.4" height="15.0" fill="rgb(253,214,42)" rx="2" ry="2" />
<text  x="51.29" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="528.5" y="1989" width="2.0" height="15.0" fill="rgb(237,144,12)" rx="2" ry="2" />
<text  x="531.51" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="702.6" y="1989" width="0.2" height="15.0" fill="rgb(241,118,23)" rx="2" ry="2" />
<text  x="705.60" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="54.3" y="1861" width="0.2" height="15.0" fill="rgb(210,116,19)" rx="2" ry="2" />
<text  x="57.27" y="1871.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="890.1" y="1925" width="0.2" height="15.0" fill="rgb(208,56,35)" rx="2" ry="2" />
<text  x="893.06" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="576.2" y="1941" width="0.2" height="15.0" fill="rgb(238,49,1)" rx="2" ry="2" />
<text  x="579.17" y="1951.5" ></text>
</g>
<g >
<title>__libc_sendmsg (505 samples, 8.53%)</title><rect x="219.6" y="2037" width="100.7" height="15.0" fill="rgb(211,140,35)" rx="2" ry="2" />
<text  x="222.60" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="622.6" y="1973" width="0.2" height="15.0" fill="rgb(205,125,45)" rx="2" ry="2" />
<text  x="625.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1149.5" y="1909" width="0.2" height="15.0" fill="rgb(226,198,23)" rx="2" ry="2" />
<text  x="1152.52" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="564.8" y="1909" width="0.2" height="15.0" fill="rgb(222,145,18)" rx="2" ry="2" />
<text  x="567.80" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="983.4" y="1957" width="1.0" height="15.0" fill="rgb(224,88,1)" rx="2" ry="2" />
<text  x="986.40" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="110.9" y="149" width="0.2" height="15.0" fill="rgb(242,147,47)" rx="2" ry="2" />
<text  x="113.91" y="159.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="949.1" y="1989" width="0.2" height="15.0" fill="rgb(244,130,7)" rx="2" ry="2" />
<text  x="952.09" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="835.0" y="1317" width="0.2" height="15.0" fill="rgb(212,38,51)" rx="2" ry="2" />
<text  x="838.02" y="1327.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1118.4" y="1845" width="0.2" height="15.0" fill="rgb(232,161,42)" rx="2" ry="2" />
<text  x="1121.41" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (4 samples, 0.07%)</title><rect x="978.8" y="2005" width="0.8" height="15.0" fill="rgb(253,54,47)" rx="2" ry="2" />
<text  x="981.81" y="2015.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.05%)</title><rect x="241.5" y="1893" width="0.6" height="15.0" fill="rgb(212,140,9)" rx="2" ry="2" />
<text  x="244.53" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1090.7" y="1893" width="0.2" height="15.0" fill="rgb(244,116,40)" rx="2" ry="2" />
<text  x="1093.69" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (12 samples, 0.20%)</title><rect x="54.7" y="1941" width="2.4" height="15.0" fill="rgb(221,115,20)" rx="2" ry="2" />
<text  x="57.67" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (2 samples, 0.03%)</title><rect x="67.2" y="1957" width="0.4" height="15.0" fill="rgb(228,87,45)" rx="2" ry="2" />
<text  x="70.24" y="1967.5" ></text>
</g>
<g >
<title>tcp_initialize_rcv_mss (1 samples, 0.02%)</title><rect x="818.1" y="1413" width="0.2" height="15.0" fill="rgb(249,218,13)" rx="2" ry="2" />
<text  x="821.07" y="1423.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="564.2" y="1925" width="0.2" height="15.0" fill="rgb(248,33,35)" rx="2" ry="2" />
<text  x="567.20" y="1935.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="234.6" y="1925" width="0.2" height="15.0" fill="rgb(244,223,21)" rx="2" ry="2" />
<text  x="237.55" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (11 samples, 0.19%)</title><rect x="1149.7" y="2005" width="2.2" height="15.0" fill="rgb(209,99,16)" rx="2" ry="2" />
<text  x="1152.72" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="725.9" y="1573" width="0.2" height="15.0" fill="rgb(216,25,23)" rx="2" ry="2" />
<text  x="728.94" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (108 samples, 1.83%)</title><rect x="674.3" y="2021" width="21.5" height="15.0" fill="rgb(206,158,53)" rx="2" ry="2" />
<text  x="677.29" y="2031.5" >f..</text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="93.4" y="85" width="15.7" height="15.0" fill="rgb(247,199,28)" rx="2" ry="2" />
<text  x="96.36" y="95.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="963.5" y="1989" width="0.6" height="15.0" fill="rgb(232,8,0)" rx="2" ry="2" />
<text  x="966.45" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="627.0" y="2005" width="0.4" height="15.0" fill="rgb(215,89,12)" rx="2" ry="2" />
<text  x="630.02" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="139.8" y="1877" width="0.2" height="15.0" fill="rgb(252,134,12)" rx="2" ry="2" />
<text  x="142.83" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (5 samples, 0.08%)</title><rect x="69.6" y="1957" width="1.0" height="15.0" fill="rgb(242,46,11)" rx="2" ry="2" />
<text  x="72.63" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (5 samples, 0.08%)</title><rect x="140.4" y="1893" width="1.0" height="15.0" fill="rgb(220,60,31)" rx="2" ry="2" />
<text  x="143.42" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="668.3" y="1829" width="0.4" height="15.0" fill="rgb(228,144,46)" rx="2" ry="2" />
<text  x="671.30" y="1839.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(248,47,43)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="121.3" y="1685" width="0.2" height="15.0" fill="rgb(222,161,44)" rx="2" ry="2" />
<text  x="124.28" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="110.7" y="133" width="0.2" height="15.0" fill="rgb(209,34,22)" rx="2" ry="2" />
<text  x="113.71" y="143.5" ></text>
</g>
<g >
<title>clock_gettime@plt (3 samples, 0.05%)</title><rect x="712.2" y="1941" width="0.6" height="15.0" fill="rgb(237,49,20)" rx="2" ry="2" />
<text  x="715.18" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="93.4" y="69" width="14.1" height="15.0" fill="rgb(252,169,10)" rx="2" ry="2" />
<text  x="96.36" y="79.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1127.8" y="1957" width="0.2" height="15.0" fill="rgb(213,7,29)" rx="2" ry="2" />
<text  x="1130.78" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1072.5" y="1909" width="0.2" height="15.0" fill="rgb(243,107,12)" rx="2" ry="2" />
<text  x="1075.54" y="1919.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="322.9" y="1941" width="0.2" height="15.0" fill="rgb(249,68,6)" rx="2" ry="2" />
<text  x="325.90" y="1951.5" ></text>
</g>
<g >
<title>locks_free_lock_context (3 samples, 0.05%)</title><rect x="739.3" y="1669" width="0.6" height="15.0" fill="rgb(217,82,52)" rx="2" ry="2" />
<text  x="742.30" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="565.2" y="1877" width="0.4" height="15.0" fill="rgb(211,171,5)" rx="2" ry="2" />
<text  x="568.20" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="524.7" y="1957" width="0.4" height="15.0" fill="rgb(227,96,14)" rx="2" ry="2" />
<text  x="527.72" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="988.2" y="1797" width="0.2" height="15.0" fill="rgb(227,204,4)" rx="2" ry="2" />
<text  x="991.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1189.4" y="1749" width="0.2" height="15.0" fill="rgb(239,190,41)" rx="2" ry="2" />
<text  x="1192.40" y="1759.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1083.5" y="1749" width="0.2" height="15.0" fill="rgb(227,216,51)" rx="2" ry="2" />
<text  x="1086.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="78.2" y="1925" width="0.2" height="15.0" fill="rgb(225,7,11)" rx="2" ry="2" />
<text  x="81.20" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="481.2" y="1877" width="0.4" height="15.0" fill="rgb(220,4,29)" rx="2" ry="2" />
<text  x="484.24" y="1887.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="613.5" y="1829" width="0.2" height="15.0" fill="rgb(252,165,8)" rx="2" ry="2" />
<text  x="616.46" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="152.6" y="1909" width="0.2" height="15.0" fill="rgb(237,13,0)" rx="2" ry="2" />
<text  x="155.59" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="481.6" y="1973" width="0.4" height="15.0" fill="rgb(245,211,21)" rx="2" ry="2" />
<text  x="484.64" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="54.1" y="1861" width="0.2" height="15.0" fill="rgb(236,102,48)" rx="2" ry="2" />
<text  x="57.07" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="252.5" y="1733" width="0.2" height="15.0" fill="rgb(224,217,14)" rx="2" ry="2" />
<text  x="255.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.52%)</title><rect x="93.4" y="341" width="17.9" height="15.0" fill="rgb(208,57,2)" rx="2" ry="2" />
<text  x="96.36" y="351.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (13 samples, 0.22%)</title><rect x="168.3" y="1989" width="2.6" height="15.0" fill="rgb(210,135,27)" rx="2" ry="2" />
<text  x="171.34" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1079.5" y="1701" width="0.2" height="15.0" fill="rgb(215,105,53)" rx="2" ry="2" />
<text  x="1082.52" y="1711.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (1 samples, 0.02%)</title><rect x="453.1" y="1941" width="0.2" height="15.0" fill="rgb(230,6,23)" rx="2" ry="2" />
<text  x="456.12" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="110.9" y="69" width="0.2" height="15.0" fill="rgb(242,115,31)" rx="2" ry="2" />
<text  x="113.91" y="79.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1121.8" y="1829" width="0.2" height="15.0" fill="rgb(231,172,23)" rx="2" ry="2" />
<text  x="1124.80" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8 samples, 0.14%)</title><rect x="1176.8" y="1989" width="1.6" height="15.0" fill="rgb(215,39,25)" rx="2" ry="2" />
<text  x="1179.84" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="537.3" y="1589" width="0.2" height="15.0" fill="rgb(214,17,24)" rx="2" ry="2" />
<text  x="540.28" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="65.6" y="1941" width="0.2" height="15.0" fill="rgb(227,98,52)" rx="2" ry="2" />
<text  x="68.64" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="909.8" y="1701" width="0.2" height="15.0" fill="rgb(240,179,35)" rx="2" ry="2" />
<text  x="912.81" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="906.8" y="2037" width="0.4" height="15.0" fill="rgb(241,72,19)" rx="2" ry="2" />
<text  x="909.82" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="766.2" y="1557" width="0.2" height="15.0" fill="rgb(253,69,35)" rx="2" ry="2" />
<text  x="769.22" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (80 samples, 1.35%)</title><rect x="978.0" y="2037" width="16.0" height="15.0" fill="rgb(216,33,20)" rx="2" ry="2" />
<text  x="981.01" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="937.1" y="1909" width="0.2" height="15.0" fill="rgb(243,105,50)" rx="2" ry="2" />
<text  x="940.13" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (5 samples, 0.08%)</title><rect x="766.8" y="1701" width="1.0" height="15.0" fill="rgb(228,204,35)" rx="2" ry="2" />
<text  x="769.82" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="204.6" y="1909" width="1.2" height="15.0" fill="rgb(241,18,37)" rx="2" ry="2" />
<text  x="207.64" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="885" width="18.5" height="15.0" fill="rgb(216,63,10)" rx="2" ry="2" />
<text  x="96.36" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="766.2" y="1445" width="0.2" height="15.0" fill="rgb(247,149,24)" rx="2" ry="2" />
<text  x="769.22" y="1455.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="728.9" y="1797" width="0.2" height="15.0" fill="rgb(225,134,18)" rx="2" ry="2" />
<text  x="731.93" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1072.3" y="1861" width="0.2" height="15.0" fill="rgb(219,117,40)" rx="2" ry="2" />
<text  x="1075.34" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="669.3" y="1909" width="0.6" height="15.0" fill="rgb(240,21,49)" rx="2" ry="2" />
<text  x="672.30" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="316.9" y="1893" width="0.4" height="15.0" fill="rgb(210,66,32)" rx="2" ry="2" />
<text  x="319.92" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="809.7" y="1509" width="0.4" height="15.0" fill="rgb(244,66,14)" rx="2" ry="2" />
<text  x="812.70" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.0" y="1765" width="0.2" height="15.0" fill="rgb(225,125,11)" rx="2" ry="2" />
<text  x="844.01" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="855.8" y="1877" width="0.2" height="15.0" fill="rgb(236,159,39)" rx="2" ry="2" />
<text  x="858.76" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (28 samples, 0.47%)</title><rect x="994.6" y="2005" width="5.5" height="15.0" fill="rgb(253,26,42)" rx="2" ry="2" />
<text  x="997.56" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="451.9" y="1973" width="0.2" height="15.0" fill="rgb(237,23,48)" rx="2" ry="2" />
<text  x="454.93" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="60.7" y="1925" width="0.2" height="15.0" fill="rgb(246,1,26)" rx="2" ry="2" />
<text  x="63.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="988.2" y="1605" width="0.2" height="15.0" fill="rgb(242,213,23)" rx="2" ry="2" />
<text  x="991.18" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="396.9" y="1797" width="0.2" height="15.0" fill="rgb(237,205,7)" rx="2" ry="2" />
<text  x="399.89" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="69.4" y="1941" width="0.2" height="15.0" fill="rgb(216,157,9)" rx="2" ry="2" />
<text  x="72.43" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (18 samples, 0.30%)</title><rect x="1110.4" y="1429" width="3.6" height="15.0" fill="rgb(237,197,29)" rx="2" ry="2" />
<text  x="1113.43" y="1439.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="988.2" y="1813" width="0.2" height="15.0" fill="rgb(217,149,54)" rx="2" ry="2" />
<text  x="991.18" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="725.9" y="1813" width="0.2" height="15.0" fill="rgb(250,210,45)" rx="2" ry="2" />
<text  x="728.94" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="87.0" y="1893" width="0.2" height="15.0" fill="rgb(246,103,19)" rx="2" ry="2" />
<text  x="89.98" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="908.4" y="1973" width="0.2" height="15.0" fill="rgb(253,181,43)" rx="2" ry="2" />
<text  x="911.41" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1150.5" y="1957" width="0.2" height="15.0" fill="rgb(221,8,10)" rx="2" ry="2" />
<text  x="1153.51" y="1967.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="840.8" y="1813" width="0.2" height="15.0" fill="rgb(242,96,23)" rx="2" ry="2" />
<text  x="843.81" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (5 samples, 0.08%)</title><rect x="885.1" y="1877" width="1.0" height="15.0" fill="rgb(209,171,41)" rx="2" ry="2" />
<text  x="888.08" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="892.9" y="1909" width="1.0" height="15.0" fill="rgb(219,206,17)" rx="2" ry="2" />
<text  x="895.86" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (6 samples, 0.10%)</title><rect x="892.7" y="1925" width="1.2" height="15.0" fill="rgb(254,211,42)" rx="2" ry="2" />
<text  x="895.66" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1029" width="18.7" height="15.0" fill="rgb(234,189,43)" rx="2" ry="2" />
<text  x="96.16" y="1039.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="513.9" y="1989" width="0.2" height="15.0" fill="rgb(239,225,6)" rx="2" ry="2" />
<text  x="516.95" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="10.2" y="1861" width="1.0" height="15.0" fill="rgb(251,105,11)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="111.3" y="133" width="0.2" height="15.0" fill="rgb(226,72,19)" rx="2" ry="2" />
<text  x="114.31" y="143.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="861.9" y="1781" width="0.2" height="15.0" fill="rgb(221,180,1)" rx="2" ry="2" />
<text  x="864.95" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1118.4" y="1669" width="0.2" height="15.0" fill="rgb(251,228,8)" rx="2" ry="2" />
<text  x="1121.41" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="502.4" y="1829" width="0.4" height="15.0" fill="rgb(206,12,47)" rx="2" ry="2" />
<text  x="505.38" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="257.3" y="1781" width="0.2" height="15.0" fill="rgb(242,145,40)" rx="2" ry="2" />
<text  x="260.29" y="1791.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.03%)</title><rect x="389.7" y="1909" width="0.4" height="15.0" fill="rgb(245,174,17)" rx="2" ry="2" />
<text  x="392.71" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (251 samples, 4.24%)</title><rect x="32.9" y="2005" width="50.1" height="15.0" fill="rgb(248,188,18)" rx="2" ry="2" />
<text  x="35.93" y="2015.5" >folly..</text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (3 samples, 0.05%)</title><rect x="173.3" y="2021" width="0.6" height="15.0" fill="rgb(232,133,10)" rx="2" ry="2" />
<text  x="176.33" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1147.1" y="2005" width="0.2" height="15.0" fill="rgb(227,140,28)" rx="2" ry="2" />
<text  x="1150.12" y="2015.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1152.9" y="2005" width="0.2" height="15.0" fill="rgb(221,176,33)" rx="2" ry="2" />
<text  x="1155.91" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="485.8" y="1893" width="0.4" height="15.0" fill="rgb(250,26,34)" rx="2" ry="2" />
<text  x="488.83" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="725.9" y="1749" width="0.2" height="15.0" fill="rgb(252,93,19)" rx="2" ry="2" />
<text  x="728.94" y="1759.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="975.4" y="1973" width="0.4" height="15.0" fill="rgb(227,74,44)" rx="2" ry="2" />
<text  x="978.42" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="810.3" y="1605" width="0.2" height="15.0" fill="rgb(207,46,30)" rx="2" ry="2" />
<text  x="813.29" y="1615.5" ></text>
</g>
<g >
<title>rb_erase (5 samples, 0.08%)</title><rect x="1114.2" y="1509" width="1.0" height="15.0" fill="rgb(249,94,12)" rx="2" ry="2" />
<text  x="1117.22" y="1519.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (36 samples, 0.61%)</title><rect x="248.1" y="1877" width="7.2" height="15.0" fill="rgb(244,197,45)" rx="2" ry="2" />
<text  x="251.11" y="1887.5" ></text>
</g>
<g >
<title>inet_getname (24 samples, 0.41%)</title><rect x="594.9" y="1861" width="4.8" height="15.0" fill="rgb(212,37,16)" rx="2" ry="2" />
<text  x="597.91" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="167.1" y="1957" width="1.2" height="15.0" fill="rgb(247,183,38)" rx="2" ry="2" />
<text  x="170.15" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1138.3" y="2037" width="0.6" height="15.0" fill="rgb(210,163,18)" rx="2" ry="2" />
<text  x="1141.35" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (33 samples, 0.56%)</title><rect x="405.9" y="2021" width="6.5" height="15.0" fill="rgb(209,215,35)" rx="2" ry="2" />
<text  x="408.86" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.1" y="1941" width="0.2" height="15.0" fill="rgb(243,104,16)" rx="2" ry="2" />
<text  x="943.12" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="972.4" y="1765" width="0.2" height="15.0" fill="rgb(223,136,32)" rx="2" ry="2" />
<text  x="975.43" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="211.0" y="1813" width="0.4" height="15.0" fill="rgb(248,142,3)" rx="2" ry="2" />
<text  x="214.02" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="677" width="18.5" height="15.0" fill="rgb(237,75,4)" rx="2" ry="2" />
<text  x="96.36" y="687.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="529.7" y="1845" width="0.2" height="15.0" fill="rgb(213,197,24)" rx="2" ry="2" />
<text  x="532.70" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="379.7" y="1685" width="0.2" height="15.0" fill="rgb(226,133,50)" rx="2" ry="2" />
<text  x="382.73" y="1695.5" ></text>
</g>
<g >
<title>___sys_sendmsg (405 samples, 6.84%)</title><rect x="233.2" y="1957" width="80.7" height="15.0" fill="rgb(238,76,48)" rx="2" ry="2" />
<text  x="236.16" y="1967.5" >___sys_se..</text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (3 samples, 0.05%)</title><rect x="62.8" y="1925" width="0.6" height="15.0" fill="rgb(250,196,16)" rx="2" ry="2" />
<text  x="65.85" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="978.0" y="2021" width="16.0" height="15.0" fill="rgb(253,137,28)" rx="2" ry="2" />
<text  x="981.01" y="2031.5" ></text>
</g>
<g >
<title>skb_clone (14 samples, 0.24%)</title><rect x="810.7" y="1669" width="2.8" height="15.0" fill="rgb(222,154,32)" rx="2" ry="2" />
<text  x="813.69" y="1679.5" ></text>
</g>
<g >
<title>futex_wait (13 samples, 0.22%)</title><rect x="11.4" y="1973" width="2.6" height="15.0" fill="rgb(225,39,15)" rx="2" ry="2" />
<text  x="14.40" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1118.4" y="1685" width="0.2" height="15.0" fill="rgb(216,94,18)" rx="2" ry="2" />
<text  x="1121.41" y="1695.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="887.7" y="1701" width="0.2" height="15.0" fill="rgb(246,135,8)" rx="2" ry="2" />
<text  x="890.67" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1149.5" y="1989" width="0.2" height="15.0" fill="rgb(243,118,5)" rx="2" ry="2" />
<text  x="1152.52" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (10 samples, 0.17%)</title><rect x="648.4" y="1989" width="2.0" height="15.0" fill="rgb(219,140,48)" rx="2" ry="2" />
<text  x="651.36" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="450.5" y="1685" width="0.2" height="15.0" fill="rgb(239,29,50)" rx="2" ry="2" />
<text  x="453.53" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1105.0" y="1653" width="0.2" height="15.0" fill="rgb(233,91,52)" rx="2" ry="2" />
<text  x="1108.04" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="537.3" y="1781" width="0.2" height="15.0" fill="rgb(250,84,6)" rx="2" ry="2" />
<text  x="540.28" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="110.9" y="181" width="0.2" height="15.0" fill="rgb(241,214,46)" rx="2" ry="2" />
<text  x="113.91" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="767.4" y="1669" width="0.2" height="15.0" fill="rgb(246,99,42)" rx="2" ry="2" />
<text  x="770.42" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="952.9" y="2005" width="0.2" height="15.0" fill="rgb(215,110,30)" rx="2" ry="2" />
<text  x="955.88" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="825.5" y="1653" width="0.1" height="15.0" fill="rgb(254,86,36)" rx="2" ry="2" />
<text  x="828.45" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="766.2" y="1461" width="0.2" height="15.0" fill="rgb(208,148,26)" rx="2" ry="2" />
<text  x="769.22" y="1471.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (30 samples, 0.51%)</title><rect x="800.7" y="1509" width="6.0" height="15.0" fill="rgb(224,60,5)" rx="2" ry="2" />
<text  x="803.72" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="998.4" y="1973" width="0.2" height="15.0" fill="rgb(234,123,49)" rx="2" ry="2" />
<text  x="1001.35" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="687.2" y="1829" width="0.2" height="15.0" fill="rgb(221,127,22)" rx="2" ry="2" />
<text  x="690.25" y="1839.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="251.7" y="1797" width="0.8" height="15.0" fill="rgb(246,97,9)" rx="2" ry="2" />
<text  x="254.70" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1128.0" y="1941" width="0.2" height="15.0" fill="rgb(242,151,23)" rx="2" ry="2" />
<text  x="1130.98" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="537.3" y="1893" width="0.2" height="15.0" fill="rgb(226,164,44)" rx="2" ry="2" />
<text  x="540.28" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (4 samples, 0.07%)</title><rect x="894.3" y="1973" width="0.7" height="15.0" fill="rgb(220,16,37)" rx="2" ry="2" />
<text  x="897.25" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="976.6" y="2037" width="0.6" height="15.0" fill="rgb(225,203,10)" rx="2" ry="2" />
<text  x="979.61" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="170.9" y="1973" width="0.2" height="15.0" fill="rgb(242,131,38)" rx="2" ry="2" />
<text  x="173.94" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (9 samples, 0.15%)</title><rect x="274.0" y="1589" width="1.8" height="15.0" fill="rgb(223,81,12)" rx="2" ry="2" />
<text  x="277.04" y="1599.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="909.8" y="1573" width="0.2" height="15.0" fill="rgb(230,36,4)" rx="2" ry="2" />
<text  x="912.81" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (38 samples, 0.64%)</title><rect x="633.2" y="1973" width="7.6" height="15.0" fill="rgb(213,211,8)" rx="2" ry="2" />
<text  x="636.20" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (7 samples, 0.12%)</title><rect x="63.6" y="1925" width="1.4" height="15.0" fill="rgb(225,194,24)" rx="2" ry="2" />
<text  x="66.65" y="1935.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="295.2" y="1829" width="0.4" height="15.0" fill="rgb(229,191,33)" rx="2" ry="2" />
<text  x="298.18" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="121.3" y="1781" width="0.2" height="15.0" fill="rgb(205,71,39)" rx="2" ry="2" />
<text  x="124.28" y="1791.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="509.0" y="1941" width="0.2" height="15.0" fill="rgb(253,86,12)" rx="2" ry="2" />
<text  x="511.96" y="1951.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="247.5" y="1861" width="0.2" height="15.0" fill="rgb(245,198,44)" rx="2" ry="2" />
<text  x="250.52" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="257.3" y="1685" width="0.2" height="15.0" fill="rgb(251,135,33)" rx="2" ry="2" />
<text  x="260.29" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="623.6" y="2037" width="0.4" height="15.0" fill="rgb(219,39,8)" rx="2" ry="2" />
<text  x="626.63" y="2047.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="275.6" y="1573" width="0.2" height="15.0" fill="rgb(219,131,26)" rx="2" ry="2" />
<text  x="278.63" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.0" y="1941" width="0.2" height="15.0" fill="rgb(228,93,1)" rx="2" ry="2" />
<text  x="74.02" y="1951.5" ></text>
</g>
<g >
<title>bit_waitqueue (2 samples, 0.03%)</title><rect x="743.7" y="1685" width="0.4" height="15.0" fill="rgb(217,66,48)" rx="2" ry="2" />
<text  x="746.69" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="997.8" y="1877" width="0.2" height="15.0" fill="rgb(242,147,22)" rx="2" ry="2" />
<text  x="1000.75" y="1887.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1128.0" y="1573" width="0.2" height="15.0" fill="rgb(212,107,48)" rx="2" ry="2" />
<text  x="1130.98" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="93.4" y="181" width="17.5" height="15.0" fill="rgb(235,159,25)" rx="2" ry="2" />
<text  x="96.36" y="191.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="859.2" y="1717" width="0.2" height="15.0" fill="rgb(226,213,53)" rx="2" ry="2" />
<text  x="862.15" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="915.4" y="1973" width="0.4" height="15.0" fill="rgb(239,160,48)" rx="2" ry="2" />
<text  x="918.39" y="1983.5" ></text>
</g>
<g >
<title>wakeup_source_unregister (1 samples, 0.02%)</title><rect x="484.8" y="1973" width="0.2" height="15.0" fill="rgb(219,6,15)" rx="2" ry="2" />
<text  x="487.83" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="151.0" y="2005" width="0.4" height="15.0" fill="rgb(206,82,16)" rx="2" ry="2" />
<text  x="153.99" y="2015.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="579.0" y="1941" width="0.2" height="15.0" fill="rgb(231,124,5)" rx="2" ry="2" />
<text  x="581.96" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (100 samples, 1.69%)</title><rect x="875.5" y="2005" width="19.9" height="15.0" fill="rgb(239,204,41)" rx="2" ry="2" />
<text  x="878.51" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="469.5" y="1653" width="0.2" height="15.0" fill="rgb(251,208,10)" rx="2" ry="2" />
<text  x="472.48" y="1663.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.03%)</title><rect x="259.3" y="1829" width="0.4" height="15.0" fill="rgb(207,0,12)" rx="2" ry="2" />
<text  x="262.28" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="450.3" y="1733" width="0.4" height="15.0" fill="rgb(244,109,43)" rx="2" ry="2" />
<text  x="453.33" y="1743.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="492.6" y="1973" width="0.2" height="15.0" fill="rgb(229,185,3)" rx="2" ry="2" />
<text  x="495.61" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (87 samples, 1.47%)</title><rect x="510.8" y="2021" width="17.3" height="15.0" fill="rgb(213,109,7)" rx="2" ry="2" />
<text  x="513.76" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="143.0" y="1861" width="0.8" height="15.0" fill="rgb(241,55,16)" rx="2" ry="2" />
<text  x="146.02" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="549" width="18.5" height="15.0" fill="rgb(217,179,26)" rx="2" ry="2" />
<text  x="96.36" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="92.0" y="2005" width="0.2" height="15.0" fill="rgb(206,14,0)" rx="2" ry="2" />
<text  x="94.96" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="110.3" y="53" width="0.2" height="15.0" fill="rgb(210,140,14)" rx="2" ry="2" />
<text  x="113.31" y="63.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1072.1" y="1877" width="0.2" height="15.0" fill="rgb(210,228,46)" rx="2" ry="2" />
<text  x="1075.14" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="120.9" y="1925" width="0.4" height="15.0" fill="rgb(238,36,30)" rx="2" ry="2" />
<text  x="123.88" y="1935.5" ></text>
</g>
<g >
<title>clear_inode (3 samples, 0.05%)</title><rect x="737.3" y="1701" width="0.6" height="15.0" fill="rgb(251,198,28)" rx="2" ry="2" />
<text  x="740.30" y="1711.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="278.2" y="1701" width="0.2" height="15.0" fill="rgb(235,22,22)" rx="2" ry="2" />
<text  x="281.23" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="538.3" y="1797" width="0.2" height="15.0" fill="rgb(210,28,14)" rx="2" ry="2" />
<text  x="541.28" y="1807.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="153.4" y="2005" width="0.2" height="15.0" fill="rgb(248,121,0)" rx="2" ry="2" />
<text  x="156.39" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="538.3" y="1925" width="0.2" height="15.0" fill="rgb(217,187,39)" rx="2" ry="2" />
<text  x="541.28" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="58.1" y="1957" width="0.2" height="15.0" fill="rgb(205,124,42)" rx="2" ry="2" />
<text  x="61.06" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1128.0" y="1925" width="0.2" height="15.0" fill="rgb(217,190,26)" rx="2" ry="2" />
<text  x="1130.98" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="918.0" y="1973" width="0.2" height="15.0" fill="rgb(253,44,22)" rx="2" ry="2" />
<text  x="920.98" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.0" y="1973" width="0.2" height="15.0" fill="rgb(250,18,45)" rx="2" ry="2" />
<text  x="578.97" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="915.6" y="1669" width="0.2" height="15.0" fill="rgb(240,152,49)" rx="2" ry="2" />
<text  x="918.59" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="950.7" y="2005" width="0.2" height="15.0" fill="rgb(246,190,4)" rx="2" ry="2" />
<text  x="953.69" y="2015.5" ></text>
</g>
<g >
<title>skb_entail (19 samples, 0.32%)</title><rect x="255.3" y="1877" width="3.8" height="15.0" fill="rgb(238,183,29)" rx="2" ry="2" />
<text  x="258.29" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="469.5" y="1877" width="0.2" height="15.0" fill="rgb(232,226,31)" rx="2" ry="2" />
<text  x="472.48" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="908.2" y="1973" width="0.2" height="15.0" fill="rgb(217,120,35)" rx="2" ry="2" />
<text  x="911.21" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="168.5" y="1973" width="2.2" height="15.0" fill="rgb(223,144,31)" rx="2" ry="2" />
<text  x="171.54" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="349.4" y="1925" width="0.4" height="15.0" fill="rgb(250,94,8)" rx="2" ry="2" />
<text  x="352.42" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="366.4" y="1941" width="0.4" height="15.0" fill="rgb(219,107,17)" rx="2" ry="2" />
<text  x="369.37" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="55.5" y="1893" width="0.2" height="15.0" fill="rgb(243,46,42)" rx="2" ry="2" />
<text  x="58.47" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="693" width="18.5" height="15.0" fill="rgb(218,81,50)" rx="2" ry="2" />
<text  x="96.36" y="703.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="15.2" y="1845" width="0.2" height="15.0" fill="rgb(224,94,25)" rx="2" ry="2" />
<text  x="18.19" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="164.8" y="1989" width="1.2" height="15.0" fill="rgb(221,43,47)" rx="2" ry="2" />
<text  x="167.75" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="852.8" y="1909" width="0.2" height="15.0" fill="rgb(228,50,14)" rx="2" ry="2" />
<text  x="855.77" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="402.9" y="1749" width="0.2" height="15.0" fill="rgb(212,217,7)" rx="2" ry="2" />
<text  x="405.87" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1079.5" y="1637" width="0.2" height="15.0" fill="rgb(238,213,50)" rx="2" ry="2" />
<text  x="1082.52" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1079.7" y="1845" width="0.2" height="15.0" fill="rgb(253,176,3)" rx="2" ry="2" />
<text  x="1082.72" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="929.2" y="1877" width="0.2" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="932.15" y="1887.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="483.8" y="1973" width="0.2" height="15.0" fill="rgb(210,109,35)" rx="2" ry="2" />
<text  x="486.83" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="162.4" y="1989" width="1.2" height="15.0" fill="rgb(216,16,31)" rx="2" ry="2" />
<text  x="165.36" y="1999.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="846.2" y="1653" width="0.2" height="15.0" fill="rgb(239,97,37)" rx="2" ry="2" />
<text  x="849.19" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="111.1" y="309" width="0.2" height="15.0" fill="rgb(248,35,9)" rx="2" ry="2" />
<text  x="114.11" y="319.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="450.3" y="1749" width="0.4" height="15.0" fill="rgb(213,170,34)" rx="2" ry="2" />
<text  x="453.33" y="1759.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (349 samples, 5.90%)</title><rect x="242.3" y="1893" width="69.6" height="15.0" fill="rgb(250,13,10)" rx="2" ry="2" />
<text  x="245.33" y="1903.5" >tcp_sen..</text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="669.3" y="1605" width="0.4" height="15.0" fill="rgb(253,203,10)" rx="2" ry="2" />
<text  x="672.30" y="1615.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="997.2" y="1925" width="0.6" height="15.0" fill="rgb(241,79,10)" rx="2" ry="2" />
<text  x="1000.16" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1003.3" y="2021" width="0.2" height="15.0" fill="rgb(221,41,18)" rx="2" ry="2" />
<text  x="1006.34" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (27 samples, 0.46%)</title><rect x="51.7" y="1957" width="5.4" height="15.0" fill="rgb(225,139,17)" rx="2" ry="2" />
<text  x="54.68" y="1967.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="967.0" y="2021" width="0.2" height="15.0" fill="rgb(247,85,31)" rx="2" ry="2" />
<text  x="970.04" y="2031.5" ></text>
</g>
<g >
<title>__fdget (28 samples, 0.47%)</title><rect x="445.3" y="1973" width="5.6" height="15.0" fill="rgb(208,34,10)" rx="2" ry="2" />
<text  x="448.35" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (79 samples, 1.34%)</title><rect x="878.1" y="1973" width="15.8" height="15.0" fill="rgb(209,103,40)" rx="2" ry="2" />
<text  x="881.10" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="88.2" y="2021" width="2.0" height="15.0" fill="rgb(249,176,49)" rx="2" ry="2" />
<text  x="91.17" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (13 samples, 0.22%)</title><rect x="26.6" y="1973" width="2.5" height="15.0" fill="rgb(243,43,31)" rx="2" ry="2" />
<text  x="29.55" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="216.0" y="1941" width="0.4" height="15.0" fill="rgb(249,17,1)" rx="2" ry="2" />
<text  x="219.01" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="108.1" y="37" width="0.6" height="15.0" fill="rgb(248,151,38)" rx="2" ry="2" />
<text  x="111.12" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="981.0" y="1973" width="0.2" height="15.0" fill="rgb(224,62,18)" rx="2" ry="2" />
<text  x="984.00" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="316.9" y="1941" width="0.4" height="15.0" fill="rgb(221,139,52)" rx="2" ry="2" />
<text  x="319.92" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="481.2" y="1893" width="0.4" height="15.0" fill="rgb(254,83,16)" rx="2" ry="2" />
<text  x="484.24" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="580.8" y="2005" width="0.2" height="15.0" fill="rgb(230,136,38)" rx="2" ry="2" />
<text  x="583.76" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (107 samples, 1.81%)</title><rect x="37.1" y="1989" width="21.4" height="15.0" fill="rgb(224,222,25)" rx="2" ry="2" />
<text  x="40.12" y="1999.5" >f..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="205.4" y="1813" width="0.2" height="15.0" fill="rgb(218,77,17)" rx="2" ry="2" />
<text  x="208.44" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (10 samples, 0.17%)</title><rect x="528.5" y="2037" width="2.0" height="15.0" fill="rgb(247,86,38)" rx="2" ry="2" />
<text  x="531.51" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="530.1" y="1909" width="0.2" height="15.0" fill="rgb(215,19,2)" rx="2" ry="2" />
<text  x="533.10" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (7 samples, 0.12%)</title><rect x="1006.9" y="2005" width="1.4" height="15.0" fill="rgb(205,133,47)" rx="2" ry="2" />
<text  x="1009.93" y="2015.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (8 samples, 0.14%)</title><rect x="964.1" y="2005" width="1.5" height="15.0" fill="rgb(238,30,40)" rx="2" ry="2" />
<text  x="967.05" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="616.7" y="1973" width="0.6" height="15.0" fill="rgb(240,210,16)" rx="2" ry="2" />
<text  x="619.65" y="1983.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(222,212,41)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="527.9" y="1605" width="0.2" height="15.0" fill="rgb(239,52,49)" rx="2" ry="2" />
<text  x="530.91" y="1615.5" ></text>
</g>
<g >
<title>__sys_sendmsg (415 samples, 7.01%)</title><rect x="232.6" y="1973" width="82.7" height="15.0" fill="rgb(248,154,45)" rx="2" ry="2" />
<text  x="235.56" y="1983.5" >__sys_sen..</text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (2 samples, 0.03%)</title><rect x="584.9" y="1909" width="0.4" height="15.0" fill="rgb(231,144,45)" rx="2" ry="2" />
<text  x="587.94" y="1919.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="10.2" y="1829" width="0.2" height="15.0" fill="rgb(253,112,39)" rx="2" ry="2" />
<text  x="13.20" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="515.1" y="1941" width="0.4" height="15.0" fill="rgb(238,87,14)" rx="2" ry="2" />
<text  x="518.14" y="1951.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="340.8" y="1941" width="0.2" height="15.0" fill="rgb(233,95,19)" rx="2" ry="2" />
<text  x="343.85" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1189.4" y="1845" width="0.2" height="15.0" fill="rgb(226,6,38)" rx="2" ry="2" />
<text  x="1192.40" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="861.9" y="1813" width="0.2" height="15.0" fill="rgb(252,162,44)" rx="2" ry="2" />
<text  x="864.95" y="1823.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="365.2" y="1893" width="0.2" height="15.0" fill="rgb(223,212,45)" rx="2" ry="2" />
<text  x="368.18" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="156.6" y="1893" width="0.2" height="15.0" fill="rgb(250,207,47)" rx="2" ry="2" />
<text  x="159.58" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (1 samples, 0.02%)</title><rect x="523.5" y="1989" width="0.2" height="15.0" fill="rgb(229,159,26)" rx="2" ry="2" />
<text  x="526.52" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (15 samples, 0.25%)</title><rect x="611.5" y="1877" width="3.0" height="15.0" fill="rgb(216,102,4)" rx="2" ry="2" />
<text  x="614.47" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1184.0" y="2005" width="0.4" height="15.0" fill="rgb(237,5,27)" rx="2" ry="2" />
<text  x="1187.02" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="818.1" y="1573" width="0.2" height="15.0" fill="rgb(213,3,45)" rx="2" ry="2" />
<text  x="821.07" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (185 samples, 3.13%)</title><rect x="581.0" y="2037" width="36.8" height="15.0" fill="rgb(235,128,27)" rx="2" ry="2" />
<text  x="583.95" y="2047.5" >fac..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="162.8" y="1925" width="0.4" height="15.0" fill="rgb(226,97,26)" rx="2" ry="2" />
<text  x="165.76" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="357.8" y="1909" width="0.2" height="15.0" fill="rgb(224,227,45)" rx="2" ry="2" />
<text  x="360.80" y="1919.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="162.0" y="2005" width="0.2" height="15.0" fill="rgb(219,150,8)" rx="2" ry="2" />
<text  x="164.96" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="894.5" y="1957" width="0.5" height="15.0" fill="rgb(213,3,21)" rx="2" ry="2" />
<text  x="897.45" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="846.6" y="1541" width="0.2" height="15.0" fill="rgb(218,70,4)" rx="2" ry="2" />
<text  x="849.59" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="859.2" y="1861" width="0.2" height="15.0" fill="rgb(216,107,43)" rx="2" ry="2" />
<text  x="862.15" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.12%)</title><rect x="1182.6" y="2021" width="1.4" height="15.0" fill="rgb(228,208,47)" rx="2" ry="2" />
<text  x="1185.62" y="2031.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1184.8" y="2037" width="0.4" height="15.0" fill="rgb(211,215,27)" rx="2" ry="2" />
<text  x="1187.81" y="2047.5" ></text>
</g>
<g >
<title>tcp_setsockopt (3 samples, 0.05%)</title><rect x="691.4" y="1925" width="0.6" height="15.0" fill="rgb(217,149,54)" rx="2" ry="2" />
<text  x="694.44" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="990.2" y="1909" width="0.2" height="15.0" fill="rgb(225,119,4)" rx="2" ry="2" />
<text  x="993.18" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (9 samples, 0.15%)</title><rect x="142.2" y="1909" width="1.8" height="15.0" fill="rgb(210,116,0)" rx="2" ry="2" />
<text  x="145.22" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="526.7" y="2005" width="0.2" height="15.0" fill="rgb(254,148,5)" rx="2" ry="2" />
<text  x="529.71" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1022.5" y="2037" width="0.2" height="15.0" fill="rgb(214,17,3)" rx="2" ry="2" />
<text  x="1025.48" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="851.8" y="1845" width="0.2" height="15.0" fill="rgb(222,3,32)" rx="2" ry="2" />
<text  x="854.77" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="681.9" y="1845" width="0.2" height="15.0" fill="rgb(205,219,33)" rx="2" ry="2" />
<text  x="684.86" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="350.8" y="1573" width="0.2" height="15.0" fill="rgb(225,171,19)" rx="2" ry="2" />
<text  x="353.82" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="143.8" y="1877" width="0.2" height="15.0" fill="rgb(223,105,17)" rx="2" ry="2" />
<text  x="146.81" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="705.2" y="1877" width="2.0" height="15.0" fill="rgb(252,71,19)" rx="2" ry="2" />
<text  x="708.20" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="311.3" y="1669" width="0.2" height="15.0" fill="rgb(232,113,21)" rx="2" ry="2" />
<text  x="314.33" y="1679.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="485.8" y="1781" width="0.2" height="15.0" fill="rgb(223,101,10)" rx="2" ry="2" />
<text  x="488.83" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1118.4" y="1909" width="0.2" height="15.0" fill="rgb(205,214,38)" rx="2" ry="2" />
<text  x="1121.41" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1000.9" y="1973" width="0.2" height="15.0" fill="rgb(245,2,15)" rx="2" ry="2" />
<text  x="1003.94" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::close (679 samples, 11.48%)</title><rect x="714.0" y="1925" width="135.4" height="15.0" fill="rgb(214,146,23)" rx="2" ry="2" />
<text  x="716.97" y="1935.5" >folly::netops::cl..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="571.2" y="2005" width="0.2" height="15.0" fill="rgb(211,96,7)" rx="2" ry="2" />
<text  x="574.18" y="2015.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.08%)</title><rect x="178.3" y="2021" width="1.0" height="15.0" fill="rgb(212,32,23)" rx="2" ry="2" />
<text  x="181.32" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1127.8" y="2005" width="0.4" height="15.0" fill="rgb(207,27,36)" rx="2" ry="2" />
<text  x="1130.78" y="2015.5" ></text>
</g>
<g >
<title>alloc_inode (2 samples, 0.03%)</title><rect x="367.4" y="1941" width="0.4" height="15.0" fill="rgb(205,124,37)" rx="2" ry="2" />
<text  x="370.37" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.0" y="1749" width="0.2" height="15.0" fill="rgb(242,154,33)" rx="2" ry="2" />
<text  x="844.01" y="1759.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="82.8" y="1989" width="0.2" height="15.0" fill="rgb(242,188,48)" rx="2" ry="2" />
<text  x="85.79" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="687.4" y="1765" width="0.8" height="15.0" fill="rgb(251,83,9)" rx="2" ry="2" />
<text  x="690.45" y="1775.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(230,133,51)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="257.3" y="1765" width="0.2" height="15.0" fill="rgb(244,225,51)" rx="2" ry="2" />
<text  x="260.29" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="35.3" y="1989" width="0.4" height="15.0" fill="rgb(215,118,19)" rx="2" ry="2" />
<text  x="38.33" y="1999.5" ></text>
</g>
<g >
<title>ksize (4 samples, 0.07%)</title><rect x="767.8" y="1701" width="0.8" height="15.0" fill="rgb(253,16,15)" rx="2" ry="2" />
<text  x="770.82" y="1711.5" ></text>
</g>
<g >
<title>tcp_sendmsg (371 samples, 6.27%)</title><rect x="237.9" y="1909" width="74.0" height="15.0" fill="rgb(217,15,50)" rx="2" ry="2" />
<text  x="240.94" y="1919.5" >tcp_send..</text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="461.5" y="1893" width="0.2" height="15.0" fill="rgb(220,74,45)" rx="2" ry="2" />
<text  x="464.50" y="1903.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.02%)</title><rect x="739.1" y="1669" width="0.2" height="15.0" fill="rgb(250,47,50)" rx="2" ry="2" />
<text  x="742.10" y="1679.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="1127.8" y="1941" width="0.2" height="15.0" fill="rgb(242,34,39)" rx="2" ry="2" />
<text  x="1130.78" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1045" width="18.7" height="15.0" fill="rgb(220,197,50)" rx="2" ry="2" />
<text  x="96.16" y="1055.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="63.4" y="1925" width="0.2" height="15.0" fill="rgb(215,22,4)" rx="2" ry="2" />
<text  x="66.45" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="110.1" y="53" width="0.2" height="15.0" fill="rgb(245,134,19)" rx="2" ry="2" />
<text  x="113.11" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1049.6" y="1941" width="0.2" height="15.0" fill="rgb(253,217,13)" rx="2" ry="2" />
<text  x="1052.60" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="84.0" y="2021" width="0.2" height="15.0" fill="rgb(229,198,31)" rx="2" ry="2" />
<text  x="86.99" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="856.8" y="1909" width="0.4" height="15.0" fill="rgb(224,139,27)" rx="2" ry="2" />
<text  x="859.76" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (2 samples, 0.03%)</title><rect x="869.3" y="1989" width="0.4" height="15.0" fill="rgb(228,132,50)" rx="2" ry="2" />
<text  x="872.32" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="850.8" y="1893" width="0.2" height="15.0" fill="rgb(244,156,12)" rx="2" ry="2" />
<text  x="853.78" y="1903.5" ></text>
</g>
<g >
<title>epoll_wait (86 samples, 1.45%)</title><rect x="492.0" y="2037" width="17.2" height="15.0" fill="rgb(212,180,36)" rx="2" ry="2" />
<text  x="495.01" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="527.9" y="1813" width="0.2" height="15.0" fill="rgb(234,112,3)" rx="2" ry="2" />
<text  x="530.91" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="909.8" y="1797" width="0.2" height="15.0" fill="rgb(220,144,21)" rx="2" ry="2" />
<text  x="912.81" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="149.6" y="1893" width="0.2" height="15.0" fill="rgb(224,95,50)" rx="2" ry="2" />
<text  x="152.60" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (15 samples, 0.25%)</title><rect x="26.2" y="1989" width="2.9" height="15.0" fill="rgb(237,154,28)" rx="2" ry="2" />
<text  x="29.15" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="152.6" y="1765" width="0.2" height="15.0" fill="rgb(223,55,13)" rx="2" ry="2" />
<text  x="155.59" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="92.2" y="2005" width="0.2" height="15.0" fill="rgb(235,195,0)" rx="2" ry="2" />
<text  x="95.16" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="899.2" y="1941" width="0.2" height="15.0" fill="rgb(206,123,25)" rx="2" ry="2" />
<text  x="902.24" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="653.5" y="1989" width="0.2" height="15.0" fill="rgb(252,160,1)" rx="2" ry="2" />
<text  x="656.55" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="119.5" y="1989" width="0.2" height="15.0" fill="rgb(238,50,18)" rx="2" ry="2" />
<text  x="122.48" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="972.4" y="2021" width="0.2" height="15.0" fill="rgb(219,52,26)" rx="2" ry="2" />
<text  x="975.43" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (37 samples, 0.63%)</title><rect x="929.9" y="1957" width="7.4" height="15.0" fill="rgb(207,85,11)" rx="2" ry="2" />
<text  x="932.95" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="625.6" y="2005" width="1.0" height="15.0" fill="rgb(228,43,20)" rx="2" ry="2" />
<text  x="628.63" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1317" width="19.3" height="15.0" fill="rgb(246,160,2)" rx="2" ry="2" />
<text  x="96.16" y="1327.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="110.3" y="37" width="0.2" height="15.0" fill="rgb(249,59,23)" rx="2" ry="2" />
<text  x="113.31" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1152.7" y="2005" width="0.2" height="15.0" fill="rgb(239,218,29)" rx="2" ry="2" />
<text  x="1155.71" y="2015.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="238.9" y="1861" width="0.2" height="15.0" fill="rgb(235,113,13)" rx="2" ry="2" />
<text  x="241.94" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="166.2" y="1957" width="0.1" height="15.0" fill="rgb(230,57,17)" rx="2" ry="2" />
<text  x="169.15" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="565.0" y="1941" width="0.6" height="15.0" fill="rgb(208,11,43)" rx="2" ry="2" />
<text  x="568.00" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="975.0" y="1989" width="1.4" height="15.0" fill="rgb(238,82,46)" rx="2" ry="2" />
<text  x="978.02" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="58.1" y="1925" width="0.2" height="15.0" fill="rgb(205,184,22)" rx="2" ry="2" />
<text  x="61.06" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="14.0" y="2037" width="0.2" height="15.0" fill="rgb(226,166,44)" rx="2" ry="2" />
<text  x="16.99" y="2047.5" ></text>
</g>
<g >
<title>__kfree_skb (29 samples, 0.49%)</title><rect x="1108.4" y="1509" width="5.8" height="15.0" fill="rgb(242,185,42)" rx="2" ry="2" />
<text  x="1111.44" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="535.1" y="1973" width="1.2" height="15.0" fill="rgb(224,139,3)" rx="2" ry="2" />
<text  x="538.09" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="396.9" y="1765" width="0.2" height="15.0" fill="rgb(248,224,53)" rx="2" ry="2" />
<text  x="399.89" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (10 samples, 0.17%)</title><rect x="213.2" y="1925" width="2.0" height="15.0" fill="rgb(219,103,20)" rx="2" ry="2" />
<text  x="216.21" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="890.3" y="1957" width="0.2" height="15.0" fill="rgb(220,129,3)" rx="2" ry="2" />
<text  x="893.26" y="1967.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="788.0" y="1557" width="0.2" height="15.0" fill="rgb(217,3,42)" rx="2" ry="2" />
<text  x="790.96" y="1567.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="108.1" y="53" width="0.8" height="15.0" fill="rgb(207,74,21)" rx="2" ry="2" />
<text  x="111.12" y="63.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="546.1" y="1877" width="0.6" height="15.0" fill="rgb(239,49,41)" rx="2" ry="2" />
<text  x="549.06" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="124.9" y="1941" width="0.6" height="15.0" fill="rgb(223,155,17)" rx="2" ry="2" />
<text  x="127.87" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="612.3" y="1845" width="0.2" height="15.0" fill="rgb(218,131,21)" rx="2" ry="2" />
<text  x="615.26" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (115 samples, 1.94%)</title><rect x="195.7" y="2037" width="22.9" height="15.0" fill="rgb(205,148,20)" rx="2" ry="2" />
<text  x="198.67" y="2047.5" >_..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="862.5" y="1909" width="0.2" height="15.0" fill="rgb(242,56,12)" rx="2" ry="2" />
<text  x="865.54" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="861.7" y="1893" width="0.2" height="15.0" fill="rgb(212,10,29)" rx="2" ry="2" />
<text  x="864.75" y="1903.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="577.6" y="1941" width="0.2" height="15.0" fill="rgb(241,222,30)" rx="2" ry="2" />
<text  x="580.56" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="77.6" y="1637" width="0.2" height="15.0" fill="rgb(242,204,18)" rx="2" ry="2" />
<text  x="80.61" y="1647.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="161.6" y="1989" width="0.2" height="15.0" fill="rgb(245,224,31)" rx="2" ry="2" />
<text  x="164.56" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="540.7" y="1909" width="1.0" height="15.0" fill="rgb(232,138,25)" rx="2" ry="2" />
<text  x="543.67" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1189.4" y="2005" width="0.2" height="15.0" fill="rgb(243,105,32)" rx="2" ry="2" />
<text  x="1192.40" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (8 samples, 0.14%)</title><rect x="916.6" y="1989" width="1.6" height="15.0" fill="rgb(245,67,22)" rx="2" ry="2" />
<text  x="919.59" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1083.5" y="1845" width="0.2" height="15.0" fill="rgb(207,18,2)" rx="2" ry="2" />
<text  x="1086.51" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="574.2" y="1973" width="0.8" height="15.0" fill="rgb(252,150,37)" rx="2" ry="2" />
<text  x="577.17" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="92.0" y="1989" width="0.2" height="15.0" fill="rgb(253,37,12)" rx="2" ry="2" />
<text  x="94.96" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="970.4" y="1973" width="0.2" height="15.0" fill="rgb(213,146,40)" rx="2" ry="2" />
<text  x="973.43" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="486.0" y="1829" width="0.2" height="15.0" fill="rgb(242,174,2)" rx="2" ry="2" />
<text  x="489.03" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="77.0" y="1925" width="0.2" height="15.0" fill="rgb(230,59,13)" rx="2" ry="2" />
<text  x="80.01" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="783.2" y="1605" width="0.2" height="15.0" fill="rgb(209,38,40)" rx="2" ry="2" />
<text  x="786.17" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="610.7" y="1397" width="0.2" height="15.0" fill="rgb(226,206,8)" rx="2" ry="2" />
<text  x="613.67" y="1407.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="669.3" y="1845" width="0.6" height="15.0" fill="rgb(213,3,35)" rx="2" ry="2" />
<text  x="672.30" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="894.3" y="1909" width="0.2" height="15.0" fill="rgb(223,67,41)" rx="2" ry="2" />
<text  x="897.25" y="1919.5" ></text>
</g>
<g >
<title>down_write (3 samples, 0.05%)</title><rect x="752.5" y="1765" width="0.6" height="15.0" fill="rgb(233,194,53)" rx="2" ry="2" />
<text  x="755.46" y="1775.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="244.7" y="1861" width="0.2" height="15.0" fill="rgb(233,8,33)" rx="2" ry="2" />
<text  x="247.72" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="861.3" y="1893" width="0.4" height="15.0" fill="rgb(247,140,23)" rx="2" ry="2" />
<text  x="864.35" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="704.6" y="1861" width="0.2" height="15.0" fill="rgb(211,80,29)" rx="2" ry="2" />
<text  x="707.60" y="1871.5" ></text>
</g>
<g >
<title>sock_alloc (77 samples, 1.30%)</title><rect x="366.8" y="1957" width="15.3" height="15.0" fill="rgb(242,170,49)" rx="2" ry="2" />
<text  x="369.77" y="1967.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="814.3" y="1653" width="0.2" height="15.0" fill="rgb(252,94,15)" rx="2" ry="2" />
<text  x="817.28" y="1663.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9 samples, 0.15%)</title><rect x="939.1" y="1973" width="1.8" height="15.0" fill="rgb(222,6,24)" rx="2" ry="2" />
<text  x="942.12" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="134.2" y="1893" width="0.2" height="15.0" fill="rgb(214,116,10)" rx="2" ry="2" />
<text  x="137.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="997" width="18.7" height="15.0" fill="rgb(219,146,23)" rx="2" ry="2" />
<text  x="96.16" y="1007.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="970.4" y="1701" width="0.2" height="15.0" fill="rgb(245,163,5)" rx="2" ry="2" />
<text  x="973.43" y="1711.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.02%)</title><rect x="322.9" y="1877" width="0.2" height="15.0" fill="rgb(206,142,11)" rx="2" ry="2" />
<text  x="325.90" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="365.0" y="1909" width="0.2" height="15.0" fill="rgb(232,24,5)" rx="2" ry="2" />
<text  x="367.98" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1083.5" y="1797" width="0.2" height="15.0" fill="rgb(244,159,25)" rx="2" ry="2" />
<text  x="1086.51" y="1807.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="482.0" y="1973" width="0.2" height="15.0" fill="rgb(242,124,22)" rx="2" ry="2" />
<text  x="485.04" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="152.6" y="1845" width="0.2" height="15.0" fill="rgb(214,212,11)" rx="2" ry="2" />
<text  x="155.59" y="1855.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="758.0" y="1733" width="1.4" height="15.0" fill="rgb(250,115,18)" rx="2" ry="2" />
<text  x="761.04" y="1743.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (1 samples, 0.02%)</title><rect x="338.9" y="1957" width="0.2" height="15.0" fill="rgb(242,25,46)" rx="2" ry="2" />
<text  x="341.85" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="205.0" y="1845" width="0.6" height="15.0" fill="rgb(225,66,24)" rx="2" ry="2" />
<text  x="208.04" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="654.5" y="2005" width="0.2" height="15.0" fill="rgb(205,5,52)" rx="2" ry="2" />
<text  x="657.54" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="915.6" y="1701" width="0.2" height="15.0" fill="rgb(238,97,53)" rx="2" ry="2" />
<text  x="918.59" y="1711.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="53.3" y="1925" width="0.2" height="15.0" fill="rgb(207,30,14)" rx="2" ry="2" />
<text  x="56.28" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (14 samples, 0.24%)</title><rect x="1149.5" y="2021" width="2.8" height="15.0" fill="rgb(245,52,9)" rx="2" ry="2" />
<text  x="1152.52" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="747.5" y="1749" width="0.2" height="15.0" fill="rgb(244,18,51)" rx="2" ry="2" />
<text  x="750.48" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1189.4" y="1925" width="0.2" height="15.0" fill="rgb(226,159,48)" rx="2" ry="2" />
<text  x="1192.40" y="1935.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.02%)</title><rect x="398.9" y="1909" width="0.2" height="15.0" fill="rgb(216,38,32)" rx="2" ry="2" />
<text  x="401.88" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.6" y="1989" width="0.2" height="15.0" fill="rgb(232,31,29)" rx="2" ry="2" />
<text  x="163.57" y="1999.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="76.8" y="1925" width="0.2" height="15.0" fill="rgb(241,184,18)" rx="2" ry="2" />
<text  x="79.81" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="340.6" y="1941" width="0.2" height="15.0" fill="rgb(252,194,5)" rx="2" ry="2" />
<text  x="343.65" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="887.7" y="1861" width="0.2" height="15.0" fill="rgb(227,116,50)" rx="2" ry="2" />
<text  x="890.67" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4 samples, 0.07%)</title><rect x="997.0" y="1957" width="0.8" height="15.0" fill="rgb(225,132,11)" rx="2" ry="2" />
<text  x="999.96" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="963.1" y="2021" width="1.0" height="15.0" fill="rgb(253,205,14)" rx="2" ry="2" />
<text  x="966.05" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1017.1" y="1877" width="0.4" height="15.0" fill="rgb(225,45,25)" rx="2" ry="2" />
<text  x="1020.10" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="149.6" y="1957" width="0.2" height="15.0" fill="rgb(221,21,10)" rx="2" ry="2" />
<text  x="152.60" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="105.9" y="37" width="0.4" height="15.0" fill="rgb(228,15,4)" rx="2" ry="2" />
<text  x="108.92" y="47.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1138.3" y="2053" width="1.0" height="15.0" fill="rgb(234,6,12)" rx="2" ry="2" />
<text  x="1141.35" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="565.4" y="1717" width="0.2" height="15.0" fill="rgb(253,3,41)" rx="2" ry="2" />
<text  x="568.40" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (1 samples, 0.02%)</title><rect x="903.2" y="1973" width="0.2" height="15.0" fill="rgb(241,72,46)" rx="2" ry="2" />
<text  x="906.23" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="732.7" y="1733" width="1.2" height="15.0" fill="rgb(220,171,20)" rx="2" ry="2" />
<text  x="735.72" y="1743.5" ></text>
</g>
<g >
<title>event_del_nolock_ (5 samples, 0.08%)</title><rect x="89.2" y="2005" width="1.0" height="15.0" fill="rgb(244,66,43)" rx="2" ry="2" />
<text  x="92.17" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="565.0" y="1973" width="0.6" height="15.0" fill="rgb(213,179,18)" rx="2" ry="2" />
<text  x="568.00" y="1983.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="768.6" y="1701" width="0.2" height="15.0" fill="rgb(212,194,4)" rx="2" ry="2" />
<text  x="771.61" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="669.5" y="1525" width="0.2" height="15.0" fill="rgb(224,186,49)" rx="2" ry="2" />
<text  x="672.50" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="177.9" y="1957" width="0.2" height="15.0" fill="rgb(219,123,45)" rx="2" ry="2" />
<text  x="180.92" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1105.0" y="1605" width="0.2" height="15.0" fill="rgb(205,53,1)" rx="2" ry="2" />
<text  x="1108.04" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="527.9" y="1749" width="0.2" height="15.0" fill="rgb(218,126,49)" rx="2" ry="2" />
<text  x="530.91" y="1759.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="687.4" y="1749" width="0.2" height="15.0" fill="rgb(242,18,33)" rx="2" ry="2" />
<text  x="690.45" y="1759.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="259.1" y="1877" width="0.2" height="15.0" fill="rgb(251,95,40)" rx="2" ry="2" />
<text  x="262.08" y="1887.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (56 samples, 0.95%)</title><rect x="661.5" y="1957" width="11.2" height="15.0" fill="rgb(207,171,10)" rx="2" ry="2" />
<text  x="664.52" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (66 samples, 1.12%)</title><rect x="1154.9" y="2037" width="13.2" height="15.0" fill="rgb(222,89,44)" rx="2" ry="2" />
<text  x="1157.90" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="924.8" y="1909" width="0.2" height="15.0" fill="rgb(250,163,26)" rx="2" ry="2" />
<text  x="927.76" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="785.4" y="1589" width="0.6" height="15.0" fill="rgb(236,182,35)" rx="2" ry="2" />
<text  x="788.37" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="861.9" y="1893" width="0.2" height="15.0" fill="rgb(225,0,8)" rx="2" ry="2" />
<text  x="864.95" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (3 samples, 0.05%)</title><rect x="919.0" y="2005" width="0.6" height="15.0" fill="rgb(206,144,3)" rx="2" ry="2" />
<text  x="921.98" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="1149.7" y="1989" width="0.4" height="15.0" fill="rgb(237,198,1)" rx="2" ry="2" />
<text  x="1152.72" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 2.04%)</title><rect x="93.0" y="1973" width="24.1" height="15.0" fill="rgb(219,96,51)" rx="2" ry="2" />
<text  x="95.96" y="1983.5" >[..</text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="121.3" y="1669" width="0.2" height="15.0" fill="rgb(242,79,36)" rx="2" ry="2" />
<text  x="124.28" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="527.9" y="1893" width="0.2" height="15.0" fill="rgb(228,49,29)" rx="2" ry="2" />
<text  x="530.91" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (125 samples, 2.11%)</title><rect x="582.0" y="1973" width="24.9" height="15.0" fill="rgb(205,65,40)" rx="2" ry="2" />
<text  x="584.95" y="1983.5" >f..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="107.5" y="37" width="0.2" height="15.0" fill="rgb(215,98,29)" rx="2" ry="2" />
<text  x="110.52" y="47.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="692.6" y="1973" width="2.8" height="15.0" fill="rgb(222,110,33)" rx="2" ry="2" />
<text  x="695.63" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (1 samples, 0.02%)</title><rect x="21.6" y="2005" width="0.2" height="15.0" fill="rgb(213,185,34)" rx="2" ry="2" />
<text  x="24.57" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="1183.0" y="2005" width="0.6" height="15.0" fill="rgb(253,35,13)" rx="2" ry="2" />
<text  x="1186.02" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (782 samples, 13.22%)</title><rect x="709.8" y="1973" width="155.9" height="15.0" fill="rgb(240,14,2)" rx="2" ry="2" />
<text  x="712.78" y="1983.5" >folly::AsyncSocket::..</text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="965" width="18.5" height="15.0" fill="rgb(243,24,27)" rx="2" ry="2" />
<text  x="96.36" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="350.8" y="1685" width="0.2" height="15.0" fill="rgb(214,16,14)" rx="2" ry="2" />
<text  x="353.82" y="1695.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="14.4" y="1973" width="1.0" height="15.0" fill="rgb(212,77,28)" rx="2" ry="2" />
<text  x="17.39" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1118.4" y="1749" width="0.2" height="15.0" fill="rgb(243,63,43)" rx="2" ry="2" />
<text  x="1121.41" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (21 samples, 0.35%)</title><rect x="704.2" y="1957" width="4.2" height="15.0" fill="rgb(215,200,41)" rx="2" ry="2" />
<text  x="707.20" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="757.4" y="1733" width="0.4" height="15.0" fill="rgb(243,165,49)" rx="2" ry="2" />
<text  x="760.45" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="915.6" y="1765" width="0.2" height="15.0" fill="rgb(217,218,48)" rx="2" ry="2" />
<text  x="918.59" y="1775.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="971.4" y="2005" width="0.8" height="15.0" fill="rgb(248,208,5)" rx="2" ry="2" />
<text  x="974.43" y="2015.5" ></text>
</g>
<g >
<title>____fput (568 samples, 9.60%)</title><rect x="727.9" y="1829" width="113.3" height="15.0" fill="rgb(246,138,18)" rx="2" ry="2" />
<text  x="730.93" y="1839.5" >____fput</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="924.8" y="1941" width="0.2" height="15.0" fill="rgb(252,26,46)" rx="2" ry="2" />
<text  x="927.76" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="388.7" y="1893" width="0.4" height="15.0" fill="rgb(238,224,47)" rx="2" ry="2" />
<text  x="391.71" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (4 samples, 0.07%)</title><rect x="922.6" y="1989" width="0.8" height="15.0" fill="rgb(223,134,42)" rx="2" ry="2" />
<text  x="925.57" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="154.8" y="1957" width="0.2" height="15.0" fill="rgb(228,178,38)" rx="2" ry="2" />
<text  x="157.78" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="988.2" y="1845" width="0.2" height="15.0" fill="rgb(247,129,28)" rx="2" ry="2" />
<text  x="991.18" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.32%)</title><rect x="958.3" y="2005" width="3.8" height="15.0" fill="rgb(241,40,24)" rx="2" ry="2" />
<text  x="961.27" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="468.5" y="1925" width="1.0" height="15.0" fill="rgb(240,220,27)" rx="2" ry="2" />
<text  x="471.48" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (13 samples, 0.22%)</title><rect x="11.4" y="1845" width="2.6" height="15.0" fill="rgb(223,207,14)" rx="2" ry="2" />
<text  x="14.40" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="700.0" y="1989" width="0.2" height="15.0" fill="rgb(206,27,34)" rx="2" ry="2" />
<text  x="703.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (8 samples, 0.14%)</title><rect x="1117.4" y="1925" width="1.6" height="15.0" fill="rgb(218,91,4)" rx="2" ry="2" />
<text  x="1120.41" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1071.5" y="1845" width="0.2" height="15.0" fill="rgb(239,155,50)" rx="2" ry="2" />
<text  x="1074.54" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="273.4" y="1653" width="0.2" height="15.0" fill="rgb(217,154,19)" rx="2" ry="2" />
<text  x="276.44" y="1663.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="373.0" y="1893" width="0.2" height="15.0" fill="rgb(254,199,36)" rx="2" ry="2" />
<text  x="375.95" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="279.0" y="1669" width="0.6" height="15.0" fill="rgb(212,103,19)" rx="2" ry="2" />
<text  x="282.02" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (1 samples, 0.02%)</title><rect x="218.4" y="2005" width="0.2" height="15.0" fill="rgb(233,161,8)" rx="2" ry="2" />
<text  x="221.40" y="2015.5" ></text>
</g>
<g >
<title>free (6 samples, 0.10%)</title><rect x="151.6" y="2005" width="1.2" height="15.0" fill="rgb(245,213,24)" rx="2" ry="2" />
<text  x="154.59" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="81.8" y="1733" width="0.2" height="15.0" fill="rgb(235,68,31)" rx="2" ry="2" />
<text  x="84.79" y="1743.5" ></text>
</g>
<g >
<title>skb_release_head_state (28 samples, 0.47%)</title><rect x="1079.9" y="1893" width="5.6" height="15.0" fill="rgb(239,64,5)" rx="2" ry="2" />
<text  x="1082.92" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (14 samples, 0.24%)</title><rect x="608.1" y="1893" width="2.8" height="15.0" fill="rgb(207,66,39)" rx="2" ry="2" />
<text  x="611.08" y="1903.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (21 samples, 0.35%)</title><rect x="157.6" y="2005" width="4.2" height="15.0" fill="rgb(246,103,49)" rx="2" ry="2" />
<text  x="160.57" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (220 samples, 3.72%)</title><rect x="771.4" y="1685" width="43.9" height="15.0" fill="rgb(232,62,45)" rx="2" ry="2" />
<text  x="774.41" y="1695.5" >__tc..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="11.4" y="1829" width="0.2" height="15.0" fill="rgb(216,31,35)" rx="2" ry="2" />
<text  x="14.40" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="610.7" y="1781" width="0.2" height="15.0" fill="rgb(225,177,18)" rx="2" ry="2" />
<text  x="613.67" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="747.5" y="1669" width="0.2" height="15.0" fill="rgb(249,176,3)" rx="2" ry="2" />
<text  x="750.48" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="255.1" y="1813" width="0.2" height="15.0" fill="rgb(209,94,19)" rx="2" ry="2" />
<text  x="258.09" y="1823.5" ></text>
</g>
<g >
<title>import_single_range (5 samples, 0.08%)</title><rect x="1052.8" y="1973" width="1.0" height="15.0" fill="rgb(232,161,22)" rx="2" ry="2" />
<text  x="1055.80" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="825.5" y="1621" width="0.1" height="15.0" fill="rgb(243,137,12)" rx="2" ry="2" />
<text  x="828.45" y="1631.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="771.2" y="1685" width="0.2" height="15.0" fill="rgb(216,37,4)" rx="2" ry="2" />
<text  x="774.21" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (2 samples, 0.03%)</title><rect x="123.5" y="1925" width="0.4" height="15.0" fill="rgb(209,203,40)" rx="2" ry="2" />
<text  x="126.47" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="675.1" y="1813" width="0.8" height="15.0" fill="rgb(210,6,15)" rx="2" ry="2" />
<text  x="678.08" y="1823.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="778.0" y="1653" width="0.4" height="15.0" fill="rgb(220,210,23)" rx="2" ry="2" />
<text  x="780.99" y="1663.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="615.7" y="1845" width="0.8" height="15.0" fill="rgb(232,177,18)" rx="2" ry="2" />
<text  x="618.65" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1105.0" y="1797" width="0.2" height="15.0" fill="rgb(224,100,45)" rx="2" ry="2" />
<text  x="1108.04" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="111.3" y="341" width="0.2" height="15.0" fill="rgb(217,209,24)" rx="2" ry="2" />
<text  x="114.31" y="351.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (15 samples, 0.25%)</title><rect x="607.9" y="1909" width="3.0" height="15.0" fill="rgb(240,36,47)" rx="2" ry="2" />
<text  x="610.88" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="172.3" y="1941" width="0.4" height="15.0" fill="rgb(217,171,3)" rx="2" ry="2" />
<text  x="175.33" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="81.8" y="1877" width="0.2" height="15.0" fill="rgb(230,227,15)" rx="2" ry="2" />
<text  x="84.79" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="1148.7" y="2053" width="0.4" height="15.0" fill="rgb(250,58,32)" rx="2" ry="2" />
<text  x="1151.72" y="2063.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="675.1" y="1909" width="0.8" height="15.0" fill="rgb(232,52,7)" rx="2" ry="2" />
<text  x="678.08" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1118.4" y="1877" width="0.2" height="15.0" fill="rgb(224,11,11)" rx="2" ry="2" />
<text  x="1121.41" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (2 samples, 0.03%)</title><rect x="1154.5" y="2053" width="0.4" height="15.0" fill="rgb(209,201,43)" rx="2" ry="2" />
<text  x="1157.50" y="2063.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1118.6" y="1893" width="0.2" height="15.0" fill="rgb(254,163,29)" rx="2" ry="2" />
<text  x="1121.61" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1189.4" y="1989" width="0.2" height="15.0" fill="rgb(252,208,27)" rx="2" ry="2" />
<text  x="1192.40" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="482.8" y="1925" width="0.2" height="15.0" fill="rgb(244,159,35)" rx="2" ry="2" />
<text  x="485.84" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="697.0" y="1893" width="0.2" height="15.0" fill="rgb(226,150,17)" rx="2" ry="2" />
<text  x="700.02" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="936.7" y="1701" width="0.2" height="15.0" fill="rgb(241,221,14)" rx="2" ry="2" />
<text  x="939.73" y="1711.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (2 samples, 0.03%)</title><rect x="366.4" y="1925" width="0.4" height="15.0" fill="rgb(254,62,15)" rx="2" ry="2" />
<text  x="369.37" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7 samples, 0.12%)</title><rect x="758.0" y="1717" width="1.4" height="15.0" fill="rgb(251,178,47)" rx="2" ry="2" />
<text  x="761.04" y="1727.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="537.3" y="1573" width="0.2" height="15.0" fill="rgb(211,21,49)" rx="2" ry="2" />
<text  x="540.28" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="900.0" y="2005" width="0.2" height="15.0" fill="rgb(237,10,3)" rx="2" ry="2" />
<text  x="903.04" y="2015.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="864.3" y="1941" width="0.2" height="15.0" fill="rgb(231,178,37)" rx="2" ry="2" />
<text  x="867.34" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="997.8" y="1941" width="0.2" height="15.0" fill="rgb(214,47,18)" rx="2" ry="2" />
<text  x="1000.75" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1121.8" y="1861" width="0.2" height="15.0" fill="rgb(244,153,21)" rx="2" ry="2" />
<text  x="1124.80" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="785.6" y="1429" width="0.4" height="15.0" fill="rgb(224,46,26)" rx="2" ry="2" />
<text  x="788.57" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (7 samples, 0.12%)</title><rect x="905.4" y="2037" width="1.4" height="15.0" fill="rgb(217,72,54)" rx="2" ry="2" />
<text  x="908.42" y="2047.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="152.6" y="1701" width="0.2" height="15.0" fill="rgb(240,76,36)" rx="2" ry="2" />
<text  x="155.59" y="1711.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1118.4" y="1621" width="0.2" height="15.0" fill="rgb(226,125,9)" rx="2" ry="2" />
<text  x="1121.41" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="669.3" y="1765" width="0.6" height="15.0" fill="rgb(207,102,54)" rx="2" ry="2" />
<text  x="672.30" y="1775.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="538.1" y="1957" width="0.2" height="15.0" fill="rgb(209,127,17)" rx="2" ry="2" />
<text  x="541.08" y="1967.5" ></text>
</g>
<g >
<title>check_stack_object (4 samples, 0.07%)</title><rect x="1099.7" y="1909" width="0.8" height="15.0" fill="rgb(236,103,21)" rx="2" ry="2" />
<text  x="1102.66" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1189.4" y="1701" width="0.2" height="15.0" fill="rgb(245,182,12)" rx="2" ry="2" />
<text  x="1192.40" y="1711.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1008.7" y="1989" width="0.4" height="15.0" fill="rgb(218,194,35)" rx="2" ry="2" />
<text  x="1011.72" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="971.4" y="1989" width="0.8" height="15.0" fill="rgb(225,142,21)" rx="2" ry="2" />
<text  x="974.43" y="1999.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="613.3" y="1813" width="0.2" height="15.0" fill="rgb(221,28,38)" rx="2" ry="2" />
<text  x="616.26" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="554.4" y="1941" width="0.2" height="15.0" fill="rgb(214,157,52)" rx="2" ry="2" />
<text  x="557.43" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="978.6" y="1973" width="0.2" height="15.0" fill="rgb(227,4,47)" rx="2" ry="2" />
<text  x="981.61" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.08%)</title><rect x="846.0" y="1861" width="1.0" height="15.0" fill="rgb(206,66,28)" rx="2" ry="2" />
<text  x="848.99" y="1871.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="517.1" y="1957" width="0.6" height="15.0" fill="rgb(237,13,54)" rx="2" ry="2" />
<text  x="520.14" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1079.5" y="1493" width="0.2" height="15.0" fill="rgb(206,185,8)" rx="2" ry="2" />
<text  x="1082.52" y="1503.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="47.3" y="1909" width="0.4" height="15.0" fill="rgb(221,126,53)" rx="2" ry="2" />
<text  x="50.29" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="1017.3" y="1717" width="0.2" height="15.0" fill="rgb(228,124,10)" rx="2" ry="2" />
<text  x="1020.30" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="852.8" y="1765" width="0.2" height="15.0" fill="rgb(207,97,17)" rx="2" ry="2" />
<text  x="855.77" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="111.5" y="277" width="0.2" height="15.0" fill="rgb(209,158,15)" rx="2" ry="2" />
<text  x="114.51" y="287.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1105.0" y="1845" width="0.4" height="15.0" fill="rgb(217,68,33)" rx="2" ry="2" />
<text  x="1108.04" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1150.7" y="1829" width="0.2" height="15.0" fill="rgb(253,179,14)" rx="2" ry="2" />
<text  x="1153.71" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="956.5" y="1989" width="0.2" height="15.0" fill="rgb(210,24,16)" rx="2" ry="2" />
<text  x="959.47" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="81.8" y="1765" width="0.2" height="15.0" fill="rgb(230,3,13)" rx="2" ry="2" />
<text  x="84.79" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (7 samples, 0.12%)</title><rect x="890.5" y="1941" width="1.4" height="15.0" fill="rgb(245,178,27)" rx="2" ry="2" />
<text  x="893.46" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="789" width="18.5" height="15.0" fill="rgb(229,29,23)" rx="2" ry="2" />
<text  x="96.36" y="799.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="725.9" y="1829" width="0.2" height="15.0" fill="rgb(245,84,34)" rx="2" ry="2" />
<text  x="728.94" y="1839.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.02%)</title><rect x="92.0" y="1941" width="0.2" height="15.0" fill="rgb(211,129,33)" rx="2" ry="2" />
<text  x="94.96" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (5 samples, 0.08%)</title><rect x="615.5" y="1989" width="1.0" height="15.0" fill="rgb(220,165,6)" rx="2" ry="2" />
<text  x="618.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::readDataAvailable (1 samples, 0.02%)</title><rect x="34.7" y="1989" width="0.2" height="15.0" fill="rgb(222,102,22)" rx="2" ry="2" />
<text  x="37.73" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="623.0" y="1925" width="0.4" height="15.0" fill="rgb(232,36,11)" rx="2" ry="2" />
<text  x="626.03" y="1935.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (2 samples, 0.03%)</title><rect x="577.8" y="1957" width="0.4" height="15.0" fill="rgb(212,56,9)" rx="2" ry="2" />
<text  x="580.76" y="1967.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="1049.4" y="1925" width="0.2" height="15.0" fill="rgb(206,80,48)" rx="2" ry="2" />
<text  x="1052.41" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="948.7" y="1893" width="0.2" height="15.0" fill="rgb(226,218,48)" rx="2" ry="2" />
<text  x="951.70" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="766.4" y="1685" width="0.2" height="15.0" fill="rgb(242,153,42)" rx="2" ry="2" />
<text  x="769.42" y="1695.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="14.2" y="2069" width="1.2" height="15.0" fill="rgb(245,63,51)" rx="2" ry="2" />
<text  x="17.19" y="2079.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="132.2" y="1877" width="0.2" height="15.0" fill="rgb(227,120,23)" rx="2" ry="2" />
<text  x="135.25" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="565.2" y="1765" width="0.4" height="15.0" fill="rgb(209,112,35)" rx="2" ry="2" />
<text  x="568.20" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="909.8" y="1829" width="0.2" height="15.0" fill="rgb(242,11,41)" rx="2" ry="2" />
<text  x="912.81" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="300.6" y="1749" width="0.2" height="15.0" fill="rgb(221,15,30)" rx="2" ry="2" />
<text  x="303.56" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (49 samples, 0.83%)</title><rect x="1106.8" y="1605" width="9.8" height="15.0" fill="rgb(209,136,4)" rx="2" ry="2" />
<text  x="1109.84" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.6" y="1973" width="0.2" height="15.0" fill="rgb(241,200,48)" rx="2" ry="2" />
<text  x="163.57" y="1983.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="899.2" y="1845" width="0.2" height="15.0" fill="rgb(245,66,18)" rx="2" ry="2" />
<text  x="902.24" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="341.0" y="1925" width="0.4" height="15.0" fill="rgb(254,177,19)" rx="2" ry="2" />
<text  x="344.05" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="378.7" y="1877" width="0.2" height="15.0" fill="rgb(207,203,51)" rx="2" ry="2" />
<text  x="381.74" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="311.3" y="1781" width="0.4" height="15.0" fill="rgb(207,5,28)" rx="2" ry="2" />
<text  x="314.33" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="810.5" y="1573" width="0.2" height="15.0" fill="rgb(247,86,20)" rx="2" ry="2" />
<text  x="813.49" y="1583.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="14.4" y="1957" width="1.0" height="15.0" fill="rgb(229,15,24)" rx="2" ry="2" />
<text  x="17.39" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="805" width="18.5" height="15.0" fill="rgb(215,214,45)" rx="2" ry="2" />
<text  x="96.36" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="952.7" y="1781" width="0.2" height="15.0" fill="rgb(247,192,11)" rx="2" ry="2" />
<text  x="955.68" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="104.1" y="37" width="0.6" height="15.0" fill="rgb(247,181,7)" rx="2" ry="2" />
<text  x="107.13" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (5 samples, 0.08%)</title><rect x="698.6" y="2037" width="1.0" height="15.0" fill="rgb(224,85,6)" rx="2" ry="2" />
<text  x="701.62" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="893.9" y="1973" width="0.2" height="15.0" fill="rgb(234,69,8)" rx="2" ry="2" />
<text  x="896.85" y="1983.5" ></text>
</g>
<g >
<title>sys_recvfrom (385 samples, 6.51%)</title><rect x="1049.8" y="2005" width="76.8" height="15.0" fill="rgb(236,172,36)" rx="2" ry="2" />
<text  x="1052.80" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="93.4" y="165" width="17.5" height="15.0" fill="rgb(228,151,5)" rx="2" ry="2" />
<text  x="96.36" y="175.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="915.6" y="1861" width="0.2" height="15.0" fill="rgb(237,100,19)" rx="2" ry="2" />
<text  x="918.59" y="1871.5" ></text>
</g>
<g >
<title>security_file_free (15 samples, 0.25%)</title><rect x="748.7" y="1797" width="3.0" height="15.0" fill="rgb(210,192,43)" rx="2" ry="2" />
<text  x="751.67" y="1807.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="1079.5" y="1365" width="0.2" height="15.0" fill="rgb(242,209,29)" rx="2" ry="2" />
<text  x="1082.52" y="1375.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="1176.2" y="1957" width="0.2" height="15.0" fill="rgb(229,127,34)" rx="2" ry="2" />
<text  x="1179.24" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (3 samples, 0.05%)</title><rect x="174.1" y="2021" width="0.6" height="15.0" fill="rgb(225,9,4)" rx="2" ry="2" />
<text  x="177.13" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="950.3" y="2005" width="0.2" height="15.0" fill="rgb(232,227,13)" rx="2" ry="2" />
<text  x="953.29" y="2015.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (3 samples, 0.05%)</title><rect x="738.5" y="1669" width="0.6" height="15.0" fill="rgb(223,162,7)" rx="2" ry="2" />
<text  x="741.50" y="1679.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="834.8" y="1701" width="0.2" height="15.0" fill="rgb(236,99,38)" rx="2" ry="2" />
<text  x="837.82" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="222.4" y="2021" width="0.2" height="15.0" fill="rgb(218,210,24)" rx="2" ry="2" />
<text  x="225.39" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="725.9" y="1765" width="0.2" height="15.0" fill="rgb(211,70,11)" rx="2" ry="2" />
<text  x="728.94" y="1775.5" ></text>
</g>
<g >
<title>fput (6 samples, 0.10%)</title><rect x="843.4" y="1813" width="1.2" height="15.0" fill="rgb(218,57,37)" rx="2" ry="2" />
<text  x="846.40" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="620.2" y="2037" width="0.2" height="15.0" fill="rgb(252,143,3)" rx="2" ry="2" />
<text  x="623.24" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="313.7" y="1797" width="0.2" height="15.0" fill="rgb(221,62,25)" rx="2" ry="2" />
<text  x="316.72" y="1807.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="275.8" y="1669" width="0.2" height="15.0" fill="rgb(232,128,11)" rx="2" ry="2" />
<text  x="278.83" y="1679.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (1 samples, 0.02%)</title><rect x="67.6" y="1957" width="0.2" height="15.0" fill="rgb(231,147,13)" rx="2" ry="2" />
<text  x="70.63" y="1967.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="160.6" y="1877" width="0.2" height="15.0" fill="rgb(239,77,29)" rx="2" ry="2" />
<text  x="163.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.99%)</title><rect x="93.0" y="1941" width="23.5" height="15.0" fill="rgb(224,37,29)" rx="2" ry="2" />
<text  x="95.96" y="1951.5" >[..</text>
</g>
<g >
<title>zap_page_range (1 samples, 0.02%)</title><rect x="1134.6" y="1989" width="0.2" height="15.0" fill="rgb(222,111,19)" rx="2" ry="2" />
<text  x="1137.56" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (2 samples, 0.03%)</title><rect x="619.8" y="2037" width="0.4" height="15.0" fill="rgb(215,31,39)" rx="2" ry="2" />
<text  x="622.84" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="429.0" y="1989" width="0.4" height="15.0" fill="rgb(209,47,45)" rx="2" ry="2" />
<text  x="431.99" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1079.7" y="1557" width="0.2" height="15.0" fill="rgb(214,20,49)" rx="2" ry="2" />
<text  x="1082.72" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="835.0" y="1669" width="0.2" height="15.0" fill="rgb(230,84,33)" rx="2" ry="2" />
<text  x="838.02" y="1679.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="952.7" y="1605" width="0.2" height="15.0" fill="rgb(232,179,21)" rx="2" ry="2" />
<text  x="955.68" y="1615.5" ></text>
</g>
<g >
<title>tcp_tso_segs (4 samples, 0.07%)</title><rect x="824.9" y="1685" width="0.7" height="15.0" fill="rgb(214,148,14)" rx="2" ry="2" />
<text  x="827.85" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="132.2" y="1909" width="0.2" height="15.0" fill="rgb(251,50,9)" rx="2" ry="2" />
<text  x="135.25" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="997.8" y="1861" width="0.2" height="15.0" fill="rgb(221,182,19)" rx="2" ry="2" />
<text  x="1000.75" y="1871.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="115.9" y="1861" width="0.2" height="15.0" fill="rgb(240,184,50)" rx="2" ry="2" />
<text  x="118.89" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="610.7" y="1669" width="0.2" height="15.0" fill="rgb(234,99,31)" rx="2" ry="2" />
<text  x="613.67" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (5 samples, 0.08%)</title><rect x="1147.7" y="2037" width="1.0" height="15.0" fill="rgb(238,116,1)" rx="2" ry="2" />
<text  x="1150.72" y="2047.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(211,0,47)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1180.2" y="1989" width="0.2" height="15.0" fill="rgb(217,214,31)" rx="2" ry="2" />
<text  x="1183.23" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="936.3" y="1893" width="0.2" height="15.0" fill="rgb(225,73,7)" rx="2" ry="2" />
<text  x="939.33" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="747.5" y="1589" width="0.2" height="15.0" fill="rgb(232,92,2)" rx="2" ry="2" />
<text  x="750.48" y="1599.5" ></text>
</g>
<g >
<title>sk_reset_timer (26 samples, 0.44%)</title><rect x="818.9" y="1637" width="5.2" height="15.0" fill="rgb(211,163,4)" rx="2" ry="2" />
<text  x="821.87" y="1647.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="569.6" y="1989" width="0.2" height="15.0" fill="rgb(245,96,13)" rx="2" ry="2" />
<text  x="572.59" y="1999.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="111.1" y="37" width="0.2" height="15.0" fill="rgb(252,57,35)" rx="2" ry="2" />
<text  x="114.11" y="47.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="815.3" y="1685" width="1.0" height="15.0" fill="rgb(226,84,24)" rx="2" ry="2" />
<text  x="818.28" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="887.7" y="1749" width="0.2" height="15.0" fill="rgb(252,187,5)" rx="2" ry="2" />
<text  x="890.67" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1151.9" y="2005" width="0.2" height="15.0" fill="rgb(226,57,33)" rx="2" ry="2" />
<text  x="1154.91" y="2015.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="170.9" y="1925" width="0.2" height="15.0" fill="rgb(244,13,35)" rx="2" ry="2" />
<text  x="173.94" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="857.2" y="1909" width="0.8" height="15.0" fill="rgb(227,23,9)" rx="2" ry="2" />
<text  x="860.16" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (12 samples, 0.20%)</title><rect x="1145.3" y="2037" width="2.4" height="15.0" fill="rgb(208,170,30)" rx="2" ry="2" />
<text  x="1148.33" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="74.2" y="1765" width="0.2" height="15.0" fill="rgb(219,87,8)" rx="2" ry="2" />
<text  x="77.21" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="659.5" y="1989" width="0.4" height="15.0" fill="rgb(213,151,34)" rx="2" ry="2" />
<text  x="662.53" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (257 samples, 4.34%)</title><rect x="32.7" y="2021" width="51.3" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="35.73" y="2031.5" >folly..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="469.5" y="1685" width="0.2" height="15.0" fill="rgb(237,9,34)" rx="2" ry="2" />
<text  x="472.48" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="515.1" y="1957" width="0.4" height="15.0" fill="rgb(242,84,24)" rx="2" ry="2" />
<text  x="518.14" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="668.3" y="1813" width="0.4" height="15.0" fill="rgb(213,82,27)" rx="2" ry="2" />
<text  x="671.30" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1150.3" y="1941" width="0.2" height="15.0" fill="rgb(227,152,29)" rx="2" ry="2" />
<text  x="1153.31" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="111.7" y="133" width="0.2" height="15.0" fill="rgb(233,19,6)" rx="2" ry="2" />
<text  x="114.71" y="143.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="934.5" y="1877" width="0.2" height="15.0" fill="rgb(239,201,42)" rx="2" ry="2" />
<text  x="937.54" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="294.8" y="1781" width="0.2" height="15.0" fill="rgb(252,205,6)" rx="2" ry="2" />
<text  x="297.78" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="578.4" y="1957" width="0.2" height="15.0" fill="rgb(214,164,11)" rx="2" ry="2" />
<text  x="581.36" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1079.7" y="1717" width="0.2" height="15.0" fill="rgb(212,185,54)" rx="2" ry="2" />
<text  x="1082.72" y="1727.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="273.0" y="1733" width="0.2" height="15.0" fill="rgb(228,53,23)" rx="2" ry="2" />
<text  x="276.04" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="851.8" y="1781" width="0.2" height="15.0" fill="rgb(213,198,39)" rx="2" ry="2" />
<text  x="854.77" y="1791.5" ></text>
</g>
<g >
<title>sock_destroy_inode (15 samples, 0.25%)</title><rect x="740.3" y="1685" width="3.0" height="15.0" fill="rgb(236,215,53)" rx="2" ry="2" />
<text  x="743.30" y="1695.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="113.9" y="1541" width="0.2" height="15.0" fill="rgb(237,108,24)" rx="2" ry="2" />
<text  x="116.90" y="1551.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="515.5" y="1973" width="1.4" height="15.0" fill="rgb(245,159,38)" rx="2" ry="2" />
<text  x="518.54" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="891.7" y="1861" width="0.2" height="15.0" fill="rgb(215,72,33)" rx="2" ry="2" />
<text  x="894.66" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="747.5" y="1717" width="0.2" height="15.0" fill="rgb(227,138,16)" rx="2" ry="2" />
<text  x="750.48" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (2 samples, 0.03%)</title><rect x="902.6" y="2037" width="0.4" height="15.0" fill="rgb(224,111,48)" rx="2" ry="2" />
<text  x="905.63" y="2047.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="887.7" y="1669" width="0.2" height="15.0" fill="rgb(208,102,45)" rx="2" ry="2" />
<text  x="890.67" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="852.8" y="1797" width="0.2" height="15.0" fill="rgb(217,205,37)" rx="2" ry="2" />
<text  x="855.77" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="583.5" y="1925" width="2.0" height="15.0" fill="rgb(215,182,7)" rx="2" ry="2" />
<text  x="586.55" y="1935.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="523.3" y="1973" width="0.2" height="15.0" fill="rgb(215,20,11)" rx="2" ry="2" />
<text  x="526.32" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="873.7" y="1733" width="0.2" height="15.0" fill="rgb(244,55,5)" rx="2" ry="2" />
<text  x="876.71" y="1743.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="855.0" y="1877" width="0.8" height="15.0" fill="rgb(241,37,7)" rx="2" ry="2" />
<text  x="857.97" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="905.4" y="2021" width="1.4" height="15.0" fill="rgb(219,138,13)" rx="2" ry="2" />
<text  x="908.42" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="87.0" y="2037" width="0.2" height="15.0" fill="rgb(233,1,6)" rx="2" ry="2" />
<text  x="89.98" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="861.9" y="1717" width="0.2" height="15.0" fill="rgb(205,171,9)" rx="2" ry="2" />
<text  x="864.95" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.88%)</title><rect x="93.0" y="1765" width="22.1" height="15.0" fill="rgb(242,39,35)" rx="2" ry="2" />
<text  x="95.96" y="1775.5" >[..</text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::ControllerCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="148.8" y="1941" width="0.2" height="15.0" fill="rgb(220,201,18)" rx="2" ry="2" />
<text  x="151.80" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="963.9" y="1973" width="0.2" height="15.0" fill="rgb(218,183,52)" rx="2" ry="2" />
<text  x="966.85" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="379.7" y="1781" width="0.2" height="15.0" fill="rgb(227,195,38)" rx="2" ry="2" />
<text  x="382.73" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="564.8" y="1925" width="0.2" height="15.0" fill="rgb(222,86,38)" rx="2" ry="2" />
<text  x="567.80" y="1935.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="393.1" y="1845" width="0.2" height="15.0" fill="rgb(247,39,42)" rx="2" ry="2" />
<text  x="396.10" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (3 samples, 0.05%)</title><rect x="553.2" y="1957" width="0.6" height="15.0" fill="rgb(241,71,42)" rx="2" ry="2" />
<text  x="556.23" y="1967.5" ></text>
</g>
<g >
<title>evict (53 samples, 0.90%)</title><rect x="735.7" y="1717" width="10.6" height="15.0" fill="rgb(248,5,5)" rx="2" ry="2" />
<text  x="738.71" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="766.2" y="1573" width="0.2" height="15.0" fill="rgb(236,65,29)" rx="2" ry="2" />
<text  x="769.22" y="1583.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="377.1" y="1877" width="0.2" height="15.0" fill="rgb(243,38,30)" rx="2" ry="2" />
<text  x="380.14" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="357.0" y="1701" width="0.2" height="15.0" fill="rgb(248,189,21)" rx="2" ry="2" />
<text  x="360.00" y="1711.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (81 samples, 1.37%)</title><rect x="493.0" y="1957" width="16.2" height="15.0" fill="rgb(205,172,10)" rx="2" ry="2" />
<text  x="496.01" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="341.0" y="1669" width="0.4" height="15.0" fill="rgb(242,1,45)" rx="2" ry="2" />
<text  x="344.05" y="1679.5" ></text>
</g>
<g >
<title>free_unref_page (13 samples, 0.22%)</title><rect x="1077.1" y="1845" width="2.6" height="15.0" fill="rgb(237,218,47)" rx="2" ry="2" />
<text  x="1080.13" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="873.7" y="1973" width="0.2" height="15.0" fill="rgb(231,191,3)" rx="2" ry="2" />
<text  x="876.71" y="1983.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2 samples, 0.03%)</title><rect x="1183.2" y="1989" width="0.4" height="15.0" fill="rgb(219,45,24)" rx="2" ry="2" />
<text  x="1186.22" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="172.7" y="1941" width="0.2" height="15.0" fill="rgb(233,118,31)" rx="2" ry="2" />
<text  x="175.73" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="991.0" y="1973" width="0.2" height="15.0" fill="rgb(230,194,1)" rx="2" ry="2" />
<text  x="993.97" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="156.6" y="1797" width="0.2" height="15.0" fill="rgb(246,174,40)" rx="2" ry="2" />
<text  x="159.58" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="622.8" y="1957" width="0.8" height="15.0" fill="rgb(238,81,43)" rx="2" ry="2" />
<text  x="625.83" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="83.4" y="2005" width="0.4" height="15.0" fill="rgb(225,197,21)" rx="2" ry="2" />
<text  x="86.39" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="47.3" y="1941" width="0.6" height="15.0" fill="rgb(252,208,49)" rx="2" ry="2" />
<text  x="50.29" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="358.6" y="1909" width="0.4" height="15.0" fill="rgb(224,179,26)" rx="2" ry="2" />
<text  x="361.60" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="252.5" y="1605" width="0.2" height="15.0" fill="rgb(233,36,8)" rx="2" ry="2" />
<text  x="255.50" y="1615.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="92.2" y="1861" width="0.2" height="15.0" fill="rgb(242,42,12)" rx="2" ry="2" />
<text  x="95.16" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="974.2" y="2037" width="0.4" height="15.0" fill="rgb(232,150,49)" rx="2" ry="2" />
<text  x="977.22" y="2047.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="653.5" y="1957" width="0.2" height="15.0" fill="rgb(252,48,26)" rx="2" ry="2" />
<text  x="656.55" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (125 samples, 2.11%)</title><rect x="582.0" y="2005" width="24.9" height="15.0" fill="rgb(250,211,31)" rx="2" ry="2" />
<text  x="584.95" y="2015.5" >f..</text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="909.8" y="1589" width="0.2" height="15.0" fill="rgb(209,13,38)" rx="2" ry="2" />
<text  x="912.81" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (1 samples, 0.02%)</title><rect x="149.2" y="1957" width="0.2" height="15.0" fill="rgb(228,161,45)" rx="2" ry="2" />
<text  x="152.20" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="538.3" y="1845" width="0.2" height="15.0" fill="rgb(207,32,22)" rx="2" ry="2" />
<text  x="541.28" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="156.6" y="2005" width="0.2" height="15.0" fill="rgb(244,64,40)" rx="2" ry="2" />
<text  x="159.58" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="204.6" y="1893" width="0.4" height="15.0" fill="rgb(219,139,0)" rx="2" ry="2" />
<text  x="207.64" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="747.9" y="1717" width="0.4" height="15.0" fill="rgb(222,169,16)" rx="2" ry="2" />
<text  x="750.87" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="481.2" y="1781" width="0.4" height="15.0" fill="rgb(250,97,48)" rx="2" ry="2" />
<text  x="484.24" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="502.4" y="1845" width="0.4" height="15.0" fill="rgb(227,42,14)" rx="2" ry="2" />
<text  x="505.38" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="871.1" y="1941" width="0.2" height="15.0" fill="rgb(225,103,16)" rx="2" ry="2" />
<text  x="874.12" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (3 samples, 0.05%)</title><rect x="902.0" y="2037" width="0.6" height="15.0" fill="rgb(235,154,33)" rx="2" ry="2" />
<text  x="905.03" y="2047.5" ></text>
</g>
<g >
<title>skb_release_data (21 samples, 0.35%)</title><rect x="1109.8" y="1477" width="4.2" height="15.0" fill="rgb(223,174,25)" rx="2" ry="2" />
<text  x="1112.83" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="189.9" y="2021" width="0.2" height="15.0" fill="rgb(228,217,0)" rx="2" ry="2" />
<text  x="192.88" y="2031.5" ></text>
</g>
<g >
<title>sys_getpeername (13 samples, 0.22%)</title><rect x="666.5" y="1893" width="2.6" height="15.0" fill="rgb(227,44,39)" rx="2" ry="2" />
<text  x="669.51" y="1903.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="985.6" y="1893" width="0.4" height="15.0" fill="rgb(245,67,50)" rx="2" ry="2" />
<text  x="988.59" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.54%)</title><rect x="93.4" y="373" width="18.1" height="15.0" fill="rgb(240,46,32)" rx="2" ry="2" />
<text  x="96.36" y="383.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="622.6" y="2021" width="1.0" height="15.0" fill="rgb(230,36,53)" rx="2" ry="2" />
<text  x="625.63" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="899.0" y="1989" width="0.2" height="15.0" fill="rgb(240,155,11)" rx="2" ry="2" />
<text  x="902.04" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (9 samples, 0.15%)</title><rect x="55.1" y="1925" width="1.8" height="15.0" fill="rgb(208,133,6)" rx="2" ry="2" />
<text  x="58.07" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="70.2" y="1909" width="0.4" height="15.0" fill="rgb(252,73,52)" rx="2" ry="2" />
<text  x="73.23" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="166.0" y="1973" width="0.3" height="15.0" fill="rgb(225,1,14)" rx="2" ry="2" />
<text  x="168.95" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="631.6" y="1989" width="0.2" height="15.0" fill="rgb(227,58,44)" rx="2" ry="2" />
<text  x="634.61" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="482.8" y="1941" width="0.2" height="15.0" fill="rgb(212,189,21)" rx="2" ry="2" />
<text  x="485.84" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="481.2" y="1861" width="0.4" height="15.0" fill="rgb(251,209,1)" rx="2" ry="2" />
<text  x="484.24" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="540.9" y="1893" width="0.8" height="15.0" fill="rgb(219,212,4)" rx="2" ry="2" />
<text  x="543.87" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="852.8" y="1749" width="0.2" height="15.0" fill="rgb(226,203,54)" rx="2" ry="2" />
<text  x="855.77" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (7 samples, 0.12%)</title><rect x="951.5" y="2005" width="1.4" height="15.0" fill="rgb(240,91,45)" rx="2" ry="2" />
<text  x="954.49" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (1 samples, 0.02%)</title><rect x="869.9" y="1989" width="0.2" height="15.0" fill="rgb(239,229,29)" rx="2" ry="2" />
<text  x="872.92" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="747.9" y="1701" width="0.4" height="15.0" fill="rgb(206,73,47)" rx="2" ry="2" />
<text  x="750.87" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="484.6" y="1925" width="0.2" height="15.0" fill="rgb(230,63,39)" rx="2" ry="2" />
<text  x="487.63" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="599.5" y="1685" width="0.2" height="15.0" fill="rgb(250,182,22)" rx="2" ry="2" />
<text  x="602.50" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (4 samples, 0.07%)</title><rect x="849.4" y="1925" width="0.8" height="15.0" fill="rgb(220,159,35)" rx="2" ry="2" />
<text  x="852.38" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1178.6" y="1973" width="0.2" height="15.0" fill="rgb(233,42,13)" rx="2" ry="2" />
<text  x="1181.63" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (79 samples, 1.34%)</title><rect x="676.3" y="1957" width="15.7" height="15.0" fill="rgb(217,1,34)" rx="2" ry="2" />
<text  x="679.28" y="1967.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="338.7" y="1957" width="0.2" height="15.0" fill="rgb(249,180,20)" rx="2" ry="2" />
<text  x="341.65" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (17 samples, 0.29%)</title><rect x="582.2" y="1957" width="3.3" height="15.0" fill="rgb(215,90,29)" rx="2" ry="2" />
<text  x="585.15" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 0.22%)</title><rect x="273.4" y="1685" width="2.6" height="15.0" fill="rgb(211,17,40)" rx="2" ry="2" />
<text  x="276.44" y="1695.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="82.2" y="1941" width="0.2" height="15.0" fill="rgb(215,112,51)" rx="2" ry="2" />
<text  x="85.19" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="673.1" y="1973" width="0.2" height="15.0" fill="rgb(247,160,12)" rx="2" ry="2" />
<text  x="676.09" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="669.5" y="1557" width="0.2" height="15.0" fill="rgb(215,224,36)" rx="2" ry="2" />
<text  x="672.50" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.2" y="1893" width="0.2" height="15.0" fill="rgb(218,7,37)" rx="2" ry="2" />
<text  x="77.21" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="450.3" y="1717" width="0.4" height="15.0" fill="rgb(240,101,31)" rx="2" ry="2" />
<text  x="453.33" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="1181.0" y="2037" width="1.0" height="15.0" fill="rgb(238,218,6)" rx="2" ry="2" />
<text  x="1184.03" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="252.5" y="1781" width="0.2" height="15.0" fill="rgb(229,172,32)" rx="2" ry="2" />
<text  x="255.50" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="379.7" y="1797" width="0.2" height="15.0" fill="rgb(225,16,39)" rx="2" ry="2" />
<text  x="382.73" y="1807.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="457.7" y="1829" width="0.2" height="15.0" fill="rgb(212,159,52)" rx="2" ry="2" />
<text  x="460.71" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1150.7" y="1701" width="0.2" height="15.0" fill="rgb(221,56,10)" rx="2" ry="2" />
<text  x="1153.71" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="93.2" y="1445" width="20.1" height="15.0" fill="rgb(210,38,47)" rx="2" ry="2" />
<text  x="96.16" y="1455.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="733.7" y="1701" width="0.2" height="15.0" fill="rgb(207,124,31)" rx="2" ry="2" />
<text  x="736.71" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="494.4" y="1925" width="0.2" height="15.0" fill="rgb(253,16,40)" rx="2" ry="2" />
<text  x="497.40" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="899.4" y="2005" width="0.2" height="15.0" fill="rgb(229,110,39)" rx="2" ry="2" />
<text  x="902.44" y="2015.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="10.2" y="1845" width="1.0" height="15.0" fill="rgb(212,207,42)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="516.7" y="1909" width="0.2" height="15.0" fill="rgb(247,207,34)" rx="2" ry="2" />
<text  x="519.74" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="457.7" y="1845" width="0.2" height="15.0" fill="rgb(223,60,0)" rx="2" ry="2" />
<text  x="460.71" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="622.4" y="2021" width="0.2" height="15.0" fill="rgb(254,41,32)" rx="2" ry="2" />
<text  x="625.44" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="482.8" y="1653" width="0.2" height="15.0" fill="rgb(218,174,49)" rx="2" ry="2" />
<text  x="485.84" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="853.2" y="1909" width="0.8" height="15.0" fill="rgb(249,171,32)" rx="2" ry="2" />
<text  x="856.17" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="152.6" y="1797" width="0.2" height="15.0" fill="rgb(223,47,21)" rx="2" ry="2" />
<text  x="155.59" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="350.8" y="1733" width="0.2" height="15.0" fill="rgb(230,87,27)" rx="2" ry="2" />
<text  x="353.82" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="766.2" y="1589" width="0.2" height="15.0" fill="rgb(227,217,16)" rx="2" ry="2" />
<text  x="769.22" y="1599.5" ></text>
</g>
<g >
<title>syscall (16 samples, 0.27%)</title><rect x="1022.7" y="2037" width="3.2" height="15.0" fill="rgb(243,124,43)" rx="2" ry="2" />
<text  x="1025.68" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="55.9" y="1861" width="0.4" height="15.0" fill="rgb(220,82,7)" rx="2" ry="2" />
<text  x="58.87" y="1871.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="747.9" y="1541" width="0.2" height="15.0" fill="rgb(208,163,43)" rx="2" ry="2" />
<text  x="750.87" y="1551.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="527.5" y="1925" width="0.4" height="15.0" fill="rgb(245,72,41)" rx="2" ry="2" />
<text  x="530.51" y="1935.5" ></text>
</g>
<g >
<title>tcp_current_mss (16 samples, 0.27%)</title><rect x="834.2" y="1717" width="3.2" height="15.0" fill="rgb(250,179,38)" rx="2" ry="2" />
<text  x="837.23" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="527.9" y="1781" width="0.2" height="15.0" fill="rgb(211,44,8)" rx="2" ry="2" />
<text  x="530.91" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="1020.5" y="2037" width="0.2" height="15.0" fill="rgb(223,94,20)" rx="2" ry="2" />
<text  x="1023.49" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="578.4" y="1813" width="0.2" height="15.0" fill="rgb(246,153,1)" rx="2" ry="2" />
<text  x="581.36" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="541.7" y="1941" width="0.2" height="15.0" fill="rgb(230,209,0)" rx="2" ry="2" />
<text  x="544.67" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="154.8" y="2005" width="0.2" height="15.0" fill="rgb(236,63,33)" rx="2" ry="2" />
<text  x="157.78" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (39 samples, 0.66%)</title><rect x="881.1" y="1957" width="7.8" height="15.0" fill="rgb(237,5,20)" rx="2" ry="2" />
<text  x="884.09" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="673.5" y="1861" width="0.2" height="15.0" fill="rgb(245,150,0)" rx="2" ry="2" />
<text  x="676.49" y="1871.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="14.2" y="2053" width="1.2" height="15.0" fill="rgb(230,54,15)" rx="2" ry="2" />
<text  x="17.19" y="2063.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.05%)</title><rect x="1177.4" y="1957" width="0.6" height="15.0" fill="rgb(221,7,48)" rx="2" ry="2" />
<text  x="1180.44" y="1967.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (12 samples, 0.20%)</title><rect x="74.2" y="1957" width="2.4" height="15.0" fill="rgb(233,211,38)" rx="2" ry="2" />
<text  x="77.21" y="1967.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (41 samples, 0.69%)</title><rect x="465.1" y="1957" width="8.2" height="15.0" fill="rgb(252,187,27)" rx="2" ry="2" />
<text  x="468.09" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.2" y="1701" width="0.2" height="15.0" fill="rgb(207,161,30)" rx="2" ry="2" />
<text  x="844.21" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="896.8" y="1989" width="0.2" height="15.0" fill="rgb(250,200,44)" rx="2" ry="2" />
<text  x="899.84" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="785.4" y="1541" width="0.6" height="15.0" fill="rgb(242,116,36)" rx="2" ry="2" />
<text  x="788.37" y="1551.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="583.3" y="1941" width="2.2" height="15.0" fill="rgb(250,31,48)" rx="2" ry="2" />
<text  x="586.35" y="1951.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="179.3" y="2021" width="0.2" height="15.0" fill="rgb(224,17,6)" rx="2" ry="2" />
<text  x="182.31" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="482.8" y="1877" width="0.2" height="15.0" fill="rgb(252,64,14)" rx="2" ry="2" />
<text  x="485.84" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="818.1" y="1669" width="0.2" height="15.0" fill="rgb(229,219,15)" rx="2" ry="2" />
<text  x="821.07" y="1679.5" ></text>
</g>
<g >
<title>__fget (9 samples, 0.15%)</title><rect x="601.3" y="1813" width="1.8" height="15.0" fill="rgb(205,151,6)" rx="2" ry="2" />
<text  x="604.30" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="357.0" y="1797" width="0.2" height="15.0" fill="rgb(253,214,9)" rx="2" ry="2" />
<text  x="360.00" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="67.0" y="1957" width="0.2" height="15.0" fill="rgb(216,192,23)" rx="2" ry="2" />
<text  x="70.04" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="669.3" y="1685" width="0.4" height="15.0" fill="rgb(209,84,26)" rx="2" ry="2" />
<text  x="672.30" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1184.6" y="2021" width="0.2" height="15.0" fill="rgb(210,73,34)" rx="2" ry="2" />
<text  x="1187.62" y="2031.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="1121.8" y="1701" width="0.2" height="15.0" fill="rgb(223,219,23)" rx="2" ry="2" />
<text  x="1124.80" y="1711.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="112.1" y="1221" width="0.2" height="15.0" fill="rgb(251,76,19)" rx="2" ry="2" />
<text  x="115.11" y="1231.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="936.1" y="1877" width="0.2" height="15.0" fill="rgb(210,73,33)" rx="2" ry="2" />
<text  x="939.13" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="742.3" y="1653" width="1.0" height="15.0" fill="rgb(226,169,37)" rx="2" ry="2" />
<text  x="745.29" y="1663.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="51.5" y="1925" width="0.2" height="15.0" fill="rgb(252,157,7)" rx="2" ry="2" />
<text  x="54.48" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="862.1" y="1909" width="0.2" height="15.0" fill="rgb(214,154,52)" rx="2" ry="2" />
<text  x="865.14" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1079.5" y="1525" width="0.2" height="15.0" fill="rgb(226,94,46)" rx="2" ry="2" />
<text  x="1082.52" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="482.8" y="1909" width="0.2" height="15.0" fill="rgb(231,49,28)" rx="2" ry="2" />
<text  x="485.84" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="747.9" y="1749" width="0.4" height="15.0" fill="rgb(221,76,36)" rx="2" ry="2" />
<text  x="750.87" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="565.6" y="1973" width="2.2" height="15.0" fill="rgb(214,166,44)" rx="2" ry="2" />
<text  x="568.60" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (58 samples, 0.98%)</title><rect x="279.6" y="1701" width="11.6" height="15.0" fill="rgb(234,94,42)" rx="2" ry="2" />
<text  x="282.62" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1128.0" y="1829" width="0.2" height="15.0" fill="rgb(212,150,1)" rx="2" ry="2" />
<text  x="1130.98" y="1839.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="726.1" y="1845" width="0.8" height="15.0" fill="rgb(244,196,30)" rx="2" ry="2" />
<text  x="729.14" y="1855.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (3 samples, 0.05%)</title><rect x="836.0" y="1685" width="0.6" height="15.0" fill="rgb(226,172,27)" rx="2" ry="2" />
<text  x="839.02" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(219,56,36)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>__snprintf (2 samples, 0.03%)</title><rect x="323.1" y="2037" width="0.4" height="15.0" fill="rgb(241,54,21)" rx="2" ry="2" />
<text  x="326.10" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="948.7" y="1941" width="0.2" height="15.0" fill="rgb(214,76,54)" rx="2" ry="2" />
<text  x="951.70" y="1951.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.02%)</title><rect x="389.5" y="1909" width="0.2" height="15.0" fill="rgb(250,24,33)" rx="2" ry="2" />
<text  x="392.51" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="909.8" y="1877" width="0.2" height="15.0" fill="rgb(217,70,33)" rx="2" ry="2" />
<text  x="912.81" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="862.7" y="1893" width="0.6" height="15.0" fill="rgb(238,130,48)" rx="2" ry="2" />
<text  x="865.74" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="93.2" y="1429" width="20.1" height="15.0" fill="rgb(239,198,7)" rx="2" ry="2" />
<text  x="96.16" y="1439.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="294.8" y="1813" width="0.2" height="15.0" fill="rgb(205,14,5)" rx="2" ry="2" />
<text  x="297.78" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="321.9" y="2037" width="0.6" height="15.0" fill="rgb(218,24,0)" rx="2" ry="2" />
<text  x="324.90" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="51.5" y="1893" width="0.2" height="15.0" fill="rgb(222,57,54)" rx="2" ry="2" />
<text  x="54.48" y="1903.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="389.3" y="1909" width="0.2" height="15.0" fill="rgb(218,23,21)" rx="2" ry="2" />
<text  x="392.31" y="1919.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="537.3" y="1525" width="0.2" height="15.0" fill="rgb(230,217,52)" rx="2" ry="2" />
<text  x="540.28" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="836.6" y="1685" width="0.2" height="15.0" fill="rgb(211,94,45)" rx="2" ry="2" />
<text  x="839.62" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="873.7" y="1717" width="0.2" height="15.0" fill="rgb(239,84,10)" rx="2" ry="2" />
<text  x="876.71" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="565.2" y="1829" width="0.4" height="15.0" fill="rgb(230,192,37)" rx="2" ry="2" />
<text  x="568.20" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="1165.5" y="1957" width="2.6" height="15.0" fill="rgb(229,154,1)" rx="2" ry="2" />
<text  x="1168.47" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="873.7" y="1957" width="0.2" height="15.0" fill="rgb(209,147,15)" rx="2" ry="2" />
<text  x="876.71" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="1168.9" y="2053" width="0.4" height="15.0" fill="rgb(244,115,23)" rx="2" ry="2" />
<text  x="1171.86" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="205.0" y="1893" width="0.8" height="15.0" fill="rgb(241,58,27)" rx="2" ry="2" />
<text  x="208.04" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="26.0" y="1989" width="0.2" height="15.0" fill="rgb(236,195,20)" rx="2" ry="2" />
<text  x="28.95" y="1999.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="473.1" y="1765" width="0.2" height="15.0" fill="rgb(221,62,51)" rx="2" ry="2" />
<text  x="476.07" y="1775.5" ></text>
</g>
<g >
<title>malloc (18 samples, 0.30%)</title><rect x="1186.0" y="2053" width="3.6" height="15.0" fill="rgb(215,204,1)" rx="2" ry="2" />
<text  x="1189.01" y="2063.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="484.6" y="1685" width="0.2" height="15.0" fill="rgb(242,25,29)" rx="2" ry="2" />
<text  x="487.63" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="929.4" y="1941" width="0.2" height="15.0" fill="rgb(231,0,9)" rx="2" ry="2" />
<text  x="932.35" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="450.3" y="1829" width="0.4" height="15.0" fill="rgb(225,123,34)" rx="2" ry="2" />
<text  x="453.33" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="128.5" y="2005" width="0.4" height="15.0" fill="rgb(222,1,24)" rx="2" ry="2" />
<text  x="131.46" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (5 samples, 0.08%)</title><rect x="577.2" y="1973" width="1.0" height="15.0" fill="rgb(227,178,1)" rx="2" ry="2" />
<text  x="580.17" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="541.1" y="1877" width="0.6" height="15.0" fill="rgb(243,213,14)" rx="2" ry="2" />
<text  x="544.07" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="892.5" y="1893" width="0.2" height="15.0" fill="rgb(231,165,40)" rx="2" ry="2" />
<text  x="895.46" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="835.0" y="1365" width="0.2" height="15.0" fill="rgb(225,46,20)" rx="2" ry="2" />
<text  x="838.02" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="165.0" y="1973" width="0.2" height="15.0" fill="rgb(228,164,14)" rx="2" ry="2" />
<text  x="167.95" y="1983.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="111.7" y="53" width="0.2" height="15.0" fill="rgb(205,105,35)" rx="2" ry="2" />
<text  x="114.71" y="63.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="522.5" y="1957" width="0.2" height="15.0" fill="rgb(212,197,50)" rx="2" ry="2" />
<text  x="525.52" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="954.1" y="1989" width="0.2" height="15.0" fill="rgb(223,135,42)" rx="2" ry="2" />
<text  x="957.08" y="1999.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="915.6" y="1685" width="0.2" height="15.0" fill="rgb(218,224,35)" rx="2" ry="2" />
<text  x="918.59" y="1695.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="92.0" y="1957" width="0.2" height="15.0" fill="rgb(213,63,50)" rx="2" ry="2" />
<text  x="94.96" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="54.3" y="1749" width="0.2" height="15.0" fill="rgb(222,115,27)" rx="2" ry="2" />
<text  x="57.27" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="481.2" y="1829" width="0.4" height="15.0" fill="rgb(246,191,27)" rx="2" ry="2" />
<text  x="484.24" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="846.2" y="1781" width="0.8" height="15.0" fill="rgb(220,191,48)" rx="2" ry="2" />
<text  x="849.19" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="894.1" y="1973" width="0.2" height="15.0" fill="rgb(231,224,33)" rx="2" ry="2" />
<text  x="897.05" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.2" y="1877" width="0.2" height="15.0" fill="rgb(221,6,31)" rx="2" ry="2" />
<text  x="77.21" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="915.6" y="1877" width="0.2" height="15.0" fill="rgb(239,55,51)" rx="2" ry="2" />
<text  x="918.59" y="1887.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="537.3" y="1653" width="0.2" height="15.0" fill="rgb(240,217,26)" rx="2" ry="2" />
<text  x="540.28" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="899.2" y="1957" width="0.2" height="15.0" fill="rgb(223,33,36)" rx="2" ry="2" />
<text  x="902.24" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="113.5" y="1509" width="0.2" height="15.0" fill="rgb(224,178,44)" rx="2" ry="2" />
<text  x="116.50" y="1519.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="600.7" y="1813" width="0.2" height="15.0" fill="rgb(231,205,15)" rx="2" ry="2" />
<text  x="603.70" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="747.5" y="1509" width="0.2" height="15.0" fill="rgb(233,104,20)" rx="2" ry="2" />
<text  x="750.48" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (80 samples, 1.35%)</title><rect x="657.7" y="2037" width="16.0" height="15.0" fill="rgb(207,81,7)" rx="2" ry="2" />
<text  x="660.73" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_fin (381 samples, 6.44%)</title><rect x="761.4" y="1733" width="76.0" height="15.0" fill="rgb(240,45,4)" rx="2" ry="2" />
<text  x="764.43" y="1743.5" >tcp_send..</text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="834.0" y="1589" width="0.2" height="15.0" fill="rgb(231,80,52)" rx="2" ry="2" />
<text  x="837.03" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1013" width="18.7" height="15.0" fill="rgb(214,91,37)" rx="2" ry="2" />
<text  x="96.16" y="1023.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="402.5" y="2021" width="0.6" height="15.0" fill="rgb(217,218,32)" rx="2" ry="2" />
<text  x="405.47" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="396.9" y="1733" width="0.2" height="15.0" fill="rgb(206,116,32)" rx="2" ry="2" />
<text  x="399.89" y="1743.5" ></text>
</g>
<g >
<title>mutex_unlock (4 samples, 0.07%)</title><rect x="483.0" y="1973" width="0.8" height="15.0" fill="rgb(212,93,20)" rx="2" ry="2" />
<text  x="486.04" y="1983.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (43 samples, 0.73%)</title><rect x="1001.7" y="2037" width="8.6" height="15.0" fill="rgb(221,192,54)" rx="2" ry="2" />
<text  x="1004.74" y="2047.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1116.4" y="1541" width="0.2" height="15.0" fill="rgb(247,66,8)" rx="2" ry="2" />
<text  x="1119.41" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="194.5" y="2021" width="0.4" height="15.0" fill="rgb(214,84,19)" rx="2" ry="2" />
<text  x="197.47" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="171.7" y="1973" width="1.2" height="15.0" fill="rgb(243,74,29)" rx="2" ry="2" />
<text  x="174.73" y="1983.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (62 samples, 1.05%)</title><rect x="733.9" y="1749" width="12.4" height="15.0" fill="rgb(211,202,48)" rx="2" ry="2" />
<text  x="736.91" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="846.6" y="1653" width="0.2" height="15.0" fill="rgb(233,173,32)" rx="2" ry="2" />
<text  x="849.59" y="1663.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="971.4" y="1877" width="0.8" height="15.0" fill="rgb(216,179,45)" rx="2" ry="2" />
<text  x="974.43" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="892.1" y="1925" width="0.2" height="15.0" fill="rgb(208,134,53)" rx="2" ry="2" />
<text  x="895.06" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="393.1" y="1877" width="0.2" height="15.0" fill="rgb(239,172,30)" rx="2" ry="2" />
<text  x="396.10" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="450.5" y="1653" width="0.2" height="15.0" fill="rgb(215,33,0)" rx="2" ry="2" />
<text  x="453.53" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="599.5" y="1717" width="0.2" height="15.0" fill="rgb(244,59,30)" rx="2" ry="2" />
<text  x="602.50" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1049.6" y="1989" width="0.2" height="15.0" fill="rgb(213,115,1)" rx="2" ry="2" />
<text  x="1052.60" y="1999.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="668.9" y="1845" width="0.2" height="15.0" fill="rgb(239,196,41)" rx="2" ry="2" />
<text  x="671.90" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.96%)</title><rect x="908.2" y="2021" width="11.4" height="15.0" fill="rgb(217,66,51)" rx="2" ry="2" />
<text  x="911.21" y="2031.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="984.8" y="1925" width="1.4" height="15.0" fill="rgb(209,74,17)" rx="2" ry="2" />
<text  x="987.79" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="825.5" y="1637" width="0.1" height="15.0" fill="rgb(231,130,31)" rx="2" ry="2" />
<text  x="828.45" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="81.8" y="1861" width="0.2" height="15.0" fill="rgb(234,59,6)" rx="2" ry="2" />
<text  x="84.79" y="1871.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="846.2" y="1605" width="0.2" height="15.0" fill="rgb(209,145,30)" rx="2" ry="2" />
<text  x="849.19" y="1615.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1026.3" y="2021" width="0.2" height="15.0" fill="rgb(233,36,46)" rx="2" ry="2" />
<text  x="1029.27" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (2 samples, 0.03%)</title><rect x="972.6" y="2037" width="0.4" height="15.0" fill="rgb(219,121,37)" rx="2" ry="2" />
<text  x="975.63" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="527.9" y="1957" width="0.2" height="15.0" fill="rgb(251,115,20)" rx="2" ry="2" />
<text  x="530.91" y="1967.5" ></text>
</g>
<g >
<title>vfprintf (8 samples, 0.14%)</title><rect x="184.1" y="2021" width="1.6" height="15.0" fill="rgb(226,17,4)" rx="2" ry="2" />
<text  x="187.10" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="690.4" y="1893" width="1.0" height="15.0" fill="rgb(233,49,12)" rx="2" ry="2" />
<text  x="693.44" y="1903.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="1079.5" y="1381" width="0.2" height="15.0" fill="rgb(226,45,16)" rx="2" ry="2" />
<text  x="1082.52" y="1391.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="599.5" y="1829" width="0.2" height="15.0" fill="rgb(208,29,26)" rx="2" ry="2" />
<text  x="602.50" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="656.9" y="1973" width="0.2" height="15.0" fill="rgb(226,128,9)" rx="2" ry="2" />
<text  x="659.94" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="113.3" y="1445" width="0.2" height="15.0" fill="rgb(228,65,17)" rx="2" ry="2" />
<text  x="116.30" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="951.1" y="2005" width="0.4" height="15.0" fill="rgb(241,72,4)" rx="2" ry="2" />
<text  x="954.09" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1118.4" y="1861" width="0.2" height="15.0" fill="rgb(218,197,44)" rx="2" ry="2" />
<text  x="1121.41" y="1871.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (20 samples, 0.34%)</title><rect x="457.9" y="1925" width="4.0" height="15.0" fill="rgb(252,129,38)" rx="2" ry="2" />
<text  x="460.91" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1189.4" y="1797" width="0.2" height="15.0" fill="rgb(214,180,10)" rx="2" ry="2" />
<text  x="1192.40" y="1807.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="48.7" y="1941" width="0.2" height="15.0" fill="rgb(242,84,5)" rx="2" ry="2" />
<text  x="51.69" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="526.3" y="1957" width="0.4" height="15.0" fill="rgb(207,2,54)" rx="2" ry="2" />
<text  x="529.31" y="1967.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="252.5" y="1509" width="0.2" height="15.0" fill="rgb(240,178,0)" rx="2" ry="2" />
<text  x="255.50" y="1519.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="399.9" y="1941" width="0.2" height="15.0" fill="rgb(235,34,12)" rx="2" ry="2" />
<text  x="402.88" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.05%)</title><rect x="785.4" y="1557" width="0.6" height="15.0" fill="rgb(208,71,43)" rx="2" ry="2" />
<text  x="788.37" y="1567.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="930.9" y="1909" width="1.2" height="15.0" fill="rgb(245,71,26)" rx="2" ry="2" />
<text  x="933.95" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="111.3" y="53" width="0.2" height="15.0" fill="rgb(234,134,48)" rx="2" ry="2" />
<text  x="114.31" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="149.6" y="1941" width="0.2" height="15.0" fill="rgb(209,223,2)" rx="2" ry="2" />
<text  x="152.60" y="1951.5" ></text>
</g>
<g >
<title>event_assign (5 samples, 0.08%)</title><rect x="154.0" y="2021" width="1.0" height="15.0" fill="rgb(217,23,33)" rx="2" ry="2" />
<text  x="156.99" y="2031.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (1 samples, 0.02%)</title><rect x="1002.5" y="2021" width="0.2" height="15.0" fill="rgb(229,34,54)" rx="2" ry="2" />
<text  x="1005.54" y="2031.5" ></text>
</g>
<g >
<title>cpu_load_update_active (1 samples, 0.02%)</title><rect x="1026.3" y="1909" width="0.2" height="15.0" fill="rgb(230,134,51)" rx="2" ry="2" />
<text  x="1029.27" y="1919.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="603.3" y="1877" width="0.2" height="15.0" fill="rgb(219,96,44)" rx="2" ry="2" />
<text  x="606.29" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="529.1" y="1909" width="1.0" height="15.0" fill="rgb(220,70,37)" rx="2" ry="2" />
<text  x="532.10" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.7" y="1893" width="0.2" height="15.0" fill="rgb(209,108,39)" rx="2" ry="2" />
<text  x="890.67" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="110.9" y="165" width="0.2" height="15.0" fill="rgb(228,180,53)" rx="2" ry="2" />
<text  x="113.91" y="175.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (348 samples, 5.88%)</title><rect x="15.4" y="2053" width="69.4" height="15.0" fill="rgb(212,41,36)" rx="2" ry="2" />
<text  x="18.38" y="2063.5" >[libeve..</text>
</g>
<g >
<title>sockfd_lookup_light (22 samples, 0.37%)</title><rect x="1122.0" y="1973" width="4.4" height="15.0" fill="rgb(230,225,51)" rx="2" ry="2" />
<text  x="1125.00" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="810.5" y="1637" width="0.2" height="15.0" fill="rgb(216,103,15)" rx="2" ry="2" />
<text  x="813.49" y="1647.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1005.3" y="2005" width="0.2" height="15.0" fill="rgb(234,148,9)" rx="2" ry="2" />
<text  x="1008.33" y="2015.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1105.4" y="1861" width="0.2" height="15.0" fill="rgb(226,86,27)" rx="2" ry="2" />
<text  x="1108.44" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="606.9" y="1989" width="0.2" height="15.0" fill="rgb(235,221,3)" rx="2" ry="2" />
<text  x="609.88" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="565.0" y="1909" width="0.6" height="15.0" fill="rgb(242,35,52)" rx="2" ry="2" />
<text  x="568.00" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="166.0" y="1957" width="0.2" height="15.0" fill="rgb(220,227,23)" rx="2" ry="2" />
<text  x="168.95" y="1967.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="675.1" y="1973" width="0.8" height="15.0" fill="rgb(208,148,24)" rx="2" ry="2" />
<text  x="678.08" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="818.1" y="1541" width="0.2" height="15.0" fill="rgb(210,99,21)" rx="2" ry="2" />
<text  x="821.07" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="111.3" y="181" width="0.2" height="15.0" fill="rgb(251,139,53)" rx="2" ry="2" />
<text  x="114.31" y="191.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="111.1" y="229" width="0.2" height="15.0" fill="rgb(232,104,51)" rx="2" ry="2" />
<text  x="114.11" y="239.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="682.9" y="1925" width="0.4" height="15.0" fill="rgb(254,180,51)" rx="2" ry="2" />
<text  x="685.86" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="875.3" y="1973" width="0.2" height="15.0" fill="rgb(253,25,52)" rx="2" ry="2" />
<text  x="878.31" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (11 samples, 0.19%)</title><rect x="122.3" y="1957" width="2.2" height="15.0" fill="rgb(241,40,1)" rx="2" ry="2" />
<text  x="125.28" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1163.9" y="1813" width="0.2" height="15.0" fill="rgb(238,155,49)" rx="2" ry="2" />
<text  x="1166.88" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="257.3" y="1861" width="0.2" height="15.0" fill="rgb(205,179,34)" rx="2" ry="2" />
<text  x="260.29" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="481.2" y="1701" width="0.2" height="15.0" fill="rgb(230,105,12)" rx="2" ry="2" />
<text  x="484.24" y="1711.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (6 samples, 0.10%)</title><rect x="852.8" y="1925" width="1.2" height="15.0" fill="rgb(227,78,30)" rx="2" ry="2" />
<text  x="855.77" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="46.9" y="1941" width="0.4" height="15.0" fill="rgb(209,65,48)" rx="2" ry="2" />
<text  x="49.89" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="982.0" y="1973" width="0.2" height="15.0" fill="rgb(226,64,37)" rx="2" ry="2" />
<text  x="985.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="76.2" y="1941" width="0.4" height="15.0" fill="rgb(208,116,5)" rx="2" ry="2" />
<text  x="79.21" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1079.7" y="1605" width="0.2" height="15.0" fill="rgb(207,177,15)" rx="2" ry="2" />
<text  x="1082.72" y="1615.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="894.5" y="1941" width="0.5" height="15.0" fill="rgb(213,35,4)" rx="2" ry="2" />
<text  x="897.45" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="631.0" y="2005" width="0.8" height="15.0" fill="rgb(234,126,6)" rx="2" ry="2" />
<text  x="634.01" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.94%)</title><rect x="93.0" y="1829" width="22.9" height="15.0" fill="rgb(236,133,49)" rx="2" ry="2" />
<text  x="95.96" y="1839.5" >[..</text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="855.2" y="1733" width="0.2" height="15.0" fill="rgb(232,171,34)" rx="2" ry="2" />
<text  x="858.16" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="861.9" y="1749" width="0.2" height="15.0" fill="rgb(230,102,37)" rx="2" ry="2" />
<text  x="864.95" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.22%)</title><rect x="11.4" y="2021" width="2.6" height="15.0" fill="rgb(252,171,24)" rx="2" ry="2" />
<text  x="14.40" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="550.4" y="1941" width="0.2" height="15.0" fill="rgb(253,190,23)" rx="2" ry="2" />
<text  x="553.44" y="1951.5" ></text>
</g>
<g >
<title>evutil_tv_to_msec_ (1 samples, 0.02%)</title><rect x="510.0" y="2037" width="0.2" height="15.0" fill="rgb(252,105,6)" rx="2" ry="2" />
<text  x="512.96" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="65.4" y="1909" width="0.2" height="15.0" fill="rgb(209,7,17)" rx="2" ry="2" />
<text  x="68.44" y="1919.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="81.8" y="1605" width="0.2" height="15.0" fill="rgb(216,33,32)" rx="2" ry="2" />
<text  x="84.79" y="1615.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="815.5" y="1669" width="0.2" height="15.0" fill="rgb(225,92,48)" rx="2" ry="2" />
<text  x="818.48" y="1679.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="341.0" y="1941" width="0.4" height="15.0" fill="rgb(230,56,31)" rx="2" ry="2" />
<text  x="344.05" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1049.6" y="1797" width="0.2" height="15.0" fill="rgb(227,76,4)" rx="2" ry="2" />
<text  x="1052.60" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="615.7" y="1861" width="0.8" height="15.0" fill="rgb(209,47,37)" rx="2" ry="2" />
<text  x="618.65" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="29.3" y="1893" width="0.2" height="15.0" fill="rgb(240,169,22)" rx="2" ry="2" />
<text  x="32.34" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="846.2" y="1701" width="0.6" height="15.0" fill="rgb(222,118,7)" rx="2" ry="2" />
<text  x="849.19" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="220.2" y="2021" width="1.8" height="15.0" fill="rgb(238,207,47)" rx="2" ry="2" />
<text  x="223.19" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="948.7" y="1925" width="0.2" height="15.0" fill="rgb(211,120,50)" rx="2" ry="2" />
<text  x="951.70" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="132.0" y="1941" width="0.2" height="15.0" fill="rgb(244,158,31)" rx="2" ry="2" />
<text  x="135.05" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (6 samples, 0.10%)</title><rect x="55.5" y="1909" width="1.2" height="15.0" fill="rgb(249,221,25)" rx="2" ry="2" />
<text  x="58.47" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="929.2" y="1925" width="0.2" height="15.0" fill="rgb(251,189,51)" rx="2" ry="2" />
<text  x="932.15" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (104 samples, 1.76%)</title><rect x="1067.0" y="1925" width="20.7" height="15.0" fill="rgb(225,176,17)" rx="2" ry="2" />
<text  x="1069.95" y="1935.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="1105.2" y="1829" width="0.2" height="15.0" fill="rgb(227,136,23)" rx="2" ry="2" />
<text  x="1108.24" y="1839.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="115.1" y="1765" width="0.2" height="15.0" fill="rgb(218,118,1)" rx="2" ry="2" />
<text  x="118.10" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="131.1" y="1941" width="0.2" height="15.0" fill="rgb(205,64,44)" rx="2" ry="2" />
<text  x="134.05" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="725.9" y="1589" width="0.2" height="15.0" fill="rgb(215,44,31)" rx="2" ry="2" />
<text  x="728.94" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.08%)</title><rect x="846.0" y="1877" width="1.0" height="15.0" fill="rgb(224,10,48)" rx="2" ry="2" />
<text  x="848.99" y="1887.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="667.5" y="1861" width="0.2" height="15.0" fill="rgb(239,197,29)" rx="2" ry="2" />
<text  x="670.51" y="1871.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="396.7" y="1861" width="0.2" height="15.0" fill="rgb(210,12,34)" rx="2" ry="2" />
<text  x="399.69" y="1871.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(242,195,26)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="655.3" y="2005" width="0.4" height="15.0" fill="rgb(215,157,9)" rx="2" ry="2" />
<text  x="658.34" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="107.7" y="53" width="0.2" height="15.0" fill="rgb(219,163,47)" rx="2" ry="2" />
<text  x="110.72" y="63.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="400.5" y="1925" width="1.0" height="15.0" fill="rgb(229,219,32)" rx="2" ry="2" />
<text  x="403.47" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="484.6" y="1781" width="0.2" height="15.0" fill="rgb(227,151,35)" rx="2" ry="2" />
<text  x="487.63" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="172.9" y="1989" width="0.4" height="15.0" fill="rgb(242,46,52)" rx="2" ry="2" />
<text  x="175.93" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="116.5" y="1941" width="0.2" height="15.0" fill="rgb(213,112,34)" rx="2" ry="2" />
<text  x="119.49" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1079.5" y="1813" width="0.2" height="15.0" fill="rgb(228,121,51)" rx="2" ry="2" />
<text  x="1082.52" y="1823.5" ></text>
</g>
<g >
<title>__slab_free (10 samples, 0.17%)</title><rect x="1070.1" y="1877" width="2.0" height="15.0" fill="rgb(247,162,6)" rx="2" ry="2" />
<text  x="1073.15" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="237.3" y="1925" width="0.2" height="15.0" fill="rgb(239,19,54)" rx="2" ry="2" />
<text  x="240.34" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (368 samples, 6.22%)</title><rect x="412.4" y="2021" width="73.4" height="15.0" fill="rgb(233,169,43)" rx="2" ry="2" />
<text  x="415.44" y="2031.5" >entry_SY..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="861.9" y="1861" width="0.2" height="15.0" fill="rgb(223,222,54)" rx="2" ry="2" />
<text  x="864.95" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="110.7" y="37" width="0.2" height="15.0" fill="rgb(234,104,2)" rx="2" ry="2" />
<text  x="113.71" y="47.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="77.6" y="1605" width="0.2" height="15.0" fill="rgb(250,86,39)" rx="2" ry="2" />
<text  x="80.61" y="1615.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1126.4" y="1989" width="0.2" height="15.0" fill="rgb(218,12,42)" rx="2" ry="2" />
<text  x="1129.38" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (2 samples, 0.03%)</title><rect x="137.6" y="1909" width="0.4" height="15.0" fill="rgb(224,31,41)" rx="2" ry="2" />
<text  x="140.63" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="350.8" y="1845" width="0.2" height="15.0" fill="rgb(206,142,48)" rx="2" ry="2" />
<text  x="353.82" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="610.7" y="1685" width="0.2" height="15.0" fill="rgb(235,3,50)" rx="2" ry="2" />
<text  x="613.67" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="166.0" y="1941" width="0.2" height="15.0" fill="rgb(234,111,19)" rx="2" ry="2" />
<text  x="168.95" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="159.0" y="1989" width="0.2" height="15.0" fill="rgb(252,132,20)" rx="2" ry="2" />
<text  x="161.97" y="1999.5" ></text>
</g>
<g >
<title>sys_epoll_wait (84 samples, 1.42%)</title><rect x="492.4" y="1989" width="16.8" height="15.0" fill="rgb(205,96,34)" rx="2" ry="2" />
<text  x="495.41" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="850.6" y="1909" width="0.4" height="15.0" fill="rgb(238,184,34)" rx="2" ry="2" />
<text  x="853.58" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="462.9" y="1957" width="0.8" height="15.0" fill="rgb(211,0,10)" rx="2" ry="2" />
<text  x="465.90" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1079.5" y="1477" width="0.2" height="15.0" fill="rgb(231,88,19)" rx="2" ry="2" />
<text  x="1082.52" y="1487.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="61.5" y="1861" width="0.2" height="15.0" fill="rgb(229,119,52)" rx="2" ry="2" />
<text  x="64.45" y="1871.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="990.0" y="1909" width="0.2" height="15.0" fill="rgb(210,50,31)" rx="2" ry="2" />
<text  x="992.98" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="65.0" y="1925" width="0.2" height="15.0" fill="rgb(210,206,33)" rx="2" ry="2" />
<text  x="68.04" y="1935.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (4 samples, 0.07%)</title><rect x="522.3" y="1973" width="0.8" height="15.0" fill="rgb(227,107,22)" rx="2" ry="2" />
<text  x="525.32" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="915.6" y="1781" width="0.2" height="15.0" fill="rgb(218,228,36)" rx="2" ry="2" />
<text  x="918.59" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="851.8" y="1893" width="0.2" height="15.0" fill="rgb(244,50,37)" rx="2" ry="2" />
<text  x="854.77" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (17 samples, 0.29%)</title><rect x="981.2" y="1989" width="3.4" height="15.0" fill="rgb(222,127,39)" rx="2" ry="2" />
<text  x="984.20" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1151.3" y="1989" width="0.2" height="15.0" fill="rgb(213,147,31)" rx="2" ry="2" />
<text  x="1154.31" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="92.2" y="2021" width="0.2" height="15.0" fill="rgb(238,2,13)" rx="2" ry="2" />
<text  x="95.16" y="2031.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="689.6" y="1861" width="0.2" height="15.0" fill="rgb(216,21,40)" rx="2" ry="2" />
<text  x="692.64" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1121.8" y="1797" width="0.2" height="15.0" fill="rgb(241,23,2)" rx="2" ry="2" />
<text  x="1124.80" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="93.2" y="1205" width="18.9" height="15.0" fill="rgb(221,149,39)" rx="2" ry="2" />
<text  x="96.16" y="1215.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="126.1" y="1957" width="0.4" height="15.0" fill="rgb(214,196,35)" rx="2" ry="2" />
<text  x="129.07" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="109.1" y="53" width="0.6" height="15.0" fill="rgb(242,50,52)" rx="2" ry="2" />
<text  x="112.11" y="63.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="247.7" y="1877" width="0.4" height="15.0" fill="rgb(253,43,22)" rx="2" ry="2" />
<text  x="250.72" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="631.6" y="1973" width="0.2" height="15.0" fill="rgb(226,6,27)" rx="2" ry="2" />
<text  x="634.61" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="599.5" y="1573" width="0.2" height="15.0" fill="rgb(242,147,1)" rx="2" ry="2" />
<text  x="602.50" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (241 samples, 4.07%)</title><rect x="532.1" y="2021" width="48.1" height="15.0" fill="rgb(222,78,38)" rx="2" ry="2" />
<text  x="535.10" y="2031.5" >foll..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="546.7" y="1893" width="0.2" height="15.0" fill="rgb(227,46,42)" rx="2" ry="2" />
<text  x="549.65" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="673.5" y="1941" width="0.2" height="15.0" fill="rgb(239,47,52)" rx="2" ry="2" />
<text  x="676.49" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="835.0" y="1541" width="0.2" height="15.0" fill="rgb(211,205,23)" rx="2" ry="2" />
<text  x="838.02" y="1551.5" ></text>
</g>
<g >
<title>__memchr_avx2 (3 samples, 0.05%)</title><rect x="1134.8" y="2053" width="0.6" height="15.0" fill="rgb(238,122,7)" rx="2" ry="2" />
<text  x="1137.76" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="952.7" y="1957" width="0.2" height="15.0" fill="rgb(251,115,26)" rx="2" ry="2" />
<text  x="955.68" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="859.2" y="1589" width="0.2" height="15.0" fill="rgb(250,213,42)" rx="2" ry="2" />
<text  x="862.15" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="599.5" y="1477" width="0.2" height="15.0" fill="rgb(206,84,49)" rx="2" ry="2" />
<text  x="602.50" y="1487.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (12 samples, 0.20%)</title><rect x="600.9" y="1861" width="2.4" height="15.0" fill="rgb(219,158,14)" rx="2" ry="2" />
<text  x="603.90" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1083.5" y="1861" width="0.2" height="15.0" fill="rgb(249,22,4)" rx="2" ry="2" />
<text  x="1086.51" y="1871.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="900.4" y="2005" width="0.4" height="15.0" fill="rgb(244,59,28)" rx="2" ry="2" />
<text  x="903.43" y="2015.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="523.3" y="1941" width="0.2" height="15.0" fill="rgb(213,198,27)" rx="2" ry="2" />
<text  x="526.32" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="970.4" y="1813" width="0.2" height="15.0" fill="rgb(254,191,51)" rx="2" ry="2" />
<text  x="973.43" y="1823.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="252.5" y="1525" width="0.2" height="15.0" fill="rgb(215,158,20)" rx="2" ry="2" />
<text  x="255.50" y="1535.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="481.2" y="1685" width="0.2" height="15.0" fill="rgb(245,184,53)" rx="2" ry="2" />
<text  x="484.24" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="535.3" y="1941" width="0.8" height="15.0" fill="rgb(244,127,2)" rx="2" ry="2" />
<text  x="538.29" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="111.7" y="261" width="0.2" height="15.0" fill="rgb(221,120,40)" rx="2" ry="2" />
<text  x="114.71" y="271.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="95.4" y="37" width="0.2" height="15.0" fill="rgb(230,148,8)" rx="2" ry="2" />
<text  x="98.35" y="47.5" ></text>
</g>
<g >
<title>folly::operator&amp; (2 samples, 0.03%)</title><rect x="883.1" y="1893" width="0.4" height="15.0" fill="rgb(211,36,0)" rx="2" ry="2" />
<text  x="886.08" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="747.9" y="1637" width="0.4" height="15.0" fill="rgb(243,77,26)" rx="2" ry="2" />
<text  x="750.87" y="1647.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="340.2" y="1941" width="0.2" height="15.0" fill="rgb(249,66,2)" rx="2" ry="2" />
<text  x="343.25" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (56 samples, 0.95%)</title><rect x="1106.0" y="1813" width="11.2" height="15.0" fill="rgb(214,96,8)" rx="2" ry="2" />
<text  x="1109.04" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="51.5" y="1877" width="0.2" height="15.0" fill="rgb(215,100,29)" rx="2" ry="2" />
<text  x="54.48" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="81.8" y="1829" width="0.2" height="15.0" fill="rgb(223,163,47)" rx="2" ry="2" />
<text  x="84.79" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (4 samples, 0.07%)</title><rect x="1000.3" y="1989" width="0.8" height="15.0" fill="rgb(208,144,40)" rx="2" ry="2" />
<text  x="1003.35" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="241.9" y="1877" width="0.2" height="15.0" fill="rgb(239,175,35)" rx="2" ry="2" />
<text  x="244.93" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1176.6" y="1989" width="0.2" height="15.0" fill="rgb(211,4,3)" rx="2" ry="2" />
<text  x="1179.64" y="1999.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1009.3" y="1973" width="0.4" height="15.0" fill="rgb(216,153,47)" rx="2" ry="2" />
<text  x="1012.32" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1002.7" y="2021" width="0.2" height="15.0" fill="rgb(219,4,25)" rx="2" ry="2" />
<text  x="1005.74" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="232.2" y="1925" width="0.2" height="15.0" fill="rgb(234,226,7)" rx="2" ry="2" />
<text  x="235.16" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="922.4" y="2037" width="0.2" height="15.0" fill="rgb(211,52,51)" rx="2" ry="2" />
<text  x="925.37" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="564.8" y="1941" width="0.2" height="15.0" fill="rgb(253,73,16)" rx="2" ry="2" />
<text  x="567.80" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="1088.5" y="1909" width="1.0" height="15.0" fill="rgb(213,211,17)" rx="2" ry="2" />
<text  x="1091.49" y="1919.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="968.0" y="2005" width="0.2" height="15.0" fill="rgb(225,67,5)" rx="2" ry="2" />
<text  x="971.04" y="2015.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="653.5" y="1941" width="0.2" height="15.0" fill="rgb(207,91,21)" rx="2" ry="2" />
<text  x="656.55" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="102.7" y="37" width="0.6" height="15.0" fill="rgb(238,141,51)" rx="2" ry="2" />
<text  x="105.73" y="47.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="997.8" y="1557" width="0.2" height="15.0" fill="rgb(250,148,8)" rx="2" ry="2" />
<text  x="1000.75" y="1567.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1150.7" y="1957" width="0.2" height="15.0" fill="rgb(210,51,31)" rx="2" ry="2" />
<text  x="1153.71" y="1967.5" ></text>
</g>
<g >
<title>security_inode_free (1 samples, 0.02%)</title><rect x="739.9" y="1669" width="0.2" height="15.0" fill="rgb(223,135,7)" rx="2" ry="2" />
<text  x="742.90" y="1679.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="111.5" y="85" width="0.2" height="15.0" fill="rgb(241,107,30)" rx="2" ry="2" />
<text  x="114.51" y="95.5" ></text>
</g>
<g >
<title>__fget (6 samples, 0.10%)</title><rect x="314.1" y="1909" width="1.2" height="15.0" fill="rgb(228,190,37)" rx="2" ry="2" />
<text  x="317.12" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="886.9" y="1893" width="0.4" height="15.0" fill="rgb(219,168,51)" rx="2" ry="2" />
<text  x="889.87" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (34 samples, 0.57%)</title><rect x="761.8" y="1717" width="6.8" height="15.0" fill="rgb(242,163,28)" rx="2" ry="2" />
<text  x="764.83" y="1727.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (8 samples, 0.14%)</title><rect x="984.6" y="1989" width="1.6" height="15.0" fill="rgb(243,2,31)" rx="2" ry="2" />
<text  x="987.59" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="365.2" y="1925" width="0.2" height="15.0" fill="rgb(240,142,32)" rx="2" ry="2" />
<text  x="368.18" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="527.9" y="1861" width="0.2" height="15.0" fill="rgb(211,16,31)" rx="2" ry="2" />
<text  x="530.91" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="894.3" y="1877" width="0.2" height="15.0" fill="rgb(232,218,41)" rx="2" ry="2" />
<text  x="897.25" y="1887.5" ></text>
</g>
<g >
<title>inet_release (1 samples, 0.02%)</title><rect x="840.4" y="1781" width="0.2" height="15.0" fill="rgb(228,15,32)" rx="2" ry="2" />
<text  x="843.41" y="1791.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="480.2" y="1957" width="0.8" height="15.0" fill="rgb(212,38,38)" rx="2" ry="2" />
<text  x="483.25" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="252.5" y="1717" width="0.2" height="15.0" fill="rgb(252,112,26)" rx="2" ry="2" />
<text  x="255.50" y="1727.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="112.9" y="1365" width="0.2" height="15.0" fill="rgb(253,226,6)" rx="2" ry="2" />
<text  x="115.90" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="399.7" y="1877" width="0.2" height="15.0" fill="rgb(246,148,5)" rx="2" ry="2" />
<text  x="402.68" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="273.4" y="1637" width="0.2" height="15.0" fill="rgb(246,77,29)" rx="2" ry="2" />
<text  x="276.44" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(251,83,24)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.47%)</title><rect x="93.4" y="133" width="17.3" height="15.0" fill="rgb(246,56,50)" rx="2" ry="2" />
<text  x="96.36" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="661.3" y="1813" width="0.2" height="15.0" fill="rgb(214,64,14)" rx="2" ry="2" />
<text  x="664.32" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="925.0" y="2005" width="0.2" height="15.0" fill="rgb(234,106,51)" rx="2" ry="2" />
<text  x="927.96" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1054.0" y="1957" width="0.2" height="15.0" fill="rgb(250,181,34)" rx="2" ry="2" />
<text  x="1056.99" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="177.9" y="1861" width="0.2" height="15.0" fill="rgb(219,217,42)" rx="2" ry="2" />
<text  x="180.92" y="1871.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (2 samples, 0.03%)</title><rect x="738.7" y="1637" width="0.4" height="15.0" fill="rgb(218,163,23)" rx="2" ry="2" />
<text  x="741.70" y="1647.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1055.0" y="1941" width="0.2" height="15.0" fill="rgb(214,14,43)" rx="2" ry="2" />
<text  x="1057.99" y="1951.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="116.3" y="1909" width="0.2" height="15.0" fill="rgb(218,21,34)" rx="2" ry="2" />
<text  x="119.29" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1100.5" y="1893" width="0.6" height="15.0" fill="rgb(233,31,24)" rx="2" ry="2" />
<text  x="1103.46" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (323 samples, 5.46%)</title><rect x="20.0" y="2037" width="64.4" height="15.0" fill="rgb(234,162,44)" rx="2" ry="2" />
<text  x="22.97" y="2047.5" >folly::..</text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="1173.4" y="2037" width="0.2" height="15.0" fill="rgb(220,81,43)" rx="2" ry="2" />
<text  x="1176.45" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="725.9" y="1733" width="0.2" height="15.0" fill="rgb(210,7,33)" rx="2" ry="2" />
<text  x="728.94" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="484.6" y="1813" width="0.2" height="15.0" fill="rgb(224,111,24)" rx="2" ry="2" />
<text  x="487.63" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1079.5" y="1685" width="0.2" height="15.0" fill="rgb(236,192,9)" rx="2" ry="2" />
<text  x="1082.52" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (458 samples, 7.74%)</title><rect x="224.0" y="2005" width="91.3" height="15.0" fill="rgb(250,108,48)" rx="2" ry="2" />
<text  x="226.98" y="2015.5" >do_syscall..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="527.9" y="1877" width="0.2" height="15.0" fill="rgb(213,58,53)" rx="2" ry="2" />
<text  x="530.91" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1128.0" y="1877" width="0.2" height="15.0" fill="rgb(236,105,23)" rx="2" ry="2" />
<text  x="1130.98" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (24 samples, 0.41%)</title><rect x="703.6" y="1989" width="4.8" height="15.0" fill="rgb(236,60,30)" rx="2" ry="2" />
<text  x="706.60" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (2 samples, 0.03%)</title><rect x="83.0" y="2005" width="0.4" height="15.0" fill="rgb(248,74,21)" rx="2" ry="2" />
<text  x="85.99" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="252.5" y="1621" width="0.2" height="15.0" fill="rgb(221,22,30)" rx="2" ry="2" />
<text  x="255.50" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="74.2" y="1813" width="0.2" height="15.0" fill="rgb(254,226,15)" rx="2" ry="2" />
<text  x="77.21" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="873.7" y="1861" width="0.2" height="15.0" fill="rgb(215,130,1)" rx="2" ry="2" />
<text  x="876.71" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (33 samples, 0.56%)</title><rect x="548.2" y="2005" width="6.6" height="15.0" fill="rgb(250,219,16)" rx="2" ry="2" />
<text  x="551.25" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (6 samples, 0.10%)</title><rect x="583.7" y="1909" width="1.2" height="15.0" fill="rgb(235,44,16)" rx="2" ry="2" />
<text  x="586.75" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="835.0" y="1701" width="0.2" height="15.0" fill="rgb(206,189,24)" rx="2" ry="2" />
<text  x="838.02" y="1711.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="93.2" y="965" width="0.2" height="15.0" fill="rgb(220,90,31)" rx="2" ry="2" />
<text  x="96.16" y="975.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="102.5" y="37" width="0.2" height="15.0" fill="rgb(210,8,8)" rx="2" ry="2" />
<text  x="105.53" y="47.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (2 samples, 0.03%)</title><rect x="1128.2" y="2037" width="0.4" height="15.0" fill="rgb(224,205,20)" rx="2" ry="2" />
<text  x="1131.18" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="618.2" y="1973" width="0.2" height="15.0" fill="rgb(217,189,29)" rx="2" ry="2" />
<text  x="621.25" y="1983.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="1077.1" y="1829" width="0.2" height="15.0" fill="rgb(232,77,25)" rx="2" ry="2" />
<text  x="1080.13" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (3 samples, 0.05%)</title><rect x="886.7" y="1925" width="0.6" height="15.0" fill="rgb(253,43,11)" rx="2" ry="2" />
<text  x="889.67" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1105.0" y="1781" width="0.2" height="15.0" fill="rgb(254,111,10)" rx="2" ry="2" />
<text  x="1108.04" y="1791.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1026.3" y="1925" width="0.2" height="15.0" fill="rgb(211,104,9)" rx="2" ry="2" />
<text  x="1029.27" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="29.3" y="1909" width="0.2" height="15.0" fill="rgb(217,77,7)" rx="2" ry="2" />
<text  x="32.34" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="1174.8" y="2005" width="0.2" height="15.0" fill="rgb(222,124,19)" rx="2" ry="2" />
<text  x="1177.84" y="2015.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (10 samples, 0.17%)</title><rect x="90.4" y="2037" width="2.0" height="15.0" fill="rgb(219,113,48)" rx="2" ry="2" />
<text  x="93.37" y="2047.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="473.1" y="1797" width="0.2" height="15.0" fill="rgb(249,199,32)" rx="2" ry="2" />
<text  x="476.07" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (3 samples, 0.05%)</title><rect x="656.3" y="1989" width="0.6" height="15.0" fill="rgb(222,184,18)" rx="2" ry="2" />
<text  x="659.34" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1079.7" y="1621" width="0.2" height="15.0" fill="rgb(214,42,50)" rx="2" ry="2" />
<text  x="1082.72" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="484.6" y="1749" width="0.2" height="15.0" fill="rgb(226,67,43)" rx="2" ry="2" />
<text  x="487.63" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="256.7" y="1861" width="0.2" height="15.0" fill="rgb(232,139,29)" rx="2" ry="2" />
<text  x="259.69" y="1871.5" ></text>
</g>
<g >
<title>sock_poll (47 samples, 0.79%)</title><rect x="452.7" y="1957" width="9.4" height="15.0" fill="rgb(228,107,26)" rx="2" ry="2" />
<text  x="455.72" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="766.2" y="1413" width="0.2" height="15.0" fill="rgb(235,68,9)" rx="2" ry="2" />
<text  x="769.22" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="636.8" y="1925" width="0.4" height="15.0" fill="rgb(228,228,16)" rx="2" ry="2" />
<text  x="639.79" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.7" y="1941" width="0.2" height="15.0" fill="rgb(231,89,1)" rx="2" ry="2" />
<text  x="890.67" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="785.6" y="1413" width="0.2" height="15.0" fill="rgb(249,1,16)" rx="2" ry="2" />
<text  x="788.57" y="1423.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.22%)</title><rect x="11.4" y="1941" width="2.6" height="15.0" fill="rgb(213,183,4)" rx="2" ry="2" />
<text  x="14.40" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (8 samples, 0.14%)</title><rect x="934.7" y="1893" width="1.6" height="15.0" fill="rgb(226,134,43)" rx="2" ry="2" />
<text  x="937.74" y="1903.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="565.2" y="1653" width="0.2" height="15.0" fill="rgb(226,22,1)" rx="2" ry="2" />
<text  x="568.20" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="964.1" y="2021" width="2.1" height="15.0" fill="rgb(235,130,43)" rx="2" ry="2" />
<text  x="967.05" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1135.4" y="1941" width="0.2" height="15.0" fill="rgb(234,43,30)" rx="2" ry="2" />
<text  x="1138.36" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (36 samples, 0.61%)</title><rect x="607.9" y="1925" width="7.2" height="15.0" fill="rgb(213,125,11)" rx="2" ry="2" />
<text  x="610.88" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="915.6" y="1925" width="0.2" height="15.0" fill="rgb(205,111,38)" rx="2" ry="2" />
<text  x="918.59" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (87 samples, 1.47%)</title><rect x="586.3" y="1925" width="17.4" height="15.0" fill="rgb(211,111,52)" rx="2" ry="2" />
<text  x="589.34" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="121.3" y="1717" width="0.2" height="15.0" fill="rgb(242,202,45)" rx="2" ry="2" />
<text  x="124.28" y="1727.5" ></text>
</g>
<g >
<title>skb_release_all (75 samples, 1.27%)</title><rect x="1072.7" y="1909" width="15.0" height="15.0" fill="rgb(224,126,42)" rx="2" ry="2" />
<text  x="1075.74" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="82.4" y="1957" width="0.2" height="15.0" fill="rgb(236,164,42)" rx="2" ry="2" />
<text  x="85.39" y="1967.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="341.2" y="1621" width="0.2" height="15.0" fill="rgb(215,213,32)" rx="2" ry="2" />
<text  x="344.25" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5 samples, 0.08%)</title><rect x="921.4" y="1989" width="1.0" height="15.0" fill="rgb(242,201,28)" rx="2" ry="2" />
<text  x="924.37" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1150.7" y="1493" width="0.2" height="15.0" fill="rgb(210,15,44)" rx="2" ry="2" />
<text  x="1153.71" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="766.2" y="1605" width="0.2" height="15.0" fill="rgb(227,108,5)" rx="2" ry="2" />
<text  x="769.22" y="1615.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1071.9" y="1829" width="0.2" height="15.0" fill="rgb(236,167,22)" rx="2" ry="2" />
<text  x="1074.94" y="1839.5" ></text>
</g>
<g >
<title>sys_sendmsg (416 samples, 7.03%)</title><rect x="232.4" y="1989" width="82.9" height="15.0" fill="rgb(213,97,40)" rx="2" ry="2" />
<text  x="235.36" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="185.7" y="2037" width="0.4" height="15.0" fill="rgb(230,56,16)" rx="2" ry="2" />
<text  x="188.69" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="156.8" y="2021" width="0.2" height="15.0" fill="rgb(232,62,16)" rx="2" ry="2" />
<text  x="159.78" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="379.7" y="1669" width="0.2" height="15.0" fill="rgb(254,131,2)" rx="2" ry="2" />
<text  x="382.73" y="1679.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="1173.6" y="2037" width="0.2" height="15.0" fill="rgb(213,129,10)" rx="2" ry="2" />
<text  x="1176.65" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (30 samples, 0.51%)</title><rect x="1028.3" y="2037" width="5.9" height="15.0" fill="rgb(235,109,15)" rx="2" ry="2" />
<text  x="1031.27" y="2047.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="997.8" y="1605" width="0.2" height="15.0" fill="rgb(232,69,1)" rx="2" ry="2" />
<text  x="1000.75" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (7 samples, 0.12%)</title><rect x="35.7" y="1989" width="1.4" height="15.0" fill="rgb(207,148,15)" rx="2" ry="2" />
<text  x="38.73" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (55 samples, 0.93%)</title><rect x="1106.2" y="1797" width="11.0" height="15.0" fill="rgb(219,170,33)" rx="2" ry="2" />
<text  x="1109.24" y="1807.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="451.1" y="1973" width="0.2" height="15.0" fill="rgb(249,156,22)" rx="2" ry="2" />
<text  x="454.13" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="526.5" y="1941" width="0.2" height="15.0" fill="rgb(232,90,6)" rx="2" ry="2" />
<text  x="529.51" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1049.6" y="1669" width="0.2" height="15.0" fill="rgb(244,154,11)" rx="2" ry="2" />
<text  x="1052.60" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (95 samples, 1.61%)</title><rect x="130.9" y="1989" width="18.9" height="15.0" fill="rgb(247,179,19)" rx="2" ry="2" />
<text  x="133.85" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="564.8" y="1893" width="0.2" height="15.0" fill="rgb(223,165,48)" rx="2" ry="2" />
<text  x="567.80" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="697.8" y="1989" width="0.2" height="15.0" fill="rgb(248,125,0)" rx="2" ry="2" />
<text  x="700.82" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="1176.2" y="1941" width="0.2" height="15.0" fill="rgb(215,184,30)" rx="2" ry="2" />
<text  x="1179.24" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="110.9" y="133" width="0.2" height="15.0" fill="rgb(222,57,11)" rx="2" ry="2" />
<text  x="113.91" y="143.5" ></text>
</g>
<g >
<title>sock_def_readable (5 samples, 0.08%)</title><rect x="274.4" y="1493" width="1.0" height="15.0" fill="rgb(222,74,35)" rx="2" ry="2" />
<text  x="277.44" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="109.1" y="85" width="1.0" height="15.0" fill="rgb(213,206,7)" rx="2" ry="2" />
<text  x="112.11" y="95.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="924.8" y="1701" width="0.2" height="15.0" fill="rgb(207,103,6)" rx="2" ry="2" />
<text  x="927.76" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="697.0" y="1925" width="0.2" height="15.0" fill="rgb(240,7,27)" rx="2" ry="2" />
<text  x="700.02" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="824.7" y="1669" width="0.2" height="15.0" fill="rgb(220,52,12)" rx="2" ry="2" />
<text  x="827.65" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1174.6" y="2005" width="0.2" height="15.0" fill="rgb(226,183,2)" rx="2" ry="2" />
<text  x="1177.64" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="402.7" y="1957" width="0.4" height="15.0" fill="rgb(215,228,7)" rx="2" ry="2" />
<text  x="405.67" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="851.8" y="1797" width="0.2" height="15.0" fill="rgb(211,135,4)" rx="2" ry="2" />
<text  x="854.77" y="1807.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="659.5" y="1973" width="0.4" height="15.0" fill="rgb(248,113,47)" rx="2" ry="2" />
<text  x="662.53" y="1983.5" ></text>
</g>
<g >
<title>__alloc_skb (35 samples, 0.59%)</title><rect x="248.3" y="1861" width="7.0" height="15.0" fill="rgb(209,11,38)" rx="2" ry="2" />
<text  x="251.31" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1017.1" y="1957" width="0.4" height="15.0" fill="rgb(252,3,29)" rx="2" ry="2" />
<text  x="1020.10" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (458 samples, 7.74%)</title><rect x="1035.2" y="2021" width="91.4" height="15.0" fill="rgb(228,1,0)" rx="2" ry="2" />
<text  x="1038.25" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="212.2" y="1701" width="0.2" height="15.0" fill="rgb(239,31,38)" rx="2" ry="2" />
<text  x="215.22" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="152.8" y="2005" width="0.4" height="15.0" fill="rgb(253,215,47)" rx="2" ry="2" />
<text  x="155.79" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="909.8" y="1925" width="0.2" height="15.0" fill="rgb(250,134,24)" rx="2" ry="2" />
<text  x="912.81" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="997.8" y="1845" width="0.2" height="15.0" fill="rgb(208,196,46)" rx="2" ry="2" />
<text  x="1000.75" y="1855.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="526.9" y="2005" width="0.2" height="15.0" fill="rgb(253,3,31)" rx="2" ry="2" />
<text  x="529.91" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1121.8" y="1749" width="0.2" height="15.0" fill="rgb(229,131,34)" rx="2" ry="2" />
<text  x="1124.80" y="1759.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="521.7" y="1909" width="0.2" height="15.0" fill="rgb(222,195,18)" rx="2" ry="2" />
<text  x="524.73" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="852.8" y="1845" width="0.2" height="15.0" fill="rgb(250,193,38)" rx="2" ry="2" />
<text  x="855.77" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="785.6" y="1445" width="0.4" height="15.0" fill="rgb(244,47,27)" rx="2" ry="2" />
<text  x="788.57" y="1455.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="400.3" y="1941" width="1.2" height="15.0" fill="rgb(246,200,53)" rx="2" ry="2" />
<text  x="403.28" y="1951.5" ></text>
</g>
<g >
<title>init_once (1 samples, 0.02%)</title><rect x="376.9" y="1829" width="0.2" height="15.0" fill="rgb(227,121,17)" rx="2" ry="2" />
<text  x="379.94" y="1839.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (1 samples, 0.02%)</title><rect x="534.7" y="2005" width="0.2" height="15.0" fill="rgb(219,35,54)" rx="2" ry="2" />
<text  x="537.69" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="766.2" y="1621" width="0.2" height="15.0" fill="rgb(224,37,14)" rx="2" ry="2" />
<text  x="769.22" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="599.5" y="1605" width="0.2" height="15.0" fill="rgb(245,156,16)" rx="2" ry="2" />
<text  x="602.50" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (6 samples, 0.10%)</title><rect x="123.1" y="1941" width="1.2" height="15.0" fill="rgb(220,58,9)" rx="2" ry="2" />
<text  x="126.07" y="1951.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="322.5" y="2037" width="0.4" height="15.0" fill="rgb(207,51,2)" rx="2" ry="2" />
<text  x="325.50" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="49.5" y="1957" width="0.6" height="15.0" fill="rgb(214,17,54)" rx="2" ry="2" />
<text  x="52.49" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="997.8" y="1957" width="0.2" height="15.0" fill="rgb(235,198,31)" rx="2" ry="2" />
<text  x="1000.75" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="541.5" y="1845" width="0.2" height="15.0" fill="rgb(238,139,20)" rx="2" ry="2" />
<text  x="544.47" y="1855.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (14 samples, 0.24%)</title><rect x="182.9" y="2037" width="2.8" height="15.0" fill="rgb(211,72,26)" rx="2" ry="2" />
<text  x="185.90" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="84.4" y="2021" width="0.4" height="15.0" fill="rgb(212,0,21)" rx="2" ry="2" />
<text  x="87.39" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (120 samples, 2.03%)</title><rect x="267.9" y="1797" width="23.9" height="15.0" fill="rgb(231,1,47)" rx="2" ry="2" />
<text  x="270.86" y="1807.5" >i..</text>
</g>
<g >
<title>event_del_nolock_ (2 samples, 0.03%)</title><rect x="1141.1" y="2053" width="0.4" height="15.0" fill="rgb(216,13,27)" rx="2" ry="2" />
<text  x="1144.14" y="2063.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="294.2" y="1797" width="0.4" height="15.0" fill="rgb(206,49,28)" rx="2" ry="2" />
<text  x="297.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="485.8" y="1749" width="0.2" height="15.0" fill="rgb(236,118,53)" rx="2" ry="2" />
<text  x="488.83" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="402.9" y="1909" width="0.2" height="15.0" fill="rgb(246,179,25)" rx="2" ry="2" />
<text  x="405.87" y="1919.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="952.7" y="1637" width="0.2" height="15.0" fill="rgb(236,83,24)" rx="2" ry="2" />
<text  x="955.68" y="1647.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="512.6" y="1893" width="0.2" height="15.0" fill="rgb(206,102,33)" rx="2" ry="2" />
<text  x="515.55" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getWrappedTransport (1 samples, 0.02%)</title><rect x="966.2" y="2037" width="0.2" height="15.0" fill="rgb(243,47,14)" rx="2" ry="2" />
<text  x="969.24" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1090.3" y="1909" width="0.2" height="15.0" fill="rgb(212,105,12)" rx="2" ry="2" />
<text  x="1093.29" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="998.6" y="1973" width="0.2" height="15.0" fill="rgb(231,71,45)" rx="2" ry="2" />
<text  x="1001.55" y="1983.5" ></text>
</g>
<g >
<title>sys_futex (13 samples, 0.22%)</title><rect x="11.4" y="2005" width="2.6" height="15.0" fill="rgb(216,126,51)" rx="2" ry="2" />
<text  x="14.40" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (6 samples, 0.10%)</title><rect x="622.4" y="2037" width="1.2" height="15.0" fill="rgb(231,16,16)" rx="2" ry="2" />
<text  x="625.44" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="537.3" y="1509" width="0.2" height="15.0" fill="rgb(235,213,48)" rx="2" ry="2" />
<text  x="540.28" y="1519.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="873.7" y="1701" width="0.2" height="15.0" fill="rgb(208,192,4)" rx="2" ry="2" />
<text  x="876.71" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1090.7" y="1701" width="0.2" height="15.0" fill="rgb(223,225,19)" rx="2" ry="2" />
<text  x="1093.69" y="1711.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="747.5" y="1493" width="0.2" height="15.0" fill="rgb(226,115,8)" rx="2" ry="2" />
<text  x="750.48" y="1503.5" ></text>
</g>
<g >
<title>vfprintf (7 samples, 0.12%)</title><rect x="1136.8" y="2037" width="1.3" height="15.0" fill="rgb(246,180,39)" rx="2" ry="2" />
<text  x="1139.75" y="2047.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="689.8" y="1925" width="1.6" height="15.0" fill="rgb(247,48,33)" rx="2" ry="2" />
<text  x="692.84" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="402.1" y="1973" width="0.2" height="15.0" fill="rgb(249,145,17)" rx="2" ry="2" />
<text  x="405.07" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="514.5" y="1973" width="0.2" height="15.0" fill="rgb(211,160,53)" rx="2" ry="2" />
<text  x="517.55" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="482.8" y="1845" width="0.2" height="15.0" fill="rgb(236,76,41)" rx="2" ry="2" />
<text  x="485.84" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="1022.1" y="1989" width="0.2" height="15.0" fill="rgb(216,132,46)" rx="2" ry="2" />
<text  x="1025.08" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (3 samples, 0.05%)</title><rect x="71.4" y="1941" width="0.6" height="15.0" fill="rgb(205,61,23)" rx="2" ry="2" />
<text  x="74.42" y="1951.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="492.6" y="1941" width="0.2" height="15.0" fill="rgb(238,46,53)" rx="2" ry="2" />
<text  x="495.61" y="1951.5" ></text>
</g>
<g >
<title>sys_getpeername (6 samples, 0.10%)</title><rect x="706.0" y="1845" width="1.2" height="15.0" fill="rgb(242,128,33)" rx="2" ry="2" />
<text  x="708.99" y="1855.5" ></text>
</g>
<g >
<title>__close (11 samples, 0.19%)</title><rect x="958.3" y="1973" width="2.2" height="15.0" fill="rgb(213,151,41)" rx="2" ry="2" />
<text  x="961.27" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="610.7" y="1621" width="0.2" height="15.0" fill="rgb(229,180,39)" rx="2" ry="2" />
<text  x="613.67" y="1631.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="242.1" y="1893" width="0.2" height="15.0" fill="rgb(245,11,20)" rx="2" ry="2" />
<text  x="245.13" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (64 samples, 1.08%)</title><rect x="659.9" y="1973" width="12.8" height="15.0" fill="rgb(247,129,52)" rx="2" ry="2" />
<text  x="662.93" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="971.4" y="2037" width="0.8" height="15.0" fill="rgb(237,193,42)" rx="2" ry="2" />
<text  x="974.43" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="610.7" y="1429" width="0.2" height="15.0" fill="rgb(233,31,20)" rx="2" ry="2" />
<text  x="613.67" y="1439.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="212.4" y="1813" width="0.2" height="15.0" fill="rgb(239,112,7)" rx="2" ry="2" />
<text  x="215.42" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1017.1" y="1989" width="0.4" height="15.0" fill="rgb(231,20,10)" rx="2" ry="2" />
<text  x="1020.10" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (13 samples, 0.22%)</title><rect x="11.4" y="1861" width="2.6" height="15.0" fill="rgb(233,23,22)" rx="2" ry="2" />
<text  x="14.40" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1079.7" y="1669" width="0.2" height="15.0" fill="rgb(213,43,45)" rx="2" ry="2" />
<text  x="1082.72" y="1679.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="56.9" y="1925" width="0.2" height="15.0" fill="rgb(211,67,45)" rx="2" ry="2" />
<text  x="59.86" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="128.5" y="1973" width="0.2" height="15.0" fill="rgb(237,97,30)" rx="2" ry="2" />
<text  x="131.46" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="578.4" y="1765" width="0.2" height="15.0" fill="rgb(213,225,19)" rx="2" ry="2" />
<text  x="581.36" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="936.7" y="1829" width="0.2" height="15.0" fill="rgb(221,142,3)" rx="2" ry="2" />
<text  x="939.73" y="1839.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.02%)</title><rect x="236.9" y="1925" width="0.2" height="15.0" fill="rgb(206,140,40)" rx="2" ry="2" />
<text  x="239.95" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (2 samples, 0.03%)</title><rect x="618.8" y="2037" width="0.4" height="15.0" fill="rgb(237,126,12)" rx="2" ry="2" />
<text  x="621.85" y="2047.5" ></text>
</g>
<g >
<title>__destroy_inode (11 samples, 0.19%)</title><rect x="737.9" y="1685" width="2.2" height="15.0" fill="rgb(235,27,34)" rx="2" ry="2" />
<text  x="740.90" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="859.2" y="1733" width="0.2" height="15.0" fill="rgb(239,169,26)" rx="2" ry="2" />
<text  x="862.15" y="1743.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (2 samples, 0.03%)</title><rect x="521.9" y="1973" width="0.4" height="15.0" fill="rgb(235,167,11)" rx="2" ry="2" />
<text  x="524.92" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="538.5" y="1973" width="0.2" height="15.0" fill="rgb(212,216,15)" rx="2" ry="2" />
<text  x="541.48" y="1983.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1070.7" y="1861" width="0.6" height="15.0" fill="rgb(227,220,11)" rx="2" ry="2" />
<text  x="1073.74" y="1871.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="683.3" y="1893" width="0.4" height="15.0" fill="rgb(219,221,25)" rx="2" ry="2" />
<text  x="686.26" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="669.3" y="1781" width="0.6" height="15.0" fill="rgb(216,125,9)" rx="2" ry="2" />
<text  x="672.30" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="145.0" y="1893" width="0.2" height="15.0" fill="rgb(221,94,31)" rx="2" ry="2" />
<text  x="148.01" y="1903.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1109.6" y="1477" width="0.2" height="15.0" fill="rgb(211,31,50)" rx="2" ry="2" />
<text  x="1112.63" y="1487.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (6 samples, 0.10%)</title><rect x="872.7" y="1989" width="1.2" height="15.0" fill="rgb(238,78,45)" rx="2" ry="2" />
<text  x="875.71" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (2 samples, 0.03%)</title><rect x="92.6" y="2021" width="0.4" height="15.0" fill="rgb(245,174,40)" rx="2" ry="2" />
<text  x="95.56" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="661" width="18.5" height="15.0" fill="rgb(213,33,28)" rx="2" ry="2" />
<text  x="96.36" y="671.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="928.2" y="1909" width="0.2" height="15.0" fill="rgb(228,2,23)" rx="2" ry="2" />
<text  x="931.15" y="1919.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="154.8" y="1893" width="0.2" height="15.0" fill="rgb(230,31,40)" rx="2" ry="2" />
<text  x="157.78" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="379.7" y="1861" width="0.2" height="15.0" fill="rgb(241,77,48)" rx="2" ry="2" />
<text  x="382.73" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="622.2" y="2005" width="0.2" height="15.0" fill="rgb(225,222,48)" rx="2" ry="2" />
<text  x="625.24" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.76%)</title><rect x="93.2" y="1541" width="20.7" height="15.0" fill="rgb(224,51,1)" rx="2" ry="2" />
<text  x="96.16" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="579.0" y="1925" width="0.2" height="15.0" fill="rgb(239,112,28)" rx="2" ry="2" />
<text  x="581.96" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (9 samples, 0.15%)</title><rect x="945.5" y="1973" width="1.8" height="15.0" fill="rgb(216,111,40)" rx="2" ry="2" />
<text  x="948.50" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="785.8" y="1349" width="0.2" height="15.0" fill="rgb(212,96,12)" rx="2" ry="2" />
<text  x="788.76" y="1359.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="502.6" y="1685" width="0.2" height="15.0" fill="rgb(254,178,25)" rx="2" ry="2" />
<text  x="505.58" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="111.1" y="325" width="0.2" height="15.0" fill="rgb(228,116,4)" rx="2" ry="2" />
<text  x="114.11" y="335.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="645.0" y="2005" width="0.4" height="15.0" fill="rgb(239,12,23)" rx="2" ry="2" />
<text  x="647.97" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="1148.3" y="1989" width="0.2" height="15.0" fill="rgb(225,100,46)" rx="2" ry="2" />
<text  x="1151.32" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="585.3" y="1909" width="0.2" height="15.0" fill="rgb(252,87,48)" rx="2" ry="2" />
<text  x="588.34" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="564.0" y="1893" width="0.2" height="15.0" fill="rgb(241,114,15)" rx="2" ry="2" />
<text  x="567.00" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="252.5" y="1589" width="0.2" height="15.0" fill="rgb(249,121,33)" rx="2" ry="2" />
<text  x="255.50" y="1599.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1185.0" y="2005" width="0.2" height="15.0" fill="rgb(214,1,12)" rx="2" ry="2" />
<text  x="1188.01" y="2015.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (10 samples, 0.17%)</title><rect x="355.2" y="1893" width="2.0" height="15.0" fill="rgb(212,47,47)" rx="2" ry="2" />
<text  x="358.21" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="629" width="18.5" height="15.0" fill="rgb(232,187,46)" rx="2" ry="2" />
<text  x="96.36" y="639.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="904.2" y="1989" width="1.0" height="15.0" fill="rgb(242,194,32)" rx="2" ry="2" />
<text  x="907.22" y="1999.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.02%)</title><rect x="970.4" y="1685" width="0.2" height="15.0" fill="rgb(215,201,1)" rx="2" ry="2" />
<text  x="973.43" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.57%)</title><rect x="662.3" y="1909" width="6.8" height="15.0" fill="rgb(239,45,32)" rx="2" ry="2" />
<text  x="665.32" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="610.7" y="1813" width="0.2" height="15.0" fill="rgb(253,172,22)" rx="2" ry="2" />
<text  x="613.67" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="904.6" y="1973" width="0.2" height="15.0" fill="rgb(232,148,51)" rx="2" ry="2" />
<text  x="907.62" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1127.4" y="2037" width="0.4" height="15.0" fill="rgb(244,117,7)" rx="2" ry="2" />
<text  x="1130.38" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="988.2" y="1701" width="0.2" height="15.0" fill="rgb(240,118,39)" rx="2" ry="2" />
<text  x="991.18" y="1711.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (3 samples, 0.05%)</title><rect x="837.4" y="1765" width="0.6" height="15.0" fill="rgb(239,126,48)" rx="2" ry="2" />
<text  x="840.42" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="537.3" y="1701" width="0.2" height="15.0" fill="rgb(211,183,16)" rx="2" ry="2" />
<text  x="540.28" y="1711.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="818.1" y="1429" width="0.2" height="15.0" fill="rgb(246,134,45)" rx="2" ry="2" />
<text  x="821.07" y="1439.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="56.3" y="1877" width="0.4" height="15.0" fill="rgb(240,175,28)" rx="2" ry="2" />
<text  x="59.27" y="1887.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="71.0" y="1813" width="0.2" height="15.0" fill="rgb(218,47,50)" rx="2" ry="2" />
<text  x="74.02" y="1823.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (37 samples, 0.63%)</title><rect x="994.0" y="2037" width="7.3" height="15.0" fill="rgb(239,64,21)" rx="2" ry="2" />
<text  x="996.96" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="111.5" y="165" width="0.2" height="15.0" fill="rgb(206,14,50)" rx="2" ry="2" />
<text  x="114.51" y="175.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (4 samples, 0.07%)</title><rect x="1007.3" y="1989" width="0.8" height="15.0" fill="rgb(240,222,50)" rx="2" ry="2" />
<text  x="1010.33" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="904.8" y="1973" width="0.4" height="15.0" fill="rgb(213,139,39)" rx="2" ry="2" />
<text  x="907.82" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="584.7" y="1877" width="0.2" height="15.0" fill="rgb(242,218,36)" rx="2" ry="2" />
<text  x="587.74" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="748.1" y="1493" width="0.2" height="15.0" fill="rgb(225,129,34)" rx="2" ry="2" />
<text  x="751.07" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="325" width="17.7" height="15.0" fill="rgb(252,185,32)" rx="2" ry="2" />
<text  x="96.36" y="335.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1077" width="18.7" height="15.0" fill="rgb(254,152,17)" rx="2" ry="2" />
<text  x="96.16" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="864.5" y="1941" width="0.4" height="15.0" fill="rgb(247,62,47)" rx="2" ry="2" />
<text  x="867.54" y="1951.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="1118.4" y="1589" width="0.2" height="15.0" fill="rgb(252,207,28)" rx="2" ry="2" />
<text  x="1121.41" y="1599.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="390.1" y="1909" width="0.4" height="15.0" fill="rgb(235,36,3)" rx="2" ry="2" />
<text  x="393.10" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (11 samples, 0.19%)</title><rect x="273.6" y="1621" width="2.2" height="15.0" fill="rgb(224,143,29)" rx="2" ry="2" />
<text  x="276.64" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="190.1" y="2021" width="0.2" height="15.0" fill="rgb(207,11,54)" rx="2" ry="2" />
<text  x="193.08" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="450.5" y="1669" width="0.2" height="15.0" fill="rgb(244,204,11)" rx="2" ry="2" />
<text  x="453.53" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="924.8" y="1877" width="0.2" height="15.0" fill="rgb(206,217,35)" rx="2" ry="2" />
<text  x="927.76" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="60.7" y="1893" width="0.2" height="15.0" fill="rgb(239,221,7)" rx="2" ry="2" />
<text  x="63.65" y="1903.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="747.5" y="1781" width="0.2" height="15.0" fill="rgb(243,154,1)" rx="2" ry="2" />
<text  x="750.48" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.79%)</title><rect x="93.2" y="1637" width="21.1" height="15.0" fill="rgb(229,223,28)" rx="2" ry="2" />
<text  x="96.16" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="294.8" y="1829" width="0.2" height="15.0" fill="rgb(249,119,41)" rx="2" ry="2" />
<text  x="297.78" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="899.2" y="1989" width="0.2" height="15.0" fill="rgb(247,150,34)" rx="2" ry="2" />
<text  x="902.24" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onWriteQuiescence (1 samples, 0.02%)</title><rect x="702.4" y="1989" width="0.2" height="15.0" fill="rgb(233,157,21)" rx="2" ry="2" />
<text  x="705.40" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="873.7" y="1845" width="0.2" height="15.0" fill="rgb(220,144,42)" rx="2" ry="2" />
<text  x="876.71" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="818.1" y="1461" width="0.2" height="15.0" fill="rgb(213,128,32)" rx="2" ry="2" />
<text  x="821.07" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1090.7" y="1925" width="0.2" height="15.0" fill="rgb(248,147,28)" rx="2" ry="2" />
<text  x="1093.69" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="152.6" y="1877" width="0.2" height="15.0" fill="rgb(211,229,12)" rx="2" ry="2" />
<text  x="155.59" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="186.1" y="2021" width="0.2" height="15.0" fill="rgb(229,25,31)" rx="2" ry="2" />
<text  x="189.09" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (2 samples, 0.03%)</title><rect x="1150.9" y="1973" width="0.4" height="15.0" fill="rgb(248,76,14)" rx="2" ry="2" />
<text  x="1153.91" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="894.3" y="1957" width="0.2" height="15.0" fill="rgb(240,121,53)" rx="2" ry="2" />
<text  x="897.25" y="1967.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (15 samples, 0.25%)</title><rect x="551.8" y="1989" width="3.0" height="15.0" fill="rgb(217,184,28)" rx="2" ry="2" />
<text  x="554.84" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="855.2" y="1765" width="0.2" height="15.0" fill="rgb(226,54,24)" rx="2" ry="2" />
<text  x="858.16" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="60.7" y="1813" width="0.2" height="15.0" fill="rgb(252,79,18)" rx="2" ry="2" />
<text  x="63.65" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.2" y="1861" width="0.2" height="15.0" fill="rgb(249,196,35)" rx="2" ry="2" />
<text  x="77.21" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (642 samples, 10.85%)</title><rect x="717.2" y="1877" width="128.0" height="15.0" fill="rgb(221,26,47)" rx="2" ry="2" />
<text  x="720.16" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="617.3" y="2021" width="0.1" height="15.0" fill="rgb(242,50,23)" rx="2" ry="2" />
<text  x="620.25" y="2031.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="111.5" y="53" width="0.2" height="15.0" fill="rgb(233,79,28)" rx="2" ry="2" />
<text  x="114.51" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="810.3" y="1541" width="0.2" height="15.0" fill="rgb(242,69,10)" rx="2" ry="2" />
<text  x="813.29" y="1551.5" ></text>
</g>
<g >
<title>sock_destroy_inode (1 samples, 0.02%)</title><rect x="744.1" y="1701" width="0.2" height="15.0" fill="rgb(214,174,10)" rx="2" ry="2" />
<text  x="747.08" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="886.7" y="1909" width="0.6" height="15.0" fill="rgb(249,26,4)" rx="2" ry="2" />
<text  x="889.67" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (123 samples, 2.08%)</title><rect x="673.7" y="2037" width="24.5" height="15.0" fill="rgb(233,22,7)" rx="2" ry="2" />
<text  x="676.69" y="2047.5" >f..</text>
</g>
<g >
<title>ip_local_deliver_finish (7 samples, 0.12%)</title><rect x="274.0" y="1557" width="1.4" height="15.0" fill="rgb(220,42,41)" rx="2" ry="2" />
<text  x="277.04" y="1567.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="457.7" y="1877" width="0.2" height="15.0" fill="rgb(219,102,3)" rx="2" ry="2" />
<text  x="460.71" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="252.5" y="1765" width="0.2" height="15.0" fill="rgb(232,158,23)" rx="2" ry="2" />
<text  x="255.50" y="1775.5" ></text>
</g>
<g >
<title>inode_init_always (6 samples, 0.10%)</title><rect x="372.6" y="1909" width="1.2" height="15.0" fill="rgb(220,77,5)" rx="2" ry="2" />
<text  x="375.56" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.0" y="1733" width="0.2" height="15.0" fill="rgb(230,22,17)" rx="2" ry="2" />
<text  x="844.01" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="748.1" y="1477" width="0.2" height="15.0" fill="rgb(241,166,24)" rx="2" ry="2" />
<text  x="751.07" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="747.5" y="1765" width="0.2" height="15.0" fill="rgb(244,23,6)" rx="2" ry="2" />
<text  x="750.48" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="216.4" y="1957" width="0.2" height="15.0" fill="rgb(229,77,3)" rx="2" ry="2" />
<text  x="219.41" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="628.6" y="2005" width="0.2" height="15.0" fill="rgb(208,125,28)" rx="2" ry="2" />
<text  x="631.62" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="810.3" y="1477" width="0.2" height="15.0" fill="rgb(219,85,31)" rx="2" ry="2" />
<text  x="813.29" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="978.2" y="2005" width="0.2" height="15.0" fill="rgb(228,27,36)" rx="2" ry="2" />
<text  x="981.21" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (4 samples, 0.07%)</title><rect x="567.8" y="2005" width="0.8" height="15.0" fill="rgb(252,100,14)" rx="2" ry="2" />
<text  x="570.79" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="887.7" y="1653" width="0.2" height="15.0" fill="rgb(214,26,19)" rx="2" ry="2" />
<text  x="890.67" y="1663.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="835.0" y="1301" width="0.2" height="15.0" fill="rgb(245,122,36)" rx="2" ry="2" />
<text  x="838.02" y="1311.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="971.4" y="1861" width="0.2" height="15.0" fill="rgb(252,119,33)" rx="2" ry="2" />
<text  x="974.43" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (8 samples, 0.14%)</title><rect x="274.0" y="1573" width="1.6" height="15.0" fill="rgb(225,159,0)" rx="2" ry="2" />
<text  x="277.04" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="357.0" y="1861" width="0.2" height="15.0" fill="rgb(206,172,49)" rx="2" ry="2" />
<text  x="360.00" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="893.5" y="1861" width="0.4" height="15.0" fill="rgb(214,57,45)" rx="2" ry="2" />
<text  x="896.45" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="669.3" y="1925" width="0.6" height="15.0" fill="rgb(217,41,34)" rx="2" ry="2" />
<text  x="672.30" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (77 samples, 1.30%)</title><rect x="276.0" y="1733" width="15.4" height="15.0" fill="rgb(214,201,23)" rx="2" ry="2" />
<text  x="279.03" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="1147.1" y="1957" width="0.2" height="15.0" fill="rgb(249,30,44)" rx="2" ry="2" />
<text  x="1150.12" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="891.9" y="1941" width="0.2" height="15.0" fill="rgb(214,211,37)" rx="2" ry="2" />
<text  x="894.86" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="210.8" y="1765" width="0.2" height="15.0" fill="rgb(221,76,13)" rx="2" ry="2" />
<text  x="213.82" y="1775.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="893.7" y="1845" width="0.2" height="15.0" fill="rgb(220,149,0)" rx="2" ry="2" />
<text  x="896.65" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="537.3" y="1989" width="0.2" height="15.0" fill="rgb(211,78,14)" rx="2" ry="2" />
<text  x="540.28" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="209.6" y="1877" width="0.2" height="15.0" fill="rgb(207,1,21)" rx="2" ry="2" />
<text  x="212.62" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="984.8" y="1941" width="1.4" height="15.0" fill="rgb(226,59,36)" rx="2" ry="2" />
<text  x="987.79" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (14 samples, 0.24%)</title><rect x="11.4" y="2053" width="2.8" height="15.0" fill="rgb(237,42,53)" rx="2" ry="2" />
<text  x="14.40" y="2063.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="402.9" y="1733" width="0.2" height="15.0" fill="rgb(210,111,7)" rx="2" ry="2" />
<text  x="405.87" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="610.7" y="1765" width="0.2" height="15.0" fill="rgb(228,138,52)" rx="2" ry="2" />
<text  x="613.67" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="766.2" y="1653" width="0.2" height="15.0" fill="rgb(249,174,40)" rx="2" ry="2" />
<text  x="769.22" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="147.0" y="1861" width="0.2" height="15.0" fill="rgb(253,42,14)" rx="2" ry="2" />
<text  x="150.01" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1189.4" y="1893" width="0.2" height="15.0" fill="rgb(220,2,12)" rx="2" ry="2" />
<text  x="1192.40" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="785.8" y="1413" width="0.2" height="15.0" fill="rgb(244,179,54)" rx="2" ry="2" />
<text  x="788.76" y="1423.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1090.5" y="1909" width="0.2" height="15.0" fill="rgb(244,24,39)" rx="2" ry="2" />
<text  x="1093.49" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="853" width="18.5" height="15.0" fill="rgb(250,59,15)" rx="2" ry="2" />
<text  x="96.36" y="863.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="1017.1" y="1717" width="0.2" height="15.0" fill="rgb(211,150,1)" rx="2" ry="2" />
<text  x="1020.10" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="524.5" y="1989" width="0.8" height="15.0" fill="rgb(236,152,38)" rx="2" ry="2" />
<text  x="527.52" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1150.7" y="1445" width="0.2" height="15.0" fill="rgb(233,143,29)" rx="2" ry="2" />
<text  x="1153.71" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="257.3" y="1733" width="0.2" height="15.0" fill="rgb(227,100,51)" rx="2" ry="2" />
<text  x="260.29" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (26 samples, 0.44%)</title><rect x="121.9" y="1973" width="5.2" height="15.0" fill="rgb(244,85,6)" rx="2" ry="2" />
<text  x="124.88" y="1983.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="810.5" y="1445" width="0.2" height="15.0" fill="rgb(216,2,29)" rx="2" ry="2" />
<text  x="813.49" y="1455.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="502.6" y="1797" width="0.2" height="15.0" fill="rgb(253,124,11)" rx="2" ry="2" />
<text  x="505.58" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="988.2" y="1717" width="0.2" height="15.0" fill="rgb(209,167,45)" rx="2" ry="2" />
<text  x="991.18" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="485.8" y="1925" width="0.4" height="15.0" fill="rgb(231,150,52)" rx="2" ry="2" />
<text  x="488.83" y="1935.5" ></text>
</g>
<g >
<title>SYSC_accept4 (329 samples, 5.56%)</title><rect x="336.3" y="1973" width="65.6" height="15.0" fill="rgb(211,77,2)" rx="2" ry="2" />
<text  x="339.26" y="1983.5" >SYSC_ac..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="835.0" y="1653" width="0.2" height="15.0" fill="rgb(241,90,41)" rx="2" ry="2" />
<text  x="838.02" y="1663.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="599.5" y="1493" width="0.2" height="15.0" fill="rgb(234,190,3)" rx="2" ry="2" />
<text  x="602.50" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.08%)</title><rect x="846.0" y="1829" width="1.0" height="15.0" fill="rgb(210,52,51)" rx="2" ry="2" />
<text  x="848.99" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="952.7" y="1733" width="0.2" height="15.0" fill="rgb(234,3,54)" rx="2" ry="2" />
<text  x="955.68" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="858.0" y="1909" width="0.2" height="15.0" fill="rgb(225,188,14)" rx="2" ry="2" />
<text  x="860.96" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="492.6" y="1957" width="0.2" height="15.0" fill="rgb(212,60,42)" rx="2" ry="2" />
<text  x="495.61" y="1967.5" ></text>
</g>
<g >
<title>tcp_close (420 samples, 7.10%)</title><rect x="753.7" y="1749" width="83.7" height="15.0" fill="rgb(247,219,18)" rx="2" ry="2" />
<text  x="756.66" y="1759.5" >tcp_close</text>
</g>
<g >
<title>folly::netops::recv (5 samples, 0.08%)</title><rect x="57.3" y="1973" width="1.0" height="15.0" fill="rgb(211,146,30)" rx="2" ry="2" />
<text  x="60.26" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="873.7" y="1909" width="0.2" height="15.0" fill="rgb(245,159,50)" rx="2" ry="2" />
<text  x="876.71" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="643.2" y="1973" width="1.2" height="15.0" fill="rgb(247,144,37)" rx="2" ry="2" />
<text  x="646.18" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="108.7" y="37" width="0.2" height="15.0" fill="rgb(233,14,0)" rx="2" ry="2" />
<text  x="111.72" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="379.7" y="1733" width="0.2" height="15.0" fill="rgb(234,23,11)" rx="2" ry="2" />
<text  x="382.73" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="135.8" y="1893" width="0.4" height="15.0" fill="rgb(251,224,23)" rx="2" ry="2" />
<text  x="138.84" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="121.3" y="1877" width="0.2" height="15.0" fill="rgb(214,19,47)" rx="2" ry="2" />
<text  x="124.28" y="1887.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="614.7" y="1877" width="0.2" height="15.0" fill="rgb(211,50,21)" rx="2" ry="2" />
<text  x="617.66" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="300.6" y="1669" width="0.2" height="15.0" fill="rgb(205,221,43)" rx="2" ry="2" />
<text  x="303.56" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="80.6" y="1957" width="0.4" height="15.0" fill="rgb(244,184,24)" rx="2" ry="2" />
<text  x="83.60" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="322.9" y="2021" width="0.2" height="15.0" fill="rgb(251,191,11)" rx="2" ry="2" />
<text  x="325.90" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (34 samples, 0.57%)</title><rect x="994.6" y="2021" width="6.7" height="15.0" fill="rgb(247,115,7)" rx="2" ry="2" />
<text  x="997.56" y="2031.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (4 samples, 0.07%)</title><rect x="1156.1" y="1973" width="0.8" height="15.0" fill="rgb(217,59,50)" rx="2" ry="2" />
<text  x="1159.10" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (29 samples, 0.49%)</title><rect x="374.4" y="1893" width="5.7" height="15.0" fill="rgb(227,214,7)" rx="2" ry="2" />
<text  x="377.35" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="977.2" y="2037" width="0.8" height="15.0" fill="rgb(243,196,16)" rx="2" ry="2" />
<text  x="980.21" y="2047.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="887.9" y="1941" width="0.2" height="15.0" fill="rgb(211,24,35)" rx="2" ry="2" />
<text  x="890.87" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1148.5" y="1989" width="0.2" height="15.0" fill="rgb(205,82,14)" rx="2" ry="2" />
<text  x="1151.52" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="51.5" y="1861" width="0.2" height="15.0" fill="rgb(234,78,18)" rx="2" ry="2" />
<text  x="54.48" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="997.8" y="1717" width="0.2" height="15.0" fill="rgb(239,92,14)" rx="2" ry="2" />
<text  x="1000.75" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (8 samples, 0.14%)</title><rect x="860.7" y="1925" width="1.6" height="15.0" fill="rgb(236,106,21)" rx="2" ry="2" />
<text  x="863.75" y="1935.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="350.8" y="1621" width="0.2" height="15.0" fill="rgb(232,127,13)" rx="2" ry="2" />
<text  x="353.82" y="1631.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="747.5" y="1461" width="0.2" height="15.0" fill="rgb(252,194,18)" rx="2" ry="2" />
<text  x="750.48" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="313.7" y="1877" width="0.2" height="15.0" fill="rgb(244,93,29)" rx="2" ry="2" />
<text  x="316.72" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="469.5" y="1733" width="0.2" height="15.0" fill="rgb(218,85,22)" rx="2" ry="2" />
<text  x="472.48" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="892.5" y="1877" width="0.2" height="15.0" fill="rgb(209,20,18)" rx="2" ry="2" />
<text  x="895.46" y="1887.5" ></text>
</g>
<g >
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="307.5" y="1861" width="0.8" height="15.0" fill="rgb(226,3,15)" rx="2" ry="2" />
<text  x="310.54" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="212.8" y="1845" width="0.2" height="15.0" fill="rgb(221,139,35)" rx="2" ry="2" />
<text  x="215.82" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="850.4" y="1925" width="0.6" height="15.0" fill="rgb(212,19,9)" rx="2" ry="2" />
<text  x="853.38" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (5 samples, 0.08%)</title><rect x="60.9" y="1941" width="1.0" height="15.0" fill="rgb(252,130,27)" rx="2" ry="2" />
<text  x="63.85" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="165.2" y="1861" width="0.2" height="15.0" fill="rgb(241,141,18)" rx="2" ry="2" />
<text  x="168.15" y="1871.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="29.1" y="1957" width="0.2" height="15.0" fill="rgb(232,99,26)" rx="2" ry="2" />
<text  x="32.14" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="111.5" y="149" width="0.2" height="15.0" fill="rgb(227,196,17)" rx="2" ry="2" />
<text  x="114.51" y="159.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="898.2" y="1957" width="0.4" height="15.0" fill="rgb(250,182,21)" rx="2" ry="2" />
<text  x="901.24" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="861.9" y="1797" width="0.2" height="15.0" fill="rgb(243,207,3)" rx="2" ry="2" />
<text  x="864.95" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.0" y="1605" width="0.2" height="15.0" fill="rgb(254,0,15)" rx="2" ry="2" />
<text  x="844.01" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="851.8" y="1749" width="0.2" height="15.0" fill="rgb(246,29,15)" rx="2" ry="2" />
<text  x="854.77" y="1759.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (8 samples, 0.14%)</title><rect x="289.6" y="1685" width="1.6" height="15.0" fill="rgb(229,119,29)" rx="2" ry="2" />
<text  x="292.59" y="1695.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="530.1" y="1925" width="0.2" height="15.0" fill="rgb(211,223,49)" rx="2" ry="2" />
<text  x="533.10" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="217.8" y="1893" width="0.2" height="15.0" fill="rgb(241,35,52)" rx="2" ry="2" />
<text  x="220.80" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="524.1" y="1989" width="0.2" height="15.0" fill="rgb(219,110,32)" rx="2" ry="2" />
<text  x="527.12" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="232.2" y="1973" width="0.2" height="15.0" fill="rgb(235,169,3)" rx="2" ry="2" />
<text  x="235.16" y="1983.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="909.8" y="1557" width="0.2" height="15.0" fill="rgb(214,97,3)" rx="2" ry="2" />
<text  x="912.81" y="1567.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="851.2" y="1925" width="0.2" height="15.0" fill="rgb(250,221,34)" rx="2" ry="2" />
<text  x="854.18" y="1935.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (225 samples, 3.80%)</title><rect x="259.3" y="1861" width="44.9" height="15.0" fill="rgb(248,22,51)" rx="2" ry="2" />
<text  x="262.28" y="1871.5" >__tc..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1079.5" y="1717" width="0.2" height="15.0" fill="rgb(251,13,10)" rx="2" ry="2" />
<text  x="1082.52" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="55.7" y="1861" width="0.2" height="15.0" fill="rgb(219,24,38)" rx="2" ry="2" />
<text  x="58.67" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="669.5" y="1589" width="0.2" height="15.0" fill="rgb(234,88,53)" rx="2" ry="2" />
<text  x="672.50" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="861.7" y="1877" width="0.2" height="15.0" fill="rgb(254,18,25)" rx="2" ry="2" />
<text  x="864.75" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (89 samples, 1.50%)</title><rect x="510.8" y="2037" width="17.7" height="15.0" fill="rgb(205,95,7)" rx="2" ry="2" />
<text  x="513.76" y="2047.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="217.4" y="1957" width="0.6" height="15.0" fill="rgb(216,167,45)" rx="2" ry="2" />
<text  x="220.40" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="153.4" y="2021" width="0.2" height="15.0" fill="rgb(206,46,49)" rx="2" ry="2" />
<text  x="156.39" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1127.8" y="1973" width="0.4" height="15.0" fill="rgb(232,136,2)" rx="2" ry="2" />
<text  x="1130.78" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1184.8" y="2021" width="0.4" height="15.0" fill="rgb(250,49,34)" rx="2" ry="2" />
<text  x="1187.81" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="273.4" y="1573" width="0.2" height="15.0" fill="rgb(236,28,12)" rx="2" ry="2" />
<text  x="276.44" y="1583.5" ></text>
</g>
<g >
<title>rb_erase_cached (10 samples, 0.17%)</title><rect x="473.3" y="1957" width="2.0" height="15.0" fill="rgb(239,6,29)" rx="2" ry="2" />
<text  x="476.27" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="396.9" y="1669" width="0.2" height="15.0" fill="rgb(245,191,43)" rx="2" ry="2" />
<text  x="399.89" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="110.5" y="53" width="0.2" height="15.0" fill="rgb(210,61,52)" rx="2" ry="2" />
<text  x="113.51" y="63.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="512.8" y="1941" width="0.5" height="15.0" fill="rgb(208,137,48)" rx="2" ry="2" />
<text  x="515.75" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="741" width="18.5" height="15.0" fill="rgb(227,177,4)" rx="2" ry="2" />
<text  x="96.36" y="751.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.93%)</title><rect x="93.0" y="1781" width="22.7" height="15.0" fill="rgb(208,67,45)" rx="2" ry="2" />
<text  x="95.96" y="1791.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (66 samples, 1.12%)</title><rect x="1154.9" y="2021" width="13.2" height="15.0" fill="rgb(223,135,23)" rx="2" ry="2" />
<text  x="1157.90" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="1813" width="0.2" height="15.0" fill="rgb(224,22,38)" rx="2" ry="2" />
<text  x="1138.36" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="949" width="18.5" height="15.0" fill="rgb(241,0,45)" rx="2" ry="2" />
<text  x="96.36" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="399.1" y="1925" width="0.8" height="15.0" fill="rgb(228,73,27)" rx="2" ry="2" />
<text  x="402.08" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1150.7" y="1589" width="0.2" height="15.0" fill="rgb(215,30,53)" rx="2" ry="2" />
<text  x="1153.71" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="109.1" y="69" width="1.0" height="15.0" fill="rgb(226,180,28)" rx="2" ry="2" />
<text  x="112.11" y="79.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="172.7" y="1925" width="0.2" height="15.0" fill="rgb(231,30,36)" rx="2" ry="2" />
<text  x="175.73" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1169.7" y="2053" width="0.2" height="15.0" fill="rgb(212,147,40)" rx="2" ry="2" />
<text  x="1172.66" y="2063.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="49.7" y="1909" width="0.4" height="15.0" fill="rgb(215,108,16)" rx="2" ry="2" />
<text  x="52.69" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1184.0" y="2021" width="0.4" height="15.0" fill="rgb(238,193,24)" rx="2" ry="2" />
<text  x="1187.02" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="909.8" y="1893" width="0.2" height="15.0" fill="rgb(233,229,32)" rx="2" ry="2" />
<text  x="912.81" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="578.4" y="1909" width="0.2" height="15.0" fill="rgb(219,126,27)" rx="2" ry="2" />
<text  x="581.36" y="1919.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1075.7" y="1877" width="0.2" height="15.0" fill="rgb(222,177,19)" rx="2" ry="2" />
<text  x="1078.73" y="1887.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="365.2" y="1877" width="0.2" height="15.0" fill="rgb(244,199,47)" rx="2" ry="2" />
<text  x="368.18" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (67 samples, 1.13%)</title><rect x="659.5" y="2005" width="13.4" height="15.0" fill="rgb(219,204,18)" rx="2" ry="2" />
<text  x="662.53" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="311.3" y="1685" width="0.2" height="15.0" fill="rgb(221,166,18)" rx="2" ry="2" />
<text  x="314.33" y="1695.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1128.0" y="1733" width="0.2" height="15.0" fill="rgb(232,89,16)" rx="2" ry="2" />
<text  x="1130.98" y="1743.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1026.3" y="1941" width="0.2" height="15.0" fill="rgb(243,197,1)" rx="2" ry="2" />
<text  x="1029.27" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5 samples, 0.08%)</title><rect x="1179.2" y="2005" width="1.0" height="15.0" fill="rgb(230,36,6)" rx="2" ry="2" />
<text  x="1182.23" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="219.2" y="2021" width="0.4" height="15.0" fill="rgb(243,212,47)" rx="2" ry="2" />
<text  x="222.20" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="76.0" y="1893" width="0.2" height="15.0" fill="rgb(231,201,47)" rx="2" ry="2" />
<text  x="79.01" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="725.9" y="1669" width="0.2" height="15.0" fill="rgb(230,98,21)" rx="2" ry="2" />
<text  x="728.94" y="1679.5" ></text>
</g>
<g >
<title>__init_rwsem (5 samples, 0.08%)</title><rect x="371.6" y="1909" width="1.0" height="15.0" fill="rgb(235,61,54)" rx="2" ry="2" />
<text  x="374.56" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="570.8" y="2005" width="0.2" height="15.0" fill="rgb(211,202,9)" rx="2" ry="2" />
<text  x="573.78" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (7 samples, 0.12%)</title><rect x="988.6" y="1909" width="1.4" height="15.0" fill="rgb(231,99,52)" rx="2" ry="2" />
<text  x="991.58" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (18 samples, 0.30%)</title><rect x="144.2" y="1925" width="3.6" height="15.0" fill="rgb(246,48,34)" rx="2" ry="2" />
<text  x="147.21" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="141.2" y="1877" width="0.2" height="15.0" fill="rgb(225,168,4)" rx="2" ry="2" />
<text  x="144.22" y="1887.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (6 samples, 0.10%)</title><rect x="1135.6" y="2053" width="1.2" height="15.0" fill="rgb(215,0,25)" rx="2" ry="2" />
<text  x="1138.56" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="165.2" y="1893" width="0.2" height="15.0" fill="rgb(220,189,20)" rx="2" ry="2" />
<text  x="168.15" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="502.6" y="1717" width="0.2" height="15.0" fill="rgb(229,116,10)" rx="2" ry="2" />
<text  x="505.58" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1150.7" y="1861" width="0.2" height="15.0" fill="rgb(223,68,30)" rx="2" ry="2" />
<text  x="1153.71" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (27 samples, 0.46%)</title><rect x="476.3" y="1973" width="5.3" height="15.0" fill="rgb(251,98,16)" rx="2" ry="2" />
<text  x="479.26" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="51.5" y="1941" width="0.2" height="15.0" fill="rgb(240,136,16)" rx="2" ry="2" />
<text  x="54.48" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.8" y="1957" width="0.2" height="15.0" fill="rgb(214,84,54)" rx="2" ry="2" />
<text  x="577.77" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="936.7" y="1637" width="0.2" height="15.0" fill="rgb(237,53,11)" rx="2" ry="2" />
<text  x="939.73" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1116.8" y="1669" width="0.2" height="15.0" fill="rgb(248,201,22)" rx="2" ry="2" />
<text  x="1119.81" y="1679.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="322.9" y="1925" width="0.2" height="15.0" fill="rgb(249,177,25)" rx="2" ry="2" />
<text  x="325.90" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="747.5" y="1637" width="0.2" height="15.0" fill="rgb(238,225,42)" rx="2" ry="2" />
<text  x="750.48" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="311.3" y="1813" width="0.4" height="15.0" fill="rgb(248,183,6)" rx="2" ry="2" />
<text  x="314.33" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="110.9" y="53" width="0.2" height="15.0" fill="rgb(225,94,45)" rx="2" ry="2" />
<text  x="113.91" y="63.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="524.5" y="1973" width="0.8" height="15.0" fill="rgb(206,111,54)" rx="2" ry="2" />
<text  x="527.52" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="304.2" y="1861" width="0.2" height="15.0" fill="rgb(246,82,23)" rx="2" ry="2" />
<text  x="307.15" y="1871.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="910.4" y="1989" width="0.2" height="15.0" fill="rgb(231,55,17)" rx="2" ry="2" />
<text  x="913.41" y="1999.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="90.2" y="2021" width="0.2" height="15.0" fill="rgb(227,75,33)" rx="2" ry="2" />
<text  x="93.17" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1183.0" y="1989" width="0.2" height="15.0" fill="rgb(247,149,26)" rx="2" ry="2" />
<text  x="1186.02" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="639.2" y="1925" width="0.6" height="15.0" fill="rgb(243,128,6)" rx="2" ry="2" />
<text  x="642.19" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="936.9" y="1925" width="0.4" height="15.0" fill="rgb(212,176,10)" rx="2" ry="2" />
<text  x="939.93" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="1877" width="0.2" height="15.0" fill="rgb(254,124,27)" rx="2" ry="2" />
<text  x="1138.36" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="575.8" y="1989" width="0.8" height="15.0" fill="rgb(215,200,53)" rx="2" ry="2" />
<text  x="578.77" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="537.3" y="1733" width="0.2" height="15.0" fill="rgb(227,157,6)" rx="2" ry="2" />
<text  x="540.28" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="662.1" y="1909" width="0.2" height="15.0" fill="rgb(234,39,27)" rx="2" ry="2" />
<text  x="665.12" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="681.9" y="1781" width="0.2" height="15.0" fill="rgb(241,95,31)" rx="2" ry="2" />
<text  x="684.86" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="951.9" y="1989" width="1.0" height="15.0" fill="rgb(225,40,54)" rx="2" ry="2" />
<text  x="954.89" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (10 samples, 0.17%)</title><rect x="741.3" y="1669" width="2.0" height="15.0" fill="rgb(248,157,51)" rx="2" ry="2" />
<text  x="744.29" y="1679.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="450.3" y="1637" width="0.2" height="15.0" fill="rgb(217,164,31)" rx="2" ry="2" />
<text  x="453.33" y="1647.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1163.9" y="1797" width="0.2" height="15.0" fill="rgb(216,115,27)" rx="2" ry="2" />
<text  x="1166.88" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="856.8" y="1893" width="0.4" height="15.0" fill="rgb(234,155,41)" rx="2" ry="2" />
<text  x="859.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_push (226 samples, 3.82%)</title><rect x="259.3" y="1877" width="45.1" height="15.0" fill="rgb(209,162,27)" rx="2" ry="2" />
<text  x="262.28" y="1887.5" >tcp_..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="585.7" y="1813" width="0.2" height="15.0" fill="rgb(225,141,38)" rx="2" ry="2" />
<text  x="588.74" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="785.8" y="1333" width="0.2" height="15.0" fill="rgb(208,176,15)" rx="2" ry="2" />
<text  x="788.76" y="1343.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="152.6" y="1989" width="0.2" height="15.0" fill="rgb(246,32,49)" rx="2" ry="2" />
<text  x="155.59" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="936.7" y="1845" width="0.2" height="15.0" fill="rgb(226,161,10)" rx="2" ry="2" />
<text  x="939.73" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="109.7" y="37" width="0.4" height="15.0" fill="rgb(234,122,26)" rx="2" ry="2" />
<text  x="112.71" y="47.5" ></text>
</g>
<g >
<title>fsnotify (3 samples, 0.05%)</title><rect x="747.7" y="1797" width="0.6" height="15.0" fill="rgb(244,89,10)" rx="2" ry="2" />
<text  x="750.67" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.6" y="1909" width="0.2" height="15.0" fill="rgb(208,120,11)" rx="2" ry="2" />
<text  x="163.57" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.22%)</title><rect x="11.4" y="1909" width="2.6" height="15.0" fill="rgb(217,84,43)" rx="2" ry="2" />
<text  x="14.40" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="379.7" y="1605" width="0.2" height="15.0" fill="rgb(218,164,0)" rx="2" ry="2" />
<text  x="382.73" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="852.8" y="1829" width="0.2" height="15.0" fill="rgb(228,209,28)" rx="2" ry="2" />
<text  x="855.77" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="93.4" y="213" width="17.5" height="15.0" fill="rgb(251,5,25)" rx="2" ry="2" />
<text  x="96.36" y="223.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="460.9" y="1893" width="0.4" height="15.0" fill="rgb(219,23,36)" rx="2" ry="2" />
<text  x="463.90" y="1903.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="1185.2" y="2053" width="0.2" height="15.0" fill="rgb(235,60,45)" rx="2" ry="2" />
<text  x="1188.21" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="77.0" y="1909" width="0.2" height="15.0" fill="rgb(229,138,8)" rx="2" ry="2" />
<text  x="80.01" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="846.2" y="1797" width="0.8" height="15.0" fill="rgb(230,37,22)" rx="2" ry="2" />
<text  x="849.19" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="87.0" y="2005" width="0.2" height="15.0" fill="rgb(247,50,47)" rx="2" ry="2" />
<text  x="89.98" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="93.0" y="1701" width="21.9" height="15.0" fill="rgb(214,19,20)" rx="2" ry="2" />
<text  x="95.96" y="1711.5" >[..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1017.1" y="2021" width="0.4" height="15.0" fill="rgb(211,226,13)" rx="2" ry="2" />
<text  x="1020.10" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="110.9" y="101" width="0.2" height="15.0" fill="rgb(249,50,52)" rx="2" ry="2" />
<text  x="113.91" y="111.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="729.7" y="1781" width="1.2" height="15.0" fill="rgb(211,163,37)" rx="2" ry="2" />
<text  x="732.73" y="1791.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="1146.9" y="1989" width="0.2" height="15.0" fill="rgb(252,172,45)" rx="2" ry="2" />
<text  x="1149.92" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="48.9" y="1941" width="0.4" height="15.0" fill="rgb(248,116,20)" rx="2" ry="2" />
<text  x="51.89" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (4 samples, 0.07%)</title><rect x="1152.3" y="2021" width="0.8" height="15.0" fill="rgb(244,175,4)" rx="2" ry="2" />
<text  x="1155.31" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="913.6" y="1973" width="0.4" height="15.0" fill="rgb(253,173,11)" rx="2" ry="2" />
<text  x="916.60" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="357.0" y="1717" width="0.2" height="15.0" fill="rgb(228,37,32)" rx="2" ry="2" />
<text  x="360.00" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="296.6" y="1765" width="0.2" height="15.0" fill="rgb(244,152,52)" rx="2" ry="2" />
<text  x="299.57" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (66 samples, 1.12%)</title><rect x="1154.9" y="2005" width="13.2" height="15.0" fill="rgb(249,52,36)" rx="2" ry="2" />
<text  x="1157.90" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="81.8" y="1781" width="0.2" height="15.0" fill="rgb(252,22,22)" rx="2" ry="2" />
<text  x="84.79" y="1791.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="967.6" y="2005" width="0.2" height="15.0" fill="rgb(245,153,34)" rx="2" ry="2" />
<text  x="970.64" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="615.7" y="1909" width="0.8" height="15.0" fill="rgb(245,29,18)" rx="2" ry="2" />
<text  x="618.65" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (1 samples, 0.02%)</title><rect x="95.2" y="37" width="0.2" height="15.0" fill="rgb(208,125,10)" rx="2" ry="2" />
<text  x="98.15" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (6 samples, 0.10%)</title><rect x="60.7" y="1957" width="1.2" height="15.0" fill="rgb(218,59,46)" rx="2" ry="2" />
<text  x="63.65" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (49 samples, 0.83%)</title><rect x="1106.8" y="1621" width="9.8" height="15.0" fill="rgb(214,196,44)" rx="2" ry="2" />
<text  x="1109.84" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1049.6" y="1909" width="0.2" height="15.0" fill="rgb(229,136,4)" rx="2" ry="2" />
<text  x="1052.60" y="1919.5" ></text>
</g>
<g >
<title>strlen (2 samples, 0.03%)</title><rect x="401.5" y="1957" width="0.4" height="15.0" fill="rgb(253,120,27)" rx="2" ry="2" />
<text  x="404.47" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="859.4" y="1925" width="0.2" height="15.0" fill="rgb(206,83,12)" rx="2" ry="2" />
<text  x="862.35" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="622.8" y="1941" width="0.8" height="15.0" fill="rgb(244,174,21)" rx="2" ry="2" />
<text  x="625.83" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="87.0" y="1957" width="0.2" height="15.0" fill="rgb(212,148,22)" rx="2" ry="2" />
<text  x="89.98" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="388.1" y="1893" width="0.4" height="15.0" fill="rgb(247,12,6)" rx="2" ry="2" />
<text  x="391.11" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="810.3" y="1461" width="0.2" height="15.0" fill="rgb(254,61,31)" rx="2" ry="2" />
<text  x="813.29" y="1471.5" ></text>
</g>
<g >
<title>lock_sock_nested (12 samples, 0.20%)</title><rect x="359.4" y="1941" width="2.4" height="15.0" fill="rgb(246,41,4)" rx="2" ry="2" />
<text  x="362.39" y="1951.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="1049.4" y="1941" width="0.2" height="15.0" fill="rgb(220,128,2)" rx="2" ry="2" />
<text  x="1052.41" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="997.8" y="1685" width="0.2" height="15.0" fill="rgb(209,27,51)" rx="2" ry="2" />
<text  x="1000.75" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1105.0" y="1717" width="0.2" height="15.0" fill="rgb(217,217,12)" rx="2" ry="2" />
<text  x="1108.04" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="894.3" y="1861" width="0.2" height="15.0" fill="rgb(213,53,39)" rx="2" ry="2" />
<text  x="897.25" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="673.5" y="2005" width="0.2" height="15.0" fill="rgb(220,181,17)" rx="2" ry="2" />
<text  x="676.49" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="986.2" y="1989" width="0.2" height="15.0" fill="rgb(250,3,30)" rx="2" ry="2" />
<text  x="989.19" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="14.4" y="2005" width="1.0" height="15.0" fill="rgb(227,171,1)" rx="2" ry="2" />
<text  x="17.39" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (8 samples, 0.14%)</title><rect x="30.1" y="1989" width="1.6" height="15.0" fill="rgb(228,89,22)" rx="2" ry="2" />
<text  x="33.14" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="880.7" y="1941" width="0.4" height="15.0" fill="rgb(248,111,45)" rx="2" ry="2" />
<text  x="883.69" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="909.8" y="1781" width="0.2" height="15.0" fill="rgb(232,91,53)" rx="2" ry="2" />
<text  x="912.81" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="149.6" y="1925" width="0.2" height="15.0" fill="rgb(234,200,45)" rx="2" ry="2" />
<text  x="152.60" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="457.7" y="1797" width="0.2" height="15.0" fill="rgb(229,87,31)" rx="2" ry="2" />
<text  x="460.71" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (9 samples, 0.15%)</title><rect x="380.1" y="1893" width="1.8" height="15.0" fill="rgb(239,42,46)" rx="2" ry="2" />
<text  x="383.13" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.61%)</title><rect x="624.6" y="2021" width="7.2" height="15.0" fill="rgb(249,161,22)" rx="2" ry="2" />
<text  x="627.63" y="2031.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="121.3" y="1653" width="0.2" height="15.0" fill="rgb(205,44,0)" rx="2" ry="2" />
<text  x="124.28" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="599.5" y="1381" width="0.2" height="15.0" fill="rgb(229,130,28)" rx="2" ry="2" />
<text  x="602.50" y="1391.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="527.5" y="1957" width="0.4" height="15.0" fill="rgb(237,179,44)" rx="2" ry="2" />
<text  x="530.51" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="473.1" y="1845" width="0.2" height="15.0" fill="rgb(216,34,39)" rx="2" ry="2" />
<text  x="476.07" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (11 samples, 0.19%)</title><rect x="628.8" y="2005" width="2.2" height="15.0" fill="rgb(245,44,4)" rx="2" ry="2" />
<text  x="631.82" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="484.6" y="1717" width="0.2" height="15.0" fill="rgb(224,50,31)" rx="2" ry="2" />
<text  x="487.63" y="1727.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (13 samples, 0.22%)</title><rect x="273.4" y="1701" width="2.6" height="15.0" fill="rgb(210,112,34)" rx="2" ry="2" />
<text  x="276.44" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="311.3" y="1749" width="0.4" height="15.0" fill="rgb(216,166,21)" rx="2" ry="2" />
<text  x="314.33" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="1066.4" y="1925" width="0.6" height="15.0" fill="rgb(241,148,30)" rx="2" ry="2" />
<text  x="1069.36" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="539.1" y="1957" width="0.2" height="15.0" fill="rgb(232,31,32)" rx="2" ry="2" />
<text  x="542.08" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="257.3" y="1637" width="0.2" height="15.0" fill="rgb(216,181,1)" rx="2" ry="2" />
<text  x="260.29" y="1647.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="371.4" y="1797" width="0.2" height="15.0" fill="rgb(246,155,49)" rx="2" ry="2" />
<text  x="374.36" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="73.6" y="1941" width="0.6" height="15.0" fill="rgb(246,50,1)" rx="2" ry="2" />
<text  x="76.62" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1049.6" y="1717" width="0.2" height="15.0" fill="rgb(212,180,46)" rx="2" ry="2" />
<text  x="1052.60" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (7 samples, 0.12%)</title><rect x="274.0" y="1541" width="1.4" height="15.0" fill="rgb(243,123,42)" rx="2" ry="2" />
<text  x="277.04" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="537.3" y="1829" width="0.2" height="15.0" fill="rgb(245,23,8)" rx="2" ry="2" />
<text  x="540.28" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="111.3" y="309" width="0.2" height="15.0" fill="rgb(248,119,37)" rx="2" ry="2" />
<text  x="114.31" y="319.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="929.2" y="1861" width="0.2" height="15.0" fill="rgb(222,222,4)" rx="2" ry="2" />
<text  x="932.15" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1017.1" y="1845" width="0.4" height="15.0" fill="rgb(217,2,53)" rx="2" ry="2" />
<text  x="1020.10" y="1855.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6 samples, 0.10%)</title><rect x="707.2" y="1877" width="1.2" height="15.0" fill="rgb(246,71,23)" rx="2" ry="2" />
<text  x="710.19" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1049.4" y="2005" width="0.2" height="15.0" fill="rgb(234,74,43)" rx="2" ry="2" />
<text  x="1052.41" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="984.6" y="1957" width="1.6" height="15.0" fill="rgb(206,35,4)" rx="2" ry="2" />
<text  x="987.59" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="952.7" y="1829" width="0.2" height="15.0" fill="rgb(207,217,37)" rx="2" ry="2" />
<text  x="955.68" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (1 samples, 0.02%)</title><rect x="956.5" y="2037" width="0.2" height="15.0" fill="rgb(207,196,14)" rx="2" ry="2" />
<text  x="959.47" y="2047.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="111.3" y="37" width="0.2" height="15.0" fill="rgb(245,39,41)" rx="2" ry="2" />
<text  x="114.31" y="47.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="159.2" y="1973" width="0.2" height="15.0" fill="rgb(245,189,14)" rx="2" ry="2" />
<text  x="162.17" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="938.5" y="1941" width="0.4" height="15.0" fill="rgb(237,106,34)" rx="2" ry="2" />
<text  x="941.52" y="1951.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="846.4" y="1637" width="0.2" height="15.0" fill="rgb(237,164,33)" rx="2" ry="2" />
<text  x="849.39" y="1647.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="661.3" y="1877" width="0.2" height="15.0" fill="rgb(221,211,45)" rx="2" ry="2" />
<text  x="664.32" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="549.2" y="1941" width="0.4" height="15.0" fill="rgb(244,162,15)" rx="2" ry="2" />
<text  x="552.25" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1105.0" y="1893" width="0.4" height="15.0" fill="rgb(209,96,9)" rx="2" ry="2" />
<text  x="1108.04" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="481.2" y="1941" width="0.4" height="15.0" fill="rgb(235,78,13)" rx="2" ry="2" />
<text  x="484.24" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="991.6" y="1989" width="0.2" height="15.0" fill="rgb(229,180,4)" rx="2" ry="2" />
<text  x="994.57" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="186.1" y="2037" width="0.2" height="15.0" fill="rgb(209,206,38)" rx="2" ry="2" />
<text  x="189.09" y="2047.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="578.4" y="1749" width="0.2" height="15.0" fill="rgb(252,177,54)" rx="2" ry="2" />
<text  x="581.36" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (5 samples, 0.08%)</title><rect x="1152.3" y="2037" width="1.0" height="15.0" fill="rgb(250,21,50)" rx="2" ry="2" />
<text  x="1155.31" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="111.1" y="277" width="0.2" height="15.0" fill="rgb(250,82,1)" rx="2" ry="2" />
<text  x="114.11" y="287.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (2 samples, 0.03%)</title><rect x="695.4" y="1989" width="0.4" height="15.0" fill="rgb(247,97,7)" rx="2" ry="2" />
<text  x="698.43" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="291.2" y="1701" width="0.2" height="15.0" fill="rgb(247,152,41)" rx="2" ry="2" />
<text  x="294.19" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (8 samples, 0.14%)</title><rect x="76.8" y="1941" width="1.6" height="15.0" fill="rgb(215,46,15)" rx="2" ry="2" />
<text  x="79.81" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="859.2" y="1557" width="0.2" height="15.0" fill="rgb(251,17,33)" rx="2" ry="2" />
<text  x="862.15" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="610.7" y="1829" width="0.2" height="15.0" fill="rgb(211,199,18)" rx="2" ry="2" />
<text  x="613.67" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (2 samples, 0.03%)</title><rect x="129.3" y="2005" width="0.4" height="15.0" fill="rgb(251,203,14)" rx="2" ry="2" />
<text  x="132.26" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.8" y="1845" width="0.2" height="15.0" fill="rgb(242,158,41)" rx="2" ry="2" />
<text  x="138.84" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="892.3" y="1925" width="0.4" height="15.0" fill="rgb(227,27,20)" rx="2" ry="2" />
<text  x="895.26" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="519.9" y="1957" width="0.8" height="15.0" fill="rgb(211,221,48)" rx="2" ry="2" />
<text  x="522.93" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="585.7" y="1925" width="0.2" height="15.0" fill="rgb(230,32,37)" rx="2" ry="2" />
<text  x="588.74" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7 samples, 0.12%)</title><rect x="939.5" y="1957" width="1.4" height="15.0" fill="rgb(246,0,14)" rx="2" ry="2" />
<text  x="942.52" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::WriterLoop::runLoopCallback (1 samples, 0.02%)</title><rect x="133.6" y="1941" width="0.2" height="15.0" fill="rgb(209,15,21)" rx="2" ry="2" />
<text  x="136.64" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (11 samples, 0.19%)</title><rect x="1182.6" y="2037" width="2.2" height="15.0" fill="rgb(205,154,11)" rx="2" ry="2" />
<text  x="1185.62" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="689.0" y="1861" width="0.4" height="15.0" fill="rgb(228,200,45)" rx="2" ry="2" />
<text  x="692.04" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (2 samples, 0.03%)</title><rect x="852.4" y="1925" width="0.4" height="15.0" fill="rgb(253,188,2)" rx="2" ry="2" />
<text  x="855.37" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="316.9" y="1989" width="0.4" height="15.0" fill="rgb(222,218,3)" rx="2" ry="2" />
<text  x="319.92" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="785.4" y="1525" width="0.6" height="15.0" fill="rgb(246,75,44)" rx="2" ry="2" />
<text  x="788.37" y="1535.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (11 samples, 0.19%)</title><rect x="695.8" y="2021" width="2.2" height="15.0" fill="rgb(211,198,24)" rx="2" ry="2" />
<text  x="698.82" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="526.1" y="1957" width="0.2" height="15.0" fill="rgb(217,66,6)" rx="2" ry="2" />
<text  x="529.11" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (19 samples, 0.32%)</title><rect x="958.3" y="1989" width="3.8" height="15.0" fill="rgb(232,211,51)" rx="2" ry="2" />
<text  x="961.27" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.7" y="1877" width="0.2" height="15.0" fill="rgb(238,115,46)" rx="2" ry="2" />
<text  x="890.67" y="1887.5" ></text>
</g>
<g >
<title>dst_release (11 samples, 0.19%)</title><rect x="1081.5" y="1877" width="2.2" height="15.0" fill="rgb(246,223,44)" rx="2" ry="2" />
<text  x="1084.51" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="887.7" y="1813" width="0.2" height="15.0" fill="rgb(239,24,41)" rx="2" ry="2" />
<text  x="890.67" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="41.7" y="1925" width="0.2" height="15.0" fill="rgb(223,11,53)" rx="2" ry="2" />
<text  x="44.71" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="42.9" y="1893" width="0.2" height="15.0" fill="rgb(223,140,14)" rx="2" ry="2" />
<text  x="45.91" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="661.1" y="1909" width="0.4" height="15.0" fill="rgb(236,57,14)" rx="2" ry="2" />
<text  x="664.12" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1128.0" y="1637" width="0.2" height="15.0" fill="rgb(232,102,50)" rx="2" ry="2" />
<text  x="1130.98" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="111.3" y="117" width="0.2" height="15.0" fill="rgb(243,122,35)" rx="2" ry="2" />
<text  x="114.31" y="127.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="350.8" y="1781" width="0.2" height="15.0" fill="rgb(230,1,36)" rx="2" ry="2" />
<text  x="353.82" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="747.9" y="1653" width="0.4" height="15.0" fill="rgb(244,36,35)" rx="2" ry="2" />
<text  x="750.87" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1105.0" y="1765" width="0.2" height="15.0" fill="rgb(242,167,32)" rx="2" ry="2" />
<text  x="1108.04" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="274.6" y="1397" width="0.4" height="15.0" fill="rgb(225,133,10)" rx="2" ry="2" />
<text  x="277.64" y="1407.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (3 samples, 0.05%)</title><rect x="785.4" y="1573" width="0.6" height="15.0" fill="rgb(207,215,27)" rx="2" ry="2" />
<text  x="788.37" y="1583.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1072.3" y="1813" width="0.2" height="15.0" fill="rgb(242,115,21)" rx="2" ry="2" />
<text  x="1075.34" y="1823.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="537.9" y="1973" width="0.2" height="15.0" fill="rgb(228,83,19)" rx="2" ry="2" />
<text  x="540.88" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (110 samples, 1.86%)</title><rect x="196.3" y="2005" width="21.9" height="15.0" fill="rgb(244,71,3)" rx="2" ry="2" />
<text  x="199.26" y="2015.5" >f..</text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="985.8" y="1877" width="0.2" height="15.0" fill="rgb(208,150,46)" rx="2" ry="2" />
<text  x="988.79" y="1887.5" ></text>
</g>
<g >
<title>epoll_ctl (435 samples, 7.35%)</title><rect x="405.3" y="2037" width="86.7" height="15.0" fill="rgb(234,142,28)" rx="2" ry="2" />
<text  x="408.26" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="357.0" y="1813" width="0.2" height="15.0" fill="rgb(221,5,10)" rx="2" ry="2" />
<text  x="360.00" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="132.2" y="1925" width="0.2" height="15.0" fill="rgb(220,61,35)" rx="2" ry="2" />
<text  x="135.25" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="402.9" y="1765" width="0.2" height="15.0" fill="rgb(237,45,26)" rx="2" ry="2" />
<text  x="405.87" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="859.2" y="1701" width="0.2" height="15.0" fill="rgb(214,39,15)" rx="2" ry="2" />
<text  x="862.15" y="1711.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="650.2" y="1957" width="0.2" height="15.0" fill="rgb(240,201,36)" rx="2" ry="2" />
<text  x="653.16" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (5 samples, 0.08%)</title><rect x="846.0" y="1813" width="1.0" height="15.0" fill="rgb(212,38,47)" rx="2" ry="2" />
<text  x="848.99" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="29.3" y="1797" width="0.2" height="15.0" fill="rgb(242,100,3)" rx="2" ry="2" />
<text  x="32.34" y="1807.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="847.0" y="1893" width="2.0" height="15.0" fill="rgb(210,217,33)" rx="2" ry="2" />
<text  x="849.99" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (6 samples, 0.10%)</title><rect x="937.9" y="1973" width="1.2" height="15.0" fill="rgb(247,44,46)" rx="2" ry="2" />
<text  x="940.93" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1135.4" y="2037" width="0.2" height="15.0" fill="rgb(219,213,43)" rx="2" ry="2" />
<text  x="1138.36" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="350.8" y="1653" width="0.2" height="15.0" fill="rgb(252,98,16)" rx="2" ry="2" />
<text  x="353.82" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="572.6" y="1989" width="0.8" height="15.0" fill="rgb(222,113,42)" rx="2" ry="2" />
<text  x="575.58" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="396.9" y="1781" width="0.2" height="15.0" fill="rgb(231,168,1)" rx="2" ry="2" />
<text  x="399.89" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="894.3" y="1829" width="0.2" height="15.0" fill="rgb(221,86,26)" rx="2" ry="2" />
<text  x="897.25" y="1839.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="767.4" y="1685" width="0.2" height="15.0" fill="rgb(230,160,53)" rx="2" ry="2" />
<text  x="770.42" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="578.4" y="1829" width="0.2" height="15.0" fill="rgb(212,135,46)" rx="2" ry="2" />
<text  x="581.36" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="615.7" y="1957" width="0.8" height="15.0" fill="rgb(209,109,5)" rx="2" ry="2" />
<text  x="618.65" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (121 samples, 2.04%)</title><rect x="786.0" y="1573" width="24.1" height="15.0" fill="rgb(251,39,15)" rx="2" ry="2" />
<text  x="788.96" y="1583.5" >_..</text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="675.1" y="1797" width="0.8" height="15.0" fill="rgb(225,201,3)" rx="2" ry="2" />
<text  x="678.08" y="1807.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="111.5" y="117" width="0.2" height="15.0" fill="rgb(242,158,9)" rx="2" ry="2" />
<text  x="114.51" y="127.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="599.5" y="1637" width="0.2" height="15.0" fill="rgb(246,214,7)" rx="2" ry="2" />
<text  x="602.50" y="1647.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="704.6" y="1893" width="0.2" height="15.0" fill="rgb(228,145,21)" rx="2" ry="2" />
<text  x="707.60" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (37 samples, 0.63%)</title><rect x="205.8" y="1925" width="7.4" height="15.0" fill="rgb(240,182,38)" rx="2" ry="2" />
<text  x="208.84" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="656.1" y="2037" width="0.2" height="15.0" fill="rgb(223,200,18)" rx="2" ry="2" />
<text  x="659.14" y="2047.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="461.3" y="1893" width="0.2" height="15.0" fill="rgb(234,193,27)" rx="2" ry="2" />
<text  x="464.30" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="162.6" y="1941" width="1.0" height="15.0" fill="rgb(227,123,46)" rx="2" ry="2" />
<text  x="165.56" y="1951.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="402.7" y="1877" width="0.2" height="15.0" fill="rgb(215,172,7)" rx="2" ry="2" />
<text  x="405.67" y="1887.5" ></text>
</g>
<g >
<title>__ip_local_out (6 samples, 0.10%)</title><rect x="267.9" y="1781" width="1.2" height="15.0" fill="rgb(215,173,6)" rx="2" ry="2" />
<text  x="270.86" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="252.5" y="1637" width="0.2" height="15.0" fill="rgb(229,78,2)" rx="2" ry="2" />
<text  x="255.50" y="1647.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (78 samples, 1.32%)</title><rect x="511.2" y="2005" width="15.5" height="15.0" fill="rgb(226,5,30)" rx="2" ry="2" />
<text  x="514.16" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="936.7" y="1781" width="0.2" height="15.0" fill="rgb(253,136,29)" rx="2" ry="2" />
<text  x="939.73" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="972.4" y="1861" width="0.2" height="15.0" fill="rgb(210,10,50)" rx="2" ry="2" />
<text  x="975.43" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (18 samples, 0.30%)</title><rect x="895.4" y="2005" width="3.6" height="15.0" fill="rgb(212,5,10)" rx="2" ry="2" />
<text  x="898.45" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="152.6" y="1893" width="0.2" height="15.0" fill="rgb(226,160,11)" rx="2" ry="2" />
<text  x="155.59" y="1903.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="894.3" y="1765" width="0.2" height="15.0" fill="rgb(234,101,27)" rx="2" ry="2" />
<text  x="897.25" y="1775.5" ></text>
</g>
<g >
<title>tcp_check_oom (2 samples, 0.03%)</title><rect x="761.0" y="1733" width="0.4" height="15.0" fill="rgb(233,101,37)" rx="2" ry="2" />
<text  x="764.04" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="999.7" y="1989" width="0.2" height="15.0" fill="rgb(238,163,39)" rx="2" ry="2" />
<text  x="1002.75" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="675.1" y="1845" width="0.8" height="15.0" fill="rgb(233,85,10)" rx="2" ry="2" />
<text  x="678.08" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (16 samples, 0.27%)</title><rect x="1149.1" y="2053" width="3.2" height="15.0" fill="rgb(246,96,46)" rx="2" ry="2" />
<text  x="1152.12" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="887.7" y="1845" width="0.2" height="15.0" fill="rgb(242,15,34)" rx="2" ry="2" />
<text  x="890.67" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="622.8" y="1989" width="0.8" height="15.0" fill="rgb(251,126,45)" rx="2" ry="2" />
<text  x="625.83" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (13 samples, 0.22%)</title><rect x="763.8" y="1685" width="2.6" height="15.0" fill="rgb(230,69,8)" rx="2" ry="2" />
<text  x="766.83" y="1695.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="366.0" y="1941" width="0.2" height="15.0" fill="rgb(222,185,52)" rx="2" ry="2" />
<text  x="368.97" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="116.1" y="1877" width="0.2" height="15.0" fill="rgb(242,164,12)" rx="2" ry="2" />
<text  x="119.09" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="997.8" y="1749" width="0.2" height="15.0" fill="rgb(208,117,7)" rx="2" ry="2" />
<text  x="1000.75" y="1759.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="740.1" y="1685" width="0.2" height="15.0" fill="rgb(232,167,31)" rx="2" ry="2" />
<text  x="743.10" y="1695.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="862.7" y="1861" width="0.4" height="15.0" fill="rgb(216,16,26)" rx="2" ry="2" />
<text  x="865.74" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (57 samples, 0.96%)</title><rect x="908.2" y="2037" width="11.4" height="15.0" fill="rgb(229,93,10)" rx="2" ry="2" />
<text  x="911.21" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (2 samples, 0.03%)</title><rect x="34.9" y="1989" width="0.4" height="15.0" fill="rgb(208,116,49)" rx="2" ry="2" />
<text  x="37.93" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="147.2" y="1909" width="0.4" height="15.0" fill="rgb(212,66,37)" rx="2" ry="2" />
<text  x="150.20" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="698.2" y="2021" width="0.4" height="15.0" fill="rgb(218,105,32)" rx="2" ry="2" />
<text  x="701.22" y="2031.5" ></text>
</g>
<g >
<title>sys_close (4 samples, 0.07%)</title><rect x="845.2" y="1877" width="0.8" height="15.0" fill="rgb(223,169,19)" rx="2" ry="2" />
<text  x="848.19" y="1887.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="71.0" y="1957" width="0.2" height="15.0" fill="rgb(220,79,12)" rx="2" ry="2" />
<text  x="74.02" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="834.0" y="1669" width="0.2" height="15.0" fill="rgb(245,81,46)" rx="2" ry="2" />
<text  x="837.03" y="1679.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="53.1" y="1893" width="0.2" height="15.0" fill="rgb(246,185,29)" rx="2" ry="2" />
<text  x="56.08" y="1903.5" ></text>
</g>
<g >
<title>__close (7 samples, 0.12%)</title><rect x="194.3" y="2037" width="1.4" height="15.0" fill="rgb(216,194,40)" rx="2" ry="2" />
<text  x="197.27" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="696.6" y="1973" width="0.6" height="15.0" fill="rgb(212,130,2)" rx="2" ry="2" />
<text  x="699.62" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="621.6" y="1989" width="0.4" height="15.0" fill="rgb(245,112,27)" rx="2" ry="2" />
<text  x="624.64" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1049.6" y="1877" width="0.2" height="15.0" fill="rgb(216,110,34)" rx="2" ry="2" />
<text  x="1052.60" y="1887.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="565.2" y="1701" width="0.2" height="15.0" fill="rgb(217,83,9)" rx="2" ry="2" />
<text  x="568.20" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1189.4" y="1861" width="0.2" height="15.0" fill="rgb(254,54,2)" rx="2" ry="2" />
<text  x="1192.40" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (9 samples, 0.15%)</title><rect x="76.6" y="1957" width="1.8" height="15.0" fill="rgb(234,215,31)" rx="2" ry="2" />
<text  x="79.61" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (8 samples, 0.14%)</title><rect x="478.6" y="1941" width="1.6" height="15.0" fill="rgb(250,191,27)" rx="2" ry="2" />
<text  x="481.65" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1079.7" y="1765" width="0.2" height="15.0" fill="rgb(252,56,41)" rx="2" ry="2" />
<text  x="1082.72" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="948.7" y="1909" width="0.2" height="15.0" fill="rgb(209,87,30)" rx="2" ry="2" />
<text  x="951.70" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="60.7" y="1941" width="0.2" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="63.65" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (10 samples, 0.17%)</title><rect x="700.4" y="1973" width="2.0" height="15.0" fill="rgb(235,29,39)" rx="2" ry="2" />
<text  x="703.41" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (2 samples, 0.03%)</title><rect x="157.2" y="2021" width="0.4" height="15.0" fill="rgb(228,84,40)" rx="2" ry="2" />
<text  x="160.18" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="725.9" y="1797" width="0.2" height="15.0" fill="rgb(242,143,34)" rx="2" ry="2" />
<text  x="728.94" y="1807.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="170.7" y="1973" width="0.2" height="15.0" fill="rgb(213,39,25)" rx="2" ry="2" />
<text  x="173.74" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1097.5" y="1893" width="0.2" height="15.0" fill="rgb(234,207,28)" rx="2" ry="2" />
<text  x="1100.47" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="687.4" y="1797" width="0.8" height="15.0" fill="rgb(209,84,13)" rx="2" ry="2" />
<text  x="690.45" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="599.5" y="1365" width="0.2" height="15.0" fill="rgb(207,40,24)" rx="2" ry="2" />
<text  x="602.50" y="1375.5" ></text>
</g>
<g >
<title>ip_output (58 samples, 0.98%)</title><rect x="1105.6" y="1829" width="11.6" height="15.0" fill="rgb(249,45,40)" rx="2" ry="2" />
<text  x="1108.64" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="581" width="18.5" height="15.0" fill="rgb(233,44,21)" rx="2" ry="2" />
<text  x="96.36" y="591.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="887.3" y="1925" width="0.4" height="15.0" fill="rgb(238,5,5)" rx="2" ry="2" />
<text  x="890.27" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="402.9" y="1797" width="0.2" height="15.0" fill="rgb(248,123,24)" rx="2" ry="2" />
<text  x="405.87" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="850.4" y="1909" width="0.2" height="15.0" fill="rgb(231,65,27)" rx="2" ry="2" />
<text  x="853.38" y="1919.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (4 samples, 0.07%)</title><rect x="160.8" y="1989" width="0.8" height="15.0" fill="rgb(207,216,11)" rx="2" ry="2" />
<text  x="163.77" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="482.8" y="1829" width="0.2" height="15.0" fill="rgb(236,78,25)" rx="2" ry="2" />
<text  x="485.84" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="84.6" y="2005" width="0.2" height="15.0" fill="rgb(232,46,52)" rx="2" ry="2" />
<text  x="87.59" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (5 samples, 0.08%)</title><rect x="1145.7" y="2005" width="1.0" height="15.0" fill="rgb(250,82,46)" rx="2" ry="2" />
<text  x="1148.73" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="110.7" y="101" width="0.2" height="15.0" fill="rgb(245,113,45)" rx="2" ry="2" />
<text  x="113.71" y="111.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="41.1" y="1957" width="0.2" height="15.0" fill="rgb(232,56,19)" rx="2" ry="2" />
<text  x="44.11" y="1967.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="846.2" y="1589" width="0.2" height="15.0" fill="rgb(244,61,11)" rx="2" ry="2" />
<text  x="849.19" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="894.3" y="1925" width="0.2" height="15.0" fill="rgb(245,68,36)" rx="2" ry="2" />
<text  x="897.25" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (18 samples, 0.30%)</title><rect x="190.7" y="2021" width="3.6" height="15.0" fill="rgb(243,55,45)" rx="2" ry="2" />
<text  x="193.68" y="2031.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="717.0" y="1877" width="0.2" height="15.0" fill="rgb(224,201,7)" rx="2" ry="2" />
<text  x="719.96" y="1887.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="167.9" y="1941" width="0.4" height="15.0" fill="rgb(213,170,43)" rx="2" ry="2" />
<text  x="170.94" y="1951.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="824.3" y="1685" width="0.6" height="15.0" fill="rgb(216,128,13)" rx="2" ry="2" />
<text  x="827.25" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (1 samples, 0.02%)</title><rect x="218.2" y="2005" width="0.2" height="15.0" fill="rgb(214,189,13)" rx="2" ry="2" />
<text  x="221.20" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="93.4" y="37" width="0.4" height="15.0" fill="rgb(233,95,41)" rx="2" ry="2" />
<text  x="96.36" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="537.3" y="1717" width="0.2" height="15.0" fill="rgb(237,143,52)" rx="2" ry="2" />
<text  x="540.28" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.79%)</title><rect x="93.2" y="1621" width="21.1" height="15.0" fill="rgb(225,54,8)" rx="2" ry="2" />
<text  x="96.16" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="535.1" y="1957" width="1.2" height="15.0" fill="rgb(242,208,12)" rx="2" ry="2" />
<text  x="538.09" y="1967.5" ></text>
</g>
<g >
<title>security_socket_getsockname (1 samples, 0.02%)</title><rect x="600.7" y="1861" width="0.2" height="15.0" fill="rgb(208,37,31)" rx="2" ry="2" />
<text  x="603.70" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (1 samples, 0.02%)</title><rect x="615.1" y="1941" width="0.2" height="15.0" fill="rgb(226,38,34)" rx="2" ry="2" />
<text  x="618.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="725" width="18.5" height="15.0" fill="rgb(247,194,40)" rx="2" ry="2" />
<text  x="96.36" y="735.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="514.7" y="1973" width="0.2" height="15.0" fill="rgb(233,29,19)" rx="2" ry="2" />
<text  x="517.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="915.6" y="1733" width="0.2" height="15.0" fill="rgb(247,6,43)" rx="2" ry="2" />
<text  x="918.59" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (11 samples, 0.19%)</title><rect x="856.0" y="1941" width="2.2" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="858.96" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="516.7" y="1925" width="0.2" height="15.0" fill="rgb(235,174,34)" rx="2" ry="2" />
<text  x="519.74" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1079.5" y="1621" width="0.2" height="15.0" fill="rgb(209,133,22)" rx="2" ry="2" />
<text  x="1082.52" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="54.3" y="1701" width="0.2" height="15.0" fill="rgb(232,132,39)" rx="2" ry="2" />
<text  x="57.27" y="1711.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="482.8" y="1669" width="0.2" height="15.0" fill="rgb(209,0,44)" rx="2" ry="2" />
<text  x="485.84" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="229" width="17.7" height="15.0" fill="rgb(224,13,25)" rx="2" ry="2" />
<text  x="96.36" y="239.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="570.6" y="1957" width="0.2" height="15.0" fill="rgb(254,48,11)" rx="2" ry="2" />
<text  x="573.58" y="1967.5" ></text>
</g>
<g >
<title>__d_alloc (21 samples, 0.35%)</title><rect x="393.5" y="1925" width="4.2" height="15.0" fill="rgb(234,151,16)" rx="2" ry="2" />
<text  x="396.50" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="77.6" y="1829" width="0.2" height="15.0" fill="rgb(230,6,32)" rx="2" ry="2" />
<text  x="80.61" y="1839.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="610.7" y="1557" width="0.2" height="15.0" fill="rgb(238,195,28)" rx="2" ry="2" />
<text  x="613.67" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="656.9" y="2005" width="0.2" height="15.0" fill="rgb(243,19,18)" rx="2" ry="2" />
<text  x="659.94" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="887.7" y="1765" width="0.2" height="15.0" fill="rgb(246,82,44)" rx="2" ry="2" />
<text  x="890.67" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (2 samples, 0.03%)</title><rect x="159.8" y="1973" width="0.4" height="15.0" fill="rgb(250,170,2)" rx="2" ry="2" />
<text  x="162.77" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (52 samples, 0.88%)</title><rect x="1106.2" y="1733" width="10.4" height="15.0" fill="rgb(208,9,23)" rx="2" ry="2" />
<text  x="1109.24" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="673.5" y="2021" width="0.2" height="15.0" fill="rgb(220,117,0)" rx="2" ry="2" />
<text  x="676.49" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="610.7" y="1477" width="0.2" height="15.0" fill="rgb(244,14,1)" rx="2" ry="2" />
<text  x="613.67" y="1487.5" ></text>
</g>
<g >
<title>sys_gettid (6 samples, 0.10%)</title><rect x="1164.1" y="1925" width="1.2" height="15.0" fill="rgb(224,43,39)" rx="2" ry="2" />
<text  x="1167.07" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="314.1" y="1925" width="1.2" height="15.0" fill="rgb(212,124,26)" rx="2" ry="2" />
<text  x="317.12" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1150.7" y="1685" width="0.2" height="15.0" fill="rgb(212,198,46)" rx="2" ry="2" />
<text  x="1153.71" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="317.1" y="1813" width="0.2" height="15.0" fill="rgb(205,44,33)" rx="2" ry="2" />
<text  x="320.12" y="1823.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="988.2" y="1621" width="0.2" height="15.0" fill="rgb(246,208,12)" rx="2" ry="2" />
<text  x="991.18" y="1631.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="236.1" y="1893" width="0.2" height="15.0" fill="rgb(221,179,28)" rx="2" ry="2" />
<text  x="239.15" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="77.6" y="1861" width="0.2" height="15.0" fill="rgb(228,123,39)" rx="2" ry="2" />
<text  x="80.61" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="565.2" y="1717" width="0.2" height="15.0" fill="rgb(252,71,38)" rx="2" ry="2" />
<text  x="568.20" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="884.3" y="1925" width="0.8" height="15.0" fill="rgb(221,198,11)" rx="2" ry="2" />
<text  x="887.28" y="1935.5" ></text>
</g>
<g >
<title>__GI___setsockopt (102 samples, 1.72%)</title><rect x="675.1" y="1989" width="20.3" height="15.0" fill="rgb(209,172,27)" rx="2" ry="2" />
<text  x="678.08" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="825.5" y="1605" width="0.1" height="15.0" fill="rgb(233,90,20)" rx="2" ry="2" />
<text  x="828.45" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="988.2" y="1877" width="0.2" height="15.0" fill="rgb(248,11,3)" rx="2" ry="2" />
<text  x="991.18" y="1887.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="841.0" y="1525" width="0.2" height="15.0" fill="rgb(226,190,36)" rx="2" ry="2" />
<text  x="844.01" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="888.1" y="1941" width="0.4" height="15.0" fill="rgb(237,181,9)" rx="2" ry="2" />
<text  x="891.07" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="983.6" y="1941" width="0.8" height="15.0" fill="rgb(209,140,31)" rx="2" ry="2" />
<text  x="986.59" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (2 samples, 0.03%)</title><rect x="66.0" y="1957" width="0.4" height="15.0" fill="rgb(211,66,3)" rx="2" ry="2" />
<text  x="69.04" y="1967.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="675.1" y="1893" width="0.8" height="15.0" fill="rgb(246,148,29)" rx="2" ry="2" />
<text  x="678.08" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="622.8" y="1973" width="0.8" height="15.0" fill="rgb(235,102,40)" rx="2" ry="2" />
<text  x="625.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="835.0" y="1477" width="0.2" height="15.0" fill="rgb(207,112,51)" rx="2" ry="2" />
<text  x="838.02" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="111.5" y="357" width="0.2" height="15.0" fill="rgb(249,179,50)" rx="2" ry="2" />
<text  x="114.51" y="367.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (4 samples, 0.07%)</title><rect x="861.1" y="1909" width="0.8" height="15.0" fill="rgb(219,111,7)" rx="2" ry="2" />
<text  x="864.15" y="1919.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="379.7" y="1573" width="0.2" height="15.0" fill="rgb(223,100,45)" rx="2" ry="2" />
<text  x="382.73" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="93.0" y="1717" width="21.9" height="15.0" fill="rgb(228,63,26)" rx="2" ry="2" />
<text  x="95.96" y="1727.5" >[..</text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (5 samples, 0.08%)</title><rect x="855.0" y="1925" width="1.0" height="15.0" fill="rgb(205,145,51)" rx="2" ry="2" />
<text  x="857.97" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (58 samples, 0.98%)</title><rect x="21.0" y="2021" width="11.5" height="15.0" fill="rgb(229,191,26)" rx="2" ry="2" />
<text  x="23.97" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1149.5" y="1973" width="0.2" height="15.0" fill="rgb(222,132,27)" rx="2" ry="2" />
<text  x="1152.52" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="669.5" y="1461" width="0.2" height="15.0" fill="rgb(235,130,22)" rx="2" ry="2" />
<text  x="672.50" y="1471.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="1184.8" y="2053" width="0.4" height="15.0" fill="rgb(225,3,45)" rx="2" ry="2" />
<text  x="1187.81" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="843.0" y="1829" width="0.2" height="15.0" fill="rgb(242,0,47)" rx="2" ry="2" />
<text  x="846.00" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="599.5" y="1797" width="0.2" height="15.0" fill="rgb(246,227,5)" rx="2" ry="2" />
<text  x="602.50" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="852.0" y="1909" width="0.4" height="15.0" fill="rgb(206,94,23)" rx="2" ry="2" />
<text  x="854.97" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="997.8" y="1781" width="0.2" height="15.0" fill="rgb(219,226,21)" rx="2" ry="2" />
<text  x="1000.75" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="294.8" y="1797" width="0.2" height="15.0" fill="rgb(254,68,45)" rx="2" ry="2" />
<text  x="297.78" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="936.7" y="1797" width="0.2" height="15.0" fill="rgb(226,49,41)" rx="2" ry="2" />
<text  x="939.73" y="1807.5" ></text>
</g>
<g >
<title>__clock_gettime (20 samples, 0.34%)</title><rect x="190.3" y="2037" width="4.0" height="15.0" fill="rgb(235,81,51)" rx="2" ry="2" />
<text  x="193.28" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1020.7" y="2037" width="0.2" height="15.0" fill="rgb(209,72,1)" rx="2" ry="2" />
<text  x="1023.69" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="156.6" y="1861" width="0.2" height="15.0" fill="rgb(232,95,49)" rx="2" ry="2" />
<text  x="159.58" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="538.3" y="1829" width="0.2" height="15.0" fill="rgb(218,119,19)" rx="2" ry="2" />
<text  x="541.28" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="371.4" y="1893" width="0.2" height="15.0" fill="rgb(222,134,26)" rx="2" ry="2" />
<text  x="374.36" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1163.9" y="1845" width="0.2" height="15.0" fill="rgb(238,130,31)" rx="2" ry="2" />
<text  x="1166.88" y="1855.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="967.2" y="2021" width="0.2" height="15.0" fill="rgb(234,178,15)" rx="2" ry="2" />
<text  x="970.24" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (3 samples, 0.05%)</title><rect x="170.9" y="1989" width="0.6" height="15.0" fill="rgb(236,89,49)" rx="2" ry="2" />
<text  x="173.94" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="810.5" y="1653" width="0.2" height="15.0" fill="rgb(223,70,8)" rx="2" ry="2" />
<text  x="813.49" y="1663.5" ></text>
</g>
<g >
<title>[mcrouter] (22 samples, 0.37%)</title><rect x="986.4" y="1941" width="4.4" height="15.0" fill="rgb(221,4,22)" rx="2" ry="2" />
<text  x="989.39" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="869.7" y="1989" width="0.2" height="15.0" fill="rgb(244,159,47)" rx="2" ry="2" />
<text  x="872.72" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="56.7" y="1813" width="0.2" height="15.0" fill="rgb(208,192,19)" rx="2" ry="2" />
<text  x="59.67" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (4 samples, 0.07%)</title><rect x="525.9" y="1989" width="0.8" height="15.0" fill="rgb(235,104,28)" rx="2" ry="2" />
<text  x="528.91" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (51 samples, 0.86%)</title><rect x="1106.4" y="1685" width="10.2" height="15.0" fill="rgb(223,101,53)" rx="2" ry="2" />
<text  x="1109.44" y="1695.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="244.5" y="1861" width="0.2" height="15.0" fill="rgb(226,140,39)" rx="2" ry="2" />
<text  x="247.52" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="393.1" y="1861" width="0.2" height="15.0" fill="rgb(222,50,45)" rx="2" ry="2" />
<text  x="396.10" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="143.8" y="1893" width="0.2" height="15.0" fill="rgb(234,24,29)" rx="2" ry="2" />
<text  x="146.81" y="1903.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="813.5" y="1669" width="0.2" height="15.0" fill="rgb(251,41,0)" rx="2" ry="2" />
<text  x="816.48" y="1679.5" ></text>
</g>
<g >
<title>event_add_nolock_ (2 samples, 0.03%)</title><rect x="1140.1" y="2053" width="0.4" height="15.0" fill="rgb(208,79,6)" rx="2" ry="2" />
<text  x="1143.14" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="293" width="17.7" height="15.0" fill="rgb(225,205,9)" rx="2" ry="2" />
<text  x="96.36" y="303.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="936.7" y="1589" width="0.2" height="15.0" fill="rgb(205,65,47)" rx="2" ry="2" />
<text  x="939.73" y="1599.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(217,50,27)" rx="2" ry="2" />
<text  x="14.20" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.2" y="1845" width="0.2" height="15.0" fill="rgb(217,176,1)" rx="2" ry="2" />
<text  x="77.21" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="525.9" y="1973" width="0.8" height="15.0" fill="rgb(240,202,35)" rx="2" ry="2" />
<text  x="528.91" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="67.8" y="1957" width="0.2" height="15.0" fill="rgb(215,30,52)" rx="2" ry="2" />
<text  x="70.83" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="963.9" y="1957" width="0.2" height="15.0" fill="rgb(206,206,26)" rx="2" ry="2" />
<text  x="966.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="93.2" y="1397" width="20.1" height="15.0" fill="rgb(226,97,16)" rx="2" ry="2" />
<text  x="96.16" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="818.1" y="1477" width="0.2" height="15.0" fill="rgb(224,6,51)" rx="2" ry="2" />
<text  x="821.07" y="1487.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="738.5" y="1637" width="0.2" height="15.0" fill="rgb(215,137,32)" rx="2" ry="2" />
<text  x="741.50" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="841.2" y="1829" width="0.2" height="15.0" fill="rgb(251,226,46)" rx="2" ry="2" />
<text  x="844.21" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1061" width="18.7" height="15.0" fill="rgb(244,170,44)" rx="2" ry="2" />
<text  x="96.16" y="1071.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (7 samples, 0.12%)</title><rect x="252.9" y="1845" width="1.4" height="15.0" fill="rgb(235,212,5)" rx="2" ry="2" />
<text  x="255.90" y="1855.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="581.4" y="2021" width="0.6" height="15.0" fill="rgb(226,124,52)" rx="2" ry="2" />
<text  x="584.35" y="2031.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="258.9" y="1845" width="0.2" height="15.0" fill="rgb(245,132,28)" rx="2" ry="2" />
<text  x="261.88" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="818.1" y="1445" width="0.2" height="15.0" fill="rgb(248,39,47)" rx="2" ry="2" />
<text  x="821.07" y="1455.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (2 samples, 0.03%)</title><rect x="568.2" y="1989" width="0.4" height="15.0" fill="rgb(243,164,3)" rx="2" ry="2" />
<text  x="571.19" y="1999.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr@plt (1 samples, 0.02%)</title><rect x="529.9" y="1877" width="0.2" height="15.0" fill="rgb(214,186,13)" rx="2" ry="2" />
<text  x="532.90" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="121.3" y="1861" width="0.2" height="15.0" fill="rgb(221,187,5)" rx="2" ry="2" />
<text  x="124.28" y="1871.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (2 samples, 0.03%)</title><rect x="1006.5" y="2005" width="0.4" height="15.0" fill="rgb(253,18,47)" rx="2" ry="2" />
<text  x="1009.53" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="936.7" y="1717" width="0.2" height="15.0" fill="rgb(237,83,28)" rx="2" ry="2" />
<text  x="939.73" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="681.9" y="1925" width="0.2" height="15.0" fill="rgb(248,187,40)" rx="2" ry="2" />
<text  x="684.86" y="1935.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="669.3" y="1589" width="0.2" height="15.0" fill="rgb(222,47,16)" rx="2" ry="2" />
<text  x="672.30" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="851.8" y="1733" width="0.2" height="15.0" fill="rgb(231,110,54)" rx="2" ry="2" />
<text  x="854.77" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="140.0" y="1877" width="0.4" height="15.0" fill="rgb(246,68,42)" rx="2" ry="2" />
<text  x="143.03" y="1887.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="117.3" y="1989" width="0.6" height="15.0" fill="rgb(242,127,23)" rx="2" ry="2" />
<text  x="120.29" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="210.2" y="1861" width="1.2" height="15.0" fill="rgb(244,210,2)" rx="2" ry="2" />
<text  x="213.22" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="988.2" y="1733" width="0.2" height="15.0" fill="rgb(209,53,36)" rx="2" ry="2" />
<text  x="991.18" y="1743.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1134.6" y="1925" width="0.2" height="15.0" fill="rgb(227,220,0)" rx="2" ry="2" />
<text  x="1137.56" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (37 samples, 0.63%)</title><rect x="800.5" y="1525" width="7.4" height="15.0" fill="rgb(217,27,38)" rx="2" ry="2" />
<text  x="803.52" y="1535.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (3 samples, 0.05%)</title><rect x="872.1" y="1989" width="0.6" height="15.0" fill="rgb(214,80,15)" rx="2" ry="2" />
<text  x="875.12" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="77.6" y="1781" width="0.2" height="15.0" fill="rgb(221,161,30)" rx="2" ry="2" />
<text  x="80.61" y="1791.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="669.3" y="1653" width="0.4" height="15.0" fill="rgb(228,106,27)" rx="2" ry="2" />
<text  x="672.30" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="525.3" y="1973" width="0.2" height="15.0" fill="rgb(205,167,19)" rx="2" ry="2" />
<text  x="528.32" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="997.8" y="1701" width="0.2" height="15.0" fill="rgb(218,79,46)" rx="2" ry="2" />
<text  x="1000.75" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="210.8" y="1781" width="0.2" height="15.0" fill="rgb(254,129,47)" rx="2" ry="2" />
<text  x="213.82" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="861.9" y="1829" width="0.2" height="15.0" fill="rgb(207,193,39)" rx="2" ry="2" />
<text  x="864.95" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1049.6" y="1957" width="0.2" height="15.0" fill="rgb(231,139,34)" rx="2" ry="2" />
<text  x="1052.60" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="74.2" y="1717" width="0.2" height="15.0" fill="rgb(210,95,44)" rx="2" ry="2" />
<text  x="77.21" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="81.8" y="1893" width="0.2" height="15.0" fill="rgb(239,128,8)" rx="2" ry="2" />
<text  x="84.79" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="600.7" y="1829" width="0.2" height="15.0" fill="rgb(241,191,32)" rx="2" ry="2" />
<text  x="603.70" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="859.2" y="1653" width="0.2" height="15.0" fill="rgb(213,207,4)" rx="2" ry="2" />
<text  x="862.15" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1083.5" y="1781" width="0.2" height="15.0" fill="rgb(214,65,5)" rx="2" ry="2" />
<text  x="1086.51" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1127.8" y="2021" width="0.4" height="15.0" fill="rgb(251,178,26)" rx="2" ry="2" />
<text  x="1130.78" y="2031.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="564.4" y="1925" width="0.2" height="15.0" fill="rgb(236,137,39)" rx="2" ry="2" />
<text  x="567.40" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="910.6" y="1989" width="0.4" height="15.0" fill="rgb(221,10,39)" rx="2" ry="2" />
<text  x="913.61" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="103.9" y="37" width="0.2" height="15.0" fill="rgb(239,220,4)" rx="2" ry="2" />
<text  x="106.93" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="629.2" y="1989" width="1.8" height="15.0" fill="rgb(251,122,11)" rx="2" ry="2" />
<text  x="632.22" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="481.2" y="1925" width="0.4" height="15.0" fill="rgb(208,104,17)" rx="2" ry="2" />
<text  x="484.24" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="135.0" y="1893" width="0.2" height="15.0" fill="rgb(252,181,5)" rx="2" ry="2" />
<text  x="138.04" y="1903.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="846.2" y="1573" width="0.2" height="15.0" fill="rgb(241,109,12)" rx="2" ry="2" />
<text  x="849.19" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="473.1" y="1861" width="0.2" height="15.0" fill="rgb(226,44,41)" rx="2" ry="2" />
<text  x="476.07" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="107.9" y="53" width="0.2" height="15.0" fill="rgb(219,155,38)" rx="2" ry="2" />
<text  x="110.92" y="63.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="274.8" y="1349" width="0.2" height="15.0" fill="rgb(235,167,14)" rx="2" ry="2" />
<text  x="277.84" y="1359.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="669.3" y="1893" width="0.6" height="15.0" fill="rgb(209,16,27)" rx="2" ry="2" />
<text  x="672.30" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1009.7" y="1973" width="0.2" height="15.0" fill="rgb(242,75,52)" rx="2" ry="2" />
<text  x="1012.72" y="1983.5" ></text>
</g>
<g >
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="335.9" y="1989" width="0.4" height="15.0" fill="rgb(222,99,11)" rx="2" ry="2" />
<text  x="338.86" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="955.3" y="1973" width="0.6" height="15.0" fill="rgb(219,154,14)" rx="2" ry="2" />
<text  x="958.28" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1135.4" y="1733" width="0.2" height="15.0" fill="rgb(212,131,46)" rx="2" ry="2" />
<text  x="1138.36" y="1743.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="61.1" y="1861" width="0.4" height="15.0" fill="rgb(230,192,43)" rx="2" ry="2" />
<text  x="64.05" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="887.7" y="1781" width="0.2" height="15.0" fill="rgb(219,181,24)" rx="2" ry="2" />
<text  x="890.67" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.42%)</title><rect x="492.4" y="2021" width="16.8" height="15.0" fill="rgb(253,77,25)" rx="2" ry="2" />
<text  x="495.41" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.4" y="1941" width="0.2" height="15.0" fill="rgb(232,101,33)" rx="2" ry="2" />
<text  x="579.37" y="1951.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="366.0" y="1925" width="0.2" height="15.0" fill="rgb(222,10,38)" rx="2" ry="2" />
<text  x="368.97" y="1935.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="238.7" y="1893" width="1.8" height="15.0" fill="rgb(231,46,51)" rx="2" ry="2" />
<text  x="241.74" y="1903.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="256.9" y="1861" width="0.4" height="15.0" fill="rgb(223,133,35)" rx="2" ry="2" />
<text  x="259.89" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.2" y="1733" width="0.2" height="15.0" fill="rgb(220,91,33)" rx="2" ry="2" />
<text  x="844.21" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="698.2" y="2037" width="0.4" height="15.0" fill="rgb(215,201,50)" rx="2" ry="2" />
<text  x="701.22" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.15%)</title><rect x="301.0" y="1733" width="1.8" height="15.0" fill="rgb(221,147,34)" rx="2" ry="2" />
<text  x="303.96" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="540.5" y="1909" width="0.2" height="15.0" fill="rgb(238,189,50)" rx="2" ry="2" />
<text  x="543.47" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1090.7" y="1685" width="0.2" height="15.0" fill="rgb(249,98,33)" rx="2" ry="2" />
<text  x="1093.69" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="232.2" y="1909" width="0.2" height="15.0" fill="rgb(251,212,21)" rx="2" ry="2" />
<text  x="235.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (3 samples, 0.05%)</title><rect x="149.8" y="2005" width="0.6" height="15.0" fill="rgb(246,121,39)" rx="2" ry="2" />
<text  x="152.80" y="2015.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="25.8" y="1989" width="0.2" height="15.0" fill="rgb(223,157,41)" rx="2" ry="2" />
<text  x="28.75" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="859.2" y="1685" width="0.2" height="15.0" fill="rgb(247,162,30)" rx="2" ry="2" />
<text  x="862.15" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="211.2" y="1781" width="0.2" height="15.0" fill="rgb(220,101,45)" rx="2" ry="2" />
<text  x="214.22" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="906.6" y="2005" width="0.2" height="15.0" fill="rgb(205,52,5)" rx="2" ry="2" />
<text  x="909.62" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.05%)</title><rect x="397.1" y="1893" width="0.6" height="15.0" fill="rgb(249,197,25)" rx="2" ry="2" />
<text  x="400.08" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="107.5" y="53" width="0.2" height="15.0" fill="rgb(223,141,24)" rx="2" ry="2" />
<text  x="110.52" y="63.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="396.9" y="1749" width="0.2" height="15.0" fill="rgb(246,179,17)" rx="2" ry="2" />
<text  x="399.89" y="1759.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="1072.3" y="1749" width="0.2" height="15.0" fill="rgb(212,86,39)" rx="2" ry="2" />
<text  x="1075.34" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="578.4" y="1941" width="0.2" height="15.0" fill="rgb(227,45,45)" rx="2" ry="2" />
<text  x="581.36" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="481.2" y="1749" width="0.2" height="15.0" fill="rgb(210,141,14)" rx="2" ry="2" />
<text  x="484.24" y="1759.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="512.4" y="1925" width="0.4" height="15.0" fill="rgb(232,183,22)" rx="2" ry="2" />
<text  x="515.35" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="952.7" y="1909" width="0.2" height="15.0" fill="rgb(207,86,52)" rx="2" ry="2" />
<text  x="955.68" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="484.6" y="1861" width="0.2" height="15.0" fill="rgb(209,63,1)" rx="2" ry="2" />
<text  x="487.63" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="887.1" y="1861" width="0.2" height="15.0" fill="rgb(236,66,6)" rx="2" ry="2" />
<text  x="890.07" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (5 samples, 0.08%)</title><rect x="540.7" y="1925" width="1.0" height="15.0" fill="rgb(250,186,37)" rx="2" ry="2" />
<text  x="543.67" y="1935.5" ></text>
</g>
<g >
<title>[mcrouter] (115 samples, 1.94%)</title><rect x="195.7" y="2021" width="22.9" height="15.0" fill="rgb(234,76,53)" rx="2" ry="2" />
<text  x="198.67" y="2031.5" >[..</text>
</g>
<g >
<title>do_softirq_own_stack (52 samples, 0.88%)</title><rect x="1106.2" y="1749" width="10.4" height="15.0" fill="rgb(207,48,12)" rx="2" ry="2" />
<text  x="1109.24" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="87.0" y="2021" width="0.2" height="15.0" fill="rgb(226,225,24)" rx="2" ry="2" />
<text  x="89.98" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (1 samples, 0.02%)</title><rect x="24.0" y="1989" width="0.2" height="15.0" fill="rgb(225,103,42)" rx="2" ry="2" />
<text  x="26.96" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="972.4" y="2005" width="0.2" height="15.0" fill="rgb(247,10,29)" rx="2" ry="2" />
<text  x="975.43" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="929.2" y="1909" width="0.2" height="15.0" fill="rgb(216,61,47)" rx="2" ry="2" />
<text  x="932.15" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc (1 samples, 0.02%)</title><rect x="401.9" y="1973" width="0.2" height="15.0" fill="rgb(208,213,15)" rx="2" ry="2" />
<text  x="404.87" y="1983.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="915.6" y="1621" width="0.2" height="15.0" fill="rgb(216,151,2)" rx="2" ry="2" />
<text  x="918.59" y="1631.5" ></text>
</g>
<g >
<title>lock_timer_base (9 samples, 0.15%)</title><rect x="301.0" y="1749" width="1.8" height="15.0" fill="rgb(218,75,53)" rx="2" ry="2" />
<text  x="303.96" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="905.2" y="2037" width="0.2" height="15.0" fill="rgb(215,131,12)" rx="2" ry="2" />
<text  x="908.22" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="998.0" y="1957" width="0.4" height="15.0" fill="rgb(241,227,32)" rx="2" ry="2" />
<text  x="1000.95" y="1967.5" ></text>
</g>
<g >
<title>move_addr_to_user (5 samples, 0.08%)</title><rect x="599.7" y="1861" width="1.0" height="15.0" fill="rgb(250,188,10)" rx="2" ry="2" />
<text  x="602.70" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1035.0" y="2021" width="0.2" height="15.0" fill="rgb(209,119,25)" rx="2" ry="2" />
<text  x="1038.05" y="2031.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="396.3" y="1893" width="0.8" height="15.0" fill="rgb(232,146,36)" rx="2" ry="2" />
<text  x="399.29" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="341.0" y="1829" width="0.4" height="15.0" fill="rgb(238,67,37)" rx="2" ry="2" />
<text  x="344.05" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="700.0" y="1973" width="0.2" height="15.0" fill="rgb(241,130,33)" rx="2" ry="2" />
<text  x="703.01" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="927.2" y="1941" width="1.8" height="15.0" fill="rgb(249,181,19)" rx="2" ry="2" />
<text  x="930.16" y="1951.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="371.4" y="1781" width="0.2" height="15.0" fill="rgb(243,155,37)" rx="2" ry="2" />
<text  x="374.36" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (95 samples, 1.61%)</title><rect x="130.9" y="2005" width="18.9" height="15.0" fill="rgb(231,183,9)" rx="2" ry="2" />
<text  x="133.85" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="669.3" y="1669" width="0.4" height="15.0" fill="rgb(219,15,3)" rx="2" ry="2" />
<text  x="672.30" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="970.4" y="1861" width="0.2" height="15.0" fill="rgb(253,2,54)" rx="2" ry="2" />
<text  x="973.43" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getAncillaryDataSize (1 samples, 0.02%)</title><rect x="880.5" y="1957" width="0.2" height="15.0" fill="rgb(250,68,1)" rx="2" ry="2" />
<text  x="883.49" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (4 samples, 0.07%)</title><rect x="168.9" y="1957" width="0.8" height="15.0" fill="rgb(226,150,3)" rx="2" ry="2" />
<text  x="171.94" y="1967.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="1001.3" y="2037" width="0.4" height="15.0" fill="rgb(239,181,52)" rx="2" ry="2" />
<text  x="1004.34" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="681.9" y="1797" width="0.2" height="15.0" fill="rgb(250,92,42)" rx="2" ry="2" />
<text  x="684.86" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="396.9" y="1829" width="0.2" height="15.0" fill="rgb(246,76,39)" rx="2" ry="2" />
<text  x="399.89" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1150.7" y="1653" width="0.2" height="15.0" fill="rgb(221,101,39)" rx="2" ry="2" />
<text  x="1153.71" y="1663.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1067.8" y="1893" width="0.2" height="15.0" fill="rgb(252,178,16)" rx="2" ry="2" />
<text  x="1070.75" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.03%)</title><rect x="110.3" y="101" width="0.4" height="15.0" fill="rgb(244,16,27)" rx="2" ry="2" />
<text  x="113.31" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="450.7" y="1893" width="0.2" height="15.0" fill="rgb(219,147,6)" rx="2" ry="2" />
<text  x="453.73" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="622.8" y="1909" width="0.2" height="15.0" fill="rgb(237,171,15)" rx="2" ry="2" />
<text  x="625.83" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="892.5" y="1861" width="0.2" height="15.0" fill="rgb(248,105,52)" rx="2" ry="2" />
<text  x="895.46" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="747.9" y="1669" width="0.4" height="15.0" fill="rgb(234,17,35)" rx="2" ry="2" />
<text  x="750.87" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (5 samples, 0.08%)</title><rect x="615.5" y="2005" width="1.0" height="15.0" fill="rgb(242,107,51)" rx="2" ry="2" />
<text  x="618.46" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1088.3" y="1909" width="0.2" height="15.0" fill="rgb(220,68,49)" rx="2" ry="2" />
<text  x="1091.29" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (116 samples, 1.96%)</title><rect x="93.0" y="1877" width="23.1" height="15.0" fill="rgb(245,92,18)" rx="2" ry="2" />
<text  x="95.96" y="1887.5" >[..</text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (1 samples, 0.02%)</title><rect x="974.8" y="2037" width="0.2" height="15.0" fill="rgb(247,106,43)" rx="2" ry="2" />
<text  x="977.82" y="2047.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="766.2" y="1397" width="0.2" height="15.0" fill="rgb(207,199,41)" rx="2" ry="2" />
<text  x="769.22" y="1407.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="675.1" y="1957" width="0.8" height="15.0" fill="rgb(237,74,28)" rx="2" ry="2" />
<text  x="678.08" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="56.7" y="1861" width="0.2" height="15.0" fill="rgb(239,194,45)" rx="2" ry="2" />
<text  x="59.67" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (5 samples, 0.08%)</title><rect x="159.4" y="1989" width="1.0" height="15.0" fill="rgb(232,102,22)" rx="2" ry="2" />
<text  x="162.37" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="165.6" y="1973" width="0.4" height="15.0" fill="rgb(233,73,54)" rx="2" ry="2" />
<text  x="168.55" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="919.6" y="2037" width="0.2" height="15.0" fill="rgb(227,29,24)" rx="2" ry="2" />
<text  x="922.58" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="619.2" y="2021" width="0.4" height="15.0" fill="rgb(234,147,15)" rx="2" ry="2" />
<text  x="622.24" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="125.7" y="1941" width="0.2" height="15.0" fill="rgb(232,169,37)" rx="2" ry="2" />
<text  x="128.67" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="14.4" y="1877" width="1.0" height="15.0" fill="rgb(243,92,37)" rx="2" ry="2" />
<text  x="17.39" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (26 samples, 0.44%)</title><rect x="942.7" y="1989" width="5.2" height="15.0" fill="rgb(238,167,19)" rx="2" ry="2" />
<text  x="945.71" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="610.7" y="1733" width="0.2" height="15.0" fill="rgb(253,212,10)" rx="2" ry="2" />
<text  x="613.67" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="111.5" y="245" width="0.2" height="15.0" fill="rgb(206,197,27)" rx="2" ry="2" />
<text  x="114.51" y="255.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (4 samples, 0.07%)</title><rect x="806.7" y="1509" width="0.8" height="15.0" fill="rgb(218,9,17)" rx="2" ry="2" />
<text  x="809.70" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1000.7" y="1973" width="0.2" height="15.0" fill="rgb(254,71,54)" rx="2" ry="2" />
<text  x="1003.75" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="371.4" y="1877" width="0.2" height="15.0" fill="rgb(245,78,51)" rx="2" ry="2" />
<text  x="374.36" y="1887.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="103.5" y="53" width="0.4" height="15.0" fill="rgb(224,76,40)" rx="2" ry="2" />
<text  x="106.53" y="63.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_tlbonly (1 samples, 0.02%)</title><rect x="1134.6" y="1941" width="0.2" height="15.0" fill="rgb(224,207,15)" rx="2" ry="2" />
<text  x="1137.56" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="834.0" y="1653" width="0.2" height="15.0" fill="rgb(241,151,27)" rx="2" ry="2" />
<text  x="837.03" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="74.2" y="1941" width="0.2" height="15.0" fill="rgb(239,56,0)" rx="2" ry="2" />
<text  x="77.21" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="669.5" y="1541" width="0.2" height="15.0" fill="rgb(237,75,20)" rx="2" ry="2" />
<text  x="672.50" y="1551.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="768.8" y="1701" width="0.2" height="15.0" fill="rgb(247,49,43)" rx="2" ry="2" />
<text  x="771.81" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1169.9" y="2053" width="0.8" height="15.0" fill="rgb(237,8,23)" rx="2" ry="2" />
<text  x="1172.86" y="2063.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (6 samples, 0.10%)</title><rect x="862.3" y="1925" width="1.2" height="15.0" fill="rgb(225,215,2)" rx="2" ry="2" />
<text  x="865.34" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="618.4" y="2037" width="0.4" height="15.0" fill="rgb(242,58,31)" rx="2" ry="2" />
<text  x="621.45" y="2047.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="1000.9" y="1957" width="0.2" height="15.0" fill="rgb(215,194,8)" rx="2" ry="2" />
<text  x="1003.94" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="920.0" y="2005" width="0.2" height="15.0" fill="rgb(221,41,37)" rx="2" ry="2" />
<text  x="922.98" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1001.1" y="1989" width="0.2" height="15.0" fill="rgb(223,67,43)" rx="2" ry="2" />
<text  x="1004.14" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="669.3" y="1877" width="0.6" height="15.0" fill="rgb(211,119,50)" rx="2" ry="2" />
<text  x="672.30" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1147.1" y="1973" width="0.2" height="15.0" fill="rgb(238,205,35)" rx="2" ry="2" />
<text  x="1150.12" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="909.8" y="1621" width="0.2" height="15.0" fill="rgb(205,43,19)" rx="2" ry="2" />
<text  x="912.81" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="899.2" y="1925" width="0.2" height="15.0" fill="rgb(218,25,47)" rx="2" ry="2" />
<text  x="902.24" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="637.6" y="1909" width="0.4" height="15.0" fill="rgb(225,208,54)" rx="2" ry="2" />
<text  x="640.59" y="1919.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1118.8" y="1893" width="0.2" height="15.0" fill="rgb(223,212,36)" rx="2" ry="2" />
<text  x="1121.81" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="912.6" y="1973" width="0.4" height="15.0" fill="rgb(246,80,2)" rx="2" ry="2" />
<text  x="915.60" y="1983.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (2 samples, 0.03%)</title><rect x="295.6" y="1829" width="0.4" height="15.0" fill="rgb(245,135,44)" rx="2" ry="2" />
<text  x="298.58" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="915.6" y="1717" width="0.2" height="15.0" fill="rgb(246,75,48)" rx="2" ry="2" />
<text  x="918.59" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="909.8" y="1669" width="0.2" height="15.0" fill="rgb(233,179,36)" rx="2" ry="2" />
<text  x="912.81" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="311.5" y="1717" width="0.2" height="15.0" fill="rgb(241,70,18)" rx="2" ry="2" />
<text  x="314.53" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (6 samples, 0.10%)</title><rect x="911.2" y="1973" width="1.2" height="15.0" fill="rgb(249,201,6)" rx="2" ry="2" />
<text  x="914.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="502.6" y="1701" width="0.2" height="15.0" fill="rgb(214,17,1)" rx="2" ry="2" />
<text  x="505.58" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1163.9" y="1893" width="0.2" height="15.0" fill="rgb(210,124,32)" rx="2" ry="2" />
<text  x="1166.88" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.0" y="1957" width="0.4" height="15.0" fill="rgb(252,13,18)" rx="2" ry="2" />
<text  x="575.98" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_accept (75 samples, 1.27%)</title><rect x="344.4" y="1941" width="15.0" height="15.0" fill="rgb(206,91,31)" rx="2" ry="2" />
<text  x="347.44" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="350.6" y="1909" width="0.4" height="15.0" fill="rgb(206,10,32)" rx="2" ry="2" />
<text  x="353.62" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="63.0" y="1813" width="0.2" height="15.0" fill="rgb(215,35,26)" rx="2" ry="2" />
<text  x="66.05" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (11 samples, 0.19%)</title><rect x="964.1" y="2037" width="2.1" height="15.0" fill="rgb(227,102,3)" rx="2" ry="2" />
<text  x="967.05" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="54.3" y="1813" width="0.2" height="15.0" fill="rgb(216,47,31)" rx="2" ry="2" />
<text  x="57.27" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="704.6" y="1909" width="0.2" height="15.0" fill="rgb(214,53,36)" rx="2" ry="2" />
<text  x="707.60" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="564.8" y="1845" width="0.2" height="15.0" fill="rgb(238,163,17)" rx="2" ry="2" />
<text  x="567.80" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="699.8" y="2037" width="0.2" height="15.0" fill="rgb(238,100,46)" rx="2" ry="2" />
<text  x="702.81" y="2047.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="81.8" y="1653" width="0.2" height="15.0" fill="rgb(231,21,15)" rx="2" ry="2" />
<text  x="84.79" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (51 samples, 0.86%)</title><rect x="1106.4" y="1669" width="10.2" height="15.0" fill="rgb(227,160,33)" rx="2" ry="2" />
<text  x="1109.44" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="894.3" y="1797" width="0.2" height="15.0" fill="rgb(224,179,21)" rx="2" ry="2" />
<text  x="897.25" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="177.9" y="1909" width="0.2" height="15.0" fill="rgb(221,162,2)" rx="2" ry="2" />
<text  x="180.92" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1135.4" y="1765" width="0.2" height="15.0" fill="rgb(217,10,4)" rx="2" ry="2" />
<text  x="1138.36" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="948.7" y="1877" width="0.2" height="15.0" fill="rgb(233,189,9)" rx="2" ry="2" />
<text  x="951.70" y="1887.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1049.0" y="2005" width="0.4" height="15.0" fill="rgb(241,79,37)" rx="2" ry="2" />
<text  x="1052.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1,013 samples, 17.12%)</title><rect x="700.0" y="2037" width="202.0" height="15.0" fill="rgb(216,208,19)" rx="2" ry="2" />
<text  x="703.01" y="2047.5" >facebook::memcache::McServ..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="621.8" y="1957" width="0.2" height="15.0" fill="rgb(235,197,34)" rx="2" ry="2" />
<text  x="624.84" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenlessSlotValue (1 samples, 0.02%)</title><rect x="158.8" y="1989" width="0.2" height="15.0" fill="rgb(222,80,3)" rx="2" ry="2" />
<text  x="161.77" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="450.3" y="1893" width="0.4" height="15.0" fill="rgb(212,177,43)" rx="2" ry="2" />
<text  x="453.33" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (14 samples, 0.24%)</title><rect x="1149.5" y="2037" width="2.8" height="15.0" fill="rgb(208,64,0)" rx="2" ry="2" />
<text  x="1152.52" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="676.1" y="1957" width="0.2" height="15.0" fill="rgb(243,133,17)" rx="2" ry="2" />
<text  x="679.08" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="835.0" y="1381" width="0.2" height="15.0" fill="rgb(210,80,10)" rx="2" ry="2" />
<text  x="838.02" y="1391.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="274.6" y="1381" width="0.4" height="15.0" fill="rgb(213,145,5)" rx="2" ry="2" />
<text  x="277.64" y="1391.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="350.8" y="1765" width="0.2" height="15.0" fill="rgb(232,35,39)" rx="2" ry="2" />
<text  x="353.82" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1150.7" y="1813" width="0.2" height="15.0" fill="rgb(243,12,51)" rx="2" ry="2" />
<text  x="1153.71" y="1823.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="236.1" y="1877" width="0.2" height="15.0" fill="rgb(222,183,10)" rx="2" ry="2" />
<text  x="239.15" y="1887.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (33 samples, 0.56%)</title><rect x="283.0" y="1685" width="6.6" height="15.0" fill="rgb(240,126,35)" rx="2" ry="2" />
<text  x="286.01" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="111.5" y="133" width="0.2" height="15.0" fill="rgb(237,11,3)" rx="2" ry="2" />
<text  x="114.51" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="398.5" y="1909" width="0.4" height="15.0" fill="rgb(206,149,28)" rx="2" ry="2" />
<text  x="401.48" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="111.7" y="245" width="0.2" height="15.0" fill="rgb(225,82,24)" rx="2" ry="2" />
<text  x="114.71" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="705.2" y="1861" width="2.0" height="15.0" fill="rgb(215,144,31)" rx="2" ry="2" />
<text  x="708.20" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (4 samples, 0.07%)</title><rect x="656.3" y="2037" width="0.8" height="15.0" fill="rgb(211,73,52)" rx="2" ry="2" />
<text  x="659.34" y="2047.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="976.0" y="1957" width="0.4" height="15.0" fill="rgb(248,50,15)" rx="2" ry="2" />
<text  x="979.02" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (381 samples, 6.44%)</title><rect x="326.5" y="2021" width="76.0" height="15.0" fill="rgb(226,38,11)" rx="2" ry="2" />
<text  x="329.49" y="2031.5" >entry_SY..</text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1079.5" y="1541" width="0.2" height="15.0" fill="rgb(213,141,35)" rx="2" ry="2" />
<text  x="1082.52" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="834.0" y="1685" width="0.2" height="15.0" fill="rgb(230,90,4)" rx="2" ry="2" />
<text  x="837.03" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="747.5" y="1653" width="0.2" height="15.0" fill="rgb(238,67,24)" rx="2" ry="2" />
<text  x="750.48" y="1663.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (6 samples, 0.10%)</title><rect x="1164.1" y="1909" width="1.2" height="15.0" fill="rgb(240,159,46)" rx="2" ry="2" />
<text  x="1167.07" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="232.2" y="1893" width="0.2" height="15.0" fill="rgb(251,110,40)" rx="2" ry="2" />
<text  x="235.16" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="673.1" y="1989" width="0.2" height="15.0" fill="rgb(208,117,27)" rx="2" ry="2" />
<text  x="676.09" y="1999.5" ></text>
</g>
<g >
<title>ip_send_check (12 samples, 0.20%)</title><rect x="779.6" y="1621" width="2.4" height="15.0" fill="rgb(212,113,46)" rx="2" ry="2" />
<text  x="782.58" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (6 samples, 0.10%)</title><rect x="575.4" y="2005" width="1.2" height="15.0" fill="rgb(248,127,10)" rx="2" ry="2" />
<text  x="578.37" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="537.3" y="1909" width="0.2" height="15.0" fill="rgb(240,159,8)" rx="2" ry="2" />
<text  x="540.28" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (60 samples, 1.01%)</title><rect x="1105.4" y="1909" width="12.0" height="15.0" fill="rgb(238,125,3)" rx="2" ry="2" />
<text  x="1108.44" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1150.7" y="1765" width="0.2" height="15.0" fill="rgb(224,158,24)" rx="2" ry="2" />
<text  x="1153.71" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="252.5" y="1557" width="0.2" height="15.0" fill="rgb(227,106,36)" rx="2" ry="2" />
<text  x="255.50" y="1567.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1049.4" y="1973" width="0.2" height="15.0" fill="rgb(232,220,35)" rx="2" ry="2" />
<text  x="1052.41" y="1983.5" ></text>
</g>
<g >
<title>__fget (26 samples, 0.44%)</title><rect x="445.5" y="1941" width="5.2" height="15.0" fill="rgb(239,41,27)" rx="2" ry="2" />
<text  x="448.55" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="620.4" y="2021" width="2.0" height="15.0" fill="rgb(248,57,48)" rx="2" ry="2" />
<text  x="623.44" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (12 samples, 0.20%)</title><rect x="362.8" y="1925" width="2.4" height="15.0" fill="rgb(225,187,16)" rx="2" ry="2" />
<text  x="365.78" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="141.4" y="1893" width="0.2" height="15.0" fill="rgb(214,214,42)" rx="2" ry="2" />
<text  x="144.42" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="58.3" y="1973" width="0.2" height="15.0" fill="rgb(216,157,46)" rx="2" ry="2" />
<text  x="61.26" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="978.4" y="2005" width="0.2" height="15.0" fill="rgb(244,11,12)" rx="2" ry="2" />
<text  x="981.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="622.8" y="1925" width="0.2" height="15.0" fill="rgb(230,93,46)" rx="2" ry="2" />
<text  x="625.83" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="84.6" y="1989" width="0.2" height="15.0" fill="rgb(252,188,45)" rx="2" ry="2" />
<text  x="87.59" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="929.4" y="1909" width="0.2" height="15.0" fill="rgb(253,220,0)" rx="2" ry="2" />
<text  x="932.35" y="1919.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="840.6" y="1813" width="0.2" height="15.0" fill="rgb(234,116,13)" rx="2" ry="2" />
<text  x="843.61" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="72.6" y="1925" width="0.2" height="15.0" fill="rgb(219,46,11)" rx="2" ry="2" />
<text  x="75.62" y="1935.5" ></text>
</g>
<g >
<title>accept4 (409 samples, 6.91%)</title><rect x="323.7" y="2037" width="81.6" height="15.0" fill="rgb(227,124,44)" rx="2" ry="2" />
<text  x="326.70" y="2047.5" >accept4</text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="482.8" y="1621" width="0.2" height="15.0" fill="rgb(238,76,54)" rx="2" ry="2" />
<text  x="485.84" y="1631.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="114.9" y="1749" width="0.2" height="15.0" fill="rgb(251,110,43)" rx="2" ry="2" />
<text  x="117.90" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="527.9" y="1845" width="0.2" height="15.0" fill="rgb(239,105,38)" rx="2" ry="2" />
<text  x="530.91" y="1855.5" ></text>
</g>
<g >
<title>filp_close (10 samples, 0.17%)</title><rect x="843.2" y="1829" width="2.0" height="15.0" fill="rgb(205,116,17)" rx="2" ry="2" />
<text  x="846.20" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="485.8" y="1973" width="0.4" height="15.0" fill="rgb(213,164,38)" rx="2" ry="2" />
<text  x="488.83" y="1983.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (6 samples, 0.10%)</title><rect x="339.3" y="1957" width="1.1" height="15.0" fill="rgb(207,7,7)" rx="2" ry="2" />
<text  x="342.25" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="923.6" y="2005" width="0.6" height="15.0" fill="rgb(244,105,38)" rx="2" ry="2" />
<text  x="926.57" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (23 samples, 0.39%)</title><rect x="157.6" y="2021" width="4.6" height="15.0" fill="rgb(233,226,49)" rx="2" ry="2" />
<text  x="160.57" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="217.8" y="1941" width="0.2" height="15.0" fill="rgb(212,164,15)" rx="2" ry="2" />
<text  x="220.80" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="520.7" y="1973" width="0.2" height="15.0" fill="rgb(208,51,54)" rx="2" ry="2" />
<text  x="523.73" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="486.0" y="1813" width="0.2" height="15.0" fill="rgb(227,80,7)" rx="2" ry="2" />
<text  x="489.03" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="252.5" y="1669" width="0.2" height="15.0" fill="rgb(253,66,36)" rx="2" ry="2" />
<text  x="255.50" y="1679.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="748.3" y="1797" width="0.2" height="15.0" fill="rgb(208,199,7)" rx="2" ry="2" />
<text  x="751.27" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="970.4" y="1749" width="0.2" height="15.0" fill="rgb(245,6,22)" rx="2" ry="2" />
<text  x="973.43" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="121.3" y="1925" width="0.2" height="15.0" fill="rgb(231,116,1)" rx="2" ry="2" />
<text  x="124.28" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="921.0" y="2021" width="1.4" height="15.0" fill="rgb(253,49,20)" rx="2" ry="2" />
<text  x="923.98" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="1176.2" y="1973" width="0.4" height="15.0" fill="rgb(214,150,10)" rx="2" ry="2" />
<text  x="1179.24" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="874.1" y="1989" width="0.2" height="15.0" fill="rgb(237,105,44)" rx="2" ry="2" />
<text  x="877.11" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="152.6" y="1941" width="0.2" height="15.0" fill="rgb(218,47,40)" rx="2" ry="2" />
<text  x="155.59" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="87.0" y="1973" width="0.2" height="15.0" fill="rgb(226,130,17)" rx="2" ry="2" />
<text  x="89.98" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="891.5" y="1893" width="0.2" height="15.0" fill="rgb(246,146,22)" rx="2" ry="2" />
<text  x="894.46" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="128.3" y="1973" width="0.2" height="15.0" fill="rgb(230,154,36)" rx="2" ry="2" />
<text  x="131.26" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="600.7" y="1845" width="0.2" height="15.0" fill="rgb(205,155,52)" rx="2" ry="2" />
<text  x="603.70" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.5" y="1877" width="0.2" height="15.0" fill="rgb(233,199,9)" rx="2" ry="2" />
<text  x="543.47" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="599.5" y="1445" width="0.2" height="15.0" fill="rgb(222,15,9)" rx="2" ry="2" />
<text  x="602.50" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="469.5" y="1797" width="0.2" height="15.0" fill="rgb(244,88,41)" rx="2" ry="2" />
<text  x="472.48" y="1807.5" ></text>
</g>
<g >
<title>ip_output (140 samples, 2.37%)</title><rect x="782.2" y="1637" width="27.9" height="15.0" fill="rgb(252,17,42)" rx="2" ry="2" />
<text  x="785.18" y="1647.5" >i..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (39 samples, 0.66%)</title><rect x="929.6" y="1973" width="7.7" height="15.0" fill="rgb(206,68,28)" rx="2" ry="2" />
<text  x="932.55" y="1983.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1119.0" y="1925" width="0.2" height="15.0" fill="rgb(216,171,26)" rx="2" ry="2" />
<text  x="1122.00" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="350.6" y="1925" width="0.4" height="15.0" fill="rgb(210,13,31)" rx="2" ry="2" />
<text  x="353.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="481.2" y="1813" width="0.4" height="15.0" fill="rgb(235,219,39)" rx="2" ry="2" />
<text  x="484.24" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="525.1" y="1941" width="0.2" height="15.0" fill="rgb(253,109,30)" rx="2" ry="2" />
<text  x="528.12" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="241.9" y="1845" width="0.2" height="15.0" fill="rgb(253,111,24)" rx="2" ry="2" />
<text  x="244.93" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1105.0" y="1701" width="0.2" height="15.0" fill="rgb(209,44,25)" rx="2" ry="2" />
<text  x="1108.04" y="1711.5" ></text>
</g>
<g >
<title>sock_sendmsg (385 samples, 6.51%)</title><rect x="237.1" y="1941" width="76.8" height="15.0" fill="rgb(250,84,10)" rx="2" ry="2" />
<text  x="240.15" y="1951.5" >sock_sen..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="300.6" y="1685" width="0.2" height="15.0" fill="rgb(224,215,4)" rx="2" ry="2" />
<text  x="303.56" y="1695.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (4 samples, 0.07%)</title><rect x="485.0" y="2005" width="0.8" height="15.0" fill="rgb(244,225,9)" rx="2" ry="2" />
<text  x="488.03" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="144.8" y="1877" width="0.2" height="15.0" fill="rgb(228,175,54)" rx="2" ry="2" />
<text  x="147.81" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="687.2" y="1797" width="0.2" height="15.0" fill="rgb(217,100,54)" rx="2" ry="2" />
<text  x="690.25" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (5 samples, 0.08%)</title><rect x="963.1" y="2037" width="1.0" height="15.0" fill="rgb(250,165,14)" rx="2" ry="2" />
<text  x="966.05" y="2047.5" ></text>
</g>
<g >
<title>dput (84 samples, 1.42%)</title><rect x="730.9" y="1797" width="16.8" height="15.0" fill="rgb(215,221,11)" rx="2" ry="2" />
<text  x="733.92" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="341.0" y="1845" width="0.4" height="15.0" fill="rgb(234,92,16)" rx="2" ry="2" />
<text  x="344.05" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="14.4" y="1829" width="0.8" height="15.0" fill="rgb(242,21,22)" rx="2" ry="2" />
<text  x="17.39" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="1181.2" y="2021" width="0.6" height="15.0" fill="rgb(224,13,4)" rx="2" ry="2" />
<text  x="1184.23" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1,013 samples, 17.12%)</title><rect x="700.0" y="2021" width="202.0" height="15.0" fill="rgb(231,91,45)" rx="2" ry="2" />
<text  x="703.01" y="2031.5" >[unknown]</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (22 samples, 0.37%)</title><rect x="986.4" y="1973" width="4.4" height="15.0" fill="rgb(215,102,11)" rx="2" ry="2" />
<text  x="989.39" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (1 samples, 0.02%)</title><rect x="78.8" y="1973" width="0.2" height="15.0" fill="rgb(211,141,36)" rx="2" ry="2" />
<text  x="81.80" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="565.2" y="1861" width="0.4" height="15.0" fill="rgb(229,163,41)" rx="2" ry="2" />
<text  x="568.20" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="121.3" y="1765" width="0.2" height="15.0" fill="rgb(205,124,54)" rx="2" ry="2" />
<text  x="124.28" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (6 samples, 0.10%)</title><rect x="210.2" y="1877" width="1.2" height="15.0" fill="rgb(245,218,39)" rx="2" ry="2" />
<text  x="213.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (3 samples, 0.05%)</title><rect x="836.8" y="1701" width="0.6" height="15.0" fill="rgb(245,192,14)" rx="2" ry="2" />
<text  x="839.82" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="133.4" y="1893" width="0.2" height="15.0" fill="rgb(231,19,25)" rx="2" ry="2" />
<text  x="136.44" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="810.5" y="1605" width="0.2" height="15.0" fill="rgb(218,91,27)" rx="2" ry="2" />
<text  x="813.49" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1118.4" y="1893" width="0.2" height="15.0" fill="rgb(250,221,36)" rx="2" ry="2" />
<text  x="1121.41" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="111.5" y="373" width="0.2" height="15.0" fill="rgb(210,194,24)" rx="2" ry="2" />
<text  x="114.51" y="383.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1079.5" y="1429" width="0.2" height="15.0" fill="rgb(213,205,48)" rx="2" ry="2" />
<text  x="1082.52" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="399.7" y="1845" width="0.2" height="15.0" fill="rgb(233,173,47)" rx="2" ry="2" />
<text  x="402.68" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="621.8" y="1973" width="0.2" height="15.0" fill="rgb(206,141,46)" rx="2" ry="2" />
<text  x="624.84" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="81.8" y="1813" width="0.2" height="15.0" fill="rgb(207,22,17)" rx="2" ry="2" />
<text  x="84.79" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="615.7" y="1893" width="0.8" height="15.0" fill="rgb(209,214,25)" rx="2" ry="2" />
<text  x="618.65" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="47.3" y="1925" width="0.4" height="15.0" fill="rgb(225,92,19)" rx="2" ry="2" />
<text  x="50.29" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1149.5" y="2005" width="0.2" height="15.0" fill="rgb(242,197,34)" rx="2" ry="2" />
<text  x="1152.52" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (8 samples, 0.14%)</title><rect x="915.0" y="1989" width="1.6" height="15.0" fill="rgb(206,148,29)" rx="2" ry="2" />
<text  x="917.99" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="894.9" y="1909" width="0.1" height="15.0" fill="rgb(226,170,48)" rx="2" ry="2" />
<text  x="897.85" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="527.9" y="1973" width="0.2" height="15.0" fill="rgb(209,225,52)" rx="2" ry="2" />
<text  x="530.91" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="551.6" y="1973" width="0.2" height="15.0" fill="rgb(207,86,36)" rx="2" ry="2" />
<text  x="554.64" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="255.1" y="1781" width="0.2" height="15.0" fill="rgb(209,174,9)" rx="2" ry="2" />
<text  x="258.09" y="1791.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="936.5" y="1909" width="0.2" height="15.0" fill="rgb(221,68,34)" rx="2" ry="2" />
<text  x="939.53" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="603.1" y="1845" width="0.2" height="15.0" fill="rgb(205,9,21)" rx="2" ry="2" />
<text  x="606.09" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_free (23 samples, 0.39%)</title><rect x="1068.0" y="1893" width="4.5" height="15.0" fill="rgb(225,52,45)" rx="2" ry="2" />
<text  x="1070.95" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="948.3" y="1989" width="0.6" height="15.0" fill="rgb(219,47,21)" rx="2" ry="2" />
<text  x="951.30" y="1999.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="464.9" y="1925" width="0.2" height="15.0" fill="rgb(233,195,38)" rx="2" ry="2" />
<text  x="467.89" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="855.2" y="1781" width="0.2" height="15.0" fill="rgb(213,38,39)" rx="2" ry="2" />
<text  x="858.16" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="641.4" y="1973" width="1.4" height="15.0" fill="rgb(209,163,22)" rx="2" ry="2" />
<text  x="644.38" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="509.8" y="2037" width="0.2" height="15.0" fill="rgb(248,18,0)" rx="2" ry="2" />
<text  x="512.76" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="672.7" y="1973" width="0.2" height="15.0" fill="rgb(253,113,38)" rx="2" ry="2" />
<text  x="675.69" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="108.9" y="37" width="0.2" height="15.0" fill="rgb(222,148,26)" rx="2" ry="2" />
<text  x="111.91" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="396.9" y="1877" width="0.2" height="15.0" fill="rgb(218,131,4)" rx="2" ry="2" />
<text  x="399.89" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="194.9" y="2021" width="0.8" height="15.0" fill="rgb(215,146,38)" rx="2" ry="2" />
<text  x="197.87" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.2" y="1781" width="0.2" height="15.0" fill="rgb(220,57,38)" rx="2" ry="2" />
<text  x="844.21" y="1791.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (10 samples, 0.17%)</title><rect x="311.9" y="1925" width="2.0" height="15.0" fill="rgb(227,49,18)" rx="2" ry="2" />
<text  x="314.93" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (27 samples, 0.46%)</title><rect x="818.7" y="1653" width="5.4" height="15.0" fill="rgb(245,10,12)" rx="2" ry="2" />
<text  x="821.67" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="111.3" y="101" width="0.2" height="15.0" fill="rgb(209,118,33)" rx="2" ry="2" />
<text  x="114.31" y="111.5" ></text>
</g>
<g >
<title>inet_put_port (1 samples, 0.02%)</title><rect x="841.0" y="1493" width="0.2" height="15.0" fill="rgb(205,59,53)" rx="2" ry="2" />
<text  x="844.01" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="93.2" y="1669" width="21.7" height="15.0" fill="rgb(229,54,27)" rx="2" ry="2" />
<text  x="96.16" y="1679.5" >[..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="785.8" y="1365" width="0.2" height="15.0" fill="rgb(238,151,4)" rx="2" ry="2" />
<text  x="788.76" y="1375.5" ></text>
</g>
<g >
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="1017.1" y="1685" width="0.2" height="15.0" fill="rgb(220,61,5)" rx="2" ry="2" />
<text  x="1020.10" y="1695.5" ></text>
</g>
<g >
<title>__GI___getpeername (54 samples, 0.91%)</title><rect x="661.5" y="1941" width="10.8" height="15.0" fill="rgb(254,166,54)" rx="2" ry="2" />
<text  x="664.52" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="270.6" y="1749" width="0.2" height="15.0" fill="rgb(219,97,31)" rx="2" ry="2" />
<text  x="273.65" y="1759.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="910.2" y="1973" width="0.2" height="15.0" fill="rgb(242,44,35)" rx="2" ry="2" />
<text  x="913.21" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="529.1" y="1925" width="1.0" height="15.0" fill="rgb(219,103,17)" rx="2" ry="2" />
<text  x="532.10" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="125.9" y="1941" width="0.2" height="15.0" fill="rgb(236,190,37)" rx="2" ry="2" />
<text  x="128.87" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1026.3" y="2037" width="0.2" height="15.0" fill="rgb(215,194,45)" rx="2" ry="2" />
<text  x="1029.27" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (10 samples, 0.17%)</title><rect x="897.0" y="1973" width="2.0" height="15.0" fill="rgb(226,22,40)" rx="2" ry="2" />
<text  x="900.04" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.2" y="1941" width="0.2" height="15.0" fill="rgb(235,64,42)" rx="2" ry="2" />
<text  x="576.18" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="565.0" y="1957" width="0.6" height="15.0" fill="rgb(210,21,47)" rx="2" ry="2" />
<text  x="568.00" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="164.4" y="2021" width="0.2" height="15.0" fill="rgb(212,154,5)" rx="2" ry="2" />
<text  x="167.36" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1049.6" y="1829" width="0.2" height="15.0" fill="rgb(250,212,47)" rx="2" ry="2" />
<text  x="1052.60" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1026.3" y="2005" width="0.2" height="15.0" fill="rgb(218,134,19)" rx="2" ry="2" />
<text  x="1029.27" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="60.7" y="1909" width="0.2" height="15.0" fill="rgb(230,184,26)" rx="2" ry="2" />
<text  x="63.65" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.0" y="1781" width="0.2" height="15.0" fill="rgb(227,139,13)" rx="2" ry="2" />
<text  x="844.01" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="616.7" y="1989" width="0.6" height="15.0" fill="rgb(206,225,24)" rx="2" ry="2" />
<text  x="619.65" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="617.8" y="2021" width="0.6" height="15.0" fill="rgb(243,171,30)" rx="2" ry="2" />
<text  x="620.85" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1105.0" y="1637" width="0.2" height="15.0" fill="rgb(213,206,27)" rx="2" ry="2" />
<text  x="1108.04" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="673.5" y="1973" width="0.2" height="15.0" fill="rgb(219,133,42)" rx="2" ry="2" />
<text  x="676.49" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="873.7" y="1893" width="0.2" height="15.0" fill="rgb(231,158,44)" rx="2" ry="2" />
<text  x="876.71" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="576.2" y="1973" width="0.4" height="15.0" fill="rgb(211,137,33)" rx="2" ry="2" />
<text  x="579.17" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1128.0" y="1749" width="0.2" height="15.0" fill="rgb(233,211,9)" rx="2" ry="2" />
<text  x="1130.98" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="29.3" y="1925" width="0.2" height="15.0" fill="rgb(229,47,25)" rx="2" ry="2" />
<text  x="32.34" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="747.5" y="1701" width="0.2" height="15.0" fill="rgb(245,196,52)" rx="2" ry="2" />
<text  x="750.48" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1072.3" y="1845" width="0.2" height="15.0" fill="rgb(220,17,3)" rx="2" ry="2" />
<text  x="1075.34" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="887.7" y="1685" width="0.2" height="15.0" fill="rgb(226,175,36)" rx="2" ry="2" />
<text  x="890.67" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="473.1" y="1877" width="0.2" height="15.0" fill="rgb(247,96,38)" rx="2" ry="2" />
<text  x="476.07" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="997.8" y="1621" width="0.2" height="15.0" fill="rgb(244,16,26)" rx="2" ry="2" />
<text  x="1000.75" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="868.3" y="1989" width="0.2" height="15.0" fill="rgb(231,45,37)" rx="2" ry="2" />
<text  x="871.33" y="1999.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="373.2" y="1877" width="0.2" height="15.0" fill="rgb(242,159,37)" rx="2" ry="2" />
<text  x="376.15" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="457.7" y="1909" width="0.2" height="15.0" fill="rgb(242,89,28)" rx="2" ry="2" />
<text  x="460.71" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="971.4" y="1893" width="0.8" height="15.0" fill="rgb(207,8,0)" rx="2" ry="2" />
<text  x="974.43" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="846.6" y="1637" width="0.2" height="15.0" fill="rgb(238,106,42)" rx="2" ry="2" />
<text  x="849.59" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="537.3" y="1493" width="0.2" height="15.0" fill="rgb(213,11,24)" rx="2" ry="2" />
<text  x="540.28" y="1503.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="622.8" y="2005" width="0.8" height="15.0" fill="rgb(234,181,22)" rx="2" ry="2" />
<text  x="625.83" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="851.8" y="1717" width="0.2" height="15.0" fill="rgb(234,98,46)" rx="2" ry="2" />
<text  x="854.77" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="610.7" y="1381" width="0.2" height="15.0" fill="rgb(223,116,16)" rx="2" ry="2" />
<text  x="613.67" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv_finish (50 samples, 0.85%)</title><rect x="1106.6" y="1637" width="10.0" height="15.0" fill="rgb(240,43,0)" rx="2" ry="2" />
<text  x="1109.64" y="1647.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (104 samples, 1.76%)</title><rect x="675.1" y="2005" width="20.7" height="15.0" fill="rgb(205,154,34)" rx="2" ry="2" />
<text  x="678.08" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6 samples, 0.10%)</title><rect x="392.3" y="1893" width="1.2" height="15.0" fill="rgb(232,98,2)" rx="2" ry="2" />
<text  x="395.30" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (107 samples, 1.81%)</title><rect x="585.5" y="1957" width="21.4" height="15.0" fill="rgb(221,7,21)" rx="2" ry="2" />
<text  x="588.54" y="1967.5" >f..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="77.6" y="1813" width="0.2" height="15.0" fill="rgb(213,163,47)" rx="2" ry="2" />
<text  x="80.61" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1021.5" y="2021" width="0.8" height="15.0" fill="rgb(220,216,53)" rx="2" ry="2" />
<text  x="1024.49" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="156.6" y="1813" width="0.2" height="15.0" fill="rgb(209,25,19)" rx="2" ry="2" />
<text  x="159.58" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="549.6" y="1957" width="0.2" height="15.0" fill="rgb(251,39,1)" rx="2" ry="2" />
<text  x="552.65" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="124.1" y="1925" width="0.2" height="15.0" fill="rgb(226,174,9)" rx="2" ry="2" />
<text  x="127.07" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="599.5" y="1845" width="0.2" height="15.0" fill="rgb(235,13,38)" rx="2" ry="2" />
<text  x="602.50" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (11 samples, 0.19%)</title><rect x="552.4" y="1973" width="2.2" height="15.0" fill="rgb(210,217,17)" rx="2" ry="2" />
<text  x="555.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="481.2" y="1733" width="0.2" height="15.0" fill="rgb(209,149,16)" rx="2" ry="2" />
<text  x="484.24" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="62.8" y="1877" width="0.4" height="15.0" fill="rgb(247,107,18)" rx="2" ry="2" />
<text  x="65.85" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="921.0" y="1989" width="0.4" height="15.0" fill="rgb(206,52,25)" rx="2" ry="2" />
<text  x="923.98" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (2 samples, 0.03%)</title><rect x="1021.9" y="2005" width="0.4" height="15.0" fill="rgb(240,142,20)" rx="2" ry="2" />
<text  x="1024.88" y="2015.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (2 samples, 0.03%)</title><rect x="1071.7" y="1845" width="0.4" height="15.0" fill="rgb(216,86,5)" rx="2" ry="2" />
<text  x="1074.74" y="1855.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="14.4" y="1989" width="1.0" height="15.0" fill="rgb(253,121,52)" rx="2" ry="2" />
<text  x="17.39" y="1999.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1116.0" y="1509" width="0.2" height="15.0" fill="rgb(248,104,22)" rx="2" ry="2" />
<text  x="1119.01" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="316.9" y="1973" width="0.4" height="15.0" fill="rgb(247,5,20)" rx="2" ry="2" />
<text  x="319.92" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (2 samples, 0.03%)</title><rect x="62.2" y="1941" width="0.4" height="15.0" fill="rgb(210,132,19)" rx="2" ry="2" />
<text  x="65.25" y="1951.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="366.2" y="1957" width="0.2" height="15.0" fill="rgb(225,84,18)" rx="2" ry="2" />
<text  x="369.17" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="77.6" y="1621" width="0.2" height="15.0" fill="rgb(230,131,23)" rx="2" ry="2" />
<text  x="80.61" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="873.7" y="1829" width="0.2" height="15.0" fill="rgb(214,50,51)" rx="2" ry="2" />
<text  x="876.71" y="1839.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="952.7" y="1621" width="0.2" height="15.0" fill="rgb(229,73,22)" rx="2" ry="2" />
<text  x="955.68" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="936.7" y="1765" width="0.2" height="15.0" fill="rgb(224,161,36)" rx="2" ry="2" />
<text  x="939.73" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (50 samples, 0.85%)</title><rect x="21.8" y="2005" width="9.9" height="15.0" fill="rgb(244,110,30)" rx="2" ry="2" />
<text  x="24.77" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="482.8" y="1701" width="0.2" height="15.0" fill="rgb(222,156,38)" rx="2" ry="2" />
<text  x="485.84" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="87.0" y="1909" width="0.2" height="15.0" fill="rgb(205,75,12)" rx="2" ry="2" />
<text  x="89.98" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (2 samples, 0.03%)</title><rect x="1168.3" y="2053" width="0.4" height="15.0" fill="rgb(242,134,21)" rx="2" ry="2" />
<text  x="1171.26" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="134.2" y="1925" width="0.2" height="15.0" fill="rgb(217,210,45)" rx="2" ry="2" />
<text  x="137.24" y="1935.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="527.9" y="1621" width="0.2" height="15.0" fill="rgb(235,143,15)" rx="2" ry="2" />
<text  x="530.91" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="240.9" y="1877" width="0.4" height="15.0" fill="rgb(237,78,24)" rx="2" ry="2" />
<text  x="243.93" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="651.4" y="2037" width="0.2" height="15.0" fill="rgb(228,81,34)" rx="2" ry="2" />
<text  x="654.35" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (8 samples, 0.14%)</title><rect x="956.7" y="2037" width="1.6" height="15.0" fill="rgb(236,175,16)" rx="2" ry="2" />
<text  x="959.67" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="725.9" y="1653" width="0.2" height="15.0" fill="rgb(251,61,19)" rx="2" ry="2" />
<text  x="728.94" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="957.3" y="2005" width="0.4" height="15.0" fill="rgb(227,33,47)" rx="2" ry="2" />
<text  x="960.27" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="687.2" y="1765" width="0.2" height="15.0" fill="rgb(223,16,19)" rx="2" ry="2" />
<text  x="690.25" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1168.7" y="2053" width="0.2" height="15.0" fill="rgb(250,64,16)" rx="2" ry="2" />
<text  x="1171.66" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="149.6" y="1909" width="0.2" height="15.0" fill="rgb(219,177,47)" rx="2" ry="2" />
<text  x="152.60" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="585.7" y="1829" width="0.2" height="15.0" fill="rgb(224,83,10)" rx="2" ry="2" />
<text  x="588.74" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="485.8" y="1829" width="0.2" height="15.0" fill="rgb(245,86,30)" rx="2" ry="2" />
<text  x="488.83" y="1839.5" ></text>
</g>
<g >
<title>ep_poll_callback (4 samples, 0.07%)</title><rect x="274.6" y="1429" width="0.8" height="15.0" fill="rgb(254,60,46)" rx="2" ry="2" />
<text  x="277.64" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="681.9" y="1813" width="0.2" height="15.0" fill="rgb(230,66,6)" rx="2" ry="2" />
<text  x="684.86" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::reply_type facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="102.3" y="37" width="0.2" height="15.0" fill="rgb(248,182,44)" rx="2" ry="2" />
<text  x="105.33" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="929.0" y="1941" width="0.2" height="15.0" fill="rgb(243,23,33)" rx="2" ry="2" />
<text  x="931.95" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="14.2" y="2021" width="1.2" height="15.0" fill="rgb(245,177,53)" rx="2" ry="2" />
<text  x="17.19" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (19 samples, 0.32%)</title><rect x="138.2" y="1909" width="3.8" height="15.0" fill="rgb(253,15,36)" rx="2" ry="2" />
<text  x="141.23" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="518.9" y="1957" width="0.6" height="15.0" fill="rgb(242,174,2)" rx="2" ry="2" />
<text  x="521.93" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1079.7" y="1781" width="0.2" height="15.0" fill="rgb(231,130,22)" rx="2" ry="2" />
<text  x="1082.72" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="255.1" y="1701" width="0.2" height="15.0" fill="rgb(250,215,20)" rx="2" ry="2" />
<text  x="258.09" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4 samples, 0.07%)</title><rect x="1177.2" y="1973" width="0.8" height="15.0" fill="rgb(250,88,41)" rx="2" ry="2" />
<text  x="1180.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (3 samples, 0.05%)</title><rect x="913.0" y="1973" width="0.6" height="15.0" fill="rgb(241,38,54)" rx="2" ry="2" />
<text  x="916.00" y="1983.5" ></text>
</g>
<g >
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="77.6" y="1557" width="0.2" height="15.0" fill="rgb(232,47,44)" rx="2" ry="2" />
<text  x="80.61" y="1567.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (3 samples, 0.05%)</title><rect x="385.7" y="1909" width="0.6" height="15.0" fill="rgb(207,200,52)" rx="2" ry="2" />
<text  x="388.72" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (84 samples, 1.42%)</title><rect x="492.4" y="2005" width="16.8" height="15.0" fill="rgb(242,188,19)" rx="2" ry="2" />
<text  x="495.41" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1121.8" y="1781" width="0.2" height="15.0" fill="rgb(233,54,12)" rx="2" ry="2" />
<text  x="1124.80" y="1791.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="160.2" y="1973" width="0.2" height="15.0" fill="rgb(221,101,38)" rx="2" ry="2" />
<text  x="163.17" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="61.5" y="1845" width="0.2" height="15.0" fill="rgb(205,6,41)" rx="2" ry="2" />
<text  x="64.45" y="1855.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="152.6" y="1717" width="0.2" height="15.0" fill="rgb(240,5,12)" rx="2" ry="2" />
<text  x="155.59" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1090.1" y="1909" width="0.2" height="15.0" fill="rgb(239,135,25)" rx="2" ry="2" />
<text  x="1093.09" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="861.3" y="1861" width="0.4" height="15.0" fill="rgb(225,17,27)" rx="2" ry="2" />
<text  x="864.35" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="29.3" y="1749" width="0.2" height="15.0" fill="rgb(227,113,45)" rx="2" ry="2" />
<text  x="32.34" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1105.0" y="1877" width="0.4" height="15.0" fill="rgb(222,88,25)" rx="2" ry="2" />
<text  x="1108.04" y="1887.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1178.2" y="1925" width="0.2" height="15.0" fill="rgb(224,151,41)" rx="2" ry="2" />
<text  x="1181.23" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="891.3" y="1909" width="0.6" height="15.0" fill="rgb(253,104,29)" rx="2" ry="2" />
<text  x="894.26" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="151.0" y="1989" width="0.4" height="15.0" fill="rgb(221,89,36)" rx="2" ry="2" />
<text  x="153.99" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="852.6" y="1909" width="0.2" height="15.0" fill="rgb(247,103,25)" rx="2" ry="2" />
<text  x="855.57" y="1919.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="457.7" y="1813" width="0.2" height="15.0" fill="rgb(251,88,1)" rx="2" ry="2" />
<text  x="460.71" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="113.1" y="1381" width="0.2" height="15.0" fill="rgb(220,51,26)" rx="2" ry="2" />
<text  x="116.10" y="1391.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="600.5" y="1829" width="0.2" height="15.0" fill="rgb(252,182,18)" rx="2" ry="2" />
<text  x="603.50" y="1839.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="380.9" y="1877" width="0.6" height="15.0" fill="rgb(244,8,54)" rx="2" ry="2" />
<text  x="383.93" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="111.3" y="149" width="0.2" height="15.0" fill="rgb(248,37,34)" rx="2" ry="2" />
<text  x="114.31" y="159.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="62.8" y="1861" width="0.4" height="15.0" fill="rgb(230,134,6)" rx="2" ry="2" />
<text  x="65.85" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="917" width="18.5" height="15.0" fill="rgb(210,162,41)" rx="2" ry="2" />
<text  x="96.36" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.07%)</title><rect x="180.7" y="2021" width="0.8" height="15.0" fill="rgb(241,7,28)" rx="2" ry="2" />
<text  x="183.71" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="111.9" y="1157" width="0.2" height="15.0" fill="rgb(225,116,31)" rx="2" ry="2" />
<text  x="114.91" y="1167.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="933.9" y="1893" width="0.8" height="15.0" fill="rgb(234,197,32)" rx="2" ry="2" />
<text  x="936.94" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1150.7" y="1637" width="0.2" height="15.0" fill="rgb(209,40,36)" rx="2" ry="2" />
<text  x="1153.71" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="859.2" y="1893" width="0.2" height="15.0" fill="rgb(250,82,31)" rx="2" ry="2" />
<text  x="862.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="453" width="18.5" height="15.0" fill="rgb(252,63,51)" rx="2" ry="2" />
<text  x="96.36" y="463.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (6 samples, 0.10%)</title><rect x="788.8" y="1541" width="1.2" height="15.0" fill="rgb(239,202,28)" rx="2" ry="2" />
<text  x="791.76" y="1551.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="899.6" y="2005" width="0.4" height="15.0" fill="rgb(251,13,53)" rx="2" ry="2" />
<text  x="902.64" y="2015.5" ></text>
</g>
<g >
<title>inet_recvmsg (326 samples, 5.51%)</title><rect x="1054.2" y="1957" width="65.0" height="15.0" fill="rgb(247,55,27)" rx="2" ry="2" />
<text  x="1057.19" y="1967.5" >inet_re..</text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="615.7" y="1941" width="0.8" height="15.0" fill="rgb(206,182,24)" rx="2" ry="2" />
<text  x="618.65" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="535.9" y="1925" width="0.2" height="15.0" fill="rgb(233,106,24)" rx="2" ry="2" />
<text  x="538.88" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="835.0" y="1685" width="0.2" height="15.0" fill="rgb(237,16,43)" rx="2" ry="2" />
<text  x="838.02" y="1695.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="775.6" y="1669" width="0.2" height="15.0" fill="rgb(235,206,25)" rx="2" ry="2" />
<text  x="778.59" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="93.8" y="37" width="0.2" height="15.0" fill="rgb(210,220,39)" rx="2" ry="2" />
<text  x="96.76" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="599.5" y="1701" width="0.2" height="15.0" fill="rgb(216,184,14)" rx="2" ry="2" />
<text  x="602.50" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="537.3" y="1877" width="0.2" height="15.0" fill="rgb(230,28,5)" rx="2" ry="2" />
<text  x="540.28" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="855.2" y="1749" width="0.2" height="15.0" fill="rgb(247,99,7)" rx="2" ry="2" />
<text  x="858.16" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="54.3" y="1685" width="0.2" height="15.0" fill="rgb(251,117,37)" rx="2" ry="2" />
<text  x="57.27" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(208,185,40)" rx="2" ry="2" />
<text  x="14.20" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="65.4" y="1893" width="0.2" height="15.0" fill="rgb(252,172,24)" rx="2" ry="2" />
<text  x="68.44" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="121.3" y="1973" width="0.2" height="15.0" fill="rgb(227,150,29)" rx="2" ry="2" />
<text  x="124.28" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="810.5" y="1525" width="0.2" height="15.0" fill="rgb(254,200,2)" rx="2" ry="2" />
<text  x="813.49" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="97.5" y="37" width="2.0" height="15.0" fill="rgb(253,65,32)" rx="2" ry="2" />
<text  x="100.55" y="47.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="293.8" y="1813" width="0.2" height="15.0" fill="rgb(239,71,3)" rx="2" ry="2" />
<text  x="296.78" y="1823.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="461.7" y="1893" width="0.2" height="15.0" fill="rgb(208,184,3)" rx="2" ry="2" />
<text  x="464.70" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="502.6" y="1749" width="0.2" height="15.0" fill="rgb(224,127,9)" rx="2" ry="2" />
<text  x="505.58" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="837" width="18.5" height="15.0" fill="rgb(235,196,1)" rx="2" ry="2" />
<text  x="96.36" y="847.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="859.2" y="1605" width="0.2" height="15.0" fill="rgb(209,29,12)" rx="2" ry="2" />
<text  x="862.15" y="1615.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="1049.4" y="1957" width="0.2" height="15.0" fill="rgb(243,23,48)" rx="2" ry="2" />
<text  x="1052.41" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (6 samples, 0.10%)</title><rect x="162.4" y="2021" width="1.2" height="15.0" fill="rgb(230,92,39)" rx="2" ry="2" />
<text  x="165.36" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="484.6" y="1973" width="0.2" height="15.0" fill="rgb(205,90,35)" rx="2" ry="2" />
<text  x="487.63" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="855.0" y="1861" width="0.6" height="15.0" fill="rgb(225,116,20)" rx="2" ry="2" />
<text  x="857.97" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="818.1" y="1605" width="0.2" height="15.0" fill="rgb(208,214,26)" rx="2" ry="2" />
<text  x="821.07" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="537.3" y="1797" width="0.2" height="15.0" fill="rgb(250,150,38)" rx="2" ry="2" />
<text  x="540.28" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (77 samples, 1.30%)</title><rect x="276.0" y="1717" width="15.4" height="15.0" fill="rgb(221,18,48)" rx="2" ry="2" />
<text  x="279.03" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="936.7" y="1813" width="0.2" height="15.0" fill="rgb(252,151,53)" rx="2" ry="2" />
<text  x="939.73" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="450.7" y="1861" width="0.2" height="15.0" fill="rgb(226,116,14)" rx="2" ry="2" />
<text  x="453.73" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="212.2" y="1733" width="0.2" height="15.0" fill="rgb(225,27,13)" rx="2" ry="2" />
<text  x="215.22" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="71.0" y="1845" width="0.2" height="15.0" fill="rgb(210,95,54)" rx="2" ry="2" />
<text  x="74.02" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="529.5" y="1877" width="0.4" height="15.0" fill="rgb(213,105,4)" rx="2" ry="2" />
<text  x="532.50" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="639.8" y="1925" width="0.2" height="15.0" fill="rgb(242,216,40)" rx="2" ry="2" />
<text  x="642.79" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="861.9" y="1845" width="0.2" height="15.0" fill="rgb(220,166,15)" rx="2" ry="2" />
<text  x="864.95" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1135.4" y="1973" width="0.2" height="15.0" fill="rgb(243,212,50)" rx="2" ry="2" />
<text  x="1138.36" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="861.9" y="1733" width="0.2" height="15.0" fill="rgb(248,101,35)" rx="2" ry="2" />
<text  x="864.95" y="1743.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="376.7" y="1845" width="0.2" height="15.0" fill="rgb(215,135,30)" rx="2" ry="2" />
<text  x="379.74" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1109" width="18.7" height="15.0" fill="rgb(239,145,17)" rx="2" ry="2" />
<text  x="96.16" y="1119.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1079.5" y="1605" width="0.2" height="15.0" fill="rgb(225,144,33)" rx="2" ry="2" />
<text  x="1082.52" y="1615.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="748.1" y="1509" width="0.2" height="15.0" fill="rgb(230,148,44)" rx="2" ry="2" />
<text  x="751.07" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="673.5" y="1925" width="0.2" height="15.0" fill="rgb(214,61,28)" rx="2" ry="2" />
<text  x="676.49" y="1935.5" ></text>
</g>
<g >
<title>tcp_established_options (8 samples, 0.14%)</title><rect x="835.2" y="1701" width="1.6" height="15.0" fill="rgb(229,65,17)" rx="2" ry="2" />
<text  x="838.22" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="484.6" y="1829" width="0.2" height="15.0" fill="rgb(221,7,12)" rx="2" ry="2" />
<text  x="487.63" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="859.2" y="1781" width="0.2" height="15.0" fill="rgb(244,78,27)" rx="2" ry="2" />
<text  x="862.15" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="773" width="18.5" height="15.0" fill="rgb(233,208,53)" rx="2" ry="2" />
<text  x="96.36" y="783.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="485.8" y="1909" width="0.4" height="15.0" fill="rgb(210,196,10)" rx="2" ry="2" />
<text  x="488.83" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="111.1" y="85" width="0.2" height="15.0" fill="rgb(246,176,14)" rx="2" ry="2" />
<text  x="114.11" y="95.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="208.0" y="1861" width="0.2" height="15.0" fill="rgb(236,79,40)" rx="2" ry="2" />
<text  x="211.03" y="1871.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="169.3" y="1941" width="0.4" height="15.0" fill="rgb(250,9,10)" rx="2" ry="2" />
<text  x="172.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1079.7" y="1573" width="0.2" height="15.0" fill="rgb(216,145,16)" rx="2" ry="2" />
<text  x="1082.72" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="485.8" y="1877" width="0.4" height="15.0" fill="rgb(240,170,22)" rx="2" ry="2" />
<text  x="488.83" y="1887.5" ></text>
</g>
<g >
<title>sys_setsockopt (49 samples, 0.83%)</title><rect x="682.3" y="1941" width="9.7" height="15.0" fill="rgb(254,78,16)" rx="2" ry="2" />
<text  x="685.26" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="77.6" y="1701" width="0.2" height="15.0" fill="rgb(212,143,31)" rx="2" ry="2" />
<text  x="80.61" y="1711.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="733.5" y="1701" width="0.2" height="15.0" fill="rgb(254,211,11)" rx="2" ry="2" />
<text  x="736.52" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="134.8" y="1925" width="0.2" height="15.0" fill="rgb(209,72,33)" rx="2" ry="2" />
<text  x="137.84" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="156.6" y="1989" width="0.2" height="15.0" fill="rgb(213,183,52)" rx="2" ry="2" />
<text  x="159.58" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="948.7" y="1957" width="0.2" height="15.0" fill="rgb(212,30,49)" rx="2" ry="2" />
<text  x="951.70" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="760.0" y="1717" width="0.2" height="15.0" fill="rgb(226,49,52)" rx="2" ry="2" />
<text  x="763.04" y="1727.5" ></text>
</g>
<g >
<title>__sock_release (444 samples, 7.50%)</title><rect x="751.9" y="1781" width="88.5" height="15.0" fill="rgb(210,209,25)" rx="2" ry="2" />
<text  x="754.86" y="1791.5" >__sock_rel..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.07%)</title><rect x="616.5" y="2005" width="0.8" height="15.0" fill="rgb(238,103,41)" rx="2" ry="2" />
<text  x="619.45" y="2015.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="428.6" y="1989" width="0.4" height="15.0" fill="rgb(238,16,36)" rx="2" ry="2" />
<text  x="431.59" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.14%)</title><rect x="642.8" y="1989" width="1.6" height="15.0" fill="rgb(222,228,13)" rx="2" ry="2" />
<text  x="645.78" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1173" width="18.7" height="15.0" fill="rgb(252,25,44)" rx="2" ry="2" />
<text  x="96.16" y="1183.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.08%)</title><rect x="269.7" y="1749" width="0.9" height="15.0" fill="rgb(248,152,21)" rx="2" ry="2" />
<text  x="272.65" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="54.3" y="1797" width="0.2" height="15.0" fill="rgb(220,15,7)" rx="2" ry="2" />
<text  x="57.27" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="870.3" y="1989" width="1.0" height="15.0" fill="rgb(240,61,14)" rx="2" ry="2" />
<text  x="873.32" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="77.6" y="1653" width="0.2" height="15.0" fill="rgb(238,152,47)" rx="2" ry="2" />
<text  x="80.61" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="252.5" y="1653" width="0.2" height="15.0" fill="rgb(220,92,9)" rx="2" ry="2" />
<text  x="255.50" y="1663.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="835.0" y="1269" width="0.2" height="15.0" fill="rgb(218,191,26)" rx="2" ry="2" />
<text  x="838.02" y="1279.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="152.6" y="1813" width="0.2" height="15.0" fill="rgb(244,67,16)" rx="2" ry="2" />
<text  x="155.59" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1022.3" y="2037" width="0.2" height="15.0" fill="rgb(238,156,24)" rx="2" ry="2" />
<text  x="1025.28" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="554.6" y="1973" width="0.2" height="15.0" fill="rgb(237,152,15)" rx="2" ry="2" />
<text  x="557.63" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19 samples, 0.32%)</title><rect x="367.8" y="1925" width="3.8" height="15.0" fill="rgb(245,102,49)" rx="2" ry="2" />
<text  x="370.77" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (30 samples, 0.51%)</title><rect x="44.1" y="1973" width="6.0" height="15.0" fill="rgb(209,142,29)" rx="2" ry="2" />
<text  x="47.10" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="924.8" y="1845" width="0.2" height="15.0" fill="rgb(246,217,37)" rx="2" ry="2" />
<text  x="927.76" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="997.8" y="1541" width="0.2" height="15.0" fill="rgb(249,196,35)" rx="2" ry="2" />
<text  x="1000.75" y="1551.5" ></text>
</g>
<g >
<title>tcp_setsockopt (31 samples, 0.52%)</title><rect x="683.7" y="1909" width="6.1" height="15.0" fill="rgb(233,6,38)" rx="2" ry="2" />
<text  x="686.66" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1079.7" y="1637" width="0.2" height="15.0" fill="rgb(241,182,54)" rx="2" ry="2" />
<text  x="1082.72" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="81.8" y="1845" width="0.2" height="15.0" fill="rgb(222,150,9)" rx="2" ry="2" />
<text  x="84.79" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.63%)</title><rect x="661.9" y="1925" width="7.4" height="15.0" fill="rgb(218,219,5)" rx="2" ry="2" />
<text  x="664.92" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="341.0" y="1733" width="0.4" height="15.0" fill="rgb(228,138,12)" rx="2" ry="2" />
<text  x="344.05" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1087.9" y="1925" width="0.4" height="15.0" fill="rgb(226,224,30)" rx="2" ry="2" />
<text  x="1090.89" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1049.6" y="1893" width="0.2" height="15.0" fill="rgb(235,9,48)" rx="2" ry="2" />
<text  x="1052.60" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (2 samples, 0.03%)</title><rect x="902.2" y="2005" width="0.4" height="15.0" fill="rgb(221,41,34)" rx="2" ry="2" />
<text  x="905.23" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="996.8" y="1973" width="0.2" height="15.0" fill="rgb(217,27,39)" rx="2" ry="2" />
<text  x="999.76" y="1983.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="809.1" y="1493" width="0.4" height="15.0" fill="rgb(215,182,51)" rx="2" ry="2" />
<text  x="812.10" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.0" y="1669" width="0.2" height="15.0" fill="rgb(211,64,53)" rx="2" ry="2" />
<text  x="844.01" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="653.5" y="1973" width="0.2" height="15.0" fill="rgb(208,219,35)" rx="2" ry="2" />
<text  x="656.55" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="565.2" y="1749" width="0.4" height="15.0" fill="rgb(244,3,46)" rx="2" ry="2" />
<text  x="568.20" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="457.7" y="1861" width="0.2" height="15.0" fill="rgb(235,182,14)" rx="2" ry="2" />
<text  x="460.71" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1135.4" y="1957" width="0.2" height="15.0" fill="rgb(215,7,13)" rx="2" ry="2" />
<text  x="1138.36" y="1967.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1180.0" y="1989" width="0.2" height="15.0" fill="rgb(253,199,7)" rx="2" ry="2" />
<text  x="1183.03" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="669.5" y="1573" width="0.2" height="15.0" fill="rgb(213,109,5)" rx="2" ry="2" />
<text  x="672.50" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="111.7" y="165" width="0.2" height="15.0" fill="rgb(235,204,23)" rx="2" ry="2" />
<text  x="114.71" y="175.5" ></text>
</g>
<g >
<title>netdev_pick_tx (6 samples, 0.10%)</title><rect x="278.4" y="1701" width="1.2" height="15.0" fill="rgb(237,159,15)" rx="2" ry="2" />
<text  x="281.43" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="725.9" y="1605" width="0.2" height="15.0" fill="rgb(243,106,28)" rx="2" ry="2" />
<text  x="728.94" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.08%)</title><rect x="274.4" y="1445" width="1.0" height="15.0" fill="rgb(221,56,12)" rx="2" ry="2" />
<text  x="277.44" y="1455.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="87.0" y="1877" width="0.2" height="15.0" fill="rgb(210,76,11)" rx="2" ry="2" />
<text  x="89.98" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="54.3" y="1717" width="0.2" height="15.0" fill="rgb(220,67,36)" rx="2" ry="2" />
<text  x="57.27" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="104.1" y="53" width="3.0" height="15.0" fill="rgb(244,74,51)" rx="2" ry="2" />
<text  x="107.13" y="63.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="118.9" y="2005" width="0.2" height="15.0" fill="rgb(243,205,46)" rx="2" ry="2" />
<text  x="121.89" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="952.7" y="1877" width="0.2" height="15.0" fill="rgb(218,97,36)" rx="2" ry="2" />
<text  x="955.68" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (776 samples, 13.11%)</title><rect x="710.2" y="1957" width="154.7" height="15.0" fill="rgb(208,207,38)" rx="2" ry="2" />
<text  x="713.18" y="1967.5" >folly::AsyncSocket:..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="74.2" y="1733" width="0.2" height="15.0" fill="rgb(245,92,37)" rx="2" ry="2" />
<text  x="77.21" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="636.6" y="1909" width="0.2" height="15.0" fill="rgb(254,6,39)" rx="2" ry="2" />
<text  x="639.59" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="957.9" y="1989" width="0.4" height="15.0" fill="rgb(254,17,53)" rx="2" ry="2" />
<text  x="960.87" y="1999.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (42 samples, 0.71%)</title><rect x="799.5" y="1541" width="8.4" height="15.0" fill="rgb(232,129,37)" rx="2" ry="2" />
<text  x="802.53" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1049.6" y="1781" width="0.2" height="15.0" fill="rgb(240,68,40)" rx="2" ry="2" />
<text  x="1052.60" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (100 samples, 1.69%)</title><rect x="93.2" y="1381" width="19.9" height="15.0" fill="rgb(214,100,4)" rx="2" ry="2" />
<text  x="96.16" y="1391.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="861.9" y="1701" width="0.2" height="15.0" fill="rgb(213,164,27)" rx="2" ry="2" />
<text  x="864.95" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="988.2" y="1909" width="0.4" height="15.0" fill="rgb(250,186,15)" rx="2" ry="2" />
<text  x="991.18" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (3 samples, 0.05%)</title><rect x="882.9" y="1941" width="0.6" height="15.0" fill="rgb(208,65,53)" rx="2" ry="2" />
<text  x="885.88" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="855.6" y="1861" width="0.2" height="15.0" fill="rgb(233,186,26)" rx="2" ry="2" />
<text  x="858.56" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="546.1" y="1893" width="0.6" height="15.0" fill="rgb(224,18,49)" rx="2" ry="2" />
<text  x="549.06" y="1903.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="303.2" y="1797" width="0.2" height="15.0" fill="rgb(206,209,41)" rx="2" ry="2" />
<text  x="306.16" y="1807.5" ></text>
</g>
<g >
<title>locks_remove_posix (3 samples, 0.05%)</title><rect x="844.6" y="1813" width="0.6" height="15.0" fill="rgb(252,62,39)" rx="2" ry="2" />
<text  x="847.60" y="1823.5" ></text>
</g>
<g >
<title>tcp_current_mss (18 samples, 0.30%)</title><rect x="308.3" y="1861" width="3.6" height="15.0" fill="rgb(207,226,45)" rx="2" ry="2" />
<text  x="311.34" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1178.8" y="1973" width="0.2" height="15.0" fill="rgb(226,8,10)" rx="2" ry="2" />
<text  x="1181.83" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="77.6" y="1765" width="0.2" height="15.0" fill="rgb(250,141,44)" rx="2" ry="2" />
<text  x="80.61" y="1775.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (4 samples, 0.07%)</title><rect x="69.8" y="1925" width="0.8" height="15.0" fill="rgb(253,48,35)" rx="2" ry="2" />
<text  x="72.83" y="1935.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (2 samples, 0.03%)</title><rect x="738.7" y="1621" width="0.4" height="15.0" fill="rgb(222,201,53)" rx="2" ry="2" />
<text  x="741.70" y="1631.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="381.9" y="1925" width="0.2" height="15.0" fill="rgb(207,135,49)" rx="2" ry="2" />
<text  x="384.93" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1189.4" y="1909" width="0.2" height="15.0" fill="rgb(208,27,13)" rx="2" ry="2" />
<text  x="1192.40" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1090.7" y="1749" width="0.2" height="15.0" fill="rgb(222,36,51)" rx="2" ry="2" />
<text  x="1093.69" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="536.7" y="1941" width="0.6" height="15.0" fill="rgb(206,53,26)" rx="2" ry="2" />
<text  x="539.68" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="357.0" y="1845" width="0.2" height="15.0" fill="rgb(215,54,49)" rx="2" ry="2" />
<text  x="360.00" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="111.5" y="341" width="0.2" height="15.0" fill="rgb(239,208,33)" rx="2" ry="2" />
<text  x="114.51" y="351.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="769.0" y="1701" width="0.2" height="15.0" fill="rgb(242,116,3)" rx="2" ry="2" />
<text  x="772.01" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="60.7" y="1845" width="0.2" height="15.0" fill="rgb(237,15,45)" rx="2" ry="2" />
<text  x="63.65" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (20 samples, 0.34%)</title><rect x="647.2" y="2005" width="4.0" height="15.0" fill="rgb(248,71,5)" rx="2" ry="2" />
<text  x="650.16" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="519.5" y="1957" width="0.2" height="15.0" fill="rgb(243,84,51)" rx="2" ry="2" />
<text  x="522.53" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="952.7" y="1589" width="0.2" height="15.0" fill="rgb(232,6,53)" rx="2" ry="2" />
<text  x="955.68" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="241.9" y="1749" width="0.2" height="15.0" fill="rgb(245,49,23)" rx="2" ry="2" />
<text  x="244.93" y="1759.5" ></text>
</g>
<g >
<title>__alloc_fd (5 samples, 0.08%)</title><rect x="339.3" y="1941" width="0.9" height="15.0" fill="rgb(211,162,25)" rx="2" ry="2" />
<text  x="342.25" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="858.6" y="1909" width="0.2" height="15.0" fill="rgb(215,110,48)" rx="2" ry="2" />
<text  x="861.56" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="972.4" y="1813" width="0.2" height="15.0" fill="rgb(236,78,3)" rx="2" ry="2" />
<text  x="975.43" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="140.8" y="1877" width="0.4" height="15.0" fill="rgb(229,68,36)" rx="2" ry="2" />
<text  x="143.82" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="273.8" y="1589" width="0.2" height="15.0" fill="rgb(221,127,46)" rx="2" ry="2" />
<text  x="276.84" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="669.3" y="1717" width="0.6" height="15.0" fill="rgb(243,25,39)" rx="2" ry="2" />
<text  x="672.30" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="114.5" y="1637" width="0.2" height="15.0" fill="rgb(207,47,20)" rx="2" ry="2" />
<text  x="117.50" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="909.4" y="1941" width="0.6" height="15.0" fill="rgb(252,192,16)" rx="2" ry="2" />
<text  x="912.41" y="1951.5" ></text>
</g>
<g >
<title>__close_fd (17 samples, 0.29%)</title><rect x="841.8" y="1845" width="3.4" height="15.0" fill="rgb(207,34,52)" rx="2" ry="2" />
<text  x="844.80" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="482.8" y="1893" width="0.2" height="15.0" fill="rgb(225,166,41)" rx="2" ry="2" />
<text  x="485.84" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="1108.6" y="1477" width="1.0" height="15.0" fill="rgb(240,52,43)" rx="2" ry="2" />
<text  x="1111.63" y="1487.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="357.0" y="1781" width="0.2" height="15.0" fill="rgb(214,222,14)" rx="2" ry="2" />
<text  x="360.00" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="787.8" y="1557" width="0.2" height="15.0" fill="rgb(221,108,49)" rx="2" ry="2" />
<text  x="790.76" y="1567.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="688.4" y="1877" width="1.4" height="15.0" fill="rgb(242,1,1)" rx="2" ry="2" />
<text  x="691.45" y="1887.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1106.0" y="1797" width="0.2" height="15.0" fill="rgb(248,182,25)" rx="2" ry="2" />
<text  x="1109.04" y="1807.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="673.5" y="1749" width="0.2" height="15.0" fill="rgb(229,122,51)" rx="2" ry="2" />
<text  x="676.49" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="924.8" y="1957" width="0.2" height="15.0" fill="rgb(235,82,16)" rx="2" ry="2" />
<text  x="927.76" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="765.6" y="1653" width="0.2" height="15.0" fill="rgb(230,127,11)" rx="2" ry="2" />
<text  x="768.62" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="540.5" y="1845" width="0.2" height="15.0" fill="rgb(217,24,28)" rx="2" ry="2" />
<text  x="543.47" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1128.0" y="1797" width="0.2" height="15.0" fill="rgb(232,183,35)" rx="2" ry="2" />
<text  x="1130.98" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="241.9" y="1765" width="0.2" height="15.0" fill="rgb(228,77,2)" rx="2" ry="2" />
<text  x="244.93" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="766.2" y="1541" width="0.2" height="15.0" fill="rgb(235,118,54)" rx="2" ry="2" />
<text  x="769.22" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1135.4" y="1637" width="0.2" height="15.0" fill="rgb(254,155,35)" rx="2" ry="2" />
<text  x="1138.36" y="1647.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29 samples, 0.49%)</title><rect x="486.2" y="2021" width="5.8" height="15.0" fill="rgb(217,149,34)" rx="2" ry="2" />
<text  x="489.23" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="29.3" y="1813" width="0.2" height="15.0" fill="rgb(242,216,20)" rx="2" ry="2" />
<text  x="32.34" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="379.7" y="1813" width="0.2" height="15.0" fill="rgb(210,141,35)" rx="2" ry="2" />
<text  x="382.73" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="211.0" y="1797" width="0.4" height="15.0" fill="rgb(244,159,5)" rx="2" ry="2" />
<text  x="214.02" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="457.9" y="1893" width="0.8" height="15.0" fill="rgb(215,155,51)" rx="2" ry="2" />
<text  x="460.91" y="1903.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="675.1" y="1925" width="0.8" height="15.0" fill="rgb(249,180,40)" rx="2" ry="2" />
<text  x="678.08" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="110.9" y="197" width="0.2" height="15.0" fill="rgb(229,75,3)" rx="2" ry="2" />
<text  x="113.91" y="207.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="71.0" y="1925" width="0.2" height="15.0" fill="rgb(238,98,32)" rx="2" ry="2" />
<text  x="74.02" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1025.7" y="2021" width="0.2" height="15.0" fill="rgb(228,15,41)" rx="2" ry="2" />
<text  x="1028.67" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (10 samples, 0.17%)</title><rect x="897.0" y="1989" width="2.0" height="15.0" fill="rgb(216,147,46)" rx="2" ry="2" />
<text  x="900.04" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="570.8" y="1957" width="0.2" height="15.0" fill="rgb(220,42,23)" rx="2" ry="2" />
<text  x="573.78" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="618.2" y="1957" width="0.2" height="15.0" fill="rgb(232,214,10)" rx="2" ry="2" />
<text  x="621.25" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.7" y="1797" width="0.2" height="15.0" fill="rgb(222,192,18)" rx="2" ry="2" />
<text  x="118.70" y="1807.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="275.4" y="1557" width="0.2" height="15.0" fill="rgb(243,123,16)" rx="2" ry="2" />
<text  x="278.44" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="111.1" y="165" width="0.2" height="15.0" fill="rgb(215,85,52)" rx="2" ry="2" />
<text  x="114.11" y="175.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="571.8" y="1973" width="0.2" height="15.0" fill="rgb(205,174,50)" rx="2" ry="2" />
<text  x="574.78" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="673.5" y="1781" width="0.2" height="15.0" fill="rgb(224,47,26)" rx="2" ry="2" />
<text  x="676.49" y="1791.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="940.3" y="1941" width="0.2" height="15.0" fill="rgb(252,102,1)" rx="2" ry="2" />
<text  x="943.32" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="673.5" y="1733" width="0.2" height="15.0" fill="rgb(233,146,33)" rx="2" ry="2" />
<text  x="676.49" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="766.2" y="1429" width="0.2" height="15.0" fill="rgb(218,217,51)" rx="2" ry="2" />
<text  x="769.22" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="93.2" y="1221" width="18.9" height="15.0" fill="rgb(227,177,27)" rx="2" ry="2" />
<text  x="96.16" y="1231.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="810.5" y="1541" width="0.2" height="15.0" fill="rgb(252,31,43)" rx="2" ry="2" />
<text  x="813.49" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.6" y="1973" width="0.2" height="15.0" fill="rgb(221,69,42)" rx="2" ry="2" />
<text  x="911.61" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (121 samples, 2.04%)</title><rect x="93.0" y="1989" width="24.1" height="15.0" fill="rgb(221,229,0)" rx="2" ry="2" />
<text  x="95.96" y="1999.5" >[..</text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1168.1" y="2053" width="0.2" height="15.0" fill="rgb(206,148,1)" rx="2" ry="2" />
<text  x="1171.06" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1163.9" y="1925" width="0.2" height="15.0" fill="rgb(213,99,40)" rx="2" ry="2" />
<text  x="1166.88" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="900.8" y="2005" width="0.2" height="15.0" fill="rgb(211,177,3)" rx="2" ry="2" />
<text  x="903.83" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (37 samples, 0.63%)</title><rect x="607.9" y="1973" width="7.4" height="15.0" fill="rgb(222,76,1)" rx="2" ry="2" />
<text  x="610.88" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="622.0" y="2005" width="0.2" height="15.0" fill="rgb(231,68,10)" rx="2" ry="2" />
<text  x="625.04" y="2015.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="21.4" y="2005" width="0.2" height="15.0" fill="rgb(240,160,8)" rx="2" ry="2" />
<text  x="24.37" y="2015.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="1150.7" y="1413" width="0.2" height="15.0" fill="rgb(232,145,50)" rx="2" ry="2" />
<text  x="1153.71" y="1423.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1135.4" y="2005" width="0.2" height="15.0" fill="rgb(238,193,45)" rx="2" ry="2" />
<text  x="1138.36" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="630.8" y="1973" width="0.2" height="15.0" fill="rgb(210,103,16)" rx="2" ry="2" />
<text  x="633.81" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (69 samples, 1.17%)</title><rect x="134.4" y="1941" width="13.8" height="15.0" fill="rgb(222,192,0)" rx="2" ry="2" />
<text  x="137.44" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="988.2" y="1653" width="0.2" height="15.0" fill="rgb(252,82,26)" rx="2" ry="2" />
<text  x="991.18" y="1663.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (15 samples, 0.25%)</title><rect x="966.4" y="2037" width="3.0" height="15.0" fill="rgb(213,164,40)" rx="2" ry="2" />
<text  x="969.44" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="217.8" y="1925" width="0.2" height="15.0" fill="rgb(232,104,40)" rx="2" ry="2" />
<text  x="220.80" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (5 samples, 0.08%)</title><rect x="77.2" y="1925" width="1.0" height="15.0" fill="rgb(235,136,41)" rx="2" ry="2" />
<text  x="80.21" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="599.5" y="1669" width="0.2" height="15.0" fill="rgb(246,132,27)" rx="2" ry="2" />
<text  x="602.50" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="859.2" y="1813" width="0.2" height="15.0" fill="rgb(246,201,39)" rx="2" ry="2" />
<text  x="862.15" y="1823.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="683.3" y="1909" width="0.4" height="15.0" fill="rgb(241,121,9)" rx="2" ry="2" />
<text  x="686.26" y="1919.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1105.0" y="1621" width="0.2" height="15.0" fill="rgb(206,80,39)" rx="2" ry="2" />
<text  x="1108.04" y="1631.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (8 samples, 0.14%)</title><rect x="251.1" y="1845" width="1.6" height="15.0" fill="rgb(250,107,44)" rx="2" ry="2" />
<text  x="254.11" y="1855.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="107.5" y="69" width="0.2" height="15.0" fill="rgb(241,93,43)" rx="2" ry="2" />
<text  x="110.52" y="79.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="399.7" y="1829" width="0.2" height="15.0" fill="rgb(231,28,1)" rx="2" ry="2" />
<text  x="402.68" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="818.1" y="1557" width="0.2" height="15.0" fill="rgb(247,117,10)" rx="2" ry="2" />
<text  x="821.07" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="154.8" y="1925" width="0.2" height="15.0" fill="rgb(240,120,45)" rx="2" ry="2" />
<text  x="157.78" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="630.6" y="1941" width="0.2" height="15.0" fill="rgb(245,101,28)" rx="2" ry="2" />
<text  x="633.61" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="914.0" y="1973" width="0.2" height="15.0" fill="rgb(249,103,20)" rx="2" ry="2" />
<text  x="917.00" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="747.5" y="1733" width="0.2" height="15.0" fill="rgb(228,45,40)" rx="2" ry="2" />
<text  x="750.48" y="1743.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="232.4" y="1973" width="0.2" height="15.0" fill="rgb(251,195,2)" rx="2" ry="2" />
<text  x="235.36" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="952.7" y="1925" width="0.2" height="15.0" fill="rgb(209,91,37)" rx="2" ry="2" />
<text  x="955.68" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1128.0" y="1541" width="0.2" height="15.0" fill="rgb(208,151,3)" rx="2" ry="2" />
<text  x="1130.98" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="255.1" y="1749" width="0.2" height="15.0" fill="rgb(233,12,34)" rx="2" ry="2" />
<text  x="258.09" y="1759.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1115.4" y="1509" width="0.2" height="15.0" fill="rgb(247,176,4)" rx="2" ry="2" />
<text  x="1118.41" y="1519.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="669.5" y="1493" width="0.2" height="15.0" fill="rgb(237,49,6)" rx="2" ry="2" />
<text  x="672.50" y="1503.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="985.4" y="1893" width="0.2" height="15.0" fill="rgb(220,104,24)" rx="2" ry="2" />
<text  x="988.39" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="60.7" y="1829" width="0.2" height="15.0" fill="rgb(247,41,22)" rx="2" ry="2" />
<text  x="63.65" y="1839.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="381.5" y="1877" width="0.2" height="15.0" fill="rgb(252,107,10)" rx="2" ry="2" />
<text  x="384.53" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1121.8" y="1893" width="0.2" height="15.0" fill="rgb(252,94,6)" rx="2" ry="2" />
<text  x="1124.80" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="859.2" y="1637" width="0.2" height="15.0" fill="rgb(227,55,46)" rx="2" ry="2" />
<text  x="862.15" y="1647.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="997.8" y="1573" width="0.2" height="15.0" fill="rgb(217,135,34)" rx="2" ry="2" />
<text  x="1000.75" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="358.0" y="1909" width="0.4" height="15.0" fill="rgb(253,133,40)" rx="2" ry="2" />
<text  x="361.00" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="936.7" y="1749" width="0.2" height="15.0" fill="rgb(223,92,15)" rx="2" ry="2" />
<text  x="939.73" y="1759.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1178.0" y="1941" width="0.4" height="15.0" fill="rgb(240,192,11)" rx="2" ry="2" />
<text  x="1181.03" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="502.4" y="1877" width="0.4" height="15.0" fill="rgb(224,4,45)" rx="2" ry="2" />
<text  x="505.38" y="1887.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (13 samples, 0.22%)</title><rect x="273.4" y="1717" width="2.6" height="15.0" fill="rgb(219,180,11)" rx="2" ry="2" />
<text  x="276.44" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="469.5" y="1893" width="0.2" height="15.0" fill="rgb(208,98,2)" rx="2" ry="2" />
<text  x="472.48" y="1903.5" ></text>
</g>
<g >
<title>_IO_old_init (2 samples, 0.03%)</title><rect x="182.1" y="2037" width="0.4" height="15.0" fill="rgb(228,80,11)" rx="2" ry="2" />
<text  x="185.10" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="622.6" y="2005" width="0.2" height="15.0" fill="rgb(216,163,11)" rx="2" ry="2" />
<text  x="625.63" y="2015.5" ></text>
</g>
<g >
<title>event_base_set@plt (1 samples, 0.02%)</title><rect x="209.4" y="1877" width="0.2" height="15.0" fill="rgb(228,31,6)" rx="2" ry="2" />
<text  x="212.43" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="527.9" y="1829" width="0.2" height="15.0" fill="rgb(211,154,30)" rx="2" ry="2" />
<text  x="530.91" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (3 samples, 0.05%)</title><rect x="66.4" y="1957" width="0.6" height="15.0" fill="rgb(215,59,45)" rx="2" ry="2" />
<text  x="69.44" y="1967.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.08%)</title><rect x="179.7" y="2021" width="1.0" height="15.0" fill="rgb(225,42,2)" rx="2" ry="2" />
<text  x="182.71" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="562.4" y="1909" width="0.2" height="15.0" fill="rgb(223,206,27)" rx="2" ry="2" />
<text  x="565.41" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="469.5" y="1717" width="0.2" height="15.0" fill="rgb(223,50,33)" rx="2" ry="2" />
<text  x="472.48" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="111.3" y="229" width="0.2" height="15.0" fill="rgb(205,26,39)" rx="2" ry="2" />
<text  x="114.31" y="239.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="94.0" y="37" width="0.2" height="15.0" fill="rgb(228,25,0)" rx="2" ry="2" />
<text  x="96.96" y="47.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1178.2" y="1909" width="0.2" height="15.0" fill="rgb(216,212,21)" rx="2" ry="2" />
<text  x="1181.23" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="14.4" y="1845" width="0.8" height="15.0" fill="rgb(250,181,43)" rx="2" ry="2" />
<text  x="17.39" y="1855.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="429.6" y="1989" width="0.2" height="15.0" fill="rgb(225,55,37)" rx="2" ry="2" />
<text  x="432.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1021.5" y="2005" width="0.2" height="15.0" fill="rgb(234,86,44)" rx="2" ry="2" />
<text  x="1024.49" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (1 samples, 0.02%)</title><rect x="899.2" y="2005" width="0.2" height="15.0" fill="rgb(220,154,24)" rx="2" ry="2" />
<text  x="902.24" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1079.5" y="1653" width="0.2" height="15.0" fill="rgb(206,81,33)" rx="2" ry="2" />
<text  x="1082.52" y="1663.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="537.3" y="1557" width="0.2" height="15.0" fill="rgb(232,111,21)" rx="2" ry="2" />
<text  x="540.28" y="1567.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (3 samples, 0.05%)</title><rect x="570.2" y="1989" width="0.6" height="15.0" fill="rgb(230,71,45)" rx="2" ry="2" />
<text  x="573.19" y="1999.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(214,92,44)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (3 samples, 0.05%)</title><rect x="647.8" y="1989" width="0.6" height="15.0" fill="rgb(220,175,16)" rx="2" ry="2" />
<text  x="650.76" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="948.9" y="1973" width="0.2" height="15.0" fill="rgb(223,138,19)" rx="2" ry="2" />
<text  x="951.89" y="1983.5" ></text>
</g>
<g >
<title>set_close_on_exec (2 samples, 0.03%)</title><rect x="563.8" y="1909" width="0.4" height="15.0" fill="rgb(212,130,32)" rx="2" ry="2" />
<text  x="566.80" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="970.4" y="2005" width="0.2" height="15.0" fill="rgb(238,106,13)" rx="2" ry="2" />
<text  x="973.43" y="2015.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="103.3" y="37" width="0.2" height="15.0" fill="rgb(215,172,22)" rx="2" ry="2" />
<text  x="106.33" y="47.5" ></text>
</g>
<g >
<title>sys_close (18 samples, 0.30%)</title><rect x="841.6" y="1861" width="3.6" height="15.0" fill="rgb(227,115,50)" rx="2" ry="2" />
<text  x="844.60" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (3 samples, 0.05%)</title><rect x="148.2" y="1941" width="0.6" height="15.0" fill="rgb(239,2,20)" rx="2" ry="2" />
<text  x="151.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="760.4" y="1717" width="0.2" height="15.0" fill="rgb(243,118,44)" rx="2" ry="2" />
<text  x="763.44" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="92.2" y="1941" width="0.2" height="15.0" fill="rgb(250,116,24)" rx="2" ry="2" />
<text  x="95.16" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (5 samples, 0.08%)</title><rect x="855.0" y="1941" width="1.0" height="15.0" fill="rgb(229,119,34)" rx="2" ry="2" />
<text  x="857.97" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="639.4" y="1909" width="0.4" height="15.0" fill="rgb(243,132,12)" rx="2" ry="2" />
<text  x="642.39" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="513.5" y="1989" width="0.4" height="15.0" fill="rgb(224,118,16)" rx="2" ry="2" />
<text  x="516.55" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (2 samples, 0.03%)</title><rect x="883.1" y="1925" width="0.4" height="15.0" fill="rgb(217,91,1)" rx="2" ry="2" />
<text  x="886.08" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (37 samples, 0.63%)</title><rect x="607.9" y="1957" width="7.4" height="15.0" fill="rgb(210,74,32)" rx="2" ry="2" />
<text  x="610.88" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1093" width="18.7" height="15.0" fill="rgb(252,103,20)" rx="2" ry="2" />
<text  x="96.16" y="1103.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="568.4" y="1973" width="0.2" height="15.0" fill="rgb(246,98,12)" rx="2" ry="2" />
<text  x="571.39" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="928.4" y="1925" width="0.2" height="15.0" fill="rgb(211,56,41)" rx="2" ry="2" />
<text  x="931.35" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (116 samples, 1.96%)</title><rect x="93.0" y="1893" width="23.1" height="15.0" fill="rgb(207,145,10)" rx="2" ry="2" />
<text  x="95.96" y="1903.5" >[..</text>
</g>
<g >
<title>ep_remove (65 samples, 1.10%)</title><rect x="462.3" y="1973" width="13.0" height="15.0" fill="rgb(235,145,37)" rx="2" ry="2" />
<text  x="465.30" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="585.7" y="1861" width="0.2" height="15.0" fill="rgb(248,74,39)" rx="2" ry="2" />
<text  x="588.74" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="450.3" y="1797" width="0.4" height="15.0" fill="rgb(246,139,46)" rx="2" ry="2" />
<text  x="453.33" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="402.7" y="1941" width="0.4" height="15.0" fill="rgb(245,79,13)" rx="2" ry="2" />
<text  x="405.67" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="212.0" y="1813" width="0.4" height="15.0" fill="rgb(221,104,22)" rx="2" ry="2" />
<text  x="215.02" y="1823.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="767.6" y="1685" width="0.2" height="15.0" fill="rgb(214,89,21)" rx="2" ry="2" />
<text  x="770.62" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1150.7" y="1605" width="0.2" height="15.0" fill="rgb(208,151,22)" rx="2" ry="2" />
<text  x="1153.71" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="834.0" y="1605" width="0.2" height="15.0" fill="rgb(207,137,50)" rx="2" ry="2" />
<text  x="837.03" y="1615.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="849.0" y="1909" width="0.4" height="15.0" fill="rgb(236,123,30)" rx="2" ry="2" />
<text  x="851.98" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="873.7" y="1749" width="0.2" height="15.0" fill="rgb(254,129,5)" rx="2" ry="2" />
<text  x="876.71" y="1759.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="480.6" y="1941" width="0.4" height="15.0" fill="rgb(226,87,26)" rx="2" ry="2" />
<text  x="483.64" y="1951.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="107.1" y="53" width="0.4" height="15.0" fill="rgb(232,29,47)" rx="2" ry="2" />
<text  x="110.12" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="294.8" y="1765" width="0.2" height="15.0" fill="rgb(249,66,31)" rx="2" ry="2" />
<text  x="297.78" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="121.3" y="1749" width="0.2" height="15.0" fill="rgb(218,22,40)" rx="2" ry="2" />
<text  x="124.28" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="697.0" y="1861" width="0.2" height="15.0" fill="rgb(235,68,30)" rx="2" ry="2" />
<text  x="700.02" y="1871.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="599.5" y="1509" width="0.2" height="15.0" fill="rgb(236,132,15)" rx="2" ry="2" />
<text  x="602.50" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="673.5" y="1877" width="0.2" height="15.0" fill="rgb(242,100,52)" rx="2" ry="2" />
<text  x="676.49" y="1887.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="725.9" y="1557" width="0.2" height="15.0" fill="rgb(222,200,2)" rx="2" ry="2" />
<text  x="728.94" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="861.3" y="1877" width="0.4" height="15.0" fill="rgb(247,132,0)" rx="2" ry="2" />
<text  x="864.35" y="1887.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="252.7" y="1845" width="0.2" height="15.0" fill="rgb(209,193,30)" rx="2" ry="2" />
<text  x="255.70" y="1855.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="613.7" y="1829" width="0.2" height="15.0" fill="rgb(242,180,29)" rx="2" ry="2" />
<text  x="616.66" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="75.8" y="1909" width="0.4" height="15.0" fill="rgb(235,44,38)" rx="2" ry="2" />
<text  x="78.81" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="599.5" y="1765" width="0.2" height="15.0" fill="rgb(211,14,32)" rx="2" ry="2" />
<text  x="602.50" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (6 samples, 0.10%)</title><rect x="24.2" y="1989" width="1.2" height="15.0" fill="rgb(209,37,19)" rx="2" ry="2" />
<text  x="27.16" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="77.6" y="1589" width="0.2" height="15.0" fill="rgb(254,48,45)" rx="2" ry="2" />
<text  x="80.61" y="1599.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1003.1" y="2021" width="0.2" height="15.0" fill="rgb(224,205,14)" rx="2" ry="2" />
<text  x="1006.14" y="2031.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="322.9" y="2037" width="0.2" height="15.0" fill="rgb(211,47,1)" rx="2" ry="2" />
<text  x="325.90" y="2047.5" ></text>
</g>
<g >
<title>netdev_pick_tx (16 samples, 0.27%)</title><rect x="788.2" y="1557" width="3.1" height="15.0" fill="rgb(207,101,36)" rx="2" ry="2" />
<text  x="791.16" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (23 samples, 0.39%)</title><rect x="932.1" y="1925" width="4.6" height="15.0" fill="rgb(231,120,14)" rx="2" ry="2" />
<text  x="935.14" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (6 samples, 0.10%)</title><rect x="50.1" y="1973" width="1.2" height="15.0" fill="rgb(233,138,42)" rx="2" ry="2" />
<text  x="53.08" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="846.6" y="1605" width="0.2" height="15.0" fill="rgb(215,122,46)" rx="2" ry="2" />
<text  x="849.59" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="93.4" y="101" width="16.7" height="15.0" fill="rgb(235,145,27)" rx="2" ry="2" />
<text  x="96.36" y="111.5" ></text>
</g>
<g >
<title>sock_poll (68 samples, 1.15%)</title><rect x="495.2" y="1909" width="13.6" height="15.0" fill="rgb(207,213,3)" rx="2" ry="2" />
<text  x="498.20" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1079.7" y="1685" width="0.2" height="15.0" fill="rgb(222,88,9)" rx="2" ry="2" />
<text  x="1082.72" y="1695.5" ></text>
</g>
<g >
<title>alloc_file (56 samples, 0.95%)</title><rect x="382.3" y="1941" width="11.2" height="15.0" fill="rgb(222,167,26)" rx="2" ry="2" />
<text  x="385.33" y="1951.5" ></text>
</g>
<g >
<title>detach_if_pending (2 samples, 0.03%)</title><rect x="820.7" y="1605" width="0.4" height="15.0" fill="rgb(220,7,34)" rx="2" ry="2" />
<text  x="823.66" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="77.6" y="1749" width="0.2" height="15.0" fill="rgb(223,44,36)" rx="2" ry="2" />
<text  x="80.61" y="1759.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="538.3" y="1685" width="0.2" height="15.0" fill="rgb(215,98,11)" rx="2" ry="2" />
<text  x="541.28" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="257.3" y="1701" width="0.2" height="15.0" fill="rgb(236,128,14)" rx="2" ry="2" />
<text  x="260.29" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="93.2" y="1557" width="20.9" height="15.0" fill="rgb(233,135,2)" rx="2" ry="2" />
<text  x="96.16" y="1567.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1148.5" y="2005" width="0.2" height="15.0" fill="rgb(229,169,9)" rx="2" ry="2" />
<text  x="1151.52" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (21 samples, 0.35%)</title><rect x="704.2" y="1925" width="4.2" height="15.0" fill="rgb(218,209,37)" rx="2" ry="2" />
<text  x="707.20" y="1935.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="473.1" y="1781" width="0.2" height="15.0" fill="rgb(221,79,29)" rx="2" ry="2" />
<text  x="476.07" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="995.8" y="1941" width="0.4" height="15.0" fill="rgb(214,100,37)" rx="2" ry="2" />
<text  x="998.76" y="1951.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (2 samples, 0.03%)</title><rect x="522.7" y="1957" width="0.4" height="15.0" fill="rgb(243,102,44)" rx="2" ry="2" />
<text  x="525.72" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="62.8" y="1893" width="0.4" height="15.0" fill="rgb(246,200,31)" rx="2" ry="2" />
<text  x="65.85" y="1903.5" ></text>
</g>
<g >
<title>add_wait_queue (7 samples, 0.12%)</title><rect x="457.9" y="1909" width="1.4" height="15.0" fill="rgb(239,10,45)" rx="2" ry="2" />
<text  x="460.91" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc_inode (41 samples, 0.69%)</title><rect x="373.8" y="1909" width="8.1" height="15.0" fill="rgb(231,136,18)" rx="2" ry="2" />
<text  x="376.75" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="148.4" y="1909" width="0.4" height="15.0" fill="rgb(232,195,12)" rx="2" ry="2" />
<text  x="151.40" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="988.2" y="1893" width="0.2" height="15.0" fill="rgb(245,174,30)" rx="2" ry="2" />
<text  x="991.18" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="275.0" y="1413" width="0.4" height="15.0" fill="rgb(211,45,32)" rx="2" ry="2" />
<text  x="278.04" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="74.2" y="1701" width="0.2" height="15.0" fill="rgb(208,138,42)" rx="2" ry="2" />
<text  x="77.21" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="485.8" y="1861" width="0.4" height="15.0" fill="rgb(222,180,10)" rx="2" ry="2" />
<text  x="488.83" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.86%)</title><rect x="93.4" y="53" width="10.1" height="15.0" fill="rgb(237,65,24)" rx="2" ry="2" />
<text  x="96.36" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="473.1" y="1813" width="0.2" height="15.0" fill="rgb(215,208,21)" rx="2" ry="2" />
<text  x="476.07" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="75.2" y="1909" width="0.2" height="15.0" fill="rgb(249,177,51)" rx="2" ry="2" />
<text  x="78.21" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="93.2" y="1477" width="20.3" height="15.0" fill="rgb(246,61,25)" rx="2" ry="2" />
<text  x="96.16" y="1487.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="171.5" y="1989" width="0.2" height="15.0" fill="rgb(254,38,2)" rx="2" ry="2" />
<text  x="174.53" y="1999.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="117.9" y="1989" width="0.4" height="15.0" fill="rgb(206,0,5)" rx="2" ry="2" />
<text  x="120.89" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="94.8" y="37" width="0.4" height="15.0" fill="rgb(213,19,46)" rx="2" ry="2" />
<text  x="97.76" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (3 samples, 0.05%)</title><rect x="996.2" y="1957" width="0.6" height="15.0" fill="rgb(236,95,18)" rx="2" ry="2" />
<text  x="999.16" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="450.3" y="1765" width="0.4" height="15.0" fill="rgb(207,4,5)" rx="2" ry="2" />
<text  x="453.33" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1150.7" y="1781" width="0.2" height="15.0" fill="rgb(206,0,15)" rx="2" ry="2" />
<text  x="1153.71" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="852.8" y="1813" width="0.2" height="15.0" fill="rgb(217,25,42)" rx="2" ry="2" />
<text  x="855.77" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="810.5" y="1477" width="0.2" height="15.0" fill="rgb(224,227,10)" rx="2" ry="2" />
<text  x="813.49" y="1487.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.0" y="1717" width="0.2" height="15.0" fill="rgb(248,169,18)" rx="2" ry="2" />
<text  x="844.01" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="156.6" y="1957" width="0.2" height="15.0" fill="rgb(225,221,41)" rx="2" ry="2" />
<text  x="159.58" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="452.7" y="1941" width="0.4" height="15.0" fill="rgb(237,152,26)" rx="2" ry="2" />
<text  x="455.72" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="887.7" y="1829" width="0.2" height="15.0" fill="rgb(210,182,41)" rx="2" ry="2" />
<text  x="890.67" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="669.3" y="1749" width="0.6" height="15.0" fill="rgb(219,222,22)" rx="2" ry="2" />
<text  x="672.30" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="970.4" y="1909" width="0.2" height="15.0" fill="rgb(240,120,37)" rx="2" ry="2" />
<text  x="973.43" y="1919.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="971.4" y="1973" width="0.8" height="15.0" fill="rgb(231,179,29)" rx="2" ry="2" />
<text  x="974.43" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="853.8" y="1877" width="0.2" height="15.0" fill="rgb(224,123,42)" rx="2" ry="2" />
<text  x="856.77" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::~AsyncSocketBase (1 samples, 0.02%)</title><rect x="65.8" y="1957" width="0.2" height="15.0" fill="rgb(244,220,18)" rx="2" ry="2" />
<text  x="68.84" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="975.0" y="2021" width="1.6" height="15.0" fill="rgb(228,203,20)" rx="2" ry="2" />
<text  x="978.02" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="173.9" y="2021" width="0.2" height="15.0" fill="rgb(230,16,12)" rx="2" ry="2" />
<text  x="176.93" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.8" y="1861" width="0.2" height="15.0" fill="rgb(243,36,2)" rx="2" ry="2" />
<text  x="138.84" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="610.7" y="1413" width="0.2" height="15.0" fill="rgb(216,211,28)" rx="2" ry="2" />
<text  x="613.67" y="1423.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="255.1" y="1605" width="0.2" height="15.0" fill="rgb(215,120,52)" rx="2" ry="2" />
<text  x="258.09" y="1615.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="985.6" y="1877" width="0.2" height="15.0" fill="rgb(205,129,45)" rx="2" ry="2" />
<text  x="988.59" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="810.3" y="1621" width="0.2" height="15.0" fill="rgb(244,104,52)" rx="2" ry="2" />
<text  x="813.29" y="1631.5" ></text>
</g>
<g >
<title>tcp_write_xmit (220 samples, 3.72%)</title><rect x="260.3" y="1845" width="43.9" height="15.0" fill="rgb(222,85,24)" rx="2" ry="2" />
<text  x="263.28" y="1855.5" >tcp_..</text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="539.7" y="1941" width="2.0" height="15.0" fill="rgb(238,37,47)" rx="2" ry="2" />
<text  x="542.67" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="972.4" y="1989" width="0.2" height="15.0" fill="rgb(228,144,3)" rx="2" ry="2" />
<text  x="975.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (9 samples, 0.15%)</title><rect x="304.4" y="1877" width="1.7" height="15.0" fill="rgb(250,25,15)" rx="2" ry="2" />
<text  x="307.35" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1149.5" y="1925" width="0.2" height="15.0" fill="rgb(237,200,12)" rx="2" ry="2" />
<text  x="1152.52" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="259.5" y="1813" width="0.2" height="15.0" fill="rgb(236,61,5)" rx="2" ry="2" />
<text  x="262.48" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="142.6" y="1877" width="1.2" height="15.0" fill="rgb(214,122,16)" rx="2" ry="2" />
<text  x="145.62" y="1887.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="1083.5" y="1717" width="0.2" height="15.0" fill="rgb(240,149,31)" rx="2" ry="2" />
<text  x="1086.51" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.2" y="1717" width="0.2" height="15.0" fill="rgb(245,136,30)" rx="2" ry="2" />
<text  x="844.21" y="1727.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="689.4" y="1845" width="0.2" height="15.0" fill="rgb(249,180,52)" rx="2" ry="2" />
<text  x="692.44" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="350.8" y="1749" width="0.2" height="15.0" fill="rgb(213,179,0)" rx="2" ry="2" />
<text  x="353.82" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="139.0" y="1893" width="0.2" height="15.0" fill="rgb(236,135,48)" rx="2" ry="2" />
<text  x="142.03" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1109.2" y="1461" width="0.4" height="15.0" fill="rgb(238,68,0)" rx="2" ry="2" />
<text  x="1112.23" y="1471.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="697.0" y="1909" width="0.2" height="15.0" fill="rgb(217,200,36)" rx="2" ry="2" />
<text  x="700.02" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="10.2" y="1909" width="1.0" height="15.0" fill="rgb(205,194,44)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="615.3" y="1989" width="0.2" height="15.0" fill="rgb(230,24,33)" rx="2" ry="2" />
<text  x="618.26" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="390.9" y="1893" width="0.2" height="15.0" fill="rgb(253,145,50)" rx="2" ry="2" />
<text  x="393.90" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="565.0" y="1925" width="0.6" height="15.0" fill="rgb(237,180,43)" rx="2" ry="2" />
<text  x="568.00" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="517" width="18.5" height="15.0" fill="rgb(225,141,47)" rx="2" ry="2" />
<text  x="96.36" y="527.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="972.4" y="1781" width="0.2" height="15.0" fill="rgb(215,105,37)" rx="2" ry="2" />
<text  x="975.43" y="1791.5" ></text>
</g>
<g >
<title>sock_rfree (9 samples, 0.15%)</title><rect x="1083.7" y="1877" width="1.8" height="15.0" fill="rgb(216,7,16)" rx="2" ry="2" />
<text  x="1086.71" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.52%)</title><rect x="93.4" y="357" width="17.9" height="15.0" fill="rgb(237,12,8)" rx="2" ry="2" />
<text  x="96.36" y="367.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="661.3" y="1845" width="0.2" height="15.0" fill="rgb(235,194,9)" rx="2" ry="2" />
<text  x="664.32" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="371.4" y="1845" width="0.2" height="15.0" fill="rgb(205,159,30)" rx="2" ry="2" />
<text  x="374.36" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="696.2" y="1989" width="1.6" height="15.0" fill="rgb(214,97,35)" rx="2" ry="2" />
<text  x="699.22" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="110.3" y="85" width="0.4" height="15.0" fill="rgb(234,85,8)" rx="2" ry="2" />
<text  x="113.31" y="95.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="748.1" y="1541" width="0.2" height="15.0" fill="rgb(248,163,0)" rx="2" ry="2" />
<text  x="751.07" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="316.1" y="2021" width="0.8" height="15.0" fill="rgb(245,41,34)" rx="2" ry="2" />
<text  x="319.12" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="818.1" y="1509" width="0.2" height="15.0" fill="rgb(238,8,29)" rx="2" ry="2" />
<text  x="821.07" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="924.8" y="1861" width="0.2" height="15.0" fill="rgb(213,31,32)" rx="2" ry="2" />
<text  x="927.76" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1079.7" y="1701" width="0.2" height="15.0" fill="rgb(235,144,27)" rx="2" ry="2" />
<text  x="1082.72" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (1 samples, 0.02%)</title><rect x="865.7" y="1973" width="0.2" height="15.0" fill="rgb(230,81,3)" rx="2" ry="2" />
<text  x="868.73" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="527.9" y="1909" width="0.2" height="15.0" fill="rgb(209,89,15)" rx="2" ry="2" />
<text  x="530.91" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="162.4" y="1957" width="1.2" height="15.0" fill="rgb(221,174,27)" rx="2" ry="2" />
<text  x="165.36" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="110.7" y="69" width="0.2" height="15.0" fill="rgb(223,206,12)" rx="2" ry="2" />
<text  x="113.71" y="79.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="257.3" y="1557" width="0.2" height="15.0" fill="rgb(252,164,20)" rx="2" ry="2" />
<text  x="260.29" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1049.6" y="1925" width="0.2" height="15.0" fill="rgb(206,158,36)" rx="2" ry="2" />
<text  x="1052.60" y="1935.5" ></text>
</g>
<g >
<title>kick_process (2 samples, 0.03%)</title><rect x="844.2" y="1781" width="0.4" height="15.0" fill="rgb(254,10,14)" rx="2" ry="2" />
<text  x="847.20" y="1791.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="14.4" y="1925" width="1.0" height="15.0" fill="rgb(251,137,47)" rx="2" ry="2" />
<text  x="17.39" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.2" y="1925" width="0.2" height="15.0" fill="rgb(241,26,36)" rx="2" ry="2" />
<text  x="77.21" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="887.7" y="1637" width="0.2" height="15.0" fill="rgb(245,206,52)" rx="2" ry="2" />
<text  x="890.67" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="93.4" y="389" width="18.3" height="15.0" fill="rgb(252,211,35)" rx="2" ry="2" />
<text  x="96.36" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (8 samples, 0.14%)</title><rect x="892.3" y="1941" width="1.6" height="15.0" fill="rgb(206,41,12)" rx="2" ry="2" />
<text  x="895.26" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.08%)</title><rect x="846.0" y="1893" width="1.0" height="15.0" fill="rgb(214,7,32)" rx="2" ry="2" />
<text  x="848.99" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="71.0" y="1861" width="0.2" height="15.0" fill="rgb(233,106,11)" rx="2" ry="2" />
<text  x="74.02" y="1871.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (4 samples, 0.07%)</title><rect x="756.6" y="1733" width="0.8" height="15.0" fill="rgb(223,229,30)" rx="2" ry="2" />
<text  x="759.65" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="74.2" y="1797" width="0.2" height="15.0" fill="rgb(223,204,32)" rx="2" ry="2" />
<text  x="77.21" y="1807.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="669.5" y="1477" width="0.2" height="15.0" fill="rgb(236,201,38)" rx="2" ry="2" />
<text  x="672.50" y="1487.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="182.5" y="2037" width="0.4" height="15.0" fill="rgb(222,50,45)" rx="2" ry="2" />
<text  x="185.50" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="949.1" y="2005" width="0.4" height="15.0" fill="rgb(239,177,16)" rx="2" ry="2" />
<text  x="952.09" y="2015.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="707.0" y="1765" width="0.2" height="15.0" fill="rgb(215,63,0)" rx="2" ry="2" />
<text  x="709.99" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (17 samples, 0.29%)</title><rect x="995.0" y="1989" width="3.4" height="15.0" fill="rgb(237,79,2)" rx="2" ry="2" />
<text  x="997.96" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="545.7" y="1925" width="1.2" height="15.0" fill="rgb(238,209,51)" rx="2" ry="2" />
<text  x="548.66" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="525.1" y="1957" width="0.2" height="15.0" fill="rgb(219,137,8)" rx="2" ry="2" />
<text  x="528.12" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (23 samples, 0.39%)</title><rect x="537.7" y="1989" width="4.6" height="15.0" fill="rgb(222,202,21)" rx="2" ry="2" />
<text  x="540.68" y="1999.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (14 samples, 0.24%)</title><rect x="234.4" y="1941" width="2.7" height="15.0" fill="rgb(207,223,46)" rx="2" ry="2" />
<text  x="237.35" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1017.1" y="1941" width="0.4" height="15.0" fill="rgb(234,60,1)" rx="2" ry="2" />
<text  x="1020.10" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (15 samples, 0.25%)</title><rect x="386.3" y="1909" width="3.0" height="15.0" fill="rgb(228,198,27)" rx="2" ry="2" />
<text  x="389.32" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (162 samples, 2.74%)</title><rect x="924.2" y="2037" width="32.3" height="15.0" fill="rgb(229,39,15)" rx="2" ry="2" />
<text  x="927.17" y="2047.5" >fa..</text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="116.7" y="1941" width="0.2" height="15.0" fill="rgb(228,35,3)" rx="2" ry="2" />
<text  x="119.69" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (4 samples, 0.07%)</title><rect x="569.0" y="2005" width="0.8" height="15.0" fill="rgb(231,204,2)" rx="2" ry="2" />
<text  x="571.99" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1189.4" y="1733" width="0.2" height="15.0" fill="rgb(226,51,24)" rx="2" ry="2" />
<text  x="1192.40" y="1743.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="324.5" y="2021" width="2.0" height="15.0" fill="rgb(222,166,4)" rx="2" ry="2" />
<text  x="327.49" y="2031.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="668.7" y="1861" width="0.4" height="15.0" fill="rgb(224,5,11)" rx="2" ry="2" />
<text  x="671.70" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="960.5" y="1957" width="0.8" height="15.0" fill="rgb(226,162,8)" rx="2" ry="2" />
<text  x="963.46" y="1967.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="563.0" y="1893" width="0.6" height="15.0" fill="rgb(238,88,9)" rx="2" ry="2" />
<text  x="566.01" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (49 samples, 0.83%)</title><rect x="1106.8" y="1557" width="9.8" height="15.0" fill="rgb(247,116,50)" rx="2" ry="2" />
<text  x="1109.84" y="1567.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1189.4" y="1717" width="0.2" height="15.0" fill="rgb(254,225,40)" rx="2" ry="2" />
<text  x="1192.40" y="1727.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1049.4" y="1989" width="0.2" height="15.0" fill="rgb(212,136,26)" rx="2" ry="2" />
<text  x="1052.41" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="1020.9" y="2037" width="0.4" height="15.0" fill="rgb(239,82,52)" rx="2" ry="2" />
<text  x="1023.89" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="859.2" y="1765" width="0.2" height="15.0" fill="rgb(207,68,39)" rx="2" ry="2" />
<text  x="862.15" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="399.7" y="1861" width="0.2" height="15.0" fill="rgb(229,114,16)" rx="2" ry="2" />
<text  x="402.68" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="55.7" y="1877" width="0.6" height="15.0" fill="rgb(212,163,6)" rx="2" ry="2" />
<text  x="58.67" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="110.9" y="37" width="0.2" height="15.0" fill="rgb(205,90,3)" rx="2" ry="2" />
<text  x="113.91" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="49.7" y="1877" width="0.4" height="15.0" fill="rgb(212,152,6)" rx="2" ry="2" />
<text  x="52.69" y="1887.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="700.0" y="1957" width="0.2" height="15.0" fill="rgb(222,146,46)" rx="2" ry="2" />
<text  x="703.01" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlagsImpl (1 samples, 0.02%)</title><rect x="883.5" y="1941" width="0.2" height="15.0" fill="rgb(246,159,14)" rx="2" ry="2" />
<text  x="886.48" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1128.0" y="1621" width="0.2" height="15.0" fill="rgb(254,219,36)" rx="2" ry="2" />
<text  x="1130.98" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="379.7" y="1845" width="0.2" height="15.0" fill="rgb(242,179,40)" rx="2" ry="2" />
<text  x="382.73" y="1855.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="982.4" y="1973" width="0.2" height="15.0" fill="rgb(223,218,45)" rx="2" ry="2" />
<text  x="985.40" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_bit (2 samples, 0.03%)</title><rect x="745.9" y="1685" width="0.4" height="15.0" fill="rgb(238,45,14)" rx="2" ry="2" />
<text  x="748.88" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="576.2" y="1957" width="0.4" height="15.0" fill="rgb(216,49,17)" rx="2" ry="2" />
<text  x="579.17" y="1967.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1079.5" y="1461" width="0.2" height="15.0" fill="rgb(248,29,22)" rx="2" ry="2" />
<text  x="1082.52" y="1471.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="932.3" y="1909" width="0.2" height="15.0" fill="rgb(222,97,51)" rx="2" ry="2" />
<text  x="935.34" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (39 samples, 0.66%)</title><rect x="607.5" y="1989" width="7.8" height="15.0" fill="rgb(212,67,15)" rx="2" ry="2" />
<text  x="610.48" y="1999.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="537.7" y="1973" width="0.2" height="15.0" fill="rgb(244,14,21)" rx="2" ry="2" />
<text  x="540.68" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="74.2" y="1685" width="0.2" height="15.0" fill="rgb(216,206,20)" rx="2" ry="2" />
<text  x="77.21" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="165.4" y="1957" width="0.2" height="15.0" fill="rgb(220,141,24)" rx="2" ry="2" />
<text  x="168.35" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1150.7" y="1941" width="0.2" height="15.0" fill="rgb(225,17,8)" rx="2" ry="2" />
<text  x="1153.71" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="93.2" y="1157" width="18.7" height="15.0" fill="rgb(213,123,29)" rx="2" ry="2" />
<text  x="96.16" y="1167.5" ></text>
</g>
<g >
<title>skb_free_head (19 samples, 0.32%)</title><rect x="1110.2" y="1461" width="3.8" height="15.0" fill="rgb(246,196,52)" rx="2" ry="2" />
<text  x="1113.23" y="1471.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (1 samples, 0.02%)</title><rect x="371.4" y="1765" width="0.2" height="15.0" fill="rgb(232,163,34)" rx="2" ry="2" />
<text  x="374.36" y="1775.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="818.3" y="1669" width="0.2" height="15.0" fill="rgb(209,143,37)" rx="2" ry="2" />
<text  x="821.27" y="1679.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="402.3" y="2005" width="0.2" height="15.0" fill="rgb(238,5,20)" rx="2" ry="2" />
<text  x="405.27" y="2015.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="675.1" y="1861" width="0.8" height="15.0" fill="rgb(219,179,25)" rx="2" ry="2" />
<text  x="678.08" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (4 samples, 0.07%)</title><rect x="1009.1" y="1989" width="0.8" height="15.0" fill="rgb(245,166,7)" rx="2" ry="2" />
<text  x="1012.12" y="1999.5" ></text>
</g>
<g >
<title>__GI___getsockname (1 samples, 0.02%)</title><rect x="117.1" y="1989" width="0.2" height="15.0" fill="rgb(226,59,5)" rx="2" ry="2" />
<text  x="120.09" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(243,67,13)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="667.9" y="1829" width="0.4" height="15.0" fill="rgb(227,65,15)" rx="2" ry="2" />
<text  x="670.90" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="111.7" y="85" width="0.2" height="15.0" fill="rgb(228,183,15)" rx="2" ry="2" />
<text  x="114.71" y="95.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="740.7" y="1653" width="0.4" height="15.0" fill="rgb(242,167,52)" rx="2" ry="2" />
<text  x="743.69" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="538.1" y="1973" width="0.4" height="15.0" fill="rgb(229,218,24)" rx="2" ry="2" />
<text  x="541.08" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="154.8" y="1973" width="0.2" height="15.0" fill="rgb(223,69,32)" rx="2" ry="2" />
<text  x="157.78" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="114.3" y="1621" width="0.2" height="15.0" fill="rgb(220,68,53)" rx="2" ry="2" />
<text  x="117.30" y="1631.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (52 samples, 0.88%)</title><rect x="1106.2" y="1765" width="10.4" height="15.0" fill="rgb(219,83,44)" rx="2" ry="2" />
<text  x="1109.24" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="502.2" y="1893" width="0.2" height="15.0" fill="rgb(241,75,3)" rx="2" ry="2" />
<text  x="505.18" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1105.0" y="1685" width="0.2" height="15.0" fill="rgb(219,10,18)" rx="2" ry="2" />
<text  x="1108.04" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.2" y="1685" width="0.2" height="15.0" fill="rgb(219,205,7)" rx="2" ry="2" />
<text  x="844.21" y="1695.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="389.1" y="1893" width="0.2" height="15.0" fill="rgb(212,42,43)" rx="2" ry="2" />
<text  x="392.11" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="167.5" y="1941" width="0.4" height="15.0" fill="rgb(253,174,20)" rx="2" ry="2" />
<text  x="170.55" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="835.0" y="1333" width="0.2" height="15.0" fill="rgb(223,9,24)" rx="2" ry="2" />
<text  x="838.02" y="1343.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="610.7" y="1845" width="0.2" height="15.0" fill="rgb(205,0,52)" rx="2" ry="2" />
<text  x="613.67" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="92.2" y="1989" width="0.2" height="15.0" fill="rgb(233,42,20)" rx="2" ry="2" />
<text  x="95.16" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="238.9" y="1877" width="0.2" height="15.0" fill="rgb(213,196,8)" rx="2" ry="2" />
<text  x="241.94" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="502.6" y="1781" width="0.2" height="15.0" fill="rgb(214,90,54)" rx="2" ry="2" />
<text  x="505.58" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1118.4" y="1781" width="0.2" height="15.0" fill="rgb(219,127,15)" rx="2" ry="2" />
<text  x="1121.41" y="1791.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="550.6" y="1941" width="0.4" height="15.0" fill="rgb(254,198,41)" rx="2" ry="2" />
<text  x="553.64" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="972.4" y="1973" width="0.2" height="15.0" fill="rgb(249,213,10)" rx="2" ry="2" />
<text  x="975.43" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="902.6" y="2021" width="0.4" height="15.0" fill="rgb(209,9,24)" rx="2" ry="2" />
<text  x="905.63" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="1020.1" y="2037" width="0.4" height="15.0" fill="rgb(254,218,26)" rx="2" ry="2" />
<text  x="1023.09" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="891.7" y="1893" width="0.2" height="15.0" fill="rgb(251,163,46)" rx="2" ry="2" />
<text  x="894.66" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1017.1" y="1813" width="0.4" height="15.0" fill="rgb(218,30,43)" rx="2" ry="2" />
<text  x="1020.10" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="846.2" y="1765" width="0.6" height="15.0" fill="rgb(216,28,17)" rx="2" ry="2" />
<text  x="849.19" y="1775.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="54.3" y="1669" width="0.2" height="15.0" fill="rgb(207,152,1)" rx="2" ry="2" />
<text  x="57.27" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="141.8" y="1877" width="0.2" height="15.0" fill="rgb(222,70,12)" rx="2" ry="2" />
<text  x="144.82" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1105.0" y="1733" width="0.2" height="15.0" fill="rgb(238,16,7)" rx="2" ry="2" />
<text  x="1108.04" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1017.1" y="1829" width="0.4" height="15.0" fill="rgb(247,209,15)" rx="2" ry="2" />
<text  x="1020.10" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="142.6" y="1893" width="1.2" height="15.0" fill="rgb(216,218,50)" rx="2" ry="2" />
<text  x="145.62" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="578.4" y="1861" width="0.2" height="15.0" fill="rgb(209,86,47)" rx="2" ry="2" />
<text  x="581.36" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="111.3" y="165" width="0.2" height="15.0" fill="rgb(224,40,22)" rx="2" ry="2" />
<text  x="114.31" y="175.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="1121.8" y="1717" width="0.2" height="15.0" fill="rgb(205,180,21)" rx="2" ry="2" />
<text  x="1124.80" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="564.8" y="1877" width="0.2" height="15.0" fill="rgb(216,121,40)" rx="2" ry="2" />
<text  x="567.80" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="947.9" y="1989" width="0.4" height="15.0" fill="rgb(228,216,27)" rx="2" ry="2" />
<text  x="950.90" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="111.1" y="261" width="0.2" height="15.0" fill="rgb(241,188,37)" rx="2" ry="2" />
<text  x="114.11" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="726.1" y="1813" width="0.8" height="15.0" fill="rgb(214,50,39)" rx="2" ry="2" />
<text  x="729.14" y="1823.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (21 samples, 0.35%)</title><rect x="393.5" y="1941" width="4.2" height="15.0" fill="rgb(229,39,33)" rx="2" ry="2" />
<text  x="396.50" y="1951.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="232.2" y="1861" width="0.2" height="15.0" fill="rgb(231,143,6)" rx="2" ry="2" />
<text  x="235.16" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="111.7" y="213" width="0.2" height="15.0" fill="rgb(220,43,16)" rx="2" ry="2" />
<text  x="114.71" y="223.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="486.0" y="1797" width="0.2" height="15.0" fill="rgb(224,218,22)" rx="2" ry="2" />
<text  x="489.03" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="908.8" y="1957" width="1.2" height="15.0" fill="rgb(233,101,15)" rx="2" ry="2" />
<text  x="911.81" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="359.0" y="1893" width="0.2" height="15.0" fill="rgb(215,132,7)" rx="2" ry="2" />
<text  x="361.99" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="53.5" y="1909" width="1.0" height="15.0" fill="rgb(208,181,37)" rx="2" ry="2" />
<text  x="56.47" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="997.8" y="1765" width="0.2" height="15.0" fill="rgb(237,115,25)" rx="2" ry="2" />
<text  x="1000.75" y="1775.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="675.1" y="1877" width="0.8" height="15.0" fill="rgb(238,121,1)" rx="2" ry="2" />
<text  x="678.08" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="71.0" y="1893" width="0.2" height="15.0" fill="rgb(249,98,51)" rx="2" ry="2" />
<text  x="74.02" y="1903.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (289 samples, 4.88%)</title><rect x="768.6" y="1717" width="57.6" height="15.0" fill="rgb(207,49,14)" rx="2" ry="2" />
<text  x="771.61" y="1727.5" >__tcp_..</text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="610.7" y="1525" width="0.2" height="15.0" fill="rgb(228,150,29)" rx="2" ry="2" />
<text  x="613.67" y="1535.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="115.9" y="1845" width="0.2" height="15.0" fill="rgb(208,68,14)" rx="2" ry="2" />
<text  x="118.89" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="887.7" y="1733" width="0.2" height="15.0" fill="rgb(207,205,46)" rx="2" ry="2" />
<text  x="890.67" y="1743.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="402.9" y="1685" width="0.2" height="15.0" fill="rgb(251,80,19)" rx="2" ry="2" />
<text  x="405.87" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="818.1" y="1525" width="0.2" height="15.0" fill="rgb(250,215,30)" rx="2" ry="2" />
<text  x="821.07" y="1535.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="618.2" y="1941" width="0.2" height="15.0" fill="rgb(237,144,45)" rx="2" ry="2" />
<text  x="621.25" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.34%)</title><rect x="636.0" y="1941" width="4.0" height="15.0" fill="rgb(217,114,42)" rx="2" ry="2" />
<text  x="639.00" y="1951.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="92.0" y="2021" width="0.2" height="15.0" fill="rgb(209,198,11)" rx="2" ry="2" />
<text  x="94.96" y="2031.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="87.0" y="1845" width="0.2" height="15.0" fill="rgb(226,7,8)" rx="2" ry="2" />
<text  x="89.98" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="93.4" y="261" width="17.7" height="15.0" fill="rgb(230,175,23)" rx="2" ry="2" />
<text  x="96.36" y="271.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="1121.2" y="1909" width="0.6" height="15.0" fill="rgb(220,175,29)" rx="2" ry="2" />
<text  x="1124.20" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="165.2" y="1877" width="0.2" height="15.0" fill="rgb(213,116,42)" rx="2" ry="2" />
<text  x="168.15" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="69.6" y="1941" width="0.2" height="15.0" fill="rgb(247,52,3)" rx="2" ry="2" />
<text  x="72.63" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="111.1" y="101" width="0.2" height="15.0" fill="rgb(254,88,50)" rx="2" ry="2" />
<text  x="114.11" y="111.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="709" width="18.5" height="15.0" fill="rgb(232,44,25)" rx="2" ry="2" />
<text  x="96.36" y="719.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="556.2" y="1957" width="0.2" height="15.0" fill="rgb(234,33,9)" rx="2" ry="2" />
<text  x="559.23" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="484.6" y="1845" width="0.2" height="15.0" fill="rgb(250,214,36)" rx="2" ry="2" />
<text  x="487.63" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="887.5" y="1909" width="0.2" height="15.0" fill="rgb(246,114,37)" rx="2" ry="2" />
<text  x="890.47" y="1919.5" ></text>
</g>
<g >
<title>kfree_call_rcu (3 samples, 0.05%)</title><rect x="740.7" y="1669" width="0.6" height="15.0" fill="rgb(222,211,9)" rx="2" ry="2" />
<text  x="743.69" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (3 samples, 0.05%)</title><rect x="619.2" y="2037" width="0.6" height="15.0" fill="rgb(237,164,52)" rx="2" ry="2" />
<text  x="622.24" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="861.7" y="1845" width="0.2" height="15.0" fill="rgb(224,32,26)" rx="2" ry="2" />
<text  x="864.75" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="578.4" y="1973" width="0.2" height="15.0" fill="rgb(251,189,2)" rx="2" ry="2" />
<text  x="581.36" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="901.2" y="2005" width="0.8" height="15.0" fill="rgb(236,192,27)" rx="2" ry="2" />
<text  x="904.23" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (6 samples, 0.10%)</title><rect x="905.4" y="2005" width="1.2" height="15.0" fill="rgb(224,66,51)" rx="2" ry="2" />
<text  x="908.42" y="2015.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="461.9" y="1941" width="0.2" height="15.0" fill="rgb(254,68,41)" rx="2" ry="2" />
<text  x="464.90" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (14 samples, 0.24%)</title><rect x="466.9" y="1941" width="2.8" height="15.0" fill="rgb(218,213,40)" rx="2" ry="2" />
<text  x="469.88" y="1951.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1135.4" y="1701" width="0.2" height="15.0" fill="rgb(217,114,26)" rx="2" ry="2" />
<text  x="1138.36" y="1711.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14 samples, 0.24%)</title><rect x="273.2" y="1733" width="2.8" height="15.0" fill="rgb(236,92,42)" rx="2" ry="2" />
<text  x="276.24" y="1743.5" ></text>
</g>
<g >
<title>___slab_alloc (5 samples, 0.08%)</title><rect x="387.1" y="1877" width="1.0" height="15.0" fill="rgb(250,214,20)" rx="2" ry="2" />
<text  x="390.11" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="937.7" y="1973" width="0.2" height="15.0" fill="rgb(234,194,46)" rx="2" ry="2" />
<text  x="940.73" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="473.1" y="1893" width="0.2" height="15.0" fill="rgb(209,60,42)" rx="2" ry="2" />
<text  x="476.07" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="142.0" y="1909" width="0.2" height="15.0" fill="rgb(222,16,27)" rx="2" ry="2" />
<text  x="145.02" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="924.8" y="1925" width="0.2" height="15.0" fill="rgb(238,220,12)" rx="2" ry="2" />
<text  x="927.76" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="482.8" y="1781" width="0.2" height="15.0" fill="rgb(211,209,20)" rx="2" ry="2" />
<text  x="485.84" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="138.0" y="1909" width="0.2" height="15.0" fill="rgb(225,65,15)" rx="2" ry="2" />
<text  x="141.03" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="111.7" y="117" width="0.2" height="15.0" fill="rgb(223,200,7)" rx="2" ry="2" />
<text  x="114.71" y="127.5" ></text>
</g>
<g >
<title>mod_timer (25 samples, 0.42%)</title><rect x="819.1" y="1621" width="5.0" height="15.0" fill="rgb(249,184,47)" rx="2" ry="2" />
<text  x="822.07" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="628.0" y="2005" width="0.6" height="15.0" fill="rgb(225,10,1)" rx="2" ry="2" />
<text  x="631.02" y="2015.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="111.1" y="53" width="0.2" height="15.0" fill="rgb(208,150,45)" rx="2" ry="2" />
<text  x="114.11" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="915.6" y="1653" width="0.2" height="15.0" fill="rgb(246,73,52)" rx="2" ry="2" />
<text  x="918.59" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="519.5" y="1941" width="0.2" height="15.0" fill="rgb(216,211,27)" rx="2" ry="2" />
<text  x="522.53" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1150.7" y="1909" width="0.2" height="15.0" fill="rgb(243,127,25)" rx="2" ry="2" />
<text  x="1153.71" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (33 samples, 0.56%)</title><rect x="283.0" y="1669" width="6.6" height="15.0" fill="rgb(220,46,49)" rx="2" ry="2" />
<text  x="286.01" y="1679.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="450.3" y="1685" width="0.2" height="15.0" fill="rgb(212,191,27)" rx="2" ry="2" />
<text  x="453.33" y="1695.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="733.1" y="1717" width="0.8" height="15.0" fill="rgb(216,157,41)" rx="2" ry="2" />
<text  x="736.12" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (30 samples, 0.51%)</title><rect x="136.2" y="1925" width="6.0" height="15.0" fill="rgb(211,202,44)" rx="2" ry="2" />
<text  x="139.24" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="903.0" y="2021" width="0.8" height="15.0" fill="rgb(223,125,9)" rx="2" ry="2" />
<text  x="906.03" y="2031.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="814.5" y="1669" width="0.2" height="15.0" fill="rgb(242,121,11)" rx="2" ry="2" />
<text  x="817.48" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="93.2" y="1589" width="20.9" height="15.0" fill="rgb(244,227,9)" rx="2" ry="2" />
<text  x="96.16" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 2.01%)</title><rect x="93.0" y="1957" width="23.7" height="15.0" fill="rgb(231,90,50)" rx="2" ry="2" />
<text  x="95.96" y="1967.5" >[..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="952.7" y="1765" width="0.2" height="15.0" fill="rgb(250,119,20)" rx="2" ry="2" />
<text  x="955.68" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (10 samples, 0.17%)</title><rect x="856.2" y="1925" width="2.0" height="15.0" fill="rgb(217,209,20)" rx="2" ry="2" />
<text  x="859.16" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="147.0" y="1893" width="0.2" height="15.0" fill="rgb(211,145,6)" rx="2" ry="2" />
<text  x="150.01" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="396.9" y="1861" width="0.2" height="15.0" fill="rgb(239,180,50)" rx="2" ry="2" />
<text  x="399.89" y="1871.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="197.5" y="1957" width="0.2" height="15.0" fill="rgb(208,220,6)" rx="2" ry="2" />
<text  x="200.46" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1118.4" y="1605" width="0.2" height="15.0" fill="rgb(222,225,47)" rx="2" ry="2" />
<text  x="1121.41" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="485.8" y="2005" width="0.4" height="15.0" fill="rgb(238,91,17)" rx="2" ry="2" />
<text  x="488.83" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="252.5" y="1685" width="0.2" height="15.0" fill="rgb(221,168,34)" rx="2" ry="2" />
<text  x="255.50" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1135.4" y="1653" width="0.2" height="15.0" fill="rgb(223,165,11)" rx="2" ry="2" />
<text  x="1138.36" y="1663.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="520.9" y="1973" width="1.0" height="15.0" fill="rgb(232,152,29)" rx="2" ry="2" />
<text  x="523.93" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="952.7" y="1813" width="0.2" height="15.0" fill="rgb(248,113,7)" rx="2" ry="2" />
<text  x="955.68" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (77 samples, 1.30%)</title><rect x="201.0" y="1957" width="15.4" height="15.0" fill="rgb(227,210,40)" rx="2" ry="2" />
<text  x="204.05" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="365.2" y="1845" width="0.2" height="15.0" fill="rgb(240,204,6)" rx="2" ry="2" />
<text  x="368.18" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1135.4" y="2021" width="0.2" height="15.0" fill="rgb(220,114,5)" rx="2" ry="2" />
<text  x="1138.36" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="111.7" y="341" width="0.2" height="15.0" fill="rgb(214,225,21)" rx="2" ry="2" />
<text  x="114.71" y="351.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="29.3" y="1957" width="0.2" height="15.0" fill="rgb(214,10,24)" rx="2" ry="2" />
<text  x="32.34" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="653.9" y="2005" width="0.6" height="15.0" fill="rgb(249,138,11)" rx="2" ry="2" />
<text  x="656.94" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="114.1" y="1589" width="0.2" height="15.0" fill="rgb(243,32,32)" rx="2" ry="2" />
<text  x="117.10" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1146.7" y="1989" width="0.2" height="15.0" fill="rgb(253,159,18)" rx="2" ry="2" />
<text  x="1149.72" y="1999.5" ></text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.05%)</title><rect x="1139.3" y="2053" width="0.6" height="15.0" fill="rgb(241,84,34)" rx="2" ry="2" />
<text  x="1142.35" y="2063.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="63.2" y="1893" width="0.2" height="15.0" fill="rgb(238,78,16)" rx="2" ry="2" />
<text  x="66.25" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="984.6" y="1973" width="1.6" height="15.0" fill="rgb(207,197,20)" rx="2" ry="2" />
<text  x="987.59" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="252.5" y="1749" width="0.2" height="15.0" fill="rgb(208,96,44)" rx="2" ry="2" />
<text  x="255.50" y="1759.5" ></text>
</g>
<g >
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="1116.6" y="1781" width="0.6" height="15.0" fill="rgb(249,186,41)" rx="2" ry="2" />
<text  x="1119.61" y="1791.5" ></text>
</g>
<g >
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="77.6" y="1573" width="0.2" height="15.0" fill="rgb(242,54,12)" rx="2" ry="2" />
<text  x="80.61" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="502.6" y="1733" width="0.2" height="15.0" fill="rgb(232,129,36)" rx="2" ry="2" />
<text  x="505.58" y="1743.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="537.3" y="1621" width="0.2" height="15.0" fill="rgb(232,118,49)" rx="2" ry="2" />
<text  x="540.28" y="1631.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="317.3" y="2021" width="3.0" height="15.0" fill="rgb(245,220,18)" rx="2" ry="2" />
<text  x="320.31" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="909.8" y="1637" width="0.2" height="15.0" fill="rgb(231,222,13)" rx="2" ry="2" />
<text  x="912.81" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="171.7" y="1989" width="1.2" height="15.0" fill="rgb(246,18,23)" rx="2" ry="2" />
<text  x="174.73" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (24 samples, 0.41%)</title><rect x="958.3" y="2037" width="4.8" height="15.0" fill="rgb(228,51,0)" rx="2" ry="2" />
<text  x="961.27" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="138.0" y="1893" width="0.2" height="15.0" fill="rgb(214,30,34)" rx="2" ry="2" />
<text  x="141.03" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (5 samples, 0.08%)</title><rect x="519.7" y="1973" width="1.0" height="15.0" fill="rgb(239,196,19)" rx="2" ry="2" />
<text  x="522.73" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="661.3" y="1893" width="0.2" height="15.0" fill="rgb(216,173,38)" rx="2" ry="2" />
<text  x="664.32" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="255.1" y="1621" width="0.2" height="15.0" fill="rgb(218,149,52)" rx="2" ry="2" />
<text  x="258.09" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="165.2" y="1909" width="0.2" height="15.0" fill="rgb(248,138,39)" rx="2" ry="2" />
<text  x="168.15" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="121.3" y="1701" width="0.2" height="15.0" fill="rgb(222,3,46)" rx="2" ry="2" />
<text  x="124.28" y="1711.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="160.4" y="1989" width="0.2" height="15.0" fill="rgb(234,25,44)" rx="2" ry="2" />
<text  x="163.37" y="1999.5" ></text>
</g>
<g >
<title>do_futex (13 samples, 0.22%)</title><rect x="11.4" y="1989" width="2.6" height="15.0" fill="rgb(254,48,5)" rx="2" ry="2" />
<text  x="14.40" y="1999.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="790.4" y="1525" width="0.9" height="15.0" fill="rgb(254,222,54)" rx="2" ry="2" />
<text  x="793.35" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="540.5" y="1893" width="0.2" height="15.0" fill="rgb(219,89,48)" rx="2" ry="2" />
<text  x="543.47" y="1903.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="810.1" y="1637" width="0.2" height="15.0" fill="rgb(225,189,3)" rx="2" ry="2" />
<text  x="813.09" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="903.8" y="1989" width="0.2" height="15.0" fill="rgb(213,120,48)" rx="2" ry="2" />
<text  x="906.82" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="537.3" y="1765" width="0.2" height="15.0" fill="rgb(245,91,34)" rx="2" ry="2" />
<text  x="540.28" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="818.9" y="1621" width="0.2" height="15.0" fill="rgb(223,204,31)" rx="2" ry="2" />
<text  x="821.87" y="1631.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="387.1" y="1893" width="1.0" height="15.0" fill="rgb(234,16,6)" rx="2" ry="2" />
<text  x="390.11" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="111.7" y="293" width="0.2" height="15.0" fill="rgb(223,146,19)" rx="2" ry="2" />
<text  x="114.71" y="303.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (3 samples, 0.05%)</title><rect x="570.2" y="2005" width="0.6" height="15.0" fill="rgb(226,154,14)" rx="2" ry="2" />
<text  x="573.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="924.4" y="2005" width="0.6" height="15.0" fill="rgb(227,128,45)" rx="2" ry="2" />
<text  x="927.37" y="2015.5" ></text>
</g>
<g >
<title>all (5,917 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(239,45,8)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="519.1" y="1941" width="0.4" height="15.0" fill="rgb(234,109,38)" rx="2" ry="2" />
<text  x="522.13" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="984.4" y="1941" width="0.2" height="15.0" fill="rgb(226,165,9)" rx="2" ry="2" />
<text  x="987.39" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="171.1" y="1973" width="0.4" height="15.0" fill="rgb(245,205,28)" rx="2" ry="2" />
<text  x="174.14" y="1983.5" ></text>
</g>
<g >
<title>SYSC_getpeername (6 samples, 0.10%)</title><rect x="706.0" y="1829" width="1.2" height="15.0" fill="rgb(240,0,41)" rx="2" ry="2" />
<text  x="708.99" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="756.1" y="1733" width="0.1" height="15.0" fill="rgb(244,76,49)" rx="2" ry="2" />
<text  x="759.05" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1150.7" y="1733" width="0.2" height="15.0" fill="rgb(242,9,8)" rx="2" ry="2" />
<text  x="1153.71" y="1743.5" ></text>
</g>
<g >
<title>SYSC_getpeername (13 samples, 0.22%)</title><rect x="666.5" y="1877" width="2.6" height="15.0" fill="rgb(252,166,38)" rx="2" ry="2" />
<text  x="669.51" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (10 samples, 0.17%)</title><rect x="95.6" y="37" width="1.9" height="15.0" fill="rgb(230,80,44)" rx="2" ry="2" />
<text  x="98.55" y="47.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (52 samples, 0.88%)</title><rect x="1106.2" y="1781" width="10.4" height="15.0" fill="rgb(214,164,2)" rx="2" ry="2" />
<text  x="1109.24" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1090.7" y="1909" width="0.2" height="15.0" fill="rgb(246,79,8)" rx="2" ry="2" />
<text  x="1093.69" y="1919.5" ></text>
</g>
<g >
<title>__libc_fcntl (8 samples, 0.14%)</title><rect x="1171.3" y="2037" width="1.5" height="15.0" fill="rgb(236,37,52)" rx="2" ry="2" />
<text  x="1174.25" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="28.3" y="1941" width="0.2" height="15.0" fill="rgb(219,7,3)" rx="2" ry="2" />
<text  x="31.35" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="273.4" y="1621" width="0.2" height="15.0" fill="rgb(240,205,17)" rx="2" ry="2" />
<text  x="276.44" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="518.7" y="1973" width="1.0" height="15.0" fill="rgb(234,164,44)" rx="2" ry="2" />
<text  x="521.73" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (7 samples, 0.12%)</title><rect x="790.0" y="1541" width="1.3" height="15.0" fill="rgb(237,134,47)" rx="2" ry="2" />
<text  x="792.95" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (129 samples, 2.18%)</title><rect x="93.0" y="2005" width="25.7" height="15.0" fill="rgb(233,132,49)" rx="2" ry="2" />
<text  x="95.96" y="2015.5" >[..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="970.4" y="1925" width="0.2" height="15.0" fill="rgb(210,208,51)" rx="2" ry="2" />
<text  x="973.43" y="1935.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="622.8" y="1893" width="0.2" height="15.0" fill="rgb(239,204,10)" rx="2" ry="2" />
<text  x="625.83" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="988.0" y="1909" width="0.2" height="15.0" fill="rgb(242,111,28)" rx="2" ry="2" />
<text  x="990.98" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="515.9" y="1957" width="0.2" height="15.0" fill="rgb(228,49,3)" rx="2" ry="2" />
<text  x="518.94" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="859.2" y="1797" width="0.2" height="15.0" fill="rgb(234,49,16)" rx="2" ry="2" />
<text  x="862.15" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="255.1" y="1765" width="0.2" height="15.0" fill="rgb(222,86,38)" rx="2" ry="2" />
<text  x="258.09" y="1775.5" ></text>
</g>
<g >
<title>ip_queue_xmit (125 samples, 2.11%)</title><rect x="266.9" y="1813" width="24.9" height="15.0" fill="rgb(232,195,16)" rx="2" ry="2" />
<text  x="269.86" y="1823.5" >i..</text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="213.4" y="1909" width="1.8" height="15.0" fill="rgb(247,214,2)" rx="2" ry="2" />
<text  x="216.41" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1090.7" y="1717" width="0.2" height="15.0" fill="rgb(248,25,42)" rx="2" ry="2" />
<text  x="1093.69" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="150.4" y="2005" width="0.2" height="15.0" fill="rgb(229,119,53)" rx="2" ry="2" />
<text  x="153.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (6 samples, 0.10%)</title><rect x="274.2" y="1525" width="1.2" height="15.0" fill="rgb(232,17,10)" rx="2" ry="2" />
<text  x="277.24" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="163.8" y="2021" width="0.2" height="15.0" fill="rgb(214,151,38)" rx="2" ry="2" />
<text  x="166.76" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="641.0" y="1957" width="0.2" height="15.0" fill="rgb(232,164,36)" rx="2" ry="2" />
<text  x="643.98" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="209.8" y="1877" width="0.2" height="15.0" fill="rgb(252,162,17)" rx="2" ry="2" />
<text  x="212.82" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="402.7" y="2005" width="0.4" height="15.0" fill="rgb(231,114,5)" rx="2" ry="2" />
<text  x="405.67" y="2015.5" ></text>
</g>
<g >
<title>__d_instantiate (6 samples, 0.10%)</title><rect x="397.9" y="1925" width="1.2" height="15.0" fill="rgb(243,188,33)" rx="2" ry="2" />
<text  x="400.88" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="485.8" y="2021" width="0.4" height="15.0" fill="rgb(247,220,11)" rx="2" ry="2" />
<text  x="488.83" y="2031.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="294.0" y="1813" width="0.2" height="15.0" fill="rgb(224,5,30)" rx="2" ry="2" />
<text  x="296.98" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="657.1" y="2037" width="0.6" height="15.0" fill="rgb(253,165,29)" rx="2" ry="2" />
<text  x="660.14" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="255.1" y="1685" width="0.2" height="15.0" fill="rgb(239,66,14)" rx="2" ry="2" />
<text  x="258.09" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="365.2" y="1861" width="0.2" height="15.0" fill="rgb(218,196,11)" rx="2" ry="2" />
<text  x="368.18" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="937.3" y="1973" width="0.4" height="15.0" fill="rgb(240,134,39)" rx="2" ry="2" />
<text  x="940.33" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="669.5" y="1445" width="0.2" height="15.0" fill="rgb(226,222,8)" rx="2" ry="2" />
<text  x="672.50" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="949.5" y="2005" width="0.6" height="15.0" fill="rgb(249,222,51)" rx="2" ry="2" />
<text  x="952.49" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="170.9" y="1957" width="0.2" height="15.0" fill="rgb(215,25,54)" rx="2" ry="2" />
<text  x="173.94" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (20 samples, 0.34%)</title><rect x="932.5" y="1909" width="4.0" height="15.0" fill="rgb(236,225,11)" rx="2" ry="2" />
<text  x="935.54" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="365.2" y="1909" width="0.2" height="15.0" fill="rgb(241,127,34)" rx="2" ry="2" />
<text  x="368.18" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="402.9" y="1893" width="0.2" height="15.0" fill="rgb(212,113,26)" rx="2" ry="2" />
<text  x="405.87" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="810.3" y="1509" width="0.2" height="15.0" fill="rgb(243,209,29)" rx="2" ry="2" />
<text  x="813.29" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="205.0" y="1877" width="0.6" height="15.0" fill="rgb(245,113,37)" rx="2" ry="2" />
<text  x="208.04" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.24%)</title><rect x="953.3" y="2005" width="2.8" height="15.0" fill="rgb(207,216,45)" rx="2" ry="2" />
<text  x="956.28" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="950.9" y="2005" width="0.2" height="15.0" fill="rgb(211,76,51)" rx="2" ry="2" />
<text  x="953.89" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="516.1" y="1957" width="0.8" height="15.0" fill="rgb(213,46,31)" rx="2" ry="2" />
<text  x="519.14" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="997.8" y="1829" width="0.2" height="15.0" fill="rgb(238,185,45)" rx="2" ry="2" />
<text  x="1000.75" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="599.5" y="1461" width="0.2" height="15.0" fill="rgb(222,10,41)" rx="2" ry="2" />
<text  x="602.50" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="399.7" y="1909" width="0.2" height="15.0" fill="rgb(213,216,3)" rx="2" ry="2" />
<text  x="402.68" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="311.3" y="1797" width="0.4" height="15.0" fill="rgb(235,94,32)" rx="2" ry="2" />
<text  x="314.33" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="626.6" y="2005" width="0.4" height="15.0" fill="rgb(250,118,29)" rx="2" ry="2" />
<text  x="629.62" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="668.9" y="1829" width="0.2" height="15.0" fill="rgb(217,137,17)" rx="2" ry="2" />
<text  x="671.90" y="1839.5" ></text>
</g>
<g >
<title>folly::canSdallocx (1 samples, 0.02%)</title><rect x="1180.6" y="2053" width="0.2" height="15.0" fill="rgb(210,29,1)" rx="2" ry="2" />
<text  x="1183.63" y="2063.5" ></text>
</g>
<g >
<title>sys_getsockname (1 samples, 0.02%)</title><rect x="603.5" y="1909" width="0.2" height="15.0" fill="rgb(252,0,25)" rx="2" ry="2" />
<text  x="606.49" y="1919.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="111.9" y="1173" width="0.2" height="15.0" fill="rgb(207,37,9)" rx="2" ry="2" />
<text  x="114.91" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10 samples, 0.17%)</title><rect x="611.9" y="1861" width="2.0" height="15.0" fill="rgb(248,23,9)" rx="2" ry="2" />
<text  x="614.87" y="1871.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (4 samples, 0.07%)</title><rect x="1004.5" y="2005" width="0.8" height="15.0" fill="rgb(229,72,33)" rx="2" ry="2" />
<text  x="1007.53" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="924.6" y="1973" width="0.2" height="15.0" fill="rgb(254,10,8)" rx="2" ry="2" />
<text  x="927.56" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="450.7" y="1941" width="0.2" height="15.0" fill="rgb(251,189,4)" rx="2" ry="2" />
<text  x="453.73" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="810.3" y="1493" width="0.2" height="15.0" fill="rgb(209,72,54)" rx="2" ry="2" />
<text  x="813.29" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.05%)</title><rect x="997.2" y="1941" width="0.6" height="15.0" fill="rgb(240,92,8)" rx="2" ry="2" />
<text  x="1000.16" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5 samples, 0.08%)</title><rect x="997.0" y="1973" width="1.0" height="15.0" fill="rgb(211,175,46)" rx="2" ry="2" />
<text  x="999.96" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1146.7" y="1973" width="0.2" height="15.0" fill="rgb(222,223,50)" rx="2" ry="2" />
<text  x="1149.72" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (49 samples, 0.83%)</title><rect x="1106.8" y="1589" width="9.8" height="15.0" fill="rgb(221,71,14)" rx="2" ry="2" />
<text  x="1109.84" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1121.8" y="1845" width="0.2" height="15.0" fill="rgb(253,33,31)" rx="2" ry="2" />
<text  x="1124.80" y="1855.5" ></text>
</g>
<g >
<title>cpu_load_update (1 samples, 0.02%)</title><rect x="1026.3" y="1893" width="0.2" height="15.0" fill="rgb(215,166,43)" rx="2" ry="2" />
<text  x="1029.27" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="699.6" y="2037" width="0.2" height="15.0" fill="rgb(248,183,20)" rx="2" ry="2" />
<text  x="702.61" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="300.2" y="1749" width="0.4" height="15.0" fill="rgb(216,173,6)" rx="2" ry="2" />
<text  x="303.16" y="1759.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="660.3" y="1941" width="1.2" height="15.0" fill="rgb(232,180,54)" rx="2" ry="2" />
<text  x="663.33" y="1951.5" ></text>
</g>
<g >
<title>native_write_msr (11 samples, 0.19%)</title><rect x="11.8" y="1829" width="2.2" height="15.0" fill="rgb(210,105,9)" rx="2" ry="2" />
<text  x="14.79" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="133.2" y="1925" width="0.4" height="15.0" fill="rgb(222,22,21)" rx="2" ry="2" />
<text  x="136.24" y="1935.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="92.2" y="1925" width="0.2" height="15.0" fill="rgb(231,80,45)" rx="2" ry="2" />
<text  x="95.16" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="936.7" y="1605" width="0.2" height="15.0" fill="rgb(238,169,54)" rx="2" ry="2" />
<text  x="939.73" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (18 samples, 0.30%)</title><rect x="538.7" y="1973" width="3.6" height="15.0" fill="rgb(206,192,18)" rx="2" ry="2" />
<text  x="541.68" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="53.5" y="1925" width="1.0" height="15.0" fill="rgb(210,96,10)" rx="2" ry="2" />
<text  x="56.47" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="515.1" y="1973" width="0.4" height="15.0" fill="rgb(250,221,54)" rx="2" ry="2" />
<text  x="518.14" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="997.8" y="1909" width="0.2" height="15.0" fill="rgb(248,137,28)" rx="2" ry="2" />
<text  x="1000.75" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="861.3" y="1829" width="0.4" height="15.0" fill="rgb(208,31,9)" rx="2" ry="2" />
<text  x="864.35" y="1839.5" ></text>
</g>
<g >
<title>dentry_free (8 samples, 0.14%)</title><rect x="732.3" y="1749" width="1.6" height="15.0" fill="rgb(252,96,49)" rx="2" ry="2" />
<text  x="735.32" y="1759.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="850.2" y="1925" width="0.2" height="15.0" fill="rgb(224,67,12)" rx="2" ry="2" />
<text  x="853.18" y="1935.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="814.7" y="1653" width="0.6" height="15.0" fill="rgb(254,47,23)" rx="2" ry="2" />
<text  x="817.68" y="1663.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="214.2" y="1893" width="0.8" height="15.0" fill="rgb(225,215,43)" rx="2" ry="2" />
<text  x="217.21" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (32 samples, 0.54%)</title><rect x="1003.5" y="2021" width="6.4" height="15.0" fill="rgb(234,181,4)" rx="2" ry="2" />
<text  x="1006.54" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1002.9" y="2021" width="0.2" height="15.0" fill="rgb(224,183,41)" rx="2" ry="2" />
<text  x="1005.94" y="2031.5" ></text>
</g>
<g >
<title>__GI___getsockname (20 samples, 0.34%)</title><rect x="186.3" y="2037" width="4.0" height="15.0" fill="rgb(248,25,31)" rx="2" ry="2" />
<text  x="189.29" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="252.5" y="1701" width="0.2" height="15.0" fill="rgb(240,73,19)" rx="2" ry="2" />
<text  x="255.50" y="1711.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="212.2" y="1749" width="0.2" height="15.0" fill="rgb(221,171,38)" rx="2" ry="2" />
<text  x="215.22" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="673.5" y="1845" width="0.2" height="15.0" fill="rgb(222,81,27)" rx="2" ry="2" />
<text  x="676.49" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1150.7" y="1749" width="0.2" height="15.0" fill="rgb(230,189,39)" rx="2" ry="2" />
<text  x="1153.71" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="450.3" y="1701" width="0.4" height="15.0" fill="rgb(212,143,32)" rx="2" ry="2" />
<text  x="453.33" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="152.6" y="1749" width="0.2" height="15.0" fill="rgb(206,229,15)" rx="2" ry="2" />
<text  x="155.59" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="873.7" y="1941" width="0.2" height="15.0" fill="rgb(248,94,36)" rx="2" ry="2" />
<text  x="876.71" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (95 samples, 1.61%)</title><rect x="130.9" y="1973" width="18.9" height="15.0" fill="rgb(233,206,2)" rx="2" ry="2" />
<text  x="133.85" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1135.4" y="1893" width="0.2" height="15.0" fill="rgb(241,74,16)" rx="2" ry="2" />
<text  x="1138.36" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (7 samples, 0.12%)</title><rect x="576.8" y="1989" width="1.4" height="15.0" fill="rgb(232,145,7)" rx="2" ry="2" />
<text  x="579.77" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (1 samples, 0.02%)</title><rect x="651.2" y="2021" width="0.2" height="15.0" fill="rgb(208,224,20)" rx="2" ry="2" />
<text  x="654.15" y="2031.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="403.1" y="2021" width="2.2" height="15.0" fill="rgb(209,50,44)" rx="2" ry="2" />
<text  x="406.07" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="810.5" y="1557" width="0.2" height="15.0" fill="rgb(250,164,40)" rx="2" ry="2" />
<text  x="813.49" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="197.5" y="1941" width="0.2" height="15.0" fill="rgb(226,182,9)" rx="2" ry="2" />
<text  x="200.46" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="402.9" y="1925" width="0.2" height="15.0" fill="rgb(242,175,28)" rx="2" ry="2" />
<text  x="405.87" y="1935.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="687.4" y="1781" width="0.8" height="15.0" fill="rgb(245,31,18)" rx="2" ry="2" />
<text  x="690.45" y="1791.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (2 samples, 0.03%)</title><rect x="525.5" y="1989" width="0.4" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="528.51" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="930.9" y="1925" width="1.2" height="15.0" fill="rgb(227,183,38)" rx="2" ry="2" />
<text  x="933.95" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="111.5" y="309" width="0.2" height="15.0" fill="rgb(252,147,22)" rx="2" ry="2" />
<text  x="114.51" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (5 samples, 0.08%)</title><rect x="1021.3" y="2037" width="1.0" height="15.0" fill="rgb(213,191,12)" rx="2" ry="2" />
<text  x="1024.29" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="357.0" y="1877" width="0.2" height="15.0" fill="rgb(229,127,39)" rx="2" ry="2" />
<text  x="360.00" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="115.3" y="1765" width="0.2" height="15.0" fill="rgb(243,173,26)" rx="2" ry="2" />
<text  x="118.30" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="810.5" y="1621" width="0.2" height="15.0" fill="rgb(222,104,34)" rx="2" ry="2" />
<text  x="813.49" y="1631.5" ></text>
</g>
<g >
<title>tcp_recvmsg (321 samples, 5.43%)</title><rect x="1055.2" y="1941" width="64.0" height="15.0" fill="rgb(209,76,49)" rx="2" ry="2" />
<text  x="1058.19" y="1951.5" >tcp_rec..</text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="696.0" y="2005" width="0.2" height="15.0" fill="rgb(225,193,28)" rx="2" ry="2" />
<text  x="699.02" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (18 samples, 0.30%)</title><rect x="543.9" y="1957" width="3.6" height="15.0" fill="rgb(252,104,18)" rx="2" ry="2" />
<text  x="546.86" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="579.4" y="1989" width="0.2" height="15.0" fill="rgb(251,188,22)" rx="2" ry="2" />
<text  x="582.36" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="785.8" y="1381" width="0.2" height="15.0" fill="rgb(251,141,8)" rx="2" ry="2" />
<text  x="788.76" y="1391.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="660.1" y="1957" width="1.4" height="15.0" fill="rgb(232,192,39)" rx="2" ry="2" />
<text  x="663.13" y="1967.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="617.1" y="1957" width="0.2" height="15.0" fill="rgb(223,187,31)" rx="2" ry="2" />
<text  x="620.05" y="1967.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="846.2" y="1637" width="0.2" height="15.0" fill="rgb(228,210,49)" rx="2" ry="2" />
<text  x="849.19" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="687.4" y="1861" width="0.8" height="15.0" fill="rgb(211,68,22)" rx="2" ry="2" />
<text  x="690.45" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="999.3" y="1989" width="0.4" height="15.0" fill="rgb(215,139,27)" rx="2" ry="2" />
<text  x="1002.35" y="1999.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="387.9" y="1845" width="0.2" height="15.0" fill="rgb(211,91,41)" rx="2" ry="2" />
<text  x="390.91" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="52.5" y="1925" width="0.8" height="15.0" fill="rgb(209,147,20)" rx="2" ry="2" />
<text  x="55.48" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="32.1" y="2005" width="0.2" height="15.0" fill="rgb(215,71,45)" rx="2" ry="2" />
<text  x="35.14" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="484.6" y="1957" width="0.2" height="15.0" fill="rgb(251,61,9)" rx="2" ry="2" />
<text  x="487.63" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (12 samples, 0.20%)</title><rect x="166.0" y="1989" width="2.3" height="15.0" fill="rgb(235,58,45)" rx="2" ry="2" />
<text  x="168.95" y="1999.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::deferredReader (1 samples, 0.02%)</title><rect x="158.6" y="1989" width="0.2" height="15.0" fill="rgb(208,6,17)" rx="2" ry="2" />
<text  x="161.57" y="1999.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="785.8" y="1317" width="0.2" height="15.0" fill="rgb(253,70,7)" rx="2" ry="2" />
<text  x="788.76" y="1327.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="484.6" y="1941" width="0.2" height="15.0" fill="rgb(220,148,17)" rx="2" ry="2" />
<text  x="487.63" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="950.5" y="2005" width="0.2" height="15.0" fill="rgb(218,55,37)" rx="2" ry="2" />
<text  x="953.49" y="2015.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1128.0" y="1589" width="0.2" height="15.0" fill="rgb(231,159,52)" rx="2" ry="2" />
<text  x="1130.98" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="54.3" y="1765" width="0.2" height="15.0" fill="rgb(223,169,7)" rx="2" ry="2" />
<text  x="57.27" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="565.2" y="1813" width="0.4" height="15.0" fill="rgb(213,8,10)" rx="2" ry="2" />
<text  x="568.20" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (127 samples, 2.15%)</title><rect x="582.0" y="2021" width="25.3" height="15.0" fill="rgb(244,70,26)" rx="2" ry="2" />
<text  x="584.95" y="2031.5" >f..</text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (2 samples, 0.03%)</title><rect x="672.3" y="1941" width="0.4" height="15.0" fill="rgb(228,179,48)" rx="2" ry="2" />
<text  x="675.29" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1189.4" y="1765" width="0.2" height="15.0" fill="rgb(228,26,34)" rx="2" ry="2" />
<text  x="1192.40" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="109.1" y="37" width="0.4" height="15.0" fill="rgb(206,12,19)" rx="2" ry="2" />
<text  x="112.11" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="636.4" y="1925" width="0.4" height="15.0" fill="rgb(223,148,37)" rx="2" ry="2" />
<text  x="639.40" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="599.5" y="1653" width="0.2" height="15.0" fill="rgb(218,11,0)" rx="2" ry="2" />
<text  x="602.50" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1135.4" y="1861" width="0.2" height="15.0" fill="rgb(232,39,39)" rx="2" ry="2" />
<text  x="1138.36" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1237" width="19.3" height="15.0" fill="rgb(205,61,40)" rx="2" ry="2" />
<text  x="96.16" y="1247.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (5 samples, 0.08%)</title><rect x="851.4" y="1925" width="1.0" height="15.0" fill="rgb(224,165,36)" rx="2" ry="2" />
<text  x="854.38" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="997.8" y="1669" width="0.2" height="15.0" fill="rgb(217,42,10)" rx="2" ry="2" />
<text  x="1000.75" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (3 samples, 0.05%)</title><rect x="148.2" y="1925" width="0.6" height="15.0" fill="rgb(222,222,39)" rx="2" ry="2" />
<text  x="151.20" y="1935.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="883.1" y="1909" width="0.4" height="15.0" fill="rgb(253,16,45)" rx="2" ry="2" />
<text  x="886.08" y="1919.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="517.1" y="1941" width="0.6" height="15.0" fill="rgb(205,215,18)" rx="2" ry="2" />
<text  x="520.14" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (14 samples, 0.24%)</title><rect x="1094.9" y="1909" width="2.8" height="15.0" fill="rgb(251,50,37)" rx="2" ry="2" />
<text  x="1097.87" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="580.4" y="2021" width="0.2" height="15.0" fill="rgb(231,136,0)" rx="2" ry="2" />
<text  x="583.36" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (6 samples, 0.10%)</title><rect x="1000.1" y="2005" width="1.2" height="15.0" fill="rgb(206,104,29)" rx="2" ry="2" />
<text  x="1003.15" y="2015.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (2 samples, 0.03%)</title><rect x="683.3" y="1925" width="0.4" height="15.0" fill="rgb(225,141,41)" rx="2" ry="2" />
<text  x="686.26" y="1935.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="462.1" y="1957" width="0.2" height="15.0" fill="rgb(250,217,12)" rx="2" ry="2" />
<text  x="465.10" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="93.2" y="1605" width="20.9" height="15.0" fill="rgb(228,32,23)" rx="2" ry="2" />
<text  x="96.16" y="1615.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (71 samples, 1.20%)</title><rect x="494.6" y="1925" width="14.2" height="15.0" fill="rgb(234,152,18)" rx="2" ry="2" />
<text  x="497.60" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (66 samples, 1.12%)</title><rect x="1154.9" y="1989" width="13.2" height="15.0" fill="rgb(236,194,38)" rx="2" ry="2" />
<text  x="1157.90" y="1999.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="116.1" y="1893" width="0.2" height="15.0" fill="rgb(245,38,26)" rx="2" ry="2" />
<text  x="119.09" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="153.8" y="2021" width="0.2" height="15.0" fill="rgb(205,118,12)" rx="2" ry="2" />
<text  x="156.79" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="688.8" y="1861" width="0.2" height="15.0" fill="rgb(225,61,16)" rx="2" ry="2" />
<text  x="691.84" y="1871.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="112.5" y="1333" width="0.4" height="15.0" fill="rgb(205,26,44)" rx="2" ry="2" />
<text  x="115.50" y="1343.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="687.6" y="1749" width="0.6" height="15.0" fill="rgb(224,151,46)" rx="2" ry="2" />
<text  x="690.65" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1118.4" y="1701" width="0.2" height="15.0" fill="rgb(229,50,6)" rx="2" ry="2" />
<text  x="1121.41" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="485.8" y="1989" width="0.4" height="15.0" fill="rgb(217,44,1)" rx="2" ry="2" />
<text  x="488.83" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="697.0" y="1957" width="0.2" height="15.0" fill="rgb(223,133,3)" rx="2" ry="2" />
<text  x="700.02" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="562.6" y="1909" width="1.0" height="15.0" fill="rgb(239,147,50)" rx="2" ry="2" />
<text  x="565.61" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="379.7" y="1717" width="0.2" height="15.0" fill="rgb(228,68,30)" rx="2" ry="2" />
<text  x="382.73" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (2 samples, 0.03%)</title><rect x="854.6" y="1941" width="0.4" height="15.0" fill="rgb(252,17,50)" rx="2" ry="2" />
<text  x="857.57" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (5 samples, 0.08%)</title><rect x="1175.6" y="1989" width="1.0" height="15.0" fill="rgb(235,23,26)" rx="2" ry="2" />
<text  x="1178.64" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="212.2" y="1797" width="0.2" height="15.0" fill="rgb(227,73,22)" rx="2" ry="2" />
<text  x="215.22" y="1807.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="929.2" y="1845" width="0.2" height="15.0" fill="rgb(218,65,33)" rx="2" ry="2" />
<text  x="932.15" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="528.5" y="1973" width="1.8" height="15.0" fill="rgb(241,140,29)" rx="2" ry="2" />
<text  x="531.51" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="357.0" y="1765" width="0.2" height="15.0" fill="rgb(246,181,14)" rx="2" ry="2" />
<text  x="360.00" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="978.6" y="2005" width="0.2" height="15.0" fill="rgb(239,89,14)" rx="2" ry="2" />
<text  x="981.61" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (16 samples, 0.27%)</title><rect x="469.9" y="1925" width="3.2" height="15.0" fill="rgb(246,70,0)" rx="2" ry="2" />
<text  x="472.87" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="936.7" y="1685" width="0.2" height="15.0" fill="rgb(242,43,25)" rx="2" ry="2" />
<text  x="939.73" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="518.5" y="1973" width="0.2" height="15.0" fill="rgb(216,140,18)" rx="2" ry="2" />
<text  x="521.53" y="1983.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="821.1" y="1605" width="0.4" height="15.0" fill="rgb(241,182,5)" rx="2" ry="2" />
<text  x="824.06" y="1615.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="846.2" y="1557" width="0.2" height="15.0" fill="rgb(225,64,46)" rx="2" ry="2" />
<text  x="849.19" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (2 samples, 0.03%)</title><rect x="31.3" y="1973" width="0.4" height="15.0" fill="rgb(239,73,8)" rx="2" ry="2" />
<text  x="34.34" y="1983.5" ></text>
</g>
<g >
<title>security_socket_getpeername (2 samples, 0.03%)</title><rect x="668.3" y="1861" width="0.4" height="15.0" fill="rgb(223,58,39)" rx="2" ry="2" />
<text  x="671.30" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="954.3" y="1989" width="1.8" height="15.0" fill="rgb(222,119,0)" rx="2" ry="2" />
<text  x="957.28" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="133.0" y="1925" width="0.2" height="15.0" fill="rgb(245,176,6)" rx="2" ry="2" />
<text  x="136.05" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="884.7" y="1909" width="0.4" height="15.0" fill="rgb(252,216,10)" rx="2" ry="2" />
<text  x="887.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="379.7" y="1637" width="0.2" height="15.0" fill="rgb(211,32,33)" rx="2" ry="2" />
<text  x="382.73" y="1647.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="818.5" y="1653" width="0.2" height="15.0" fill="rgb(237,168,40)" rx="2" ry="2" />
<text  x="821.47" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1079.7" y="1653" width="0.2" height="15.0" fill="rgb(223,29,34)" rx="2" ry="2" />
<text  x="1082.72" y="1663.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="396.9" y="1685" width="0.2" height="15.0" fill="rgb(234,168,8)" rx="2" ry="2" />
<text  x="399.89" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="111.5" y="325" width="0.2" height="15.0" fill="rgb(220,144,49)" rx="2" ry="2" />
<text  x="114.51" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="527.5" y="1973" width="0.4" height="15.0" fill="rgb(207,61,6)" rx="2" ry="2" />
<text  x="530.51" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="126.5" y="1957" width="0.2" height="15.0" fill="rgb(220,30,39)" rx="2" ry="2" />
<text  x="129.46" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="149.0" y="1941" width="0.2" height="15.0" fill="rgb(215,128,33)" rx="2" ry="2" />
<text  x="152.00" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (18 samples, 0.30%)</title><rect x="704.8" y="1909" width="3.6" height="15.0" fill="rgb(241,56,54)" rx="2" ry="2" />
<text  x="707.80" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="947.3" y="1973" width="0.6" height="15.0" fill="rgb(229,194,15)" rx="2" ry="2" />
<text  x="950.30" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="924.8" y="1989" width="0.2" height="15.0" fill="rgb(205,206,35)" rx="2" ry="2" />
<text  x="927.76" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1150.7" y="1573" width="0.2" height="15.0" fill="rgb(239,117,28)" rx="2" ry="2" />
<text  x="1153.71" y="1583.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="886.9" y="1877" width="0.4" height="15.0" fill="rgb(244,129,41)" rx="2" ry="2" />
<text  x="889.87" y="1887.5" ></text>
</g>
<g >
<title>sys_madvise (1 samples, 0.02%)</title><rect x="1134.6" y="2005" width="0.2" height="15.0" fill="rgb(226,199,49)" rx="2" ry="2" />
<text  x="1137.56" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (1 samples, 0.02%)</title><rect x="163.6" y="2021" width="0.2" height="15.0" fill="rgb(236,165,29)" rx="2" ry="2" />
<text  x="166.56" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19 samples, 0.32%)</title><rect x="611.3" y="1909" width="3.8" height="15.0" fill="rgb(229,15,28)" rx="2" ry="2" />
<text  x="614.27" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="636.8" y="1909" width="0.4" height="15.0" fill="rgb(230,110,43)" rx="2" ry="2" />
<text  x="639.79" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="54.3" y="1893" width="0.2" height="15.0" fill="rgb(226,4,27)" rx="2" ry="2" />
<text  x="57.27" y="1903.5" ></text>
</g>
<g >
<title>sys_accept4 (331 samples, 5.59%)</title><rect x="336.3" y="1989" width="66.0" height="15.0" fill="rgb(253,198,15)" rx="2" ry="2" />
<text  x="339.26" y="1999.5" >sys_acc..</text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="341.0" y="1797" width="0.4" height="15.0" fill="rgb(250,108,44)" rx="2" ry="2" />
<text  x="344.05" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (5 samples, 0.08%)</title><rect x="1152.3" y="2053" width="1.0" height="15.0" fill="rgb(253,20,54)" rx="2" ry="2" />
<text  x="1155.31" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="152.6" y="1733" width="0.2" height="15.0" fill="rgb(212,204,20)" rx="2" ry="2" />
<text  x="155.59" y="1743.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="683.3" y="1877" width="0.4" height="15.0" fill="rgb(230,161,49)" rx="2" ry="2" />
<text  x="686.26" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="152.6" y="1957" width="0.2" height="15.0" fill="rgb(217,123,34)" rx="2" ry="2" />
<text  x="155.59" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="512.4" y="1909" width="0.4" height="15.0" fill="rgb(206,202,29)" rx="2" ry="2" />
<text  x="515.35" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="350.8" y="1829" width="0.2" height="15.0" fill="rgb(217,210,24)" rx="2" ry="2" />
<text  x="353.82" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (22 samples, 0.37%)</title><rect x="208.6" y="1909" width="4.4" height="15.0" fill="rgb(243,130,15)" rx="2" ry="2" />
<text  x="211.63" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="181.5" y="2021" width="0.2" height="15.0" fill="rgb(212,69,4)" rx="2" ry="2" />
<text  x="184.51" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="1147.9" y="2021" width="0.2" height="15.0" fill="rgb(215,18,1)" rx="2" ry="2" />
<text  x="1150.92" y="2031.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="520.5" y="1925" width="0.2" height="15.0" fill="rgb(254,113,54)" rx="2" ry="2" />
<text  x="523.53" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="350.8" y="1877" width="0.2" height="15.0" fill="rgb(245,19,52)" rx="2" ry="2" />
<text  x="353.82" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (7 samples, 0.12%)</title><rect x="1008.5" y="2005" width="1.4" height="15.0" fill="rgb(216,90,15)" rx="2" ry="2" />
<text  x="1011.52" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="858.2" y="1925" width="1.2" height="15.0" fill="rgb(231,147,54)" rx="2" ry="2" />
<text  x="861.16" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="94.6" y="37" width="0.2" height="15.0" fill="rgb(234,207,25)" rx="2" ry="2" />
<text  x="97.56" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1090.7" y="1813" width="0.2" height="15.0" fill="rgb(251,221,48)" rx="2" ry="2" />
<text  x="1093.69" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="610.9" y="1909" width="0.2" height="15.0" fill="rgb(235,108,12)" rx="2" ry="2" />
<text  x="613.87" y="1919.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="379.7" y="1557" width="0.2" height="15.0" fill="rgb(231,10,27)" rx="2" ry="2" />
<text  x="382.73" y="1567.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="14.4" y="1861" width="1.0" height="15.0" fill="rgb(254,108,3)" rx="2" ry="2" />
<text  x="17.39" y="1871.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="618.2" y="1989" width="0.2" height="15.0" fill="rgb(230,184,27)" rx="2" ry="2" />
<text  x="621.25" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="132.2" y="1893" width="0.2" height="15.0" fill="rgb(239,196,7)" rx="2" ry="2" />
<text  x="135.25" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="752.9" y="1749" width="0.2" height="15.0" fill="rgb(246,189,26)" rx="2" ry="2" />
<text  x="755.86" y="1759.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="997.6" y="1909" width="0.2" height="15.0" fill="rgb(242,1,52)" rx="2" ry="2" />
<text  x="1000.55" y="1919.5" ></text>
</g>
<g >
<title>__fdget_raw (5 samples, 0.08%)</title><rect x="562.6" y="1925" width="1.0" height="15.0" fill="rgb(221,96,8)" rx="2" ry="2" />
<text  x="565.61" y="1935.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="846.2" y="1621" width="0.2" height="15.0" fill="rgb(236,5,15)" rx="2" ry="2" />
<text  x="849.19" y="1631.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1148.3" y="1973" width="0.2" height="15.0" fill="rgb(242,93,35)" rx="2" ry="2" />
<text  x="1151.32" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="818.1" y="1653" width="0.2" height="15.0" fill="rgb(208,152,8)" rx="2" ry="2" />
<text  x="821.07" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (5 samples, 0.08%)</title><rect x="865.9" y="1989" width="1.0" height="15.0" fill="rgb(217,69,42)" rx="2" ry="2" />
<text  x="868.93" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="537.3" y="1605" width="0.2" height="15.0" fill="rgb(208,22,51)" rx="2" ry="2" />
<text  x="540.28" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="610.7" y="1797" width="0.2" height="15.0" fill="rgb(254,85,21)" rx="2" ry="2" />
<text  x="613.67" y="1807.5" ></text>
</g>
<g >
<title>ip_queue_xmit (58 samples, 0.98%)</title><rect x="1105.6" y="1861" width="11.6" height="15.0" fill="rgb(249,104,0)" rx="2" ry="2" />
<text  x="1108.64" y="1871.5" ></text>
</g>
<g >
<title>__madvise (1 samples, 0.02%)</title><rect x="1134.6" y="2053" width="0.2" height="15.0" fill="rgb(230,173,0)" rx="2" ry="2" />
<text  x="1137.56" y="2063.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="1090.7" y="1653" width="0.2" height="15.0" fill="rgb(244,74,22)" rx="2" ry="2" />
<text  x="1093.69" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="257.3" y="1797" width="0.2" height="15.0" fill="rgb(220,179,36)" rx="2" ry="2" />
<text  x="260.29" y="1807.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="400.1" y="1957" width="1.4" height="15.0" fill="rgb(250,99,28)" rx="2" ry="2" />
<text  x="403.08" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="565.2" y="1781" width="0.4" height="15.0" fill="rgb(251,190,11)" rx="2" ry="2" />
<text  x="568.20" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="145.2" y="1893" width="1.8" height="15.0" fill="rgb(238,57,18)" rx="2" ry="2" />
<text  x="148.21" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (7 samples, 0.12%)</title><rect x="921.0" y="2037" width="1.4" height="15.0" fill="rgb(246,150,17)" rx="2" ry="2" />
<text  x="923.98" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="661.3" y="1829" width="0.2" height="15.0" fill="rgb(218,7,42)" rx="2" ry="2" />
<text  x="664.32" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="311.3" y="1765" width="0.4" height="15.0" fill="rgb(215,143,8)" rx="2" ry="2" />
<text  x="314.33" y="1775.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="81.0" y="1957" width="0.2" height="15.0" fill="rgb(242,99,48)" rx="2" ry="2" />
<text  x="84.00" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (20 samples, 0.34%)</title><rect x="61.9" y="1957" width="3.9" height="15.0" fill="rgb(251,163,27)" rx="2" ry="2" />
<text  x="64.85" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="565.2" y="1733" width="0.2" height="15.0" fill="rgb(220,93,24)" rx="2" ry="2" />
<text  x="568.20" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (43 samples, 0.73%)</title><rect x="164.8" y="2005" width="8.5" height="15.0" fill="rgb(207,38,13)" rx="2" ry="2" />
<text  x="167.75" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="569.6" y="1973" width="0.2" height="15.0" fill="rgb(248,34,9)" rx="2" ry="2" />
<text  x="572.59" y="1983.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="1089.9" y="1925" width="0.8" height="15.0" fill="rgb(221,77,24)" rx="2" ry="2" />
<text  x="1092.89" y="1935.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="726.3" y="1733" width="0.6" height="15.0" fill="rgb(214,199,29)" rx="2" ry="2" />
<text  x="729.34" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1135.4" y="1685" width="0.2" height="15.0" fill="rgb(232,94,41)" rx="2" ry="2" />
<text  x="1138.36" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (8 samples, 0.14%)</title><rect x="42.5" y="1909" width="1.6" height="15.0" fill="rgb(222,63,41)" rx="2" ry="2" />
<text  x="45.51" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (72 samples, 1.22%)</title><rect x="926.6" y="1989" width="14.3" height="15.0" fill="rgb(226,89,25)" rx="2" ry="2" />
<text  x="929.56" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="846.2" y="1749" width="0.6" height="15.0" fill="rgb(206,72,23)" rx="2" ry="2" />
<text  x="849.19" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="873.7" y="1765" width="0.2" height="15.0" fill="rgb(236,41,14)" rx="2" ry="2" />
<text  x="876.71" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="725.9" y="1717" width="0.2" height="15.0" fill="rgb(234,79,26)" rx="2" ry="2" />
<text  x="728.94" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="402.7" y="1989" width="0.4" height="15.0" fill="rgb(254,29,42)" rx="2" ry="2" />
<text  x="405.67" y="1999.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="644.4" y="1989" width="0.6" height="15.0" fill="rgb(234,159,26)" rx="2" ry="2" />
<text  x="647.37" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="851.8" y="1861" width="0.2" height="15.0" fill="rgb(236,88,29)" rx="2" ry="2" />
<text  x="854.77" y="1871.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="244.3" y="1877" width="0.2" height="15.0" fill="rgb(241,120,4)" rx="2" ry="2" />
<text  x="247.32" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (115 samples, 1.94%)</title><rect x="93.0" y="1861" width="22.9" height="15.0" fill="rgb(213,225,52)" rx="2" ry="2" />
<text  x="95.96" y="1871.5" >[..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="563.6" y="1925" width="0.2" height="15.0" fill="rgb(249,8,49)" rx="2" ry="2" />
<text  x="566.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="936.7" y="1669" width="0.2" height="15.0" fill="rgb(214,34,33)" rx="2" ry="2" />
<text  x="939.73" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1105.0" y="1813" width="0.2" height="15.0" fill="rgb(208,0,43)" rx="2" ry="2" />
<text  x="1108.04" y="1823.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="766.6" y="1685" width="0.2" height="15.0" fill="rgb(246,115,31)" rx="2" ry="2" />
<text  x="769.62" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (1 samples, 0.02%)</title><rect x="568.6" y="2005" width="0.2" height="15.0" fill="rgb(238,176,7)" rx="2" ry="2" />
<text  x="571.59" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="747.5" y="1445" width="0.2" height="15.0" fill="rgb(207,22,1)" rx="2" ry="2" />
<text  x="750.48" y="1455.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="835.0" y="1605" width="0.2" height="15.0" fill="rgb(254,217,42)" rx="2" ry="2" />
<text  x="838.02" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="492.8" y="1957" width="0.2" height="15.0" fill="rgb(232,35,13)" rx="2" ry="2" />
<text  x="495.81" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="123.7" y="1909" width="0.2" height="15.0" fill="rgb(216,77,35)" rx="2" ry="2" />
<text  x="126.67" y="1919.5" ></text>
</g>
<g >
<title>__fdget (21 samples, 0.35%)</title><rect x="1122.2" y="1957" width="4.2" height="15.0" fill="rgb(224,21,40)" rx="2" ry="2" />
<text  x="1125.20" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="903.6" y="1973" width="0.2" height="15.0" fill="rgb(235,222,35)" rx="2" ry="2" />
<text  x="906.63" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="111.7" y="37" width="0.2" height="15.0" fill="rgb(211,54,48)" rx="2" ry="2" />
<text  x="114.71" y="47.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="901.0" y="2005" width="0.2" height="15.0" fill="rgb(230,130,46)" rx="2" ry="2" />
<text  x="904.03" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (83 samples, 1.40%)</title><rect x="586.9" y="1909" width="16.6" height="15.0" fill="rgb(211,7,32)" rx="2" ry="2" />
<text  x="589.94" y="1919.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="551.0" y="1941" width="0.2" height="15.0" fill="rgb(218,165,49)" rx="2" ry="2" />
<text  x="554.04" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (125 samples, 2.11%)</title><rect x="582.0" y="1989" width="24.9" height="15.0" fill="rgb(232,66,29)" rx="2" ry="2" />
<text  x="584.95" y="1999.5" >f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="219.0" y="2021" width="0.2" height="15.0" fill="rgb(238,153,20)" rx="2" ry="2" />
<text  x="222.00" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="450.9" y="1973" width="0.2" height="15.0" fill="rgb(231,95,24)" rx="2" ry="2" />
<text  x="453.93" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="121.3" y="1941" width="0.2" height="15.0" fill="rgb(215,153,27)" rx="2" ry="2" />
<text  x="124.28" y="1951.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (32 samples, 0.54%)</title><rect x="827.8" y="1717" width="6.4" height="15.0" fill="rgb(237,221,27)" rx="2" ry="2" />
<text  x="830.84" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (3 samples, 0.05%)</title><rect x="572.8" y="1973" width="0.6" height="15.0" fill="rgb(249,102,30)" rx="2" ry="2" />
<text  x="575.78" y="1983.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="111.7" y="101" width="0.2" height="15.0" fill="rgb(206,74,8)" rx="2" ry="2" />
<text  x="114.71" y="111.5" ></text>
</g>
<g >
<title>kfree_skbmem (26 samples, 0.44%)</title><rect x="1067.4" y="1909" width="5.1" height="15.0" fill="rgb(244,83,29)" rx="2" ry="2" />
<text  x="1070.35" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="886.9" y="1861" width="0.2" height="15.0" fill="rgb(235,214,36)" rx="2" ry="2" />
<text  x="889.87" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="111.1" y="213" width="0.2" height="15.0" fill="rgb(209,103,11)" rx="2" ry="2" />
<text  x="114.11" y="223.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="580.0" y="1989" width="0.2" height="15.0" fill="rgb(237,152,14)" rx="2" ry="2" />
<text  x="582.96" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="955.9" y="1973" width="0.2" height="15.0" fill="rgb(230,79,28)" rx="2" ry="2" />
<text  x="958.87" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="130.5" y="1989" width="0.4" height="15.0" fill="rgb(246,180,5)" rx="2" ry="2" />
<text  x="133.45" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="983.2" y="1957" width="0.2" height="15.0" fill="rgb(248,199,25)" rx="2" ry="2" />
<text  x="986.20" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="111.7" y="181" width="0.2" height="15.0" fill="rgb(222,147,28)" rx="2" ry="2" />
<text  x="114.71" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="547.3" y="1941" width="0.2" height="15.0" fill="rgb(254,195,37)" rx="2" ry="2" />
<text  x="550.25" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="273.4" y="1589" width="0.2" height="15.0" fill="rgb(247,186,38)" rx="2" ry="2" />
<text  x="276.44" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="894.3" y="1941" width="0.2" height="15.0" fill="rgb(242,206,32)" rx="2" ry="2" />
<text  x="897.25" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="1022.7" y="2021" width="2.8" height="15.0" fill="rgb(220,211,49)" rx="2" ry="2" />
<text  x="1025.68" y="2031.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="273.4" y="1541" width="0.2" height="15.0" fill="rgb(249,152,7)" rx="2" ry="2" />
<text  x="276.44" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1134.6" y="2037" width="0.2" height="15.0" fill="rgb(240,33,14)" rx="2" ry="2" />
<text  x="1137.56" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="210.6" y="1845" width="0.4" height="15.0" fill="rgb(229,142,54)" rx="2" ry="2" />
<text  x="213.62" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1128.0" y="1861" width="0.2" height="15.0" fill="rgb(213,149,49)" rx="2" ry="2" />
<text  x="1130.98" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="111.1" y="293" width="0.2" height="15.0" fill="rgb(212,180,31)" rx="2" ry="2" />
<text  x="114.11" y="303.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="625.4" y="2005" width="0.2" height="15.0" fill="rgb(205,170,17)" rx="2" ry="2" />
<text  x="628.43" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="74.2" y="1829" width="0.2" height="15.0" fill="rgb(247,38,1)" rx="2" ry="2" />
<text  x="77.21" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="106.9" y="37" width="0.2" height="15.0" fill="rgb(216,45,42)" rx="2" ry="2" />
<text  x="109.92" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.03%)</title><rect x="70.6" y="1957" width="0.4" height="15.0" fill="rgb(216,174,6)" rx="2" ry="2" />
<text  x="73.63" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1135.4" y="2053" width="0.2" height="15.0" fill="rgb(221,7,19)" rx="2" ry="2" />
<text  x="1138.36" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="131.1" y="1925" width="0.2" height="15.0" fill="rgb(205,154,26)" rx="2" ry="2" />
<text  x="134.05" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (30 samples, 0.51%)</title><rect x="645.4" y="2037" width="6.0" height="15.0" fill="rgb(237,54,45)" rx="2" ry="2" />
<text  x="648.37" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (10 samples, 0.17%)</title><rect x="620.4" y="2037" width="2.0" height="15.0" fill="rgb(219,136,21)" rx="2" ry="2" />
<text  x="623.44" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1049.6" y="1765" width="0.2" height="15.0" fill="rgb(223,101,12)" rx="2" ry="2" />
<text  x="1052.60" y="1775.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="585.7" y="1893" width="0.2" height="15.0" fill="rgb(254,200,25)" rx="2" ry="2" />
<text  x="588.74" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="47.9" y="1957" width="0.2" height="15.0" fill="rgb(246,75,3)" rx="2" ry="2" />
<text  x="50.89" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="160.6" y="1893" width="0.2" height="15.0" fill="rgb(246,131,42)" rx="2" ry="2" />
<text  x="163.57" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="217.8" y="1909" width="0.2" height="15.0" fill="rgb(224,141,25)" rx="2" ry="2" />
<text  x="220.80" y="1919.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="302.8" y="1829" width="0.2" height="15.0" fill="rgb(242,137,19)" rx="2" ry="2" />
<text  x="305.76" y="1839.5" ></text>
</g>
<g >
<title>ipv4_mtu (8 samples, 0.14%)</title><rect x="826.2" y="1717" width="1.6" height="15.0" fill="rgb(241,80,44)" rx="2" ry="2" />
<text  x="829.25" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="77.6" y="1893" width="0.2" height="15.0" fill="rgb(235,53,16)" rx="2" ry="2" />
<text  x="80.61" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="862.7" y="1877" width="0.6" height="15.0" fill="rgb(217,48,7)" rx="2" ry="2" />
<text  x="865.74" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="110.9" y="213" width="0.2" height="15.0" fill="rgb(228,124,37)" rx="2" ry="2" />
<text  x="113.91" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 0.22%)</title><rect x="11.4" y="1893" width="2.6" height="15.0" fill="rgb(231,40,39)" rx="2" ry="2" />
<text  x="14.40" y="1903.5" ></text>
</g>
<g >
<title>dput.part.26 (83 samples, 1.40%)</title><rect x="730.9" y="1781" width="16.6" height="15.0" fill="rgb(254,108,47)" rx="2" ry="2" />
<text  x="733.92" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="916.2" y="1973" width="0.4" height="15.0" fill="rgb(207,63,9)" rx="2" ry="2" />
<text  x="919.19" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="970.4" y="1893" width="0.2" height="15.0" fill="rgb(252,137,0)" rx="2" ry="2" />
<text  x="973.43" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (4 samples, 0.07%)</title><rect x="278.8" y="1685" width="0.8" height="15.0" fill="rgb(240,132,54)" rx="2" ry="2" />
<text  x="281.83" y="1695.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::AsyncMcClientImpl::writeSuccess (1 samples, 0.02%)</title><rect x="1147.3" y="2021" width="0.2" height="15.0" fill="rgb(218,61,44)" rx="2" ry="2" />
<text  x="1150.32" y="2031.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="924.8" y="1685" width="0.2" height="15.0" fill="rgb(234,43,32)" rx="2" ry="2" />
<text  x="927.76" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="177.9" y="1925" width="0.2" height="15.0" fill="rgb(237,88,37)" rx="2" ry="2" />
<text  x="180.92" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (28 samples, 0.47%)</title><rect x="645.6" y="2021" width="5.6" height="15.0" fill="rgb(250,140,17)" rx="2" ry="2" />
<text  x="648.57" y="2031.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="147.6" y="1909" width="0.2" height="15.0" fill="rgb(208,35,41)" rx="2" ry="2" />
<text  x="150.60" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="222.0" y="2021" width="0.2" height="15.0" fill="rgb(222,219,20)" rx="2" ry="2" />
<text  x="224.99" y="2031.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="523.3" y="1957" width="0.2" height="15.0" fill="rgb(213,11,38)" rx="2" ry="2" />
<text  x="526.32" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1017.1" y="1797" width="0.4" height="15.0" fill="rgb(239,154,15)" rx="2" ry="2" />
<text  x="1020.10" y="1807.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="931.3" y="1893" width="0.6" height="15.0" fill="rgb(232,143,1)" rx="2" ry="2" />
<text  x="934.35" y="1903.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 0.02%)</title><rect x="760.8" y="1733" width="0.2" height="15.0" fill="rgb(209,123,40)" rx="2" ry="2" />
<text  x="763.84" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="725.3" y="1845" width="0.2" height="15.0" fill="rgb(227,18,5)" rx="2" ry="2" />
<text  x="728.34" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="92.2" y="1845" width="0.2" height="15.0" fill="rgb(245,70,39)" rx="2" ry="2" />
<text  x="95.16" y="1855.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="513.3" y="1957" width="0.2" height="15.0" fill="rgb(253,28,10)" rx="2" ry="2" />
<text  x="516.35" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1105.0" y="1749" width="0.2" height="15.0" fill="rgb(224,105,51)" rx="2" ry="2" />
<text  x="1108.04" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="537.3" y="1845" width="0.2" height="15.0" fill="rgb(235,55,18)" rx="2" ry="2" />
<text  x="540.28" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="973.4" y="2021" width="0.4" height="15.0" fill="rgb(238,213,11)" rx="2" ry="2" />
<text  x="976.42" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="747.9" y="1605" width="0.4" height="15.0" fill="rgb(208,45,39)" rx="2" ry="2" />
<text  x="750.87" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="135.8" y="1829" width="0.2" height="15.0" fill="rgb(241,176,20)" rx="2" ry="2" />
<text  x="138.84" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="956.5" y="2021" width="0.2" height="15.0" fill="rgb(232,180,51)" rx="2" ry="2" />
<text  x="959.47" y="2031.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r11 (1 samples, 0.02%)</title><rect x="562.4" y="1861" width="0.2" height="15.0" fill="rgb(234,134,35)" rx="2" ry="2" />
<text  x="565.41" y="1871.5" ></text>
</g>
<g >
<title>sys_recvfrom (4 samples, 0.07%)</title><rect x="1126.6" y="2021" width="0.8" height="15.0" fill="rgb(221,70,30)" rx="2" ry="2" />
<text  x="1129.58" y="2031.5" ></text>
</g>
<g >
<title>up_write (12 samples, 0.20%)</title><rect x="838.0" y="1765" width="2.4" height="15.0" fill="rgb(207,98,38)" rx="2" ry="2" />
<text  x="841.01" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (11 samples, 0.19%)</title><rect x="41.9" y="1925" width="2.2" height="15.0" fill="rgb(248,161,14)" rx="2" ry="2" />
<text  x="44.91" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (41 samples, 0.69%)</title><rect x="940.9" y="2005" width="8.2" height="15.0" fill="rgb(208,186,46)" rx="2" ry="2" />
<text  x="943.92" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (3 samples, 0.05%)</title><rect x="920.4" y="2005" width="0.6" height="15.0" fill="rgb(222,212,51)" rx="2" ry="2" />
<text  x="923.38" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1101.7" y="1925" width="0.2" height="15.0" fill="rgb(243,13,20)" rx="2" ry="2" />
<text  x="1104.65" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="570.8" y="1989" width="0.2" height="15.0" fill="rgb(234,102,43)" rx="2" ry="2" />
<text  x="573.78" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="924.8" y="1797" width="0.2" height="15.0" fill="rgb(238,143,52)" rx="2" ry="2" />
<text  x="927.76" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="1116.6" y="1765" width="0.6" height="15.0" fill="rgb(212,190,48)" rx="2" ry="2" />
<text  x="1119.61" y="1775.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="863.3" y="1893" width="0.2" height="15.0" fill="rgb(238,28,4)" rx="2" ry="2" />
<text  x="866.34" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="110.9" y="85" width="0.2" height="15.0" fill="rgb(205,179,1)" rx="2" ry="2" />
<text  x="113.91" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="141.6" y="1893" width="0.4" height="15.0" fill="rgb(241,110,44)" rx="2" ry="2" />
<text  x="144.62" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (10 samples, 0.17%)</title><rect x="514.9" y="1989" width="2.0" height="15.0" fill="rgb(245,3,9)" rx="2" ry="2" />
<text  x="517.95" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="1088.3" y="1925" width="1.2" height="15.0" fill="rgb(215,222,30)" rx="2" ry="2" />
<text  x="1091.29" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="139.0" y="1877" width="0.2" height="15.0" fill="rgb(237,191,18)" rx="2" ry="2" />
<text  x="142.03" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="379.7" y="1765" width="0.2" height="15.0" fill="rgb(222,182,8)" rx="2" ry="2" />
<text  x="382.73" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.6" y="1957" width="0.2" height="15.0" fill="rgb(216,65,1)" rx="2" ry="2" />
<text  x="163.57" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="924.4" y="1989" width="0.4" height="15.0" fill="rgb(246,86,27)" rx="2" ry="2" />
<text  x="927.37" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="77.6" y="1733" width="0.2" height="15.0" fill="rgb(230,143,18)" rx="2" ry="2" />
<text  x="80.61" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1150.5" y="1941" width="0.2" height="15.0" fill="rgb(247,160,38)" rx="2" ry="2" />
<text  x="1153.51" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="997.8" y="1925" width="0.2" height="15.0" fill="rgb(205,182,0)" rx="2" ry="2" />
<text  x="1000.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="134.2" y="1941" width="0.2" height="15.0" fill="rgb(224,166,47)" rx="2" ry="2" />
<text  x="137.24" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (6 samples, 0.10%)</title><rect x="274.2" y="1509" width="1.2" height="15.0" fill="rgb(211,52,18)" rx="2" ry="2" />
<text  x="277.24" y="1519.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (13 samples, 0.22%)</title><rect x="927.0" y="1973" width="2.6" height="15.0" fill="rgb(226,132,15)" rx="2" ry="2" />
<text  x="929.96" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="111.7" y="229" width="0.2" height="15.0" fill="rgb(224,166,36)" rx="2" ry="2" />
<text  x="114.71" y="239.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1154.9" y="1973" width="0.2" height="15.0" fill="rgb(234,72,46)" rx="2" ry="2" />
<text  x="1157.90" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="365.0" y="1893" width="0.2" height="15.0" fill="rgb(217,155,40)" rx="2" ry="2" />
<text  x="367.98" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="93.0" y="1685" width="0.2" height="15.0" fill="rgb(237,50,13)" rx="2" ry="2" />
<text  x="95.96" y="1695.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="359.2" y="1925" width="0.2" height="15.0" fill="rgb(207,140,50)" rx="2" ry="2" />
<text  x="362.19" y="1935.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="815.7" y="1653" width="0.6" height="15.0" fill="rgb(254,180,26)" rx="2" ry="2" />
<text  x="818.68" y="1663.5" ></text>
</g>
<g >
<title>inet_sendmsg (373 samples, 6.30%)</title><rect x="237.5" y="1925" width="74.4" height="15.0" fill="rgb(214,164,0)" rx="2" ry="2" />
<text  x="240.54" y="1935.5" >inet_sen..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="482.8" y="1749" width="0.2" height="15.0" fill="rgb(211,82,28)" rx="2" ry="2" />
<text  x="485.84" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (4 samples, 0.07%)</title><rect x="156.0" y="2021" width="0.8" height="15.0" fill="rgb(243,216,36)" rx="2" ry="2" />
<text  x="158.98" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1049.6" y="1749" width="0.2" height="15.0" fill="rgb(226,139,7)" rx="2" ry="2" />
<text  x="1052.60" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="164.0" y="2021" width="0.4" height="15.0" fill="rgb(205,228,34)" rx="2" ry="2" />
<text  x="166.96" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="316.9" y="1957" width="0.4" height="15.0" fill="rgb(208,57,6)" rx="2" ry="2" />
<text  x="319.92" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="341.0" y="1909" width="0.4" height="15.0" fill="rgb(235,126,14)" rx="2" ry="2" />
<text  x="344.05" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::recv (6 samples, 0.10%)</title><rect x="48.1" y="1957" width="1.2" height="15.0" fill="rgb(210,207,53)" rx="2" ry="2" />
<text  x="51.09" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="988.2" y="1749" width="0.2" height="15.0" fill="rgb(213,41,4)" rx="2" ry="2" />
<text  x="991.18" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (6 samples, 0.10%)</title><rect x="984.8" y="1909" width="1.2" height="15.0" fill="rgb(223,97,6)" rx="2" ry="2" />
<text  x="987.79" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="991.8" y="2005" width="0.2" height="15.0" fill="rgb(215,156,33)" rx="2" ry="2" />
<text  x="994.77" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="565" width="18.5" height="15.0" fill="rgb(213,66,37)" rx="2" ry="2" />
<text  x="96.36" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="894.5" y="1925" width="0.5" height="15.0" fill="rgb(240,66,10)" rx="2" ry="2" />
<text  x="897.45" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (10 samples, 0.17%)</title><rect x="311.9" y="1909" width="2.0" height="15.0" fill="rgb(206,97,44)" rx="2" ry="2" />
<text  x="314.93" y="1919.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="603.7" y="1925" width="3.2" height="15.0" fill="rgb(216,137,40)" rx="2" ry="2" />
<text  x="606.69" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="450.7" y="1877" width="0.2" height="15.0" fill="rgb(237,104,34)" rx="2" ry="2" />
<text  x="453.73" y="1887.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="910.0" y="1973" width="0.2" height="15.0" fill="rgb(228,215,32)" rx="2" ry="2" />
<text  x="913.01" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="814.7" y="1669" width="0.6" height="15.0" fill="rgb(224,199,34)" rx="2" ry="2" />
<text  x="817.68" y="1679.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="262.9" y="1829" width="0.4" height="15.0" fill="rgb(221,2,24)" rx="2" ry="2" />
<text  x="265.87" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (66 samples, 1.12%)</title><rect x="1154.9" y="2053" width="13.2" height="15.0" fill="rgb(231,36,33)" rx="2" ry="2" />
<text  x="1157.90" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="482.8" y="1813" width="0.2" height="15.0" fill="rgb(214,107,11)" rx="2" ry="2" />
<text  x="485.84" y="1823.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (2 samples, 0.03%)</title><rect x="1089.5" y="1925" width="0.4" height="15.0" fill="rgb(205,166,39)" rx="2" ry="2" />
<text  x="1092.49" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="239.1" y="1877" width="1.2" height="15.0" fill="rgb(252,107,17)" rx="2" ry="2" />
<text  x="242.14" y="1887.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="613.7" y="1845" width="0.2" height="15.0" fill="rgb(235,99,50)" rx="2" ry="2" />
<text  x="616.66" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1017.1" y="2005" width="0.4" height="15.0" fill="rgb(243,151,12)" rx="2" ry="2" />
<text  x="1020.10" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="935.9" y="1877" width="0.2" height="15.0" fill="rgb(253,136,42)" rx="2" ry="2" />
<text  x="938.93" y="1887.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="610.7" y="1445" width="0.2" height="15.0" fill="rgb(239,89,44)" rx="2" ry="2" />
<text  x="613.67" y="1455.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="512.4" y="1973" width="1.1" height="15.0" fill="rgb(244,16,35)" rx="2" ry="2" />
<text  x="515.35" y="1983.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (8 samples, 0.14%)</title><rect x="1098.1" y="1893" width="1.6" height="15.0" fill="rgb(238,193,36)" rx="2" ry="2" />
<text  x="1101.06" y="1903.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="614.3" y="1861" width="0.2" height="15.0" fill="rgb(214,31,40)" rx="2" ry="2" />
<text  x="617.26" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.2" y="1877" width="0.2" height="15.0" fill="rgb(247,119,27)" rx="2" ry="2" />
<text  x="690.25" y="1887.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="891.5" y="1877" width="0.2" height="15.0" fill="rgb(236,162,16)" rx="2" ry="2" />
<text  x="894.46" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1180.4" y="2021" width="0.2" height="15.0" fill="rgb(252,182,31)" rx="2" ry="2" />
<text  x="1183.43" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="252.5" y="1573" width="0.2" height="15.0" fill="rgb(230,78,8)" rx="2" ry="2" />
<text  x="255.50" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="121.3" y="1957" width="0.2" height="15.0" fill="rgb(210,130,52)" rx="2" ry="2" />
<text  x="124.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1017.1" y="1749" width="0.2" height="15.0" fill="rgb(234,62,27)" rx="2" ry="2" />
<text  x="1020.10" y="1759.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="214.8" y="1877" width="0.2" height="15.0" fill="rgb(209,129,42)" rx="2" ry="2" />
<text  x="217.81" y="1887.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (15 samples, 0.25%)</title><rect x="11.2" y="2069" width="3.0" height="15.0" fill="rgb(220,40,28)" rx="2" ry="2" />
<text  x="14.20" y="2079.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="852.8" y="1893" width="0.2" height="15.0" fill="rgb(216,164,39)" rx="2" ry="2" />
<text  x="855.77" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="255.1" y="1845" width="0.2" height="15.0" fill="rgb(232,193,5)" rx="2" ry="2" />
<text  x="258.09" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="997.8" y="1733" width="0.2" height="15.0" fill="rgb(228,39,42)" rx="2" ry="2" />
<text  x="1000.75" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1150.7" y="1845" width="0.2" height="15.0" fill="rgb(229,150,22)" rx="2" ry="2" />
<text  x="1153.71" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="611.1" y="1909" width="0.2" height="15.0" fill="rgb(224,30,53)" rx="2" ry="2" />
<text  x="614.07" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="537.3" y="1813" width="0.2" height="15.0" fill="rgb(242,62,8)" rx="2" ry="2" />
<text  x="540.28" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="785.6" y="1461" width="0.4" height="15.0" fill="rgb(220,28,48)" rx="2" ry="2" />
<text  x="788.57" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="852.2" y="1893" width="0.2" height="15.0" fill="rgb(251,49,8)" rx="2" ry="2" />
<text  x="855.17" y="1903.5" ></text>
</g>
<g >
<title>inode_init_once (1 samples, 0.02%)</title><rect x="376.9" y="1813" width="0.2" height="15.0" fill="rgb(248,42,45)" rx="2" ry="2" />
<text  x="379.94" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="484.6" y="1797" width="0.2" height="15.0" fill="rgb(243,3,21)" rx="2" ry="2" />
<text  x="487.63" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="82.6" y="1973" width="0.2" height="15.0" fill="rgb(230,127,22)" rx="2" ry="2" />
<text  x="85.59" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="757" width="18.5" height="15.0" fill="rgb(248,183,28)" rx="2" ry="2" />
<text  x="96.36" y="767.5" ></text>
</g>
<g >
<title>do_fcntl (2 samples, 0.03%)</title><rect x="563.8" y="1925" width="0.4" height="15.0" fill="rgb(239,54,23)" rx="2" ry="2" />
<text  x="566.80" y="1935.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="859.2" y="1573" width="0.2" height="15.0" fill="rgb(209,95,12)" rx="2" ry="2" />
<text  x="862.15" y="1583.5" ></text>
</g>
<g >
<title>inet_accept (125 samples, 2.11%)</title><rect x="340.4" y="1957" width="25.0" height="15.0" fill="rgb(205,147,10)" rx="2" ry="2" />
<text  x="343.45" y="1967.5" >i..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1079.5" y="1781" width="0.2" height="15.0" fill="rgb(241,83,0)" rx="2" ry="2" />
<text  x="1082.52" y="1791.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1005.7" y="1973" width="0.2" height="15.0" fill="rgb(248,117,40)" rx="2" ry="2" />
<text  x="1008.73" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="135.2" y="1909" width="1.0" height="15.0" fill="rgb(224,6,2)" rx="2" ry="2" />
<text  x="138.24" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="700.2" y="1973" width="0.2" height="15.0" fill="rgb(215,64,9)" rx="2" ry="2" />
<text  x="703.21" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.78%)</title><rect x="555.8" y="1973" width="9.2" height="15.0" fill="rgb(239,30,1)" rx="2" ry="2" />
<text  x="558.83" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (3 samples, 0.05%)</title><rect x="268.5" y="1765" width="0.6" height="15.0" fill="rgb(226,194,47)" rx="2" ry="2" />
<text  x="271.46" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="111.5" y="293" width="0.2" height="15.0" fill="rgb(237,152,14)" rx="2" ry="2" />
<text  x="114.51" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="56.1" y="1845" width="0.2" height="15.0" fill="rgb(206,173,22)" rx="2" ry="2" />
<text  x="59.07" y="1855.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="741.1" y="1653" width="0.2" height="15.0" fill="rgb(237,205,53)" rx="2" ry="2" />
<text  x="744.09" y="1663.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="111.5" y="69" width="0.2" height="15.0" fill="rgb(212,183,50)" rx="2" ry="2" />
<text  x="114.51" y="79.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="114.1" y="1605" width="0.2" height="15.0" fill="rgb(235,150,17)" rx="2" ry="2" />
<text  x="117.10" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (6 samples, 0.10%)</title><rect x="46.7" y="1957" width="1.2" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="49.69" y="1967.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="181.7" y="2037" width="0.4" height="15.0" fill="rgb(238,14,25)" rx="2" ry="2" />
<text  x="184.71" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="766.2" y="1669" width="0.2" height="15.0" fill="rgb(213,195,5)" rx="2" ry="2" />
<text  x="769.22" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="681.9" y="1829" width="0.2" height="15.0" fill="rgb(246,149,40)" rx="2" ry="2" />
<text  x="684.86" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.0" y="1589" width="0.2" height="15.0" fill="rgb(243,105,24)" rx="2" ry="2" />
<text  x="844.01" y="1599.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1117.0" y="1669" width="0.2" height="15.0" fill="rgb(246,103,8)" rx="2" ry="2" />
<text  x="1120.01" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="538.3" y="1861" width="0.2" height="15.0" fill="rgb(227,47,34)" rx="2" ry="2" />
<text  x="541.28" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="110.5" y="37" width="0.2" height="15.0" fill="rgb(250,1,21)" rx="2" ry="2" />
<text  x="113.51" y="47.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="893.1" y="1877" width="0.8" height="15.0" fill="rgb(241,64,21)" rx="2" ry="2" />
<text  x="896.06" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="938.9" y="1941" width="0.2" height="15.0" fill="rgb(216,76,2)" rx="2" ry="2" />
<text  x="941.92" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="615.7" y="1829" width="0.8" height="15.0" fill="rgb(245,77,9)" rx="2" ry="2" />
<text  x="618.65" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="956.5" y="2005" width="0.2" height="15.0" fill="rgb(221,100,0)" rx="2" ry="2" />
<text  x="959.47" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="785.4" y="1509" width="0.6" height="15.0" fill="rgb(213,5,30)" rx="2" ry="2" />
<text  x="788.37" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="469.5" y="1765" width="0.2" height="15.0" fill="rgb(228,204,47)" rx="2" ry="2" />
<text  x="472.48" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="997.8" y="1797" width="0.2" height="15.0" fill="rgb(229,182,40)" rx="2" ry="2" />
<text  x="1000.75" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="915.8" y="1973" width="0.2" height="15.0" fill="rgb(219,173,2)" rx="2" ry="2" />
<text  x="918.79" y="1983.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (4 samples, 0.07%)</title><rect x="743.3" y="1701" width="0.8" height="15.0" fill="rgb(237,153,19)" rx="2" ry="2" />
<text  x="746.29" y="1711.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="527.1" y="2005" width="0.2" height="15.0" fill="rgb(214,184,27)" rx="2" ry="2" />
<text  x="530.11" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::Data (1 samples, 0.02%)</title><rect x="570.0" y="2005" width="0.2" height="15.0" fill="rgb(213,112,1)" rx="2" ry="2" />
<text  x="572.99" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="128.5" y="1989" width="0.2" height="15.0" fill="rgb(210,183,22)" rx="2" ry="2" />
<text  x="131.46" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="927.8" y="1925" width="0.4" height="15.0" fill="rgb(222,78,15)" rx="2" ry="2" />
<text  x="930.76" y="1935.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="114.3" y="1637" width="0.2" height="15.0" fill="rgb(230,89,40)" rx="2" ry="2" />
<text  x="117.30" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="921.0" y="2005" width="1.4" height="15.0" fill="rgb(241,96,17)" rx="2" ry="2" />
<text  x="923.98" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="873.9" y="1989" width="0.2" height="15.0" fill="rgb(246,86,18)" rx="2" ry="2" />
<text  x="876.91" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (52 samples, 0.88%)</title><rect x="1106.2" y="1717" width="10.4" height="15.0" fill="rgb(241,80,45)" rx="2" ry="2" />
<text  x="1109.24" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="661.3" y="1797" width="0.2" height="15.0" fill="rgb(235,185,24)" rx="2" ry="2" />
<text  x="664.32" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="87.0" y="1941" width="0.2" height="15.0" fill="rgb(250,172,48)" rx="2" ry="2" />
<text  x="89.98" y="1951.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1138.1" y="2053" width="0.2" height="15.0" fill="rgb(220,46,28)" rx="2" ry="2" />
<text  x="1141.15" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="146.2" y="1877" width="0.8" height="15.0" fill="rgb(248,116,38)" rx="2" ry="2" />
<text  x="149.21" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="538.3" y="1781" width="0.2" height="15.0" fill="rgb(222,113,45)" rx="2" ry="2" />
<text  x="541.28" y="1791.5" ></text>
</g>
<g >
<title>__libc_fcntl (3 samples, 0.05%)</title><rect x="219.0" y="2037" width="0.6" height="15.0" fill="rgb(243,134,52)" rx="2" ry="2" />
<text  x="222.00" y="2047.5" ></text>
</g>
<g >
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="1116.6" y="1733" width="0.6" height="15.0" fill="rgb(244,172,43)" rx="2" ry="2" />
<text  x="1119.61" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="537.3" y="1637" width="0.2" height="15.0" fill="rgb(232,47,8)" rx="2" ry="2" />
<text  x="540.28" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::size (1 samples, 0.02%)</title><rect x="25.2" y="1973" width="0.2" height="15.0" fill="rgb(208,203,29)" rx="2" ry="2" />
<text  x="28.16" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="726.1" y="1733" width="0.2" height="15.0" fill="rgb(233,51,0)" rx="2" ry="2" />
<text  x="729.14" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="610.7" y="1637" width="0.2" height="15.0" fill="rgb(247,17,3)" rx="2" ry="2" />
<text  x="613.67" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="562.4" y="1877" width="0.2" height="15.0" fill="rgb(249,91,26)" rx="2" ry="2" />
<text  x="565.41" y="1887.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="810.3" y="1653" width="0.2" height="15.0" fill="rgb(232,202,28)" rx="2" ry="2" />
<text  x="813.29" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="111.1" y="117" width="0.2" height="15.0" fill="rgb(251,112,19)" rx="2" ry="2" />
<text  x="114.11" y="127.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="851.8" y="1829" width="0.2" height="15.0" fill="rgb(238,151,37)" rx="2" ry="2" />
<text  x="854.77" y="1839.5" ></text>
</g>
<g >
<title>put_cpu_partial (4 samples, 0.07%)</title><rect x="1071.3" y="1861" width="0.8" height="15.0" fill="rgb(246,33,25)" rx="2" ry="2" />
<text  x="1074.34" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="857.4" y="1893" width="0.6" height="15.0" fill="rgb(209,64,38)" rx="2" ry="2" />
<text  x="860.36" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="485.8" y="1765" width="0.2" height="15.0" fill="rgb(236,153,14)" rx="2" ry="2" />
<text  x="488.83" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="154.8" y="1989" width="0.2" height="15.0" fill="rgb(247,6,13)" rx="2" ry="2" />
<text  x="157.78" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="502.4" y="1813" width="0.4" height="15.0" fill="rgb(229,13,19)" rx="2" ry="2" />
<text  x="505.38" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="957.9" y="2005" width="0.4" height="15.0" fill="rgb(235,58,47)" rx="2" ry="2" />
<text  x="960.87" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="341.0" y="1701" width="0.4" height="15.0" fill="rgb(217,136,53)" rx="2" ry="2" />
<text  x="344.05" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="109.5" y="37" width="0.2" height="15.0" fill="rgb(226,201,39)" rx="2" ry="2" />
<text  x="112.51" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1178.0" y="1957" width="0.4" height="15.0" fill="rgb(223,1,5)" rx="2" ry="2" />
<text  x="1181.03" y="1967.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="450.3" y="1669" width="0.2" height="15.0" fill="rgb(252,135,41)" rx="2" ry="2" />
<text  x="453.33" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="880.7" y="1957" width="0.4" height="15.0" fill="rgb(228,221,44)" rx="2" ry="2" />
<text  x="883.69" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="873.7" y="1781" width="0.2" height="15.0" fill="rgb(248,54,15)" rx="2" ry="2" />
<text  x="876.71" y="1791.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="365.2" y="1813" width="0.2" height="15.0" fill="rgb(207,106,10)" rx="2" ry="2" />
<text  x="368.18" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (8 samples, 0.14%)</title><rect x="886.1" y="1941" width="1.6" height="15.0" fill="rgb(234,50,4)" rx="2" ry="2" />
<text  x="889.08" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (4 samples, 0.07%)</title><rect x="514.1" y="1989" width="0.8" height="15.0" fill="rgb(250,176,18)" rx="2" ry="2" />
<text  x="517.15" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="525.3" y="1957" width="0.2" height="15.0" fill="rgb(244,155,38)" rx="2" ry="2" />
<text  x="528.32" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1090.7" y="1845" width="0.2" height="15.0" fill="rgb(252,1,1)" rx="2" ry="2" />
<text  x="1093.69" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="523.7" y="1989" width="0.2" height="15.0" fill="rgb(214,9,29)" rx="2" ry="2" />
<text  x="526.72" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="350.8" y="1813" width="0.2" height="15.0" fill="rgb(234,95,3)" rx="2" ry="2" />
<text  x="353.82" y="1823.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.02%)</title><rect x="1079.3" y="1829" width="0.2" height="15.0" fill="rgb(212,42,10)" rx="2" ry="2" />
<text  x="1082.32" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="673.5" y="1797" width="0.2" height="15.0" fill="rgb(251,203,25)" rx="2" ry="2" />
<text  x="676.49" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output (139 samples, 2.35%)</title><rect x="782.4" y="1621" width="27.7" height="15.0" fill="rgb(245,21,4)" rx="2" ry="2" />
<text  x="785.37" y="1631.5" >i..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="55.7" y="1893" width="1.0" height="15.0" fill="rgb(243,59,53)" rx="2" ry="2" />
<text  x="58.67" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="627.8" y="2005" width="0.2" height="15.0" fill="rgb(243,139,44)" rx="2" ry="2" />
<text  x="630.82" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="350.8" y="1669" width="0.2" height="15.0" fill="rgb(205,70,42)" rx="2" ry="2" />
<text  x="353.82" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.7" y="1909" width="0.2" height="15.0" fill="rgb(220,65,22)" rx="2" ry="2" />
<text  x="890.67" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="894.3" y="1781" width="0.2" height="15.0" fill="rgb(223,39,8)" rx="2" ry="2" />
<text  x="897.25" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (16 samples, 0.27%)</title><rect x="87.2" y="2037" width="3.2" height="15.0" fill="rgb(205,80,18)" rx="2" ry="2" />
<text  x="90.18" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="215.6" y="1941" width="0.2" height="15.0" fill="rgb(213,126,4)" rx="2" ry="2" />
<text  x="218.61" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="58.1" y="1941" width="0.2" height="15.0" fill="rgb(236,110,25)" rx="2" ry="2" />
<text  x="61.06" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="852.8" y="1877" width="0.2" height="15.0" fill="rgb(253,131,6)" rx="2" ry="2" />
<text  x="855.77" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="485.8" y="1941" width="0.4" height="15.0" fill="rgb(212,133,12)" rx="2" ry="2" />
<text  x="488.83" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="115.1" y="1749" width="0.2" height="15.0" fill="rgb(215,60,48)" rx="2" ry="2" />
<text  x="118.10" y="1759.5" ></text>
</g>
<g >
<title>SYSC_getsockname (1 samples, 0.02%)</title><rect x="593.9" y="1893" width="0.2" height="15.0" fill="rgb(249,32,32)" rx="2" ry="2" />
<text  x="596.92" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.85%)</title><rect x="908.2" y="2005" width="10.0" height="15.0" fill="rgb(219,100,41)" rx="2" ry="2" />
<text  x="911.21" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="300.6" y="1733" width="0.2" height="15.0" fill="rgb(219,88,3)" rx="2" ry="2" />
<text  x="303.56" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="835.0" y="1525" width="0.2" height="15.0" fill="rgb(237,158,51)" rx="2" ry="2" />
<text  x="838.02" y="1535.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="480.0" y="1893" width="0.2" height="15.0" fill="rgb(226,0,51)" rx="2" ry="2" />
<text  x="483.05" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="350.8" y="1605" width="0.2" height="15.0" fill="rgb(210,215,6)" rx="2" ry="2" />
<text  x="353.82" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="970.4" y="1781" width="0.2" height="15.0" fill="rgb(242,44,33)" rx="2" ry="2" />
<text  x="973.43" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="111.3" y="245" width="0.2" height="15.0" fill="rgb(240,194,19)" rx="2" ry="2" />
<text  x="114.31" y="255.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="549.8" y="1957" width="0.4" height="15.0" fill="rgb(230,125,9)" rx="2" ry="2" />
<text  x="552.84" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="873.7" y="1813" width="0.2" height="15.0" fill="rgb(217,104,38)" rx="2" ry="2" />
<text  x="876.71" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (10 samples, 0.17%)</title><rect x="273.8" y="1605" width="2.0" height="15.0" fill="rgb(241,175,31)" rx="2" ry="2" />
<text  x="276.84" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="934.9" y="1877" width="1.0" height="15.0" fill="rgb(210,9,8)" rx="2" ry="2" />
<text  x="937.93" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="915.0" y="1973" width="0.4" height="15.0" fill="rgb(241,190,48)" rx="2" ry="2" />
<text  x="917.99" y="1983.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="236.3" y="1893" width="0.2" height="15.0" fill="rgb(210,186,37)" rx="2" ry="2" />
<text  x="239.35" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="537.3" y="1861" width="0.2" height="15.0" fill="rgb(213,64,41)" rx="2" ry="2" />
<text  x="540.28" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (1 samples, 0.02%)</title><rect x="32.5" y="2021" width="0.2" height="15.0" fill="rgb(215,71,17)" rx="2" ry="2" />
<text  x="35.54" y="2031.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1018.9" y="2037" width="0.8" height="15.0" fill="rgb(223,222,33)" rx="2" ry="2" />
<text  x="1021.89" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="81.8" y="1717" width="0.2" height="15.0" fill="rgb(222,196,31)" rx="2" ry="2" />
<text  x="84.79" y="1727.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="314.1" y="1941" width="1.2" height="15.0" fill="rgb(253,141,40)" rx="2" ry="2" />
<text  x="317.12" y="1951.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="290.8" y="1653" width="0.2" height="15.0" fill="rgb(225,55,49)" rx="2" ry="2" />
<text  x="293.79" y="1663.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="396.3" y="1877" width="0.6" height="15.0" fill="rgb(235,162,30)" rx="2" ry="2" />
<text  x="399.29" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="215.0" y="1893" width="0.2" height="15.0" fill="rgb(241,196,2)" rx="2" ry="2" />
<text  x="218.01" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::makeEmptyScopeGuard (2 samples, 0.03%)</title><rect x="148.4" y="1893" width="0.4" height="15.0" fill="rgb(226,163,42)" rx="2" ry="2" />
<text  x="151.40" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="350.8" y="1717" width="0.2" height="15.0" fill="rgb(209,7,0)" rx="2" ry="2" />
<text  x="353.82" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="578.4" y="1877" width="0.2" height="15.0" fill="rgb(222,196,11)" rx="2" ry="2" />
<text  x="581.36" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (469 samples, 7.93%)</title><rect x="222.6" y="2021" width="93.5" height="15.0" fill="rgb(235,41,35)" rx="2" ry="2" />
<text  x="225.59" y="2031.5" >entry_SYSCA..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="295.0" y="1829" width="0.2" height="15.0" fill="rgb(236,209,53)" rx="2" ry="2" />
<text  x="297.98" y="1839.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (157 samples, 2.65%)</title><rect x="263.3" y="1829" width="31.3" height="15.0" fill="rgb(237,221,13)" rx="2" ry="2" />
<text  x="266.27" y="1839.5" >__..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="165.2" y="1925" width="0.2" height="15.0" fill="rgb(212,206,7)" rx="2" ry="2" />
<text  x="168.15" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="924.8" y="1765" width="0.2" height="15.0" fill="rgb(226,146,28)" rx="2" ry="2" />
<text  x="927.76" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="909.8" y="1653" width="0.2" height="15.0" fill="rgb(243,55,33)" rx="2" ry="2" />
<text  x="912.81" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.47%)</title><rect x="93.4" y="117" width="17.3" height="15.0" fill="rgb(241,92,10)" rx="2" ry="2" />
<text  x="96.36" y="127.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1116.6" y="1685" width="0.4" height="15.0" fill="rgb(208,223,14)" rx="2" ry="2" />
<text  x="1119.61" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="523.1" y="1973" width="0.2" height="15.0" fill="rgb(207,131,39)" rx="2" ry="2" />
<text  x="526.12" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::clear (2 samples, 0.03%)</title><rect x="155.6" y="2021" width="0.4" height="15.0" fill="rgb(251,206,33)" rx="2" ry="2" />
<text  x="158.58" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="711.6" y="1941" width="0.6" height="15.0" fill="rgb(242,179,35)" rx="2" ry="2" />
<text  x="714.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="241.9" y="1717" width="0.2" height="15.0" fill="rgb(234,195,21)" rx="2" ry="2" />
<text  x="244.93" y="1727.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (1 samples, 0.02%)</title><rect x="159.2" y="1989" width="0.2" height="15.0" fill="rgb(232,128,20)" rx="2" ry="2" />
<text  x="162.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="920.2" y="2037" width="0.2" height="15.0" fill="rgb(235,58,15)" rx="2" ry="2" />
<text  x="923.18" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="255.1" y="1829" width="0.2" height="15.0" fill="rgb(230,100,49)" rx="2" ry="2" />
<text  x="258.09" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="899.2" y="1973" width="0.2" height="15.0" fill="rgb(236,91,51)" rx="2" ry="2" />
<text  x="902.24" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="316.9" y="1877" width="0.4" height="15.0" fill="rgb(227,159,52)" rx="2" ry="2" />
<text  x="319.92" y="1887.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (3 samples, 0.05%)</title><rect x="579.6" y="2005" width="0.6" height="15.0" fill="rgb(232,213,18)" rx="2" ry="2" />
<text  x="582.56" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="156.6" y="1941" width="0.2" height="15.0" fill="rgb(218,224,47)" rx="2" ry="2" />
<text  x="159.58" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="975.8" y="1973" width="0.6" height="15.0" fill="rgb(252,130,25)" rx="2" ry="2" />
<text  x="978.82" y="1983.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="300.8" y="1749" width="0.2" height="15.0" fill="rgb(236,131,36)" rx="2" ry="2" />
<text  x="303.76" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.99%)</title><rect x="93.0" y="1925" width="23.5" height="15.0" fill="rgb(240,12,12)" rx="2" ry="2" />
<text  x="95.96" y="1935.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (3 samples, 0.05%)</title><rect x="854.0" y="1941" width="0.6" height="15.0" fill="rgb(227,86,5)" rx="2" ry="2" />
<text  x="856.97" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="613" width="18.5" height="15.0" fill="rgb(211,145,8)" rx="2" ry="2" />
<text  x="96.36" y="623.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (2 samples, 0.03%)</title><rect x="973.4" y="2037" width="0.4" height="15.0" fill="rgb(246,116,29)" rx="2" ry="2" />
<text  x="976.42" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="818.1" y="1493" width="0.2" height="15.0" fill="rgb(209,140,28)" rx="2" ry="2" />
<text  x="821.07" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="851.8" y="1701" width="0.2" height="15.0" fill="rgb(207,16,13)" rx="2" ry="2" />
<text  x="854.77" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1184.2" y="1989" width="0.2" height="15.0" fill="rgb(220,155,29)" rx="2" ry="2" />
<text  x="1187.22" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="502.6" y="1765" width="0.2" height="15.0" fill="rgb(206,106,49)" rx="2" ry="2" />
<text  x="505.58" y="1775.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="521.5" y="1925" width="0.4" height="15.0" fill="rgb(219,45,52)" rx="2" ry="2" />
<text  x="524.53" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="757.8" y="1733" width="0.2" height="15.0" fill="rgb(211,197,5)" rx="2" ry="2" />
<text  x="760.85" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="259.5" y="1797" width="0.2" height="15.0" fill="rgb(235,120,22)" rx="2" ry="2" />
<text  x="262.48" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="620.8" y="2005" width="1.2" height="15.0" fill="rgb(221,182,7)" rx="2" ry="2" />
<text  x="623.84" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="482.8" y="1717" width="0.2" height="15.0" fill="rgb(231,81,7)" rx="2" ry="2" />
<text  x="485.84" y="1727.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="855.0" y="1893" width="1.0" height="15.0" fill="rgb(221,5,44)" rx="2" ry="2" />
<text  x="857.97" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="952.7" y="1717" width="0.2" height="15.0" fill="rgb(205,120,48)" rx="2" ry="2" />
<text  x="955.68" y="1727.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (60 samples, 1.01%)</title><rect x="1105.4" y="1877" width="12.0" height="15.0" fill="rgb(249,1,46)" rx="2" ry="2" />
<text  x="1108.44" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="578.8" y="1973" width="0.4" height="15.0" fill="rgb(224,44,10)" rx="2" ry="2" />
<text  x="581.76" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="537.3" y="1973" width="0.2" height="15.0" fill="rgb(211,175,35)" rx="2" ry="2" />
<text  x="540.28" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="549.0" y="1957" width="0.6" height="15.0" fill="rgb(254,221,35)" rx="2" ry="2" />
<text  x="552.05" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (22 samples, 0.37%)</title><rect x="986.4" y="1989" width="4.4" height="15.0" fill="rgb(229,191,35)" rx="2" ry="2" />
<text  x="989.39" y="1999.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="967.8" y="2005" width="0.2" height="15.0" fill="rgb(217,29,17)" rx="2" ry="2" />
<text  x="970.84" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1105.0" y="1669" width="0.2" height="15.0" fill="rgb(234,30,51)" rx="2" ry="2" />
<text  x="1108.04" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="573.8" y="1989" width="1.2" height="15.0" fill="rgb(232,51,34)" rx="2" ry="2" />
<text  x="576.78" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="450.3" y="1877" width="0.4" height="15.0" fill="rgb(239,117,31)" rx="2" ry="2" />
<text  x="453.33" y="1887.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1135.4" y="1669" width="0.2" height="15.0" fill="rgb(249,150,41)" rx="2" ry="2" />
<text  x="1138.36" y="1679.5" ></text>
</g>
<g >
<title>__GI___getsockname (107 samples, 1.81%)</title><rect x="585.5" y="1941" width="21.4" height="15.0" fill="rgb(227,146,51)" rx="2" ry="2" />
<text  x="588.54" y="1951.5" >_..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="481.2" y="1765" width="0.2" height="15.0" fill="rgb(209,210,37)" rx="2" ry="2" />
<text  x="484.24" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (1 samples, 0.02%)</title><rect x="698.0" y="2021" width="0.2" height="15.0" fill="rgb(241,114,3)" rx="2" ry="2" />
<text  x="701.02" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="810.3" y="1637" width="0.2" height="15.0" fill="rgb(246,63,54)" rx="2" ry="2" />
<text  x="813.29" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="997.8" y="1893" width="0.2" height="15.0" fill="rgb(215,151,32)" rx="2" ry="2" />
<text  x="1000.75" y="1903.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1128.0" y="1765" width="0.2" height="15.0" fill="rgb(208,102,35)" rx="2" ry="2" />
<text  x="1130.98" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1079.5" y="1669" width="0.2" height="15.0" fill="rgb(242,7,23)" rx="2" ry="2" />
<text  x="1082.52" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="379.7" y="1653" width="0.2" height="15.0" fill="rgb(251,173,39)" rx="2" ry="2" />
<text  x="382.73" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="232.2" y="1989" width="0.2" height="15.0" fill="rgb(224,221,15)" rx="2" ry="2" />
<text  x="235.16" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="274.6" y="1413" width="0.4" height="15.0" fill="rgb(220,20,7)" rx="2" ry="2" />
<text  x="277.64" y="1423.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="529.5" y="1893" width="0.6" height="15.0" fill="rgb(220,69,51)" rx="2" ry="2" />
<text  x="532.50" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="311.3" y="1637" width="0.2" height="15.0" fill="rgb(211,221,28)" rx="2" ry="2" />
<text  x="314.33" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="851.8" y="1813" width="0.2" height="15.0" fill="rgb(237,190,1)" rx="2" ry="2" />
<text  x="854.77" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="156.6" y="1909" width="0.2" height="15.0" fill="rgb(206,110,52)" rx="2" ry="2" />
<text  x="159.58" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="971.6" y="1861" width="0.6" height="15.0" fill="rgb(220,5,42)" rx="2" ry="2" />
<text  x="974.63" y="1871.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="726.1" y="1797" width="0.8" height="15.0" fill="rgb(226,123,32)" rx="2" ry="2" />
<text  x="729.14" y="1807.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="1021.7" y="2005" width="0.2" height="15.0" fill="rgb(226,214,34)" rx="2" ry="2" />
<text  x="1024.68" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="687.0" y="1877" width="0.2" height="15.0" fill="rgb(245,128,24)" rx="2" ry="2" />
<text  x="690.05" y="1887.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="841.0" y="1509" width="0.2" height="15.0" fill="rgb(248,67,25)" rx="2" ry="2" />
<text  x="844.01" y="1519.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="509.2" y="2037" width="0.2" height="15.0" fill="rgb(234,176,33)" rx="2" ry="2" />
<text  x="512.16" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="60.7" y="1877" width="0.2" height="15.0" fill="rgb(237,134,40)" rx="2" ry="2" />
<text  x="63.65" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="689.4" y="1861" width="0.2" height="15.0" fill="rgb(205,177,51)" rx="2" ry="2" />
<text  x="692.44" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="610.7" y="1605" width="0.2" height="15.0" fill="rgb(232,215,8)" rx="2" ry="2" />
<text  x="613.67" y="1615.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (9 samples, 0.15%)</title><rect x="576.6" y="2005" width="1.8" height="15.0" fill="rgb(229,67,24)" rx="2" ry="2" />
<text  x="579.57" y="2015.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (4 samples, 0.07%)</title><rect x="756.6" y="1717" width="0.8" height="15.0" fill="rgb(215,101,8)" rx="2" ry="2" />
<text  x="759.65" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="865.3" y="1957" width="0.2" height="15.0" fill="rgb(230,178,13)" rx="2" ry="2" />
<text  x="868.34" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="673.3" y="2021" width="0.2" height="15.0" fill="rgb(220,8,47)" rx="2" ry="2" />
<text  x="676.29" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="901" width="18.5" height="15.0" fill="rgb(217,153,16)" rx="2" ry="2" />
<text  x="96.36" y="911.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (3 samples, 0.05%)</title><rect x="1116.6" y="1749" width="0.6" height="15.0" fill="rgb(207,216,53)" rx="2" ry="2" />
<text  x="1119.61" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="217.8" y="1877" width="0.2" height="15.0" fill="rgb(218,11,19)" rx="2" ry="2" />
<text  x="220.80" y="1887.5" ></text>
</g>
<g >
<title>event_set (4 samples, 0.07%)</title><rect x="860.0" y="1925" width="0.7" height="15.0" fill="rgb(235,51,53)" rx="2" ry="2" />
<text  x="862.95" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="257.3" y="1653" width="0.2" height="15.0" fill="rgb(218,215,53)" rx="2" ry="2" />
<text  x="260.29" y="1663.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="295.2" y="1813" width="0.4" height="15.0" fill="rgb(229,34,24)" rx="2" ry="2" />
<text  x="298.18" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="931.9" y="1893" width="0.2" height="15.0" fill="rgb(223,9,0)" rx="2" ry="2" />
<text  x="934.94" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="210.8" y="1797" width="0.2" height="15.0" fill="rgb(232,84,48)" rx="2" ry="2" />
<text  x="213.82" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (10 samples, 0.17%)</title><rect x="166.3" y="1973" width="2.0" height="15.0" fill="rgb(250,99,20)" rx="2" ry="2" />
<text  x="169.35" y="1983.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.10%)</title><rect x="1078.1" y="1813" width="1.2" height="15.0" fill="rgb(232,211,20)" rx="2" ry="2" />
<text  x="1081.12" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="111.1" y="245" width="0.2" height="15.0" fill="rgb(231,66,48)" rx="2" ry="2" />
<text  x="114.11" y="255.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1049.6" y="1733" width="0.2" height="15.0" fill="rgb(233,207,42)" rx="2" ry="2" />
<text  x="1052.60" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="77.6" y="1669" width="0.2" height="15.0" fill="rgb(231,206,54)" rx="2" ry="2" />
<text  x="80.61" y="1679.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1079.5" y="1397" width="0.2" height="15.0" fill="rgb(220,38,29)" rx="2" ry="2" />
<text  x="1082.52" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1083.5" y="1813" width="0.2" height="15.0" fill="rgb(247,198,4)" rx="2" ry="2" />
<text  x="1086.51" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="681.9" y="1909" width="0.2" height="15.0" fill="rgb(207,90,16)" rx="2" ry="2" />
<text  x="684.86" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="565.2" y="1845" width="0.4" height="15.0" fill="rgb(235,34,49)" rx="2" ry="2" />
<text  x="568.20" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="112.3" y="1221" width="0.2" height="15.0" fill="rgb(222,95,41)" rx="2" ry="2" />
<text  x="115.31" y="1231.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="915.6" y="1957" width="0.2" height="15.0" fill="rgb(253,69,50)" rx="2" ry="2" />
<text  x="918.59" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="14.4" y="1893" width="1.0" height="15.0" fill="rgb(205,16,7)" rx="2" ry="2" />
<text  x="17.39" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="835.0" y="1621" width="0.2" height="15.0" fill="rgb(206,134,44)" rx="2" ry="2" />
<text  x="838.02" y="1631.5" ></text>
</g>
<g >
<title>memcg_kmem_charge_memcg (1 samples, 0.02%)</title><rect x="480.0" y="1909" width="0.2" height="15.0" fill="rgb(246,168,28)" rx="2" ry="2" />
<text  x="483.05" y="1919.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="123.9" y="1925" width="0.2" height="15.0" fill="rgb(234,175,18)" rx="2" ry="2" />
<text  x="126.87" y="1935.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="969.2" y="2021" width="0.2" height="15.0" fill="rgb(225,126,15)" rx="2" ry="2" />
<text  x="972.24" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="956.1" y="2005" width="0.4" height="15.0" fill="rgb(225,95,47)" rx="2" ry="2" />
<text  x="959.07" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="622.6" y="1941" width="0.2" height="15.0" fill="rgb(211,32,48)" rx="2" ry="2" />
<text  x="625.63" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="841.4" y="1829" width="0.2" height="15.0" fill="rgb(211,12,4)" rx="2" ry="2" />
<text  x="844.40" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="300.6" y="1701" width="0.2" height="15.0" fill="rgb(217,161,54)" rx="2" ry="2" />
<text  x="303.56" y="1711.5" ></text>
</g>
<g >
<title>security_sk_clone (1 samples, 0.02%)</title><rect x="538.3" y="1637" width="0.2" height="15.0" fill="rgb(246,34,27)" rx="2" ry="2" />
<text  x="541.28" y="1647.5" ></text>
</g>
<g >
<title>_copy_from_user (3 samples, 0.05%)</title><rect x="451.3" y="1973" width="0.6" height="15.0" fill="rgb(236,157,54)" rx="2" ry="2" />
<text  x="454.33" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1105.0" y="1573" width="0.2" height="15.0" fill="rgb(232,0,18)" rx="2" ry="2" />
<text  x="1108.04" y="1583.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1146.7" y="1957" width="0.2" height="15.0" fill="rgb(217,167,46)" rx="2" ry="2" />
<text  x="1149.72" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="640.0" y="1941" width="0.4" height="15.0" fill="rgb(223,44,17)" rx="2" ry="2" />
<text  x="642.98" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="747.5" y="1621" width="0.2" height="15.0" fill="rgb(245,174,37)" rx="2" ry="2" />
<text  x="750.48" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="956.7" y="2021" width="1.6" height="15.0" fill="rgb(232,2,38)" rx="2" ry="2" />
<text  x="959.67" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="121.3" y="1909" width="0.2" height="15.0" fill="rgb(215,72,25)" rx="2" ry="2" />
<text  x="124.28" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="74.2" y="1781" width="0.2" height="15.0" fill="rgb(244,161,41)" rx="2" ry="2" />
<text  x="77.21" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (2 samples, 0.03%)</title><rect x="131.3" y="1957" width="0.3" height="15.0" fill="rgb(208,224,2)" rx="2" ry="2" />
<text  x="134.25" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="146.4" y="1861" width="0.6" height="15.0" fill="rgb(219,15,35)" rx="2" ry="2" />
<text  x="149.41" y="1871.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.02%)</title><rect x="1139.9" y="2053" width="0.2" height="15.0" fill="rgb(247,214,33)" rx="2" ry="2" />
<text  x="1142.94" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="927.4" y="1925" width="0.4" height="15.0" fill="rgb(242,54,9)" rx="2" ry="2" />
<text  x="930.36" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1090.7" y="1877" width="0.2" height="15.0" fill="rgb(238,191,20)" rx="2" ry="2" />
<text  x="1093.69" y="1887.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="236.5" y="1893" width="0.2" height="15.0" fill="rgb(244,88,31)" rx="2" ry="2" />
<text  x="239.55" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="935.7" y="1861" width="0.2" height="15.0" fill="rgb(238,96,27)" rx="2" ry="2" />
<text  x="938.73" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="575.0" y="1989" width="0.4" height="15.0" fill="rgb(245,157,13)" rx="2" ry="2" />
<text  x="577.97" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="457.7" y="1925" width="0.2" height="15.0" fill="rgb(208,141,11)" rx="2" ry="2" />
<text  x="460.71" y="1935.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="599.5" y="1397" width="0.2" height="15.0" fill="rgb(234,56,2)" rx="2" ry="2" />
<text  x="602.50" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="873.7" y="1925" width="0.2" height="15.0" fill="rgb(249,47,24)" rx="2" ry="2" />
<text  x="876.71" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="257.3" y="1669" width="0.2" height="15.0" fill="rgb(207,70,38)" rx="2" ry="2" />
<text  x="260.29" y="1679.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.05%)</title><rect x="823.5" y="1573" width="0.6" height="15.0" fill="rgb(229,223,12)" rx="2" ry="2" />
<text  x="826.46" y="1583.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1127.8" y="1909" width="0.2" height="15.0" fill="rgb(237,214,49)" rx="2" ry="2" />
<text  x="1130.78" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="396.9" y="1701" width="0.2" height="15.0" fill="rgb(254,221,10)" rx="2" ry="2" />
<text  x="399.89" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (2 samples, 0.03%)</title><rect x="78.4" y="1973" width="0.4" height="15.0" fill="rgb(243,125,15)" rx="2" ry="2" />
<text  x="81.40" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="610.7" y="1461" width="0.2" height="15.0" fill="rgb(249,148,32)" rx="2" ry="2" />
<text  x="613.67" y="1471.5" ></text>
</g>
<g >
<title>get_empty_filp (54 samples, 0.91%)</title><rect x="382.7" y="1925" width="10.8" height="15.0" fill="rgb(245,101,44)" rx="2" ry="2" />
<text  x="385.73" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="314.1" y="1957" width="1.2" height="15.0" fill="rgb(242,101,6)" rx="2" ry="2" />
<text  x="317.12" y="1967.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="666.7" y="1861" width="0.2" height="15.0" fill="rgb(216,53,43)" rx="2" ry="2" />
<text  x="669.71" y="1871.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.10 (1 samples, 0.02%)</title><rect x="1134.6" y="1909" width="0.2" height="15.0" fill="rgb(247,141,6)" rx="2" ry="2" />
<text  x="1137.56" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="75.4" y="1909" width="0.4" height="15.0" fill="rgb(207,209,17)" rx="2" ry="2" />
<text  x="78.41" y="1919.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="996.4" y="1941" width="0.4" height="15.0" fill="rgb(225,118,53)" rx="2" ry="2" />
<text  x="999.36" y="1951.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="809.5" y="1509" width="0.2" height="15.0" fill="rgb(238,83,41)" rx="2" ry="2" />
<text  x="812.50" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="103.9" y="53" width="0.2" height="15.0" fill="rgb(233,95,25)" rx="2" ry="2" />
<text  x="106.93" y="63.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="149.4" y="1957" width="0.2" height="15.0" fill="rgb(207,47,11)" rx="2" ry="2" />
<text  x="152.40" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="936.7" y="1909" width="0.2" height="15.0" fill="rgb(215,218,49)" rx="2" ry="2" />
<text  x="939.73" y="1919.5" ></text>
</g>
<g >
<title>alloc_inode (52 samples, 0.88%)</title><rect x="371.6" y="1925" width="10.3" height="15.0" fill="rgb(240,51,43)" rx="2" ry="2" />
<text  x="374.56" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="255.1" y="1733" width="0.2" height="15.0" fill="rgb(229,91,44)" rx="2" ry="2" />
<text  x="258.09" y="1743.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="143.6" y="1829" width="0.2" height="15.0" fill="rgb(205,212,1)" rx="2" ry="2" />
<text  x="146.62" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="889.5" y="1925" width="0.2" height="15.0" fill="rgb(216,128,33)" rx="2" ry="2" />
<text  x="892.47" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="565.2" y="1685" width="0.2" height="15.0" fill="rgb(205,71,15)" rx="2" ry="2" />
<text  x="568.20" y="1695.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="726.1" y="1829" width="0.8" height="15.0" fill="rgb(232,110,41)" rx="2" ry="2" />
<text  x="729.14" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="29.3" y="1765" width="0.2" height="15.0" fill="rgb(243,55,42)" rx="2" ry="2" />
<text  x="32.34" y="1775.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (2 samples, 0.03%)</title><rect x="25.4" y="1989" width="0.4" height="15.0" fill="rgb(216,175,0)" rx="2" ry="2" />
<text  x="28.36" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.0" y="1909" width="0.2" height="15.0" fill="rgb(250,116,20)" rx="2" ry="2" />
<text  x="74.02" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (5 samples, 0.08%)</title><rect x="43.1" y="1893" width="1.0" height="15.0" fill="rgb(208,200,25)" rx="2" ry="2" />
<text  x="46.10" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (43 samples, 0.73%)</title><rect x="632.2" y="1989" width="8.6" height="15.0" fill="rgb(206,225,27)" rx="2" ry="2" />
<text  x="635.21" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (3 samples, 0.05%)</title><rect x="1148.1" y="2021" width="0.6" height="15.0" fill="rgb(229,172,12)" rx="2" ry="2" />
<text  x="1151.12" y="2031.5" ></text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="735.5" y="1717" width="0.2" height="15.0" fill="rgb(249,98,16)" rx="2" ry="2" />
<text  x="738.51" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="135.8" y="1877" width="0.4" height="15.0" fill="rgb(249,162,41)" rx="2" ry="2" />
<text  x="138.84" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1163.9" y="1877" width="0.2" height="15.0" fill="rgb(214,229,25)" rx="2" ry="2" />
<text  x="1166.88" y="1887.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (2 samples, 0.03%)</title><rect x="1005.5" y="2005" width="0.4" height="15.0" fill="rgb(223,50,9)" rx="2" ry="2" />
<text  x="1008.53" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1179.4" y="1989" width="0.2" height="15.0" fill="rgb(216,149,29)" rx="2" ry="2" />
<text  x="1182.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="846.6" y="1621" width="0.2" height="15.0" fill="rgb(210,76,16)" rx="2" ry="2" />
<text  x="849.59" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="756.2" y="1733" width="0.4" height="15.0" fill="rgb(211,104,20)" rx="2" ry="2" />
<text  x="759.25" y="1743.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1170.7" y="2037" width="0.6" height="15.0" fill="rgb(215,224,20)" rx="2" ry="2" />
<text  x="1173.66" y="2047.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="179.5" y="2021" width="0.2" height="15.0" fill="rgb(242,79,40)" rx="2" ry="2" />
<text  x="182.51" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="311.3" y="1733" width="0.4" height="15.0" fill="rgb(209,214,23)" rx="2" ry="2" />
<text  x="314.33" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (7 samples, 0.12%)</title><rect x="512.2" y="1989" width="1.3" height="15.0" fill="rgb(246,135,17)" rx="2" ry="2" />
<text  x="515.15" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (1 samples, 0.02%)</title><rect x="151.4" y="2005" width="0.2" height="15.0" fill="rgb(231,103,41)" rx="2" ry="2" />
<text  x="154.39" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="702.8" y="1989" width="0.2" height="15.0" fill="rgb(239,155,34)" rx="2" ry="2" />
<text  x="705.80" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="673.5" y="1813" width="0.2" height="15.0" fill="rgb(213,56,47)" rx="2" ry="2" />
<text  x="676.49" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="785.6" y="1477" width="0.4" height="15.0" fill="rgb(246,186,11)" rx="2" ry="2" />
<text  x="788.57" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="899.0" y="2005" width="0.2" height="15.0" fill="rgb(254,177,51)" rx="2" ry="2" />
<text  x="902.04" y="2015.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="234.8" y="1925" width="0.4" height="15.0" fill="rgb(222,5,40)" rx="2" ry="2" />
<text  x="237.75" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="211.6" y="1861" width="1.4" height="15.0" fill="rgb(248,124,12)" rx="2" ry="2" />
<text  x="214.62" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="473.1" y="1829" width="0.2" height="15.0" fill="rgb(240,24,42)" rx="2" ry="2" />
<text  x="476.07" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="873.7" y="1797" width="0.2" height="15.0" fill="rgb(224,93,49)" rx="2" ry="2" />
<text  x="876.71" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.08%)</title><rect x="274.4" y="1461" width="1.0" height="15.0" fill="rgb(251,22,24)" rx="2" ry="2" />
<text  x="277.44" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="846.2" y="1669" width="0.6" height="15.0" fill="rgb(212,81,34)" rx="2" ry="2" />
<text  x="849.19" y="1679.5" ></text>
</g>
<g >
<title>new_slab (5 samples, 0.08%)</title><rect x="479.2" y="1925" width="1.0" height="15.0" fill="rgb(227,148,31)" rx="2" ry="2" />
<text  x="482.25" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="87.0" y="1925" width="0.2" height="15.0" fill="rgb(245,130,5)" rx="2" ry="2" />
<text  x="89.98" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="972.4" y="1941" width="0.2" height="15.0" fill="rgb(228,173,6)" rx="2" ry="2" />
<text  x="975.43" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="71.0" y="1877" width="0.2" height="15.0" fill="rgb(238,150,10)" rx="2" ry="2" />
<text  x="74.02" y="1887.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="153.2" y="2021" width="0.2" height="15.0" fill="rgb(228,95,13)" rx="2" ry="2" />
<text  x="156.19" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1079.5" y="1797" width="0.2" height="15.0" fill="rgb(232,21,26)" rx="2" ry="2" />
<text  x="1082.52" y="1807.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="892.3" y="1909" width="0.2" height="15.0" fill="rgb(210,190,3)" rx="2" ry="2" />
<text  x="895.26" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="75.0" y="1893" width="0.2" height="15.0" fill="rgb(246,206,44)" rx="2" ry="2" />
<text  x="78.01" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="111.7" y="197" width="0.2" height="15.0" fill="rgb(228,62,27)" rx="2" ry="2" />
<text  x="114.71" y="207.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="747.5" y="1525" width="0.2" height="15.0" fill="rgb(227,98,35)" rx="2" ry="2" />
<text  x="750.48" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="56.7" y="1909" width="0.2" height="15.0" fill="rgb(233,1,37)" rx="2" ry="2" />
<text  x="59.67" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="152.6" y="1973" width="0.2" height="15.0" fill="rgb(211,85,35)" rx="2" ry="2" />
<text  x="155.59" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="267.7" y="1797" width="0.2" height="15.0" fill="rgb(239,201,41)" rx="2" ry="2" />
<text  x="270.66" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (4 samples, 0.07%)</title><rect x="914.2" y="1973" width="0.8" height="15.0" fill="rgb(223,226,35)" rx="2" ry="2" />
<text  x="917.19" y="1983.5" ></text>
</g>
<g >
<title>release_sock (18 samples, 0.30%)</title><rect x="361.8" y="1941" width="3.6" height="15.0" fill="rgb(238,201,29)" rx="2" ry="2" />
<text  x="364.79" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="79.4" y="1989" width="0.8" height="15.0" fill="rgb(206,163,10)" rx="2" ry="2" />
<text  x="82.40" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="216.6" y="1957" width="0.8" height="15.0" fill="rgb(249,53,5)" rx="2" ry="2" />
<text  x="219.60" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="125.3" y="1925" width="0.2" height="15.0" fill="rgb(238,212,32)" rx="2" ry="2" />
<text  x="128.27" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="747.9" y="1733" width="0.4" height="15.0" fill="rgb(211,198,2)" rx="2" ry="2" />
<text  x="750.87" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="818.1" y="1637" width="0.2" height="15.0" fill="rgb(238,146,43)" rx="2" ry="2" />
<text  x="821.07" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="481.2" y="1845" width="0.4" height="15.0" fill="rgb(217,187,37)" rx="2" ry="2" />
<text  x="484.24" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (6 samples, 0.10%)</title><rect x="68.4" y="1957" width="1.2" height="15.0" fill="rgb(232,199,47)" rx="2" ry="2" />
<text  x="71.43" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="450.3" y="1813" width="0.4" height="15.0" fill="rgb(208,91,34)" rx="2" ry="2" />
<text  x="453.33" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="859.2" y="1829" width="0.2" height="15.0" fill="rgb(211,18,52)" rx="2" ry="2" />
<text  x="862.15" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="622.6" y="1989" width="0.2" height="15.0" fill="rgb(247,36,24)" rx="2" ry="2" />
<text  x="625.63" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="538.3" y="1957" width="0.2" height="15.0" fill="rgb(219,16,2)" rx="2" ry="2" />
<text  x="541.28" y="1967.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (2 samples, 0.03%)</title><rect x="570.4" y="1973" width="0.4" height="15.0" fill="rgb(249,224,52)" rx="2" ry="2" />
<text  x="573.39" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="126.7" y="1957" width="0.4" height="15.0" fill="rgb(207,133,34)" rx="2" ry="2" />
<text  x="129.66" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.2" y="1813" width="0.2" height="15.0" fill="rgb(218,82,48)" rx="2" ry="2" />
<text  x="844.21" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (448 samples, 7.57%)</title><rect x="92.4" y="2037" width="89.3" height="15.0" fill="rgb(245,169,15)" rx="2" ry="2" />
<text  x="95.36" y="2047.5" >[unknown]</text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="690.2" y="1909" width="1.2" height="15.0" fill="rgb(227,147,49)" rx="2" ry="2" />
<text  x="693.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="402.9" y="1781" width="0.2" height="15.0" fill="rgb(210,35,25)" rx="2" ry="2" />
<text  x="405.87" y="1791.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="765.6" y="1669" width="0.2" height="15.0" fill="rgb(207,3,49)" rx="2" ry="2" />
<text  x="768.62" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="316.9" y="2021" width="0.4" height="15.0" fill="rgb(214,145,3)" rx="2" ry="2" />
<text  x="319.92" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="341.0" y="1765" width="0.4" height="15.0" fill="rgb(235,36,39)" rx="2" ry="2" />
<text  x="344.05" y="1775.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="217.8" y="1845" width="0.2" height="15.0" fill="rgb(210,3,43)" rx="2" ry="2" />
<text  x="220.80" y="1855.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="81.8" y="1685" width="0.2" height="15.0" fill="rgb(236,33,50)" rx="2" ry="2" />
<text  x="84.79" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1079.7" y="1829" width="0.2" height="15.0" fill="rgb(221,205,26)" rx="2" ry="2" />
<text  x="1082.72" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (2 samples, 0.03%)</title><rect x="202.0" y="1941" width="0.4" height="15.0" fill="rgb(243,224,14)" rx="2" ry="2" />
<text  x="205.05" y="1951.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="153.6" y="2021" width="0.2" height="15.0" fill="rgb(226,117,38)" rx="2" ry="2" />
<text  x="156.59" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="920.0" y="2021" width="0.2" height="15.0" fill="rgb(253,67,11)" rx="2" ry="2" />
<text  x="922.98" y="2031.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="615.7" y="1925" width="0.8" height="15.0" fill="rgb(240,90,26)" rx="2" ry="2" />
<text  x="618.65" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="141.8" y="1861" width="0.2" height="15.0" fill="rgb(211,190,24)" rx="2" ry="2" />
<text  x="144.82" y="1871.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="931.7" y="1877" width="0.2" height="15.0" fill="rgb(254,205,8)" rx="2" ry="2" />
<text  x="934.74" y="1887.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="111.5" y="37" width="0.2" height="15.0" fill="rgb(216,128,48)" rx="2" ry="2" />
<text  x="114.51" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="909.8" y="1845" width="0.2" height="15.0" fill="rgb(245,214,4)" rx="2" ry="2" />
<text  x="912.81" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="524.3" y="1989" width="0.2" height="15.0" fill="rgb(219,227,4)" rx="2" ry="2" />
<text  x="527.32" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="72.6" y="1909" width="0.2" height="15.0" fill="rgb(238,29,18)" rx="2" ry="2" />
<text  x="75.62" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="241.9" y="1797" width="0.2" height="15.0" fill="rgb(241,164,42)" rx="2" ry="2" />
<text  x="244.93" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="110.7" y="53" width="0.2" height="15.0" fill="rgb(213,148,23)" rx="2" ry="2" />
<text  x="113.71" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="538.3" y="1701" width="0.2" height="15.0" fill="rgb(229,136,11)" rx="2" ry="2" />
<text  x="541.28" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="528.5" y="2021" width="2.0" height="15.0" fill="rgb(234,201,30)" rx="2" ry="2" />
<text  x="531.51" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="747.5" y="1573" width="0.2" height="15.0" fill="rgb(243,122,25)" rx="2" ry="2" />
<text  x="750.48" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="49.5" y="1941" width="0.6" height="15.0" fill="rgb(233,29,48)" rx="2" ry="2" />
<text  x="52.49" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="485.8" y="1845" width="0.4" height="15.0" fill="rgb(217,52,45)" rx="2" ry="2" />
<text  x="488.83" y="1855.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="60.7" y="1797" width="0.2" height="15.0" fill="rgb(215,125,4)" rx="2" ry="2" />
<text  x="63.65" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="610.7" y="1541" width="0.2" height="15.0" fill="rgb(249,215,52)" rx="2" ry="2" />
<text  x="613.67" y="1551.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1026.5" y="2053" width="0.4" height="15.0" fill="rgb(251,140,24)" rx="2" ry="2" />
<text  x="1029.47" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="926.4" y="1989" width="0.2" height="15.0" fill="rgb(230,86,0)" rx="2" ry="2" />
<text  x="929.36" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (87 samples, 1.47%)</title><rect x="877.9" y="1989" width="17.3" height="15.0" fill="rgb(245,3,36)" rx="2" ry="2" />
<text  x="880.90" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="766.2" y="1637" width="0.2" height="15.0" fill="rgb(235,108,6)" rx="2" ry="2" />
<text  x="769.22" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="841.0" y="1557" width="0.2" height="15.0" fill="rgb(243,49,5)" rx="2" ry="2" />
<text  x="844.01" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.6" y="1925" width="0.2" height="15.0" fill="rgb(225,12,53)" rx="2" ry="2" />
<text  x="163.57" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (4 samples, 0.07%)</title><rect x="903.0" y="2037" width="0.8" height="15.0" fill="rgb(219,45,49)" rx="2" ry="2" />
<text  x="906.03" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5 samples, 0.08%)</title><rect x="998.4" y="1989" width="0.9" height="15.0" fill="rgb(254,81,3)" rx="2" ry="2" />
<text  x="1001.35" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="482.8" y="1765" width="0.2" height="15.0" fill="rgb(254,67,33)" rx="2" ry="2" />
<text  x="485.84" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.83%)</title><rect x="93.2" y="1653" width="21.5" height="15.0" fill="rgb(208,104,19)" rx="2" ry="2" />
<text  x="96.16" y="1663.5" >[..</text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (2 samples, 0.03%)</title><rect x="969.8" y="2037" width="0.4" height="15.0" fill="rgb(206,155,25)" rx="2" ry="2" />
<text  x="972.83" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (156 samples, 2.64%)</title><rect x="779.2" y="1653" width="31.1" height="15.0" fill="rgb(239,181,34)" rx="2" ry="2" />
<text  x="782.18" y="1663.5" >ip..</text>
</g>
<g >
<title>rw_copy_check_uvector (7 samples, 0.12%)</title><rect x="235.6" y="1909" width="1.3" height="15.0" fill="rgb(224,191,29)" rx="2" ry="2" />
<text  x="238.55" y="1919.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (2 samples, 0.03%)</title><rect x="972.2" y="2037" width="0.4" height="15.0" fill="rgb(228,89,5)" rx="2" ry="2" />
<text  x="975.23" y="2047.5" ></text>
</g>
<g >
<title>sk_reset_timer (31 samples, 0.52%)</title><rect x="296.6" y="1781" width="6.2" height="15.0" fill="rgb(241,54,31)" rx="2" ry="2" />
<text  x="299.57" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="747.9" y="1621" width="0.4" height="15.0" fill="rgb(225,48,5)" rx="2" ry="2" />
<text  x="750.87" y="1631.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1163.9" y="1829" width="0.2" height="15.0" fill="rgb(242,10,29)" rx="2" ry="2" />
<text  x="1166.88" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="79.0" y="1973" width="0.2" height="15.0" fill="rgb(252,186,2)" rx="2" ry="2" />
<text  x="82.00" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="49.5" y="1925" width="0.6" height="15.0" fill="rgb(216,55,20)" rx="2" ry="2" />
<text  x="52.49" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="170.3" y="1957" width="0.4" height="15.0" fill="rgb(228,89,37)" rx="2" ry="2" />
<text  x="173.34" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1189.4" y="2021" width="0.2" height="15.0" fill="rgb(211,93,54)" rx="2" ry="2" />
<text  x="1192.40" y="2031.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="924.8" y="1669" width="0.2" height="15.0" fill="rgb(233,23,48)" rx="2" ry="2" />
<text  x="927.76" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1178.4" y="1989" width="0.2" height="15.0" fill="rgb(224,12,38)" rx="2" ry="2" />
<text  x="1181.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (34 samples, 0.57%)</title><rect x="296.0" y="1829" width="6.8" height="15.0" fill="rgb(219,115,25)" rx="2" ry="2" />
<text  x="298.98" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="610.7" y="1509" width="0.2" height="15.0" fill="rgb(228,225,6)" rx="2" ry="2" />
<text  x="613.67" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="924.8" y="1637" width="0.2" height="15.0" fill="rgb(243,38,54)" rx="2" ry="2" />
<text  x="927.76" y="1647.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="14.4" y="1909" width="1.0" height="15.0" fill="rgb(243,9,48)" rx="2" ry="2" />
<text  x="17.39" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="255.1" y="1653" width="0.2" height="15.0" fill="rgb(230,192,6)" rx="2" ry="2" />
<text  x="258.09" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="538.3" y="1765" width="0.2" height="15.0" fill="rgb(212,176,22)" rx="2" ry="2" />
<text  x="541.28" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_accept (1 samples, 0.02%)</title><rect x="365.4" y="1957" width="0.2" height="15.0" fill="rgb(211,9,35)" rx="2" ry="2" />
<text  x="368.38" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="111.1" y="197" width="0.2" height="15.0" fill="rgb(241,147,18)" rx="2" ry="2" />
<text  x="114.11" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(231,132,17)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1049.6" y="1861" width="0.2" height="15.0" fill="rgb(233,78,43)" rx="2" ry="2" />
<text  x="1052.60" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="60.7" y="1861" width="0.2" height="15.0" fill="rgb(219,227,38)" rx="2" ry="2" />
<text  x="63.65" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1138.9" y="2037" width="0.4" height="15.0" fill="rgb(231,229,1)" rx="2" ry="2" />
<text  x="1141.95" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1079.5" y="1589" width="0.2" height="15.0" fill="rgb(217,70,20)" rx="2" ry="2" />
<text  x="1082.52" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="121.5" y="1973" width="0.4" height="15.0" fill="rgb(239,113,24)" rx="2" ry="2" />
<text  x="124.48" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="936.7" y="1653" width="0.2" height="15.0" fill="rgb(242,116,50)" rx="2" ry="2" />
<text  x="939.73" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="936.7" y="1877" width="0.2" height="15.0" fill="rgb(241,134,50)" rx="2" ry="2" />
<text  x="939.73" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="257.3" y="1749" width="0.2" height="15.0" fill="rgb(232,8,33)" rx="2" ry="2" />
<text  x="260.29" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (302 samples, 5.10%)</title><rect x="93.0" y="2021" width="60.2" height="15.0" fill="rgb(235,19,25)" rx="2" ry="2" />
<text  x="95.96" y="2031.5" >[unkno..</text>
</g>
<g >
<title>__fget_light (27 samples, 0.46%)</title><rect x="445.5" y="1957" width="5.4" height="15.0" fill="rgb(233,153,37)" rx="2" ry="2" />
<text  x="448.55" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (50 samples, 0.85%)</title><rect x="607.3" y="2021" width="10.0" height="15.0" fill="rgb(242,17,11)" rx="2" ry="2" />
<text  x="610.28" y="2031.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="53.9" y="1893" width="0.4" height="15.0" fill="rgb(213,25,31)" rx="2" ry="2" />
<text  x="56.87" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="915.6" y="1909" width="0.2" height="15.0" fill="rgb(216,146,48)" rx="2" ry="2" />
<text  x="918.59" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (10 samples, 0.17%)</title><rect x="640.8" y="1989" width="2.0" height="15.0" fill="rgb(212,50,3)" rx="2" ry="2" />
<text  x="643.78" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="726.1" y="1765" width="0.8" height="15.0" fill="rgb(218,19,52)" rx="2" ry="2" />
<text  x="729.14" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (1 samples, 0.02%)</title><rect x="898.0" y="1941" width="0.2" height="15.0" fill="rgb(254,134,23)" rx="2" ry="2" />
<text  x="901.04" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1135.4" y="1717" width="0.2" height="15.0" fill="rgb(236,214,39)" rx="2" ry="2" />
<text  x="1138.36" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="177.9" y="1893" width="0.2" height="15.0" fill="rgb(243,208,54)" rx="2" ry="2" />
<text  x="180.92" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (3 samples, 0.05%)</title><rect x="81.2" y="1957" width="0.6" height="15.0" fill="rgb(240,105,4)" rx="2" ry="2" />
<text  x="84.19" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="610.7" y="1573" width="0.2" height="15.0" fill="rgb(209,120,2)" rx="2" ry="2" />
<text  x="613.67" y="1583.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="92.2" y="1893" width="0.2" height="15.0" fill="rgb(205,106,35)" rx="2" ry="2" />
<text  x="95.16" y="1903.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="898.8" y="1957" width="0.2" height="15.0" fill="rgb(231,160,48)" rx="2" ry="2" />
<text  x="901.84" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="681.9" y="1877" width="0.2" height="15.0" fill="rgb(232,174,37)" rx="2" ry="2" />
<text  x="684.86" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="852.8" y="1781" width="0.2" height="15.0" fill="rgb(238,63,13)" rx="2" ry="2" />
<text  x="855.77" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="165.2" y="1941" width="0.2" height="15.0" fill="rgb(219,153,22)" rx="2" ry="2" />
<text  x="168.15" y="1951.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="846.0" y="1797" width="0.2" height="15.0" fill="rgb(254,69,25)" rx="2" ry="2" />
<text  x="848.99" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (40 samples, 0.68%)</title><rect x="607.5" y="2005" width="8.0" height="15.0" fill="rgb(245,102,8)" rx="2" ry="2" />
<text  x="610.48" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="989.4" y="1877" width="0.2" height="15.0" fill="rgb(220,154,44)" rx="2" ry="2" />
<text  x="992.38" y="1887.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (7 samples, 0.12%)</title><rect x="1136.8" y="2053" width="1.3" height="15.0" fill="rgb(207,122,30)" rx="2" ry="2" />
<text  x="1139.75" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1163.9" y="1861" width="0.2" height="15.0" fill="rgb(248,206,27)" rx="2" ry="2" />
<text  x="1166.88" y="1871.5" ></text>
</g>
<g >
<title>prefetch_freepointer (3 samples, 0.05%)</title><rect x="253.7" y="1829" width="0.6" height="15.0" fill="rgb(236,45,27)" rx="2" ry="2" />
<text  x="256.70" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="825.6" y="1685" width="0.6" height="15.0" fill="rgb(232,99,39)" rx="2" ry="2" />
<text  x="828.65" y="1695.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="1149.7" y="1973" width="0.4" height="15.0" fill="rgb(248,111,18)" rx="2" ry="2" />
<text  x="1152.72" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="855.2" y="1797" width="0.2" height="15.0" fill="rgb(253,178,20)" rx="2" ry="2" />
<text  x="858.16" y="1807.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="971.4" y="2021" width="0.8" height="15.0" fill="rgb(209,179,42)" rx="2" ry="2" />
<text  x="974.43" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="606.9" y="2005" width="0.4" height="15.0" fill="rgb(240,161,42)" rx="2" ry="2" />
<text  x="609.88" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="775.2" y="1669" width="0.4" height="15.0" fill="rgb(246,189,42)" rx="2" ry="2" />
<text  x="778.20" y="1679.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="675.1" y="1941" width="0.8" height="15.0" fill="rgb(210,211,18)" rx="2" ry="2" />
<text  x="678.08" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="93.4" y="501" width="18.5" height="15.0" fill="rgb(244,87,33)" rx="2" ry="2" />
<text  x="96.36" y="511.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="170.1" y="1957" width="0.2" height="15.0" fill="rgb(216,137,21)" rx="2" ry="2" />
<text  x="173.14" y="1967.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (78 samples, 1.32%)</title><rect x="1101.9" y="1925" width="15.5" height="15.0" fill="rgb(213,218,42)" rx="2" ry="2" />
<text  x="1104.85" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="317.1" y="1845" width="0.2" height="15.0" fill="rgb(254,82,43)" rx="2" ry="2" />
<text  x="320.12" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="313.7" y="1861" width="0.2" height="15.0" fill="rgb(229,199,4)" rx="2" ry="2" />
<text  x="316.72" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="458.7" y="1893" width="0.6" height="15.0" fill="rgb(226,195,15)" rx="2" ry="2" />
<text  x="461.71" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="106.3" y="37" width="0.2" height="15.0" fill="rgb(245,68,31)" rx="2" ry="2" />
<text  x="109.32" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="855.2" y="1829" width="0.2" height="15.0" fill="rgb(217,116,29)" rx="2" ry="2" />
<text  x="858.16" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13 samples, 0.22%)</title><rect x="459.3" y="1909" width="2.6" height="15.0" fill="rgb(242,209,46)" rx="2" ry="2" />
<text  x="462.31" y="1919.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="81.8" y="1589" width="0.2" height="15.0" fill="rgb(235,3,37)" rx="2" ry="2" />
<text  x="84.79" y="1599.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="311.7" y="1845" width="0.2" height="15.0" fill="rgb(253,100,2)" rx="2" ry="2" />
<text  x="314.73" y="1855.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="111.7" y="69" width="0.2" height="15.0" fill="rgb(253,141,21)" rx="2" ry="2" />
<text  x="114.71" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="810.3" y="1573" width="0.2" height="15.0" fill="rgb(252,127,1)" rx="2" ry="2" />
<text  x="813.29" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="156.6" y="1829" width="0.2" height="15.0" fill="rgb(250,215,1)" rx="2" ry="2" />
<text  x="159.58" y="1839.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="51.5" y="1845" width="0.2" height="15.0" fill="rgb(228,209,8)" rx="2" ry="2" />
<text  x="54.48" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="148.0" y="1925" width="0.2" height="15.0" fill="rgb(224,194,26)" rx="2" ry="2" />
<text  x="151.00" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="396.9" y="1717" width="0.2" height="15.0" fill="rgb(205,207,22)" rx="2" ry="2" />
<text  x="399.89" y="1727.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="52.9" y="1909" width="0.2" height="15.0" fill="rgb(231,220,39)" rx="2" ry="2" />
<text  x="55.88" y="1919.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="846.6" y="1573" width="0.2" height="15.0" fill="rgb(236,159,22)" rx="2" ry="2" />
<text  x="849.59" y="1583.5" ></text>
</g>
<g >
<title>__fdget (10 samples, 0.17%)</title><rect x="601.1" y="1845" width="2.0" height="15.0" fill="rgb(235,146,4)" rx="2" ry="2" />
<text  x="604.10" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="402.9" y="1813" width="0.2" height="15.0" fill="rgb(249,187,54)" rx="2" ry="2" />
<text  x="405.87" y="1823.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="997.8" y="1637" width="0.2" height="15.0" fill="rgb(237,164,52)" rx="2" ry="2" />
<text  x="1000.75" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1135.4" y="1797" width="0.2" height="15.0" fill="rgb(236,22,53)" rx="2" ry="2" />
<text  x="1138.36" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="978.0" y="2005" width="0.2" height="15.0" fill="rgb(232,12,12)" rx="2" ry="2" />
<text  x="981.01" y="2015.5" ></text>
</g>
<g >
<title>_copy_to_iter (10 samples, 0.17%)</title><rect x="1097.7" y="1909" width="2.0" height="15.0" fill="rgb(248,176,18)" rx="2" ry="2" />
<text  x="1100.67" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="952.7" y="1701" width="0.2" height="15.0" fill="rgb(246,118,6)" rx="2" ry="2" />
<text  x="955.68" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="210.8" y="1829" width="0.2" height="15.0" fill="rgb(209,191,2)" rx="2" ry="2" />
<text  x="213.82" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="970.4" y="1829" width="0.2" height="15.0" fill="rgb(232,55,18)" rx="2" ry="2" />
<text  x="973.43" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="212.2" y="1781" width="0.2" height="15.0" fill="rgb(240,111,49)" rx="2" ry="2" />
<text  x="215.22" y="1791.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="74.6" y="1925" width="0.2" height="15.0" fill="rgb(223,166,27)" rx="2" ry="2" />
<text  x="77.61" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (14 samples, 0.24%)</title><rect x="41.3" y="1941" width="2.8" height="15.0" fill="rgb(230,74,41)" rx="2" ry="2" />
<text  x="44.31" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="851.8" y="1877" width="0.2" height="15.0" fill="rgb(205,112,3)" rx="2" ry="2" />
<text  x="854.77" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="93.4" y="197" width="17.5" height="15.0" fill="rgb(219,204,47)" rx="2" ry="2" />
<text  x="96.36" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="457.7" y="1893" width="0.2" height="15.0" fill="rgb(245,198,3)" rx="2" ry="2" />
<text  x="460.71" y="1903.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1049.4" y="1909" width="0.2" height="15.0" fill="rgb(233,207,45)" rx="2" ry="2" />
<text  x="1052.41" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="316.9" y="2005" width="0.4" height="15.0" fill="rgb(211,167,29)" rx="2" ry="2" />
<text  x="319.92" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (8 samples, 0.14%)</title><rect x="478.6" y="1957" width="1.6" height="15.0" fill="rgb(214,106,19)" rx="2" ry="2" />
<text  x="481.65" y="1967.5" ></text>
</g>
<g >
<title>call_rcu_sched (7 samples, 0.12%)</title><rect x="463.7" y="1957" width="1.4" height="15.0" fill="rgb(229,177,46)" rx="2" ry="2" />
<text  x="466.69" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="402.7" y="1973" width="0.4" height="15.0" fill="rgb(206,152,6)" rx="2" ry="2" />
<text  x="405.67" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="156.6" y="1925" width="0.2" height="15.0" fill="rgb(239,203,23)" rx="2" ry="2" />
<text  x="159.58" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="29.3" y="1973" width="0.2" height="15.0" fill="rgb(250,41,2)" rx="2" ry="2" />
<text  x="32.34" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="538.3" y="1893" width="0.2" height="15.0" fill="rgb(215,173,49)" rx="2" ry="2" />
<text  x="541.28" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="110.7" y="117" width="0.2" height="15.0" fill="rgb(236,18,38)" rx="2" ry="2" />
<text  x="113.71" y="127.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="540.5" y="1829" width="0.2" height="15.0" fill="rgb(226,10,21)" rx="2" ry="2" />
<text  x="543.47" y="1839.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="293.4" y="1781" width="0.2" height="15.0" fill="rgb(234,109,51)" rx="2" ry="2" />
<text  x="296.38" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="111.3" y="85" width="0.2" height="15.0" fill="rgb(215,175,35)" rx="2" ry="2" />
<text  x="114.31" y="95.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1017.3" y="1749" width="0.2" height="15.0" fill="rgb(228,30,50)" rx="2" ry="2" />
<text  x="1020.30" y="1759.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="615.7" y="1813" width="0.2" height="15.0" fill="rgb(208,198,26)" rx="2" ry="2" />
<text  x="618.65" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="924.8" y="1973" width="0.2" height="15.0" fill="rgb(234,193,42)" rx="2" ry="2" />
<text  x="927.76" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="1017.3" y="1733" width="0.2" height="15.0" fill="rgb(227,167,43)" rx="2" ry="2" />
<text  x="1020.30" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1189.4" y="1973" width="0.2" height="15.0" fill="rgb(254,131,3)" rx="2" ry="2" />
<text  x="1192.40" y="1983.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (7 samples, 0.12%)</title><rect x="463.7" y="1941" width="1.4" height="15.0" fill="rgb(228,212,41)" rx="2" ry="2" />
<text  x="466.69" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="924.8" y="1893" width="0.2" height="15.0" fill="rgb(207,62,10)" rx="2" ry="2" />
<text  x="927.76" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (161 samples, 2.72%)</title><rect x="924.4" y="2021" width="32.1" height="15.0" fill="rgb(231,112,30)" rx="2" ry="2" />
<text  x="927.37" y="2031.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="565.0" y="1893" width="0.6" height="15.0" fill="rgb(249,209,50)" rx="2" ry="2" />
<text  x="568.00" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="111.5" y="213" width="0.2" height="15.0" fill="rgb(234,66,40)" rx="2" ry="2" />
<text  x="114.51" y="223.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (253 samples, 4.28%)</title><rect x="530.5" y="2037" width="50.5" height="15.0" fill="rgb(215,135,37)" rx="2" ry="2" />
<text  x="533.50" y="2047.5" >faceb..</text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1009.5" y="1957" width="0.2" height="15.0" fill="rgb(214,189,5)" rx="2" ry="2" />
<text  x="1012.52" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="402.9" y="1877" width="0.2" height="15.0" fill="rgb(206,87,7)" rx="2" ry="2" />
<text  x="405.87" y="1887.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="321.7" y="2037" width="0.2" height="15.0" fill="rgb(216,10,24)" rx="2" ry="2" />
<text  x="324.70" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="853.2" y="1893" width="0.2" height="15.0" fill="rgb(215,136,41)" rx="2" ry="2" />
<text  x="856.17" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="177.9" y="1941" width="0.2" height="15.0" fill="rgb(212,4,48)" rx="2" ry="2" />
<text  x="180.92" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="528.5" y="2005" width="2.0" height="15.0" fill="rgb(212,158,49)" rx="2" ry="2" />
<text  x="531.51" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (31 samples, 0.52%)</title><rect x="351.0" y="1925" width="6.2" height="15.0" fill="rgb(240,88,37)" rx="2" ry="2" />
<text  x="354.02" y="1935.5" ></text>
</g>
<g >
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="257.5" y="1861" width="0.4" height="15.0" fill="rgb(230,90,32)" rx="2" ry="2" />
<text  x="260.49" y="1871.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="1049.6" y="1685" width="0.2" height="15.0" fill="rgb(235,158,26)" rx="2" ry="2" />
<text  x="1052.60" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="747.5" y="1477" width="0.2" height="15.0" fill="rgb(215,71,12)" rx="2" ry="2" />
<text  x="750.48" y="1487.5" ></text>
</g>
<g >
<title>prefetch_freepointer (5 samples, 0.08%)</title><rect x="378.9" y="1877" width="1.0" height="15.0" fill="rgb(235,190,43)" rx="2" ry="2" />
<text  x="381.94" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="322.9" y="1989" width="0.2" height="15.0" fill="rgb(218,169,48)" rx="2" ry="2" />
<text  x="325.90" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="502.4" y="1893" width="0.4" height="15.0" fill="rgb(247,171,48)" rx="2" ry="2" />
<text  x="505.38" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (1 samples, 0.02%)</title><rect x="213.0" y="1909" width="0.2" height="15.0" fill="rgb(231,216,46)" rx="2" ry="2" />
<text  x="216.02" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (37 samples, 0.63%)</title><rect x="792.1" y="1541" width="7.4" height="15.0" fill="rgb(241,90,1)" rx="2" ry="2" />
<text  x="795.15" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="888.9" y="1957" width="1.4" height="15.0" fill="rgb(227,122,36)" rx="2" ry="2" />
<text  x="891.87" y="1967.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="806.3" y="1493" width="0.4" height="15.0" fill="rgb(246,162,15)" rx="2" ry="2" />
<text  x="809.31" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="365.2" y="1829" width="0.2" height="15.0" fill="rgb(216,199,51)" rx="2" ry="2" />
<text  x="368.18" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="861.7" y="1797" width="0.2" height="15.0" fill="rgb(223,220,28)" rx="2" ry="2" />
<text  x="864.75" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="540.3" y="1909" width="0.2" height="15.0" fill="rgb(250,130,48)" rx="2" ry="2" />
<text  x="543.27" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="952.7" y="1845" width="0.2" height="15.0" fill="rgb(240,121,44)" rx="2" ry="2" />
<text  x="955.68" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="241.9" y="1813" width="0.2" height="15.0" fill="rgb(249,29,21)" rx="2" ry="2" />
<text  x="244.93" y="1823.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="971.4" y="1909" width="0.8" height="15.0" fill="rgb(218,218,30)" rx="2" ry="2" />
<text  x="974.43" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="84.6" y="1973" width="0.2" height="15.0" fill="rgb(247,39,40)" rx="2" ry="2" />
<text  x="87.59" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="149.6" y="1861" width="0.2" height="15.0" fill="rgb(236,70,8)" rx="2" ry="2" />
<text  x="152.60" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1072.3" y="1765" width="0.2" height="15.0" fill="rgb(246,17,38)" rx="2" ry="2" />
<text  x="1075.34" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="736.5" y="1701" width="0.2" height="15.0" fill="rgb(235,42,23)" rx="2" ry="2" />
<text  x="739.51" y="1711.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1151.5" y="1989" width="0.4" height="15.0" fill="rgb(245,34,34)" rx="2" ry="2" />
<text  x="1154.51" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1135.4" y="1845" width="0.2" height="15.0" fill="rgb(247,51,6)" rx="2" ry="2" />
<text  x="1138.36" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="113.7" y="1509" width="0.2" height="15.0" fill="rgb(222,155,38)" rx="2" ry="2" />
<text  x="116.70" y="1519.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="610.7" y="1589" width="0.2" height="15.0" fill="rgb(235,18,8)" rx="2" ry="2" />
<text  x="613.67" y="1599.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="205.0" y="1829" width="0.6" height="15.0" fill="rgb(239,36,32)" rx="2" ry="2" />
<text  x="208.04" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="936.7" y="1893" width="0.2" height="15.0" fill="rgb(235,209,45)" rx="2" ry="2" />
<text  x="939.73" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="924.8" y="1653" width="0.2" height="15.0" fill="rgb(234,179,32)" rx="2" ry="2" />
<text  x="927.76" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="853.0" y="1909" width="0.2" height="15.0" fill="rgb(212,92,39)" rx="2" ry="2" />
<text  x="855.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="859.2" y="1621" width="0.2" height="15.0" fill="rgb(217,185,17)" rx="2" ry="2" />
<text  x="862.15" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="972.4" y="1957" width="0.2" height="15.0" fill="rgb(230,178,22)" rx="2" ry="2" />
<text  x="975.43" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="922.6" y="2021" width="1.6" height="15.0" fill="rgb(244,222,43)" rx="2" ry="2" />
<text  x="925.57" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="177.9" y="2005" width="0.2" height="15.0" fill="rgb(217,40,5)" rx="2" ry="2" />
<text  x="180.92" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1179.0" y="1989" width="0.2" height="15.0" fill="rgb(212,190,54)" rx="2" ry="2" />
<text  x="1182.03" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="599.5" y="1413" width="0.2" height="15.0" fill="rgb(248,162,43)" rx="2" ry="2" />
<text  x="602.50" y="1423.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (5 samples, 0.08%)</title><rect x="653.7" y="2021" width="1.0" height="15.0" fill="rgb(241,97,43)" rx="2" ry="2" />
<text  x="656.75" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="991.2" y="1973" width="0.4" height="15.0" fill="rgb(227,105,43)" rx="2" ry="2" />
<text  x="994.17" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="687.4" y="1813" width="0.8" height="15.0" fill="rgb(239,94,32)" rx="2" ry="2" />
<text  x="690.45" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="736.7" y="1701" width="0.4" height="15.0" fill="rgb(224,64,40)" rx="2" ry="2" />
<text  x="739.71" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1150.7" y="1893" width="0.2" height="15.0" fill="rgb(216,124,29)" rx="2" ry="2" />
<text  x="1153.71" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="1150.7" y="1429" width="0.2" height="15.0" fill="rgb(240,203,9)" rx="2" ry="2" />
<text  x="1153.71" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="107.9" y="69" width="1.0" height="15.0" fill="rgb(225,163,43)" rx="2" ry="2" />
<text  x="110.92" y="79.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="162.2" y="2005" width="0.2" height="15.0" fill="rgb(205,86,51)" rx="2" ry="2" />
<text  x="165.16" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="859.2" y="1845" width="0.2" height="15.0" fill="rgb(212,44,5)" rx="2" ry="2" />
<text  x="862.15" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.2" y="1861" width="0.2" height="15.0" fill="rgb(248,88,45)" rx="2" ry="2" />
<text  x="690.25" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="120.1" y="1957" width="1.2" height="15.0" fill="rgb(205,26,32)" rx="2" ry="2" />
<text  x="123.08" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="548.0" y="1941" width="0.2" height="15.0" fill="rgb(236,168,35)" rx="2" ry="2" />
<text  x="551.05" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="952.7" y="1685" width="0.2" height="15.0" fill="rgb(247,78,26)" rx="2" ry="2" />
<text  x="955.68" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="909.8" y="1605" width="0.2" height="15.0" fill="rgb(230,61,16)" rx="2" ry="2" />
<text  x="912.81" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.03%)</title><rect x="613.9" y="1861" width="0.4" height="15.0" fill="rgb(236,220,20)" rx="2" ry="2" />
<text  x="616.86" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="909.8" y="1717" width="0.2" height="15.0" fill="rgb(254,15,12)" rx="2" ry="2" />
<text  x="912.81" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="673.5" y="1765" width="0.2" height="15.0" fill="rgb(206,207,20)" rx="2" ry="2" />
<text  x="676.49" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="541.1" y="1861" width="0.6" height="15.0" fill="rgb(232,45,37)" rx="2" ry="2" />
<text  x="544.07" y="1871.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="244.9" y="1877" width="0.2" height="15.0" fill="rgb(252,64,2)" rx="2" ry="2" />
<text  x="247.92" y="1887.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="985.0" y="1893" width="0.4" height="15.0" fill="rgb(246,220,28)" rx="2" ry="2" />
<text  x="987.99" y="1903.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="697.0" y="1813" width="0.2" height="15.0" fill="rgb(239,225,23)" rx="2" ry="2" />
<text  x="700.02" y="1823.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1105.0" y="1589" width="0.2" height="15.0" fill="rgb(214,20,25)" rx="2" ry="2" />
<text  x="1108.04" y="1599.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (5 samples, 0.08%)</title><rect x="536.3" y="1973" width="1.0" height="15.0" fill="rgb(219,208,6)" rx="2" ry="2" />
<text  x="539.28" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="953.7" y="1989" width="0.4" height="15.0" fill="rgb(230,20,36)" rx="2" ry="2" />
<text  x="956.68" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1150.7" y="1509" width="0.2" height="15.0" fill="rgb(237,21,11)" rx="2" ry="2" />
<text  x="1153.71" y="1519.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="997.8" y="1509" width="0.2" height="15.0" fill="rgb(227,169,15)" rx="2" ry="2" />
<text  x="1000.75" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="94.2" y="37" width="0.2" height="15.0" fill="rgb(254,137,11)" rx="2" ry="2" />
<text  x="97.16" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="528.1" y="2021" width="0.2" height="15.0" fill="rgb(233,185,2)" rx="2" ry="2" />
<text  x="531.11" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="124.3" y="1941" width="0.2" height="15.0" fill="rgb(227,183,2)" rx="2" ry="2" />
<text  x="127.27" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="617.6" y="2005" width="0.2" height="15.0" fill="rgb(224,103,35)" rx="2" ry="2" />
<text  x="620.65" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="661.3" y="1781" width="0.2" height="15.0" fill="rgb(208,226,17)" rx="2" ry="2" />
<text  x="664.32" y="1791.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="759.4" y="1733" width="0.2" height="15.0" fill="rgb(205,142,22)" rx="2" ry="2" />
<text  x="762.44" y="1743.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="92.0" y="1973" width="0.2" height="15.0" fill="rgb(226,132,52)" rx="2" ry="2" />
<text  x="94.96" y="1983.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="614.5" y="1877" width="0.2" height="15.0" fill="rgb(252,41,13)" rx="2" ry="2" />
<text  x="617.46" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="655.9" y="2005" width="0.2" height="15.0" fill="rgb(246,130,16)" rx="2" ry="2" />
<text  x="658.94" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="93.2" y="1301" width="19.3" height="15.0" fill="rgb(212,9,18)" rx="2" ry="2" />
<text  x="96.16" y="1311.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (68 samples, 1.15%)</title><rect x="631.8" y="2037" width="13.6" height="15.0" fill="rgb(219,185,49)" rx="2" ry="2" />
<text  x="634.81" y="2047.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (54 samples, 0.91%)</title><rect x="1090.9" y="1925" width="10.8" height="15.0" fill="rgb(232,110,21)" rx="2" ry="2" />
<text  x="1093.89" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13 samples, 0.22%)</title><rect x="821.5" y="1589" width="2.6" height="15.0" fill="rgb(236,84,22)" rx="2" ry="2" />
<text  x="824.46" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="29.3" y="1861" width="0.2" height="15.0" fill="rgb(244,56,46)" rx="2" ry="2" />
<text  x="32.34" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.2" y="1765" width="0.2" height="15.0" fill="rgb(235,195,34)" rx="2" ry="2" />
<text  x="844.21" y="1775.5" ></text>
</g>
<g >
<title>sys_fcntl (10 samples, 0.17%)</title><rect x="562.6" y="1941" width="2.0" height="15.0" fill="rgb(218,44,0)" rx="2" ry="2" />
<text  x="565.61" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="952.7" y="1797" width="0.2" height="15.0" fill="rgb(221,85,48)" rx="2" ry="2" />
<text  x="955.68" y="1807.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="813.3" y="1637" width="0.2" height="15.0" fill="rgb(226,72,12)" rx="2" ry="2" />
<text  x="816.29" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="211.4" y="1877" width="0.2" height="15.0" fill="rgb(234,162,11)" rx="2" ry="2" />
<text  x="214.42" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="51.5" y="1957" width="0.2" height="15.0" fill="rgb(238,226,40)" rx="2" ry="2" />
<text  x="54.48" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_queue_purge (1 samples, 0.02%)</title><rect x="748.1" y="1461" width="0.2" height="15.0" fill="rgb(214,51,12)" rx="2" ry="2" />
<text  x="751.07" y="1471.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="208.4" y="1877" width="0.2" height="15.0" fill="rgb(227,94,38)" rx="2" ry="2" />
<text  x="211.43" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="379.7" y="1749" width="0.2" height="15.0" fill="rgb(235,179,2)" rx="2" ry="2" />
<text  x="382.73" y="1759.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="303.0" y="1829" width="0.4" height="15.0" fill="rgb(226,210,42)" rx="2" ry="2" />
<text  x="305.96" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.02%)</title><rect x="611.7" y="1861" width="0.2" height="15.0" fill="rgb(249,34,51)" rx="2" ry="2" />
<text  x="614.67" y="1871.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="235.9" y="1877" width="0.2" height="15.0" fill="rgb(207,87,13)" rx="2" ry="2" />
<text  x="238.95" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1079.5" y="1413" width="0.2" height="15.0" fill="rgb(215,117,6)" rx="2" ry="2" />
<text  x="1082.52" y="1423.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (2 samples, 0.03%)</title><rect x="252.1" y="1781" width="0.4" height="15.0" fill="rgb(249,110,29)" rx="2" ry="2" />
<text  x="255.10" y="1791.5" ></text>
</g>
<g >
<title>inet_release (423 samples, 7.15%)</title><rect x="753.1" y="1765" width="84.3" height="15.0" fill="rgb(229,103,16)" rx="2" ry="2" />
<text  x="756.06" y="1775.5" >inet_rele..</text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="14.4" y="1941" width="1.0" height="15.0" fill="rgb(225,192,2)" rx="2" ry="2" />
<text  x="17.39" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1017.1" y="1781" width="0.4" height="15.0" fill="rgb(232,87,36)" rx="2" ry="2" />
<text  x="1020.10" y="1791.5" ></text>
</g>
<g >
<title>process_backlog (51 samples, 0.86%)</title><rect x="1106.4" y="1701" width="10.2" height="15.0" fill="rgb(253,26,10)" rx="2" ry="2" />
<text  x="1109.44" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (65 samples, 1.10%)</title><rect x="659.9" y="1989" width="13.0" height="15.0" fill="rgb(233,29,36)" rx="2" ry="2" />
<text  x="662.93" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1171.1" y="2021" width="0.2" height="15.0" fill="rgb(220,56,24)" rx="2" ry="2" />
<text  x="1174.05" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="675.1" y="1829" width="0.8" height="15.0" fill="rgb(252,152,47)" rx="2" ry="2" />
<text  x="678.08" y="1839.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="218.6" y="2037" width="0.4" height="15.0" fill="rgb(235,34,15)" rx="2" ry="2" />
<text  x="221.60" y="2047.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="687.2" y="1781" width="0.2" height="15.0" fill="rgb(252,150,34)" rx="2" ry="2" />
<text  x="690.25" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="669.7" y="1685" width="0.2" height="15.0" fill="rgb(220,136,35)" rx="2" ry="2" />
<text  x="672.70" y="1695.5" ></text>
</g>
<g >
<title>tcp_check_oom (1 samples, 0.02%)</title><rect x="753.5" y="1749" width="0.2" height="15.0" fill="rgb(235,131,45)" rx="2" ry="2" />
<text  x="756.46" y="1759.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="682.1" y="1941" width="0.2" height="15.0" fill="rgb(205,226,43)" rx="2" ry="2" />
<text  x="685.06" y="1951.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="648.2" y="1973" width="0.2" height="15.0" fill="rgb(237,193,38)" rx="2" ry="2" />
<text  x="651.16" y="1983.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="667.3" y="1861" width="0.2" height="15.0" fill="rgb(221,204,19)" rx="2" ry="2" />
<text  x="670.31" y="1871.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="1177.8" y="1941" width="0.2" height="15.0" fill="rgb(233,34,18)" rx="2" ry="2" />
<text  x="1180.84" y="1951.5" ></text>
</g>
<g >
<title>d_instantiate (11 samples, 0.19%)</title><rect x="397.7" y="1941" width="2.2" height="15.0" fill="rgb(220,145,22)" rx="2" ry="2" />
<text  x="400.68" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="529.5" y="1861" width="0.4" height="15.0" fill="rgb(240,35,10)" rx="2" ry="2" />
<text  x="532.50" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="858.2" y="1941" width="1.4" height="15.0" fill="rgb(252,12,44)" rx="2" ry="2" />
<text  x="861.16" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (3 samples, 0.05%)</title><rect x="617.8" y="2005" width="0.6" height="15.0" fill="rgb(206,126,50)" rx="2" ry="2" />
<text  x="620.85" y="2015.5" ></text>
</g>
<g >
<title>SYSC_getsockname (46 samples, 0.78%)</title><rect x="594.1" y="1877" width="9.2" height="15.0" fill="rgb(220,57,15)" rx="2" ry="2" />
<text  x="597.12" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (7 samples, 0.12%)</title><rect x="866.9" y="1989" width="1.4" height="15.0" fill="rgb(240,153,6)" rx="2" ry="2" />
<text  x="869.93" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="835.0" y="1509" width="0.2" height="15.0" fill="rgb(241,99,33)" rx="2" ry="2" />
<text  x="838.02" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="93.0" y="1733" width="21.9" height="15.0" fill="rgb(232,112,42)" rx="2" ry="2" />
<text  x="95.96" y="1743.5" >[..</text>
</g>
<g >
<title>__fget_light (10 samples, 0.17%)</title><rect x="601.1" y="1829" width="2.0" height="15.0" fill="rgb(226,176,34)" rx="2" ry="2" />
<text  x="604.10" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="402.7" y="1925" width="0.2" height="15.0" fill="rgb(209,35,23)" rx="2" ry="2" />
<text  x="405.67" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="92.2" y="1909" width="0.2" height="15.0" fill="rgb(242,226,25)" rx="2" ry="2" />
<text  x="95.16" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="737.1" y="1701" width="0.2" height="15.0" fill="rgb(216,120,31)" rx="2" ry="2" />
<text  x="740.10" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (44 samples, 0.74%)</title><rect x="164.6" y="2021" width="8.7" height="15.0" fill="rgb(235,61,43)" rx="2" ry="2" />
<text  x="167.55" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="697.0" y="1941" width="0.2" height="15.0" fill="rgb(207,110,13)" rx="2" ry="2" />
<text  x="700.02" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="93.2" y="1461" width="20.3" height="15.0" fill="rgb(217,207,45)" rx="2" ry="2" />
<text  x="96.16" y="1471.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="81.8" y="1957" width="0.6" height="15.0" fill="rgb(206,98,53)" rx="2" ry="2" />
<text  x="84.79" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="528.9" y="1941" width="1.2" height="15.0" fill="rgb(212,139,27)" rx="2" ry="2" />
<text  x="531.90" y="1951.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="1134.6" y="1957" width="0.2" height="15.0" fill="rgb(252,219,39)" rx="2" ry="2" />
<text  x="1137.56" y="1967.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="750.5" y="1765" width="1.2" height="15.0" fill="rgb(237,196,47)" rx="2" ry="2" />
<text  x="753.47" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="916.0" y="1973" width="0.2" height="15.0" fill="rgb(251,134,54)" rx="2" ry="2" />
<text  x="918.99" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1128.0" y="1717" width="0.2" height="15.0" fill="rgb(233,212,32)" rx="2" ry="2" />
<text  x="1130.98" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="72.0" y="1957" width="0.8" height="15.0" fill="rgb(218,207,8)" rx="2" ry="2" />
<text  x="75.02" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="834.0" y="1701" width="0.2" height="15.0" fill="rgb(205,79,21)" rx="2" ry="2" />
<text  x="837.03" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="707.0" y="1781" width="0.2" height="15.0" fill="rgb(238,152,22)" rx="2" ry="2" />
<text  x="709.99" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="725.9" y="1701" width="0.2" height="15.0" fill="rgb(254,25,21)" rx="2" ry="2" />
<text  x="728.94" y="1711.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="952.7" y="1669" width="0.2" height="15.0" fill="rgb(245,54,7)" rx="2" ry="2" />
<text  x="955.68" y="1679.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1018.7" y="2037" width="0.2" height="15.0" fill="rgb(215,31,13)" rx="2" ry="2" />
<text  x="1021.69" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="107.1" y="37" width="0.4" height="15.0" fill="rgb(244,178,51)" rx="2" ry="2" />
<text  x="110.12" y="47.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="259.3" y="1845" width="0.4" height="15.0" fill="rgb(246,23,7)" rx="2" ry="2" />
<text  x="262.28" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="121.3" y="1845" width="0.2" height="15.0" fill="rgb(240,178,26)" rx="2" ry="2" />
<text  x="124.28" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="109.7" y="53" width="0.4" height="15.0" fill="rgb(210,199,1)" rx="2" ry="2" />
<text  x="112.71" y="63.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="922.6" y="2005" width="1.0" height="15.0" fill="rgb(243,6,29)" rx="2" ry="2" />
<text  x="925.57" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (6 samples, 0.10%)</title><rect x="890.7" y="1925" width="1.2" height="15.0" fill="rgb(222,62,41)" rx="2" ry="2" />
<text  x="893.66" y="1935.5" ></text>
</g>
<g >
<title>__skb_clone (8 samples, 0.14%)</title><rect x="292.0" y="1797" width="1.6" height="15.0" fill="rgb(245,166,43)" rx="2" ry="2" />
<text  x="294.99" y="1807.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="313.9" y="1957" width="0.2" height="15.0" fill="rgb(251,124,47)" rx="2" ry="2" />
<text  x="316.92" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="54.3" y="1733" width="0.2" height="15.0" fill="rgb(233,129,21)" rx="2" ry="2" />
<text  x="57.27" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="673.5" y="1957" width="0.2" height="15.0" fill="rgb(212,124,17)" rx="2" ry="2" />
<text  x="676.49" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="121.3" y="1813" width="0.2" height="15.0" fill="rgb(244,4,51)" rx="2" ry="2" />
<text  x="124.28" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (31 samples, 0.52%)</title><rect x="283.4" y="1653" width="6.2" height="15.0" fill="rgb(243,40,10)" rx="2" ry="2" />
<text  x="286.41" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="165.2" y="1957" width="0.2" height="15.0" fill="rgb(213,78,15)" rx="2" ry="2" />
<text  x="168.15" y="1967.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="594.7" y="1861" width="0.2" height="15.0" fill="rgb(225,59,2)" rx="2" ry="2" />
<text  x="597.72" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="970.4" y="1717" width="0.2" height="15.0" fill="rgb(227,115,0)" rx="2" ry="2" />
<text  x="973.43" y="1727.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1087.7" y="1925" width="0.2" height="15.0" fill="rgb(226,38,17)" rx="2" ry="2" />
<text  x="1090.69" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="485.8" y="1957" width="0.4" height="15.0" fill="rgb(214,121,42)" rx="2" ry="2" />
<text  x="488.83" y="1967.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1072.3" y="1781" width="0.2" height="15.0" fill="rgb(216,195,9)" rx="2" ry="2" />
<text  x="1075.34" y="1791.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1176.4" y="1957" width="0.2" height="15.0" fill="rgb(248,169,6)" rx="2" ry="2" />
<text  x="1179.44" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="868.1" y="1973" width="0.2" height="15.0" fill="rgb(253,107,27)" rx="2" ry="2" />
<text  x="871.13" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="528.9" y="1957" width="1.4" height="15.0" fill="rgb(210,85,6)" rx="2" ry="2" />
<text  x="531.90" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (174 samples, 2.94%)</title><rect x="776.0" y="1669" width="34.7" height="15.0" fill="rgb(239,108,48)" rx="2" ry="2" />
<text  x="778.99" y="1679.5" >ip..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="482.8" y="1733" width="0.2" height="15.0" fill="rgb(207,26,16)" rx="2" ry="2" />
<text  x="485.84" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="912.4" y="1973" width="0.2" height="15.0" fill="rgb(223,72,8)" rx="2" ry="2" />
<text  x="915.40" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="537.3" y="1669" width="0.2" height="15.0" fill="rgb(213,59,2)" rx="2" ry="2" />
<text  x="540.28" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="869.5" y="1973" width="0.2" height="15.0" fill="rgb(252,82,47)" rx="2" ry="2" />
<text  x="872.52" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="156.6" y="1973" width="0.2" height="15.0" fill="rgb(227,165,8)" rx="2" ry="2" />
<text  x="159.58" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="599.5" y="1781" width="0.2" height="15.0" fill="rgb(244,210,15)" rx="2" ry="2" />
<text  x="602.50" y="1791.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (30 samples, 0.51%)</title><rect x="683.9" y="1893" width="5.9" height="15.0" fill="rgb(235,59,37)" rx="2" ry="2" />
<text  x="686.86" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="512.4" y="1941" width="0.4" height="15.0" fill="rgb(216,70,27)" rx="2" ry="2" />
<text  x="515.35" y="1951.5" ></text>
</g>
<g >
<title>free (36 samples, 0.61%)</title><rect x="1010.3" y="2037" width="7.2" height="15.0" fill="rgb(228,81,26)" rx="2" ry="2" />
<text  x="1013.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="903.8" y="2021" width="1.4" height="15.0" fill="rgb(216,18,34)" rx="2" ry="2" />
<text  x="906.82" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (7 samples, 0.12%)</title><rect x="883.7" y="1941" width="1.4" height="15.0" fill="rgb(242,87,25)" rx="2" ry="2" />
<text  x="886.68" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="11.4" y="2037" width="2.6" height="15.0" fill="rgb(217,106,23)" rx="2" ry="2" />
<text  x="14.40" y="2047.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (13 samples, 0.22%)</title><rect x="1182.2" y="2053" width="2.6" height="15.0" fill="rgb(227,188,41)" rx="2" ry="2" />
<text  x="1185.22" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="915.6" y="1941" width="0.2" height="15.0" fill="rgb(237,164,14)" rx="2" ry="2" />
<text  x="918.59" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="673.5" y="1909" width="0.2" height="15.0" fill="rgb(254,74,14)" rx="2" ry="2" />
<text  x="676.49" y="1919.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.19%)</title><rect x="1085.5" y="1893" width="2.2" height="15.0" fill="rgb(235,118,32)" rx="2" ry="2" />
<text  x="1088.50" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="903.2" y="1989" width="0.2" height="15.0" fill="rgb(216,11,49)" rx="2" ry="2" />
<text  x="906.23" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="213.8" y="1893" width="0.4" height="15.0" fill="rgb(253,13,24)" rx="2" ry="2" />
<text  x="216.81" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1090.7" y="1781" width="0.2" height="15.0" fill="rgb(205,205,13)" rx="2" ry="2" />
<text  x="1093.69" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="938.1" y="1957" width="1.0" height="15.0" fill="rgb(207,195,46)" rx="2" ry="2" />
<text  x="941.13" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="974.6" y="2037" width="0.2" height="15.0" fill="rgb(247,181,38)" rx="2" ry="2" />
<text  x="977.62" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="980.8" y="1989" width="0.4" height="15.0" fill="rgb(211,133,26)" rx="2" ry="2" />
<text  x="983.80" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="571.4" y="2005" width="0.6" height="15.0" fill="rgb(236,34,30)" rx="2" ry="2" />
<text  x="574.38" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="747.5" y="1605" width="0.2" height="15.0" fill="rgb(205,218,45)" rx="2" ry="2" />
<text  x="750.48" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="825.5" y="1669" width="0.1" height="15.0" fill="rgb(211,170,8)" rx="2" ry="2" />
<text  x="828.45" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1026.3" y="1957" width="0.2" height="15.0" fill="rgb(211,85,50)" rx="2" ry="2" />
<text  x="1029.27" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="399.7" y="1893" width="0.2" height="15.0" fill="rgb(215,44,5)" rx="2" ry="2" />
<text  x="402.68" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="485.8" y="1797" width="0.2" height="15.0" fill="rgb(212,4,22)" rx="2" ry="2" />
<text  x="488.83" y="1807.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="236.7" y="1893" width="0.2" height="15.0" fill="rgb(242,2,32)" rx="2" ry="2" />
<text  x="239.75" y="1903.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="667.7" y="1845" width="0.6" height="15.0" fill="rgb(253,138,52)" rx="2" ry="2" />
<text  x="670.70" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="469.5" y="1749" width="0.2" height="15.0" fill="rgb(209,131,22)" rx="2" ry="2" />
<text  x="472.48" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="121.3" y="1829" width="0.2" height="15.0" fill="rgb(233,132,40)" rx="2" ry="2" />
<text  x="124.28" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="545.9" y="1909" width="0.2" height="15.0" fill="rgb(235,44,33)" rx="2" ry="2" />
<text  x="548.86" y="1919.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (3 samples, 0.05%)</title><rect x="1025.9" y="2053" width="0.6" height="15.0" fill="rgb(241,183,18)" rx="2" ry="2" />
<text  x="1028.87" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="846.2" y="1733" width="0.6" height="15.0" fill="rgb(213,132,31)" rx="2" ry="2" />
<text  x="849.19" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="997.8" y="1589" width="0.2" height="15.0" fill="rgb(247,36,2)" rx="2" ry="2" />
<text  x="1000.75" y="1599.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="697.0" y="1845" width="0.2" height="15.0" fill="rgb(249,94,14)" rx="2" ry="2" />
<text  x="700.02" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="880.9" y="1893" width="0.2" height="15.0" fill="rgb(214,190,42)" rx="2" ry="2" />
<text  x="883.89" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="125.5" y="1941" width="0.2" height="15.0" fill="rgb(228,127,11)" rx="2" ry="2" />
<text  x="128.47" y="1951.5" ></text>
</g>
<g >
<title>sock_recvmsg (342 samples, 5.78%)</title><rect x="1053.8" y="1973" width="68.2" height="15.0" fill="rgb(229,71,46)" rx="2" ry="2" />
<text  x="1056.79" y="1983.5" >sock_re..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="936.9" y="1941" width="0.4" height="15.0" fill="rgb(243,207,34)" rx="2" ry="2" />
<text  x="939.93" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="562.4" y="1941" width="0.2" height="15.0" fill="rgb(230,19,54)" rx="2" ry="2" />
<text  x="565.41" y="1951.5" ></text>
</g>
</g>
</svg>
