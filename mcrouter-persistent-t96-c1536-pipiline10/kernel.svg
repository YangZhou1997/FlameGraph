<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(213,146,11)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.10%)</title><rect x="1047.0" y="1829" width="1.1" height="15.0" fill="rgb(208,213,16)" rx="2" ry="2" />
<text  x="1049.95" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="547.8" y="1877" width="0.2" height="15.0" fill="rgb(227,184,45)" rx="2" ry="2" />
<text  x="550.77" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="616.4" y="2037" width="0.2" height="15.0" fill="rgb(253,76,25)" rx="2" ry="2" />
<text  x="619.42" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1141.7" y="1989" width="0.4" height="15.0" fill="rgb(252,215,7)" rx="2" ry="2" />
<text  x="1144.72" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (12 samples, 0.20%)</title><rect x="503.2" y="1973" width="2.4" height="15.0" fill="rgb(250,179,52)" rx="2" ry="2" />
<text  x="506.25" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (4 samples, 0.07%)</title><rect x="898.4" y="1893" width="0.8" height="15.0" fill="rgb(221,193,54)" rx="2" ry="2" />
<text  x="901.36" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="352.5" y="1957" width="0.2" height="15.0" fill="rgb(218,45,21)" rx="2" ry="2" />
<text  x="355.48" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (80 samples, 1.34%)</title><rect x="235.9" y="1621" width="15.9" height="15.0" fill="rgb(214,82,37)" rx="2" ry="2" />
<text  x="238.95" y="1631.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="424.9" y="1957" width="0.2" height="15.0" fill="rgb(210,133,43)" rx="2" ry="2" />
<text  x="427.90" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="324.4" y="1973" width="0.4" height="15.0" fill="rgb(222,63,8)" rx="2" ry="2" />
<text  x="327.39" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="273.7" y="1925" width="0.2" height="15.0" fill="rgb(205,136,14)" rx="2" ry="2" />
<text  x="276.74" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="641.9" y="1813" width="0.2" height="15.0" fill="rgb(253,120,33)" rx="2" ry="2" />
<text  x="644.95" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (10 samples, 0.17%)</title><rect x="179.8" y="2021" width="1.9" height="15.0" fill="rgb(224,149,35)" rx="2" ry="2" />
<text  x="182.76" y="2031.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1073.3" y="1765" width="0.2" height="15.0" fill="rgb(223,161,50)" rx="2" ry="2" />
<text  x="1076.27" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::dataBufferDestructor&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="899.7" y="1989" width="0.2" height="15.0" fill="rgb(206,41,17)" rx="2" ry="2" />
<text  x="902.75" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (176 samples, 2.95%)</title><rect x="53.9" y="69" width="34.8" height="15.0" fill="rgb(243,209,22)" rx="2" ry="2" />
<text  x="56.92" y="79.5" >[u..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1941" width="42.0" height="15.0" fill="rgb(251,97,12)" rx="2" ry="2" />
<text  x="56.92" y="1951.5" >[un..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="614.4" y="1989" width="0.2" height="15.0" fill="rgb(212,113,20)" rx="2" ry="2" />
<text  x="617.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (1 samples, 0.02%)</title><rect x="162.1" y="2021" width="0.2" height="15.0" fill="rgb(230,192,2)" rx="2" ry="2" />
<text  x="165.15" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (6 samples, 0.10%)</title><rect x="144.9" y="1941" width="1.2" height="15.0" fill="rgb(229,224,17)" rx="2" ry="2" />
<text  x="147.94" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (78 samples, 1.31%)</title><rect x="236.3" y="1573" width="15.5" height="15.0" fill="rgb(248,76,31)" rx="2" ry="2" />
<text  x="239.34" y="1583.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="226.3" y="1861" width="0.3" height="15.0" fill="rgb(223,51,28)" rx="2" ry="2" />
<text  x="229.25" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="154.0" y="1925" width="0.4" height="15.0" fill="rgb(243,115,47)" rx="2" ry="2" />
<text  x="157.04" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="612.7" y="1989" width="0.2" height="15.0" fill="rgb(244,142,39)" rx="2" ry="2" />
<text  x="615.66" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="174.6" y="2021" width="0.2" height="15.0" fill="rgb(236,110,18)" rx="2" ry="2" />
<text  x="177.61" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (8 samples, 0.13%)</title><rect x="298.5" y="1973" width="1.6" height="15.0" fill="rgb(221,217,9)" rx="2" ry="2" />
<text  x="301.47" y="1983.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="641.9" y="1829" width="0.2" height="15.0" fill="rgb(211,55,19)" rx="2" ry="2" />
<text  x="644.95" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (5 samples, 0.08%)</title><rect x="193.8" y="2021" width="1.0" height="15.0" fill="rgb(252,157,33)" rx="2" ry="2" />
<text  x="196.81" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="440.3" y="1941" width="0.2" height="15.0" fill="rgb(210,100,49)" rx="2" ry="2" />
<text  x="443.33" y="1951.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="258.1" y="1813" width="0.2" height="15.0" fill="rgb(235,216,23)" rx="2" ry="2" />
<text  x="261.11" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.34%)</title><rect x="12.4" y="1925" width="3.9" height="15.0" fill="rgb(239,8,54)" rx="2" ry="2" />
<text  x="15.37" y="1935.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="787.6" y="2005" width="0.2" height="15.0" fill="rgb(244,90,35)" rx="2" ry="2" />
<text  x="790.57" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="811.3" y="1989" width="0.6" height="15.0" fill="rgb(249,100,25)" rx="2" ry="2" />
<text  x="814.31" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="163.1" y="2005" width="0.2" height="15.0" fill="rgb(211,27,48)" rx="2" ry="2" />
<text  x="166.14" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (16 samples, 0.27%)</title><rect x="355.7" y="1941" width="3.1" height="15.0" fill="rgb(248,31,19)" rx="2" ry="2" />
<text  x="358.65" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="95.7" y="85" width="0.2" height="15.0" fill="rgb(225,101,4)" rx="2" ry="2" />
<text  x="98.67" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="11.4" y="2037" width="1.0" height="15.0" fill="rgb(230,120,24)" rx="2" ry="2" />
<text  x="14.38" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (4 samples, 0.07%)</title><rect x="177.6" y="1941" width="0.8" height="15.0" fill="rgb(206,109,13)" rx="2" ry="2" />
<text  x="180.58" y="1951.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="209.6" y="1925" width="0.2" height="15.0" fill="rgb(231,153,52)" rx="2" ry="2" />
<text  x="212.63" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (8 samples, 0.13%)</title><rect x="495.9" y="1989" width="1.6" height="15.0" fill="rgb(211,99,13)" rx="2" ry="2" />
<text  x="498.93" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="548.6" y="1957" width="0.9" height="15.0" fill="rgb(227,32,31)" rx="2" ry="2" />
<text  x="551.56" y="1967.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="95.7" y="53" width="0.2" height="15.0" fill="rgb(231,21,42)" rx="2" ry="2" />
<text  x="98.67" y="63.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="553.7" y="2005" width="0.2" height="15.0" fill="rgb(217,31,13)" rx="2" ry="2" />
<text  x="556.70" y="2015.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(215,222,53)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="460.3" y="1973" width="0.2" height="15.0" fill="rgb(246,10,33)" rx="2" ry="2" />
<text  x="463.32" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (19 samples, 0.32%)</title><rect x="175.6" y="1957" width="3.8" height="15.0" fill="rgb(252,4,48)" rx="2" ry="2" />
<text  x="178.60" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (40 samples, 0.67%)</title><rect x="544.4" y="1989" width="7.9" height="15.0" fill="rgb(245,106,35)" rx="2" ry="2" />
<text  x="547.40" y="1999.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="549.3" y="1941" width="0.2" height="15.0" fill="rgb(220,33,41)" rx="2" ry="2" />
<text  x="552.35" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="360.8" y="2021" width="0.6" height="15.0" fill="rgb(250,52,45)" rx="2" ry="2" />
<text  x="363.79" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="856.8" y="2005" width="0.4" height="15.0" fill="rgb(236,91,22)" rx="2" ry="2" />
<text  x="859.81" y="2015.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="161.6" y="2021" width="0.2" height="15.0" fill="rgb(238,193,29)" rx="2" ry="2" />
<text  x="164.56" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="929.6" y="1957" width="0.2" height="15.0" fill="rgb(249,61,52)" rx="2" ry="2" />
<text  x="932.62" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23 samples, 0.39%)</title><rect x="175.2" y="2005" width="4.6" height="15.0" fill="rgb(220,93,21)" rx="2" ry="2" />
<text  x="178.21" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="111.3" y="1957" width="0.2" height="15.0" fill="rgb(242,221,53)" rx="2" ry="2" />
<text  x="114.30" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15 samples, 0.25%)</title><rect x="1077.6" y="1733" width="3.0" height="15.0" fill="rgb(228,60,6)" rx="2" ry="2" />
<text  x="1080.62" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="417.8" y="2005" width="0.2" height="15.0" fill="rgb(239,188,30)" rx="2" ry="2" />
<text  x="420.78" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="550.9" y="1925" width="0.6" height="15.0" fill="rgb(246,95,31)" rx="2" ry="2" />
<text  x="553.93" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="614.4" y="1925" width="0.2" height="15.0" fill="rgb(234,75,41)" rx="2" ry="2" />
<text  x="617.44" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="926.3" y="1925" width="0.2" height="15.0" fill="rgb(233,134,3)" rx="2" ry="2" />
<text  x="929.26" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="814.9" y="1973" width="0.4" height="15.0" fill="rgb(231,73,37)" rx="2" ry="2" />
<text  x="817.87" y="1983.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="1047.3" y="1797" width="0.6" height="15.0" fill="rgb(232,151,22)" rx="2" ry="2" />
<text  x="1050.35" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (1 samples, 0.02%)</title><rect x="175.2" y="1973" width="0.2" height="15.0" fill="rgb(222,77,23)" rx="2" ry="2" />
<text  x="178.21" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (48 samples, 0.80%)</title><rect x="351.3" y="2021" width="9.5" height="15.0" fill="rgb(241,129,3)" rx="2" ry="2" />
<text  x="354.30" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="458.1" y="1973" width="2.0" height="15.0" fill="rgb(244,141,51)" rx="2" ry="2" />
<text  x="461.14" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (15 samples, 0.25%)</title><rect x="663.1" y="1877" width="3.0" height="15.0" fill="rgb(247,99,31)" rx="2" ry="2" />
<text  x="666.12" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (5 samples, 0.08%)</title><rect x="471.0" y="2005" width="1.0" height="15.0" fill="rgb(235,85,9)" rx="2" ry="2" />
<text  x="474.00" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="333.1" y="1989" width="0.8" height="15.0" fill="rgb(227,194,18)" rx="2" ry="2" />
<text  x="336.10" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="279.3" y="2037" width="0.2" height="15.0" fill="rgb(239,219,19)" rx="2" ry="2" />
<text  x="282.28" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="920.5" y="1893" width="0.2" height="15.0" fill="rgb(217,85,35)" rx="2" ry="2" />
<text  x="923.52" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="337.4" y="1909" width="4.8" height="15.0" fill="rgb(254,174,48)" rx="2" ry="2" />
<text  x="340.45" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="561.2" y="2005" width="0.8" height="15.0" fill="rgb(251,74,13)" rx="2" ry="2" />
<text  x="564.22" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (51 samples, 0.86%)</title><rect x="350.7" y="2037" width="10.1" height="15.0" fill="rgb(228,51,23)" rx="2" ry="2" />
<text  x="353.70" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="557.7" y="1909" width="0.2" height="15.0" fill="rgb(234,10,33)" rx="2" ry="2" />
<text  x="560.66" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="343.4" y="2021" width="0.2" height="15.0" fill="rgb(215,40,9)" rx="2" ry="2" />
<text  x="346.38" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="23.1" y="1925" width="0.2" height="15.0" fill="rgb(225,5,40)" rx="2" ry="2" />
<text  x="26.06" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.5" y="85" width="0.2" height="15.0" fill="rgb(224,192,8)" rx="2" ry="2" />
<text  x="98.47" y="95.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="693.6" y="1941" width="0.8" height="15.0" fill="rgb(242,204,44)" rx="2" ry="2" />
<text  x="696.58" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="324.2" y="1973" width="0.2" height="15.0" fill="rgb(220,124,50)" rx="2" ry="2" />
<text  x="327.19" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="581.0" y="1909" width="0.2" height="15.0" fill="rgb(252,206,47)" rx="2" ry="2" />
<text  x="584.01" y="1919.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (20 samples, 0.34%)</title><rect x="12.4" y="2069" width="3.9" height="15.0" fill="rgb(222,222,51)" rx="2" ry="2" />
<text  x="15.37" y="2079.5" ></text>
</g>
<g >
<title>tcp_send_ack (88 samples, 1.48%)</title><rect x="1069.5" y="1909" width="17.4" height="15.0" fill="rgb(220,9,7)" rx="2" ry="2" />
<text  x="1072.51" y="1919.5" ></text>
</g>
<g >
<title>put_cpu_partial (5 samples, 0.08%)</title><rect x="1023.4" y="1829" width="1.0" height="15.0" fill="rgb(241,210,41)" rx="2" ry="2" />
<text  x="1026.41" y="1839.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1098.8" y="2053" width="0.2" height="15.0" fill="rgb(225,16,3)" rx="2" ry="2" />
<text  x="1101.79" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="157.6" y="1973" width="0.2" height="15.0" fill="rgb(246,22,4)" rx="2" ry="2" />
<text  x="160.60" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 3.97%)</title><rect x="425.1" y="2021" width="46.9" height="15.0" fill="rgb(205,68,10)" rx="2" ry="2" />
<text  x="428.10" y="2031.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="814.9" y="1909" width="0.2" height="15.0" fill="rgb(226,104,53)" rx="2" ry="2" />
<text  x="817.87" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="354.9" y="1941" width="0.8" height="15.0" fill="rgb(251,130,19)" rx="2" ry="2" />
<text  x="357.86" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="245" width="42.0" height="15.0" fill="rgb(237,102,25)" rx="2" ry="2" />
<text  x="56.92" y="255.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="557.9" y="1925" width="0.2" height="15.0" fill="rgb(229,214,47)" rx="2" ry="2" />
<text  x="560.86" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (5 samples, 0.08%)</title><rect x="924.9" y="1925" width="1.0" height="15.0" fill="rgb(209,134,46)" rx="2" ry="2" />
<text  x="927.88" y="1935.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(251,54,10)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="549.5" y="1957" width="0.2" height="15.0" fill="rgb(253,152,26)" rx="2" ry="2" />
<text  x="552.55" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1071.1" y="1877" width="0.2" height="15.0" fill="rgb(207,115,10)" rx="2" ry="2" />
<text  x="1074.09" y="1887.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="88.7" y="69" width="0.8" height="15.0" fill="rgb(224,176,15)" rx="2" ry="2" />
<text  x="91.75" y="79.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="115.9" y="1941" width="0.1" height="15.0" fill="rgb(246,156,26)" rx="2" ry="2" />
<text  x="118.85" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="789" width="42.0" height="15.0" fill="rgb(253,135,28)" rx="2" ry="2" />
<text  x="56.92" y="799.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="572.3" y="1973" width="1.0" height="15.0" fill="rgb(228,136,11)" rx="2" ry="2" />
<text  x="575.30" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (34 samples, 0.57%)</title><rect x="605.9" y="2037" width="6.8" height="15.0" fill="rgb(242,36,20)" rx="2" ry="2" />
<text  x="608.94" y="2047.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="909.4" y="1829" width="0.2" height="15.0" fill="rgb(254,143,41)" rx="2" ry="2" />
<text  x="912.44" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (4 samples, 0.07%)</title><rect x="640.4" y="1925" width="0.8" height="15.0" fill="rgb(236,100,31)" rx="2" ry="2" />
<text  x="643.36" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="546.4" y="1941" width="0.2" height="15.0" fill="rgb(210,189,50)" rx="2" ry="2" />
<text  x="549.38" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (51 samples, 0.86%)</title><rect x="797.7" y="1973" width="10.0" height="15.0" fill="rgb(242,178,7)" rx="2" ry="2" />
<text  x="800.66" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="811.5" y="1973" width="0.2" height="15.0" fill="rgb(250,29,49)" rx="2" ry="2" />
<text  x="814.51" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (18 samples, 0.30%)</title><rect x="1176.0" y="2037" width="3.5" height="15.0" fill="rgb(207,200,0)" rx="2" ry="2" />
<text  x="1178.95" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (3 samples, 0.05%)</title><rect x="344.6" y="2005" width="0.6" height="15.0" fill="rgb(217,40,8)" rx="2" ry="2" />
<text  x="347.57" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1141" width="42.0" height="15.0" fill="rgb(219,24,23)" rx="2" ry="2" />
<text  x="56.92" y="1151.5" >[un..</text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="843.2" y="1957" width="0.2" height="15.0" fill="rgb(239,198,20)" rx="2" ry="2" />
<text  x="846.16" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="177.8" y="1909" width="0.6" height="15.0" fill="rgb(208,112,21)" rx="2" ry="2" />
<text  x="180.78" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (15 samples, 0.25%)</title><rect x="612.7" y="2037" width="2.9" height="15.0" fill="rgb(227,226,38)" rx="2" ry="2" />
<text  x="615.66" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="559.0" y="1973" width="0.4" height="15.0" fill="rgb(243,16,33)" rx="2" ry="2" />
<text  x="562.04" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="326.8" y="1989" width="0.2" height="15.0" fill="rgb(224,46,25)" rx="2" ry="2" />
<text  x="329.76" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="176.6" y="1893" width="0.4" height="15.0" fill="rgb(243,102,6)" rx="2" ry="2" />
<text  x="179.59" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="165.5" y="1925" width="0.2" height="15.0" fill="rgb(211,65,50)" rx="2" ry="2" />
<text  x="168.51" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (4 samples, 0.07%)</title><rect x="343.6" y="2037" width="0.8" height="15.0" fill="rgb(216,31,37)" rx="2" ry="2" />
<text  x="346.58" y="2047.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="614.4" y="1893" width="0.2" height="15.0" fill="rgb(245,31,16)" rx="2" ry="2" />
<text  x="617.44" y="1903.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="172.6" y="1957" width="0.4" height="15.0" fill="rgb(225,186,41)" rx="2" ry="2" />
<text  x="175.64" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="677" width="42.0" height="15.0" fill="rgb(252,138,0)" rx="2" ry="2" />
<text  x="56.92" y="687.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1157.9" y="2053" width="0.2" height="15.0" fill="rgb(212,135,41)" rx="2" ry="2" />
<text  x="1160.95" y="2063.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (2 samples, 0.03%)</title><rect x="696.4" y="1925" width="0.4" height="15.0" fill="rgb(239,75,24)" rx="2" ry="2" />
<text  x="699.35" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (88 samples, 1.48%)</title><rect x="1069.5" y="1893" width="17.4" height="15.0" fill="rgb(222,102,29)" rx="2" ry="2" />
<text  x="1072.51" y="1903.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (15 samples, 0.25%)</title><rect x="896.4" y="1925" width="3.0" height="15.0" fill="rgb(244,166,54)" rx="2" ry="2" />
<text  x="899.38" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="1108.7" y="2053" width="0.2" height="15.0" fill="rgb(243,132,30)" rx="2" ry="2" />
<text  x="1111.68" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (176 samples, 2.95%)</title><rect x="116.0" y="1989" width="34.9" height="15.0" fill="rgb(219,39,21)" rx="2" ry="2" />
<text  x="119.05" y="1999.5" >fo..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="616.6" y="1989" width="0.6" height="15.0" fill="rgb(216,164,45)" rx="2" ry="2" />
<text  x="619.62" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (18 samples, 0.30%)</title><rect x="355.7" y="1957" width="3.5" height="15.0" fill="rgb(218,165,6)" rx="2" ry="2" />
<text  x="358.65" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="683.3" y="1861" width="0.2" height="15.0" fill="rgb(232,32,41)" rx="2" ry="2" />
<text  x="686.30" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (11 samples, 0.18%)</title><rect x="420.7" y="1973" width="2.2" height="15.0" fill="rgb(230,20,3)" rx="2" ry="2" />
<text  x="423.74" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="448.4" y="1925" width="0.4" height="15.0" fill="rgb(210,47,7)" rx="2" ry="2" />
<text  x="451.44" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1006.4" y="1909" width="0.2" height="15.0" fill="rgb(220,215,46)" rx="2" ry="2" />
<text  x="1009.39" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="304.6" y="1909" width="0.2" height="15.0" fill="rgb(253,3,37)" rx="2" ry="2" />
<text  x="307.60" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="632.1" y="1925" width="0.9" height="15.0" fill="rgb(241,119,32)" rx="2" ry="2" />
<text  x="635.05" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (125 samples, 2.10%)</title><rect x="900.1" y="1925" width="24.8" height="15.0" fill="rgb(213,199,0)" rx="2" ry="2" />
<text  x="903.14" y="1935.5" >f..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="688.4" y="1925" width="2.6" height="15.0" fill="rgb(230,123,16)" rx="2" ry="2" />
<text  x="691.44" y="1935.5" ></text>
</g>
<g >
<title>__sys_sendmsg (312 samples, 5.23%)</title><rect x="207.5" y="1973" width="61.7" height="15.0" fill="rgb(208,2,10)" rx="2" ry="2" />
<text  x="210.46" y="1983.5" >__sys_..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="457.5" y="1973" width="0.4" height="15.0" fill="rgb(226,32,51)" rx="2" ry="2" />
<text  x="460.55" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (14 samples, 0.23%)</title><rect x="517.7" y="1973" width="2.8" height="15.0" fill="rgb(218,179,17)" rx="2" ry="2" />
<text  x="520.69" y="1983.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="251.0" y="1461" width="0.2" height="15.0" fill="rgb(211,171,19)" rx="2" ry="2" />
<text  x="253.99" y="1471.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="550.1" y="1861" width="0.2" height="15.0" fill="rgb(207,84,44)" rx="2" ry="2" />
<text  x="553.14" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="549.7" y="1909" width="0.6" height="15.0" fill="rgb(220,79,0)" rx="2" ry="2" />
<text  x="552.75" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="156.8" y="1925" width="0.2" height="15.0" fill="rgb(224,157,7)" rx="2" ry="2" />
<text  x="159.81" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="11.4" y="1925" width="1.0" height="15.0" fill="rgb(220,18,47)" rx="2" ry="2" />
<text  x="14.38" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1073.3" y="1829" width="0.2" height="15.0" fill="rgb(216,190,9)" rx="2" ry="2" />
<text  x="1076.27" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1669" width="42.0" height="15.0" fill="rgb(208,47,28)" rx="2" ry="2" />
<text  x="56.92" y="1679.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (9 samples, 0.15%)</title><rect x="445.7" y="1909" width="1.8" height="15.0" fill="rgb(213,87,10)" rx="2" ry="2" />
<text  x="448.67" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="115.3" y="1941" width="0.2" height="15.0" fill="rgb(220,23,5)" rx="2" ry="2" />
<text  x="118.26" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (80 samples, 1.34%)</title><rect x="235.9" y="1637" width="15.9" height="15.0" fill="rgb(245,159,37)" rx="2" ry="2" />
<text  x="238.95" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="299.7" y="1941" width="0.2" height="15.0" fill="rgb(210,106,31)" rx="2" ry="2" />
<text  x="302.66" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="334.5" y="1941" width="0.2" height="15.0" fill="rgb(250,108,32)" rx="2" ry="2" />
<text  x="337.48" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="153.8" y="1957" width="0.6" height="15.0" fill="rgb(212,64,21)" rx="2" ry="2" />
<text  x="156.84" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1877" width="42.0" height="15.0" fill="rgb(215,155,24)" rx="2" ry="2" />
<text  x="56.92" y="1887.5" >[un..</text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr (2 samples, 0.03%)</title><rect x="687.3" y="1909" width="0.3" height="15.0" fill="rgb(217,63,3)" rx="2" ry="2" />
<text  x="690.25" y="1919.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (153 samples, 2.57%)</title><rect x="230.8" y="1861" width="30.3" height="15.0" fill="rgb(211,79,19)" rx="2" ry="2" />
<text  x="233.80" y="1871.5" >__..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="352.3" y="1941" width="0.2" height="15.0" fill="rgb(247,21,6)" rx="2" ry="2" />
<text  x="355.29" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="166.7" y="1989" width="0.2" height="15.0" fill="rgb(205,125,28)" rx="2" ry="2" />
<text  x="169.70" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="495.7" y="1989" width="0.2" height="15.0" fill="rgb(232,201,38)" rx="2" ry="2" />
<text  x="498.73" y="1999.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.34%)</title><rect x="12.4" y="2053" width="3.9" height="15.0" fill="rgb(247,132,46)" rx="2" ry="2" />
<text  x="15.37" y="2063.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1090.1" y="1893" width="0.2" height="15.0" fill="rgb(231,174,50)" rx="2" ry="2" />
<text  x="1093.08" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="827.1" y="1989" width="0.4" height="15.0" fill="rgb(245,227,53)" rx="2" ry="2" />
<text  x="830.14" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="955.7" y="2005" width="0.2" height="15.0" fill="rgb(244,60,41)" rx="2" ry="2" />
<text  x="958.74" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="557.7" y="1925" width="0.2" height="15.0" fill="rgb(250,184,13)" rx="2" ry="2" />
<text  x="560.66" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.57%)</title><rect x="605.9" y="2021" width="6.8" height="15.0" fill="rgb(254,185,40)" rx="2" ry="2" />
<text  x="608.94" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="925.9" y="1925" width="0.4" height="15.0" fill="rgb(215,160,30)" rx="2" ry="2" />
<text  x="928.87" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (81 samples, 1.36%)</title><rect x="300.8" y="1989" width="16.1" height="15.0" fill="rgb(210,80,43)" rx="2" ry="2" />
<text  x="303.85" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1146.1" y="1973" width="0.2" height="15.0" fill="rgb(214,16,32)" rx="2" ry="2" />
<text  x="1149.08" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="606.7" y="1989" width="0.2" height="15.0" fill="rgb(206,130,0)" rx="2" ry="2" />
<text  x="609.73" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1381" width="42.0" height="15.0" fill="rgb(205,104,51)" rx="2" ry="2" />
<text  x="56.92" y="1391.5" >[un..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="292.5" y="1925" width="0.2" height="15.0" fill="rgb(208,35,24)" rx="2" ry="2" />
<text  x="295.54" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="598.8" y="2037" width="0.4" height="15.0" fill="rgb(221,171,11)" rx="2" ry="2" />
<text  x="601.81" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="194.6" y="1989" width="0.2" height="15.0" fill="rgb(207,105,47)" rx="2" ry="2" />
<text  x="197.60" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="929.8" y="1957" width="0.2" height="15.0" fill="rgb(232,131,43)" rx="2" ry="2" />
<text  x="932.82" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.15%)</title><rect x="556.9" y="1941" width="1.7" height="15.0" fill="rgb(224,161,46)" rx="2" ry="2" />
<text  x="559.87" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1048.7" y="1893" width="0.2" height="15.0" fill="rgb(242,196,34)" rx="2" ry="2" />
<text  x="1051.73" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="924.7" y="1909" width="0.2" height="15.0" fill="rgb(205,11,13)" rx="2" ry="2" />
<text  x="927.68" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="196.6" y="2021" width="0.4" height="15.0" fill="rgb(217,157,54)" rx="2" ry="2" />
<text  x="199.58" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (1 samples, 0.02%)</title><rect x="17.7" y="2037" width="0.2" height="15.0" fill="rgb(250,105,53)" rx="2" ry="2" />
<text  x="20.72" y="2047.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="235.8" y="1733" width="0.1" height="15.0" fill="rgb(253,55,23)" rx="2" ry="2" />
<text  x="238.75" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="153.4" y="1989" width="0.2" height="15.0" fill="rgb(226,131,9)" rx="2" ry="2" />
<text  x="156.44" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (15 samples, 0.25%)</title><rect x="154.6" y="1989" width="3.0" height="15.0" fill="rgb(224,141,39)" rx="2" ry="2" />
<text  x="157.63" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="695.2" y="1925" width="0.6" height="15.0" fill="rgb(239,99,54)" rx="2" ry="2" />
<text  x="698.17" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (2 samples, 0.03%)</title><rect x="550.3" y="1941" width="0.4" height="15.0" fill="rgb(219,119,13)" rx="2" ry="2" />
<text  x="553.34" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1365" width="42.0" height="15.0" fill="rgb(239,44,36)" rx="2" ry="2" />
<text  x="56.92" y="1375.5" >[un..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (20 samples, 0.34%)</title><rect x="565.0" y="2005" width="3.9" height="15.0" fill="rgb(235,23,9)" rx="2" ry="2" />
<text  x="567.98" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="81.0" y="37" width="0.2" height="15.0" fill="rgb(220,32,27)" rx="2" ry="2" />
<text  x="84.03" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (67 samples, 1.12%)</title><rect x="575.7" y="1989" width="13.2" height="15.0" fill="rgb(243,83,12)" rx="2" ry="2" />
<text  x="578.66" y="1999.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (5 samples, 0.08%)</title><rect x="73.9" y="37" width="1.0" height="15.0" fill="rgb(226,16,36)" rx="2" ry="2" />
<text  x="76.91" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="162.7" y="2021" width="0.2" height="15.0" fill="rgb(222,76,15)" rx="2" ry="2" />
<text  x="165.74" y="2031.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="899.4" y="1941" width="0.2" height="15.0" fill="rgb(237,51,41)" rx="2" ry="2" />
<text  x="902.35" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (2 samples, 0.03%)</title><rect x="856.2" y="2005" width="0.4" height="15.0" fill="rgb(234,94,8)" rx="2" ry="2" />
<text  x="859.22" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (17 samples, 0.29%)</title><rect x="760.5" y="1973" width="3.3" height="15.0" fill="rgb(235,226,53)" rx="2" ry="2" />
<text  x="763.46" y="1983.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1006.2" y="1797" width="0.2" height="15.0" fill="rgb(224,175,47)" rx="2" ry="2" />
<text  x="1009.19" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.34%)</title><rect x="601.0" y="2021" width="3.9" height="15.0" fill="rgb(246,180,38)" rx="2" ry="2" />
<text  x="603.99" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (26 samples, 0.44%)</title><rect x="303.2" y="1973" width="5.2" height="15.0" fill="rgb(243,1,5)" rx="2" ry="2" />
<text  x="306.22" y="1983.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1062.0" y="1893" width="0.6" height="15.0" fill="rgb(242,181,31)" rx="2" ry="2" />
<text  x="1064.99" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="292.5" y="1973" width="0.2" height="15.0" fill="rgb(224,117,17)" rx="2" ry="2" />
<text  x="295.54" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (6 samples, 0.10%)</title><rect x="775.1" y="2005" width="1.2" height="15.0" fill="rgb(216,104,46)" rx="2" ry="2" />
<text  x="778.10" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (3 samples, 0.05%)</title><rect x="256.3" y="1685" width="0.6" height="15.0" fill="rgb(214,14,12)" rx="2" ry="2" />
<text  x="259.33" y="1695.5" ></text>
</g>
<g >
<title>__clock_gettime (30 samples, 0.50%)</title><rect x="195.6" y="2037" width="5.9" height="15.0" fill="rgb(213,136,28)" rx="2" ry="2" />
<text  x="198.59" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (5 samples, 0.08%)</title><rect x="157.8" y="2005" width="1.0" height="15.0" fill="rgb(218,157,42)" rx="2" ry="2" />
<text  x="160.80" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (20 samples, 0.34%)</title><rect x="12.4" y="1957" width="3.9" height="15.0" fill="rgb(233,185,22)" rx="2" ry="2" />
<text  x="15.37" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="434.8" y="1973" width="0.2" height="15.0" fill="rgb(217,226,2)" rx="2" ry="2" />
<text  x="437.79" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="899.0" y="1877" width="0.2" height="15.0" fill="rgb(236,4,0)" rx="2" ry="2" />
<text  x="901.96" y="1887.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (80 samples, 1.34%)</title><rect x="235.9" y="1717" width="15.9" height="15.0" fill="rgb(222,140,17)" rx="2" ry="2" />
<text  x="238.95" y="1727.5" ></text>
</g>
<g >
<title>mcrouter (5,932 samples, 99.46%)</title><rect x="16.3" y="2069" width="1173.7" height="15.0" fill="rgb(211,88,40)" rx="2" ry="2" />
<text  x="19.33" y="2079.5" >mcrouter</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="614.4" y="1909" width="0.2" height="15.0" fill="rgb(219,157,48)" rx="2" ry="2" />
<text  x="617.44" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (20 samples, 0.34%)</title><rect x="338.2" y="1893" width="4.0" height="15.0" fill="rgb(221,118,27)" rx="2" ry="2" />
<text  x="341.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1525" width="42.0" height="15.0" fill="rgb(216,77,30)" rx="2" ry="2" />
<text  x="56.92" y="1535.5" >[un..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(228,162,10)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="11.4" y="1941" width="1.0" height="15.0" fill="rgb(242,179,20)" rx="2" ry="2" />
<text  x="14.38" y="1951.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="1048.3" y="1861" width="0.4" height="15.0" fill="rgb(219,144,1)" rx="2" ry="2" />
<text  x="1051.34" y="1871.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="248.8" y="1445" width="0.2" height="15.0" fill="rgb(238,7,36)" rx="2" ry="2" />
<text  x="251.81" y="1455.5" ></text>
</g>
<g >
<title>kmem_cache_free (70 samples, 1.17%)</title><rect x="992.5" y="1893" width="13.9" height="15.0" fill="rgb(205,19,32)" rx="2" ry="2" />
<text  x="995.54" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="589.9" y="1973" width="0.2" height="15.0" fill="rgb(250,136,4)" rx="2" ry="2" />
<text  x="592.91" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (38 samples, 0.64%)</title><rect x="1075.8" y="1813" width="7.6" height="15.0" fill="rgb(230,104,21)" rx="2" ry="2" />
<text  x="1078.84" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="332.7" y="1957" width="0.2" height="15.0" fill="rgb(207,170,2)" rx="2" ry="2" />
<text  x="335.70" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="292.5" y="1941" width="0.2" height="15.0" fill="rgb(249,28,25)" rx="2" ry="2" />
<text  x="295.54" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="359.2" y="1957" width="0.2" height="15.0" fill="rgb(229,38,25)" rx="2" ry="2" />
<text  x="362.21" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="344.4" y="2037" width="0.2" height="15.0" fill="rgb(210,140,43)" rx="2" ry="2" />
<text  x="347.37" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="322.4" y="1941" width="1.4" height="15.0" fill="rgb(218,79,44)" rx="2" ry="2" />
<text  x="325.41" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="637.8" y="1909" width="0.8" height="15.0" fill="rgb(206,77,6)" rx="2" ry="2" />
<text  x="640.79" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="360.4" y="1973" width="0.2" height="15.0" fill="rgb(222,119,29)" rx="2" ry="2" />
<text  x="363.40" y="1983.5" ></text>
</g>
<g >
<title>task_numa_fault (1 samples, 0.02%)</title><rect x="1143.3" y="1925" width="0.2" height="15.0" fill="rgb(237,22,7)" rx="2" ry="2" />
<text  x="1146.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="831.5" y="2005" width="0.4" height="15.0" fill="rgb(239,166,0)" rx="2" ry="2" />
<text  x="834.49" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="222.3" y="1797" width="0.2" height="15.0" fill="rgb(251,94,9)" rx="2" ry="2" />
<text  x="225.30" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="485.2" y="1941" width="0.2" height="15.0" fill="rgb(243,13,4)" rx="2" ry="2" />
<text  x="488.24" y="1951.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.34%)</title><rect x="12.4" y="1941" width="3.9" height="15.0" fill="rgb(236,221,21)" rx="2" ry="2" />
<text  x="15.37" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="308.0" y="1925" width="0.2" height="15.0" fill="rgb(206,53,14)" rx="2" ry="2" />
<text  x="310.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="605.1" y="1989" width="0.2" height="15.0" fill="rgb(231,178,25)" rx="2" ry="2" />
<text  x="608.14" y="1999.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="218.3" y="1877" width="0.8" height="15.0" fill="rgb(213,56,7)" rx="2" ry="2" />
<text  x="221.34" y="1887.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (2 samples, 0.03%)</title><rect x="333.9" y="2005" width="0.4" height="15.0" fill="rgb(230,171,1)" rx="2" ry="2" />
<text  x="336.89" y="2015.5" ></text>
</g>
<g >
<title>ip_send_check (4 samples, 0.07%)</title><rect x="1075.0" y="1813" width="0.8" height="15.0" fill="rgb(241,113,7)" rx="2" ry="2" />
<text  x="1078.05" y="1823.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="444.5" y="1861" width="0.8" height="15.0" fill="rgb(253,180,29)" rx="2" ry="2" />
<text  x="447.49" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="548.4" y="1957" width="0.2" height="15.0" fill="rgb(253,107,19)" rx="2" ry="2" />
<text  x="551.36" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="360.8" y="2005" width="0.4" height="15.0" fill="rgb(218,73,18)" rx="2" ry="2" />
<text  x="363.79" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="78.7" y="37" width="0.2" height="15.0" fill="rgb(226,61,44)" rx="2" ry="2" />
<text  x="81.66" y="47.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="931.0" y="2005" width="0.2" height="15.0" fill="rgb(244,113,15)" rx="2" ry="2" />
<text  x="934.01" y="2015.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="843.4" y="1957" width="0.2" height="15.0" fill="rgb(216,111,22)" rx="2" ry="2" />
<text  x="846.36" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="360.2" y="2005" width="0.4" height="15.0" fill="rgb(237,100,3)" rx="2" ry="2" />
<text  x="363.20" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (29 samples, 0.49%)</title><rect x="529.0" y="1941" width="5.7" height="15.0" fill="rgb(249,189,27)" rx="2" ry="2" />
<text  x="531.97" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="439.9" y="1941" width="0.4" height="15.0" fill="rgb(236,194,16)" rx="2" ry="2" />
<text  x="442.94" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="173.0" y="1957" width="0.2" height="15.0" fill="rgb(243,214,54)" rx="2" ry="2" />
<text  x="176.03" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (5 samples, 0.08%)</title><rect x="398.6" y="2005" width="1.0" height="15.0" fill="rgb(210,14,44)" rx="2" ry="2" />
<text  x="401.58" y="2015.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="258.9" y="1765" width="0.2" height="15.0" fill="rgb(240,46,25)" rx="2" ry="2" />
<text  x="261.90" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="555.9" y="1973" width="0.2" height="15.0" fill="rgb(243,224,9)" rx="2" ry="2" />
<text  x="558.88" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="979.1" y="2037" width="0.2" height="15.0" fill="rgb(222,5,21)" rx="2" ry="2" />
<text  x="982.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1445" width="42.0" height="15.0" fill="rgb(221,24,4)" rx="2" ry="2" />
<text  x="56.92" y="1455.5" >[un..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="296.9" y="1973" width="0.2" height="15.0" fill="rgb(222,149,25)" rx="2" ry="2" />
<text  x="299.89" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="342.4" y="1925" width="0.2" height="15.0" fill="rgb(245,37,38)" rx="2" ry="2" />
<text  x="345.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (548 samples, 9.19%)</title><rect x="52.7" y="2021" width="108.5" height="15.0" fill="rgb(209,169,41)" rx="2" ry="2" />
<text  x="55.74" y="2031.5" >[unknown]</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="978.9" y="1989" width="0.2" height="15.0" fill="rgb(223,49,37)" rx="2" ry="2" />
<text  x="981.89" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="90.1" y="53" width="2.0" height="15.0" fill="rgb(251,164,27)" rx="2" ry="2" />
<text  x="93.13" y="63.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (22 samples, 0.37%)</title><rect x="895.4" y="1989" width="4.3" height="15.0" fill="rgb(241,211,53)" rx="2" ry="2" />
<text  x="898.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="453" width="42.0" height="15.0" fill="rgb(207,209,30)" rx="2" ry="2" />
<text  x="56.92" y="463.5" >[un..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="114.7" y="1973" width="0.2" height="15.0" fill="rgb(240,53,43)" rx="2" ry="2" />
<text  x="117.66" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (3 samples, 0.05%)</title><rect x="525.4" y="1989" width="0.6" height="15.0" fill="rgb(225,1,12)" rx="2" ry="2" />
<text  x="528.41" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="239.7" y="1445" width="0.8" height="15.0" fill="rgb(216,50,1)" rx="2" ry="2" />
<text  x="242.71" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="418.0" y="2005" width="0.2" height="15.0" fill="rgb(229,27,44)" rx="2" ry="2" />
<text  x="420.97" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (4 samples, 0.07%)</title><rect x="601.0" y="1989" width="0.8" height="15.0" fill="rgb(251,6,17)" rx="2" ry="2" />
<text  x="603.99" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="280.9" y="2005" width="0.6" height="15.0" fill="rgb(229,28,39)" rx="2" ry="2" />
<text  x="283.86" y="2015.5" ></text>
</g>
<g >
<title>sys_recvfrom (552 samples, 9.26%)</title><rect x="984.4" y="2005" width="109.2" height="15.0" fill="rgb(239,183,28)" rx="2" ry="2" />
<text  x="987.43" y="2015.5" >sys_recvfrom</text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="684.7" y="1877" width="0.2" height="15.0" fill="rgb(213,12,24)" rx="2" ry="2" />
<text  x="687.68" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (4 samples, 0.07%)</title><rect x="614.6" y="1989" width="0.8" height="15.0" fill="rgb(249,117,25)" rx="2" ry="2" />
<text  x="617.64" y="1999.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (23 samples, 0.39%)</title><rect x="273.3" y="1957" width="4.6" height="15.0" fill="rgb(220,120,1)" rx="2" ry="2" />
<text  x="276.34" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (80 samples, 1.34%)</title><rect x="235.9" y="1669" width="15.9" height="15.0" fill="rgb(252,116,15)" rx="2" ry="2" />
<text  x="238.95" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (111 samples, 1.86%)</title><rect x="235.0" y="1749" width="21.9" height="15.0" fill="rgb(211,41,29)" rx="2" ry="2" />
<text  x="237.96" y="1759.5" >i..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="23.8" y="1909" width="0.2" height="15.0" fill="rgb(239,213,36)" rx="2" ry="2" />
<text  x="26.85" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (5 samples, 0.08%)</title><rect x="1143.7" y="2005" width="1.0" height="15.0" fill="rgb(229,182,28)" rx="2" ry="2" />
<text  x="1146.70" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (11 samples, 0.18%)</title><rect x="692.2" y="1973" width="2.2" height="15.0" fill="rgb(214,88,12)" rx="2" ry="2" />
<text  x="695.20" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (25 samples, 0.42%)</title><rect x="337.3" y="1925" width="4.9" height="15.0" fill="rgb(206,202,16)" rx="2" ry="2" />
<text  x="340.25" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="335.5" y="2005" width="7.9" height="15.0" fill="rgb(246,29,10)" rx="2" ry="2" />
<text  x="338.47" y="2015.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="256.7" y="1637" width="0.2" height="15.0" fill="rgb(241,227,2)" rx="2" ry="2" />
<text  x="259.72" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.49%)</title><rect x="813.9" y="2021" width="17.6" height="15.0" fill="rgb(243,164,29)" rx="2" ry="2" />
<text  x="816.88" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (60 samples, 1.01%)</title><rect x="1130.6" y="2005" width="11.9" height="15.0" fill="rgb(246,98,4)" rx="2" ry="2" />
<text  x="1133.64" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="349.7" y="2005" width="0.2" height="15.0" fill="rgb(244,38,21)" rx="2" ry="2" />
<text  x="352.71" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1073.3" y="1861" width="0.2" height="15.0" fill="rgb(239,81,17)" rx="2" ry="2" />
<text  x="1076.27" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="811.3" y="1957" width="0.2" height="15.0" fill="rgb(242,128,16)" rx="2" ry="2" />
<text  x="814.31" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="484.1" y="2037" width="0.2" height="15.0" fill="rgb(236,121,53)" rx="2" ry="2" />
<text  x="487.06" y="2047.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="160.4" y="2005" width="0.8" height="15.0" fill="rgb(228,138,3)" rx="2" ry="2" />
<text  x="163.37" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="11.4" y="2021" width="1.0" height="15.0" fill="rgb(225,123,24)" rx="2" ry="2" />
<text  x="14.38" y="2031.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (2 samples, 0.03%)</title><rect x="1042.8" y="1925" width="0.4" height="15.0" fill="rgb(218,102,26)" rx="2" ry="2" />
<text  x="1045.80" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (11 samples, 0.18%)</title><rect x="807.7" y="1973" width="2.2" height="15.0" fill="rgb(215,193,27)" rx="2" ry="2" />
<text  x="810.75" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (2 samples, 0.03%)</title><rect x="307.2" y="1957" width="0.4" height="15.0" fill="rgb(252,138,22)" rx="2" ry="2" />
<text  x="310.18" y="1967.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2 samples, 0.03%)</title><rect x="143.4" y="1925" width="0.3" height="15.0" fill="rgb(253,31,14)" rx="2" ry="2" />
<text  x="146.35" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="930.0" y="1989" width="0.4" height="15.0" fill="rgb(229,127,3)" rx="2" ry="2" />
<text  x="933.02" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="152.7" y="1973" width="0.2" height="15.0" fill="rgb(240,217,48)" rx="2" ry="2" />
<text  x="155.65" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="919.3" y="1877" width="0.4" height="15.0" fill="rgb(222,63,48)" rx="2" ry="2" />
<text  x="922.34" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="166.9" y="1973" width="0.2" height="15.0" fill="rgb(211,70,19)" rx="2" ry="2" />
<text  x="169.90" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (247 samples, 4.14%)</title><rect x="376.2" y="2037" width="48.9" height="15.0" fill="rgb(249,112,1)" rx="2" ry="2" />
<text  x="379.23" y="2047.5" >face..</text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (18 samples, 0.30%)</title><rect x="320.6" y="1973" width="3.6" height="15.0" fill="rgb(254,18,18)" rx="2" ry="2" />
<text  x="323.63" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (6 samples, 0.10%)</title><rect x="254.7" y="1669" width="1.2" height="15.0" fill="rgb(238,195,37)" rx="2" ry="2" />
<text  x="257.75" y="1679.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (2 samples, 0.03%)</title><rect x="311.1" y="1941" width="0.4" height="15.0" fill="rgb(223,118,28)" rx="2" ry="2" />
<text  x="314.13" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="179.4" y="1877" width="0.2" height="15.0" fill="rgb(253,187,48)" rx="2" ry="2" />
<text  x="182.36" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="549.7" y="1941" width="0.6" height="15.0" fill="rgb(207,129,51)" rx="2" ry="2" />
<text  x="552.75" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="786.0" y="2005" width="0.2" height="15.0" fill="rgb(253,38,0)" rx="2" ry="2" />
<text  x="788.98" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::SendWritesCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="175.4" y="1957" width="0.2" height="15.0" fill="rgb(221,93,19)" rx="2" ry="2" />
<text  x="178.41" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="839.8" y="2037" width="0.2" height="15.0" fill="rgb(247,200,43)" rx="2" ry="2" />
<text  x="842.80" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (133 samples, 2.23%)</title><rect x="900.1" y="1973" width="26.4" height="15.0" fill="rgb(253,161,12)" rx="2" ry="2" />
<text  x="903.14" y="1983.5" >f..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="895.0" y="1941" width="0.2" height="15.0" fill="rgb(238,70,24)" rx="2" ry="2" />
<text  x="898.00" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.12%)</title><rect x="269.8" y="2021" width="1.4" height="15.0" fill="rgb(212,215,47)" rx="2" ry="2" />
<text  x="272.78" y="2031.5" ></text>
</g>
<g >
<title>jump_fcontext (124 samples, 2.08%)</title><rect x="931.2" y="2005" width="24.5" height="15.0" fill="rgb(206,12,31)" rx="2" ry="2" />
<text  x="934.21" y="2015.5" >j..</text>
</g>
<g >
<title>aa_sock_msg_perm (10 samples, 0.17%)</title><rect x="265.2" y="1893" width="2.0" height="15.0" fill="rgb(223,64,52)" rx="2" ry="2" />
<text  x="268.23" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (36 samples, 0.60%)</title><rect x="1101.6" y="2053" width="7.1" height="15.0" fill="rgb(253,46,37)" rx="2" ry="2" />
<text  x="1104.56" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="334.3" y="1973" width="0.4" height="15.0" fill="rgb(253,67,30)" rx="2" ry="2" />
<text  x="337.28" y="1983.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4 samples, 0.07%)</title><rect x="271.6" y="2037" width="0.8" height="15.0" fill="rgb(213,82,25)" rx="2" ry="2" />
<text  x="274.56" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (7 samples, 0.12%)</title><rect x="587.5" y="1973" width="1.4" height="15.0" fill="rgb(226,145,40)" rx="2" ry="2" />
<text  x="590.54" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="78.9" y="37" width="0.5" height="15.0" fill="rgb(235,118,52)" rx="2" ry="2" />
<text  x="81.85" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="145.9" y="1925" width="0.2" height="15.0" fill="rgb(237,206,51)" rx="2" ry="2" />
<text  x="148.93" y="1935.5" ></text>
</g>
<g >
<title>ksize (3 samples, 0.05%)</title><rect x="1070.5" y="1861" width="0.6" height="15.0" fill="rgb(206,170,54)" rx="2" ry="2" />
<text  x="1073.50" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1861" width="42.0" height="15.0" fill="rgb(222,120,7)" rx="2" ry="2" />
<text  x="56.92" y="1871.5" >[un..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="501" width="42.0" height="15.0" fill="rgb(236,137,40)" rx="2" ry="2" />
<text  x="56.92" y="511.5" >[un..</text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="11.4" y="1861" width="1.0" height="15.0" fill="rgb(242,107,6)" rx="2" ry="2" />
<text  x="14.38" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (36 samples, 0.60%)</title><rect x="335.7" y="1957" width="7.1" height="15.0" fill="rgb(239,175,38)" rx="2" ry="2" />
<text  x="338.67" y="1967.5" ></text>
</g>
<g >
<title>futex_wait (20 samples, 0.34%)</title><rect x="12.4" y="1973" width="3.9" height="15.0" fill="rgb(244,142,32)" rx="2" ry="2" />
<text  x="15.37" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="771.9" y="1973" width="0.8" height="15.0" fill="rgb(221,204,27)" rx="2" ry="2" />
<text  x="774.93" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="259.7" y="1749" width="0.2" height="15.0" fill="rgb(211,225,11)" rx="2" ry="2" />
<text  x="262.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1285" width="42.0" height="15.0" fill="rgb(236,114,52)" rx="2" ry="2" />
<text  x="56.92" y="1295.5" >[un..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="115.5" y="1957" width="0.5" height="15.0" fill="rgb(227,122,27)" rx="2" ry="2" />
<text  x="118.46" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="163.3" y="2005" width="0.2" height="15.0" fill="rgb(249,192,9)" rx="2" ry="2" />
<text  x="166.34" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1605" width="42.0" height="15.0" fill="rgb(223,168,42)" rx="2" ry="2" />
<text  x="56.92" y="1615.5" >[un..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12 samples, 0.20%)</title><rect x="601.8" y="1989" width="2.4" height="15.0" fill="rgb(250,153,38)" rx="2" ry="2" />
<text  x="604.78" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="234.0" y="1733" width="0.2" height="15.0" fill="rgb(239,76,13)" rx="2" ry="2" />
<text  x="236.97" y="1743.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="179.4" y="1941" width="0.2" height="15.0" fill="rgb(205,196,40)" rx="2" ry="2" />
<text  x="182.36" y="1951.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (8 samples, 0.13%)</title><rect x="325.2" y="1989" width="1.6" height="15.0" fill="rgb(223,109,20)" rx="2" ry="2" />
<text  x="328.18" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="546.4" y="1909" width="0.2" height="15.0" fill="rgb(228,20,42)" rx="2" ry="2" />
<text  x="549.38" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (26 samples, 0.44%)</title><rect x="327.8" y="1973" width="5.1" height="15.0" fill="rgb(249,103,49)" rx="2" ry="2" />
<text  x="330.75" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (34 samples, 0.57%)</title><rect x="528.0" y="1957" width="6.7" height="15.0" fill="rgb(253,75,52)" rx="2" ry="2" />
<text  x="530.98" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="176.0" y="1893" width="0.2" height="15.0" fill="rgb(245,222,7)" rx="2" ry="2" />
<text  x="179.00" y="1903.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="264.4" y="1829" width="0.2" height="15.0" fill="rgb(248,127,8)" rx="2" ry="2" />
<text  x="267.44" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="342.8" y="1973" width="0.6" height="15.0" fill="rgb(250,154,33)" rx="2" ry="2" />
<text  x="345.79" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (66 samples, 1.11%)</title><rect x="880.0" y="1957" width="13.0" height="15.0" fill="rgb(225,68,33)" rx="2" ry="2" />
<text  x="882.96" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="143.2" y="1909" width="0.2" height="15.0" fill="rgb(247,214,42)" rx="2" ry="2" />
<text  x="146.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (11 samples, 0.18%)</title><rect x="772.9" y="2005" width="2.2" height="15.0" fill="rgb(232,156,52)" rx="2" ry="2" />
<text  x="775.92" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (14 samples, 0.23%)</title><rect x="555.9" y="1989" width="2.7" height="15.0" fill="rgb(251,151,14)" rx="2" ry="2" />
<text  x="558.88" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (23 samples, 0.39%)</title><rect x="909.6" y="1909" width="4.6" height="15.0" fill="rgb(225,223,40)" rx="2" ry="2" />
<text  x="912.64" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="469" width="42.0" height="15.0" fill="rgb(221,128,24)" rx="2" ry="2" />
<text  x="56.92" y="479.5" >[un..</text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="1146.1" y="1957" width="0.2" height="15.0" fill="rgb(245,39,21)" rx="2" ry="2" />
<text  x="1149.08" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1144.7" y="2021" width="0.2" height="15.0" fill="rgb(212,39,14)" rx="2" ry="2" />
<text  x="1147.69" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="547.8" y="1893" width="0.2" height="15.0" fill="rgb(208,84,51)" rx="2" ry="2" />
<text  x="550.77" y="1903.5" ></text>
</g>
<g >
<title>__release_sock (27 samples, 0.45%)</title><rect x="1043.4" y="1909" width="5.3" height="15.0" fill="rgb(237,100,24)" rx="2" ry="2" />
<text  x="1046.39" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="826.3" y="1989" width="0.4" height="15.0" fill="rgb(244,225,18)" rx="2" ry="2" />
<text  x="829.34" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="624.9" y="1957" width="0.2" height="15.0" fill="rgb(222,160,2)" rx="2" ry="2" />
<text  x="627.93" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="179.2" y="1893" width="0.2" height="15.0" fill="rgb(239,136,46)" rx="2" ry="2" />
<text  x="182.16" y="1903.5" ></text>
</g>
<g >
<title>std::__find_if&lt;unsigned long*, __gnu_cxx::__ops::_Iter_pred&lt;folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="914.2" y="1861" width="0.2" height="15.0" fill="rgb(237,86,13)" rx="2" ry="2" />
<text  x="917.19" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="485.2" y="1957" width="0.2" height="15.0" fill="rgb(240,22,11)" rx="2" ry="2" />
<text  x="488.24" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (89 samples, 1.49%)</title><rect x="624.5" y="1973" width="17.6" height="15.0" fill="rgb(235,180,45)" rx="2" ry="2" />
<text  x="627.53" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="616.0" y="2037" width="0.4" height="15.0" fill="rgb(229,171,7)" rx="2" ry="2" />
<text  x="619.03" y="2047.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1089.9" y="1909" width="0.2" height="15.0" fill="rgb(210,6,21)" rx="2" ry="2" />
<text  x="1092.89" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="919.7" y="1893" width="0.2" height="15.0" fill="rgb(254,97,22)" rx="2" ry="2" />
<text  x="922.73" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="150.1" y="1973" width="0.2" height="15.0" fill="rgb(243,85,30)" rx="2" ry="2" />
<text  x="153.08" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="776.9" y="1989" width="0.8" height="15.0" fill="rgb(242,100,29)" rx="2" ry="2" />
<text  x="779.88" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="342.2" y="1941" width="0.6" height="15.0" fill="rgb(209,67,14)" rx="2" ry="2" />
<text  x="345.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="693" width="42.0" height="15.0" fill="rgb(225,16,10)" rx="2" ry="2" />
<text  x="56.92" y="703.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="484.3" y="2037" width="0.4" height="15.0" fill="rgb(227,14,44)" rx="2" ry="2" />
<text  x="487.26" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="334.1" y="1989" width="0.2" height="15.0" fill="rgb(238,184,49)" rx="2" ry="2" />
<text  x="337.08" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="261" width="42.0" height="15.0" fill="rgb(226,11,43)" rx="2" ry="2" />
<text  x="56.92" y="271.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (24 samples, 0.40%)</title><rect x="138.6" y="1925" width="4.8" height="15.0" fill="rgb(207,69,44)" rx="2" ry="2" />
<text  x="141.60" y="1935.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="258.3" y="1797" width="0.2" height="15.0" fill="rgb(243,218,10)" rx="2" ry="2" />
<text  x="261.31" y="1807.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1042.0" y="1925" width="0.2" height="15.0" fill="rgb(233,2,19)" rx="2" ry="2" />
<text  x="1045.01" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="299.9" y="1925" width="0.2" height="15.0" fill="rgb(225,206,37)" rx="2" ry="2" />
<text  x="302.86" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (32 samples, 0.54%)</title><rect x="1077.0" y="1765" width="6.4" height="15.0" fill="rgb(205,70,25)" rx="2" ry="2" />
<text  x="1080.03" y="1775.5" ></text>
</g>
<g >
<title>ep_poll (23 samples, 0.39%)</title><rect x="273.3" y="1973" width="4.6" height="15.0" fill="rgb(217,137,31)" rx="2" ry="2" />
<text  x="276.34" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (6 samples, 0.10%)</title><rect x="254.7" y="1685" width="1.2" height="15.0" fill="rgb(213,80,46)" rx="2" ry="2" />
<text  x="257.75" y="1695.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="743.2" y="1909" width="0.2" height="15.0" fill="rgb(232,215,8)" rx="2" ry="2" />
<text  x="746.25" y="1919.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="444.5" y="1813" width="0.8" height="15.0" fill="rgb(209,218,51)" rx="2" ry="2" />
<text  x="447.49" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="149.9" y="1973" width="0.2" height="15.0" fill="rgb(211,31,21)" rx="2" ry="2" />
<text  x="152.88" y="1983.5" ></text>
</g>
<g >
<title>sock_recvmsg (546 samples, 9.15%)</title><rect x="984.8" y="1973" width="108.1" height="15.0" fill="rgb(242,184,20)" rx="2" ry="2" />
<text  x="987.83" y="1983.5" >sock_recvmsg</text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (5 samples, 0.08%)</title><rect x="20.7" y="1989" width="1.0" height="15.0" fill="rgb(215,18,17)" rx="2" ry="2" />
<text  x="23.68" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="80.6" y="37" width="0.4" height="15.0" fill="rgb(223,101,19)" rx="2" ry="2" />
<text  x="83.63" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="567.4" y="1973" width="0.5" height="15.0" fill="rgb(218,172,4)" rx="2" ry="2" />
<text  x="570.35" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.5" y="133" width="0.2" height="15.0" fill="rgb(214,43,14)" rx="2" ry="2" />
<text  x="98.47" y="143.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.57%)</title><rect x="553.9" y="2005" width="6.7" height="15.0" fill="rgb(234,30,31)" rx="2" ry="2" />
<text  x="556.90" y="2015.5" ></text>
</g>
<g >
<title>do_futex (20 samples, 0.34%)</title><rect x="12.4" y="1989" width="3.9" height="15.0" fill="rgb(230,113,3)" rx="2" ry="2" />
<text  x="15.37" y="1999.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="444.5" y="1877" width="0.8" height="15.0" fill="rgb(223,41,33)" rx="2" ry="2" />
<text  x="447.49" y="1887.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="842.8" y="1973" width="0.2" height="15.0" fill="rgb(227,191,17)" rx="2" ry="2" />
<text  x="845.77" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="167.1" y="2021" width="0.2" height="15.0" fill="rgb(240,192,7)" rx="2" ry="2" />
<text  x="170.10" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (2 samples, 0.03%)</title><rect x="278.9" y="2037" width="0.4" height="15.0" fill="rgb(224,8,27)" rx="2" ry="2" />
<text  x="281.88" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="1108.9" y="2053" width="0.6" height="15.0" fill="rgb(253,218,47)" rx="2" ry="2" />
<text  x="1111.88" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1189.2" y="2053" width="0.2" height="15.0" fill="rgb(232,14,10)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="172.0" y="1941" width="0.2" height="15.0" fill="rgb(210,110,4)" rx="2" ry="2" />
<text  x="175.04" y="1951.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="1008.8" y="1877" width="0.4" height="15.0" fill="rgb(229,146,13)" rx="2" ry="2" />
<text  x="1011.77" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (345 samples, 5.78%)</title><rect x="485.2" y="2037" width="68.3" height="15.0" fill="rgb(240,170,8)" rx="2" ry="2" />
<text  x="488.24" y="2047.5" >faceboo..</text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1097.2" y="2037" width="0.2" height="15.0" fill="rgb(217,89,22)" rx="2" ry="2" />
<text  x="1100.21" y="2047.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="358.4" y="1909" width="0.2" height="15.0" fill="rgb(229,120,33)" rx="2" ry="2" />
<text  x="361.42" y="1919.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="260.9" y="1797" width="0.2" height="15.0" fill="rgb(239,158,20)" rx="2" ry="2" />
<text  x="263.88" y="1807.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="222.3" y="1781" width="0.2" height="15.0" fill="rgb(225,116,50)" rx="2" ry="2" />
<text  x="225.30" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (46 samples, 0.77%)</title><rect x="16.3" y="2053" width="9.1" height="15.0" fill="rgb(237,102,40)" rx="2" ry="2" />
<text  x="19.33" y="2063.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="95.7" y="181" width="0.2" height="15.0" fill="rgb(225,142,45)" rx="2" ry="2" />
<text  x="98.67" y="191.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1132.4" y="1957" width="0.2" height="15.0" fill="rgb(211,208,33)" rx="2" ry="2" />
<text  x="1135.42" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1813" width="42.0" height="15.0" fill="rgb(210,47,26)" rx="2" ry="2" />
<text  x="56.92" y="1823.5" >[un..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="919.9" y="1893" width="0.4" height="15.0" fill="rgb(208,186,42)" rx="2" ry="2" />
<text  x="922.93" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="181.7" y="2021" width="0.4" height="15.0" fill="rgb(229,110,28)" rx="2" ry="2" />
<text  x="184.74" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.08%)</title><rect x="11.4" y="1829" width="1.0" height="15.0" fill="rgb(214,186,11)" rx="2" ry="2" />
<text  x="14.38" y="1839.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="617.2" y="2005" width="0.2" height="15.0" fill="rgb(227,124,37)" rx="2" ry="2" />
<text  x="620.21" y="2015.5" ></text>
</g>
<g >
<title>release_sock (29 samples, 0.49%)</title><rect x="1043.2" y="1925" width="5.7" height="15.0" fill="rgb(222,4,19)" rx="2" ry="2" />
<text  x="1046.19" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (37 samples, 0.62%)</title><rect x="553.9" y="2037" width="7.3" height="15.0" fill="rgb(207,101,22)" rx="2" ry="2" />
<text  x="556.90" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (13 samples, 0.22%)</title><rect x="164.1" y="1973" width="2.6" height="15.0" fill="rgb(211,131,16)" rx="2" ry="2" />
<text  x="167.13" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="619.6" y="2005" width="0.2" height="15.0" fill="rgb(232,201,6)" rx="2" ry="2" />
<text  x="622.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="407.3" y="2005" width="0.4" height="15.0" fill="rgb(209,202,54)" rx="2" ry="2" />
<text  x="410.29" y="2015.5" ></text>
</g>
<g >
<title>[mcrouter] (133 samples, 2.23%)</title><rect x="900.1" y="1941" width="26.4" height="15.0" fill="rgb(252,150,19)" rx="2" ry="2" />
<text  x="903.14" y="1951.5" >[..</text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="1082.4" y="1685" width="0.2" height="15.0" fill="rgb(241,191,27)" rx="2" ry="2" />
<text  x="1085.37" y="1695.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="457.9" y="1973" width="0.2" height="15.0" fill="rgb(241,161,8)" rx="2" ry="2" />
<text  x="460.94" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="450.8" y="1925" width="0.4" height="15.0" fill="rgb(249,188,48)" rx="2" ry="2" />
<text  x="453.82" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="222.3" y="1829" width="0.2" height="15.0" fill="rgb(233,201,25)" rx="2" ry="2" />
<text  x="225.30" y="1839.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="317.9" y="1973" width="0.2" height="15.0" fill="rgb(251,22,1)" rx="2" ry="2" />
<text  x="320.86" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="306.0" y="1941" width="0.6" height="15.0" fill="rgb(253,216,36)" rx="2" ry="2" />
<text  x="308.99" y="1951.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="787.4" y="2005" width="0.2" height="15.0" fill="rgb(221,21,49)" rx="2" ry="2" />
<text  x="790.37" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (26 samples, 0.44%)</title><rect x="169.5" y="2021" width="5.1" height="15.0" fill="rgb(209,137,19)" rx="2" ry="2" />
<text  x="172.47" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="354.5" y="1973" width="4.7" height="15.0" fill="rgb(234,98,38)" rx="2" ry="2" />
<text  x="357.46" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="191.6" y="2021" width="0.2" height="15.0" fill="rgb(237,122,48)" rx="2" ry="2" />
<text  x="194.63" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (113 samples, 1.89%)</title><rect x="433.2" y="1989" width="22.4" height="15.0" fill="rgb(251,150,38)" rx="2" ry="2" />
<text  x="436.21" y="1999.5" >f..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1269" width="42.0" height="15.0" fill="rgb(238,149,10)" rx="2" ry="2" />
<text  x="56.92" y="1279.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (2 samples, 0.03%)</title><rect x="354.1" y="1973" width="0.4" height="15.0" fill="rgb(247,65,15)" rx="2" ry="2" />
<text  x="357.07" y="1983.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="956.5" y="2037" width="0.2" height="15.0" fill="rgb(217,78,40)" rx="2" ry="2" />
<text  x="959.53" y="2047.5" ></text>
</g>
<g >
<title>sys_futex (20 samples, 0.34%)</title><rect x="12.4" y="2005" width="3.9" height="15.0" fill="rgb(241,195,17)" rx="2" ry="2" />
<text  x="15.37" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="788.8" y="1989" width="0.2" height="15.0" fill="rgb(226,177,19)" rx="2" ry="2" />
<text  x="791.75" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (6 samples, 0.10%)</title><rect x="535.5" y="1989" width="1.2" height="15.0" fill="rgb(230,155,11)" rx="2" ry="2" />
<text  x="538.50" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="309.6" y="1957" width="0.1" height="15.0" fill="rgb(209,163,19)" rx="2" ry="2" />
<text  x="312.55" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="743.2" y="1925" width="0.2" height="15.0" fill="rgb(236,134,4)" rx="2" ry="2" />
<text  x="746.25" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="93.7" y="69" width="1.6" height="15.0" fill="rgb(247,182,20)" rx="2" ry="2" />
<text  x="96.69" y="79.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="560.6" y="2005" width="0.2" height="15.0" fill="rgb(205,176,13)" rx="2" ry="2" />
<text  x="563.63" y="2015.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (5 samples, 0.08%)</title><rect x="315.1" y="1973" width="1.0" height="15.0" fill="rgb(217,120,26)" rx="2" ry="2" />
<text  x="318.09" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1509" width="42.0" height="15.0" fill="rgb(252,138,50)" rx="2" ry="2" />
<text  x="56.92" y="1519.5" >[un..</text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="230.2" y="1845" width="0.2" height="15.0" fill="rgb(229,187,15)" rx="2" ry="2" />
<text  x="233.21" y="1855.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="258.7" y="1765" width="0.2" height="15.0" fill="rgb(254,128,29)" rx="2" ry="2" />
<text  x="261.70" y="1775.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (78 samples, 1.31%)</title><rect x="25.4" y="2053" width="15.5" height="15.0" fill="rgb(242,41,0)" rx="2" ry="2" />
<text  x="28.43" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (3 samples, 0.05%)</title><rect x="580.6" y="1973" width="0.6" height="15.0" fill="rgb(253,46,45)" rx="2" ry="2" />
<text  x="583.61" y="1983.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="178.8" y="1909" width="0.2" height="15.0" fill="rgb(212,26,1)" rx="2" ry="2" />
<text  x="181.77" y="1919.5" ></text>
</g>
<g >
<title>kfree_skbmem (73 samples, 1.22%)</title><rect x="991.9" y="1909" width="14.5" height="15.0" fill="rgb(254,120,21)" rx="2" ry="2" />
<text  x="994.95" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (2 samples, 0.03%)</title><rect x="167.3" y="2021" width="0.4" height="15.0" fill="rgb(218,168,28)" rx="2" ry="2" />
<text  x="170.29" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="605.1" y="2005" width="0.2" height="15.0" fill="rgb(213,216,30)" rx="2" ry="2" />
<text  x="608.14" y="2015.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="1130.4" y="1989" width="0.2" height="15.0" fill="rgb(222,223,47)" rx="2" ry="2" />
<text  x="1133.45" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="171.8" y="1957" width="0.2" height="15.0" fill="rgb(231,58,2)" rx="2" ry="2" />
<text  x="174.84" y="1967.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="470.8" y="2005" width="0.2" height="15.0" fill="rgb(221,195,13)" rx="2" ry="2" />
<text  x="473.80" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="84.0" y="37" width="0.2" height="15.0" fill="rgb(247,178,30)" rx="2" ry="2" />
<text  x="87.00" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="616.6" y="1957" width="0.6" height="15.0" fill="rgb(209,189,39)" rx="2" ry="2" />
<text  x="619.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="480.7" y="2005" width="0.6" height="15.0" fill="rgb(210,20,23)" rx="2" ry="2" />
<text  x="483.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1237" width="42.0" height="15.0" fill="rgb(239,190,35)" rx="2" ry="2" />
<text  x="56.92" y="1247.5" >[un..</text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1108.5" y="1989" width="0.2" height="15.0" fill="rgb(211,166,29)" rx="2" ry="2" />
<text  x="1111.48" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (24 samples, 0.40%)</title><rect x="419.0" y="1989" width="4.7" height="15.0" fill="rgb(216,87,45)" rx="2" ry="2" />
<text  x="421.96" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (26 samples, 0.44%)</title><rect x="251.8" y="1717" width="5.1" height="15.0" fill="rgb(233,200,54)" rx="2" ry="2" />
<text  x="254.78" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (210 samples, 3.52%)</title><rect x="53.9" y="133" width="41.6" height="15.0" fill="rgb(243,187,40)" rx="2" ry="2" />
<text  x="56.92" y="143.5" >[un..</text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1006.2" y="1765" width="0.2" height="15.0" fill="rgb(223,94,11)" rx="2" ry="2" />
<text  x="1009.19" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="337.3" y="1909" width="0.1" height="15.0" fill="rgb(215,195,4)" rx="2" ry="2" />
<text  x="340.25" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="364.8" y="2037" width="0.1" height="15.0" fill="rgb(250,3,37)" rx="2" ry="2" />
<text  x="367.75" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="179.4" y="1925" width="0.2" height="15.0" fill="rgb(241,162,29)" rx="2" ry="2" />
<text  x="182.36" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="95.3" y="69" width="0.2" height="15.0" fill="rgb(212,133,34)" rx="2" ry="2" />
<text  x="98.27" y="79.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (38 samples, 0.64%)</title><rect x="17.9" y="2037" width="7.5" height="15.0" fill="rgb(206,137,21)" rx="2" ry="2" />
<text  x="20.91" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (7 samples, 0.12%)</title><rect x="168.1" y="2021" width="1.4" height="15.0" fill="rgb(221,0,17)" rx="2" ry="2" />
<text  x="171.09" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (2 samples, 0.03%)</title><rect x="1112.0" y="2053" width="0.4" height="15.0" fill="rgb(222,61,32)" rx="2" ry="2" />
<text  x="1115.05" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="638.6" y="1941" width="0.8" height="15.0" fill="rgb(237,218,9)" rx="2" ry="2" />
<text  x="641.58" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="352.3" y="1957" width="0.2" height="15.0" fill="rgb(226,98,17)" rx="2" ry="2" />
<text  x="355.29" y="1967.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="540.4" y="1989" width="0.2" height="15.0" fill="rgb(220,165,5)" rx="2" ry="2" />
<text  x="543.45" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="300.1" y="1957" width="0.7" height="15.0" fill="rgb(246,26,38)" rx="2" ry="2" />
<text  x="303.05" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="153.8" y="1941" width="0.2" height="15.0" fill="rgb(215,80,20)" rx="2" ry="2" />
<text  x="156.84" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="777.9" y="2005" width="3.9" height="15.0" fill="rgb(237,20,27)" rx="2" ry="2" />
<text  x="780.87" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="320.4" y="1973" width="0.2" height="15.0" fill="rgb(240,66,47)" rx="2" ry="2" />
<text  x="323.43" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="307.6" y="1957" width="0.8" height="15.0" fill="rgb(215,162,47)" rx="2" ry="2" />
<text  x="310.57" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="641.9" y="1941" width="0.2" height="15.0" fill="rgb(239,142,9)" rx="2" ry="2" />
<text  x="644.95" y="1951.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="598.2" y="2005" width="0.2" height="15.0" fill="rgb(229,147,14)" rx="2" ry="2" />
<text  x="601.22" y="2015.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="211.6" y="1941" width="0.6" height="15.0" fill="rgb(213,117,29)" rx="2" ry="2" />
<text  x="214.61" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.18%)</title><rect x="556.5" y="1957" width="2.1" height="15.0" fill="rgb(206,62,28)" rx="2" ry="2" />
<text  x="559.47" y="1967.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="921.7" y="1909" width="2.0" height="15.0" fill="rgb(243,98,47)" rx="2" ry="2" />
<text  x="924.71" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="454.2" y="1925" width="0.4" height="15.0" fill="rgb(215,215,20)" rx="2" ry="2" />
<text  x="457.18" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="177.0" y="1909" width="0.2" height="15.0" fill="rgb(220,150,26)" rx="2" ry="2" />
<text  x="179.99" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="323.6" y="1925" width="0.2" height="15.0" fill="rgb(216,229,41)" rx="2" ry="2" />
<text  x="326.60" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="444.5" y="1733" width="0.8" height="15.0" fill="rgb(229,32,7)" rx="2" ry="2" />
<text  x="447.49" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (122 samples, 2.05%)</title><rect x="1120.8" y="2037" width="24.1" height="15.0" fill="rgb(232,167,2)" rx="2" ry="2" />
<text  x="1123.75" y="2047.5" >f..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (34 samples, 0.57%)</title><rect x="80.4" y="53" width="6.8" height="15.0" fill="rgb(225,176,8)" rx="2" ry="2" />
<text  x="83.44" y="63.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1177.5" y="2021" width="0.2" height="15.0" fill="rgb(223,187,29)" rx="2" ry="2" />
<text  x="1180.54" y="2031.5" ></text>
</g>
<g >
<title>free (19 samples, 0.32%)</title><rect x="182.5" y="2021" width="3.8" height="15.0" fill="rgb(234,125,27)" rx="2" ry="2" />
<text  x="185.53" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="551.7" y="1957" width="0.2" height="15.0" fill="rgb(215,105,48)" rx="2" ry="2" />
<text  x="554.72" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="460.5" y="1973" width="0.8" height="15.0" fill="rgb(239,103,8)" rx="2" ry="2" />
<text  x="463.51" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="575.1" y="1989" width="0.2" height="15.0" fill="rgb(208,138,44)" rx="2" ry="2" />
<text  x="578.07" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="229.0" y="1797" width="0.2" height="15.0" fill="rgb(220,114,37)" rx="2" ry="2" />
<text  x="232.02" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (19 samples, 0.32%)</title><rect x="1045.0" y="1877" width="3.7" height="15.0" fill="rgb(248,1,39)" rx="2" ry="2" />
<text  x="1047.97" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (30 samples, 0.50%)</title><rect x="427.3" y="1989" width="5.9" height="15.0" fill="rgb(207,142,24)" rx="2" ry="2" />
<text  x="430.27" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (57 samples, 0.96%)</title><rect x="844.2" y="2037" width="11.2" height="15.0" fill="rgb(220,145,26)" rx="2" ry="2" />
<text  x="847.15" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (1 samples, 0.02%)</title><rect x="284.0" y="1989" width="0.2" height="15.0" fill="rgb(240,209,9)" rx="2" ry="2" />
<text  x="287.03" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (186 samples, 3.12%)</title><rect x="651.0" y="1925" width="36.8" height="15.0" fill="rgb(205,199,46)" rx="2" ry="2" />
<text  x="654.05" y="1935.5" >fol..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (5 samples, 0.08%)</title><rect x="426.3" y="1989" width="1.0" height="15.0" fill="rgb(242,172,31)" rx="2" ry="2" />
<text  x="429.28" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (4 samples, 0.07%)</title><rect x="868.9" y="1989" width="0.8" height="15.0" fill="rgb(230,124,50)" rx="2" ry="2" />
<text  x="871.88" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="574.1" y="1941" width="0.4" height="15.0" fill="rgb(239,123,1)" rx="2" ry="2" />
<text  x="577.08" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="929.4" y="1957" width="0.2" height="15.0" fill="rgb(230,42,8)" rx="2" ry="2" />
<text  x="932.43" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="683.5" y="1877" width="0.2" height="15.0" fill="rgb(241,94,30)" rx="2" ry="2" />
<text  x="686.49" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (11 samples, 0.18%)</title><rect x="508.2" y="1973" width="2.2" height="15.0" fill="rgb(211,160,47)" rx="2" ry="2" />
<text  x="511.20" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="814.9" y="1941" width="0.4" height="15.0" fill="rgb(229,101,9)" rx="2" ry="2" />
<text  x="817.87" y="1951.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="229.0" y="1781" width="0.2" height="15.0" fill="rgb(209,76,9)" rx="2" ry="2" />
<text  x="232.02" y="1791.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="685.3" y="1893" width="0.4" height="15.0" fill="rgb(251,97,12)" rx="2" ry="2" />
<text  x="688.27" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (24 samples, 0.40%)</title><rect x="20.1" y="2005" width="4.7" height="15.0" fill="rgb(254,21,13)" rx="2" ry="2" />
<text  x="23.09" y="2015.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(252,22,16)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (7 samples, 0.12%)</title><rect x="810.5" y="2005" width="1.4" height="15.0" fill="rgb(214,222,44)" rx="2" ry="2" />
<text  x="813.52" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (85 samples, 1.43%)</title><rect x="877.0" y="1973" width="16.8" height="15.0" fill="rgb(220,38,16)" rx="2" ry="2" />
<text  x="880.00" y="1983.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (80 samples, 1.34%)</title><rect x="235.9" y="1701" width="15.9" height="15.0" fill="rgb(214,122,34)" rx="2" ry="2" />
<text  x="238.95" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (286 samples, 4.80%)</title><rect x="96.7" y="2005" width="56.5" height="15.0" fill="rgb(210,140,24)" rx="2" ry="2" />
<text  x="99.66" y="2015.5" >faceb..</text>
</g>
<g >
<title>folly::fibers::Fiber::init (3 samples, 0.05%)</title><rect x="454.6" y="1957" width="0.6" height="15.0" fill="rgb(218,83,28)" rx="2" ry="2" />
<text  x="457.58" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (25 samples, 0.42%)</title><rect x="252.0" y="1701" width="4.9" height="15.0" fill="rgb(242,52,26)" rx="2" ry="2" />
<text  x="254.98" y="1711.5" ></text>
</g>
<g >
<title>ip_output (38 samples, 0.64%)</title><rect x="1075.8" y="1829" width="7.6" height="15.0" fill="rgb(235,174,32)" rx="2" ry="2" />
<text  x="1078.84" y="1839.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="234.4" y="1765" width="0.2" height="15.0" fill="rgb(224,145,43)" rx="2" ry="2" />
<text  x="237.37" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="22.9" y="1973" width="0.4" height="15.0" fill="rgb(235,149,15)" rx="2" ry="2" />
<text  x="25.86" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="843.0" y="1973" width="0.6" height="15.0" fill="rgb(235,7,46)" rx="2" ry="2" />
<text  x="845.96" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="57.3" y="37" width="0.4" height="15.0" fill="rgb(241,205,26)" rx="2" ry="2" />
<text  x="60.29" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="422.9" y="1973" width="0.8" height="15.0" fill="rgb(213,11,10)" rx="2" ry="2" />
<text  x="425.92" y="1983.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="909.8" y="1893" width="0.2" height="15.0" fill="rgb(227,120,32)" rx="2" ry="2" />
<text  x="912.84" y="1903.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1070.3" y="1861" width="0.2" height="15.0" fill="rgb(229,63,38)" rx="2" ry="2" />
<text  x="1073.30" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (511 samples, 8.57%)</title><rect x="855.4" y="2021" width="101.1" height="15.0" fill="rgb(210,222,15)" rx="2" ry="2" />
<text  x="858.43" y="2031.5" >[unknown]</text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1097.0" y="2037" width="0.2" height="15.0" fill="rgb(218,11,8)" rx="2" ry="2" />
<text  x="1100.01" y="2047.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1044.0" y="1893" width="0.4" height="15.0" fill="rgb(254,108,8)" rx="2" ry="2" />
<text  x="1046.98" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="269.2" y="2021" width="0.6" height="15.0" fill="rgb(224,35,17)" rx="2" ry="2" />
<text  x="272.19" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (37 samples, 0.62%)</title><rect x="498.3" y="1989" width="7.3" height="15.0" fill="rgb(234,40,8)" rx="2" ry="2" />
<text  x="501.30" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="357.4" y="1925" width="1.2" height="15.0" fill="rgb(220,78,18)" rx="2" ry="2" />
<text  x="360.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="965" width="42.0" height="15.0" fill="rgb(208,217,33)" rx="2" ry="2" />
<text  x="56.92" y="975.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (9 samples, 0.15%)</title><rect x="592.3" y="1989" width="1.8" height="15.0" fill="rgb(247,134,16)" rx="2" ry="2" />
<text  x="595.28" y="1999.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="650.8" y="1877" width="0.2" height="15.0" fill="rgb(219,207,18)" rx="2" ry="2" />
<text  x="653.85" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="578.0" y="1973" width="0.4" height="15.0" fill="rgb(226,173,27)" rx="2" ry="2" />
<text  x="581.04" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (4 samples, 0.07%)</title><rect x="357.4" y="1909" width="0.8" height="15.0" fill="rgb(212,45,31)" rx="2" ry="2" />
<text  x="360.43" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="165.7" y="1925" width="0.8" height="15.0" fill="rgb(250,5,7)" rx="2" ry="2" />
<text  x="168.71" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1301" width="42.0" height="15.0" fill="rgb(230,129,1)" rx="2" ry="2" />
<text  x="56.92" y="1311.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (10 samples, 0.17%)</title><rect x="64.8" y="37" width="2.0" height="15.0" fill="rgb(250,30,33)" rx="2" ry="2" />
<text  x="67.81" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="448.8" y="1925" width="2.0" height="15.0" fill="rgb(251,51,17)" rx="2" ry="2" />
<text  x="451.84" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="933" width="42.0" height="15.0" fill="rgb(232,15,0)" rx="2" ry="2" />
<text  x="56.92" y="943.5" >[un..</text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (34 samples, 0.57%)</title><rect x="544.8" y="1973" width="6.7" height="15.0" fill="rgb(220,57,16)" rx="2" ry="2" />
<text  x="547.80" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (3 samples, 0.05%)</title><rect x="831.5" y="2037" width="0.6" height="15.0" fill="rgb(247,8,38)" rx="2" ry="2" />
<text  x="834.49" y="2047.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="215.2" y="1893" width="0.4" height="15.0" fill="rgb(212,124,33)" rx="2" ry="2" />
<text  x="218.17" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (29 samples, 0.49%)</title><rect x="1077.6" y="1749" width="5.8" height="15.0" fill="rgb(244,108,4)" rx="2" ry="2" />
<text  x="1080.62" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="546.4" y="1957" width="0.2" height="15.0" fill="rgb(231,26,29)" rx="2" ry="2" />
<text  x="549.38" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(229,25,33)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (7 samples, 0.12%)</title><rect x="311.5" y="1925" width="1.4" height="15.0" fill="rgb(206,131,36)" rx="2" ry="2" />
<text  x="314.53" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="643.5" y="1941" width="0.2" height="15.0" fill="rgb(225,114,1)" rx="2" ry="2" />
<text  x="646.53" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="80.4" y="37" width="0.2" height="15.0" fill="rgb(241,13,18)" rx="2" ry="2" />
<text  x="83.44" y="47.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="1083.2" y="1701" width="0.2" height="15.0" fill="rgb(247,64,54)" rx="2" ry="2" />
<text  x="1086.16" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="414.0" y="2005" width="0.2" height="15.0" fill="rgb(205,102,50)" rx="2" ry="2" />
<text  x="417.02" y="2015.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1024.2" y="1733" width="0.2" height="15.0" fill="rgb(250,138,48)" rx="2" ry="2" />
<text  x="1027.20" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1175.8" y="2037" width="0.2" height="15.0" fill="rgb(211,35,25)" rx="2" ry="2" />
<text  x="1178.75" y="2047.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (1 samples, 0.02%)</title><rect x="234.0" y="1653" width="0.2" height="15.0" fill="rgb(230,91,42)" rx="2" ry="2" />
<text  x="236.97" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1169.6" y="2053" width="0.2" height="15.0" fill="rgb(218,59,3)" rx="2" ry="2" />
<text  x="1172.62" y="2063.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="95.7" y="37" width="0.2" height="15.0" fill="rgb(238,71,8)" rx="2" ry="2" />
<text  x="98.67" y="47.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (11 samples, 0.18%)</title><rect x="1080.8" y="1717" width="2.2" height="15.0" fill="rgb(241,149,15)" rx="2" ry="2" />
<text  x="1083.78" y="1727.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="316.5" y="1941" width="0.2" height="15.0" fill="rgb(232,195,53)" rx="2" ry="2" />
<text  x="319.48" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="842.4" y="1989" width="1.2" height="15.0" fill="rgb(249,122,6)" rx="2" ry="2" />
<text  x="845.37" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="352.5" y="1973" width="0.4" height="15.0" fill="rgb(251,3,42)" rx="2" ry="2" />
<text  x="355.48" y="1983.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="359.0" y="1941" width="0.2" height="15.0" fill="rgb(219,164,18)" rx="2" ry="2" />
<text  x="362.01" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="154.4" y="1973" width="0.2" height="15.0" fill="rgb(242,93,45)" rx="2" ry="2" />
<text  x="157.43" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="811.3" y="1877" width="0.2" height="15.0" fill="rgb(212,125,9)" rx="2" ry="2" />
<text  x="814.31" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="551.5" y="1973" width="0.2" height="15.0" fill="rgb(246,203,9)" rx="2" ry="2" />
<text  x="554.53" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (53 samples, 0.89%)</title><rect x="133.3" y="1941" width="10.4" height="15.0" fill="rgb(208,93,30)" rx="2" ry="2" />
<text  x="136.26" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (3 samples, 0.05%)</title><rect x="599.8" y="2037" width="0.6" height="15.0" fill="rgb(249,226,45)" rx="2" ry="2" />
<text  x="602.80" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1013" width="42.0" height="15.0" fill="rgb(231,77,25)" rx="2" ry="2" />
<text  x="56.92" y="1023.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="162.9" y="2021" width="0.2" height="15.0" fill="rgb(249,80,30)" rx="2" ry="2" />
<text  x="165.94" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="787.0" y="2005" width="0.4" height="15.0" fill="rgb(237,127,19)" rx="2" ry="2" />
<text  x="789.97" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="95.3" y="37" width="0.2" height="15.0" fill="rgb(230,117,37)" rx="2" ry="2" />
<text  x="98.27" y="47.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="687.8" y="1925" width="0.2" height="15.0" fill="rgb(211,90,17)" rx="2" ry="2" />
<text  x="690.85" y="1935.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (33 samples, 0.55%)</title><rect x="284.8" y="1957" width="6.5" height="15.0" fill="rgb(215,7,31)" rx="2" ry="2" />
<text  x="287.82" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (16 samples, 0.27%)</title><rect x="111.5" y="1957" width="3.2" height="15.0" fill="rgb(232,116,25)" rx="2" ry="2" />
<text  x="114.50" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="814.5" y="1941" width="0.2" height="15.0" fill="rgb(213,158,7)" rx="2" ry="2" />
<text  x="817.47" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (2 samples, 0.03%)</title><rect x="495.3" y="1989" width="0.4" height="15.0" fill="rgb(212,1,38)" rx="2" ry="2" />
<text  x="498.34" y="1999.5" ></text>
</g>
<g >
<title>epoll_wait (23 samples, 0.39%)</title><rect x="273.3" y="2037" width="4.6" height="15.0" fill="rgb(253,197,15)" rx="2" ry="2" />
<text  x="276.34" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="771.5" y="1989" width="1.2" height="15.0" fill="rgb(205,17,48)" rx="2" ry="2" />
<text  x="774.54" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="688.0" y="1925" width="0.2" height="15.0" fill="rgb(244,96,52)" rx="2" ry="2" />
<text  x="691.04" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::post (1 samples, 0.02%)</title><rect x="1120.8" y="2021" width="0.1" height="15.0" fill="rgb(210,86,23)" rx="2" ry="2" />
<text  x="1123.75" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="290.0" y="1893" width="0.2" height="15.0" fill="rgb(235,197,11)" rx="2" ry="2" />
<text  x="292.96" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (55 samples, 0.92%)</title><rect x="541.4" y="2005" width="10.9" height="15.0" fill="rgb(215,209,28)" rx="2" ry="2" />
<text  x="544.44" y="2015.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="304.6" y="1845" width="0.2" height="15.0" fill="rgb(248,51,15)" rx="2" ry="2" />
<text  x="307.60" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (3 samples, 0.05%)</title><rect x="977.3" y="2005" width="0.6" height="15.0" fill="rgb(213,143,48)" rx="2" ry="2" />
<text  x="980.31" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.35%)</title><rect x="974.9" y="2021" width="4.2" height="15.0" fill="rgb(206,66,17)" rx="2" ry="2" />
<text  x="977.93" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (4 samples, 0.07%)</title><rect x="1100.8" y="2053" width="0.8" height="15.0" fill="rgb(225,128,42)" rx="2" ry="2" />
<text  x="1103.77" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="93.7" y="37" width="1.4" height="15.0" fill="rgb(212,179,22)" rx="2" ry="2" />
<text  x="96.69" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (307 samples, 5.15%)</title><rect x="703.1" y="1989" width="60.7" height="15.0" fill="rgb(238,61,3)" rx="2" ry="2" />
<text  x="706.08" y="1999.5" >folly:..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="171.3" y="1957" width="0.1" height="15.0" fill="rgb(238,220,42)" rx="2" ry="2" />
<text  x="174.25" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1637" width="42.0" height="15.0" fill="rgb(237,126,19)" rx="2" ry="2" />
<text  x="56.92" y="1647.5" >[un..</text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="344.6" y="2021" width="6.1" height="15.0" fill="rgb(251,122,48)" rx="2" ry="2" />
<text  x="347.57" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="359.4" y="1989" width="0.8" height="15.0" fill="rgb(226,36,17)" rx="2" ry="2" />
<text  x="362.41" y="1999.5" ></text>
</g>
<g >
<title>sock_sendmsg (278 samples, 4.66%)</title><rect x="212.2" y="1941" width="55.0" height="15.0" fill="rgb(223,118,31)" rx="2" ry="2" />
<text  x="215.21" y="1951.5" >sock_..</text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1024.2" y="1765" width="0.2" height="15.0" fill="rgb(252,122,32)" rx="2" ry="2" />
<text  x="1027.20" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1109" width="42.0" height="15.0" fill="rgb(250,43,1)" rx="2" ry="2" />
<text  x="56.92" y="1119.5" >[un..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="1142.9" y="1973" width="0.6" height="15.0" fill="rgb(235,171,15)" rx="2" ry="2" />
<text  x="1145.91" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1043.8" y="1893" width="0.2" height="15.0" fill="rgb(224,4,42)" rx="2" ry="2" />
<text  x="1046.79" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1073.3" y="1797" width="0.2" height="15.0" fill="rgb(242,118,45)" rx="2" ry="2" />
<text  x="1076.27" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (13 samples, 0.22%)</title><rect x="556.1" y="1973" width="2.5" height="15.0" fill="rgb(213,3,46)" rx="2" ry="2" />
<text  x="559.08" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (6 samples, 0.10%)</title><rect x="1107.3" y="2021" width="1.2" height="15.0" fill="rgb(239,114,47)" rx="2" ry="2" />
<text  x="1110.30" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="600.8" y="2005" width="0.2" height="15.0" fill="rgb(222,158,7)" rx="2" ry="2" />
<text  x="603.79" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (10 samples, 0.17%)</title><rect x="265.2" y="1909" width="2.0" height="15.0" fill="rgb(241,111,24)" rx="2" ry="2" />
<text  x="268.23" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (9 samples, 0.15%)</title><rect x="90.1" y="37" width="1.8" height="15.0" fill="rgb(239,127,50)" rx="2" ry="2" />
<text  x="93.13" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.34%)</title><rect x="12.4" y="2021" width="3.9" height="15.0" fill="rgb(213,173,15)" rx="2" ry="2" />
<text  x="15.37" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (5 samples, 0.08%)</title><rect x="857.8" y="2005" width="1.0" height="15.0" fill="rgb(207,93,7)" rx="2" ry="2" />
<text  x="860.80" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1125" width="42.0" height="15.0" fill="rgb(246,227,35)" rx="2" ry="2" />
<text  x="56.92" y="1135.5" >[un..</text>
</g>
<g >
<title>copy_user_generic_unrolled (17 samples, 0.29%)</title><rect x="222.9" y="1861" width="3.4" height="15.0" fill="rgb(208,154,52)" rx="2" ry="2" />
<text  x="225.89" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (11 samples, 0.18%)</title><rect x="321.6" y="1957" width="2.2" height="15.0" fill="rgb(237,190,9)" rx="2" ry="2" />
<text  x="324.62" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1178.5" y="2021" width="1.0" height="15.0" fill="rgb(253,141,0)" rx="2" ry="2" />
<text  x="1181.52" y="2031.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(205,22,53)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.62%)</title><rect x="553.9" y="2021" width="7.3" height="15.0" fill="rgb(223,182,15)" rx="2" ry="2" />
<text  x="556.90" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (32 samples, 0.54%)</title><rect x="581.2" y="1973" width="6.3" height="15.0" fill="rgb(226,222,36)" rx="2" ry="2" />
<text  x="584.20" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (3 samples, 0.05%)</title><rect x="334.7" y="2021" width="0.6" height="15.0" fill="rgb(244,0,15)" rx="2" ry="2" />
<text  x="337.68" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (2 samples, 0.03%)</title><rect x="600.4" y="2005" width="0.4" height="15.0" fill="rgb(233,207,16)" rx="2" ry="2" />
<text  x="603.40" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.22%)</title><rect x="164.1" y="1989" width="2.6" height="15.0" fill="rgb(217,32,48)" rx="2" ry="2" />
<text  x="167.13" y="1999.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="258.3" y="1813" width="0.2" height="15.0" fill="rgb(211,8,2)" rx="2" ry="2" />
<text  x="261.31" y="1823.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="251.2" y="1461" width="0.2" height="15.0" fill="rgb(211,213,42)" rx="2" ry="2" />
<text  x="254.18" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="90.1" y="69" width="2.6" height="15.0" fill="rgb(219,197,26)" rx="2" ry="2" />
<text  x="93.13" y="79.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="326.0" y="1957" width="0.8" height="15.0" fill="rgb(252,127,27)" rx="2" ry="2" />
<text  x="328.97" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="810.1" y="2005" width="0.4" height="15.0" fill="rgb(254,160,31)" rx="2" ry="2" />
<text  x="813.12" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (20 samples, 0.34%)</title><rect x="296.1" y="1989" width="4.0" height="15.0" fill="rgb(252,224,23)" rx="2" ry="2" />
<text  x="299.10" y="1999.5" ></text>
</g>
<g >
<title>kfree (75 samples, 1.26%)</title><rect x="1009.6" y="1861" width="14.8" height="15.0" fill="rgb(213,190,37)" rx="2" ry="2" />
<text  x="1012.56" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="618.2" y="1989" width="1.4" height="15.0" fill="rgb(241,183,30)" rx="2" ry="2" />
<text  x="621.20" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (511 samples, 8.57%)</title><rect x="855.4" y="2037" width="101.1" height="15.0" fill="rgb(237,97,34)" rx="2" ry="2" />
<text  x="858.43" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="546.4" y="1925" width="0.2" height="15.0" fill="rgb(213,91,9)" rx="2" ry="2" />
<text  x="549.38" y="1935.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.4" y="2053" width="1.0" height="15.0" fill="rgb(246,108,15)" rx="2" ry="2" />
<text  x="14.38" y="2063.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="161.4" y="2005" width="0.2" height="15.0" fill="rgb(242,3,3)" rx="2" ry="2" />
<text  x="164.36" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="605.9" y="1989" width="0.2" height="15.0" fill="rgb(221,141,40)" rx="2" ry="2" />
<text  x="608.94" y="1999.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="1090.1" y="1909" width="0.8" height="15.0" fill="rgb(231,70,4)" rx="2" ry="2" />
<text  x="1093.08" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="92.9" y="53" width="0.2" height="15.0" fill="rgb(211,63,50)" rx="2" ry="2" />
<text  x="95.90" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (51 samples, 0.86%)</title><rect x="366.1" y="2037" width="10.1" height="15.0" fill="rgb(218,196,26)" rx="2" ry="2" />
<text  x="369.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="597" width="42.0" height="15.0" fill="rgb(232,124,18)" rx="2" ry="2" />
<text  x="56.92" y="607.5" >[un..</text>
</g>
<g >
<title>__vsnprintf_chk (1 samples, 0.02%)</title><rect x="272.9" y="2037" width="0.2" height="15.0" fill="rgb(233,28,3)" rx="2" ry="2" />
<text  x="275.95" y="2047.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="251.6" y="1477" width="0.2" height="15.0" fill="rgb(247,106,31)" rx="2" ry="2" />
<text  x="254.58" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="453.8" y="1941" width="0.2" height="15.0" fill="rgb(252,177,46)" rx="2" ry="2" />
<text  x="456.79" y="1951.5" ></text>
</g>
<g >
<title>std::find_if&lt;unsigned long*, folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="914.2" y="1893" width="0.2" height="15.0" fill="rgb(228,86,1)" rx="2" ry="2" />
<text  x="917.19" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (17 samples, 0.29%)</title><rect x="163.7" y="2005" width="3.4" height="15.0" fill="rgb(218,28,24)" rx="2" ry="2" />
<text  x="166.73" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (4 samples, 0.07%)</title><rect x="444.5" y="1909" width="0.8" height="15.0" fill="rgb(207,78,2)" rx="2" ry="2" />
<text  x="447.49" y="1919.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="1092.3" y="1957" width="0.6" height="15.0" fill="rgb(246,51,40)" rx="2" ry="2" />
<text  x="1095.26" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="213" width="42.0" height="15.0" fill="rgb(222,94,2)" rx="2" ry="2" />
<text  x="56.92" y="223.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (247 samples, 4.14%)</title><rect x="642.1" y="1973" width="48.9" height="15.0" fill="rgb(217,212,17)" rx="2" ry="2" />
<text  x="645.14" y="1983.5" >foll..</text>
</g>
<g >
<title>__pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="1096.4" y="2053" width="0.6" height="15.0" fill="rgb(252,112,33)" rx="2" ry="2" />
<text  x="1099.42" y="2063.5" ></text>
</g>
<g >
<title>skb_release_all (178 samples, 2.98%)</title><rect x="1006.6" y="1909" width="35.2" height="15.0" fill="rgb(239,35,41)" rx="2" ry="2" />
<text  x="1009.59" y="1919.5" >sk..</text>
</g>
<g >
<title>[unknown] (39 samples, 0.65%)</title><rect x="561.2" y="2021" width="7.7" height="15.0" fill="rgb(248,44,28)" rx="2" ry="2" />
<text  x="564.22" y="2031.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="190.8" y="2021" width="0.4" height="15.0" fill="rgb(208,172,24)" rx="2" ry="2" />
<text  x="193.84" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="323.4" y="1909" width="0.2" height="15.0" fill="rgb(205,216,12)" rx="2" ry="2" />
<text  x="326.40" y="1919.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="256.5" y="1653" width="0.4" height="15.0" fill="rgb(213,190,7)" rx="2" ry="2" />
<text  x="259.53" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (12 samples, 0.20%)</title><rect x="339.4" y="1861" width="2.4" height="15.0" fill="rgb(229,199,52)" rx="2" ry="2" />
<text  x="342.43" y="1871.5" ></text>
</g>
<g >
<title>account_system_time (1 samples, 0.02%)</title><rect x="1073.3" y="1733" width="0.2" height="15.0" fill="rgb(209,79,51)" rx="2" ry="2" />
<text  x="1076.27" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (3 samples, 0.05%)</title><rect x="826.9" y="2005" width="0.6" height="15.0" fill="rgb(231,49,42)" rx="2" ry="2" />
<text  x="829.94" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="322.6" y="1925" width="1.0" height="15.0" fill="rgb(245,160,13)" rx="2" ry="2" />
<text  x="325.61" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="632.3" y="1909" width="0.1" height="15.0" fill="rgb(244,41,34)" rx="2" ry="2" />
<text  x="635.25" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="95.1" y="37" width="0.2" height="15.0" fill="rgb(251,30,7)" rx="2" ry="2" />
<text  x="98.08" y="47.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="421" width="42.0" height="15.0" fill="rgb(205,31,49)" rx="2" ry="2" />
<text  x="56.92" y="431.5" >[un..</text>
</g>
<g >
<title>page_fault (3 samples, 0.05%)</title><rect x="1142.9" y="2005" width="0.6" height="15.0" fill="rgb(241,21,53)" rx="2" ry="2" />
<text  x="1145.91" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="79.8" y="37" width="0.2" height="15.0" fill="rgb(225,33,52)" rx="2" ry="2" />
<text  x="82.84" y="47.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="1006.0" y="1861" width="0.4" height="15.0" fill="rgb(209,195,43)" rx="2" ry="2" />
<text  x="1009.00" y="1871.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="229.8" y="1829" width="0.4" height="15.0" fill="rgb(242,31,39)" rx="2" ry="2" />
<text  x="232.82" y="1839.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="685.7" y="1893" width="0.4" height="15.0" fill="rgb(206,204,12)" rx="2" ry="2" />
<text  x="688.67" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="581.0" y="1925" width="0.2" height="15.0" fill="rgb(246,4,54)" rx="2" ry="2" />
<text  x="584.01" y="1935.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="172.8" y="1941" width="0.2" height="15.0" fill="rgb(209,24,13)" rx="2" ry="2" />
<text  x="175.83" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="318.1" y="1973" width="0.4" height="15.0" fill="rgb(245,108,47)" rx="2" ry="2" />
<text  x="321.06" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="901" width="42.0" height="15.0" fill="rgb(248,94,13)" rx="2" ry="2" />
<text  x="56.92" y="911.5" >[un..</text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="211.4" y="1893" width="0.2" height="15.0" fill="rgb(231,62,17)" rx="2" ry="2" />
<text  x="214.42" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="879.4" y="1957" width="0.6" height="15.0" fill="rgb(217,139,11)" rx="2" ry="2" />
<text  x="882.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (142 samples, 2.38%)</title><rect x="570.7" y="2037" width="28.1" height="15.0" fill="rgb(251,149,11)" rx="2" ry="2" />
<text  x="573.72" y="2047.5" >f..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="179.4" y="1893" width="0.2" height="15.0" fill="rgb(245,199,36)" rx="2" ry="2" />
<text  x="182.36" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (217 samples, 3.64%)</title><rect x="53.3" y="2005" width="43.0" height="15.0" fill="rgb(240,73,15)" rx="2" ry="2" />
<text  x="56.33" y="2015.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="303.0" y="1973" width="0.2" height="15.0" fill="rgb(236,31,52)" rx="2" ry="2" />
<text  x="306.02" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="599.4" y="2037" width="0.2" height="15.0" fill="rgb(217,69,54)" rx="2" ry="2" />
<text  x="602.41" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="589.5" y="1973" width="0.2" height="15.0" fill="rgb(229,164,22)" rx="2" ry="2" />
<text  x="592.51" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (77 samples, 1.29%)</title><rect x="236.5" y="1493" width="15.3" height="15.0" fill="rgb(227,34,27)" rx="2" ry="2" />
<text  x="239.54" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="1047.5" y="1781" width="0.4" height="15.0" fill="rgb(236,43,44)" rx="2" ry="2" />
<text  x="1050.55" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (242 samples, 4.06%)</title><rect x="643.1" y="1957" width="47.9" height="15.0" fill="rgb(211,108,48)" rx="2" ry="2" />
<text  x="646.13" y="1967.5" >foll..</text>
</g>
<g >
<title>skb_copy_datagram_iter (103 samples, 1.73%)</title><rect x="1048.9" y="1925" width="20.4" height="15.0" fill="rgb(229,89,29)" rx="2" ry="2" />
<text  x="1051.93" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(244,167,1)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="352.9" y="1973" width="0.2" height="15.0" fill="rgb(214,183,37)" rx="2" ry="2" />
<text  x="355.88" y="1983.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="259.9" y="1749" width="0.2" height="15.0" fill="rgb(234,173,15)" rx="2" ry="2" />
<text  x="262.89" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_active_ (9 samples, 0.15%)</title><rect x="1099.0" y="2053" width="1.8" height="15.0" fill="rgb(251,85,30)" rx="2" ry="2" />
<text  x="1101.99" y="2063.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1143.5" y="1989" width="0.2" height="15.0" fill="rgb(231,113,3)" rx="2" ry="2" />
<text  x="1146.50" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (77 samples, 1.29%)</title><rect x="236.5" y="1525" width="15.3" height="15.0" fill="rgb(221,222,19)" rx="2" ry="2" />
<text  x="239.54" y="1535.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (20 samples, 0.34%)</title><rect x="12.4" y="1861" width="3.9" height="15.0" fill="rgb(237,223,11)" rx="2" ry="2" />
<text  x="15.37" y="1871.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1175.4" y="2037" width="0.2" height="15.0" fill="rgb(251,25,22)" rx="2" ry="2" />
<text  x="1178.36" y="2047.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="96.3" y="2005" width="0.4" height="15.0" fill="rgb(235,118,5)" rx="2" ry="2" />
<text  x="99.26" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="341.8" y="1861" width="0.2" height="15.0" fill="rgb(241,42,29)" rx="2" ry="2" />
<text  x="344.80" y="1871.5" ></text>
</g>
<g >
<title>__alloc_skb (14 samples, 0.23%)</title><rect x="227.6" y="1861" width="2.8" height="15.0" fill="rgb(227,101,23)" rx="2" ry="2" />
<text  x="230.64" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (15 samples, 0.25%)</title><rect x="810.5" y="2037" width="3.0" height="15.0" fill="rgb(236,75,23)" rx="2" ry="2" />
<text  x="813.52" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1397" width="42.0" height="15.0" fill="rgb(251,52,6)" rx="2" ry="2" />
<text  x="56.92" y="1407.5" >[un..</text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (7 samples, 0.12%)</title><rect x="331.3" y="1941" width="1.4" height="15.0" fill="rgb(253,108,27)" rx="2" ry="2" />
<text  x="334.31" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="309.7" y="1957" width="0.8" height="15.0" fill="rgb(211,32,44)" rx="2" ry="2" />
<text  x="312.75" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (14 samples, 0.23%)</title><rect x="635.8" y="1941" width="2.8" height="15.0" fill="rgb(211,12,19)" rx="2" ry="2" />
<text  x="638.81" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1573" width="42.0" height="15.0" fill="rgb(210,7,0)" rx="2" ry="2" />
<text  x="56.92" y="1583.5" >[un..</text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1068.1" y="1893" width="0.6" height="15.0" fill="rgb(239,139,33)" rx="2" ry="2" />
<text  x="1071.12" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="533" width="42.0" height="15.0" fill="rgb(232,69,48)" rx="2" ry="2" />
<text  x="56.92" y="543.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="688.2" y="1925" width="0.2" height="15.0" fill="rgb(214,134,40)" rx="2" ry="2" />
<text  x="691.24" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="304.6" y="1893" width="0.2" height="15.0" fill="rgb(215,0,48)" rx="2" ry="2" />
<text  x="307.60" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (31 samples, 0.52%)</title><rect x="832.1" y="2037" width="6.1" height="15.0" fill="rgb(250,99,32)" rx="2" ry="2" />
<text  x="835.08" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="234.0" y="1765" width="0.2" height="15.0" fill="rgb(209,217,35)" rx="2" ry="2" />
<text  x="236.97" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="361.0" y="1989" width="0.2" height="15.0" fill="rgb(210,228,45)" rx="2" ry="2" />
<text  x="363.99" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (21 samples, 0.35%)</title><rect x="1175.4" y="2053" width="4.1" height="15.0" fill="rgb(243,12,23)" rx="2" ry="2" />
<text  x="1178.36" y="2063.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="95.7" y="101" width="0.2" height="15.0" fill="rgb(247,124,35)" rx="2" ry="2" />
<text  x="98.67" y="111.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="341.2" y="1829" width="0.2" height="15.0" fill="rgb(222,157,27)" rx="2" ry="2" />
<text  x="344.21" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (718 samples, 12.04%)</title><rect x="49.8" y="2037" width="142.0" height="15.0" fill="rgb(221,218,42)" rx="2" ry="2" />
<text  x="52.77" y="2047.5" >[unknown]</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="73.7" y="37" width="0.2" height="15.0" fill="rgb(246,213,42)" rx="2" ry="2" />
<text  x="76.71" y="47.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="485" width="42.0" height="15.0" fill="rgb(208,15,5)" rx="2" ry="2" />
<text  x="56.92" y="495.5" >[un..</text>
</g>
<g >
<title>vfprintf (7 samples, 0.12%)</title><rect x="1097.4" y="2037" width="1.4" height="15.0" fill="rgb(252,61,4)" rx="2" ry="2" />
<text  x="1100.40" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="112.5" y="1925" width="0.4" height="15.0" fill="rgb(234,137,39)" rx="2" ry="2" />
<text  x="115.49" y="1935.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="652.0" y="1909" width="0.2" height="15.0" fill="rgb(210,148,29)" rx="2" ry="2" />
<text  x="655.04" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="595.1" y="2005" width="1.3" height="15.0" fill="rgb(238,204,27)" rx="2" ry="2" />
<text  x="598.05" y="2015.5" ></text>
</g>
<g >
<title>sys_epoll_wait (23 samples, 0.39%)</title><rect x="273.3" y="1989" width="4.6" height="15.0" fill="rgb(226,127,5)" rx="2" ry="2" />
<text  x="276.34" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="112.9" y="1925" width="0.2" height="15.0" fill="rgb(253,112,54)" rx="2" ry="2" />
<text  x="115.88" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="260.3" y="1733" width="0.2" height="15.0" fill="rgb(221,151,21)" rx="2" ry="2" />
<text  x="263.29" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="978.9" y="1973" width="0.2" height="15.0" fill="rgb(210,115,43)" rx="2" ry="2" />
<text  x="981.89" y="1983.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="538.9" y="1989" width="0.4" height="15.0" fill="rgb(236,28,46)" rx="2" ry="2" />
<text  x="541.86" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="547.8" y="1861" width="0.2" height="15.0" fill="rgb(230,48,21)" rx="2" ry="2" />
<text  x="550.77" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (80 samples, 1.34%)</title><rect x="235.9" y="1685" width="15.9" height="15.0" fill="rgb(254,147,49)" rx="2" ry="2" />
<text  x="238.95" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="147.7" y="1957" width="1.0" height="15.0" fill="rgb(229,141,3)" rx="2" ry="2" />
<text  x="150.71" y="1967.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="581.0" y="1861" width="0.2" height="15.0" fill="rgb(218,223,24)" rx="2" ry="2" />
<text  x="584.01" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (39 samples, 0.65%)</title><rect x="399.6" y="2005" width="7.7" height="15.0" fill="rgb(221,24,12)" rx="2" ry="2" />
<text  x="402.57" y="2015.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="1042.2" y="1925" width="0.6" height="15.0" fill="rgb(226,55,16)" rx="2" ry="2" />
<text  x="1045.20" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1159.9" y="2053" width="0.2" height="15.0" fill="rgb(208,172,42)" rx="2" ry="2" />
<text  x="1162.93" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="177.4" y="1925" width="0.2" height="15.0" fill="rgb(208,210,42)" rx="2" ry="2" />
<text  x="180.38" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="173.2" y="1973" width="0.2" height="15.0" fill="rgb(224,72,28)" rx="2" ry="2" />
<text  x="176.23" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="1083.2" y="1733" width="0.2" height="15.0" fill="rgb(238,122,48)" rx="2" ry="2" />
<text  x="1086.16" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (3 samples, 0.05%)</title><rect x="54.7" y="37" width="0.6" height="15.0" fill="rgb(223,165,48)" rx="2" ry="2" />
<text  x="57.71" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="614.2" y="2021" width="1.4" height="15.0" fill="rgb(216,5,6)" rx="2" ry="2" />
<text  x="617.25" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (201 samples, 3.37%)</title><rect x="53.9" y="85" width="39.8" height="15.0" fill="rgb(248,42,12)" rx="2" ry="2" />
<text  x="56.92" y="95.5" >[un..</text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="316.7" y="1973" width="0.2" height="15.0" fill="rgb(237,50,27)" rx="2" ry="2" />
<text  x="319.67" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="455.2" y="1957" width="0.4" height="15.0" fill="rgb(218,122,26)" rx="2" ry="2" />
<text  x="458.17" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="324.0" y="1957" width="0.2" height="15.0" fill="rgb(230,26,48)" rx="2" ry="2" />
<text  x="326.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="325" width="42.0" height="15.0" fill="rgb(215,19,36)" rx="2" ry="2" />
<text  x="56.92" y="335.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="788.6" y="1989" width="0.2" height="15.0" fill="rgb(242,200,23)" rx="2" ry="2" />
<text  x="791.55" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="146.5" y="1941" width="0.2" height="15.0" fill="rgb(210,70,13)" rx="2" ry="2" />
<text  x="149.52" y="1951.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="553.5" y="2005" width="0.2" height="15.0" fill="rgb(222,39,44)" rx="2" ry="2" />
<text  x="556.50" y="2015.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="687.6" y="1909" width="0.2" height="15.0" fill="rgb(222,151,27)" rx="2" ry="2" />
<text  x="690.65" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1685" width="42.0" height="15.0" fill="rgb(232,142,31)" rx="2" ry="2" />
<text  x="56.92" y="1695.5" >[un..</text>
</g>
<g >
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="256.3" y="1669" width="0.6" height="15.0" fill="rgb(206,159,19)" rx="2" ry="2" />
<text  x="259.33" y="1679.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="332.9" y="1973" width="0.2" height="15.0" fill="rgb(232,108,26)" rx="2" ry="2" />
<text  x="335.90" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="693.2" y="1941" width="0.4" height="15.0" fill="rgb(214,185,34)" rx="2" ry="2" />
<text  x="696.19" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (10 samples, 0.17%)</title><rect x="193.6" y="2037" width="2.0" height="15.0" fill="rgb(210,201,49)" rx="2" ry="2" />
<text  x="196.61" y="2047.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (89 samples, 1.49%)</title><rect x="1069.3" y="1925" width="17.6" height="15.0" fill="rgb(231,201,42)" rx="2" ry="2" />
<text  x="1072.31" y="1935.5" ></text>
</g>
<g >
<title>sock_poll (19 samples, 0.32%)</title><rect x="274.1" y="1909" width="3.8" height="15.0" fill="rgb(232,127,25)" rx="2" ry="2" />
<text  x="277.13" y="1919.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="271.2" y="2037" width="0.4" height="15.0" fill="rgb(216,108,15)" rx="2" ry="2" />
<text  x="274.17" y="2047.5" ></text>
</g>
<g >
<title>ep_send_events_proc (22 samples, 0.37%)</title><rect x="273.5" y="1941" width="4.4" height="15.0" fill="rgb(215,107,41)" rx="2" ry="2" />
<text  x="276.54" y="1951.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (247 samples, 4.14%)</title><rect x="215.8" y="1893" width="48.8" height="15.0" fill="rgb(222,57,37)" rx="2" ry="2" />
<text  x="218.77" y="1903.5" >tcp_..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="304.8" y="1941" width="0.2" height="15.0" fill="rgb(205,220,23)" rx="2" ry="2" />
<text  x="307.80" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (18 samples, 0.30%)</title><rect x="329.1" y="1957" width="3.6" height="15.0" fill="rgb(208,77,24)" rx="2" ry="2" />
<text  x="332.14" y="1967.5" ></text>
</g>
<g >
<title>inet_recvmsg (542 samples, 9.09%)</title><rect x="985.0" y="1957" width="107.3" height="15.0" fill="rgb(216,82,53)" rx="2" ry="2" />
<text  x="988.02" y="1967.5" >inet_recvmsg</text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1067.7" y="1893" width="0.4" height="15.0" fill="rgb(224,150,7)" rx="2" ry="2" />
<text  x="1070.73" y="1903.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="229.4" y="1829" width="0.4" height="15.0" fill="rgb(219,184,31)" rx="2" ry="2" />
<text  x="232.42" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1317" width="42.0" height="15.0" fill="rgb(234,210,52)" rx="2" ry="2" />
<text  x="56.92" y="1327.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="447.5" y="1925" width="0.7" height="15.0" fill="rgb(240,150,36)" rx="2" ry="2" />
<text  x="450.45" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="573.5" y="1957" width="1.4" height="15.0" fill="rgb(233,103,1)" rx="2" ry="2" />
<text  x="576.49" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="459.1" y="1957" width="0.6" height="15.0" fill="rgb(230,125,19)" rx="2" ry="2" />
<text  x="462.13" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (1 samples, 0.02%)</title><rect x="281.5" y="2005" width="0.2" height="15.0" fill="rgb(235,111,33)" rx="2" ry="2" />
<text  x="284.46" y="2015.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="207.3" y="1877" width="0.2" height="15.0" fill="rgb(216,95,40)" rx="2" ry="2" />
<text  x="210.26" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="743.2" y="1957" width="0.2" height="15.0" fill="rgb(236,162,29)" rx="2" ry="2" />
<text  x="746.25" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="683.7" y="1877" width="0.4" height="15.0" fill="rgb(222,19,24)" rx="2" ry="2" />
<text  x="686.69" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (7 samples, 0.12%)</title><rect x="311.5" y="1941" width="1.4" height="15.0" fill="rgb(249,64,16)" rx="2" ry="2" />
<text  x="314.53" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="844.0" y="2037" width="0.2" height="15.0" fill="rgb(249,187,5)" rx="2" ry="2" />
<text  x="846.95" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1108.1" y="2005" width="0.2" height="15.0" fill="rgb(211,29,14)" rx="2" ry="2" />
<text  x="1111.09" y="2015.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="210.2" y="1909" width="0.2" height="15.0" fill="rgb(239,182,24)" rx="2" ry="2" />
<text  x="213.23" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1925" width="42.0" height="15.0" fill="rgb(247,170,48)" rx="2" ry="2" />
<text  x="56.92" y="1935.5" >[un..</text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="926.7" y="1989" width="0.4" height="15.0" fill="rgb(230,179,20)" rx="2" ry="2" />
<text  x="929.66" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="358.2" y="1909" width="0.2" height="15.0" fill="rgb(218,229,18)" rx="2" ry="2" />
<text  x="361.22" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1541" width="42.0" height="15.0" fill="rgb(248,116,33)" rx="2" ry="2" />
<text  x="56.92" y="1551.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::post (10 samples, 0.17%)</title><rect x="1145.5" y="2037" width="2.0" height="15.0" fill="rgb(235,186,19)" rx="2" ry="2" />
<text  x="1148.48" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="157.6" y="1989" width="0.2" height="15.0" fill="rgb(236,227,7)" rx="2" ry="2" />
<text  x="160.60" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (18 samples, 0.30%)</title><rect x="782.4" y="2005" width="3.6" height="15.0" fill="rgb(229,152,41)" rx="2" ry="2" />
<text  x="785.42" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 5.78%)</title><rect x="485.2" y="2021" width="68.3" height="15.0" fill="rgb(231,64,22)" rx="2" ry="2" />
<text  x="488.24" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (4 samples, 0.07%)</title><rect x="978.3" y="2005" width="0.8" height="15.0" fill="rgb(253,134,30)" rx="2" ry="2" />
<text  x="981.30" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="133" width="0.2" height="15.0" fill="rgb(250,15,23)" rx="2" ry="2" />
<text  x="98.67" y="143.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="520.5" y="1989" width="0.2" height="15.0" fill="rgb(250,47,15)" rx="2" ry="2" />
<text  x="523.46" y="1999.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="267.0" y="1877" width="0.2" height="15.0" fill="rgb(232,139,1)" rx="2" ry="2" />
<text  x="270.01" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="260.7" y="1813" width="0.4" height="15.0" fill="rgb(245,56,52)" rx="2" ry="2" />
<text  x="263.68" y="1823.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="228.8" y="1829" width="0.4" height="15.0" fill="rgb(206,169,9)" rx="2" ry="2" />
<text  x="231.83" y="1839.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="312.7" y="1909" width="0.2" height="15.0" fill="rgb(254,104,18)" rx="2" ry="2" />
<text  x="315.72" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1175.2" y="2053" width="0.2" height="15.0" fill="rgb(254,80,11)" rx="2" ry="2" />
<text  x="1178.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="405" width="42.0" height="15.0" fill="rgb(250,111,14)" rx="2" ry="2" />
<text  x="56.92" y="415.5" >[un..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (337 samples, 5.65%)</title><rect x="202.5" y="2021" width="66.7" height="15.0" fill="rgb(234,79,40)" rx="2" ry="2" />
<text  x="205.51" y="2031.5" >entry_S..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="686.9" y="1909" width="0.2" height="15.0" fill="rgb(226,27,50)" rx="2" ry="2" />
<text  x="689.86" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="503.1" y="1973" width="0.1" height="15.0" fill="rgb(235,112,47)" rx="2" ry="2" />
<text  x="506.05" y="1983.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="1095.6" y="2053" width="0.8" height="15.0" fill="rgb(239,198,33)" rx="2" ry="2" />
<text  x="1098.62" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="784.2" y="1989" width="1.8" height="15.0" fill="rgb(236,74,16)" rx="2" ry="2" />
<text  x="787.20" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (110 samples, 1.84%)</title><rect x="788.2" y="2005" width="21.7" height="15.0" fill="rgb(237,121,45)" rx="2" ry="2" />
<text  x="791.16" y="2015.5" >f..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (18 samples, 0.30%)</title><rect x="565.4" y="1989" width="3.5" height="15.0" fill="rgb(225,45,1)" rx="2" ry="2" />
<text  x="568.38" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="695.0" y="1941" width="0.8" height="15.0" fill="rgb(213,133,10)" rx="2" ry="2" />
<text  x="697.97" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (18 samples, 0.30%)</title><rect x="163.5" y="2021" width="3.6" height="15.0" fill="rgb(233,220,13)" rx="2" ry="2" />
<text  x="166.53" y="2031.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="11.4" y="1957" width="1.0" height="15.0" fill="rgb(221,206,24)" rx="2" ry="2" />
<text  x="14.38" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (45 samples, 0.75%)</title><rect x="40.9" y="2037" width="8.9" height="15.0" fill="rgb(248,56,9)" rx="2" ry="2" />
<text  x="43.87" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="24.2" y="1973" width="0.4" height="15.0" fill="rgb(231,89,27)" rx="2" ry="2" />
<text  x="27.25" y="1983.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (20 samples, 0.34%)</title><rect x="273.9" y="1925" width="4.0" height="15.0" fill="rgb(248,90,13)" rx="2" ry="2" />
<text  x="276.94" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="149.1" y="1957" width="0.2" height="15.0" fill="rgb(216,52,37)" rx="2" ry="2" />
<text  x="152.09" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="173.6" y="1973" width="1.0" height="15.0" fill="rgb(216,226,37)" rx="2" ry="2" />
<text  x="176.63" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (23 samples, 0.39%)</title><rect x="153.2" y="2005" width="4.6" height="15.0" fill="rgb(241,38,8)" rx="2" ry="2" />
<text  x="156.25" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="149.3" y="1957" width="0.6" height="15.0" fill="rgb(215,116,4)" rx="2" ry="2" />
<text  x="152.29" y="1967.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="234.2" y="1781" width="0.4" height="15.0" fill="rgb(216,12,41)" rx="2" ry="2" />
<text  x="237.17" y="1791.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1075.8" y="1797" width="0.4" height="15.0" fill="rgb(212,122,17)" rx="2" ry="2" />
<text  x="1078.84" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (6 samples, 0.10%)</title><rect x="55.5" y="37" width="1.2" height="15.0" fill="rgb(228,28,13)" rx="2" ry="2" />
<text  x="58.51" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (3 samples, 0.05%)</title><rect x="547.6" y="1941" width="0.6" height="15.0" fill="rgb(208,136,37)" rx="2" ry="2" />
<text  x="550.57" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (63 samples, 1.06%)</title><rect x="993.9" y="1877" width="12.5" height="15.0" fill="rgb(228,55,9)" rx="2" ry="2" />
<text  x="996.93" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="606.5" y="1989" width="0.2" height="15.0" fill="rgb(224,216,6)" rx="2" ry="2" />
<text  x="609.53" y="1999.5" ></text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="1073.3" y="1701" width="0.2" height="15.0" fill="rgb(231,33,36)" rx="2" ry="2" />
<text  x="1076.27" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="334.3" y="1957" width="0.4" height="15.0" fill="rgb(235,74,24)" rx="2" ry="2" />
<text  x="337.28" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2 samples, 0.03%)</title><rect x="336.9" y="1893" width="0.4" height="15.0" fill="rgb(229,69,27)" rx="2" ry="2" />
<text  x="339.85" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="548.8" y="1925" width="0.4" height="15.0" fill="rgb(249,153,10)" rx="2" ry="2" />
<text  x="551.76" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="564.0" y="2005" width="0.2" height="15.0" fill="rgb(243,25,29)" rx="2" ry="2" />
<text  x="566.99" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (7 samples, 0.12%)</title><rect x="259.1" y="1765" width="1.4" height="15.0" fill="rgb(244,40,3)" rx="2" ry="2" />
<text  x="262.10" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1108.1" y="1989" width="0.2" height="15.0" fill="rgb(242,73,13)" rx="2" ry="2" />
<text  x="1111.09" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="172.4" y="1989" width="1.0" height="15.0" fill="rgb(250,63,1)" rx="2" ry="2" />
<text  x="175.44" y="1999.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="581.0" y="1829" width="0.2" height="15.0" fill="rgb(227,199,32)" rx="2" ry="2" />
<text  x="584.01" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (397 samples, 6.66%)</title><rect x="619.8" y="2005" width="78.5" height="15.0" fill="rgb(213,209,17)" rx="2" ry="2" />
<text  x="622.79" y="2015.5" >facebook:..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (3 samples, 0.05%)</title><rect x="1169.8" y="2053" width="0.6" height="15.0" fill="rgb(250,116,13)" rx="2" ry="2" />
<text  x="1172.82" y="2063.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="809.9" y="2005" width="0.2" height="15.0" fill="rgb(223,89,41)" rx="2" ry="2" />
<text  x="812.92" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (253 samples, 4.24%)</title><rect x="991.8" y="1925" width="50.0" height="15.0" fill="rgb(227,90,12)" rx="2" ry="2" />
<text  x="994.75" y="1935.5" >__kfr..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="928.0" y="1973" width="1.6" height="15.0" fill="rgb(244,151,27)" rx="2" ry="2" />
<text  x="931.04" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="22.9" y="1957" width="0.2" height="15.0" fill="rgb(246,0,50)" rx="2" ry="2" />
<text  x="25.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1205" width="42.0" height="15.0" fill="rgb(213,124,48)" rx="2" ry="2" />
<text  x="56.92" y="1215.5" >[un..</text>
</g>
<g >
<title>[unknown] (211 samples, 3.54%)</title><rect x="53.9" y="181" width="41.8" height="15.0" fill="rgb(214,37,18)" rx="2" ry="2" />
<text  x="56.92" y="191.5" >[un..</text>
</g>
<g >
<title>tcp_send_mss (16 samples, 0.27%)</title><rect x="261.5" y="1877" width="3.1" height="15.0" fill="rgb(212,192,32)" rx="2" ry="2" />
<text  x="264.47" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="899.2" y="1893" width="0.2" height="15.0" fill="rgb(242,25,34)" rx="2" ry="2" />
<text  x="902.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="805" width="42.0" height="15.0" fill="rgb(246,47,46)" rx="2" ry="2" />
<text  x="56.92" y="815.5" >[un..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="295.3" y="1973" width="0.8" height="15.0" fill="rgb(221,16,9)" rx="2" ry="2" />
<text  x="298.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (6 samples, 0.10%)</title><rect x="407.7" y="2005" width="1.2" height="15.0" fill="rgb(241,44,36)" rx="2" ry="2" />
<text  x="410.69" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="23.8" y="1925" width="0.2" height="15.0" fill="rgb(240,108,6)" rx="2" ry="2" />
<text  x="26.85" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6 samples, 0.10%)</title><rect x="297.3" y="1973" width="1.2" height="15.0" fill="rgb(252,97,49)" rx="2" ry="2" />
<text  x="300.28" y="1983.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="229.4" y="1813" width="0.4" height="15.0" fill="rgb(247,161,38)" rx="2" ry="2" />
<text  x="232.42" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (25 samples, 0.42%)</title><rect x="337.3" y="1941" width="4.9" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="340.25" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1189" width="42.0" height="15.0" fill="rgb(208,22,41)" rx="2" ry="2" />
<text  x="56.92" y="1199.5" >[un..</text>
</g>
<g >
<title>folly::Function&lt;void  (12 samples, 0.20%)</title><rect x="902.5" y="1909" width="2.4" height="15.0" fill="rgb(220,137,50)" rx="2" ry="2" />
<text  x="905.52" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1797" width="42.0" height="15.0" fill="rgb(244,83,11)" rx="2" ry="2" />
<text  x="56.92" y="1807.5" >[un..</text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="574.9" y="1973" width="0.2" height="15.0" fill="rgb(208,26,37)" rx="2" ry="2" />
<text  x="577.87" y="1983.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (13 samples, 0.22%)</title><rect x="1063.0" y="1893" width="2.5" height="15.0" fill="rgb(227,60,32)" rx="2" ry="2" />
<text  x="1065.98" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1083.0" y="1733" width="0.2" height="15.0" fill="rgb(247,15,44)" rx="2" ry="2" />
<text  x="1085.96" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="163.5" y="2005" width="0.2" height="15.0" fill="rgb(238,77,33)" rx="2" ry="2" />
<text  x="166.53" y="2015.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="207.3" y="1861" width="0.2" height="15.0" fill="rgb(211,86,50)" rx="2" ry="2" />
<text  x="210.26" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="828.3" y="2005" width="0.2" height="15.0" fill="rgb(247,83,4)" rx="2" ry="2" />
<text  x="831.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="494.7" y="1973" width="0.4" height="15.0" fill="rgb(219,105,13)" rx="2" ry="2" />
<text  x="497.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (4 samples, 0.07%)</title><rect x="596.8" y="2005" width="0.8" height="15.0" fill="rgb(228,127,46)" rx="2" ry="2" />
<text  x="599.83" y="2015.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (3 samples, 0.05%)</title><rect x="52.7" y="2005" width="0.6" height="15.0" fill="rgb(220,196,27)" rx="2" ry="2" />
<text  x="55.74" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="786.8" y="2005" width="0.2" height="15.0" fill="rgb(231,17,51)" rx="2" ry="2" />
<text  x="789.77" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="924.1" y="1909" width="0.4" height="15.0" fill="rgb(248,217,48)" rx="2" ry="2" />
<text  x="927.08" y="1919.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="743.2" y="1861" width="0.2" height="15.0" fill="rgb(241,174,17)" rx="2" ry="2" />
<text  x="746.25" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="641.9" y="1877" width="0.2" height="15.0" fill="rgb(213,12,16)" rx="2" ry="2" />
<text  x="644.95" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="894.4" y="1957" width="0.8" height="15.0" fill="rgb(226,199,3)" rx="2" ry="2" />
<text  x="897.41" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="353.1" y="1973" width="0.8" height="15.0" fill="rgb(222,10,16)" rx="2" ry="2" />
<text  x="356.08" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (21 samples, 0.35%)</title><rect x="510.8" y="1989" width="4.1" height="15.0" fill="rgb(212,119,18)" rx="2" ry="2" />
<text  x="513.77" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (7 samples, 0.12%)</title><rect x="340.2" y="1845" width="1.4" height="15.0" fill="rgb(252,3,28)" rx="2" ry="2" />
<text  x="343.22" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="483.9" y="2037" width="0.2" height="15.0" fill="rgb(244,65,50)" rx="2" ry="2" />
<text  x="486.86" y="2047.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="215.6" y="1893" width="0.2" height="15.0" fill="rgb(252,181,21)" rx="2" ry="2" />
<text  x="218.57" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="788.0" y="2005" width="0.2" height="15.0" fill="rgb(220,94,42)" rx="2" ry="2" />
<text  x="790.96" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (980 samples, 16.43%)</title><rect x="616.6" y="2037" width="193.9" height="15.0" fill="rgb(238,63,4)" rx="2" ry="2" />
<text  x="619.62" y="2047.5" >facebook::memcache::thrif..</text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="95.5" y="37" width="0.2" height="15.0" fill="rgb(233,49,21)" rx="2" ry="2" />
<text  x="98.47" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="1170.4" y="2053" width="0.4" height="15.0" fill="rgb(219,44,44)" rx="2" ry="2" />
<text  x="1173.41" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1142.5" y="2005" width="0.4" height="15.0" fill="rgb(214,93,3)" rx="2" ry="2" />
<text  x="1145.52" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (11 samples, 0.18%)</title><rect x="1106.5" y="2037" width="2.2" height="15.0" fill="rgb(229,10,37)" rx="2" ry="2" />
<text  x="1109.51" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (28 samples, 0.47%)</title><rect x="418.2" y="2005" width="5.5" height="15.0" fill="rgb(227,189,2)" rx="2" ry="2" />
<text  x="421.17" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (3 samples, 0.05%)</title><rect x="569.1" y="2037" width="0.6" height="15.0" fill="rgb(238,93,52)" rx="2" ry="2" />
<text  x="572.13" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="166.9" y="1989" width="0.2" height="15.0" fill="rgb(233,91,44)" rx="2" ry="2" />
<text  x="169.90" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="641.2" y="1957" width="0.9" height="15.0" fill="rgb(231,117,0)" rx="2" ry="2" />
<text  x="644.15" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="561.6" y="1989" width="0.4" height="15.0" fill="rgb(221,174,35)" rx="2" ry="2" />
<text  x="564.62" y="1999.5" ></text>
</g>
<g >
<title>tcp_poll (11 samples, 0.18%)</title><rect x="275.1" y="1893" width="2.2" height="15.0" fill="rgb(216,190,0)" rx="2" ry="2" />
<text  x="278.12" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (980 samples, 16.43%)</title><rect x="616.6" y="2021" width="193.9" height="15.0" fill="rgb(252,205,14)" rx="2" ry="2" />
<text  x="619.62" y="2031.5" >[unknown]</text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (22 samples, 0.37%)</title><rect x="520.9" y="1989" width="4.3" height="15.0" fill="rgb(229,153,24)" rx="2" ry="2" />
<text  x="523.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (10 samples, 0.17%)</title><rect x="588.9" y="1989" width="2.0" height="15.0" fill="rgb(210,60,50)" rx="2" ry="2" />
<text  x="591.92" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="92.7" y="53" width="0.2" height="15.0" fill="rgb(253,53,37)" rx="2" ry="2" />
<text  x="95.70" y="63.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (23 samples, 0.39%)</title><rect x="175.2" y="1989" width="4.6" height="15.0" fill="rgb(207,29,5)" rx="2" ry="2" />
<text  x="178.21" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="283.4" y="1989" width="0.4" height="15.0" fill="rgb(240,134,26)" rx="2" ry="2" />
<text  x="286.43" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="341" width="42.0" height="15.0" fill="rgb(222,21,32)" rx="2" ry="2" />
<text  x="56.92" y="351.5" >[un..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1733" width="42.0" height="15.0" fill="rgb(229,198,43)" rx="2" ry="2" />
<text  x="56.92" y="1743.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="279.5" y="2037" width="0.2" height="15.0" fill="rgb(252,166,45)" rx="2" ry="2" />
<text  x="282.48" y="2047.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (15 samples, 0.25%)</title><rect x="49.8" y="2021" width="2.9" height="15.0" fill="rgb(251,134,11)" rx="2" ry="2" />
<text  x="52.77" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (11 samples, 0.18%)</title><rect x="305.0" y="1957" width="2.2" height="15.0" fill="rgb(216,151,8)" rx="2" ry="2" />
<text  x="308.00" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (2 samples, 0.03%)</title><rect x="872.6" y="1957" width="0.4" height="15.0" fill="rgb(229,40,52)" rx="2" ry="2" />
<text  x="875.64" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="558.1" y="1909" width="0.5" height="15.0" fill="rgb(234,46,33)" rx="2" ry="2" />
<text  x="561.05" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (59 samples, 0.99%)</title><rect x="815.3" y="2005" width="11.6" height="15.0" fill="rgb(250,59,13)" rx="2" ry="2" />
<text  x="818.26" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (12 samples, 0.20%)</title><rect x="310.9" y="1957" width="2.4" height="15.0" fill="rgb(246,228,49)" rx="2" ry="2" />
<text  x="313.94" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (11 samples, 0.18%)</title><rect x="770.5" y="2005" width="2.2" height="15.0" fill="rgb(252,47,14)" rx="2" ry="2" />
<text  x="773.55" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="811.3" y="1909" width="0.2" height="15.0" fill="rgb(250,13,50)" rx="2" ry="2" />
<text  x="814.31" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="197" width="42.0" height="15.0" fill="rgb(236,178,11)" rx="2" ry="2" />
<text  x="56.92" y="207.5" >[un..</text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="11.4" y="2005" width="1.0" height="15.0" fill="rgb(223,113,0)" rx="2" ry="2" />
<text  x="14.38" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="273.1" y="2037" width="0.2" height="15.0" fill="rgb(217,166,44)" rx="2" ry="2" />
<text  x="276.15" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="1023.6" y="1797" width="0.4" height="15.0" fill="rgb(233,79,48)" rx="2" ry="2" />
<text  x="1026.60" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (14 samples, 0.23%)</title><rect x="767.8" y="1989" width="2.7" height="15.0" fill="rgb(239,195,53)" rx="2" ry="2" />
<text  x="770.78" y="1999.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (13 samples, 0.22%)</title><rect x="264.6" y="1925" width="2.6" height="15.0" fill="rgb(218,84,22)" rx="2" ry="2" />
<text  x="267.64" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="604.9" y="2037" width="0.4" height="15.0" fill="rgb(244,11,2)" rx="2" ry="2" />
<text  x="607.95" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="20.9" y="1957" width="0.6" height="15.0" fill="rgb(218,183,19)" rx="2" ry="2" />
<text  x="23.88" y="1967.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="1005.2" y="1861" width="0.8" height="15.0" fill="rgb(253,221,12)" rx="2" ry="2" />
<text  x="1008.20" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="57.7" y="37" width="0.2" height="15.0" fill="rgb(253,141,30)" rx="2" ry="2" />
<text  x="60.68" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="510.6" y="1989" width="0.2" height="15.0" fill="rgb(216,117,39)" rx="2" ry="2" />
<text  x="513.57" y="1999.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1071.3" y="1877" width="0.2" height="15.0" fill="rgb(217,42,14)" rx="2" ry="2" />
<text  x="1074.29" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="520.7" y="1989" width="0.2" height="15.0" fill="rgb(209,111,31)" rx="2" ry="2" />
<text  x="523.66" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="842.0" y="2037" width="0.2" height="15.0" fill="rgb(253,133,5)" rx="2" ry="2" />
<text  x="844.98" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (27 samples, 0.45%)</title><rect x="20.1" y="2021" width="5.3" height="15.0" fill="rgb(230,173,19)" rx="2" ry="2" />
<text  x="23.09" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="811.3" y="1893" width="0.2" height="15.0" fill="rgb(253,219,16)" rx="2" ry="2" />
<text  x="814.31" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (28 samples, 0.47%)</title><rect x="460.1" y="1989" width="5.6" height="15.0" fill="rgb(231,127,25)" rx="2" ry="2" />
<text  x="463.12" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="414.2" y="2005" width="3.6" height="15.0" fill="rgb(249,85,17)" rx="2" ry="2" />
<text  x="417.22" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (10 samples, 0.17%)</title><rect x="1145.5" y="2021" width="2.0" height="15.0" fill="rgb(211,79,0)" rx="2" ry="2" />
<text  x="1148.48" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (5 samples, 0.08%)</title><rect x="569.7" y="2037" width="1.0" height="15.0" fill="rgb(240,229,7)" rx="2" ry="2" />
<text  x="572.73" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="299.3" y="1957" width="0.8" height="15.0" fill="rgb(253,96,26)" rx="2" ry="2" />
<text  x="302.26" y="1967.5" ></text>
</g>
<g >
<title>__skb_clone (5 samples, 0.08%)</title><rect x="256.9" y="1797" width="1.0" height="15.0" fill="rgb(213,182,43)" rx="2" ry="2" />
<text  x="259.92" y="1807.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1024.2" y="1781" width="0.2" height="15.0" fill="rgb(211,135,12)" rx="2" ry="2" />
<text  x="1027.20" y="1791.5" ></text>
</g>
<g >
<title>__libc_recv (581 samples, 9.74%)</title><rect x="980.7" y="2053" width="114.9" height="15.0" fill="rgb(239,4,32)" rx="2" ry="2" />
<text  x="983.67" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="481.3" y="2005" width="0.4" height="15.0" fill="rgb(224,127,49)" rx="2" ry="2" />
<text  x="484.29" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="234.6" y="1781" width="0.2" height="15.0" fill="rgb(205,112,30)" rx="2" ry="2" />
<text  x="237.56" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="553.5" y="2021" width="0.4" height="15.0" fill="rgb(206,85,51)" rx="2" ry="2" />
<text  x="556.50" y="2031.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="11.4" y="1989" width="1.0" height="15.0" fill="rgb(210,223,27)" rx="2" ry="2" />
<text  x="14.38" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="87.2" y="53" width="0.2" height="15.0" fill="rgb(209,135,30)" rx="2" ry="2" />
<text  x="90.16" y="63.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="725" width="42.0" height="15.0" fill="rgb(237,85,5)" rx="2" ry="2" />
<text  x="56.92" y="735.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="171.3" y="1941" width="0.1" height="15.0" fill="rgb(211,219,27)" rx="2" ry="2" />
<text  x="174.25" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (8 samples, 0.13%)</title><rect x="170.9" y="1989" width="1.5" height="15.0" fill="rgb(250,84,13)" rx="2" ry="2" />
<text  x="173.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (20 samples, 0.34%)</title><rect x="601.0" y="2037" width="3.9" height="15.0" fill="rgb(235,149,31)" rx="2" ry="2" />
<text  x="603.99" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="170.9" y="1973" width="0.5" height="15.0" fill="rgb(215,57,4)" rx="2" ry="2" />
<text  x="173.86" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (20 samples, 0.34%)</title><rect x="12.4" y="1845" width="3.9" height="15.0" fill="rgb(224,74,31)" rx="2" ry="2" />
<text  x="15.37" y="1855.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="909.4" y="1813" width="0.2" height="15.0" fill="rgb(249,180,3)" rx="2" ry="2" />
<text  x="912.44" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="171.4" y="1973" width="1.0" height="15.0" fill="rgb(253,97,6)" rx="2" ry="2" />
<text  x="174.45" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="569.1" y="2005" width="0.4" height="15.0" fill="rgb(209,87,16)" rx="2" ry="2" />
<text  x="572.13" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="615.4" y="2005" width="0.2" height="15.0" fill="rgb(233,72,30)" rx="2" ry="2" />
<text  x="618.43" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="440.5" y="1941" width="0.2" height="15.0" fill="rgb(219,169,22)" rx="2" ry="2" />
<text  x="443.53" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="796.9" y="1973" width="0.8" height="15.0" fill="rgb(216,174,31)" rx="2" ry="2" />
<text  x="799.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="335.5" y="1989" width="7.9" height="15.0" fill="rgb(223,99,14)" rx="2" ry="2" />
<text  x="338.47" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="85.0" y="37" width="0.2" height="15.0" fill="rgb(212,182,0)" rx="2" ry="2" />
<text  x="87.99" y="47.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="261.7" y="1861" width="0.2" height="15.0" fill="rgb(252,15,4)" rx="2" ry="2" />
<text  x="264.67" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1909" width="42.0" height="15.0" fill="rgb(254,157,46)" rx="2" ry="2" />
<text  x="56.92" y="1919.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="614.2" y="2005" width="1.2" height="15.0" fill="rgb(229,93,52)" rx="2" ry="2" />
<text  x="617.25" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (23 samples, 0.39%)</title><rect x="175.2" y="2021" width="4.6" height="15.0" fill="rgb(217,190,28)" rx="2" ry="2" />
<text  x="178.21" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="23.8" y="1893" width="0.2" height="15.0" fill="rgb(215,52,45)" rx="2" ry="2" />
<text  x="26.85" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="151.9" y="1973" width="0.8" height="15.0" fill="rgb(244,221,11)" rx="2" ry="2" />
<text  x="154.86" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="591.9" y="1973" width="0.4" height="15.0" fill="rgb(212,84,8)" rx="2" ry="2" />
<text  x="594.89" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (211 samples, 3.54%)</title><rect x="53.9" y="149" width="41.8" height="15.0" fill="rgb(244,83,9)" rx="2" ry="2" />
<text  x="56.92" y="159.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="555.5" y="1989" width="0.4" height="15.0" fill="rgb(245,182,26)" rx="2" ry="2" />
<text  x="558.48" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (50 samples, 0.84%)</title><rect x="1147.9" y="2053" width="9.8" height="15.0" fill="rgb(205,172,31)" rx="2" ry="2" />
<text  x="1150.86" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="709" width="42.0" height="15.0" fill="rgb(249,95,19)" rx="2" ry="2" />
<text  x="56.92" y="719.5" >[un..</text>
</g>
<g >
<title>ip_local_out (43 samples, 0.72%)</title><rect x="1075.0" y="1845" width="8.6" height="15.0" fill="rgb(207,124,37)" rx="2" ry="2" />
<text  x="1078.05" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="617.4" y="2005" width="2.2" height="15.0" fill="rgb(241,73,40)" rx="2" ry="2" />
<text  x="620.41" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (7 samples, 0.12%)</title><rect x="93.7" y="53" width="1.4" height="15.0" fill="rgb(252,191,54)" rx="2" ry="2" />
<text  x="96.69" y="63.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="979.3" y="2037" width="0.2" height="15.0" fill="rgb(219,197,30)" rx="2" ry="2" />
<text  x="982.29" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="323.0" y="1909" width="0.4" height="15.0" fill="rgb(235,172,41)" rx="2" ry="2" />
<text  x="326.00" y="1919.5" ></text>
</g>
<g >
<title>jump_fcontext (5 samples, 0.08%)</title><rect x="920.7" y="1893" width="1.0" height="15.0" fill="rgb(242,96,20)" rx="2" ry="2" />
<text  x="923.72" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.3" y="1861" width="0.2" height="15.0" fill="rgb(205,120,21)" rx="2" ry="2" />
<text  x="225.30" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (6 samples, 0.10%)</title><rect x="290.2" y="1941" width="1.1" height="15.0" fill="rgb(218,97,52)" rx="2" ry="2" />
<text  x="293.16" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="1083.2" y="1717" width="0.2" height="15.0" fill="rgb(239,99,20)" rx="2" ry="2" />
<text  x="1086.16" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (24 samples, 0.40%)</title><rect x="376.8" y="2005" width="4.8" height="15.0" fill="rgb(207,13,10)" rx="2" ry="2" />
<text  x="379.82" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="827.1" y="1973" width="0.4" height="15.0" fill="rgb(227,156,1)" rx="2" ry="2" />
<text  x="830.14" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (31 samples, 0.52%)</title><rect x="344.6" y="2037" width="6.1" height="15.0" fill="rgb(232,97,53)" rx="2" ry="2" />
<text  x="347.57" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (6 samples, 0.10%)</title><rect x="425.1" y="1989" width="1.2" height="15.0" fill="rgb(214,92,9)" rx="2" ry="2" />
<text  x="428.10" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1061" width="42.0" height="15.0" fill="rgb(236,103,1)" rx="2" ry="2" />
<text  x="56.92" y="1071.5" >[un..</text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1006.2" y="1813" width="0.2" height="15.0" fill="rgb(250,173,50)" rx="2" ry="2" />
<text  x="1009.19" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1461" width="42.0" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="56.92" y="1471.5" >[un..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="299.9" y="1909" width="0.2" height="15.0" fill="rgb(253,183,15)" rx="2" ry="2" />
<text  x="302.86" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="551.9" y="1973" width="0.4" height="15.0" fill="rgb(230,200,42)" rx="2" ry="2" />
<text  x="554.92" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="613" width="42.0" height="15.0" fill="rgb(219,67,43)" rx="2" ry="2" />
<text  x="56.92" y="623.5" >[un..</text>
</g>
<g >
<title>__fget (10 samples, 0.17%)</title><rect x="267.2" y="1909" width="2.0" height="15.0" fill="rgb(241,81,54)" rx="2" ry="2" />
<text  x="270.21" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="814.7" y="1925" width="0.2" height="15.0" fill="rgb(233,193,18)" rx="2" ry="2" />
<text  x="817.67" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="95.5" y="69" width="0.2" height="15.0" fill="rgb(226,213,40)" rx="2" ry="2" />
<text  x="98.47" y="79.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="190.6" y="2021" width="0.2" height="15.0" fill="rgb(233,44,1)" rx="2" ry="2" />
<text  x="193.64" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="550.1" y="1877" width="0.2" height="15.0" fill="rgb(248,193,39)" rx="2" ry="2" />
<text  x="553.14" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.32%)</title><rect x="110.9" y="1973" width="3.8" height="15.0" fill="rgb(238,56,11)" rx="2" ry="2" />
<text  x="113.91" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="477.5" y="2021" width="0.2" height="15.0" fill="rgb(224,31,35)" rx="2" ry="2" />
<text  x="480.53" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (2 samples, 0.03%)</title><rect x="838.2" y="2037" width="0.4" height="15.0" fill="rgb(218,37,28)" rx="2" ry="2" />
<text  x="841.22" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="179.4" y="1957" width="0.2" height="15.0" fill="rgb(250,114,20)" rx="2" ry="2" />
<text  x="182.36" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="146.1" y="1941" width="0.4" height="15.0" fill="rgb(215,178,51)" rx="2" ry="2" />
<text  x="149.12" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="89.5" y="53" width="0.6" height="15.0" fill="rgb(226,111,30)" rx="2" ry="2" />
<text  x="92.54" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="150.9" y="1989" width="2.0" height="15.0" fill="rgb(235,133,16)" rx="2" ry="2" />
<text  x="153.87" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.18%)</title><rect x="692.2" y="1957" width="2.2" height="15.0" fill="rgb(212,227,4)" rx="2" ry="2" />
<text  x="695.20" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (11 samples, 0.18%)</title><rect x="361.4" y="2037" width="2.2" height="15.0" fill="rgb(244,101,49)" rx="2" ry="2" />
<text  x="364.39" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="814.9" y="1893" width="0.2" height="15.0" fill="rgb(253,76,0)" rx="2" ry="2" />
<text  x="817.87" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1073.3" y="1813" width="0.2" height="15.0" fill="rgb(218,50,45)" rx="2" ry="2" />
<text  x="1076.27" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (12 samples, 0.20%)</title><rect x="70.3" y="37" width="2.4" height="15.0" fill="rgb(252,88,49)" rx="2" ry="2" />
<text  x="73.35" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (32 samples, 0.54%)</title><rect x="353.9" y="2005" width="6.3" height="15.0" fill="rgb(232,41,50)" rx="2" ry="2" />
<text  x="356.87" y="2015.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="444.5" y="1765" width="0.8" height="15.0" fill="rgb(245,134,6)" rx="2" ry="2" />
<text  x="447.49" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="547.8" y="1909" width="0.2" height="15.0" fill="rgb(253,18,43)" rx="2" ry="2" />
<text  x="550.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (365 samples, 6.12%)</title><rect x="698.3" y="2005" width="72.2" height="15.0" fill="rgb(251,123,25)" rx="2" ry="2" />
<text  x="701.33" y="2015.5" >facebook..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1557" width="42.0" height="15.0" fill="rgb(225,166,13)" rx="2" ry="2" />
<text  x="56.92" y="1567.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (218 samples, 3.66%)</title><rect x="645.1" y="1941" width="43.1" height="15.0" fill="rgb(235,67,22)" rx="2" ry="2" />
<text  x="648.11" y="1951.5" >foll..</text>
</g>
<g >
<title>folly::MicroSpinLock::lock (5 samples, 0.08%)</title><rect x="1174.2" y="2053" width="1.0" height="15.0" fill="rgb(250,106,30)" rx="2" ry="2" />
<text  x="1177.17" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="222.3" y="1813" width="0.2" height="15.0" fill="rgb(236,85,8)" rx="2" ry="2" />
<text  x="225.30" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="1189.4" y="2053" width="0.4" height="15.0" fill="rgb(241,191,12)" rx="2" ry="2" />
<text  x="1192.41" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (5 samples, 0.08%)</title><rect x="153.6" y="1989" width="1.0" height="15.0" fill="rgb(243,184,16)" rx="2" ry="2" />
<text  x="156.64" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1077" width="42.0" height="15.0" fill="rgb(249,48,48)" rx="2" ry="2" />
<text  x="56.92" y="1087.5" >[un..</text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="297.1" y="1973" width="0.2" height="15.0" fill="rgb(230,20,27)" rx="2" ry="2" />
<text  x="300.09" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="229" width="42.0" height="15.0" fill="rgb(233,26,22)" rx="2" ry="2" />
<text  x="56.92" y="239.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="929.6" y="1973" width="0.4" height="15.0" fill="rgb(254,229,4)" rx="2" ry="2" />
<text  x="932.62" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="153.8" y="1973" width="0.6" height="15.0" fill="rgb(217,180,47)" rx="2" ry="2" />
<text  x="156.84" y="1983.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="342.0" y="1877" width="0.2" height="15.0" fill="rgb(229,6,53)" rx="2" ry="2" />
<text  x="345.00" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="302.8" y="1973" width="0.2" height="15.0" fill="rgb(244,76,8)" rx="2" ry="2" />
<text  x="305.82" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="160.0" y="2005" width="0.4" height="15.0" fill="rgb(215,84,48)" rx="2" ry="2" />
<text  x="162.97" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (4 samples, 0.07%)</title><rect x="550.7" y="1941" width="0.8" height="15.0" fill="rgb(210,204,44)" rx="2" ry="2" />
<text  x="553.73" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="639.6" y="1925" width="0.8" height="15.0" fill="rgb(235,53,24)" rx="2" ry="2" />
<text  x="642.57" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="322.0" y="1941" width="0.4" height="15.0" fill="rgb(241,161,32)" rx="2" ry="2" />
<text  x="325.02" y="1951.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1083.6" y="1845" width="0.4" height="15.0" fill="rgb(212,93,22)" rx="2" ry="2" />
<text  x="1086.55" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (6 samples, 0.10%)</title><rect x="156.0" y="1973" width="1.2" height="15.0" fill="rgb(207,141,33)" rx="2" ry="2" />
<text  x="159.02" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="551.1" y="1909" width="0.2" height="15.0" fill="rgb(216,116,19)" rx="2" ry="2" />
<text  x="554.13" y="1919.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(244,93,24)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (21 samples, 0.35%)</title><rect x="175.4" y="1973" width="4.2" height="15.0" fill="rgb(230,100,29)" rx="2" ry="2" />
<text  x="178.41" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="570.7" y="1989" width="4.4" height="15.0" fill="rgb(241,157,9)" rx="2" ry="2" />
<text  x="573.72" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="349.9" y="2005" width="0.2" height="15.0" fill="rgb(245,225,28)" rx="2" ry="2" />
<text  x="352.91" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (9 samples, 0.15%)</title><rect x="258.7" y="1813" width="1.8" height="15.0" fill="rgb(225,45,36)" rx="2" ry="2" />
<text  x="261.70" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (104 samples, 1.74%)</title><rect x="435.0" y="1973" width="20.6" height="15.0" fill="rgb(240,134,15)" rx="2" ry="2" />
<text  x="437.99" y="1983.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="1084.9" y="1861" width="0.2" height="15.0" fill="rgb(249,203,24)" rx="2" ry="2" />
<text  x="1087.94" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="827.5" y="2005" width="0.4" height="15.0" fill="rgb(216,18,13)" rx="2" ry="2" />
<text  x="830.53" y="2015.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1108.5" y="1957" width="0.2" height="15.0" fill="rgb(217,56,54)" rx="2" ry="2" />
<text  x="1111.48" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="689.4" y="1909" width="0.2" height="15.0" fill="rgb(226,33,8)" rx="2" ry="2" />
<text  x="692.43" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13 samples, 0.22%)</title><rect x="890.4" y="1941" width="2.6" height="15.0" fill="rgb(227,165,40)" rx="2" ry="2" />
<text  x="893.45" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (10 samples, 0.17%)</title><rect x="503.6" y="1957" width="2.0" height="15.0" fill="rgb(214,85,13)" rx="2" ry="2" />
<text  x="506.65" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(242,67,3)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="451.2" y="1925" width="2.0" height="15.0" fill="rgb(211,224,53)" rx="2" ry="2" />
<text  x="454.21" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (4 samples, 0.07%)</title><rect x="604.2" y="2005" width="0.7" height="15.0" fill="rgb(233,8,33)" rx="2" ry="2" />
<text  x="607.15" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="92.1" y="53" width="0.6" height="15.0" fill="rgb(212,34,29)" rx="2" ry="2" />
<text  x="95.11" y="63.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="927.3" y="1989" width="0.1" height="15.0" fill="rgb(214,182,50)" rx="2" ry="2" />
<text  x="930.25" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="565.2" y="1989" width="0.2" height="15.0" fill="rgb(216,9,44)" rx="2" ry="2" />
<text  x="568.18" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="813.5" y="2037" width="0.4" height="15.0" fill="rgb(224,35,32)" rx="2" ry="2" />
<text  x="816.48" y="2047.5" ></text>
</g>
<g >
<title>x86_pmu_enable (20 samples, 0.34%)</title><rect x="12.4" y="1877" width="3.9" height="15.0" fill="rgb(209,116,11)" rx="2" ry="2" />
<text  x="15.37" y="1887.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="909.4" y="1845" width="0.2" height="15.0" fill="rgb(246,171,4)" rx="2" ry="2" />
<text  x="912.44" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="856.6" y="2005" width="0.2" height="15.0" fill="rgb(236,98,15)" rx="2" ry="2" />
<text  x="859.62" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="815.1" y="1909" width="0.2" height="15.0" fill="rgb(240,156,25)" rx="2" ry="2" />
<text  x="818.07" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (5 samples, 0.08%)</title><rect x="317.5" y="1989" width="1.0" height="15.0" fill="rgb(222,27,49)" rx="2" ry="2" />
<text  x="320.46" y="1999.5" ></text>
</g>
<g >
<title>sock_rfree (4 samples, 0.07%)</title><rect x="1040.8" y="1877" width="0.8" height="15.0" fill="rgb(216,101,54)" rx="2" ry="2" />
<text  x="1043.82" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="84.2" y="37" width="0.4" height="15.0" fill="rgb(211,28,36)" rx="2" ry="2" />
<text  x="87.20" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="113.9" y="1925" width="0.6" height="15.0" fill="rgb(242,122,47)" rx="2" ry="2" />
<text  x="116.87" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1589" width="42.0" height="15.0" fill="rgb(223,159,26)" rx="2" ry="2" />
<text  x="56.92" y="1599.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1130.2" y="2005" width="0.2" height="15.0" fill="rgb(237,108,16)" rx="2" ry="2" />
<text  x="1133.25" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="814.5" y="1973" width="0.4" height="15.0" fill="rgb(244,82,16)" rx="2" ry="2" />
<text  x="817.47" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="92.7" y="69" width="0.2" height="15.0" fill="rgb(237,129,32)" rx="2" ry="2" />
<text  x="95.70" y="79.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (3 samples, 0.05%)</title><rect x="316.1" y="1957" width="0.6" height="15.0" fill="rgb(220,91,28)" rx="2" ry="2" />
<text  x="319.08" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="212.6" y="1893" width="0.2" height="15.0" fill="rgb(227,1,36)" rx="2" ry="2" />
<text  x="215.60" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (24 samples, 0.40%)</title><rect x="904.9" y="1909" width="4.7" height="15.0" fill="rgb(247,121,7)" rx="2" ry="2" />
<text  x="907.89" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="605.9" y="2005" width="1.4" height="15.0" fill="rgb(215,138,41)" rx="2" ry="2" />
<text  x="608.94" y="2015.5" ></text>
</g>
<g >
<title>ghes_read_estatus (1 samples, 0.02%)</title><rect x="10.2" y="1829" width="0.2" height="15.0" fill="rgb(216,12,4)" rx="2" ry="2" />
<text  x="13.20" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="551.7" y="1909" width="0.2" height="15.0" fill="rgb(226,116,5)" rx="2" ry="2" />
<text  x="554.72" y="1919.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (9 samples, 0.15%)</title><rect x="313.3" y="1973" width="1.8" height="15.0" fill="rgb(241,115,40)" rx="2" ry="2" />
<text  x="316.31" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="549.9" y="1893" width="0.4" height="15.0" fill="rgb(221,87,24)" rx="2" ry="2" />
<text  x="552.94" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.5" y="101" width="0.2" height="15.0" fill="rgb(211,124,32)" rx="2" ry="2" />
<text  x="98.47" y="111.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="182.3" y="2021" width="0.2" height="15.0" fill="rgb(243,217,38)" rx="2" ry="2" />
<text  x="185.33" y="2031.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="1090.3" y="1893" width="0.6" height="15.0" fill="rgb(254,157,48)" rx="2" ry="2" />
<text  x="1093.28" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="444.5" y="1749" width="0.8" height="15.0" fill="rgb(239,109,32)" rx="2" ry="2" />
<text  x="447.49" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="172.4" y="1973" width="0.8" height="15.0" fill="rgb(218,223,54)" rx="2" ry="2" />
<text  x="175.44" y="1983.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="360.6" y="2005" width="0.2" height="15.0" fill="rgb(213,133,6)" rx="2" ry="2" />
<text  x="363.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (231 samples, 3.87%)</title><rect x="425.1" y="2005" width="45.7" height="15.0" fill="rgb(224,124,54)" rx="2" ry="2" />
<text  x="428.10" y="2015.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="93.1" y="53" width="0.6" height="15.0" fill="rgb(210,11,48)" rx="2" ry="2" />
<text  x="96.10" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="641.9" y="1893" width="0.2" height="15.0" fill="rgb(228,38,36)" rx="2" ry="2" />
<text  x="644.95" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="182.1" y="2021" width="0.2" height="15.0" fill="rgb(234,134,30)" rx="2" ry="2" />
<text  x="185.13" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (32 samples, 0.54%)</title><rect x="1077.0" y="1781" width="6.4" height="15.0" fill="rgb(236,186,32)" rx="2" ry="2" />
<text  x="1080.03" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="564.2" y="2005" width="0.8" height="15.0" fill="rgb(215,107,13)" rx="2" ry="2" />
<text  x="567.19" y="2015.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="157.2" y="1973" width="0.4" height="15.0" fill="rgb(235,29,51)" rx="2" ry="2" />
<text  x="160.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="1086.5" y="1877" width="0.4" height="15.0" fill="rgb(213,14,47)" rx="2" ry="2" />
<text  x="1089.52" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="169.3" y="1989" width="0.2" height="15.0" fill="rgb(238,47,25)" rx="2" ry="2" />
<text  x="172.27" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="598.6" y="2005" width="0.2" height="15.0" fill="rgb(237,152,28)" rx="2" ry="2" />
<text  x="601.62" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (15 samples, 0.25%)</title><rect x="143.7" y="1957" width="3.0" height="15.0" fill="rgb(220,130,16)" rx="2" ry="2" />
<text  x="146.75" y="1967.5" ></text>
</g>
<g >
<title>skb_free_head (83 samples, 1.39%)</title><rect x="1009.2" y="1877" width="16.4" height="15.0" fill="rgb(245,166,52)" rx="2" ry="2" />
<text  x="1012.16" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="1092.9" y="1941" width="0.7" height="15.0" fill="rgb(248,128,19)" rx="2" ry="2" />
<text  x="1095.85" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1175.6" y="2037" width="0.2" height="15.0" fill="rgb(225,201,35)" rx="2" ry="2" />
<text  x="1178.56" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.3" y="101" width="0.2" height="15.0" fill="rgb(206,144,30)" rx="2" ry="2" />
<text  x="98.27" y="111.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="23.8" y="1957" width="0.2" height="15.0" fill="rgb(211,79,26)" rx="2" ry="2" />
<text  x="26.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1413" width="42.0" height="15.0" fill="rgb(240,118,16)" rx="2" ry="2" />
<text  x="56.92" y="1423.5" >[un..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="115.1" y="1957" width="0.4" height="15.0" fill="rgb(217,130,28)" rx="2" ry="2" />
<text  x="118.06" y="1967.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1041.8" y="1925" width="0.2" height="15.0" fill="rgb(207,88,6)" rx="2" ry="2" />
<text  x="1044.81" y="1935.5" ></text>
</g>
<g >
<title>sys_sendmsg (312 samples, 5.23%)</title><rect x="207.5" y="1989" width="61.7" height="15.0" fill="rgb(241,34,20)" rx="2" ry="2" />
<text  x="210.46" y="1999.5" >sys_se..</text>
</g>
<g >
<title>dev_queue_xmit (26 samples, 0.44%)</title><rect x="251.8" y="1733" width="5.1" height="15.0" fill="rgb(213,184,17)" rx="2" ry="2" />
<text  x="254.78" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1429" width="42.0" height="15.0" fill="rgb(223,123,12)" rx="2" ry="2" />
<text  x="56.92" y="1439.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="591.1" y="1989" width="1.2" height="15.0" fill="rgb(212,166,28)" rx="2" ry="2" />
<text  x="594.10" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="267.2" y="1957" width="2.0" height="15.0" fill="rgb(219,39,30)" rx="2" ry="2" />
<text  x="270.21" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="814.5" y="2005" width="0.8" height="15.0" fill="rgb(218,45,27)" rx="2" ry="2" />
<text  x="817.47" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (4 samples, 0.07%)</title><rect x="290.6" y="1925" width="0.7" height="15.0" fill="rgb(239,107,42)" rx="2" ry="2" />
<text  x="293.56" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (81 samples, 1.36%)</title><rect x="625.1" y="1957" width="16.1" height="15.0" fill="rgb(216,160,33)" rx="2" ry="2" />
<text  x="628.13" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="875.4" y="1957" width="1.6" height="15.0" fill="rgb(212,138,14)" rx="2" ry="2" />
<text  x="878.41" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="357" width="42.0" height="15.0" fill="rgb(212,176,17)" rx="2" ry="2" />
<text  x="56.92" y="367.5" >[un..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="304.6" y="1877" width="0.2" height="15.0" fill="rgb(207,208,26)" rx="2" ry="2" />
<text  x="307.60" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1093" width="42.0" height="15.0" fill="rgb(205,29,51)" rx="2" ry="2" />
<text  x="56.92" y="1103.5" >[un..</text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="338.0" y="1893" width="0.2" height="15.0" fill="rgb(212,44,43)" rx="2" ry="2" />
<text  x="341.04" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="295.5" y="1957" width="0.4" height="15.0" fill="rgb(236,159,27)" rx="2" ry="2" />
<text  x="298.50" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="169.9" y="2005" width="0.2" height="15.0" fill="rgb(205,127,49)" rx="2" ry="2" />
<text  x="172.87" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="170.3" y="1989" width="0.2" height="15.0" fill="rgb(250,197,3)" rx="2" ry="2" />
<text  x="173.26" y="1999.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="248.4" y="1429" width="0.4" height="15.0" fill="rgb(205,112,33)" rx="2" ry="2" />
<text  x="251.41" y="1439.5" ></text>
</g>
<g >
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="1143.1" y="1925" width="0.2" height="15.0" fill="rgb(222,21,32)" rx="2" ry="2" />
<text  x="1146.11" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="549.7" y="1893" width="0.2" height="15.0" fill="rgb(231,164,37)" rx="2" ry="2" />
<text  x="552.75" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="777.7" y="2005" width="0.2" height="15.0" fill="rgb(232,127,23)" rx="2" ry="2" />
<text  x="780.67" y="2015.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (2 samples, 0.03%)</title><rect x="310.5" y="1957" width="0.4" height="15.0" fill="rgb(234,192,16)" rx="2" ry="2" />
<text  x="313.54" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1845" width="42.0" height="15.0" fill="rgb(237,169,12)" rx="2" ry="2" />
<text  x="56.92" y="1855.5" >[un..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="304.6" y="1925" width="0.2" height="15.0" fill="rgb(232,39,18)" rx="2" ry="2" />
<text  x="307.60" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="840.0" y="2037" width="0.2" height="15.0" fill="rgb(251,52,54)" rx="2" ry="2" />
<text  x="843.00" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (8 samples, 0.13%)</title><rect x="451.6" y="1909" width="1.6" height="15.0" fill="rgb(243,212,12)" rx="2" ry="2" />
<text  x="454.61" y="1919.5" ></text>
</g>
<g >
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="260.1" y="1749" width="0.4" height="15.0" fill="rgb(247,162,31)" rx="2" ry="2" />
<text  x="263.09" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="389" width="42.0" height="15.0" fill="rgb(229,61,36)" rx="2" ry="2" />
<text  x="56.92" y="399.5" >[un..</text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="535.3" y="1989" width="0.2" height="15.0" fill="rgb(216,84,30)" rx="2" ry="2" />
<text  x="538.30" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="825.9" y="1973" width="0.4" height="15.0" fill="rgb(241,218,23)" rx="2" ry="2" />
<text  x="828.95" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="525.2" y="1989" width="0.2" height="15.0" fill="rgb(253,201,41)" rx="2" ry="2" />
<text  x="528.21" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 0.10%)</title><rect x="330.1" y="1941" width="1.2" height="15.0" fill="rgb(231,117,6)" rx="2" ry="2" />
<text  x="333.13" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1157" width="42.0" height="15.0" fill="rgb(225,143,45)" rx="2" ry="2" />
<text  x="56.92" y="1167.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="638.2" y="1893" width="0.4" height="15.0" fill="rgb(244,214,37)" rx="2" ry="2" />
<text  x="641.19" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (9 samples, 0.15%)</title><rect x="549.7" y="1957" width="1.8" height="15.0" fill="rgb(221,227,47)" rx="2" ry="2" />
<text  x="552.75" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="294.5" y="1941" width="0.4" height="15.0" fill="rgb(217,156,54)" rx="2" ry="2" />
<text  x="297.51" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="569.5" y="2005" width="0.2" height="15.0" fill="rgb(233,109,6)" rx="2" ry="2" />
<text  x="572.53" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (349 samples, 5.85%)</title><rect x="862.0" y="2005" width="69.0" height="15.0" fill="rgb(245,161,19)" rx="2" ry="2" />
<text  x="864.96" y="2015.5" >folly::..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (8 samples, 0.13%)</title><rect x="811.9" y="2005" width="1.6" height="15.0" fill="rgb(240,65,22)" rx="2" ry="2" />
<text  x="814.90" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="163.1" y="2021" width="0.4" height="15.0" fill="rgb(209,60,27)" rx="2" ry="2" />
<text  x="166.14" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="463.5" y="1957" width="1.6" height="15.0" fill="rgb(205,156,43)" rx="2" ry="2" />
<text  x="466.48" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="145.5" y="1925" width="0.4" height="15.0" fill="rgb(232,99,18)" rx="2" ry="2" />
<text  x="148.53" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1131.6" y="1973" width="0.2" height="15.0" fill="rgb(209,77,4)" rx="2" ry="2" />
<text  x="1134.63" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="618.8" y="1973" width="0.6" height="15.0" fill="rgb(232,64,52)" rx="2" ry="2" />
<text  x="621.80" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (3 samples, 0.05%)</title><rect x="63.4" y="37" width="0.6" height="15.0" fill="rgb(229,129,2)" rx="2" ry="2" />
<text  x="66.42" y="47.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1046.2" y="1845" width="0.2" height="15.0" fill="rgb(247,47,27)" rx="2" ry="2" />
<text  x="1049.16" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="20.9" y="1973" width="0.8" height="15.0" fill="rgb(248,156,23)" rx="2" ry="2" />
<text  x="23.88" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="175.2" y="1941" width="0.2" height="15.0" fill="rgb(242,17,16)" rx="2" ry="2" />
<text  x="178.21" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="632.4" y="1909" width="0.6" height="15.0" fill="rgb(235,181,2)" rx="2" ry="2" />
<text  x="635.45" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (7 samples, 0.12%)</title><rect x="968.6" y="2037" width="1.4" height="15.0" fill="rgb(226,41,52)" rx="2" ry="2" />
<text  x="971.60" y="2047.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="212.8" y="1893" width="1.8" height="15.0" fill="rgb(206,181,35)" rx="2" ry="2" />
<text  x="215.80" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1157.7" y="2053" width="0.2" height="15.0" fill="rgb(252,105,52)" rx="2" ry="2" />
<text  x="1160.75" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="72.9" y="37" width="0.4" height="15.0" fill="rgb(252,168,18)" rx="2" ry="2" />
<text  x="75.92" y="47.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="342.6" y="1925" width="0.2" height="15.0" fill="rgb(252,176,15)" rx="2" ry="2" />
<text  x="345.59" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="341.4" y="1829" width="0.2" height="15.0" fill="rgb(205,64,40)" rx="2" ry="2" />
<text  x="344.41" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="605.7" y="2037" width="0.2" height="15.0" fill="rgb(205,17,31)" rx="2" ry="2" />
<text  x="608.74" y="2047.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="186.3" y="2021" width="0.2" height="15.0" fill="rgb(248,79,36)" rx="2" ry="2" />
<text  x="189.29" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="84.8" y="37" width="0.2" height="15.0" fill="rgb(208,37,47)" rx="2" ry="2" />
<text  x="87.79" y="47.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (9 samples, 0.15%)</title><rect x="288.4" y="1909" width="1.8" height="15.0" fill="rgb(216,87,0)" rx="2" ry="2" />
<text  x="291.38" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="814.3" y="1973" width="0.2" height="15.0" fill="rgb(220,74,48)" rx="2" ry="2" />
<text  x="817.28" y="1983.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="1082.8" y="1701" width="0.2" height="15.0" fill="rgb(217,56,45)" rx="2" ry="2" />
<text  x="1085.76" y="1711.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.02%)</title><rect x="12.6" y="1829" width="0.2" height="15.0" fill="rgb(254,213,23)" rx="2" ry="2" />
<text  x="15.57" y="1839.5" ></text>
</g>
<g >
<title>_copy_to_iter (15 samples, 0.25%)</title><rect x="1062.6" y="1909" width="2.9" height="15.0" fill="rgb(230,120,28)" rx="2" ry="2" />
<text  x="1065.58" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (2 samples, 0.03%)</title><rect x="896.0" y="1925" width="0.4" height="15.0" fill="rgb(218,128,53)" rx="2" ry="2" />
<text  x="898.99" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="354.7" y="1957" width="1.0" height="15.0" fill="rgb(218,23,37)" rx="2" ry="2" />
<text  x="357.66" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="273.9" y="1909" width="0.2" height="15.0" fill="rgb(209,223,6)" rx="2" ry="2" />
<text  x="276.94" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="172.2" y="1925" width="0.2" height="15.0" fill="rgb(239,119,42)" rx="2" ry="2" />
<text  x="175.24" y="1935.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1006.8" y="1893" width="0.2" height="15.0" fill="rgb(228,92,42)" rx="2" ry="2" />
<text  x="1009.79" y="1903.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="218.7" y="1861" width="0.4" height="15.0" fill="rgb(214,165,51)" rx="2" ry="2" />
<text  x="221.74" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="692.0" y="1973" width="0.2" height="15.0" fill="rgb(213,138,3)" rx="2" ry="2" />
<text  x="695.00" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="164.5" y="1941" width="0.2" height="15.0" fill="rgb(213,96,14)" rx="2" ry="2" />
<text  x="167.52" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1009.4" y="1861" width="0.2" height="15.0" fill="rgb(230,55,21)" rx="2" ry="2" />
<text  x="1012.36" y="1871.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="207.3" y="1845" width="0.2" height="15.0" fill="rgb(245,63,39)" rx="2" ry="2" />
<text  x="210.26" y="1855.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="222.3" y="1765" width="0.2" height="15.0" fill="rgb(242,63,8)" rx="2" ry="2" />
<text  x="225.30" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1108.3" y="2005" width="0.2" height="15.0" fill="rgb(231,212,16)" rx="2" ry="2" />
<text  x="1111.29" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (36 samples, 0.60%)</title><rect x="1076.2" y="1797" width="7.2" height="15.0" fill="rgb(224,124,28)" rx="2" ry="2" />
<text  x="1079.23" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (11 samples, 0.18%)</title><rect x="633.4" y="1925" width="2.2" height="15.0" fill="rgb(226,87,6)" rx="2" ry="2" />
<text  x="636.44" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="772.7" y="2005" width="0.2" height="15.0" fill="rgb(221,21,36)" rx="2" ry="2" />
<text  x="775.73" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (32 samples, 0.54%)</title><rect x="109.7" y="1989" width="6.3" height="15.0" fill="rgb(229,122,51)" rx="2" ry="2" />
<text  x="112.72" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="831.1" y="1973" width="0.4" height="15.0" fill="rgb(225,76,12)" rx="2" ry="2" />
<text  x="834.09" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="814.9" y="1861" width="0.2" height="15.0" fill="rgb(233,175,24)" rx="2" ry="2" />
<text  x="817.87" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="149" width="0.2" height="15.0" fill="rgb(209,40,17)" rx="2" ry="2" />
<text  x="98.67" y="159.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="92.5" y="37" width="0.2" height="15.0" fill="rgb(219,114,22)" rx="2" ry="2" />
<text  x="95.51" y="47.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="811.3" y="1829" width="0.2" height="15.0" fill="rgb(222,47,16)" rx="2" ry="2" />
<text  x="814.31" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="84.6" y="37" width="0.2" height="15.0" fill="rgb(217,111,0)" rx="2" ry="2" />
<text  x="87.59" y="47.5" ></text>
</g>
<g >
<title>skb_entail (2 samples, 0.03%)</title><rect x="230.4" y="1877" width="0.4" height="15.0" fill="rgb(227,103,32)" rx="2" ry="2" />
<text  x="233.41" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="169.3" y="1973" width="0.2" height="15.0" fill="rgb(214,189,0)" rx="2" ry="2" />
<text  x="172.27" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (13 samples, 0.22%)</title><rect x="479.5" y="2021" width="2.6" height="15.0" fill="rgb(237,198,38)" rx="2" ry="2" />
<text  x="482.51" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (141 samples, 2.36%)</title><rect x="122.0" y="1973" width="27.9" height="15.0" fill="rgb(245,85,37)" rx="2" ry="2" />
<text  x="124.99" y="1983.5" >f..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="110.5" y="1973" width="0.4" height="15.0" fill="rgb(211,28,30)" rx="2" ry="2" />
<text  x="113.51" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="319.2" y="1989" width="0.4" height="15.0" fill="rgb(220,201,32)" rx="2" ry="2" />
<text  x="322.25" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1147.5" y="2037" width="0.2" height="15.0" fill="rgb(222,19,51)" rx="2" ry="2" />
<text  x="1150.46" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="163.1" y="1989" width="0.2" height="15.0" fill="rgb(226,181,10)" rx="2" ry="2" />
<text  x="166.14" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (3 samples, 0.05%)</title><rect x="316.9" y="1989" width="0.6" height="15.0" fill="rgb(227,108,0)" rx="2" ry="2" />
<text  x="319.87" y="1999.5" ></text>
</g>
<g >
<title>__check_object_size (10 samples, 0.17%)</title><rect x="1060.6" y="1909" width="2.0" height="15.0" fill="rgb(236,214,21)" rx="2" ry="2" />
<text  x="1063.60" y="1919.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1073.5" y="1861" width="0.2" height="15.0" fill="rgb(248,127,21)" rx="2" ry="2" />
<text  x="1076.46" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="484.5" y="2021" width="0.2" height="15.0" fill="rgb(207,68,37)" rx="2" ry="2" />
<text  x="487.45" y="2031.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="839.4" y="2037" width="0.4" height="15.0" fill="rgb(213,47,12)" rx="2" ry="2" />
<text  x="842.40" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="335.3" y="2021" width="0.2" height="15.0" fill="rgb(223,101,32)" rx="2" ry="2" />
<text  x="338.27" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="91.9" y="37" width="0.2" height="15.0" fill="rgb(249,190,40)" rx="2" ry="2" />
<text  x="94.91" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="813.9" y="1989" width="0.6" height="15.0" fill="rgb(205,46,50)" rx="2" ry="2" />
<text  x="816.88" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="686.3" y="1893" width="0.2" height="15.0" fill="rgb(252,217,42)" rx="2" ry="2" />
<text  x="689.26" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="293" width="42.0" height="15.0" fill="rgb(236,207,10)" rx="2" ry="2" />
<text  x="56.92" y="303.5" >[un..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="21.5" y="1957" width="0.2" height="15.0" fill="rgb(222,129,37)" rx="2" ry="2" />
<text  x="24.48" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="300.1" y="1973" width="0.7" height="15.0" fill="rgb(211,112,49)" rx="2" ry="2" />
<text  x="303.05" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="1092.3" y="1925" width="0.6" height="15.0" fill="rgb(247,8,18)" rx="2" ry="2" />
<text  x="1095.26" y="1935.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="1093.1" y="1925" width="0.5" height="15.0" fill="rgb(251,40,13)" rx="2" ry="2" />
<text  x="1096.05" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (133 samples, 2.23%)</title><rect x="900.1" y="1957" width="26.4" height="15.0" fill="rgb(235,126,38)" rx="2" ry="2" />
<text  x="903.14" y="1967.5" >f..</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="811.3" y="1845" width="0.2" height="15.0" fill="rgb(213,69,36)" rx="2" ry="2" />
<text  x="814.31" y="1855.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="650.3" y="1893" width="0.7" height="15.0" fill="rgb(235,174,45)" rx="2" ry="2" />
<text  x="653.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.3" y="85" width="0.2" height="15.0" fill="rgb(243,195,36)" rx="2" ry="2" />
<text  x="98.27" y="95.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="549.7" y="1925" width="0.6" height="15.0" fill="rgb(206,48,8)" rx="2" ry="2" />
<text  x="552.75" y="1935.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="95.9" y="1989" width="0.4" height="15.0" fill="rgb(226,88,4)" rx="2" ry="2" />
<text  x="98.87" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="10.2" y="1893" width="1.0" height="15.0" fill="rgb(227,199,8)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (47 samples, 0.79%)</title><rect x="239.7" y="1461" width="9.3" height="15.0" fill="rgb(252,225,36)" rx="2" ry="2" />
<text  x="242.71" y="1471.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="927.1" y="1989" width="0.2" height="15.0" fill="rgb(245,120,38)" rx="2" ry="2" />
<text  x="930.05" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="23.1" y="1941" width="0.2" height="15.0" fill="rgb(250,41,33)" rx="2" ry="2" />
<text  x="26.06" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="636.8" y="1909" width="0.4" height="15.0" fill="rgb(208,86,14)" rx="2" ry="2" />
<text  x="639.80" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.10%)</title><rect x="1047.0" y="1845" width="1.1" height="15.0" fill="rgb(213,190,11)" rx="2" ry="2" />
<text  x="1049.95" y="1855.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (1 samples, 0.02%)</title><rect x="179.6" y="1973" width="0.2" height="15.0" fill="rgb(223,220,24)" rx="2" ry="2" />
<text  x="182.56" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="551.7" y="1941" width="0.2" height="15.0" fill="rgb(219,145,51)" rx="2" ry="2" />
<text  x="554.72" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="548.0" y="1925" width="0.2" height="15.0" fill="rgb(207,135,48)" rx="2" ry="2" />
<text  x="550.96" y="1935.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (4 samples, 0.07%)</title><rect x="309.7" y="1941" width="0.8" height="15.0" fill="rgb(253,160,5)" rx="2" ry="2" />
<text  x="312.75" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="176.0" y="1925" width="1.4" height="15.0" fill="rgb(224,42,11)" rx="2" ry="2" />
<text  x="179.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (3 samples, 0.05%)</title><rect x="360.8" y="2037" width="0.6" height="15.0" fill="rgb(252,91,18)" rx="2" ry="2" />
<text  x="363.79" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="156.2" y="1957" width="0.8" height="15.0" fill="rgb(236,168,27)" rx="2" ry="2" />
<text  x="159.21" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.25%)</title><rect x="810.5" y="2021" width="3.0" height="15.0" fill="rgb(250,129,3)" rx="2" ry="2" />
<text  x="813.52" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (4 samples, 0.07%)</title><rect x="855.4" y="2005" width="0.8" height="15.0" fill="rgb(217,94,36)" rx="2" ry="2" />
<text  x="858.43" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="214.8" y="1877" width="0.2" height="15.0" fill="rgb(240,10,38)" rx="2" ry="2" />
<text  x="217.78" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="66.8" y="37" width="2.4" height="15.0" fill="rgb(251,0,39)" rx="2" ry="2" />
<text  x="69.78" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="93.7" y="85" width="1.6" height="15.0" fill="rgb(251,184,28)" rx="2" ry="2" />
<text  x="96.69" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="510.4" y="1989" width="0.2" height="15.0" fill="rgb(244,78,2)" rx="2" ry="2" />
<text  x="513.37" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="174.2" y="1941" width="0.2" height="15.0" fill="rgb(223,76,7)" rx="2" ry="2" />
<text  x="177.22" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="447.7" y="1909" width="0.2" height="15.0" fill="rgb(232,150,42)" rx="2" ry="2" />
<text  x="450.65" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="339.2" y="1861" width="0.2" height="15.0" fill="rgb(216,213,23)" rx="2" ry="2" />
<text  x="342.23" y="1871.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="161.8" y="2021" width="0.2" height="15.0" fill="rgb(233,48,22)" rx="2" ry="2" />
<text  x="164.75" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="827.9" y="2005" width="0.2" height="15.0" fill="rgb(232,162,46)" rx="2" ry="2" />
<text  x="830.93" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (31 samples, 0.52%)</title><rect x="327.0" y="1989" width="6.1" height="15.0" fill="rgb(215,63,41)" rx="2" ry="2" />
<text  x="329.96" y="1999.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="194.6" y="2005" width="0.2" height="15.0" fill="rgb(229,48,37)" rx="2" ry="2" />
<text  x="197.60" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (24 samples, 0.40%)</title><rect x="970.0" y="2037" width="4.7" height="15.0" fill="rgb(239,22,42)" rx="2" ry="2" />
<text  x="972.99" y="2047.5" ></text>
</g>
<g >
<title>native_write_msr (16 samples, 0.27%)</title><rect x="12.8" y="1829" width="3.1" height="15.0" fill="rgb(228,43,37)" rx="2" ry="2" />
<text  x="15.77" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="573.3" y="1973" width="1.6" height="15.0" fill="rgb(207,38,44)" rx="2" ry="2" />
<text  x="576.29" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (16 samples, 0.27%)</title><rect x="911.0" y="1877" width="3.2" height="15.0" fill="rgb(244,132,25)" rx="2" ry="2" />
<text  x="914.03" y="1887.5" ></text>
</g>
<g >
<title>[[vdso]] (10 samples, 0.17%)</title><rect x="199.5" y="2005" width="2.0" height="15.0" fill="rgb(206,95,47)" rx="2" ry="2" />
<text  x="202.54" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="590.1" y="1973" width="0.8" height="15.0" fill="rgb(208,135,1)" rx="2" ry="2" />
<text  x="593.11" y="1983.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="547.2" y="1925" width="0.4" height="15.0" fill="rgb(244,132,39)" rx="2" ry="2" />
<text  x="550.17" y="1935.5" ></text>
</g>
<g >
<title>skb_release_data (39 samples, 0.65%)</title><rect x="240.7" y="1429" width="7.7" height="15.0" fill="rgb(222,186,24)" rx="2" ry="2" />
<text  x="243.70" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="581" width="42.0" height="15.0" fill="rgb(222,177,52)" rx="2" ry="2" />
<text  x="56.92" y="591.5" >[un..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1047.9" y="1813" width="0.2" height="15.0" fill="rgb(226,10,23)" rx="2" ry="2" />
<text  x="1050.94" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="328.7" y="1957" width="0.4" height="15.0" fill="rgb(207,96,2)" rx="2" ry="2" />
<text  x="331.74" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="465.1" y="1957" width="0.6" height="15.0" fill="rgb(242,85,54)" rx="2" ry="2" />
<text  x="468.06" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (7 samples, 0.12%)</title><rect x="776.3" y="2005" width="1.4" height="15.0" fill="rgb(252,142,29)" rx="2" ry="2" />
<text  x="779.29" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="831.5" y="1989" width="0.4" height="15.0" fill="rgb(219,83,46)" rx="2" ry="2" />
<text  x="834.49" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (3 samples, 0.05%)</title><rect x="781.8" y="2005" width="0.6" height="15.0" fill="rgb(216,220,17)" rx="2" ry="2" />
<text  x="784.83" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="300.1" y="1989" width="0.7" height="15.0" fill="rgb(225,206,23)" rx="2" ry="2" />
<text  x="303.05" y="1999.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="1179.5" y="2053" width="1.0" height="15.0" fill="rgb(220,131,40)" rx="2" ry="2" />
<text  x="1182.51" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="58.1" y="37" width="0.6" height="15.0" fill="rgb(212,16,0)" rx="2" ry="2" />
<text  x="61.08" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="686.5" y="1893" width="0.2" height="15.0" fill="rgb(245,132,2)" rx="2" ry="2" />
<text  x="689.46" y="1903.5" ></text>
</g>
<g >
<title>ip_copy_addrs (6 samples, 0.10%)</title><rect x="233.0" y="1813" width="1.2" height="15.0" fill="rgb(232,42,22)" rx="2" ry="2" />
<text  x="235.98" y="1823.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (10 samples, 0.17%)</title><rect x="209.6" y="1941" width="2.0" height="15.0" fill="rgb(245,209,5)" rx="2" ry="2" />
<text  x="212.63" y="1951.5" ></text>
</g>
<g >
<title>__ip_local_out (4 samples, 0.07%)</title><rect x="1075.0" y="1829" width="0.8" height="15.0" fill="rgb(244,29,10)" rx="2" ry="2" />
<text  x="1078.05" y="1839.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="463.1" y="1957" width="0.4" height="15.0" fill="rgb(208,9,4)" rx="2" ry="2" />
<text  x="466.09" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="336.5" y="1909" width="0.4" height="15.0" fill="rgb(244,222,22)" rx="2" ry="2" />
<text  x="339.46" y="1919.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="357.2" y="1925" width="0.2" height="15.0" fill="rgb(246,102,27)" rx="2" ry="2" />
<text  x="360.23" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.12%)</title><rect x="1094.2" y="2037" width="1.4" height="15.0" fill="rgb(214,205,42)" rx="2" ry="2" />
<text  x="1097.24" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (22 samples, 0.37%)</title><rect x="461.3" y="1973" width="4.4" height="15.0" fill="rgb(249,5,15)" rx="2" ry="2" />
<text  x="464.30" y="1983.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (10 samples, 0.17%)</title><rect x="258.5" y="1829" width="2.0" height="15.0" fill="rgb(253,228,22)" rx="2" ry="2" />
<text  x="261.50" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="304.8" y="1957" width="0.2" height="15.0" fill="rgb(229,116,6)" rx="2" ry="2" />
<text  x="307.80" y="1967.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="265.0" y="1909" width="0.2" height="15.0" fill="rgb(206,216,36)" rx="2" ry="2" />
<text  x="268.03" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="914.2" y="1845" width="0.2" height="15.0" fill="rgb(228,107,11)" rx="2" ry="2" />
<text  x="917.19" y="1855.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(214,60,49)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="811.3" y="1973" width="0.2" height="15.0" fill="rgb(222,36,4)" rx="2" ry="2" />
<text  x="814.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="612.7" y="2021" width="1.5" height="15.0" fill="rgb(246,82,5)" rx="2" ry="2" />
<text  x="615.66" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (40 samples, 0.67%)</title><rect x="335.5" y="2037" width="7.9" height="15.0" fill="rgb(243,28,4)" rx="2" ry="2" />
<text  x="338.47" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="697.5" y="1957" width="0.2" height="15.0" fill="rgb(224,58,50)" rx="2" ry="2" />
<text  x="700.54" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="304.2" y="1941" width="0.6" height="15.0" fill="rgb(234,79,53)" rx="2" ry="2" />
<text  x="307.21" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="686.1" y="1893" width="0.2" height="15.0" fill="rgb(217,154,30)" rx="2" ry="2" />
<text  x="689.07" y="1903.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="540.1" y="1989" width="0.3" height="15.0" fill="rgb(221,34,21)" rx="2" ry="2" />
<text  x="543.05" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="814.9" y="1957" width="0.4" height="15.0" fill="rgb(224,171,32)" rx="2" ry="2" />
<text  x="817.87" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="88.7" y="53" width="0.8" height="15.0" fill="rgb(237,0,11)" rx="2" ry="2" />
<text  x="91.75" y="63.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="207.3" y="1973" width="0.2" height="15.0" fill="rgb(252,154,23)" rx="2" ry="2" />
<text  x="210.26" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1253" width="42.0" height="15.0" fill="rgb(222,58,32)" rx="2" ry="2" />
<text  x="56.92" y="1263.5" >[un..</text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="914.2" y="1909" width="0.2" height="15.0" fill="rgb(213,33,46)" rx="2" ry="2" />
<text  x="917.19" y="1919.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="304.6" y="1861" width="0.2" height="15.0" fill="rgb(215,198,30)" rx="2" ry="2" />
<text  x="307.60" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="178.8" y="1893" width="0.2" height="15.0" fill="rgb(233,124,37)" rx="2" ry="2" />
<text  x="181.77" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="292.5" y="1893" width="0.2" height="15.0" fill="rgb(240,38,40)" rx="2" ry="2" />
<text  x="295.54" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="297.9" y="1941" width="0.2" height="15.0" fill="rgb(213,99,7)" rx="2" ry="2" />
<text  x="300.88" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (565 samples, 9.47%)</title><rect x="981.9" y="2037" width="111.7" height="15.0" fill="rgb(246,49,11)" rx="2" ry="2" />
<text  x="984.86" y="2047.5" >entry_SYSCALL..</text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (89 samples, 1.49%)</title><rect x="813.9" y="2037" width="17.6" height="15.0" fill="rgb(214,159,31)" rx="2" ry="2" />
<text  x="816.88" y="2047.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1046.2" y="1861" width="0.2" height="15.0" fill="rgb(246,51,38)" rx="2" ry="2" />
<text  x="1049.16" y="1871.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="662.3" y="1893" width="0.2" height="15.0" fill="rgb(213,109,15)" rx="2" ry="2" />
<text  x="665.32" y="1903.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="260.5" y="1829" width="0.2" height="15.0" fill="rgb(254,119,25)" rx="2" ry="2" />
<text  x="263.48" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (335 samples, 5.62%)</title><rect x="202.9" y="2005" width="66.3" height="15.0" fill="rgb(236,15,9)" rx="2" ry="2" />
<text  x="205.91" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="594.9" y="2005" width="0.2" height="15.0" fill="rgb(211,121,50)" rx="2" ry="2" />
<text  x="597.86" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="697.9" y="1941" width="0.2" height="15.0" fill="rgb(206,86,42)" rx="2" ry="2" />
<text  x="700.94" y="1951.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (9 samples, 0.15%)</title><rect x="258.7" y="1797" width="1.8" height="15.0" fill="rgb(239,129,35)" rx="2" ry="2" />
<text  x="261.70" y="1807.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="423.7" y="2005" width="1.4" height="15.0" fill="rgb(237,153,16)" rx="2" ry="2" />
<text  x="426.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (26 samples, 0.44%)</title><rect x="408.9" y="2005" width="5.1" height="15.0" fill="rgb(221,1,30)" rx="2" ry="2" />
<text  x="411.87" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="212.8" y="1877" width="1.8" height="15.0" fill="rgb(228,202,4)" rx="2" ry="2" />
<text  x="215.80" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (12 samples, 0.20%)</title><rect x="292.9" y="1973" width="2.4" height="15.0" fill="rgb(208,93,7)" rx="2" ry="2" />
<text  x="295.93" y="1983.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (2 samples, 0.03%)</title><rect x="315.7" y="1957" width="0.4" height="15.0" fill="rgb(251,156,0)" rx="2" ry="2" />
<text  x="318.68" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (12 samples, 0.20%)</title><rect x="310.9" y="1973" width="2.4" height="15.0" fill="rgb(252,108,6)" rx="2" ry="2" />
<text  x="313.94" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="895.2" y="1989" width="0.2" height="15.0" fill="rgb(244,38,35)" rx="2" ry="2" />
<text  x="898.20" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="178.0" y="1877" width="0.4" height="15.0" fill="rgb(213,221,3)" rx="2" ry="2" />
<text  x="180.98" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="114.5" y="1941" width="0.2" height="15.0" fill="rgb(243,38,20)" rx="2" ry="2" />
<text  x="117.47" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="161.2" y="2021" width="0.4" height="15.0" fill="rgb(224,148,54)" rx="2" ry="2" />
<text  x="164.16" y="2031.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (20 samples, 0.34%)</title><rect x="895.8" y="1957" width="3.9" height="15.0" fill="rgb(223,73,27)" rx="2" ry="2" />
<text  x="898.79" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (13 samples, 0.22%)</title><rect x="896.8" y="1909" width="2.6" height="15.0" fill="rgb(211,150,29)" rx="2" ry="2" />
<text  x="899.78" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="207.3" y="1925" width="0.2" height="15.0" fill="rgb(253,60,1)" rx="2" ry="2" />
<text  x="210.26" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (129 samples, 2.16%)</title><rect x="869.7" y="1989" width="25.5" height="15.0" fill="rgb(251,153,25)" rx="2" ry="2" />
<text  x="872.67" y="1999.5" >f..</text>
</g>
<g >
<title>__slab_free (71 samples, 1.19%)</title><rect x="1010.3" y="1845" width="14.1" height="15.0" fill="rgb(230,57,54)" rx="2" ry="2" />
<text  x="1013.35" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="175.2" y="1925" width="0.2" height="15.0" fill="rgb(239,109,52)" rx="2" ry="2" />
<text  x="178.21" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1893" width="42.0" height="15.0" fill="rgb(232,34,45)" rx="2" ry="2" />
<text  x="56.92" y="1903.5" >[un..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(217,80,3)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="843.6" y="2005" width="0.4" height="15.0" fill="rgb(222,198,34)" rx="2" ry="2" />
<text  x="846.56" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="637.2" y="1925" width="1.4" height="15.0" fill="rgb(214,15,5)" rx="2" ry="2" />
<text  x="640.20" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg (263 samples, 4.41%)</title><rect x="212.6" y="1909" width="52.0" height="15.0" fill="rgb(239,30,40)" rx="2" ry="2" />
<text  x="215.60" y="1919.5" >tcp_s..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="505.6" y="1989" width="0.4" height="15.0" fill="rgb(231,123,48)" rx="2" ry="2" />
<text  x="508.62" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="517" width="42.0" height="15.0" fill="rgb(217,29,36)" rx="2" ry="2" />
<text  x="56.92" y="527.5" >[un..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="281.7" y="2005" width="0.2" height="15.0" fill="rgb(249,83,27)" rx="2" ry="2" />
<text  x="284.65" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="152.9" y="1989" width="0.3" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="155.85" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="87.4" y="37" width="1.1" height="15.0" fill="rgb(236,52,15)" rx="2" ry="2" />
<text  x="90.36" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="358.6" y="1925" width="0.2" height="15.0" fill="rgb(249,85,39)" rx="2" ry="2" />
<text  x="361.62" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="814.5" y="1925" width="0.2" height="15.0" fill="rgb(235,139,3)" rx="2" ry="2" />
<text  x="817.47" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="54.5" y="37" width="0.2" height="15.0" fill="rgb(232,159,48)" rx="2" ry="2" />
<text  x="57.52" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (4 samples, 0.07%)</title><rect x="365.1" y="2037" width="0.8" height="15.0" fill="rgb(227,46,27)" rx="2" ry="2" />
<text  x="368.15" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (23 samples, 0.39%)</title><rect x="631.3" y="1941" width="4.5" height="15.0" fill="rgb(208,54,16)" rx="2" ry="2" />
<text  x="634.26" y="1951.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="641.9" y="1845" width="0.2" height="15.0" fill="rgb(216,40,47)" rx="2" ry="2" />
<text  x="644.95" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="92.9" y="37" width="0.2" height="15.0" fill="rgb(206,113,15)" rx="2" ry="2" />
<text  x="95.90" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="295.9" y="1957" width="0.2" height="15.0" fill="rgb(246,158,5)" rx="2" ry="2" />
<text  x="298.90" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (3 samples, 0.05%)</title><rect x="53.3" y="1989" width="0.6" height="15.0" fill="rgb(218,190,31)" rx="2" ry="2" />
<text  x="56.33" y="1999.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="444.5" y="1893" width="0.8" height="15.0" fill="rgb(205,35,4)" rx="2" ry="2" />
<text  x="447.49" y="1903.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="540.8" y="1989" width="0.4" height="15.0" fill="rgb(216,196,21)" rx="2" ry="2" />
<text  x="543.84" y="1999.5" ></text>
</g>
<g >
<title>tcp_push (153 samples, 2.57%)</title><rect x="230.8" y="1877" width="30.3" height="15.0" fill="rgb(208,149,2)" rx="2" ry="2" />
<text  x="233.80" y="1887.5" >tc..</text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (4 samples, 0.07%)</title><rect x="64.0" y="37" width="0.8" height="15.0" fill="rgb(251,36,31)" rx="2" ry="2" />
<text  x="67.01" y="47.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="1143.1" y="1957" width="0.4" height="15.0" fill="rgb(234,65,40)" rx="2" ry="2" />
<text  x="1146.11" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="364.9" y="2037" width="0.2" height="15.0" fill="rgb(225,91,27)" rx="2" ry="2" />
<text  x="367.95" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="334.5" y="1925" width="0.2" height="15.0" fill="rgb(233,99,25)" rx="2" ry="2" />
<text  x="337.48" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (142 samples, 2.38%)</title><rect x="570.7" y="2021" width="28.1" height="15.0" fill="rgb(238,203,24)" rx="2" ry="2" />
<text  x="573.72" y="2031.5" >[..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (52 samples, 0.87%)</title><rect x="472.0" y="2037" width="10.3" height="15.0" fill="rgb(230,9,10)" rx="2" ry="2" />
<text  x="474.99" y="2047.5" ></text>
</g>
<g >
<title>account_system_index_time (1 samples, 0.02%)</title><rect x="1073.3" y="1717" width="0.2" height="15.0" fill="rgb(245,181,13)" rx="2" ry="2" />
<text  x="1076.27" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="154.0" y="1941" width="0.4" height="15.0" fill="rgb(228,139,52)" rx="2" ry="2" />
<text  x="157.04" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(223,167,27)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (6 samples, 0.10%)</title><rect x="1090.9" y="1925" width="1.2" height="15.0" fill="rgb(219,84,36)" rx="2" ry="2" />
<text  x="1093.88" y="1935.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="1092.9" y="1957" width="0.7" height="15.0" fill="rgb(253,92,10)" rx="2" ry="2" />
<text  x="1095.85" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="551.7" y="1925" width="0.2" height="15.0" fill="rgb(242,202,7)" rx="2" ry="2" />
<text  x="554.72" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="178.6" y="1909" width="0.2" height="15.0" fill="rgb(237,116,54)" rx="2" ry="2" />
<text  x="181.57" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4,744 samples, 79.54%)</title><rect x="40.9" y="2053" width="938.6" height="15.0" fill="rgb(205,127,1)" rx="2" ry="2" />
<text  x="43.87" y="2063.5" >[unknown]</text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (95 samples, 1.59%)</title><rect x="666.1" y="1893" width="18.8" height="15.0" fill="rgb(246,30,50)" rx="2" ry="2" />
<text  x="669.08" y="1903.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (2 samples, 0.03%)</title><rect x="839.0" y="2037" width="0.4" height="15.0" fill="rgb(205,10,4)" rx="2" ry="2" />
<text  x="842.01" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="838.6" y="2037" width="0.4" height="15.0" fill="rgb(230,158,46)" rx="2" ry="2" />
<text  x="841.61" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="814.5" y="1957" width="0.4" height="15.0" fill="rgb(210,182,21)" rx="2" ry="2" />
<text  x="817.47" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1221" width="42.0" height="15.0" fill="rgb(205,214,22)" rx="2" ry="2" />
<text  x="56.92" y="1231.5" >[un..</text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1068.7" y="1893" width="0.2" height="15.0" fill="rgb(248,80,9)" rx="2" ry="2" />
<text  x="1071.72" y="1903.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="605.1" y="1973" width="0.2" height="15.0" fill="rgb(254,147,29)" rx="2" ry="2" />
<text  x="608.14" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="291.3" y="1957" width="0.4" height="15.0" fill="rgb(249,149,18)" rx="2" ry="2" />
<text  x="294.35" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="559.2" y="1957" width="0.2" height="15.0" fill="rgb(227,198,43)" rx="2" ry="2" />
<text  x="562.24" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="980.1" y="2053" width="0.6" height="15.0" fill="rgb(251,143,12)" rx="2" ry="2" />
<text  x="983.08" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="291.7" y="1989" width="0.2" height="15.0" fill="rgb(241,155,37)" rx="2" ry="2" />
<text  x="294.74" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1108.5" y="1973" width="0.2" height="15.0" fill="rgb(238,209,2)" rx="2" ry="2" />
<text  x="1111.48" y="1983.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1131.8" y="1973" width="0.2" height="15.0" fill="rgb(207,46,32)" rx="2" ry="2" />
<text  x="1134.83" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (4 samples, 0.07%)</title><rect x="539.3" y="1989" width="0.8" height="15.0" fill="rgb(231,130,8)" rx="2" ry="2" />
<text  x="542.26" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="95.5" y="117" width="0.2" height="15.0" fill="rgb(216,62,9)" rx="2" ry="2" />
<text  x="98.47" y="127.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="1092.9" y="1973" width="0.7" height="15.0" fill="rgb(218,181,3)" rx="2" ry="2" />
<text  x="1095.85" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="264.0" y="1845" width="0.6" height="15.0" fill="rgb(233,80,50)" rx="2" ry="2" />
<text  x="267.04" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="568.9" y="2037" width="0.2" height="15.0" fill="rgb(212,36,10)" rx="2" ry="2" />
<text  x="571.94" y="2047.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (16 samples, 0.27%)</title><rect x="287.0" y="1925" width="3.2" height="15.0" fill="rgb(249,110,36)" rx="2" ry="2" />
<text  x="290.00" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (6 samples, 0.10%)</title><rect x="336.1" y="1925" width="1.2" height="15.0" fill="rgb(233,124,4)" rx="2" ry="2" />
<text  x="339.06" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="23.8" y="1941" width="0.2" height="15.0" fill="rgb(215,212,13)" rx="2" ry="2" />
<text  x="26.85" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="163.3" y="1989" width="0.2" height="15.0" fill="rgb(213,225,23)" rx="2" ry="2" />
<text  x="166.34" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="365.9" y="2037" width="0.2" height="15.0" fill="rgb(254,116,10)" rx="2" ry="2" />
<text  x="368.94" y="2047.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="312.9" y="1941" width="0.4" height="15.0" fill="rgb(235,171,21)" rx="2" ry="2" />
<text  x="315.91" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (10 samples, 0.17%)</title><rect x="1110.1" y="2053" width="1.9" height="15.0" fill="rgb(213,206,2)" rx="2" ry="2" />
<text  x="1113.07" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="853" width="42.0" height="15.0" fill="rgb(235,33,50)" rx="2" ry="2" />
<text  x="56.92" y="863.5" >[un..</text>
</g>
<g >
<title>__libc_sendmsg (352 samples, 5.90%)</title><rect x="201.5" y="2037" width="69.7" height="15.0" fill="rgb(233,220,21)" rx="2" ry="2" />
<text  x="204.52" y="2047.5" >__libc_..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="594.1" y="1989" width="0.2" height="15.0" fill="rgb(236,14,44)" rx="2" ry="2" />
<text  x="597.06" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="829.5" y="1973" width="1.6" height="15.0" fill="rgb(251,28,21)" rx="2" ry="2" />
<text  x="832.51" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="11.4" y="1845" width="1.0" height="15.0" fill="rgb(214,34,30)" rx="2" ry="2" />
<text  x="14.38" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="606.1" y="1989" width="0.2" height="15.0" fill="rgb(217,226,51)" rx="2" ry="2" />
<text  x="609.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="72.7" y="37" width="0.2" height="15.0" fill="rgb(250,190,51)" rx="2" ry="2" />
<text  x="75.72" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="612.9" y="2005" width="1.3" height="15.0" fill="rgb(228,224,13)" rx="2" ry="2" />
<text  x="615.86" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="814.9" y="1925" width="0.4" height="15.0" fill="rgb(208,123,3)" rx="2" ry="2" />
<text  x="817.87" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (3 samples, 0.05%)</title><rect x="1092.3" y="1941" width="0.6" height="15.0" fill="rgb(227,67,8)" rx="2" ry="2" />
<text  x="1095.26" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (18 samples, 0.30%)</title><rect x="662.5" y="1893" width="3.6" height="15.0" fill="rgb(233,137,0)" rx="2" ry="2" />
<text  x="665.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="842.2" y="2005" width="1.4" height="15.0" fill="rgb(245,116,54)" rx="2" ry="2" />
<text  x="845.17" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="449.8" y="1893" width="1.0" height="15.0" fill="rgb(217,175,39)" rx="2" ry="2" />
<text  x="452.83" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="909.4" y="1861" width="0.2" height="15.0" fill="rgb(245,58,21)" rx="2" ry="2" />
<text  x="912.44" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="93.1" y="37" width="0.6" height="15.0" fill="rgb(218,202,6)" rx="2" ry="2" />
<text  x="96.10" y="47.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (4 samples, 0.07%)</title><rect x="177.6" y="1925" width="0.8" height="15.0" fill="rgb(217,223,24)" rx="2" ry="2" />
<text  x="180.58" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::clear (1 samples, 0.02%)</title><rect x="162.3" y="2021" width="0.2" height="15.0" fill="rgb(242,68,18)" rx="2" ry="2" />
<text  x="165.35" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="298.9" y="1957" width="0.4" height="15.0" fill="rgb(254,187,51)" rx="2" ry="2" />
<text  x="301.87" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="814.9" y="1877" width="0.2" height="15.0" fill="rgb(252,226,6)" rx="2" ry="2" />
<text  x="817.87" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="176.4" y="1909" width="0.6" height="15.0" fill="rgb(220,1,3)" rx="2" ry="2" />
<text  x="179.40" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (2 samples, 0.03%)</title><rect x="255.9" y="1685" width="0.4" height="15.0" fill="rgb(222,1,23)" rx="2" ry="2" />
<text  x="258.93" y="1695.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="210.0" y="1909" width="0.2" height="15.0" fill="rgb(222,175,29)" rx="2" ry="2" />
<text  x="213.03" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="252.8" y="1685" width="0.2" height="15.0" fill="rgb(222,213,1)" rx="2" ry="2" />
<text  x="255.77" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (12 samples, 0.20%)</title><rect x="351.5" y="2005" width="2.4" height="15.0" fill="rgb(231,159,27)" rx="2" ry="2" />
<text  x="354.50" y="2015.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="214.6" y="1893" width="0.4" height="15.0" fill="rgb(222,216,37)" rx="2" ry="2" />
<text  x="217.58" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="923.7" y="1909" width="0.4" height="15.0" fill="rgb(239,68,5)" rx="2" ry="2" />
<text  x="926.69" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="641.9" y="1861" width="0.2" height="15.0" fill="rgb(237,35,42)" rx="2" ry="2" />
<text  x="644.95" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="165.7" y="1909" width="0.8" height="15.0" fill="rgb(251,35,50)" rx="2" ry="2" />
<text  x="168.71" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="81.2" y="37" width="2.6" height="15.0" fill="rgb(209,181,29)" rx="2" ry="2" />
<text  x="84.23" y="47.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.01%)</title><rect x="570.7" y="2005" width="23.8" height="15.0" fill="rgb(218,117,38)" rx="2" ry="2" />
<text  x="573.72" y="2015.5" >[..</text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="54.1" y="37" width="0.4" height="15.0" fill="rgb(228,52,12)" rx="2" ry="2" />
<text  x="57.12" y="47.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="342.4" y="1909" width="0.2" height="15.0" fill="rgb(214,85,3)" rx="2" ry="2" />
<text  x="345.39" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (79 samples, 1.32%)</title><rect x="236.1" y="1605" width="15.7" height="15.0" fill="rgb(226,222,51)" rx="2" ry="2" />
<text  x="239.15" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="838.2" y="2005" width="0.4" height="15.0" fill="rgb(207,46,20)" rx="2" ry="2" />
<text  x="841.22" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="689.6" y="1909" width="0.6" height="15.0" fill="rgb(236,149,23)" rx="2" ry="2" />
<text  x="692.63" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (42 samples, 0.70%)</title><rect x="526.4" y="1989" width="8.3" height="15.0" fill="rgb(209,216,6)" rx="2" ry="2" />
<text  x="529.40" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="857.6" y="2005" width="0.2" height="15.0" fill="rgb(246,4,8)" rx="2" ry="2" />
<text  x="860.61" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1829" width="42.0" height="15.0" fill="rgb(246,151,22)" rx="2" ry="2" />
<text  x="56.92" y="1839.5" >[un..</text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (9 samples, 0.15%)</title><rect x="546.6" y="1957" width="1.8" height="15.0" fill="rgb(242,200,46)" rx="2" ry="2" />
<text  x="549.58" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (39 samples, 0.65%)</title><rect x="487.0" y="1973" width="7.7" height="15.0" fill="rgb(233,184,41)" rx="2" ry="2" />
<text  x="490.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.78%)</title><rect x="53.9" y="53" width="21.0" height="15.0" fill="rgb(223,77,1)" rx="2" ry="2" />
<text  x="56.92" y="63.5" ></text>
</g>
<g >
<title>skb_release_data (94 samples, 1.58%)</title><rect x="1007.0" y="1893" width="18.6" height="15.0" fill="rgb(244,48,9)" rx="2" ry="2" />
<text  x="1009.99" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="424.1" y="1989" width="1.0" height="15.0" fill="rgb(254,228,14)" rx="2" ry="2" />
<text  x="427.11" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (46 samples, 0.77%)</title><rect x="1132.6" y="1989" width="9.1" height="15.0" fill="rgb(206,50,25)" rx="2" ry="2" />
<text  x="1135.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="813.9" y="2005" width="0.6" height="15.0" fill="rgb(247,31,46)" rx="2" ry="2" />
<text  x="816.88" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (12 samples, 0.20%)</title><rect x="351.5" y="1989" width="2.4" height="15.0" fill="rgb(215,226,11)" rx="2" ry="2" />
<text  x="354.50" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="232.8" y="1813" width="0.2" height="15.0" fill="rgb(250,210,17)" rx="2" ry="2" />
<text  x="235.78" y="1823.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (7 samples, 0.12%)</title><rect x="87.4" y="53" width="1.3" height="15.0" fill="rgb(238,144,20)" rx="2" ry="2" />
<text  x="90.36" y="63.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="323.8" y="1957" width="0.2" height="15.0" fill="rgb(236,13,15)" rx="2" ry="2" />
<text  x="326.80" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="622.8" y="1989" width="0.2" height="15.0" fill="rgb(219,67,45)" rx="2" ry="2" />
<text  x="625.75" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="927.4" y="1989" width="0.2" height="15.0" fill="rgb(220,131,17)" rx="2" ry="2" />
<text  x="930.45" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.08%)</title><rect x="1047.0" y="1813" width="0.9" height="15.0" fill="rgb(221,168,32)" rx="2" ry="2" />
<text  x="1049.95" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="575.3" y="1989" width="0.4" height="15.0" fill="rgb(213,106,0)" rx="2" ry="2" />
<text  x="578.27" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (3 samples, 0.05%)</title><rect x="486.4" y="1973" width="0.6" height="15.0" fill="rgb(242,112,19)" rx="2" ry="2" />
<text  x="489.43" y="1983.5" ></text>
</g>
<g >
<title>__alloc_skb (5 samples, 0.08%)</title><rect x="1070.1" y="1877" width="1.0" height="15.0" fill="rgb(208,101,49)" rx="2" ry="2" />
<text  x="1073.10" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="335.5" y="2021" width="7.9" height="15.0" fill="rgb(236,60,10)" rx="2" ry="2" />
<text  x="338.47" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="89.7" y="37" width="0.4" height="15.0" fill="rgb(242,196,50)" rx="2" ry="2" />
<text  x="92.74" y="47.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (26 samples, 0.44%)</title><rect x="465.7" y="1989" width="5.1" height="15.0" fill="rgb(248,107,17)" rx="2" ry="2" />
<text  x="468.66" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="25.2" y="2005" width="0.2" height="15.0" fill="rgb(246,149,39)" rx="2" ry="2" />
<text  x="28.23" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="333.3" y="1957" width="0.6" height="15.0" fill="rgb(239,179,9)" rx="2" ry="2" />
<text  x="336.29" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (13 samples, 0.22%)</title><rect x="308.4" y="1973" width="2.5" height="15.0" fill="rgb(232,46,54)" rx="2" ry="2" />
<text  x="311.36" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.3" y="1845" width="0.2" height="15.0" fill="rgb(234,58,7)" rx="2" ry="2" />
<text  x="225.30" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (86 samples, 1.44%)</title><rect x="743.4" y="1973" width="17.1" height="15.0" fill="rgb(246,134,11)" rx="2" ry="2" />
<text  x="746.44" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="24.6" y="1989" width="0.2" height="15.0" fill="rgb(249,227,49)" rx="2" ry="2" />
<text  x="27.64" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1146.1" y="1989" width="0.2" height="15.0" fill="rgb(218,30,51)" rx="2" ry="2" />
<text  x="1149.08" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="92.7" y="37" width="0.2" height="15.0" fill="rgb(227,116,23)" rx="2" ry="2" />
<text  x="95.70" y="47.5" ></text>
</g>
<g >
<title>tcp_recvmsg (542 samples, 9.09%)</title><rect x="985.0" y="1941" width="107.3" height="15.0" fill="rgb(218,1,9)" rx="2" ry="2" />
<text  x="988.02" y="1951.5" >tcp_recvmsg</text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="218.1" y="1877" width="0.2" height="15.0" fill="rgb(230,40,12)" rx="2" ry="2" />
<text  x="221.14" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1749" width="42.0" height="15.0" fill="rgb(226,182,16)" rx="2" ry="2" />
<text  x="56.92" y="1759.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="176.2" y="1909" width="0.2" height="15.0" fill="rgb(211,57,1)" rx="2" ry="2" />
<text  x="179.20" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (4 samples, 0.07%)</title><rect x="23.3" y="1973" width="0.7" height="15.0" fill="rgb(243,229,3)" rx="2" ry="2" />
<text  x="26.26" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="175.2" y="1957" width="0.2" height="15.0" fill="rgb(245,10,16)" rx="2" ry="2" />
<text  x="178.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="814.5" y="1893" width="0.2" height="15.0" fill="rgb(236,187,42)" rx="2" ry="2" />
<text  x="817.47" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="358.8" y="1941" width="0.2" height="15.0" fill="rgb(246,8,44)" rx="2" ry="2" />
<text  x="361.82" y="1951.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="909.4" y="1781" width="0.2" height="15.0" fill="rgb(214,141,49)" rx="2" ry="2" />
<text  x="912.44" y="1791.5" ></text>
</g>
<g >
<title>dst_release (70 samples, 1.17%)</title><rect x="1027.0" y="1877" width="13.8" height="15.0" fill="rgb(209,223,1)" rx="2" ry="2" />
<text  x="1029.97" y="1887.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="257.9" y="1797" width="0.2" height="15.0" fill="rgb(224,20,9)" rx="2" ry="2" />
<text  x="260.91" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (282 samples, 4.73%)</title><rect x="279.7" y="2037" width="55.8" height="15.0" fill="rgb(219,176,6)" rx="2" ry="2" />
<text  x="282.67" y="2047.5" >faceb..</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="209.8" y="1925" width="0.2" height="15.0" fill="rgb(206,185,20)" rx="2" ry="2" />
<text  x="212.83" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="177.2" y="1909" width="0.2" height="15.0" fill="rgb(252,23,53)" rx="2" ry="2" />
<text  x="180.19" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (17 samples, 0.29%)</title><rect x="694.4" y="1973" width="3.3" height="15.0" fill="rgb(222,68,31)" rx="2" ry="2" />
<text  x="697.38" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1717" width="42.0" height="15.0" fill="rgb(229,168,52)" rx="2" ry="2" />
<text  x="56.92" y="1727.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (3 samples, 0.05%)</title><rect x="600.4" y="2037" width="0.6" height="15.0" fill="rgb(208,120,8)" rx="2" ry="2" />
<text  x="603.40" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="560.8" y="2005" width="0.4" height="15.0" fill="rgb(234,125,46)" rx="2" ry="2" />
<text  x="563.82" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (133 samples, 2.23%)</title><rect x="231.8" y="1829" width="26.3" height="15.0" fill="rgb(254,218,26)" rx="2" ry="2" />
<text  x="234.79" y="1839.5" >_..</text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="697.7" y="1973" width="0.4" height="15.0" fill="rgb(208,214,1)" rx="2" ry="2" />
<text  x="700.74" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="325.6" y="1973" width="1.2" height="15.0" fill="rgb(206,96,45)" rx="2" ry="2" />
<text  x="328.58" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="156.6" y="1941" width="0.4" height="15.0" fill="rgb(236,147,17)" rx="2" ry="2" />
<text  x="159.61" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="292.5" y="1957" width="0.2" height="15.0" fill="rgb(240,120,40)" rx="2" ry="2" />
<text  x="295.54" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="1146.3" y="1989" width="1.0" height="15.0" fill="rgb(227,130,10)" rx="2" ry="2" />
<text  x="1149.27" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (19 samples, 0.32%)</title><rect x="292.3" y="1989" width="3.8" height="15.0" fill="rgb(239,14,9)" rx="2" ry="2" />
<text  x="295.34" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="79.4" y="37" width="0.4" height="15.0" fill="rgb(226,62,29)" rx="2" ry="2" />
<text  x="82.45" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (28 samples, 0.47%)</title><rect x="514.9" y="1989" width="5.6" height="15.0" fill="rgb(226,73,18)" rx="2" ry="2" />
<text  x="517.92" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (3 samples, 0.05%)</title><rect x="316.1" y="1973" width="0.6" height="15.0" fill="rgb(206,214,35)" rx="2" ry="2" />
<text  x="319.08" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="482.1" y="2021" width="0.2" height="15.0" fill="rgb(218,35,42)" rx="2" ry="2" />
<text  x="485.08" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="272.6" y="2037" width="0.3" height="15.0" fill="rgb(245,206,26)" rx="2" ry="2" />
<text  x="275.55" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="350.3" y="2005" width="0.4" height="15.0" fill="rgb(233,110,13)" rx="2" ry="2" />
<text  x="353.31" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (7 samples, 0.12%)</title><rect x="681.3" y="1861" width="1.4" height="15.0" fill="rgb(215,162,52)" rx="2" ry="2" />
<text  x="684.32" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="565.0" y="1989" width="0.2" height="15.0" fill="rgb(249,18,51)" rx="2" ry="2" />
<text  x="567.98" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (5 samples, 0.08%)</title><rect x="173.6" y="1989" width="1.0" height="15.0" fill="rgb(239,188,35)" rx="2" ry="2" />
<text  x="176.63" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="457.1" y="1973" width="0.4" height="15.0" fill="rgb(244,30,48)" rx="2" ry="2" />
<text  x="460.15" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="447.9" y="1909" width="0.3" height="15.0" fill="rgb(238,141,33)" rx="2" ry="2" />
<text  x="450.85" y="1919.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="570.7" y="1973" width="0.6" height="15.0" fill="rgb(248,194,9)" rx="2" ry="2" />
<text  x="573.72" y="1983.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="984.2" y="2005" width="0.2" height="15.0" fill="rgb(221,206,36)" rx="2" ry="2" />
<text  x="987.23" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="581.0" y="1941" width="0.2" height="15.0" fill="rgb(233,82,3)" rx="2" ry="2" />
<text  x="584.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="1109.5" y="2053" width="0.2" height="15.0" fill="rgb(232,226,39)" rx="2" ry="2" />
<text  x="1112.47" y="2063.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="211.2" y="1893" width="0.2" height="15.0" fill="rgb(240,203,48)" rx="2" ry="2" />
<text  x="214.22" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="11.4" y="1877" width="1.0" height="15.0" fill="rgb(237,85,35)" rx="2" ry="2" />
<text  x="14.38" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="164.7" y="1941" width="1.8" height="15.0" fill="rgb(214,111,11)" rx="2" ry="2" />
<text  x="167.72" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="567.9" y="1973" width="1.0" height="15.0" fill="rgb(243,72,43)" rx="2" ry="2" />
<text  x="570.95" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (11 samples, 0.18%)</title><rect x="648.9" y="1925" width="2.1" height="15.0" fill="rgb(246,17,54)" rx="2" ry="2" />
<text  x="651.87" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="578.4" y="1973" width="2.2" height="15.0" fill="rgb(251,221,31)" rx="2" ry="2" />
<text  x="581.43" y="1983.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="148.7" y="1957" width="0.4" height="15.0" fill="rgb(234,102,17)" rx="2" ry="2" />
<text  x="151.70" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="170.7" y="1973" width="0.2" height="15.0" fill="rgb(222,149,50)" rx="2" ry="2" />
<text  x="173.66" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="811.7" y="1973" width="0.2" height="15.0" fill="rgb(225,10,10)" rx="2" ry="2" />
<text  x="814.70" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="693.0" y="1941" width="0.2" height="15.0" fill="rgb(214,118,3)" rx="2" ry="2" />
<text  x="695.99" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="691.0" y="1973" width="1.0" height="15.0" fill="rgb(233,54,19)" rx="2" ry="2" />
<text  x="694.01" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (27 samples, 0.45%)</title><rect x="607.3" y="2005" width="5.4" height="15.0" fill="rgb(252,35,2)" rx="2" ry="2" />
<text  x="610.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="376.6" y="2005" width="0.2" height="15.0" fill="rgb(237,225,3)" rx="2" ry="2" />
<text  x="379.62" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1073.7" y="1861" width="0.2" height="15.0" fill="rgb(231,126,35)" rx="2" ry="2" />
<text  x="1076.66" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="686.7" y="1909" width="0.2" height="15.0" fill="rgb(230,77,30)" rx="2" ry="2" />
<text  x="689.66" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="69.2" y="37" width="1.1" height="15.0" fill="rgb(241,183,31)" rx="2" ry="2" />
<text  x="72.16" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="89.5" y="37" width="0.2" height="15.0" fill="rgb(218,24,26)" rx="2" ry="2" />
<text  x="92.54" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="95.5" y="53" width="0.2" height="15.0" fill="rgb(215,161,43)" rx="2" ry="2" />
<text  x="98.47" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="177.0" y="1893" width="0.2" height="15.0" fill="rgb(244,132,29)" rx="2" ry="2" />
<text  x="179.99" y="1903.5" ></text>
</g>
<g >
<title>all (5,964 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(246,92,20)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="444.5" y="1717" width="0.8" height="15.0" fill="rgb(240,192,38)" rx="2" ry="2" />
<text  x="447.49" y="1727.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="191.8" y="2037" width="0.2" height="15.0" fill="rgb(247,207,37)" rx="2" ry="2" />
<text  x="194.83" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="114.9" y="1973" width="0.6" height="15.0" fill="rgb(250,29,1)" rx="2" ry="2" />
<text  x="117.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="773" width="42.0" height="15.0" fill="rgb(240,144,47)" rx="2" ry="2" />
<text  x="56.92" y="783.5" >[un..</text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="1074.7" y="1845" width="0.3" height="15.0" fill="rgb(221,178,45)" rx="2" ry="2" />
<text  x="1077.65" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1957" width="42.0" height="15.0" fill="rgb(209,30,14)" rx="2" ry="2" />
<text  x="56.92" y="1967.5" >[un..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="869" width="42.0" height="15.0" fill="rgb(229,91,35)" rx="2" ry="2" />
<text  x="56.92" y="879.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="619.4" y="1973" width="0.2" height="15.0" fill="rgb(222,209,6)" rx="2" ry="2" />
<text  x="622.39" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="166.9" y="1957" width="0.2" height="15.0" fill="rgb(205,202,21)" rx="2" ry="2" />
<text  x="169.90" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="640.0" y="1909" width="0.4" height="15.0" fill="rgb(221,22,38)" rx="2" ry="2" />
<text  x="642.97" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (8 samples, 0.13%)</title><rect x="293.3" y="1957" width="1.6" height="15.0" fill="rgb(215,62,0)" rx="2" ry="2" />
<text  x="296.33" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="176.0" y="1909" width="0.2" height="15.0" fill="rgb(214,160,30)" rx="2" ry="2" />
<text  x="179.00" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="614.4" y="1941" width="0.2" height="15.0" fill="rgb(253,198,6)" rx="2" ry="2" />
<text  x="617.44" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="310.3" y="1925" width="0.2" height="15.0" fill="rgb(235,162,2)" rx="2" ry="2" />
<text  x="313.34" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1093.6" y="2037" width="0.6" height="15.0" fill="rgb(221,27,14)" rx="2" ry="2" />
<text  x="1096.65" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="549.2" y="1925" width="0.1" height="15.0" fill="rgb(221,108,5)" rx="2" ry="2" />
<text  x="552.15" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="57.1" y="37" width="0.2" height="15.0" fill="rgb(224,44,40)" rx="2" ry="2" />
<text  x="60.09" y="47.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (3 samples, 0.05%)</title><rect x="979.5" y="2053" width="0.6" height="15.0" fill="rgb(206,100,14)" rx="2" ry="2" />
<text  x="982.48" y="2063.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (2 samples, 0.03%)</title><rect x="929.6" y="1989" width="0.4" height="15.0" fill="rgb(212,68,0)" rx="2" ry="2" />
<text  x="932.62" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="355.5" y="1925" width="0.2" height="15.0" fill="rgb(242,68,9)" rx="2" ry="2" />
<text  x="358.45" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (9 samples, 0.15%)</title><rect x="1158.1" y="2053" width="1.8" height="15.0" fill="rgb(236,161,29)" rx="2" ry="2" />
<text  x="1161.15" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="557.5" y="1925" width="0.2" height="15.0" fill="rgb(227,144,46)" rx="2" ry="2" />
<text  x="560.46" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="548.8" y="1941" width="0.5" height="15.0" fill="rgb(212,62,32)" rx="2" ry="2" />
<text  x="551.76" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="698.1" y="1989" width="0.2" height="15.0" fill="rgb(211,50,13)" rx="2" ry="2" />
<text  x="701.14" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="665.7" y="1861" width="0.2" height="15.0" fill="rgb(248,99,14)" rx="2" ry="2" />
<text  x="668.69" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="606.3" y="1989" width="0.2" height="15.0" fill="rgb(247,203,6)" rx="2" ry="2" />
<text  x="609.33" y="1999.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1024.2" y="1749" width="0.2" height="15.0" fill="rgb(251,25,15)" rx="2" ry="2" />
<text  x="1027.20" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1172.4" y="2053" width="0.2" height="15.0" fill="rgb(211,37,7)" rx="2" ry="2" />
<text  x="1175.39" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="814.7" y="1941" width="0.2" height="15.0" fill="rgb(225,136,25)" rx="2" ry="2" />
<text  x="817.67" y="1951.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="594.3" y="1989" width="0.2" height="15.0" fill="rgb(212,78,10)" rx="2" ry="2" />
<text  x="597.26" y="1999.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (5 samples, 0.08%)</title><rect x="1023.4" y="1813" width="1.0" height="15.0" fill="rgb(222,89,51)" rx="2" ry="2" />
<text  x="1026.41" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="928.6" y="1957" width="0.8" height="15.0" fill="rgb(236,103,25)" rx="2" ry="2" />
<text  x="931.64" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="95.3" y="53" width="0.2" height="15.0" fill="rgb(231,138,14)" rx="2" ry="2" />
<text  x="98.27" y="63.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (4 samples, 0.07%)</title><rect x="1107.3" y="2005" width="0.8" height="15.0" fill="rgb(244,64,14)" rx="2" ry="2" />
<text  x="1110.30" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="910.8" y="1877" width="0.2" height="15.0" fill="rgb(253,107,46)" rx="2" ry="2" />
<text  x="913.83" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="590.9" y="1989" width="0.2" height="15.0" fill="rgb(251,216,52)" rx="2" ry="2" />
<text  x="593.90" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="840.2" y="2037" width="1.8" height="15.0" fill="rgb(212,1,47)" rx="2" ry="2" />
<text  x="843.19" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (17 samples, 0.29%)</title><rect x="822.6" y="1973" width="3.3" height="15.0" fill="rgb(228,92,5)" rx="2" ry="2" />
<text  x="825.59" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="172.0" y="1957" width="0.4" height="15.0" fill="rgb(228,10,12)" rx="2" ry="2" />
<text  x="175.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="857.2" y="2005" width="0.2" height="15.0" fill="rgb(219,149,15)" rx="2" ry="2" />
<text  x="860.21" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="558.8" y="1973" width="0.2" height="15.0" fill="rgb(220,11,48)" rx="2" ry="2" />
<text  x="561.85" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (6 samples, 0.10%)</title><rect x="482.7" y="2037" width="1.2" height="15.0" fill="rgb(230,133,40)" rx="2" ry="2" />
<text  x="485.67" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="353.3" y="1957" width="0.2" height="15.0" fill="rgb(242,27,49)" rx="2" ry="2" />
<text  x="356.28" y="1967.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="548.2" y="1941" width="0.2" height="15.0" fill="rgb(207,45,16)" rx="2" ry="2" />
<text  x="551.16" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="567.2" y="1973" width="0.2" height="15.0" fill="rgb(228,25,30)" rx="2" ry="2" />
<text  x="570.16" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (7 samples, 0.12%)</title><rect x="649.7" y="1909" width="1.3" height="15.0" fill="rgb(211,123,47)" rx="2" ry="2" />
<text  x="652.66" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1029" width="42.0" height="15.0" fill="rgb(224,57,18)" rx="2" ry="2" />
<text  x="56.92" y="1039.5" >[un..</text>
</g>
<g >
<title>folly::AsyncSocket::good (3 samples, 0.05%)</title><rect x="534.7" y="1989" width="0.6" height="15.0" fill="rgb(254,195,21)" rx="2" ry="2" />
<text  x="537.71" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1147.3" y="1989" width="0.2" height="15.0" fill="rgb(250,6,54)" rx="2" ry="2" />
<text  x="1150.26" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="787.8" y="2005" width="0.2" height="15.0" fill="rgb(229,5,54)" rx="2" ry="2" />
<text  x="790.76" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="300.3" y="1941" width="0.5" height="15.0" fill="rgb(226,143,8)" rx="2" ry="2" />
<text  x="303.25" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="896.6" y="1909" width="0.2" height="15.0" fill="rgb(218,220,47)" rx="2" ry="2" />
<text  x="899.58" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="333.3" y="1973" width="0.6" height="15.0" fill="rgb(218,85,7)" rx="2" ry="2" />
<text  x="336.29" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="343.4" y="2037" width="0.2" height="15.0" fill="rgb(224,160,45)" rx="2" ry="2" />
<text  x="346.38" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="177.0" y="1877" width="0.2" height="15.0" fill="rgb(238,81,28)" rx="2" ry="2" />
<text  x="179.99" y="1887.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="251.4" y="1477" width="0.2" height="15.0" fill="rgb(225,50,42)" rx="2" ry="2" />
<text  x="254.38" y="1487.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="209.4" y="1941" width="0.2" height="15.0" fill="rgb(224,51,10)" rx="2" ry="2" />
<text  x="212.44" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (5 samples, 0.08%)</title><rect x="229.2" y="1845" width="1.0" height="15.0" fill="rgb(242,81,0)" rx="2" ry="2" />
<text  x="232.22" y="1855.5" ></text>
</g>
<g >
<title>process_backlog (80 samples, 1.34%)</title><rect x="235.9" y="1653" width="15.9" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="238.95" y="1663.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="1090.3" y="1877" width="0.6" height="15.0" fill="rgb(253,107,8)" rx="2" ry="2" />
<text  x="1093.28" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_active_ (5 samples, 0.08%)</title><rect x="277.9" y="2037" width="1.0" height="15.0" fill="rgb(240,147,21)" rx="2" ry="2" />
<text  x="280.89" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="598.4" y="2005" width="0.2" height="15.0" fill="rgb(211,118,29)" rx="2" ry="2" />
<text  x="601.42" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="207.3" y="1909" width="0.2" height="15.0" fill="rgb(226,105,28)" rx="2" ry="2" />
<text  x="210.26" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="1172.8" y="2053" width="1.4" height="15.0" fill="rgb(248,32,34)" rx="2" ry="2" />
<text  x="1175.79" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.39%)</title><rect x="273.3" y="2005" width="4.6" height="15.0" fill="rgb(209,172,14)" rx="2" ry="2" />
<text  x="276.34" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (10 samples, 0.17%)</title><rect x="927.6" y="1989" width="2.0" height="15.0" fill="rgb(242,127,2)" rx="2" ry="2" />
<text  x="930.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="482.3" y="2037" width="0.4" height="15.0" fill="rgb(242,55,41)" rx="2" ry="2" />
<text  x="485.28" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (50 samples, 0.84%)</title><rect x="816.5" y="1989" width="9.8" height="15.0" fill="rgb(223,58,14)" rx="2" ry="2" />
<text  x="819.45" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (6 samples, 0.10%)</title><rect x="363.6" y="2037" width="1.2" height="15.0" fill="rgb(229,87,52)" rx="2" ry="2" />
<text  x="366.56" y="2047.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="811.3" y="1925" width="0.2" height="15.0" fill="rgb(229,94,35)" rx="2" ry="2" />
<text  x="814.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="553.9" y="1989" width="0.2" height="15.0" fill="rgb(238,109,19)" rx="2" ry="2" />
<text  x="556.90" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="641.9" y="1909" width="0.2" height="15.0" fill="rgb(230,22,33)" rx="2" ry="2" />
<text  x="644.95" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (78 samples, 1.31%)</title><rect x="236.3" y="1557" width="15.5" height="15.0" fill="rgb(214,222,24)" rx="2" ry="2" />
<text  x="239.34" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="484.7" y="2037" width="0.1" height="15.0" fill="rgb(207,110,53)" rx="2" ry="2" />
<text  x="487.65" y="2047.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="258.1" y="1829" width="0.4" height="15.0" fill="rgb(241,222,48)" rx="2" ry="2" />
<text  x="261.11" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="599.6" y="2037" width="0.2" height="15.0" fill="rgb(224,77,28)" rx="2" ry="2" />
<text  x="602.60" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (77 samples, 1.29%)</title><rect x="236.5" y="1509" width="15.3" height="15.0" fill="rgb(231,24,42)" rx="2" ry="2" />
<text  x="239.54" y="1519.5" ></text>
</g>
<g >
<title>tcp_established_options (5 samples, 0.08%)</title><rect x="1084.0" y="1861" width="0.9" height="15.0" fill="rgb(230,51,34)" rx="2" ry="2" />
<text  x="1086.95" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="92.9" y="69" width="0.2" height="15.0" fill="rgb(221,111,35)" rx="2" ry="2" />
<text  x="95.90" y="79.5" ></text>
</g>
<g >
<title>skb_clone (5 samples, 0.08%)</title><rect x="256.9" y="1813" width="1.0" height="15.0" fill="rgb(214,45,54)" rx="2" ry="2" />
<text  x="259.92" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (275 samples, 4.61%)</title><rect x="280.3" y="2021" width="54.4" height="15.0" fill="rgb(215,166,32)" rx="2" ry="2" />
<text  x="283.27" y="2031.5" >folly..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="1042.4" y="1893" width="0.4" height="15.0" fill="rgb(240,181,26)" rx="2" ry="2" />
<text  x="1045.40" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (7 samples, 0.12%)</title><rect x="554.1" y="1989" width="1.4" height="15.0" fill="rgb(223,128,10)" rx="2" ry="2" />
<text  x="557.10" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="589.1" y="1973" width="0.4" height="15.0" fill="rgb(237,38,21)" rx="2" ry="2" />
<text  x="592.12" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="194.8" y="2021" width="0.8" height="15.0" fill="rgb(235,125,46)" rx="2" ry="2" />
<text  x="197.80" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="352.7" y="1925" width="0.2" height="15.0" fill="rgb(245,161,17)" rx="2" ry="2" />
<text  x="355.68" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="895.4" y="1973" width="4.3" height="15.0" fill="rgb(254,131,41)" rx="2" ry="2" />
<text  x="898.40" y="1983.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="215.0" y="1893" width="0.2" height="15.0" fill="rgb(219,106,52)" rx="2" ry="2" />
<text  x="217.98" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="318.8" y="1989" width="0.2" height="15.0" fill="rgb(236,64,46)" rx="2" ry="2" />
<text  x="321.85" y="1999.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="227.2" y="1877" width="0.4" height="15.0" fill="rgb(216,44,20)" rx="2" ry="2" />
<text  x="230.24" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (5 samples, 0.08%)</title><rect x="1131.6" y="1989" width="1.0" height="15.0" fill="rgb(213,198,21)" rx="2" ry="2" />
<text  x="1134.63" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="55.3" y="37" width="0.2" height="15.0" fill="rgb(217,154,51)" rx="2" ry="2" />
<text  x="58.31" y="47.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="1083.4" y="1829" width="0.2" height="15.0" fill="rgb(250,32,33)" rx="2" ry="2" />
<text  x="1086.36" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="297.7" y="1957" width="0.4" height="15.0" fill="rgb(206,62,1)" rx="2" ry="2" />
<text  x="300.68" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (51 samples, 0.86%)</title><rect x="1073.9" y="1861" width="10.1" height="15.0" fill="rgb(242,31,8)" rx="2" ry="2" />
<text  x="1076.86" y="1871.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="260.7" y="1829" width="0.4" height="15.0" fill="rgb(227,139,20)" rx="2" ry="2" />
<text  x="263.68" y="1839.5" ></text>
</g>
<g >
<title>tcp_current_mss (14 samples, 0.23%)</title><rect x="261.9" y="1861" width="2.7" height="15.0" fill="rgb(241,74,42)" rx="2" ry="2" />
<text  x="264.87" y="1871.5" ></text>
</g>
<g >
<title>nmi_restore (2 samples, 0.03%)</title><rect x="15.9" y="1829" width="0.4" height="15.0" fill="rgb(232,161,21)" rx="2" ry="2" />
<text  x="18.94" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (24 samples, 0.40%)</title><rect x="58.7" y="37" width="4.7" height="15.0" fill="rgb(237,38,18)" rx="2" ry="2" />
<text  x="61.67" y="47.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="549.2" y="1909" width="0.1" height="15.0" fill="rgb(227,199,33)" rx="2" ry="2" />
<text  x="552.15" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="336.9" y="1909" width="0.4" height="15.0" fill="rgb(217,8,31)" rx="2" ry="2" />
<text  x="339.85" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="910.4" y="1877" width="0.4" height="15.0" fill="rgb(209,224,28)" rx="2" ry="2" />
<text  x="913.43" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="893.0" y="1957" width="0.8" height="15.0" fill="rgb(244,198,45)" rx="2" ry="2" />
<text  x="896.02" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="319.6" y="1989" width="0.2" height="15.0" fill="rgb(243,134,6)" rx="2" ry="2" />
<text  x="322.64" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="826.7" y="1989" width="0.2" height="15.0" fill="rgb(206,48,18)" rx="2" ry="2" />
<text  x="829.74" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (4 samples, 0.07%)</title><rect x="1171.6" y="2053" width="0.8" height="15.0" fill="rgb(233,219,13)" rx="2" ry="2" />
<text  x="1174.60" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="194.6" y="1957" width="0.2" height="15.0" fill="rgb(245,17,53)" rx="2" ry="2" />
<text  x="197.60" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (80 samples, 1.34%)</title><rect x="235.9" y="1733" width="15.9" height="15.0" fill="rgb(234,84,40)" rx="2" ry="2" />
<text  x="238.95" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="981" width="42.0" height="15.0" fill="rgb(209,153,40)" rx="2" ry="2" />
<text  x="56.92" y="991.5" >[un..</text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="1142.1" y="1989" width="0.4" height="15.0" fill="rgb(213,21,9)" rx="2" ry="2" />
<text  x="1145.12" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (106 samples, 1.78%)</title><rect x="789.0" y="1989" width="20.9" height="15.0" fill="rgb(210,129,15)" rx="2" ry="2" />
<text  x="791.95" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="869.5" y="1973" width="0.2" height="15.0" fill="rgb(254,6,18)" rx="2" ry="2" />
<text  x="872.48" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (8 samples, 0.13%)</title><rect x="634.0" y="1909" width="1.6" height="15.0" fill="rgb(230,133,49)" rx="2" ry="2" />
<text  x="637.03" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="87.2" y="37" width="0.2" height="15.0" fill="rgb(243,211,19)" rx="2" ry="2" />
<text  x="90.16" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="80.0" y="37" width="0.4" height="15.0" fill="rgb(232,75,7)" rx="2" ry="2" />
<text  x="83.04" y="47.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="909.4" y="1893" width="0.2" height="15.0" fill="rgb(233,90,0)" rx="2" ry="2" />
<text  x="912.44" y="1903.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="95.7" y="69" width="0.2" height="15.0" fill="rgb(220,132,2)" rx="2" ry="2" />
<text  x="98.67" y="79.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="234.0" y="1797" width="0.2" height="15.0" fill="rgb(224,228,0)" rx="2" ry="2" />
<text  x="236.97" y="1807.5" ></text>
</g>
<g >
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1041.6" y="1893" width="0.2" height="15.0" fill="rgb(241,210,31)" rx="2" ry="2" />
<text  x="1044.61" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="352.3" y="1973" width="0.2" height="15.0" fill="rgb(234,62,43)" rx="2" ry="2" />
<text  x="355.29" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (20 samples, 0.34%)</title><rect x="286.2" y="1941" width="4.0" height="15.0" fill="rgb(211,26,5)" rx="2" ry="2" />
<text  x="289.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (47 samples, 0.79%)</title><rect x="1160.3" y="2053" width="9.3" height="15.0" fill="rgb(214,117,48)" rx="2" ry="2" />
<text  x="1163.32" y="2063.5" ></text>
</g>
<g >
<title>rb_erase (10 samples, 0.17%)</title><rect x="249.0" y="1461" width="2.0" height="15.0" fill="rgb(226,60,13)" rx="2" ry="2" />
<text  x="252.01" y="1471.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="95.7" y="117" width="0.2" height="15.0" fill="rgb(222,0,8)" rx="2" ry="2" />
<text  x="98.67" y="127.5" ></text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.34%)</title><rect x="12.4" y="1909" width="3.9" height="15.0" fill="rgb(208,1,48)" rx="2" ry="2" />
<text  x="15.37" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (1 samples, 0.02%)</title><rect x="24.0" y="1973" width="0.2" height="15.0" fill="rgb(247,75,1)" rx="2" ry="2" />
<text  x="27.05" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (12 samples, 0.20%)</title><rect x="1080.6" y="1733" width="2.4" height="15.0" fill="rgb(234,104,49)" rx="2" ry="2" />
<text  x="1083.59" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (17 samples, 0.29%)</title><rect x="444.1" y="1925" width="3.4" height="15.0" fill="rgb(226,200,48)" rx="2" ry="2" />
<text  x="447.09" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="926.5" y="1989" width="0.2" height="15.0" fill="rgb(220,59,46)" rx="2" ry="2" />
<text  x="929.46" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="1082.6" y="1685" width="0.2" height="15.0" fill="rgb(252,93,45)" rx="2" ry="2" />
<text  x="1085.57" y="1695.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="743.2" y="1941" width="0.2" height="15.0" fill="rgb(251,141,21)" rx="2" ry="2" />
<text  x="746.25" y="1951.5" ></text>
</g>
<g >
<title>free (44 samples, 0.74%)</title><rect x="956.7" y="2037" width="8.7" height="15.0" fill="rgb(206,168,6)" rx="2" ry="2" />
<text  x="959.73" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="234.0" y="1781" width="0.2" height="15.0" fill="rgb(241,29,41)" rx="2" ry="2" />
<text  x="236.97" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="24.8" y="2005" width="0.4" height="15.0" fill="rgb(219,58,8)" rx="2" ry="2" />
<text  x="27.84" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="88.5" y="37" width="0.2" height="15.0" fill="rgb(252,114,41)" rx="2" ry="2" />
<text  x="91.55" y="47.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="811.3" y="1861" width="0.2" height="15.0" fill="rgb(221,45,27)" rx="2" ry="2" />
<text  x="814.31" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="352.7" y="1957" width="0.2" height="15.0" fill="rgb(216,41,13)" rx="2" ry="2" />
<text  x="355.68" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="593.1" y="1957" width="1.0" height="15.0" fill="rgb(236,89,35)" rx="2" ry="2" />
<text  x="596.08" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="978.9" y="1957" width="0.2" height="15.0" fill="rgb(251,114,9)" rx="2" ry="2" />
<text  x="981.89" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="360.2" y="1989" width="0.4" height="15.0" fill="rgb(238,8,31)" rx="2" ry="2" />
<text  x="363.20" y="1999.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1092.1" y="1925" width="0.2" height="15.0" fill="rgb(212,198,12)" rx="2" ry="2" />
<text  x="1095.06" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="448.2" y="1925" width="0.2" height="15.0" fill="rgb(218,125,47)" rx="2" ry="2" />
<text  x="451.25" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (5 samples, 0.08%)</title><rect x="254.9" y="1653" width="1.0" height="15.0" fill="rgb(219,106,20)" rx="2" ry="2" />
<text  x="257.94" y="1663.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="594.5" y="2005" width="0.4" height="15.0" fill="rgb(207,229,16)" rx="2" ry="2" />
<text  x="597.46" y="2015.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (14 samples, 0.23%)</title><rect x="227.6" y="1877" width="2.8" height="15.0" fill="rgb(215,77,39)" rx="2" ry="2" />
<text  x="230.64" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="600.4" y="2021" width="0.6" height="15.0" fill="rgb(250,225,2)" rx="2" ry="2" />
<text  x="603.40" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="113.1" y="1941" width="1.4" height="15.0" fill="rgb(241,174,31)" rx="2" ry="2" />
<text  x="116.08" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1653" width="42.0" height="15.0" fill="rgb(221,148,7)" rx="2" ry="2" />
<text  x="56.92" y="1663.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (9 samples, 0.15%)</title><rect x="842.2" y="2037" width="1.8" height="15.0" fill="rgb(212,62,20)" rx="2" ry="2" />
<text  x="845.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="541.2" y="1989" width="0.2" height="15.0" fill="rgb(233,220,21)" rx="2" ry="2" />
<text  x="544.24" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1781" width="42.0" height="15.0" fill="rgb(251,157,17)" rx="2" ry="2" />
<text  x="56.92" y="1791.5" >[un..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="597.6" y="2005" width="0.2" height="15.0" fill="rgb(236,207,31)" rx="2" ry="2" />
<text  x="600.63" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="873.0" y="1973" width="1.6" height="15.0" fill="rgb(245,75,39)" rx="2" ry="2" />
<text  x="876.04" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (9 samples, 0.15%)</title><rect x="1081.0" y="1701" width="1.8" height="15.0" fill="rgb(243,162,14)" rx="2" ry="2" />
<text  x="1083.98" y="1711.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (2 samples, 0.03%)</title><rect x="159.0" y="2005" width="0.4" height="15.0" fill="rgb(217,130,15)" rx="2" ry="2" />
<text  x="161.98" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="481.1" y="1989" width="0.2" height="15.0" fill="rgb(243,100,31)" rx="2" ry="2" />
<text  x="484.09" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (8 samples, 0.13%)</title><rect x="914.4" y="1909" width="1.6" height="15.0" fill="rgb(249,151,6)" rx="2" ry="2" />
<text  x="917.39" y="1919.5" ></text>
</g>
<g >
<title>inet_sendmsg (264 samples, 4.43%)</title><rect x="212.4" y="1925" width="52.2" height="15.0" fill="rgb(221,186,30)" rx="2" ry="2" />
<text  x="215.40" y="1935.5" >inet_..</text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (4 samples, 0.07%)</title><rect x="558.6" y="1989" width="0.8" height="15.0" fill="rgb(247,50,32)" rx="2" ry="2" />
<text  x="561.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="571.9" y="1973" width="0.4" height="15.0" fill="rgb(248,41,38)" rx="2" ry="2" />
<text  x="574.90" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="831.5" y="2021" width="0.6" height="15.0" fill="rgb(220,171,50)" rx="2" ry="2" />
<text  x="834.49" y="2031.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (8 samples, 0.13%)</title><rect x="192.0" y="2037" width="1.6" height="15.0" fill="rgb(237,161,10)" rx="2" ry="2" />
<text  x="195.03" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="359.2" y="1973" width="0.2" height="15.0" fill="rgb(251,189,34)" rx="2" ry="2" />
<text  x="362.21" y="1983.5" ></text>
</g>
<g >
<title>copy_page_to_iter (18 samples, 0.30%)</title><rect x="1065.5" y="1909" width="3.6" height="15.0" fill="rgb(230,23,9)" rx="2" ry="2" />
<text  x="1068.55" y="1919.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="662.1" y="1893" width="0.2" height="15.0" fill="rgb(241,102,43)" rx="2" ry="2" />
<text  x="665.13" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="454.0" y="1941" width="0.6" height="15.0" fill="rgb(243,25,47)" rx="2" ry="2" />
<text  x="456.98" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1172.6" y="2053" width="0.2" height="15.0" fill="rgb(223,25,19)" rx="2" ry="2" />
<text  x="1175.59" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="73.3" y="37" width="0.4" height="15.0" fill="rgb(254,70,47)" rx="2" ry="2" />
<text  x="76.31" y="47.5" ></text>
</g>
<g >
<title>tcp_write_xmit (153 samples, 2.57%)</title><rect x="230.8" y="1845" width="30.3" height="15.0" fill="rgb(230,14,29)" rx="2" ry="2" />
<text  x="233.80" y="1855.5" >tc..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (14 samples, 0.23%)</title><rect x="1144.9" y="2053" width="2.8" height="15.0" fill="rgb(218,98,31)" rx="2" ry="2" />
<text  x="1147.89" y="2063.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="272.4" y="2037" width="0.2" height="15.0" fill="rgb(252,26,44)" rx="2" ry="2" />
<text  x="275.35" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (8 samples, 0.13%)</title><rect x="871.5" y="1973" width="1.5" height="15.0" fill="rgb(246,176,5)" rx="2" ry="2" />
<text  x="874.46" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (120 samples, 2.01%)</title><rect x="1120.9" y="2021" width="23.8" height="15.0" fill="rgb(206,229,17)" rx="2" ry="2" />
<text  x="1123.95" y="2031.5" >f..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="234.0" y="1749" width="0.2" height="15.0" fill="rgb(238,178,1)" rx="2" ry="2" />
<text  x="236.97" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="361.2" y="2005" width="0.2" height="15.0" fill="rgb(226,92,28)" rx="2" ry="2" />
<text  x="364.19" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (2 samples, 0.03%)</title><rect x="606.9" y="1989" width="0.4" height="15.0" fill="rgb(229,127,10)" rx="2" ry="2" />
<text  x="609.92" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (4 samples, 0.07%)</title><rect x="497.5" y="1989" width="0.8" height="15.0" fill="rgb(218,107,19)" rx="2" ry="2" />
<text  x="500.51" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(223,87,0)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="10.2" y="1861" width="1.0" height="15.0" fill="rgb(245,17,25)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.34%)</title><rect x="12.4" y="2037" width="3.9" height="15.0" fill="rgb(240,124,34)" rx="2" ry="2" />
<text  x="15.37" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="451.2" y="1909" width="0.4" height="15.0" fill="rgb(206,95,43)" rx="2" ry="2" />
<text  x="454.21" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="150.3" y="1973" width="0.4" height="15.0" fill="rgb(210,131,25)" rx="2" ry="2" />
<text  x="153.28" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (3 samples, 0.05%)</title><rect x="20.9" y="1941" width="0.6" height="15.0" fill="rgb(224,142,8)" rx="2" ry="2" />
<text  x="23.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1349" width="42.0" height="15.0" fill="rgb(226,28,47)" rx="2" ry="2" />
<text  x="56.92" y="1359.5" >[un..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="838.2" y="2021" width="0.4" height="15.0" fill="rgb(231,205,48)" rx="2" ry="2" />
<text  x="841.22" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1073.3" y="1845" width="0.2" height="15.0" fill="rgb(224,112,42)" rx="2" ry="2" />
<text  x="1076.27" y="1855.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="229.0" y="1813" width="0.2" height="15.0" fill="rgb(213,147,11)" rx="2" ry="2" />
<text  x="232.02" y="1823.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="444.5" y="1829" width="0.8" height="15.0" fill="rgb(246,220,0)" rx="2" ry="2" />
<text  x="447.49" y="1839.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (20 samples, 0.34%)</title><rect x="12.4" y="1893" width="3.9" height="15.0" fill="rgb(211,77,6)" rx="2" ry="2" />
<text  x="15.37" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (78 samples, 1.31%)</title><rect x="236.3" y="1589" width="15.5" height="15.0" fill="rgb(229,59,39)" rx="2" ry="2" />
<text  x="239.34" y="1599.5" ></text>
</g>
<g >
<title>skb_push (7 samples, 0.12%)</title><rect x="1085.1" y="1877" width="1.4" height="15.0" fill="rgb(233,177,12)" rx="2" ry="2" />
<text  x="1088.14" y="1887.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1069.1" y="1909" width="0.2" height="15.0" fill="rgb(207,71,52)" rx="2" ry="2" />
<text  x="1072.11" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="581.0" y="1893" width="0.2" height="15.0" fill="rgb(210,65,5)" rx="2" ry="2" />
<text  x="584.01" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="690.2" y="1909" width="0.8" height="15.0" fill="rgb(226,153,42)" rx="2" ry="2" />
<text  x="693.22" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="540.6" y="1989" width="0.2" height="15.0" fill="rgb(235,40,42)" rx="2" ry="2" />
<text  x="543.64" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="1132.0" y="1973" width="0.6" height="15.0" fill="rgb(208,82,3)" rx="2" ry="2" />
<text  x="1135.03" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (15 samples, 0.25%)</title><rect x="828.5" y="2005" width="3.0" height="15.0" fill="rgb(205,156,10)" rx="2" ry="2" />
<text  x="831.52" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="697.7" y="1957" width="0.4" height="15.0" fill="rgb(238,48,54)" rx="2" ry="2" />
<text  x="700.74" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.27%)</title><rect x="601.0" y="2005" width="3.2" height="15.0" fill="rgb(218,153,10)" rx="2" ry="2" />
<text  x="603.99" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1045" width="42.0" height="15.0" fill="rgb(240,121,2)" rx="2" ry="2" />
<text  x="56.92" y="1055.5" >[un..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="811.3" y="1941" width="0.2" height="15.0" fill="rgb(238,81,32)" rx="2" ry="2" />
<text  x="814.31" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="495.1" y="1973" width="0.2" height="15.0" fill="rgb(249,83,37)" rx="2" ry="2" />
<text  x="498.14" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (12 samples, 0.20%)</title><rect x="974.9" y="2005" width="2.4" height="15.0" fill="rgb(238,137,49)" rx="2" ry="2" />
<text  x="977.93" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (115 samples, 1.93%)</title><rect x="234.2" y="1797" width="22.7" height="15.0" fill="rgb(221,95,0)" rx="2" ry="2" />
<text  x="237.17" y="1807.5" >i..</text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1143.5" y="2005" width="0.2" height="15.0" fill="rgb(228,17,27)" rx="2" ry="2" />
<text  x="1146.50" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="741" width="42.0" height="15.0" fill="rgb(228,108,22)" rx="2" ry="2" />
<text  x="56.92" y="751.5" >[un..</text>
</g>
<g >
<title>sock_def_readable (9 samples, 0.15%)</title><rect x="1046.4" y="1861" width="1.7" height="15.0" fill="rgb(232,40,33)" rx="2" ry="2" />
<text  x="1049.36" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (6 samples, 0.10%)</title><rect x="111.9" y="1941" width="1.2" height="15.0" fill="rgb(248,70,49)" rx="2" ry="2" />
<text  x="114.89" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="927.8" y="1973" width="0.2" height="15.0" fill="rgb(229,201,35)" rx="2" ry="2" />
<text  x="930.84" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="645" width="42.0" height="15.0" fill="rgb(212,138,37)" rx="2" ry="2" />
<text  x="56.92" y="655.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (7 samples, 0.12%)</title><rect x="643.7" y="1941" width="1.4" height="15.0" fill="rgb(246,122,2)" rx="2" ry="2" />
<text  x="646.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="257.9" y="1813" width="0.2" height="15.0" fill="rgb(206,64,46)" rx="2" ry="2" />
<text  x="260.91" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="857.4" y="2005" width="0.2" height="15.0" fill="rgb(210,151,48)" rx="2" ry="2" />
<text  x="860.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (14 samples, 0.23%)</title><rect x="688.2" y="1941" width="2.8" height="15.0" fill="rgb(238,82,4)" rx="2" ry="2" />
<text  x="691.24" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="443.9" y="1909" width="0.2" height="15.0" fill="rgb(206,57,53)" rx="2" ry="2" />
<text  x="446.89" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="454.0" y="1925" width="0.2" height="15.0" fill="rgb(223,204,39)" rx="2" ry="2" />
<text  x="456.98" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="687.1" y="1909" width="0.2" height="15.0" fill="rgb(238,183,0)" rx="2" ry="2" />
<text  x="690.06" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1701" width="42.0" height="15.0" fill="rgb(207,2,27)" rx="2" ry="2" />
<text  x="56.92" y="1711.5" >[un..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="743.2" y="1877" width="0.2" height="15.0" fill="rgb(215,14,21)" rx="2" ry="2" />
<text  x="746.25" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (2 samples, 0.03%)</title><rect x="615.6" y="2037" width="0.4" height="15.0" fill="rgb(219,35,27)" rx="2" ry="2" />
<text  x="618.63" y="2047.5" ></text>
</g>
<g >
<title>skb_release_all (42 samples, 0.70%)</title><rect x="240.5" y="1445" width="8.3" height="15.0" fill="rgb(205,145,26)" rx="2" ry="2" />
<text  x="243.50" y="1455.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (7 samples, 0.12%)</title><rect x="893.8" y="1973" width="1.4" height="15.0" fill="rgb(234,96,47)" rx="2" ry="2" />
<text  x="896.81" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="930.6" y="1989" width="0.4" height="15.0" fill="rgb(217,187,44)" rx="2" ry="2" />
<text  x="933.61" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="821" width="42.0" height="15.0" fill="rgb(232,94,17)" rx="2" ry="2" />
<text  x="56.92" y="831.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (37 samples, 0.62%)</title><rect x="335.5" y="1973" width="7.3" height="15.0" fill="rgb(218,217,13)" rx="2" ry="2" />
<text  x="338.47" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (23 samples, 0.39%)</title><rect x="74.9" y="53" width="4.5" height="15.0" fill="rgb(245,119,48)" rx="2" ry="2" />
<text  x="77.90" y="63.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (25 samples, 0.42%)</title><rect x="319.8" y="1989" width="5.0" height="15.0" fill="rgb(209,4,53)" rx="2" ry="2" />
<text  x="322.84" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (6 samples, 0.10%)</title><rect x="552.3" y="2005" width="1.2" height="15.0" fill="rgb(233,126,5)" rx="2" ry="2" />
<text  x="555.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (86 samples, 1.44%)</title><rect x="381.6" y="2005" width="17.0" height="15.0" fill="rgb(215,193,26)" rx="2" ry="2" />
<text  x="384.57" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (69 samples, 1.16%)</title><rect x="1071.5" y="1877" width="13.6" height="15.0" fill="rgb(223,59,19)" rx="2" ry="2" />
<text  x="1074.49" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="95.1" y="53" width="0.2" height="15.0" fill="rgb(224,41,54)" rx="2" ry="2" />
<text  x="98.08" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="207.3" y="1941" width="0.2" height="15.0" fill="rgb(249,119,27)" rx="2" ry="2" />
<text  x="210.26" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (71 samples, 1.19%)</title><rect x="129.7" y="1957" width="14.0" height="15.0" fill="rgb(239,107,21)" rx="2" ry="2" />
<text  x="132.70" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (77 samples, 1.29%)</title><rect x="236.5" y="1541" width="15.3" height="15.0" fill="rgb(224,80,12)" rx="2" ry="2" />
<text  x="239.54" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="1109.9" y="2053" width="0.2" height="15.0" fill="rgb(229,181,50)" rx="2" ry="2" />
<text  x="1112.87" y="2063.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="743.2" y="1845" width="0.2" height="15.0" fill="rgb(234,15,51)" rx="2" ry="2" />
<text  x="746.25" y="1855.5" ></text>
</g>
<g >
<title>ip_queue_xmit (115 samples, 1.93%)</title><rect x="234.2" y="1813" width="22.7" height="15.0" fill="rgb(232,67,54)" rx="2" ry="2" />
<text  x="237.17" y="1823.5" >i..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="920.3" y="1893" width="0.2" height="15.0" fill="rgb(241,17,45)" rx="2" ry="2" />
<text  x="923.33" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="612.7" y="2005" width="0.2" height="15.0" fill="rgb(221,90,48)" rx="2" ry="2" />
<text  x="615.66" y="2015.5" ></text>
</g>
<g >
<title>ip_output (112 samples, 1.88%)</title><rect x="234.8" y="1781" width="22.1" height="15.0" fill="rgb(241,160,45)" rx="2" ry="2" />
<text  x="237.76" y="1791.5" >i..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="581.0" y="1877" width="0.2" height="15.0" fill="rgb(220,140,17)" rx="2" ry="2" />
<text  x="584.01" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="665.9" y="1861" width="0.2" height="15.0" fill="rgb(210,143,37)" rx="2" ry="2" />
<text  x="668.89" y="1871.5" ></text>
</g>
<g >
<title>access@plt (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(235,71,46)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (2 samples, 0.03%)</title><rect x="526.0" y="1989" width="0.4" height="15.0" fill="rgb(208,22,37)" rx="2" ry="2" />
<text  x="529.00" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="170.7" y="1957" width="0.2" height="15.0" fill="rgb(208,74,19)" rx="2" ry="2" />
<text  x="173.66" y="1967.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1048.1" y="1861" width="0.2" height="15.0" fill="rgb(253,59,29)" rx="2" ry="2" />
<text  x="1051.14" y="1871.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1006.2" y="1845" width="0.2" height="15.0" fill="rgb(238,2,29)" rx="2" ry="2" />
<text  x="1009.19" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="175.6" y="1925" width="0.2" height="15.0" fill="rgb(207,151,19)" rx="2" ry="2" />
<text  x="178.60" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="616.6" y="2005" width="0.6" height="15.0" fill="rgb(247,118,15)" rx="2" ry="2" />
<text  x="619.62" y="2015.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="10.2" y="1909" width="1.0" height="15.0" fill="rgb(224,130,34)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="306.6" y="1941" width="0.6" height="15.0" fill="rgb(215,121,21)" rx="2" ry="2" />
<text  x="309.58" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 4.14%)</title><rect x="376.2" y="2021" width="48.9" height="15.0" fill="rgb(253,142,36)" rx="2" ry="2" />
<text  x="379.23" y="2031.5" >[unk..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="319.4" y="1973" width="0.2" height="15.0" fill="rgb(234,184,31)" rx="2" ry="2" />
<text  x="322.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="599.2" y="2037" width="0.2" height="15.0" fill="rgb(207,82,38)" rx="2" ry="2" />
<text  x="602.21" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="743.2" y="1973" width="0.2" height="15.0" fill="rgb(239,202,53)" rx="2" ry="2" />
<text  x="746.25" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (9 samples, 0.15%)</title><rect x="258.7" y="1781" width="1.8" height="15.0" fill="rgb(240,194,34)" rx="2" ry="2" />
<text  x="261.70" y="1791.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="234.0" y="1701" width="0.2" height="15.0" fill="rgb(239,77,45)" rx="2" ry="2" />
<text  x="236.97" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.39%)</title><rect x="273.3" y="2021" width="4.6" height="15.0" fill="rgb(254,172,36)" rx="2" ry="2" />
<text  x="276.34" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="949" width="42.0" height="15.0" fill="rgb(216,129,24)" rx="2" ry="2" />
<text  x="56.92" y="959.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="551.7" y="1973" width="0.2" height="15.0" fill="rgb(220,24,29)" rx="2" ry="2" />
<text  x="554.72" y="1983.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (2 samples, 0.03%)</title><rect x="228.8" y="1845" width="0.4" height="15.0" fill="rgb(215,72,4)" rx="2" ry="2" />
<text  x="231.83" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (562 samples, 9.42%)</title><rect x="982.5" y="2021" width="111.1" height="15.0" fill="rgb(225,199,45)" rx="2" ry="2" />
<text  x="985.45" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>folly::RequestContext::setContext (5 samples, 0.08%)</title><rect x="178.4" y="1925" width="1.0" height="15.0" fill="rgb(207,223,37)" rx="2" ry="2" />
<text  x="181.37" y="1935.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="1006.2" y="1829" width="0.2" height="15.0" fill="rgb(205,45,35)" rx="2" ry="2" />
<text  x="1009.19" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="557.5" y="1909" width="0.2" height="15.0" fill="rgb(213,219,20)" rx="2" ry="2" />
<text  x="560.46" y="1919.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 0.10%)</title><rect x="210.4" y="1909" width="1.2" height="15.0" fill="rgb(230,2,14)" rx="2" ry="2" />
<text  x="213.43" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (211 samples, 3.54%)</title><rect x="53.9" y="165" width="41.8" height="15.0" fill="rgb(219,2,18)" rx="2" ry="2" />
<text  x="56.92" y="175.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (2 samples, 0.03%)</title><rect x="334.3" y="1989" width="0.4" height="15.0" fill="rgb(228,99,29)" rx="2" ry="2" />
<text  x="337.28" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="308.2" y="1941" width="0.2" height="15.0" fill="rgb(218,14,36)" rx="2" ry="2" />
<text  x="311.17" y="1951.5" ></text>
</g>
<g >
<title>__fdget (10 samples, 0.17%)</title><rect x="267.2" y="1941" width="2.0" height="15.0" fill="rgb(253,17,35)" rx="2" ry="2" />
<text  x="270.21" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="299.9" y="1941" width="0.2" height="15.0" fill="rgb(217,7,29)" rx="2" ry="2" />
<text  x="302.86" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (3 samples, 0.05%)</title><rect x="786.2" y="2005" width="0.6" height="15.0" fill="rgb(228,85,45)" rx="2" ry="2" />
<text  x="789.18" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (38 samples, 0.64%)</title><rect x="284.2" y="1989" width="7.5" height="15.0" fill="rgb(233,224,54)" rx="2" ry="2" />
<text  x="287.23" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="176.2" y="1893" width="0.2" height="15.0" fill="rgb(250,13,46)" rx="2" ry="2" />
<text  x="179.20" y="1903.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="538.5" y="1989" width="0.4" height="15.0" fill="rgb(235,55,32)" rx="2" ry="2" />
<text  x="541.47" y="1999.5" ></text>
</g>
<g >
<title>malloc (21 samples, 0.35%)</title><rect x="186.5" y="2021" width="4.1" height="15.0" fill="rgb(219,147,14)" rx="2" ry="2" />
<text  x="189.49" y="2031.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1006.2" y="1781" width="0.2" height="15.0" fill="rgb(240,139,45)" rx="2" ry="2" />
<text  x="1009.19" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="324.8" y="1989" width="0.2" height="15.0" fill="rgb(207,214,41)" rx="2" ry="2" />
<text  x="327.79" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="172.2" y="1941" width="0.2" height="15.0" fill="rgb(251,133,49)" rx="2" ry="2" />
<text  x="175.24" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(233,194,48)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="222.3" y="1749" width="0.2" height="15.0" fill="rgb(238,183,13)" rx="2" ry="2" />
<text  x="225.30" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="592.7" y="1973" width="1.4" height="15.0" fill="rgb(206,100,22)" rx="2" ry="2" />
<text  x="595.68" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="917" width="42.0" height="15.0" fill="rgb(207,214,0)" rx="2" ry="2" />
<text  x="56.92" y="927.5" >[un..</text>
</g>
<g >
<title>__vdso_clock_gettime (23 samples, 0.39%)</title><rect x="197.0" y="2021" width="4.5" height="15.0" fill="rgb(226,158,25)" rx="2" ry="2" />
<text  x="199.97" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="56.7" y="37" width="0.4" height="15.0" fill="rgb(229,84,42)" rx="2" ry="2" />
<text  x="59.69" y="47.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="234.0" y="1717" width="0.2" height="15.0" fill="rgb(247,69,3)" rx="2" ry="2" />
<text  x="236.97" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (7 samples, 0.12%)</title><rect x="918.0" y="1877" width="1.3" height="15.0" fill="rgb(231,205,50)" rx="2" ry="2" />
<text  x="920.95" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="173.4" y="1989" width="0.2" height="15.0" fill="rgb(211,115,12)" rx="2" ry="2" />
<text  x="176.43" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="485.2" y="1973" width="0.2" height="15.0" fill="rgb(246,186,38)" rx="2" ry="2" />
<text  x="488.24" y="1983.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="157.0" y="1957" width="0.2" height="15.0" fill="rgb(220,155,8)" rx="2" ry="2" />
<text  x="160.01" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="565" width="42.0" height="15.0" fill="rgb(223,61,16)" rx="2" ry="2" />
<text  x="56.92" y="575.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (16 samples, 0.27%)</title><rect x="858.8" y="2005" width="3.2" height="15.0" fill="rgb(239,60,54)" rx="2" ry="2" />
<text  x="861.79" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (15 samples, 0.25%)</title><rect x="828.5" y="1989" width="3.0" height="15.0" fill="rgb(250,14,6)" rx="2" ry="2" />
<text  x="831.52" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="424.3" y="1973" width="0.8" height="15.0" fill="rgb(228,143,8)" rx="2" ry="2" />
<text  x="427.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (5 samples, 0.08%)</title><rect x="79.4" y="53" width="1.0" height="15.0" fill="rgb(239,222,13)" rx="2" ry="2" />
<text  x="82.45" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="338.2" y="1877" width="3.8" height="15.0" fill="rgb(250,179,48)" rx="2" ry="2" />
<text  x="341.24" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (9 samples, 0.15%)</title><rect x="576.3" y="1973" width="1.7" height="15.0" fill="rgb(211,174,15)" rx="2" ry="2" />
<text  x="579.26" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="319.0" y="1989" width="0.2" height="15.0" fill="rgb(231,196,15)" rx="2" ry="2" />
<text  x="322.05" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (11 samples, 0.18%)</title><rect x="164.3" y="1957" width="2.2" height="15.0" fill="rgb(253,186,44)" rx="2" ry="2" />
<text  x="167.33" y="1967.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="191.2" y="2021" width="0.4" height="15.0" fill="rgb(245,61,48)" rx="2" ry="2" />
<text  x="194.23" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="550.3" y="1925" width="0.2" height="15.0" fill="rgb(214,9,1)" rx="2" ry="2" />
<text  x="553.34" y="1935.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1130.4" y="2005" width="0.2" height="15.0" fill="rgb(247,194,39)" rx="2" ry="2" />
<text  x="1133.45" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="334.3" y="2005" width="0.4" height="15.0" fill="rgb(234,207,26)" rx="2" ry="2" />
<text  x="337.28" y="2015.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(240,194,52)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="292.5" y="1909" width="0.2" height="15.0" fill="rgb(246,148,41)" rx="2" ry="2" />
<text  x="295.54" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (19 samples, 0.32%)</title><rect x="74.9" y="37" width="3.8" height="15.0" fill="rgb(227,124,27)" rx="2" ry="2" />
<text  x="77.90" y="47.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="837" width="42.0" height="15.0" fill="rgb(207,185,14)" rx="2" ry="2" />
<text  x="56.92" y="847.5" >[un..</text>
</g>
<g >
<title>_raw_spin_lock (9 samples, 0.15%)</title><rect x="253.0" y="1685" width="1.7" height="15.0" fill="rgb(211,182,46)" rx="2" ry="2" />
<text  x="255.96" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="88.7" y="37" width="0.8" height="15.0" fill="rgb(231,147,52)" rx="2" ry="2" />
<text  x="91.75" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="177.8" y="1893" width="0.6" height="15.0" fill="rgb(209,213,51)" rx="2" ry="2" />
<text  x="180.78" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (4 samples, 0.07%)</title><rect x="636.4" y="1925" width="0.8" height="15.0" fill="rgb(233,219,52)" rx="2" ry="2" />
<text  x="639.41" y="1935.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="899.6" y="1941" width="0.1" height="15.0" fill="rgb(244,205,33)" rx="2" ry="2" />
<text  x="902.55" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="1147.7" y="2053" width="0.2" height="15.0" fill="rgb(245,73,16)" rx="2" ry="2" />
<text  x="1150.66" y="2063.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="214.8" y="1861" width="0.2" height="15.0" fill="rgb(232,62,19)" rx="2" ry="2" />
<text  x="217.78" y="1871.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="614.4" y="1877" width="0.2" height="15.0" fill="rgb(227,147,44)" rx="2" ry="2" />
<text  x="617.44" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1973" width="42.0" height="15.0" fill="rgb(225,224,51)" rx="2" ry="2" />
<text  x="56.92" y="1983.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="596.4" y="2005" width="0.4" height="15.0" fill="rgb(217,104,36)" rx="2" ry="2" />
<text  x="599.44" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (39 samples, 0.65%)</title><rect x="561.2" y="2037" width="7.7" height="15.0" fill="rgb(241,189,44)" rx="2" ry="2" />
<text  x="564.22" y="2047.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="277.3" y="1893" width="0.6" height="15.0" fill="rgb(224,85,15)" rx="2" ry="2" />
<text  x="280.30" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="453.6" y="1925" width="0.2" height="15.0" fill="rgb(229,38,46)" rx="2" ry="2" />
<text  x="456.59" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="551.3" y="1909" width="0.2" height="15.0" fill="rgb(206,73,33)" rx="2" ry="2" />
<text  x="554.33" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="614.4" y="1973" width="0.2" height="15.0" fill="rgb(244,229,33)" rx="2" ry="2" />
<text  x="617.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="174.8" y="2021" width="0.4" height="15.0" fill="rgb(209,81,0)" rx="2" ry="2" />
<text  x="177.81" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="885" width="42.0" height="15.0" fill="rgb(241,149,29)" rx="2" ry="2" />
<text  x="56.92" y="895.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="346.2" y="2005" width="3.5" height="15.0" fill="rgb(223,108,19)" rx="2" ry="2" />
<text  x="349.15" y="2015.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1073.3" y="1749" width="0.2" height="15.0" fill="rgb(221,186,0)" rx="2" ry="2" />
<text  x="1076.27" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (7 samples, 0.12%)</title><rect x="612.9" y="1989" width="1.3" height="15.0" fill="rgb(250,102,40)" rx="2" ry="2" />
<text  x="615.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="589.7" y="1973" width="0.2" height="15.0" fill="rgb(236,61,0)" rx="2" ry="2" />
<text  x="592.71" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (15 samples, 0.25%)</title><rect x="21.7" y="1989" width="2.9" height="15.0" fill="rgb(216,20,23)" rx="2" ry="2" />
<text  x="24.67" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="581.0" y="1957" width="0.2" height="15.0" fill="rgb(208,8,38)" rx="2" ry="2" />
<text  x="584.01" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="11.4" y="1909" width="1.0" height="15.0" fill="rgb(221,141,3)" rx="2" ry="2" />
<text  x="14.38" y="1919.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="930.4" y="1989" width="0.2" height="15.0" fill="rgb(212,94,26)" rx="2" ry="2" />
<text  x="933.42" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="771.1" y="1989" width="0.4" height="15.0" fill="rgb(232,159,50)" rx="2" ry="2" />
<text  x="774.14" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="684.9" y="1893" width="0.4" height="15.0" fill="rgb(222,111,0)" rx="2" ry="2" />
<text  x="687.88" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (27 samples, 0.45%)</title><rect x="354.1" y="1989" width="5.3" height="15.0" fill="rgb(230,99,33)" rx="2" ry="2" />
<text  x="357.07" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="827.3" y="1957" width="0.2" height="15.0" fill="rgb(250,211,18)" rx="2" ry="2" />
<text  x="830.33" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1047.1" y="1797" width="0.2" height="15.0" fill="rgb(231,46,15)" rx="2" ry="2" />
<text  x="1050.15" y="1807.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (263 samples, 4.41%)</title><rect x="281.9" y="2005" width="52.0" height="15.0" fill="rgb(209,189,22)" rx="2" ry="2" />
<text  x="284.85" y="2015.5" >folly..</text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="695.4" y="1909" width="0.4" height="15.0" fill="rgb(225,224,10)" rx="2" ry="2" />
<text  x="698.37" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="162.5" y="2021" width="0.2" height="15.0" fill="rgb(218,96,4)" rx="2" ry="2" />
<text  x="165.55" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="445.3" y="1909" width="0.4" height="15.0" fill="rgb(235,1,33)" rx="2" ry="2" />
<text  x="448.28" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="207.3" y="1957" width="0.2" height="15.0" fill="rgb(216,73,31)" rx="2" ry="2" />
<text  x="210.26" y="1967.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="222.5" y="1861" width="0.4" height="15.0" fill="rgb(249,174,16)" rx="2" ry="2" />
<text  x="225.49" y="1871.5" ></text>
</g>
<g >
<title>___sys_sendmsg (302 samples, 5.06%)</title><rect x="207.5" y="1957" width="59.7" height="15.0" fill="rgb(222,108,21)" rx="2" ry="2" />
<text  x="210.46" y="1967.5" >___sys..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="179.0" y="1909" width="0.4" height="15.0" fill="rgb(249,146,8)" rx="2" ry="2" />
<text  x="181.97" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="635.6" y="1925" width="0.2" height="15.0" fill="rgb(254,142,1)" rx="2" ry="2" />
<text  x="638.61" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="571.3" y="1973" width="0.6" height="15.0" fill="rgb(238,95,48)" rx="2" ry="2" />
<text  x="574.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (284 samples, 4.76%)</title><rect x="485.2" y="2005" width="56.2" height="15.0" fill="rgb(230,49,29)" rx="2" ry="2" />
<text  x="488.24" y="2015.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="349.3" y="1957" width="0.4" height="15.0" fill="rgb(211,103,30)" rx="2" ry="2" />
<text  x="352.32" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1173" width="42.0" height="15.0" fill="rgb(207,174,4)" rx="2" ry="2" />
<text  x="56.92" y="1183.5" >[un..</text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="93.1" y="69" width="0.6" height="15.0" fill="rgb(245,163,13)" rx="2" ry="2" />
<text  x="96.10" y="79.5" ></text>
</g>
<g >
<title>[unknown] (209 samples, 3.50%)</title><rect x="53.9" y="101" width="41.4" height="15.0" fill="rgb(216,79,22)" rx="2" ry="2" />
<text  x="56.92" y="111.5" >[un..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="569.1" y="2021" width="0.6" height="15.0" fill="rgb(228,121,27)" rx="2" ry="2" />
<text  x="572.13" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="194.6" y="1973" width="0.2" height="15.0" fill="rgb(230,188,9)" rx="2" ry="2" />
<text  x="197.60" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (164 samples, 2.75%)</title><rect x="1112.4" y="2053" width="32.5" height="15.0" fill="rgb(208,189,35)" rx="2" ry="2" />
<text  x="1115.44" y="2063.5" >fa..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="635.6" y="1909" width="0.2" height="15.0" fill="rgb(222,136,15)" rx="2" ry="2" />
<text  x="638.61" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="158.8" y="2005" width="0.2" height="15.0" fill="rgb(228,77,54)" rx="2" ry="2" />
<text  x="161.79" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1108.5" y="2021" width="0.2" height="15.0" fill="rgb(254,58,11)" rx="2" ry="2" />
<text  x="1111.48" y="2031.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="581.0" y="1845" width="0.2" height="15.0" fill="rgb(213,183,53)" rx="2" ry="2" />
<text  x="584.01" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="167.7" y="2021" width="0.4" height="15.0" fill="rgb(238,174,21)" rx="2" ry="2" />
<text  x="170.69" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="547.2" y="1941" width="0.4" height="15.0" fill="rgb(220,81,49)" rx="2" ry="2" />
<text  x="550.17" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (380 samples, 6.37%)</title><rect x="623.0" y="1989" width="75.1" height="15.0" fill="rgb(217,0,44)" rx="2" ry="2" />
<text  x="625.95" y="1999.5" >folly::f..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="309" width="42.0" height="15.0" fill="rgb(229,185,15)" rx="2" ry="2" />
<text  x="56.92" y="319.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (40 samples, 0.67%)</title><rect x="526.8" y="1973" width="7.9" height="15.0" fill="rgb(241,191,33)" rx="2" ry="2" />
<text  x="529.79" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="684.1" y="1877" width="0.6" height="15.0" fill="rgb(229,197,12)" rx="2" ry="2" />
<text  x="687.09" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="629" width="42.0" height="15.0" fill="rgb(229,52,34)" rx="2" ry="2" />
<text  x="56.92" y="639.5" >[un..</text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="325.0" y="1989" width="0.2" height="15.0" fill="rgb(238,79,8)" rx="2" ry="2" />
<text  x="327.98" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="485.2" y="1989" width="0.2" height="15.0" fill="rgb(238,70,40)" rx="2" ry="2" />
<text  x="488.24" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="175.6" y="1941" width="2.0" height="15.0" fill="rgb(247,152,25)" rx="2" ry="2" />
<text  x="178.60" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (2 samples, 0.03%)</title><rect x="484.8" y="2037" width="0.4" height="15.0" fill="rgb(215,20,10)" rx="2" ry="2" />
<text  x="487.85" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="597.8" y="2005" width="0.4" height="15.0" fill="rgb(223,70,3)" rx="2" ry="2" />
<text  x="600.82" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="1160.1" y="2053" width="0.2" height="15.0" fill="rgb(211,136,41)" rx="2" ry="2" />
<text  x="1163.12" y="2063.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="444.5" y="1781" width="0.8" height="15.0" fill="rgb(237,18,32)" rx="2" ry="2" />
<text  x="447.49" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="298.1" y="1957" width="0.4" height="15.0" fill="rgb(254,41,53)" rx="2" ry="2" />
<text  x="301.08" y="1967.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (2 samples, 0.03%)</title><rect x="318.5" y="1989" width="0.3" height="15.0" fill="rgb(237,76,13)" rx="2" ry="2" />
<text  x="321.45" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="459.7" y="1957" width="0.4" height="15.0" fill="rgb(226,73,26)" rx="2" ry="2" />
<text  x="462.72" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (4 samples, 0.07%)</title><rect x="981.1" y="2037" width="0.8" height="15.0" fill="rgb(247,222,8)" rx="2" ry="2" />
<text  x="984.07" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (20 samples, 0.34%)</title><rect x="1086.9" y="1925" width="4.0" height="15.0" fill="rgb(242,9,48)" rx="2" ry="2" />
<text  x="1089.92" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="992.3" y="1893" width="0.2" height="15.0" fill="rgb(239,123,11)" rx="2" ry="2" />
<text  x="995.34" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="605.1" y="2021" width="0.2" height="15.0" fill="rgb(234,220,12)" rx="2" ry="2" />
<text  x="608.14" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="207.3" y="1989" width="0.2" height="15.0" fill="rgb(235,84,49)" rx="2" ry="2" />
<text  x="210.26" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (23 samples, 0.39%)</title><rect x="170.1" y="2005" width="4.5" height="15.0" fill="rgb(225,103,0)" rx="2" ry="2" />
<text  x="173.06" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (23 samples, 0.39%)</title><rect x="455.6" y="1989" width="4.5" height="15.0" fill="rgb(233,24,37)" rx="2" ry="2" />
<text  x="458.57" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (50 samples, 0.84%)</title><rect x="485.4" y="1989" width="9.9" height="15.0" fill="rgb(243,28,10)" rx="2" ry="2" />
<text  x="488.44" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="115.5" y="1973" width="0.5" height="15.0" fill="rgb(233,141,39)" rx="2" ry="2" />
<text  x="118.46" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1068.9" y="1893" width="0.2" height="15.0" fill="rgb(250,146,34)" rx="2" ry="2" />
<text  x="1071.91" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="53.9" y="37" width="0.2" height="15.0" fill="rgb(210,120,47)" rx="2" ry="2" />
<text  x="56.92" y="47.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (5 samples, 0.08%)</title><rect x="695.8" y="1941" width="1.0" height="15.0" fill="rgb(234,137,41)" rx="2" ry="2" />
<text  x="698.76" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="616.6" y="1973" width="0.6" height="15.0" fill="rgb(254,117,34)" rx="2" ry="2" />
<text  x="619.62" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="661" width="42.0" height="15.0" fill="rgb(246,202,7)" rx="2" ry="2" />
<text  x="56.92" y="671.5" >[un..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (9 samples, 0.15%)</title><rect x="639.4" y="1941" width="1.8" height="15.0" fill="rgb(241,171,31)" rx="2" ry="2" />
<text  x="642.37" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="812.1" y="1989" width="1.4" height="15.0" fill="rgb(251,35,26)" rx="2" ry="2" />
<text  x="815.10" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="163.9" y="1989" width="0.2" height="15.0" fill="rgb(218,162,16)" rx="2" ry="2" />
<text  x="166.93" y="1999.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="1048.5" y="1845" width="0.2" height="15.0" fill="rgb(214,103,33)" rx="2" ry="2" />
<text  x="1051.53" y="1855.5" ></text>
</g>
<g >
<title>skb_try_coalesce (1 samples, 0.02%)</title><rect x="1048.5" y="1829" width="0.2" height="15.0" fill="rgb(233,177,24)" rx="2" ry="2" />
<text  x="1051.53" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2 samples, 0.03%)</title><rect x="353.5" y="1957" width="0.4" height="15.0" fill="rgb(238,72,18)" rx="2" ry="2" />
<text  x="356.47" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="315.5" y="1957" width="0.2" height="15.0" fill="rgb(247,193,24)" rx="2" ry="2" />
<text  x="318.49" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (8 samples, 0.13%)</title><rect x="1145.9" y="2005" width="1.6" height="15.0" fill="rgb(225,200,39)" rx="2" ry="2" />
<text  x="1148.88" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="814.5" y="1909" width="0.2" height="15.0" fill="rgb(216,160,47)" rx="2" ry="2" />
<text  x="817.47" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1621" width="42.0" height="15.0" fill="rgb(209,20,14)" rx="2" ry="2" />
<text  x="56.92" y="1631.5" >[un..</text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="360.6" y="1989" width="0.2" height="15.0" fill="rgb(222,99,44)" rx="2" ry="2" />
<text  x="363.60" y="1999.5" ></text>
</g>
<g >
<title>malloc (44 samples, 0.74%)</title><rect x="1180.5" y="2053" width="8.7" height="15.0" fill="rgb(245,227,20)" rx="2" ry="2" />
<text  x="1183.50" y="2063.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="11.4" y="1893" width="1.0" height="15.0" fill="rgb(249,197,6)" rx="2" ry="2" />
<text  x="14.38" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (4 samples, 0.07%)</title><rect x="1170.8" y="2053" width="0.8" height="15.0" fill="rgb(224,165,41)" rx="2" ry="2" />
<text  x="1173.81" y="2063.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="617.8" y="1989" width="0.4" height="15.0" fill="rgb(211,188,15)" rx="2" ry="2" />
<text  x="620.81" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="997" width="42.0" height="15.0" fill="rgb(246,127,19)" rx="2" ry="2" />
<text  x="56.92" y="1007.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="170.5" y="1989" width="0.4" height="15.0" fill="rgb(206,226,3)" rx="2" ry="2" />
<text  x="173.46" y="1999.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="444.5" y="1845" width="0.8" height="15.0" fill="rgb(220,44,32)" rx="2" ry="2" />
<text  x="447.49" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="175.8" y="1925" width="0.2" height="15.0" fill="rgb(253,81,37)" rx="2" ry="2" />
<text  x="178.80" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (111 samples, 1.86%)</title><rect x="235.0" y="1765" width="21.9" height="15.0" fill="rgb(254,69,47)" rx="2" ry="2" />
<text  x="237.96" y="1775.5" >i..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="202.3" y="2021" width="0.2" height="15.0" fill="rgb(217,136,14)" rx="2" ry="2" />
<text  x="205.31" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="317.5" y="1973" width="0.4" height="15.0" fill="rgb(224,123,21)" rx="2" ry="2" />
<text  x="320.46" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="443.7" y="1925" width="0.4" height="15.0" fill="rgb(221,121,3)" rx="2" ry="2" />
<text  x="446.70" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="909.4" y="1877" width="0.2" height="15.0" fill="rgb(243,171,33)" rx="2" ry="2" />
<text  x="912.44" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (237 samples, 3.97%)</title><rect x="425.1" y="2037" width="46.9" height="15.0" fill="rgb(250,131,20)" rx="2" ry="2" />
<text  x="428.10" y="2047.5" >face..</text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="11.4" y="1973" width="1.0" height="15.0" fill="rgb(231,118,54)" rx="2" ry="2" />
<text  x="14.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="605.3" y="2037" width="0.4" height="15.0" fill="rgb(205,62,0)" rx="2" ry="2" />
<text  x="608.34" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="614.4" y="1957" width="0.2" height="15.0" fill="rgb(242,187,39)" rx="2" ry="2" />
<text  x="617.44" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="574.5" y="1941" width="0.4" height="15.0" fill="rgb(205,184,48)" rx="2" ry="2" />
<text  x="577.48" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="899.9" y="1989" width="0.2" height="15.0" fill="rgb(237,124,39)" rx="2" ry="2" />
<text  x="902.95" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="546.4" y="1893" width="0.2" height="15.0" fill="rgb(205,154,54)" rx="2" ry="2" />
<text  x="549.38" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (5 samples, 0.08%)</title><rect x="178.4" y="1941" width="1.0" height="15.0" fill="rgb(245,90,24)" rx="2" ry="2" />
<text  x="181.37" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="550.5" y="1925" width="0.2" height="15.0" fill="rgb(227,135,33)" rx="2" ry="2" />
<text  x="553.54" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="924.5" y="1909" width="0.2" height="15.0" fill="rgb(252,174,3)" rx="2" ry="2" />
<text  x="927.48" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (17 samples, 0.29%)</title><rect x="896.0" y="1941" width="3.4" height="15.0" fill="rgb(223,143,15)" rx="2" ry="2" />
<text  x="898.99" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1109.7" y="2053" width="0.2" height="15.0" fill="rgb(226,34,50)" rx="2" ry="2" />
<text  x="1112.67" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="166.5" y="1957" width="0.2" height="15.0" fill="rgb(215,67,52)" rx="2" ry="2" />
<text  x="169.50" y="1967.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="581.0" y="1813" width="0.2" height="15.0" fill="rgb(222,28,44)" rx="2" ry="2" />
<text  x="584.01" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="162.0" y="2021" width="0.1" height="15.0" fill="rgb(252,123,3)" rx="2" ry="2" />
<text  x="164.95" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1493" width="42.0" height="15.0" fill="rgb(246,172,32)" rx="2" ry="2" />
<text  x="56.92" y="1503.5" >[un..</text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="10.2" y="1877" width="1.0" height="15.0" fill="rgb(212,175,50)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="682.7" y="1861" width="0.6" height="15.0" fill="rgb(248,80,41)" rx="2" ry="2" />
<text  x="685.70" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="169.3" y="2005" width="0.2" height="15.0" fill="rgb(218,56,7)" rx="2" ry="2" />
<text  x="172.27" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="207.3" y="1893" width="0.2" height="15.0" fill="rgb(221,212,37)" rx="2" ry="2" />
<text  x="210.26" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (75 samples, 1.26%)</title><rect x="236.5" y="1477" width="14.9" height="15.0" fill="rgb(245,99,14)" rx="2" ry="2" />
<text  x="239.54" y="1487.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="376.2" y="2005" width="0.4" height="15.0" fill="rgb(237,31,27)" rx="2" ry="2" />
<text  x="379.23" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (20 samples, 0.34%)</title><rect x="763.8" y="1989" width="4.0" height="15.0" fill="rgb(239,99,44)" rx="2" ry="2" />
<text  x="766.82" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (10 samples, 0.17%)</title><rect x="267.2" y="1925" width="2.0" height="15.0" fill="rgb(214,58,3)" rx="2" ry="2" />
<text  x="270.21" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="437" width="42.0" height="15.0" fill="rgb(205,12,33)" rx="2" ry="2" />
<text  x="56.92" y="447.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="57.9" y="37" width="0.2" height="15.0" fill="rgb(243,109,13)" rx="2" ry="2" />
<text  x="60.88" y="47.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="283.8" y="1989" width="0.2" height="15.0" fill="rgb(232,135,17)" rx="2" ry="2" />
<text  x="286.83" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="277" width="42.0" height="15.0" fill="rgb(243,43,9)" rx="2" ry="2" />
<text  x="56.92" y="287.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (35 samples, 0.59%)</title><rect x="676.6" y="1877" width="6.9" height="15.0" fill="rgb(233,100,7)" rx="2" ry="2" />
<text  x="679.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1765" width="42.0" height="15.0" fill="rgb(246,204,22)" rx="2" ry="2" />
<text  x="56.92" y="1775.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (66 samples, 1.11%)</title><rect x="440.7" y="1941" width="13.1" height="15.0" fill="rgb(235,229,3)" rx="2" ry="2" />
<text  x="443.73" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (552 samples, 9.26%)</title><rect x="984.4" y="1989" width="109.2" height="15.0" fill="rgb(232,70,1)" rx="2" ry="2" />
<text  x="987.43" y="1999.5" >SYSC_recvfrom</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="559.4" y="1989" width="0.4" height="15.0" fill="rgb(213,135,18)" rx="2" ry="2" />
<text  x="562.44" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (9 samples, 0.15%)</title><rect x="347.9" y="1989" width="1.8" height="15.0" fill="rgb(225,189,35)" rx="2" ry="2" />
<text  x="350.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="478.7" y="2005" width="0.8" height="15.0" fill="rgb(254,97,16)" rx="2" ry="2" />
<text  x="481.72" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1073.3" y="1781" width="0.2" height="15.0" fill="rgb(224,1,21)" rx="2" ry="2" />
<text  x="1076.27" y="1791.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (4 samples, 0.07%)</title><rect x="696.8" y="1941" width="0.7" height="15.0" fill="rgb(250,35,52)" rx="2" ry="2" />
<text  x="699.75" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="418.6" y="1989" width="0.4" height="15.0" fill="rgb(241,3,44)" rx="2" ry="2" />
<text  x="421.57" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (173 samples, 2.90%)</title><rect x="652.4" y="1909" width="34.3" height="15.0" fill="rgb(247,174,0)" rx="2" ry="2" />
<text  x="655.43" y="1919.5" >fo..</text>
</g>
<g >
<title>discard_slab (2 samples, 0.03%)</title><rect x="1024.0" y="1797" width="0.4" height="15.0" fill="rgb(244,145,44)" rx="2" ry="2" />
<text  x="1027.00" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (29 samples, 0.49%)</title><rect x="916.0" y="1909" width="5.7" height="15.0" fill="rgb(245,207,29)" rx="2" ry="2" />
<text  x="918.97" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (22 samples, 0.37%)</title><rect x="506.0" y="1989" width="4.4" height="15.0" fill="rgb(211,55,44)" rx="2" ry="2" />
<text  x="509.02" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14 samples, 0.23%)</title><rect x="694.8" y="1957" width="2.7" height="15.0" fill="rgb(245,26,32)" rx="2" ry="2" />
<text  x="697.77" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (9 samples, 0.15%)</title><rect x="536.7" y="1989" width="1.8" height="15.0" fill="rgb(210,22,28)" rx="2" ry="2" />
<text  x="539.69" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="92.1" y="37" width="0.4" height="15.0" fill="rgb(209,221,17)" rx="2" ry="2" />
<text  x="95.11" y="47.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1477" width="42.0" height="15.0" fill="rgb(213,70,18)" rx="2" ry="2" />
<text  x="56.92" y="1487.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="352.7" y="1941" width="0.2" height="15.0" fill="rgb(252,12,48)" rx="2" ry="2" />
<text  x="355.68" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="557.9" y="1909" width="0.2" height="15.0" fill="rgb(212,167,40)" rx="2" ry="2" />
<text  x="560.86" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="23.1" y="1957" width="0.2" height="15.0" fill="rgb(253,65,40)" rx="2" ry="2" />
<text  x="26.06" y="1967.5" ></text>
</g>
<g >
<title>iov_iter_advance (3 samples, 0.05%)</title><rect x="226.6" y="1861" width="0.6" height="15.0" fill="rgb(233,141,25)" rx="2" ry="2" />
<text  x="229.65" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="814.5" y="1989" width="0.8" height="15.0" fill="rgb(237,119,1)" rx="2" ry="2" />
<text  x="817.47" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="165" width="0.2" height="15.0" fill="rgb(225,3,9)" rx="2" ry="2" />
<text  x="98.67" y="175.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="350.1" y="2005" width="0.2" height="15.0" fill="rgb(233,126,17)" rx="2" ry="2" />
<text  x="353.11" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1042.2" y="1909" width="0.6" height="15.0" fill="rgb(212,146,38)" rx="2" ry="2" />
<text  x="1045.20" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (10 samples, 0.17%)</title><rect x="85.2" y="37" width="2.0" height="15.0" fill="rgb(239,97,18)" rx="2" ry="2" />
<text  x="88.18" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="348.5" y="1973" width="1.2" height="15.0" fill="rgb(234,29,38)" rx="2" ry="2" />
<text  x="351.53" y="1983.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="234.0" y="1685" width="0.2" height="15.0" fill="rgb(252,38,44)" rx="2" ry="2" />
<text  x="236.97" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (10 samples, 0.17%)</title><rect x="562.0" y="2005" width="2.0" height="15.0" fill="rgb(210,201,22)" rx="2" ry="2" />
<text  x="565.01" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1147.5" y="2021" width="0.2" height="15.0" fill="rgb(211,121,10)" rx="2" ry="2" />
<text  x="1150.46" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (15 samples, 0.25%)</title><rect x="916.8" y="1893" width="2.9" height="15.0" fill="rgb(219,92,28)" rx="2" ry="2" />
<text  x="919.76" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="641.9" y="1925" width="0.2" height="15.0" fill="rgb(241,190,5)" rx="2" ry="2" />
<text  x="644.95" y="1935.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="261.1" y="1877" width="0.4" height="15.0" fill="rgb(238,155,49)" rx="2" ry="2" />
<text  x="264.08" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.05%)</title><rect x="1142.9" y="1989" width="0.6" height="15.0" fill="rgb(233,66,30)" rx="2" ry="2" />
<text  x="1145.91" y="1999.5" ></text>
</g>
<g >
<title>page_frag_free (6 samples, 0.10%)</title><rect x="1024.4" y="1861" width="1.2" height="15.0" fill="rgb(210,159,16)" rx="2" ry="2" />
<text  x="1027.40" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="955.9" y="2005" width="0.6" height="15.0" fill="rgb(224,192,17)" rx="2" ry="2" />
<text  x="958.94" y="2015.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (9 samples, 0.15%)</title><rect x="1097.0" y="2053" width="1.8" height="15.0" fill="rgb(214,114,31)" rx="2" ry="2" />
<text  x="1100.01" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="294.9" y="1957" width="0.4" height="15.0" fill="rgb(218,34,11)" rx="2" ry="2" />
<text  x="297.91" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="292.7" y="1973" width="0.2" height="15.0" fill="rgb(223,18,36)" rx="2" ry="2" />
<text  x="295.73" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="179.4" y="1909" width="0.2" height="15.0" fill="rgb(214,111,48)" rx="2" ry="2" />
<text  x="182.36" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (82 samples, 1.37%)</title><rect x="438.4" y="1957" width="16.2" height="15.0" fill="rgb(243,95,26)" rx="2" ry="2" />
<text  x="441.35" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;unsigned long*, __gnu_cxx::__ops::_Iter_pred&lt;folly::fibers::(anonymous namespace)::nonMagicInBytes (1 samples, 0.02%)</title><rect x="914.2" y="1877" width="0.2" height="15.0" fill="rgb(223,122,26)" rx="2" ry="2" />
<text  x="917.19" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="549" width="42.0" height="15.0" fill="rgb(244,20,5)" rx="2" ry="2" />
<text  x="56.92" y="559.5" >[un..</text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1989" width="42.0" height="15.0" fill="rgb(238,57,43)" rx="2" ry="2" />
<text  x="56.92" y="1999.5" >[un..</text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="977.9" y="2005" width="0.4" height="15.0" fill="rgb(247,112,42)" rx="2" ry="2" />
<text  x="980.90" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="556.7" y="1941" width="0.2" height="15.0" fill="rgb(247,226,6)" rx="2" ry="2" />
<text  x="559.67" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1108.5" y="2005" width="0.2" height="15.0" fill="rgb(248,126,36)" rx="2" ry="2" />
<text  x="1111.48" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="355.3" y="1925" width="0.2" height="15.0" fill="rgb(219,212,5)" rx="2" ry="2" />
<text  x="358.25" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1048.7" y="1909" width="0.2" height="15.0" fill="rgb(216,8,33)" rx="2" ry="2" />
<text  x="1051.73" y="1919.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="1143.1" y="1941" width="0.4" height="15.0" fill="rgb(216,83,11)" rx="2" ry="2" />
<text  x="1146.11" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="10.2" y="1845" width="1.0" height="15.0" fill="rgb(241,170,13)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="652.2" y="1909" width="0.2" height="15.0" fill="rgb(208,142,42)" rx="2" ry="2" />
<text  x="655.23" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (37 samples, 0.62%)</title><rect x="284.4" y="1973" width="7.3" height="15.0" fill="rgb(230,117,9)" rx="2" ry="2" />
<text  x="287.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="842.2" y="2021" width="1.8" height="15.0" fill="rgb(212,166,40)" rx="2" ry="2" />
<text  x="845.17" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="831.9" y="2005" width="0.2" height="15.0" fill="rgb(209,74,37)" rx="2" ry="2" />
<text  x="834.88" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (22 samples, 0.37%)</title><rect x="1044.4" y="1893" width="4.3" height="15.0" fill="rgb(230,188,8)" rx="2" ry="2" />
<text  x="1047.38" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="291.9" y="1989" width="0.4" height="15.0" fill="rgb(237,97,23)" rx="2" ry="2" />
<text  x="294.94" y="1999.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (41 samples, 0.69%)</title><rect x="219.1" y="1877" width="8.1" height="15.0" fill="rgb(252,128,33)" rx="2" ry="2" />
<text  x="222.13" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="1333" width="42.0" height="15.0" fill="rgb(225,45,16)" rx="2" ry="2" />
<text  x="56.92" y="1343.5" >[un..</text>
</g>
<g >
<title>malloc (16 samples, 0.27%)</title><rect x="965.4" y="2037" width="3.2" height="15.0" fill="rgb(229,60,44)" rx="2" ry="2" />
<text  x="968.44" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (21 samples, 0.35%)</title><rect x="910.0" y="1893" width="4.2" height="15.0" fill="rgb(218,181,31)" rx="2" ry="2" />
<text  x="913.04" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="481.7" y="2005" width="0.4" height="15.0" fill="rgb(221,49,51)" rx="2" ry="2" />
<text  x="484.68" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="633.0" y="1925" width="0.4" height="15.0" fill="rgb(208,14,38)" rx="2" ry="2" />
<text  x="636.04" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (3 samples, 0.05%)</title><rect x="345.2" y="2005" width="0.6" height="15.0" fill="rgb(241,58,19)" rx="2" ry="2" />
<text  x="348.16" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="373" width="42.0" height="15.0" fill="rgb(238,50,52)" rx="2" ry="2" />
<text  x="56.92" y="383.5" >[un..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="173.6" y="1957" width="0.8" height="15.0" fill="rgb(239,191,43)" rx="2" ry="2" />
<text  x="176.63" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (22 samples, 0.37%)</title><rect x="974.7" y="2037" width="4.4" height="15.0" fill="rgb(215,164,8)" rx="2" ry="2" />
<text  x="977.74" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="444.5" y="1797" width="0.8" height="15.0" fill="rgb(208,136,17)" rx="2" ry="2" />
<text  x="447.49" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="307.8" y="1941" width="0.4" height="15.0" fill="rgb(220,1,31)" rx="2" ry="2" />
<text  x="310.77" y="1951.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (4 samples, 0.07%)</title><rect x="314.3" y="1957" width="0.8" height="15.0" fill="rgb(223,73,39)" rx="2" ry="2" />
<text  x="317.30" y="1967.5" ></text>
</g>
<g >
<title>import_iovec (8 samples, 0.13%)</title><rect x="210.0" y="1925" width="1.6" height="15.0" fill="rgb(228,229,21)" rx="2" ry="2" />
<text  x="213.03" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (3 samples, 0.05%)</title><rect x="159.4" y="2005" width="0.6" height="15.0" fill="rgb(208,87,2)" rx="2" ry="2" />
<text  x="162.38" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="559.8" y="1989" width="0.8" height="15.0" fill="rgb(208,37,49)" rx="2" ry="2" />
<text  x="562.84" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="559.6" y="1973" width="0.2" height="15.0" fill="rgb(244,182,7)" rx="2" ry="2" />
<text  x="562.64" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="453.2" y="1925" width="0.4" height="15.0" fill="rgb(234,17,31)" rx="2" ry="2" />
<text  x="456.19" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="558.1" y="1925" width="0.5" height="15.0" fill="rgb(225,86,37)" rx="2" ry="2" />
<text  x="561.05" y="1935.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1006.2" y="1749" width="0.2" height="15.0" fill="rgb(244,186,52)" rx="2" ry="2" />
<text  x="1009.19" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (212 samples, 3.55%)</title><rect x="53.9" y="757" width="42.0" height="15.0" fill="rgb(206,157,15)" rx="2" ry="2" />
<text  x="56.92" y="767.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="89.5" y="69" width="0.6" height="15.0" fill="rgb(226,86,23)" rx="2" ry="2" />
<text  x="92.54" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (2 samples, 0.03%)</title><rect x="553.5" y="2037" width="0.4" height="15.0" fill="rgb(246,145,48)" rx="2" ry="2" />
<text  x="556.50" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (133 samples, 2.23%)</title><rect x="900.1" y="1989" width="26.4" height="15.0" fill="rgb(233,116,35)" rx="2" ry="2" />
<text  x="903.14" y="1999.5" >f..</text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="174.4" y="1957" width="0.2" height="15.0" fill="rgb(229,112,47)" rx="2" ry="2" />
<text  x="177.42" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1177.7" y="2021" width="0.8" height="15.0" fill="rgb(248,85,48)" rx="2" ry="2" />
<text  x="1180.73" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (210 samples, 3.52%)</title><rect x="53.9" y="117" width="41.6" height="15.0" fill="rgb(208,45,49)" rx="2" ry="2" />
<text  x="56.92" y="127.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="83.8" y="37" width="0.2" height="15.0" fill="rgb(242,51,39)" rx="2" ry="2" />
<text  x="86.80" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="146.7" y="1957" width="1.0" height="15.0" fill="rgb(235,34,45)" rx="2" ry="2" />
<text  x="149.72" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (4 samples, 0.07%)</title><rect x="304.0" y="1957" width="0.8" height="15.0" fill="rgb(242,179,50)" rx="2" ry="2" />
<text  x="307.01" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="828.1" y="2005" width="0.2" height="15.0" fill="rgb(218,4,5)" rx="2" ry="2" />
<text  x="831.13" y="2015.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="909.4" y="1797" width="0.2" height="15.0" fill="rgb(221,13,36)" rx="2" ry="2" />
<text  x="912.44" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="150.7" y="1973" width="0.2" height="15.0" fill="rgb(236,47,46)" rx="2" ry="2" />
<text  x="153.67" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="743.2" y="1893" width="0.2" height="15.0" fill="rgb(230,58,15)" rx="2" ry="2" />
<text  x="746.25" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (9 samples, 0.15%)</title><rect x="477.7" y="2021" width="1.8" height="15.0" fill="rgb(234,185,54)" rx="2" ry="2" />
<text  x="480.73" y="2031.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (12 samples, 0.20%)</title><rect x="874.6" y="1973" width="2.4" height="15.0" fill="rgb(223,178,49)" rx="2" ry="2" />
<text  x="877.62" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="341.6" y="1845" width="0.2" height="15.0" fill="rgb(228,73,0)" rx="2" ry="2" />
<text  x="344.60" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (6 samples, 0.10%)</title><rect x="336.1" y="1941" width="1.2" height="15.0" fill="rgb(216,70,40)" rx="2" ry="2" />
<text  x="339.06" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (81 samples, 1.36%)</title><rect x="1025.6" y="1893" width="16.0" height="15.0" fill="rgb(229,96,29)" rx="2" ry="2" />
<text  x="1028.58" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="547.8" y="1925" width="0.2" height="15.0" fill="rgb(211,172,45)" rx="2" ry="2" />
<text  x="550.77" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (7 samples, 0.12%)</title><rect x="449.4" y="1909" width="1.4" height="15.0" fill="rgb(206,166,52)" rx="2" ry="2" />
<text  x="452.43" y="1919.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="234.0" y="1669" width="0.2" height="15.0" fill="rgb(250,137,20)" rx="2" ry="2" />
<text  x="236.97" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="828.3" y="1989" width="0.2" height="15.0" fill="rgb(211,40,8)" rx="2" ry="2" />
<text  x="831.32" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="345.8" y="2005" width="0.4" height="15.0" fill="rgb(233,45,45)" rx="2" ry="2" />
<text  x="348.76" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (4 samples, 0.07%)</title><rect x="201.5" y="2021" width="0.8" height="15.0" fill="rgb(238,96,5)" rx="2" ry="2" />
<text  x="204.52" y="2031.5" ></text>
</g>
</g>
</svg>
