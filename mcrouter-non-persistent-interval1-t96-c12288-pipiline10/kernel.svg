<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="835.7" y="1637" width="0.2" height="15.0" fill="rgb(239,38,1)" rx="2" ry="2" />
<text  x="838.68" y="1647.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="608.2" y="1829" width="0.2" height="15.0" fill="rgb(227,179,46)" rx="2" ry="2" />
<text  x="611.20" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="308.1" y="1637" width="0.2" height="15.0" fill="rgb(226,168,34)" rx="2" ry="2" />
<text  x="311.10" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="712.6" y="2021" width="0.2" height="15.0" fill="rgb(210,32,38)" rx="2" ry="2" />
<text  x="715.64" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.8" y="2005" width="0.2" height="15.0" fill="rgb(250,102,39)" rx="2" ry="2" />
<text  x="1186.80" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="74.6" y="1781" width="0.2" height="15.0" fill="rgb(251,148,6)" rx="2" ry="2" />
<text  x="77.62" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="470.6" y="1749" width="0.2" height="15.0" fill="rgb(232,47,24)" rx="2" ry="2" />
<text  x="473.56" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="248.7" y="1861" width="0.4" height="15.0" fill="rgb(208,100,41)" rx="2" ry="2" />
<text  x="251.68" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="965.5" y="2005" width="0.2" height="15.0" fill="rgb(250,199,4)" rx="2" ry="2" />
<text  x="968.52" y="2015.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="120.8" y="1733" width="0.2" height="15.0" fill="rgb(218,40,44)" rx="2" ry="2" />
<text  x="123.84" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="986.3" y="1877" width="0.4" height="15.0" fill="rgb(248,46,40)" rx="2" ry="2" />
<text  x="989.33" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="858.5" y="1733" width="0.2" height="15.0" fill="rgb(253,113,23)" rx="2" ry="2" />
<text  x="861.49" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="875.3" y="1701" width="0.2" height="15.0" fill="rgb(233,192,49)" rx="2" ry="2" />
<text  x="878.29" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="680.0" y="1717" width="0.2" height="15.0" fill="rgb(227,21,18)" rx="2" ry="2" />
<text  x="683.03" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="981.7" y="1813" width="0.2" height="15.0" fill="rgb(237,99,4)" rx="2" ry="2" />
<text  x="984.73" y="1823.5" ></text>
</g>
<g >
<title>sys_epoll_wait (80 samples, 1.36%)</title><rect x="509.8" y="1989" width="16.0" height="15.0" fill="rgb(211,65,46)" rx="2" ry="2" />
<text  x="512.77" y="1999.5" ></text>
</g>
<g >
<title>__close (574 samples, 9.73%)</title><rect x="724.8" y="1909" width="114.9" height="15.0" fill="rgb(217,177,39)" rx="2" ry="2" />
<text  x="727.84" y="1919.5" >__close</text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="885" width="15.4" height="15.0" fill="rgb(230,96,5)" rx="2" ry="2" />
<text  x="106.43" y="895.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="577.6" y="1925" width="0.2" height="15.0" fill="rgb(215,216,51)" rx="2" ry="2" />
<text  x="580.59" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="118.4" y="149" width="0.2" height="15.0" fill="rgb(230,75,40)" rx="2" ry="2" />
<text  x="121.44" y="159.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="1091.2" y="1749" width="0.6" height="15.0" fill="rgb(219,113,47)" rx="2" ry="2" />
<text  x="1094.17" y="1759.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="974.1" y="1973" width="0.2" height="15.0" fill="rgb(205,179,23)" rx="2" ry="2" />
<text  x="977.13" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1033.3" y="2005" width="0.2" height="15.0" fill="rgb(232,175,4)" rx="2" ry="2" />
<text  x="1036.35" y="2015.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1102.0" y="1829" width="0.8" height="15.0" fill="rgb(232,33,53)" rx="2" ry="2" />
<text  x="1104.97" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="1110.0" y="1669" width="0.2" height="15.0" fill="rgb(213,195,45)" rx="2" ry="2" />
<text  x="1112.97" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="981.7" y="1765" width="0.2" height="15.0" fill="rgb(222,207,16)" rx="2" ry="2" />
<text  x="984.73" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1146.6" y="2005" width="0.2" height="15.0" fill="rgb(220,221,23)" rx="2" ry="2" />
<text  x="1149.59" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="53.0" y="1749" width="0.2" height="15.0" fill="rgb(246,228,47)" rx="2" ry="2" />
<text  x="56.01" y="1759.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="704.4" y="1589" width="0.2" height="15.0" fill="rgb(240,220,24)" rx="2" ry="2" />
<text  x="707.44" y="1599.5" ></text>
</g>
<g >
<title>accept4 (427 samples, 7.24%)</title><rect x="347.7" y="2037" width="85.4" height="15.0" fill="rgb(241,118,21)" rx="2" ry="2" />
<text  x="350.71" y="2047.5" >accept4</text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="267.5" y="1557" width="0.2" height="15.0" fill="rgb(252,60,49)" rx="2" ry="2" />
<text  x="270.49" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="504.4" y="1925" width="0.2" height="15.0" fill="rgb(251,137,5)" rx="2" ry="2" />
<text  x="507.37" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1093" width="15.6" height="15.0" fill="rgb(251,124,13)" rx="2" ry="2" />
<text  x="106.43" y="1103.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="216.3" y="1845" width="0.8" height="15.0" fill="rgb(248,61,48)" rx="2" ry="2" />
<text  x="219.27" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="400.1" y="1813" width="0.2" height="15.0" fill="rgb(221,10,8)" rx="2" ry="2" />
<text  x="403.13" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="165.3" y="1925" width="0.2" height="15.0" fill="rgb(219,158,41)" rx="2" ry="2" />
<text  x="168.25" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="1149.8" y="1749" width="0.2" height="15.0" fill="rgb(232,177,8)" rx="2" ry="2" />
<text  x="1152.79" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (44 samples, 0.75%)</title><rect x="1111.4" y="1589" width="8.8" height="15.0" fill="rgb(209,42,30)" rx="2" ry="2" />
<text  x="1114.37" y="1599.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="815.3" y="1605" width="0.2" height="15.0" fill="rgb(237,179,36)" rx="2" ry="2" />
<text  x="818.27" y="1615.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="157.7" y="2005" width="0.2" height="15.0" fill="rgb(207,85,5)" rx="2" ry="2" />
<text  x="160.65" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="981.7" y="1925" width="0.2" height="15.0" fill="rgb(224,185,49)" rx="2" ry="2" />
<text  x="984.73" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="933.7" y="1845" width="0.2" height="15.0" fill="rgb(225,81,39)" rx="2" ry="2" />
<text  x="936.71" y="1855.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (39 samples, 0.66%)</title><rect x="1112.2" y="1525" width="7.8" height="15.0" fill="rgb(229,5,38)" rx="2" ry="2" />
<text  x="1115.17" y="1535.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="76.4" y="1877" width="0.2" height="15.0" fill="rgb(233,198,32)" rx="2" ry="2" />
<text  x="79.42" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="167.1" y="2005" width="0.2" height="15.0" fill="rgb(235,25,6)" rx="2" ry="2" />
<text  x="170.05" y="2015.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="811.3" y="1685" width="0.2" height="15.0" fill="rgb(220,193,39)" rx="2" ry="2" />
<text  x="814.27" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="633.8" y="2021" width="1.8" height="15.0" fill="rgb(250,198,51)" rx="2" ry="2" />
<text  x="636.81" y="2031.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="78.2" y="1733" width="0.8" height="15.0" fill="rgb(247,125,4)" rx="2" ry="2" />
<text  x="81.22" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="663.2" y="2037" width="0.2" height="15.0" fill="rgb(205,193,12)" rx="2" ry="2" />
<text  x="666.22" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="875.3" y="1941" width="0.2" height="15.0" fill="rgb(211,150,44)" rx="2" ry="2" />
<text  x="878.29" y="1951.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="623.4" y="1573" width="0.2" height="15.0" fill="rgb(243,200,46)" rx="2" ry="2" />
<text  x="626.41" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="854.9" y="1765" width="0.2" height="15.0" fill="rgb(230,153,27)" rx="2" ry="2" />
<text  x="857.89" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="854.3" y="1813" width="0.4" height="15.0" fill="rgb(214,164,47)" rx="2" ry="2" />
<text  x="857.29" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.0" y="1973" width="0.2" height="15.0" fill="rgb(237,87,2)" rx="2" ry="2" />
<text  x="35.01" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (9 samples, 0.15%)</title><rect x="783.1" y="1621" width="1.8" height="15.0" fill="rgb(211,77,53)" rx="2" ry="2" />
<text  x="786.06" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="150.6" y="1781" width="0.2" height="15.0" fill="rgb(207,145,46)" rx="2" ry="2" />
<text  x="153.65" y="1791.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="802.3" y="1525" width="0.2" height="15.0" fill="rgb(224,27,45)" rx="2" ry="2" />
<text  x="805.27" y="1535.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="340.9" y="1941" width="0.2" height="15.0" fill="rgb(251,11,48)" rx="2" ry="2" />
<text  x="343.91" y="1951.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="854.9" y="1701" width="0.2" height="15.0" fill="rgb(238,160,9)" rx="2" ry="2" />
<text  x="857.89" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="66.6" y="1749" width="0.2" height="15.0" fill="rgb(251,226,24)" rx="2" ry="2" />
<text  x="69.62" y="1759.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="12.6" y="2053" width="1.0" height="15.0" fill="rgb(248,145,28)" rx="2" ry="2" />
<text  x="15.60" y="2063.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="384.3" y="1909" width="0.4" height="15.0" fill="rgb(218,93,26)" rx="2" ry="2" />
<text  x="387.33" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="859.5" y="1941" width="0.2" height="15.0" fill="rgb(207,50,39)" rx="2" ry="2" />
<text  x="862.49" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="359.5" y="1813" width="0.2" height="15.0" fill="rgb(246,114,9)" rx="2" ry="2" />
<text  x="362.52" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="739.4" y="1701" width="0.2" height="15.0" fill="rgb(211,38,33)" rx="2" ry="2" />
<text  x="742.45" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.1" y="1813" width="0.2" height="15.0" fill="rgb(212,139,32)" rx="2" ry="2" />
<text  x="844.08" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="180.5" y="2005" width="0.2" height="15.0" fill="rgb(236,86,23)" rx="2" ry="2" />
<text  x="183.46" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="271.9" y="1733" width="0.4" height="15.0" fill="rgb(218,140,4)" rx="2" ry="2" />
<text  x="274.89" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="211.5" y="1733" width="0.2" height="15.0" fill="rgb(250,161,11)" rx="2" ry="2" />
<text  x="214.47" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="175.5" y="1925" width="0.2" height="15.0" fill="rgb(205,160,7)" rx="2" ry="2" />
<text  x="178.46" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="847.7" y="1829" width="0.2" height="15.0" fill="rgb(225,143,3)" rx="2" ry="2" />
<text  x="850.68" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1110.6" y="1589" width="0.2" height="15.0" fill="rgb(238,154,29)" rx="2" ry="2" />
<text  x="1113.57" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (27 samples, 0.46%)</title><rect x="636.2" y="2037" width="5.4" height="15.0" fill="rgb(241,136,41)" rx="2" ry="2" />
<text  x="639.21" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="268.5" y="1861" width="0.2" height="15.0" fill="rgb(230,226,41)" rx="2" ry="2" />
<text  x="271.49" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="256.5" y="1701" width="0.2" height="15.0" fill="rgb(253,56,35)" rx="2" ry="2" />
<text  x="259.48" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="249.1" y="1829" width="0.2" height="15.0" fill="rgb(251,65,51)" rx="2" ry="2" />
<text  x="252.08" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1091.2" y="1909" width="0.6" height="15.0" fill="rgb(235,138,5)" rx="2" ry="2" />
<text  x="1094.17" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="664.0" y="1973" width="0.2" height="15.0" fill="rgb(247,151,12)" rx="2" ry="2" />
<text  x="667.02" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="541.0" y="1973" width="0.2" height="15.0" fill="rgb(245,62,29)" rx="2" ry="2" />
<text  x="543.98" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (394 samples, 6.68%)</title><rect x="351.1" y="2021" width="78.8" height="15.0" fill="rgb(229,69,2)" rx="2" ry="2" />
<text  x="354.12" y="2031.5" >entry_SYS..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="916.5" y="1813" width="0.2" height="15.0" fill="rgb(251,224,13)" rx="2" ry="2" />
<text  x="919.51" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="626.2" y="1781" width="0.2" height="15.0" fill="rgb(217,78,7)" rx="2" ry="2" />
<text  x="629.21" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1054.4" y="1925" width="0.2" height="15.0" fill="rgb(245,147,48)" rx="2" ry="2" />
<text  x="1057.35" y="1935.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(250,19,17)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (21 samples, 0.36%)</title><rect x="146.4" y="1909" width="4.2" height="15.0" fill="rgb(237,16,13)" rx="2" ry="2" />
<text  x="149.45" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="1091.6" y="1637" width="0.2" height="15.0" fill="rgb(208,207,27)" rx="2" ry="2" />
<text  x="1094.57" y="1647.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="150.6" y="1621" width="0.2" height="15.0" fill="rgb(241,65,4)" rx="2" ry="2" />
<text  x="153.65" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="565.6" y="1765" width="0.2" height="15.0" fill="rgb(228,45,30)" rx="2" ry="2" />
<text  x="568.59" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.1" y="1861" width="0.2" height="15.0" fill="rgb(248,200,15)" rx="2" ry="2" />
<text  x="844.08" y="1871.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (2 samples, 0.03%)</title><rect x="1181.0" y="2053" width="0.4" height="15.0" fill="rgb(241,92,29)" rx="2" ry="2" />
<text  x="1184.00" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.9" y="1909" width="0.2" height="15.0" fill="rgb(237,213,7)" rx="2" ry="2" />
<text  x="160.85" y="1919.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="219.5" y="1813" width="0.8" height="15.0" fill="rgb(224,99,0)" rx="2" ry="2" />
<text  x="222.47" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1126.2" y="1797" width="0.2" height="15.0" fill="rgb(249,65,35)" rx="2" ry="2" />
<text  x="1129.18" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="408.1" y="1845" width="0.2" height="15.0" fill="rgb(231,103,17)" rx="2" ry="2" />
<text  x="411.13" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="12.6" y="2037" width="1.0" height="15.0" fill="rgb(235,141,19)" rx="2" ry="2" />
<text  x="15.60" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.4" y="341" width="0.2" height="15.0" fill="rgb(215,226,18)" rx="2" ry="2" />
<text  x="121.44" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="611.6" y="1877" width="0.2" height="15.0" fill="rgb(252,157,51)" rx="2" ry="2" />
<text  x="614.60" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="638.4" y="2005" width="0.2" height="15.0" fill="rgb(235,226,18)" rx="2" ry="2" />
<text  x="641.41" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="565" width="15.2" height="15.0" fill="rgb(239,190,33)" rx="2" ry="2" />
<text  x="106.43" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="592.8" y="1989" width="0.2" height="15.0" fill="rgb(211,103,22)" rx="2" ry="2" />
<text  x="595.80" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="942.5" y="1973" width="0.4" height="15.0" fill="rgb(217,153,42)" rx="2" ry="2" />
<text  x="945.52" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="590.4" y="1941" width="0.2" height="15.0" fill="rgb(206,227,52)" rx="2" ry="2" />
<text  x="593.40" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="754.1" y="1685" width="0.2" height="15.0" fill="rgb(229,125,52)" rx="2" ry="2" />
<text  x="757.05" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1020.3" y="2005" width="0.2" height="15.0" fill="rgb(230,23,53)" rx="2" ry="2" />
<text  x="1023.34" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.6" y="1973" width="0.2" height="15.0" fill="rgb(254,44,48)" rx="2" ry="2" />
<text  x="127.64" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="977.9" y="1957" width="1.4" height="15.0" fill="rgb(235,73,52)" rx="2" ry="2" />
<text  x="980.93" y="1967.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.6" y="1925" width="0.2" height="15.0" fill="rgb(214,151,27)" rx="2" ry="2" />
<text  x="105.63" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (374 samples, 6.34%)</title><rect x="18.8" y="2037" width="74.8" height="15.0" fill="rgb(247,195,33)" rx="2" ry="2" />
<text  x="21.80" y="2047.5" >folly::E..</text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="773.5" y="1669" width="0.4" height="15.0" fill="rgb(219,23,52)" rx="2" ry="2" />
<text  x="776.46" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="969.1" y="1909" width="0.4" height="15.0" fill="rgb(249,4,24)" rx="2" ry="2" />
<text  x="972.13" y="1919.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(244,99,22)" rx="2" ry="2" />
<text  x="15.40" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onWriteQuiescence (1 samples, 0.02%)</title><rect x="718.8" y="1989" width="0.2" height="15.0" fill="rgb(229,154,14)" rx="2" ry="2" />
<text  x="721.84" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="10.2" y="2021" width="0.8" height="15.0" fill="rgb(216,121,26)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="1139.0" y="1733" width="0.2" height="15.0" fill="rgb(243,27,31)" rx="2" ry="2" />
<text  x="1141.98" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="913.5" y="1957" width="0.2" height="15.0" fill="rgb(233,65,32)" rx="2" ry="2" />
<text  x="916.51" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (1 samples, 0.02%)</title><rect x="21.4" y="2005" width="0.2" height="15.0" fill="rgb(222,175,34)" rx="2" ry="2" />
<text  x="24.40" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="544.8" y="1989" width="0.2" height="15.0" fill="rgb(233,70,28)" rx="2" ry="2" />
<text  x="547.78" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="74.6" y="1829" width="0.2" height="15.0" fill="rgb(246,215,20)" rx="2" ry="2" />
<text  x="77.62" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="336.7" y="1765" width="0.2" height="15.0" fill="rgb(213,156,21)" rx="2" ry="2" />
<text  x="339.71" y="1775.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="755.5" y="1685" width="0.2" height="15.0" fill="rgb(208,171,41)" rx="2" ry="2" />
<text  x="758.45" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="53.0" y="1813" width="0.2" height="15.0" fill="rgb(249,189,47)" rx="2" ry="2" />
<text  x="56.01" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="848.3" y="1909" width="0.8" height="15.0" fill="rgb(228,160,42)" rx="2" ry="2" />
<text  x="851.28" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="641.4" y="1925" width="0.2" height="15.0" fill="rgb(209,43,54)" rx="2" ry="2" />
<text  x="644.41" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="853.3" y="1717" width="0.2" height="15.0" fill="rgb(239,225,11)" rx="2" ry="2" />
<text  x="856.29" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="647.4" y="1701" width="0.2" height="15.0" fill="rgb(221,68,39)" rx="2" ry="2" />
<text  x="650.42" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="223.1" y="1829" width="0.2" height="15.0" fill="rgb(249,171,46)" rx="2" ry="2" />
<text  x="226.07" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="686.2" y="1973" width="0.2" height="15.0" fill="rgb(231,170,12)" rx="2" ry="2" />
<text  x="689.23" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="656.4" y="1957" width="0.2" height="15.0" fill="rgb(239,80,48)" rx="2" ry="2" />
<text  x="659.42" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1049.6" y="1941" width="0.2" height="15.0" fill="rgb(205,47,36)" rx="2" ry="2" />
<text  x="1052.55" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="879.5" y="1781" width="0.2" height="15.0" fill="rgb(248,70,17)" rx="2" ry="2" />
<text  x="882.49" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.4" y="1845" width="0.2" height="15.0" fill="rgb(222,72,46)" rx="2" ry="2" />
<text  x="74.42" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (43 samples, 0.73%)</title><rect x="212.7" y="1909" width="8.6" height="15.0" fill="rgb(219,1,49)" rx="2" ry="2" />
<text  x="215.67" y="1919.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="121.0" y="1749" width="0.2" height="15.0" fill="rgb(243,225,42)" rx="2" ry="2" />
<text  x="124.04" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="887.7" y="1893" width="0.2" height="15.0" fill="rgb(223,95,28)" rx="2" ry="2" />
<text  x="890.70" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="993.3" y="1925" width="0.2" height="15.0" fill="rgb(236,150,53)" rx="2" ry="2" />
<text  x="996.33" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="583.0" y="1781" width="0.2" height="15.0" fill="rgb(252,208,34)" rx="2" ry="2" />
<text  x="585.99" y="1791.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="656.0" y="1957" width="0.2" height="15.0" fill="rgb(233,162,22)" rx="2" ry="2" />
<text  x="659.02" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="169.1" y="1957" width="0.4" height="15.0" fill="rgb(211,67,7)" rx="2" ry="2" />
<text  x="172.05" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="182.7" y="2005" width="0.2" height="15.0" fill="rgb(219,196,43)" rx="2" ry="2" />
<text  x="185.66" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="267.5" y="1797" width="0.4" height="15.0" fill="rgb(235,22,50)" rx="2" ry="2" />
<text  x="270.49" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="565.8" y="1733" width="0.2" height="15.0" fill="rgb(243,155,21)" rx="2" ry="2" />
<text  x="568.79" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (12 samples, 0.20%)</title><rect x="558.8" y="1973" width="2.4" height="15.0" fill="rgb(239,159,53)" rx="2" ry="2" />
<text  x="561.79" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="969.3" y="1781" width="0.2" height="15.0" fill="rgb(240,88,2)" rx="2" ry="2" />
<text  x="972.33" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="400.1" y="1877" width="0.2" height="15.0" fill="rgb(233,60,38)" rx="2" ry="2" />
<text  x="403.13" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="197" width="14.6" height="15.0" fill="rgb(243,110,42)" rx="2" ry="2" />
<text  x="106.43" y="207.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="518.8" y="1621" width="0.4" height="15.0" fill="rgb(254,159,37)" rx="2" ry="2" />
<text  x="521.77" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (38 samples, 0.64%)</title><rect x="618.6" y="1925" width="7.6" height="15.0" fill="rgb(207,57,54)" rx="2" ry="2" />
<text  x="621.61" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="428.5" y="1733" width="0.2" height="15.0" fill="rgb(248,19,22)" rx="2" ry="2" />
<text  x="431.54" y="1743.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="859.7" y="1957" width="0.2" height="15.0" fill="rgb(254,176,7)" rx="2" ry="2" />
<text  x="862.69" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (7 samples, 0.12%)</title><rect x="1145.6" y="2053" width="1.4" height="15.0" fill="rgb(250,188,38)" rx="2" ry="2" />
<text  x="1148.58" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="189.9" y="1845" width="0.4" height="15.0" fill="rgb(237,201,10)" rx="2" ry="2" />
<text  x="192.86" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="259.5" y="1813" width="0.2" height="15.0" fill="rgb(233,86,42)" rx="2" ry="2" />
<text  x="262.48" y="1823.5" ></text>
</g>
<g >
<title>new_slab (5 samples, 0.08%)</title><rect x="414.1" y="1861" width="1.0" height="15.0" fill="rgb(219,30,8)" rx="2" ry="2" />
<text  x="417.14" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (5 samples, 0.08%)</title><rect x="168.5" y="1989" width="1.0" height="15.0" fill="rgb(211,150,19)" rx="2" ry="2" />
<text  x="171.45" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.42%)</title><rect x="956.5" y="2021" width="5.0" height="15.0" fill="rgb(214,57,15)" rx="2" ry="2" />
<text  x="959.52" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1067.8" y="1493" width="0.2" height="15.0" fill="rgb(223,37,51)" rx="2" ry="2" />
<text  x="1070.76" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1178.0" y="1973" width="0.2" height="15.0" fill="rgb(210,229,16)" rx="2" ry="2" />
<text  x="1181.00" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="512.0" y="1909" width="0.2" height="15.0" fill="rgb(241,106,40)" rx="2" ry="2" />
<text  x="514.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1110.6" y="1557" width="0.2" height="15.0" fill="rgb(237,93,21)" rx="2" ry="2" />
<text  x="1113.57" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="336.7" y="1941" width="0.2" height="15.0" fill="rgb(243,5,4)" rx="2" ry="2" />
<text  x="339.71" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="583.0" y="1845" width="0.2" height="15.0" fill="rgb(239,43,20)" rx="2" ry="2" />
<text  x="585.99" y="1855.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="357.3" y="1669" width="0.2" height="15.0" fill="rgb(209,45,18)" rx="2" ry="2" />
<text  x="360.32" y="1679.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="408.3" y="1893" width="0.2" height="15.0" fill="rgb(243,195,47)" rx="2" ry="2" />
<text  x="411.34" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="760.1" y="1653" width="0.2" height="15.0" fill="rgb(242,55,31)" rx="2" ry="2" />
<text  x="763.05" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1016.1" y="2021" width="0.2" height="15.0" fill="rgb(230,159,8)" rx="2" ry="2" />
<text  x="1019.14" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="843.5" y="1861" width="0.2" height="15.0" fill="rgb(245,19,29)" rx="2" ry="2" />
<text  x="846.48" y="1871.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1189.0" y="1717" width="0.2" height="15.0" fill="rgb(245,97,45)" rx="2" ry="2" />
<text  x="1192.00" y="1727.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="68.6" y="1877" width="0.2" height="15.0" fill="rgb(226,99,35)" rx="2" ry="2" />
<text  x="71.62" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1120.2" y="1749" width="0.2" height="15.0" fill="rgb(232,118,21)" rx="2" ry="2" />
<text  x="1123.18" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="890.1" y="1797" width="0.2" height="15.0" fill="rgb(253,168,23)" rx="2" ry="2" />
<text  x="893.10" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="373" width="15.2" height="15.0" fill="rgb(206,95,34)" rx="2" ry="2" />
<text  x="106.43" y="383.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="835.7" y="1669" width="0.2" height="15.0" fill="rgb(240,112,19)" rx="2" ry="2" />
<text  x="838.68" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="588.2" y="1925" width="0.2" height="15.0" fill="rgb(223,216,13)" rx="2" ry="2" />
<text  x="591.20" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="961.7" y="2005" width="0.2" height="15.0" fill="rgb(215,221,34)" rx="2" ry="2" />
<text  x="964.72" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1067.8" y="1605" width="0.2" height="15.0" fill="rgb(253,164,28)" rx="2" ry="2" />
<text  x="1070.76" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (6 samples, 0.10%)</title><rect x="146.8" y="1893" width="1.2" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="149.85" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="853.3" y="1813" width="0.2" height="15.0" fill="rgb(208,77,33)" rx="2" ry="2" />
<text  x="856.29" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="880.7" y="1941" width="0.6" height="15.0" fill="rgb(211,23,24)" rx="2" ry="2" />
<text  x="883.70" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="103.0" y="1637" width="17.6" height="15.0" fill="rgb(222,58,3)" rx="2" ry="2" />
<text  x="106.03" y="1647.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="584.2" y="1973" width="0.6" height="15.0" fill="rgb(209,170,14)" rx="2" ry="2" />
<text  x="587.19" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="120.4" y="1381" width="0.2" height="15.0" fill="rgb(226,11,53)" rx="2" ry="2" />
<text  x="123.44" y="1391.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(243,37,9)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="853.9" y="1829" width="0.2" height="15.0" fill="rgb(205,43,5)" rx="2" ry="2" />
<text  x="856.89" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="278.7" y="1541" width="0.2" height="15.0" fill="rgb(214,129,18)" rx="2" ry="2" />
<text  x="281.69" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="576.0" y="1701" width="0.2" height="15.0" fill="rgb(210,122,48)" rx="2" ry="2" />
<text  x="578.99" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="916.5" y="1797" width="0.2" height="15.0" fill="rgb(245,25,9)" rx="2" ry="2" />
<text  x="919.51" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="483.6" y="1637" width="0.2" height="15.0" fill="rgb(209,84,49)" rx="2" ry="2" />
<text  x="486.56" y="1647.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="560.4" y="1813" width="0.2" height="15.0" fill="rgb(230,59,31)" rx="2" ry="2" />
<text  x="563.39" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (2 samples, 0.03%)</title><rect x="896.5" y="2005" width="0.4" height="15.0" fill="rgb(222,159,44)" rx="2" ry="2" />
<text  x="899.50" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="889.1" y="1637" width="0.2" height="15.0" fill="rgb(219,13,12)" rx="2" ry="2" />
<text  x="892.10" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1150.6" y="2053" width="0.2" height="15.0" fill="rgb(205,47,8)" rx="2" ry="2" />
<text  x="1153.59" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="684.0" y="1989" width="0.2" height="15.0" fill="rgb(231,214,16)" rx="2" ry="2" />
<text  x="687.03" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="860.1" y="1909" width="0.2" height="15.0" fill="rgb(251,53,43)" rx="2" ry="2" />
<text  x="863.09" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="811.5" y="1685" width="0.2" height="15.0" fill="rgb(223,202,28)" rx="2" ry="2" />
<text  x="814.47" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="482.8" y="1861" width="0.6" height="15.0" fill="rgb(205,200,34)" rx="2" ry="2" />
<text  x="485.76" y="1871.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (2 samples, 0.03%)</title><rect x="264.3" y="1781" width="0.4" height="15.0" fill="rgb(230,229,49)" rx="2" ry="2" />
<text  x="267.29" y="1791.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="12.6" y="1893" width="0.8" height="15.0" fill="rgb(207,207,13)" rx="2" ry="2" />
<text  x="15.60" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="223.1" y="1781" width="0.2" height="15.0" fill="rgb(222,27,38)" rx="2" ry="2" />
<text  x="226.07" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (690 samples, 11.70%)</title><rect x="721.6" y="1957" width="138.1" height="15.0" fill="rgb(226,185,8)" rx="2" ry="2" />
<text  x="724.64" y="1967.5" >folly::AsyncSocke..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="144.0" y="1877" width="0.6" height="15.0" fill="rgb(250,57,53)" rx="2" ry="2" />
<text  x="147.05" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="264.7" y="1765" width="0.2" height="15.0" fill="rgb(242,62,43)" rx="2" ry="2" />
<text  x="267.69" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="531.8" y="1941" width="0.2" height="15.0" fill="rgb(216,188,34)" rx="2" ry="2" />
<text  x="534.78" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="603.4" y="1733" width="0.2" height="15.0" fill="rgb(236,18,51)" rx="2" ry="2" />
<text  x="606.40" y="1743.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (4 samples, 0.07%)</title><rect x="1004.5" y="2005" width="0.8" height="15.0" fill="rgb(209,19,51)" rx="2" ry="2" />
<text  x="1007.54" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.58%)</title><rect x="102.8" y="1797" width="18.6" height="15.0" fill="rgb(252,147,31)" rx="2" ry="2" />
<text  x="105.83" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1110.0" y="1861" width="0.2" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="1112.97" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="831.9" y="1781" width="0.2" height="15.0" fill="rgb(238,161,21)" rx="2" ry="2" />
<text  x="834.88" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2 samples, 0.03%)</title><rect x="1177.8" y="1989" width="0.4" height="15.0" fill="rgb(227,105,27)" rx="2" ry="2" />
<text  x="1180.80" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="143.6" y="1925" width="0.2" height="15.0" fill="rgb(241,178,15)" rx="2" ry="2" />
<text  x="146.65" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="667.6" y="1957" width="0.4" height="15.0" fill="rgb(207,141,6)" rx="2" ry="2" />
<text  x="670.62" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="519.0" y="1573" width="0.2" height="15.0" fill="rgb(220,0,0)" rx="2" ry="2" />
<text  x="521.97" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="710.8" y="2005" width="1.2" height="15.0" fill="rgb(211,111,36)" rx="2" ry="2" />
<text  x="713.84" y="2015.5" ></text>
</g>
<g >
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="1125.6" y="1573" width="0.2" height="15.0" fill="rgb(243,187,52)" rx="2" ry="2" />
<text  x="1128.58" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1125.6" y="1685" width="0.2" height="15.0" fill="rgb(207,49,32)" rx="2" ry="2" />
<text  x="1128.58" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1068.6" y="1909" width="0.2" height="15.0" fill="rgb(236,68,7)" rx="2" ry="2" />
<text  x="1071.56" y="1919.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1018.7" y="2037" width="0.2" height="15.0" fill="rgb(247,144,32)" rx="2" ry="2" />
<text  x="1021.74" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="890.9" y="1989" width="0.2" height="15.0" fill="rgb(247,18,6)" rx="2" ry="2" />
<text  x="893.90" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="32.0" y="1909" width="0.2" height="15.0" fill="rgb(240,43,38)" rx="2" ry="2" />
<text  x="35.01" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="542.6" y="1973" width="0.2" height="15.0" fill="rgb(249,54,27)" rx="2" ry="2" />
<text  x="545.58" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.4" y="1925" width="0.3" height="15.0" fill="rgb(252,42,14)" rx="2" ry="2" />
<text  x="160.45" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="60.6" y="1861" width="0.8" height="15.0" fill="rgb(210,153,10)" rx="2" ry="2" />
<text  x="63.62" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="603.4" y="1877" width="0.2" height="15.0" fill="rgb(229,162,45)" rx="2" ry="2" />
<text  x="606.40" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="103.0" y="1333" width="16.4" height="15.0" fill="rgb(237,97,47)" rx="2" ry="2" />
<text  x="106.03" y="1343.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="558.6" y="1973" width="0.2" height="15.0" fill="rgb(228,123,52)" rx="2" ry="2" />
<text  x="561.59" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="157.9" y="1781" width="0.2" height="15.0" fill="rgb(217,100,8)" rx="2" ry="2" />
<text  x="160.85" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (7 samples, 0.12%)</title><rect x="898.7" y="2037" width="1.4" height="15.0" fill="rgb(252,101,10)" rx="2" ry="2" />
<text  x="901.70" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.4" y="277" width="0.2" height="15.0" fill="rgb(236,35,27)" rx="2" ry="2" />
<text  x="121.44" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (7 samples, 0.12%)</title><rect x="82.8" y="1941" width="1.4" height="15.0" fill="rgb(221,24,22)" rx="2" ry="2" />
<text  x="85.82" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="359.5" y="1765" width="0.2" height="15.0" fill="rgb(218,224,54)" rx="2" ry="2" />
<text  x="362.52" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="272.9" y="1797" width="0.2" height="15.0" fill="rgb(230,106,25)" rx="2" ry="2" />
<text  x="275.89" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (4 samples, 0.07%)</title><rect x="1006.1" y="2005" width="0.8" height="15.0" fill="rgb(205,189,51)" rx="2" ry="2" />
<text  x="1009.14" y="2015.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="915.1" y="2005" width="0.2" height="15.0" fill="rgb(206,80,6)" rx="2" ry="2" />
<text  x="918.11" y="2015.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="306.7" y="1749" width="0.2" height="15.0" fill="rgb(241,65,2)" rx="2" ry="2" />
<text  x="309.70" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="890.5" y="1957" width="0.2" height="15.0" fill="rgb(211,70,29)" rx="2" ry="2" />
<text  x="893.50" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.1" y="1765" width="0.2" height="15.0" fill="rgb(231,82,27)" rx="2" ry="2" />
<text  x="844.08" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="483.6" y="1781" width="0.2" height="15.0" fill="rgb(213,217,18)" rx="2" ry="2" />
<text  x="486.56" y="1791.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="424.9" y="1893" width="0.2" height="15.0" fill="rgb(225,5,9)" rx="2" ry="2" />
<text  x="427.94" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="36.6" y="1973" width="0.8" height="15.0" fill="rgb(205,144,41)" rx="2" ry="2" />
<text  x="39.61" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="578.6" y="1829" width="0.2" height="15.0" fill="rgb(211,193,36)" rx="2" ry="2" />
<text  x="581.59" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="97.8" y="1797" width="0.2" height="15.0" fill="rgb(213,30,28)" rx="2" ry="2" />
<text  x="100.83" y="1807.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="421.1" y="1877" width="0.8" height="15.0" fill="rgb(245,119,41)" rx="2" ry="2" />
<text  x="424.14" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="741" width="15.4" height="15.0" fill="rgb(225,165,5)" rx="2" ry="2" />
<text  x="106.43" y="751.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (14 samples, 0.24%)</title><rect x="555.2" y="1989" width="2.8" height="15.0" fill="rgb(248,42,26)" rx="2" ry="2" />
<text  x="558.18" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="628.8" y="2005" width="0.2" height="15.0" fill="rgb(235,211,36)" rx="2" ry="2" />
<text  x="631.81" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="955.7" y="1989" width="0.2" height="15.0" fill="rgb(250,70,21)" rx="2" ry="2" />
<text  x="958.72" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="809.7" y="1541" width="0.4" height="15.0" fill="rgb(235,117,31)" rx="2" ry="2" />
<text  x="812.67" y="1551.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="810.1" y="1669" width="0.4" height="15.0" fill="rgb(248,215,54)" rx="2" ry="2" />
<text  x="813.07" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="565.8" y="1765" width="0.2" height="15.0" fill="rgb(236,228,28)" rx="2" ry="2" />
<text  x="568.79" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="752.5" y="1525" width="0.2" height="15.0" fill="rgb(220,3,35)" rx="2" ry="2" />
<text  x="755.45" y="1535.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(220,215,20)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="105.6" y="37" width="0.2" height="15.0" fill="rgb(211,32,27)" rx="2" ry="2" />
<text  x="108.63" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1146.4" y="1973" width="0.2" height="15.0" fill="rgb(233,185,39)" rx="2" ry="2" />
<text  x="1149.39" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="737.8" y="1781" width="0.2" height="15.0" fill="rgb(225,186,31)" rx="2" ry="2" />
<text  x="740.85" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="256.5" y="1829" width="0.2" height="15.0" fill="rgb(236,87,30)" rx="2" ry="2" />
<text  x="259.48" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="211.5" y="1669" width="0.2" height="15.0" fill="rgb(242,19,22)" rx="2" ry="2" />
<text  x="214.47" y="1679.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="246.7" y="1893" width="0.2" height="15.0" fill="rgb(224,1,45)" rx="2" ry="2" />
<text  x="249.68" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="829.9" y="1733" width="0.2" height="15.0" fill="rgb(230,160,16)" rx="2" ry="2" />
<text  x="832.88" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="483.6" y="1429" width="0.2" height="15.0" fill="rgb(245,225,39)" rx="2" ry="2" />
<text  x="486.56" y="1439.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="843.7" y="1733" width="0.2" height="15.0" fill="rgb(248,194,9)" rx="2" ry="2" />
<text  x="846.68" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="716.4" y="1973" width="0.2" height="15.0" fill="rgb(232,68,38)" rx="2" ry="2" />
<text  x="719.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (2 samples, 0.03%)</title><rect x="175.3" y="2021" width="0.4" height="15.0" fill="rgb(254,46,40)" rx="2" ry="2" />
<text  x="178.26" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1016.1" y="1925" width="0.2" height="15.0" fill="rgb(225,182,39)" rx="2" ry="2" />
<text  x="1019.14" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="755.5" y="1717" width="0.2" height="15.0" fill="rgb(253,53,8)" rx="2" ry="2" />
<text  x="758.45" y="1727.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="578.6" y="1637" width="0.2" height="15.0" fill="rgb(227,189,13)" rx="2" ry="2" />
<text  x="581.59" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="834.1" y="1653" width="0.2" height="15.0" fill="rgb(237,169,50)" rx="2" ry="2" />
<text  x="837.08" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="126.2" y="1797" width="0.4" height="15.0" fill="rgb(234,229,6)" rx="2" ry="2" />
<text  x="129.24" y="1807.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.10%)</title><rect x="314.7" y="1829" width="1.2" height="15.0" fill="rgb(242,22,21)" rx="2" ry="2" />
<text  x="317.70" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1149.8" y="1813" width="0.2" height="15.0" fill="rgb(220,184,12)" rx="2" ry="2" />
<text  x="1152.79" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="84.8" y="1749" width="0.2" height="15.0" fill="rgb(236,120,53)" rx="2" ry="2" />
<text  x="87.83" y="1759.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="120.4" y="1269" width="0.2" height="15.0" fill="rgb(250,227,1)" rx="2" ry="2" />
<text  x="123.44" y="1279.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="590.4" y="1925" width="0.2" height="15.0" fill="rgb(221,70,22)" rx="2" ry="2" />
<text  x="593.40" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="860.1" y="1925" width="0.2" height="15.0" fill="rgb(242,208,45)" rx="2" ry="2" />
<text  x="863.09" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (37 samples, 0.63%)</title><rect x="992.9" y="2021" width="7.4" height="15.0" fill="rgb(251,222,13)" rx="2" ry="2" />
<text  x="995.93" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="854.5" y="1797" width="0.2" height="15.0" fill="rgb(249,182,21)" rx="2" ry="2" />
<text  x="857.49" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="339.7" y="1701" width="0.2" height="15.0" fill="rgb(207,82,43)" rx="2" ry="2" />
<text  x="342.71" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="766.1" y="1717" width="0.2" height="15.0" fill="rgb(241,222,54)" rx="2" ry="2" />
<text  x="769.06" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="663.0" y="2005" width="0.2" height="15.0" fill="rgb(209,0,19)" rx="2" ry="2" />
<text  x="666.02" y="2015.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="752.1" y="1637" width="0.4" height="15.0" fill="rgb(215,86,22)" rx="2" ry="2" />
<text  x="755.05" y="1647.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="887.5" y="1877" width="0.2" height="15.0" fill="rgb(209,82,15)" rx="2" ry="2" />
<text  x="890.50" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.58%)</title><rect x="102.8" y="1781" width="18.6" height="15.0" fill="rgb(224,167,28)" rx="2" ry="2" />
<text  x="105.83" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="129.8" y="1925" width="0.4" height="15.0" fill="rgb(214,57,23)" rx="2" ry="2" />
<text  x="132.84" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (2 samples, 0.03%)</title><rect x="1166.4" y="2053" width="0.4" height="15.0" fill="rgb(244,229,17)" rx="2" ry="2" />
<text  x="1169.39" y="2063.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="755.5" y="1701" width="0.2" height="15.0" fill="rgb(243,190,15)" rx="2" ry="2" />
<text  x="758.45" y="1711.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="935.3" y="1637" width="0.2" height="15.0" fill="rgb(221,58,2)" rx="2" ry="2" />
<text  x="938.31" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="1167.4" y="2053" width="0.2" height="15.0" fill="rgb(214,51,31)" rx="2" ry="2" />
<text  x="1170.39" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.4" y="293" width="0.2" height="15.0" fill="rgb(246,44,40)" rx="2" ry="2" />
<text  x="121.44" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="624.0" y="1829" width="0.2" height="15.0" fill="rgb(223,152,6)" rx="2" ry="2" />
<text  x="627.01" y="1839.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="312.7" y="1685" width="0.2" height="15.0" fill="rgb(226,18,29)" rx="2" ry="2" />
<text  x="315.70" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (5 samples, 0.08%)</title><rect x="657.4" y="2005" width="1.0" height="15.0" fill="rgb(253,115,49)" rx="2" ry="2" />
<text  x="660.42" y="2015.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1175.8" y="1941" width="0.2" height="15.0" fill="rgb(251,29,22)" rx="2" ry="2" />
<text  x="1178.80" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="264.1" y="1813" width="0.6" height="15.0" fill="rgb(208,6,15)" rx="2" ry="2" />
<text  x="267.09" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="565.8" y="1877" width="0.2" height="15.0" fill="rgb(228,119,12)" rx="2" ry="2" />
<text  x="568.79" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="975.5" y="1973" width="0.4" height="15.0" fill="rgb(241,80,41)" rx="2" ry="2" />
<text  x="978.53" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="384.5" y="1717" width="0.2" height="15.0" fill="rgb(223,217,32)" rx="2" ry="2" />
<text  x="387.53" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="118.6" y="309" width="0.2" height="15.0" fill="rgb(254,152,0)" rx="2" ry="2" />
<text  x="121.64" y="319.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="212.1" y="1877" width="0.4" height="15.0" fill="rgb(245,147,4)" rx="2" ry="2" />
<text  x="215.07" y="1887.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="817.7" y="1717" width="0.2" height="15.0" fill="rgb(212,64,38)" rx="2" ry="2" />
<text  x="820.67" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="753.9" y="1541" width="0.2" height="15.0" fill="rgb(205,222,45)" rx="2" ry="2" />
<text  x="756.85" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="408.1" y="1829" width="0.2" height="15.0" fill="rgb(214,120,3)" rx="2" ry="2" />
<text  x="411.13" y="1839.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="321.3" y="1733" width="0.2" height="15.0" fill="rgb(208,82,21)" rx="2" ry="2" />
<text  x="324.31" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="53.0" y="1733" width="0.2" height="15.0" fill="rgb(241,52,21)" rx="2" ry="2" />
<text  x="56.01" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (5 samples, 0.08%)</title><rect x="1165.4" y="2053" width="1.0" height="15.0" fill="rgb(226,190,49)" rx="2" ry="2" />
<text  x="1168.39" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="144.2" y="1861" width="0.4" height="15.0" fill="rgb(246,178,6)" rx="2" ry="2" />
<text  x="147.25" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="975.1" y="1973" width="0.2" height="15.0" fill="rgb(209,108,16)" rx="2" ry="2" />
<text  x="978.13" y="1983.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="225.1" y="2037" width="0.2" height="15.0" fill="rgb(213,8,34)" rx="2" ry="2" />
<text  x="228.07" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="712.4" y="1909" width="0.2" height="15.0" fill="rgb(254,197,9)" rx="2" ry="2" />
<text  x="715.44" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="402.7" y="1893" width="0.2" height="15.0" fill="rgb(236,26,6)" rx="2" ry="2" />
<text  x="405.73" y="1903.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="360.3" y="1957" width="0.4" height="15.0" fill="rgb(218,78,35)" rx="2" ry="2" />
<text  x="363.32" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (4 samples, 0.07%)</title><rect x="138.8" y="1957" width="0.8" height="15.0" fill="rgb(206,227,49)" rx="2" ry="2" />
<text  x="141.84" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1144.4" y="1973" width="0.2" height="15.0" fill="rgb(226,168,19)" rx="2" ry="2" />
<text  x="1147.38" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="853.7" y="1893" width="0.4" height="15.0" fill="rgb(209,13,8)" rx="2" ry="2" />
<text  x="856.69" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1131.4" y="1893" width="0.8" height="15.0" fill="rgb(236,196,27)" rx="2" ry="2" />
<text  x="1134.38" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (3 samples, 0.05%)</title><rect x="141.6" y="1941" width="0.6" height="15.0" fill="rgb(213,213,10)" rx="2" ry="2" />
<text  x="144.64" y="1951.5" ></text>
</g>
<g >
<title>move_addr_to_user (5 samples, 0.08%)</title><rect x="392.9" y="1957" width="1.0" height="15.0" fill="rgb(223,182,2)" rx="2" ry="2" />
<text  x="395.93" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="531.8" y="1717" width="0.2" height="15.0" fill="rgb(239,129,42)" rx="2" ry="2" />
<text  x="534.78" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="942.9" y="1957" width="0.2" height="15.0" fill="rgb(211,159,1)" rx="2" ry="2" />
<text  x="945.92" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="697.6" y="1717" width="0.2" height="15.0" fill="rgb(224,101,26)" rx="2" ry="2" />
<text  x="700.63" y="1727.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (129 samples, 2.19%)</title><rect x="198.5" y="2037" width="25.8" height="15.0" fill="rgb(223,79,27)" rx="2" ry="2" />
<text  x="201.46" y="2047.5" >_..</text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="504.6" y="1925" width="0.2" height="15.0" fill="rgb(217,208,13)" rx="2" ry="2" />
<text  x="507.57" y="1935.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.03%)</title><rect x="755.3" y="1797" width="0.4" height="15.0" fill="rgb(254,10,20)" rx="2" ry="2" />
<text  x="758.25" y="1807.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (12 samples, 0.20%)</title><rect x="256.7" y="1877" width="2.4" height="15.0" fill="rgb(209,169,27)" rx="2" ry="2" />
<text  x="259.68" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (3 samples, 0.05%)</title><rect x="587.2" y="1973" width="0.6" height="15.0" fill="rgb(246,103,27)" rx="2" ry="2" />
<text  x="590.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="66.6" y="1701" width="0.2" height="15.0" fill="rgb(234,90,38)" rx="2" ry="2" />
<text  x="69.62" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1067.8" y="1621" width="0.2" height="15.0" fill="rgb(236,6,34)" rx="2" ry="2" />
<text  x="1070.76" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.4" y="1877" width="0.2" height="15.0" fill="rgb(210,162,12)" rx="2" ry="2" />
<text  x="74.42" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1054.4" y="1813" width="0.2" height="15.0" fill="rgb(237,109,11)" rx="2" ry="2" />
<text  x="1057.35" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1091.4" y="1733" width="0.4" height="15.0" fill="rgb(222,183,15)" rx="2" ry="2" />
<text  x="1094.37" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="470.6" y="1925" width="0.2" height="15.0" fill="rgb(208,206,6)" rx="2" ry="2" />
<text  x="473.56" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1125.6" y="1717" width="0.2" height="15.0" fill="rgb(251,115,36)" rx="2" ry="2" />
<text  x="1128.58" y="1727.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="534.2" y="1957" width="0.2" height="15.0" fill="rgb(231,9,29)" rx="2" ry="2" />
<text  x="537.18" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="575.8" y="1877" width="0.4" height="15.0" fill="rgb(224,49,1)" rx="2" ry="2" />
<text  x="578.79" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="363.5" y="1765" width="0.2" height="15.0" fill="rgb(252,207,9)" rx="2" ry="2" />
<text  x="366.52" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="913.3" y="2005" width="0.6" height="15.0" fill="rgb(236,156,49)" rx="2" ry="2" />
<text  x="916.31" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="400.1" y="1893" width="0.2" height="15.0" fill="rgb(206,172,45)" rx="2" ry="2" />
<text  x="403.13" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1178.8" y="1957" width="0.2" height="15.0" fill="rgb(231,33,44)" rx="2" ry="2" />
<text  x="1181.80" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="913.5" y="1973" width="0.2" height="15.0" fill="rgb(219,55,20)" rx="2" ry="2" />
<text  x="916.51" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="70.8" y="1909" width="0.2" height="15.0" fill="rgb(233,175,21)" rx="2" ry="2" />
<text  x="73.82" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="307.9" y="1765" width="0.4" height="15.0" fill="rgb(242,1,41)" rx="2" ry="2" />
<text  x="310.90" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="995.7" y="1973" width="0.2" height="15.0" fill="rgb(214,31,23)" rx="2" ry="2" />
<text  x="998.73" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.0" y="1989" width="0.2" height="15.0" fill="rgb(231,161,34)" rx="2" ry="2" />
<text  x="35.01" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1685" width="0.2" height="15.0" fill="rgb(231,109,14)" rx="2" ry="2" />
<text  x="259.48" y="1695.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="576.0" y="1669" width="0.2" height="15.0" fill="rgb(222,157,50)" rx="2" ry="2" />
<text  x="578.99" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="359.5" y="1909" width="0.2" height="15.0" fill="rgb(223,62,43)" rx="2" ry="2" />
<text  x="362.52" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="85.2" y="1909" width="0.2" height="15.0" fill="rgb(222,225,9)" rx="2" ry="2" />
<text  x="88.23" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (94 samples, 1.59%)</title><rect x="138.8" y="2005" width="18.9" height="15.0" fill="rgb(244,150,1)" rx="2" ry="2" />
<text  x="141.84" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1178.0" y="1941" width="0.2" height="15.0" fill="rgb(215,150,32)" rx="2" ry="2" />
<text  x="1181.00" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="470.6" y="1685" width="0.2" height="15.0" fill="rgb(237,210,11)" rx="2" ry="2" />
<text  x="473.56" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1149.8" y="1861" width="0.2" height="15.0" fill="rgb(242,19,30)" rx="2" ry="2" />
<text  x="1152.79" y="1871.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1149.8" y="1733" width="0.2" height="15.0" fill="rgb(215,150,5)" rx="2" ry="2" />
<text  x="1152.79" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="633.8" y="1941" width="0.2" height="15.0" fill="rgb(251,75,49)" rx="2" ry="2" />
<text  x="636.81" y="1951.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="967.5" y="2037" width="0.2" height="15.0" fill="rgb(232,79,45)" rx="2" ry="2" />
<text  x="970.52" y="2047.5" ></text>
</g>
<g >
<title>ep_send_events_proc (79 samples, 1.34%)</title><rect x="510.0" y="1941" width="15.8" height="15.0" fill="rgb(252,99,0)" rx="2" ry="2" />
<text  x="512.97" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="313.3" y="1813" width="0.6" height="15.0" fill="rgb(237,214,39)" rx="2" ry="2" />
<text  x="316.30" y="1823.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="943.5" y="1877" width="0.2" height="15.0" fill="rgb(254,51,13)" rx="2" ry="2" />
<text  x="946.52" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1024.5" y="2021" width="0.2" height="15.0" fill="rgb(249,116,25)" rx="2" ry="2" />
<text  x="1027.54" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="739.4" y="1717" width="0.2" height="15.0" fill="rgb(238,205,48)" rx="2" ry="2" />
<text  x="742.45" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="633.8" y="1957" width="0.2" height="15.0" fill="rgb(237,223,16)" rx="2" ry="2" />
<text  x="636.81" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="170.3" y="1957" width="0.4" height="15.0" fill="rgb(222,164,13)" rx="2" ry="2" />
<text  x="173.25" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2 samples, 0.03%)</title><rect x="997.3" y="1973" width="0.4" height="15.0" fill="rgb(246,14,16)" rx="2" ry="2" />
<text  x="1000.33" y="1983.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="382.5" y="1925" width="1.4" height="15.0" fill="rgb(221,35,43)" rx="2" ry="2" />
<text  x="385.53" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="118.6" y="293" width="0.2" height="15.0" fill="rgb(225,170,7)" rx="2" ry="2" />
<text  x="121.64" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="80.0" y="1621" width="0.2" height="15.0" fill="rgb(241,8,39)" rx="2" ry="2" />
<text  x="83.02" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="954.7" y="1909" width="0.2" height="15.0" fill="rgb(219,127,54)" rx="2" ry="2" />
<text  x="957.72" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="408.1" y="1733" width="0.2" height="15.0" fill="rgb(253,139,35)" rx="2" ry="2" />
<text  x="411.13" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="278.7" y="1701" width="0.2" height="15.0" fill="rgb(249,99,26)" rx="2" ry="2" />
<text  x="281.69" y="1711.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="825.3" y="1685" width="0.4" height="15.0" fill="rgb(246,178,52)" rx="2" ry="2" />
<text  x="828.28" y="1695.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="313.1" y="1813" width="0.2" height="15.0" fill="rgb(252,155,51)" rx="2" ry="2" />
<text  x="316.10" y="1823.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1183.0" y="1989" width="0.2" height="15.0" fill="rgb(228,208,7)" rx="2" ry="2" />
<text  x="1186.00" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="834.1" y="1557" width="0.2" height="15.0" fill="rgb(245,33,27)" rx="2" ry="2" />
<text  x="837.08" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="890.1" y="1765" width="0.2" height="15.0" fill="rgb(210,209,42)" rx="2" ry="2" />
<text  x="893.10" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="430.1" y="1797" width="0.4" height="15.0" fill="rgb(210,119,37)" rx="2" ry="2" />
<text  x="433.14" y="1807.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="801.9" y="1509" width="0.2" height="15.0" fill="rgb(228,193,25)" rx="2" ry="2" />
<text  x="804.87" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="363.5" y="1797" width="0.2" height="15.0" fill="rgb(213,0,45)" rx="2" ry="2" />
<text  x="366.52" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (8 samples, 0.14%)</title><rect x="920.9" y="1909" width="1.6" height="15.0" fill="rgb(225,114,32)" rx="2" ry="2" />
<text  x="923.91" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="875.3" y="1925" width="0.2" height="15.0" fill="rgb(232,174,13)" rx="2" ry="2" />
<text  x="878.29" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1125.6" y="1893" width="0.2" height="15.0" fill="rgb(226,156,44)" rx="2" ry="2" />
<text  x="1128.58" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="402.1" y="1893" width="0.2" height="15.0" fill="rgb(250,185,11)" rx="2" ry="2" />
<text  x="405.13" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (102 samples, 1.73%)</title><rect x="594.8" y="2005" width="20.4" height="15.0" fill="rgb(251,121,29)" rx="2" ry="2" />
<text  x="597.80" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="980.9" y="1941" width="0.2" height="15.0" fill="rgb(242,174,23)" rx="2" ry="2" />
<text  x="983.93" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (9 samples, 0.15%)</title><rect x="132.6" y="1957" width="1.8" height="15.0" fill="rgb(227,93,23)" rx="2" ry="2" />
<text  x="135.64" y="1967.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="1120.2" y="1413" width="0.2" height="15.0" fill="rgb(217,119,32)" rx="2" ry="2" />
<text  x="1123.18" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="273.1" y="1733" width="0.2" height="15.0" fill="rgb(235,182,26)" rx="2" ry="2" />
<text  x="276.09" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="97.8" y="1829" width="0.2" height="15.0" fill="rgb(227,211,11)" rx="2" ry="2" />
<text  x="100.83" y="1839.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (1 samples, 0.02%)</title><rect x="474.0" y="1941" width="0.2" height="15.0" fill="rgb(240,185,47)" rx="2" ry="2" />
<text  x="476.96" y="1951.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="471.6" y="1957" width="0.4" height="15.0" fill="rgb(234,130,11)" rx="2" ry="2" />
<text  x="474.56" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="590.4" y="1733" width="0.2" height="15.0" fill="rgb(231,23,45)" rx="2" ry="2" />
<text  x="593.40" y="1743.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="1176.8" y="1973" width="0.8" height="15.0" fill="rgb(214,26,29)" rx="2" ry="2" />
<text  x="1179.80" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="189.9" y="1829" width="0.4" height="15.0" fill="rgb(214,74,44)" rx="2" ry="2" />
<text  x="192.86" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="858.5" y="1781" width="0.2" height="15.0" fill="rgb(205,140,15)" rx="2" ry="2" />
<text  x="861.49" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="97.8" y="1845" width="0.2" height="15.0" fill="rgb(234,217,45)" rx="2" ry="2" />
<text  x="100.83" y="1855.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1110.6" y="1509" width="0.2" height="15.0" fill="rgb(243,83,4)" rx="2" ry="2" />
<text  x="1113.57" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="831.9" y="1685" width="0.2" height="15.0" fill="rgb(253,62,41)" rx="2" ry="2" />
<text  x="834.88" y="1695.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="975.3" y="1973" width="0.2" height="15.0" fill="rgb(210,173,28)" rx="2" ry="2" />
<text  x="978.33" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1137.4" y="2037" width="0.4" height="15.0" fill="rgb(242,54,10)" rx="2" ry="2" />
<text  x="1140.38" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="753.9" y="1605" width="0.2" height="15.0" fill="rgb(230,30,37)" rx="2" ry="2" />
<text  x="756.85" y="1615.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="754.1" y="1701" width="0.2" height="15.0" fill="rgb(234,4,2)" rx="2" ry="2" />
<text  x="757.05" y="1711.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1120.2" y="1525" width="0.2" height="15.0" fill="rgb(208,218,8)" rx="2" ry="2" />
<text  x="1123.18" y="1535.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="27.0" y="1941" width="0.2" height="15.0" fill="rgb(246,29,38)" rx="2" ry="2" />
<text  x="30.01" y="1951.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="428.5" y="1621" width="0.2" height="15.0" fill="rgb(224,226,1)" rx="2" ry="2" />
<text  x="431.54" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="827.3" y="1653" width="0.2" height="15.0" fill="rgb(219,208,35)" rx="2" ry="2" />
<text  x="830.28" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="889.1" y="1765" width="0.2" height="15.0" fill="rgb(207,160,43)" rx="2" ry="2" />
<text  x="892.10" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="555.8" y="1909" width="1.0" height="15.0" fill="rgb(220,227,46)" rx="2" ry="2" />
<text  x="558.79" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="79.4" y="1925" width="0.2" height="15.0" fill="rgb(246,224,33)" rx="2" ry="2" />
<text  x="82.42" y="1935.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (207 samples, 3.51%)</title><rect x="776.3" y="1717" width="41.4" height="15.0" fill="rgb(239,117,34)" rx="2" ry="2" />
<text  x="779.26" y="1727.5" >__t..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="525.6" y="1653" width="0.2" height="15.0" fill="rgb(217,185,14)" rx="2" ry="2" />
<text  x="528.57" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="120.4" y="1333" width="0.2" height="15.0" fill="rgb(253,72,35)" rx="2" ry="2" />
<text  x="123.44" y="1343.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (4 samples, 0.07%)</title><rect x="71.8" y="1957" width="0.8" height="15.0" fill="rgb(242,70,12)" rx="2" ry="2" />
<text  x="74.82" y="1967.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="190.3" y="2037" width="0.4" height="15.0" fill="rgb(247,40,9)" rx="2" ry="2" />
<text  x="193.26" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.0" y="1893" width="0.2" height="15.0" fill="rgb(244,100,51)" rx="2" ry="2" />
<text  x="160.05" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="97.8" y="1749" width="0.2" height="15.0" fill="rgb(247,148,26)" rx="2" ry="2" />
<text  x="100.83" y="1759.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="739.8" y="1781" width="0.2" height="15.0" fill="rgb(221,213,14)" rx="2" ry="2" />
<text  x="742.85" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="853.5" y="1893" width="0.2" height="15.0" fill="rgb(236,192,18)" rx="2" ry="2" />
<text  x="856.49" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="140.6" y="1909" width="0.2" height="15.0" fill="rgb(252,226,47)" rx="2" ry="2" />
<text  x="143.64" y="1919.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="738.8" y="1781" width="0.4" height="15.0" fill="rgb(243,144,37)" rx="2" ry="2" />
<text  x="741.85" y="1791.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="603.4" y="1605" width="0.2" height="15.0" fill="rgb(242,52,52)" rx="2" ry="2" />
<text  x="606.40" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="964.9" y="1941" width="0.2" height="15.0" fill="rgb(230,68,11)" rx="2" ry="2" />
<text  x="967.92" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="271.9" y="1749" width="0.4" height="15.0" fill="rgb(211,181,45)" rx="2" ry="2" />
<text  x="274.89" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="66.6" y="1781" width="0.2" height="15.0" fill="rgb(235,30,37)" rx="2" ry="2" />
<text  x="69.62" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (13 samples, 0.22%)</title><rect x="528.2" y="1973" width="2.6" height="15.0" fill="rgb(220,22,5)" rx="2" ry="2" />
<text  x="531.18" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="889.3" y="1829" width="0.8" height="15.0" fill="rgb(207,75,32)" rx="2" ry="2" />
<text  x="892.30" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1009.1" y="1957" width="0.2" height="15.0" fill="rgb(242,39,50)" rx="2" ry="2" />
<text  x="1012.14" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="697.6" y="1877" width="0.2" height="15.0" fill="rgb(252,24,4)" rx="2" ry="2" />
<text  x="700.63" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="712.4" y="1877" width="0.2" height="15.0" fill="rgb(230,66,3)" rx="2" ry="2" />
<text  x="715.44" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (10 samples, 0.17%)</title><rect x="153.8" y="1909" width="2.0" height="15.0" fill="rgb(224,68,15)" rx="2" ry="2" />
<text  x="156.85" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="535.8" y="1861" width="0.2" height="15.0" fill="rgb(212,183,4)" rx="2" ry="2" />
<text  x="538.78" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (325 samples, 5.51%)</title><rect x="439.1" y="2005" width="65.1" height="15.0" fill="rgb(240,147,11)" rx="2" ry="2" />
<text  x="442.15" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="831.7" y="1717" width="0.2" height="15.0" fill="rgb(235,136,9)" rx="2" ry="2" />
<text  x="834.68" y="1727.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="1126.2" y="1605" width="0.2" height="15.0" fill="rgb(232,81,1)" rx="2" ry="2" />
<text  x="1129.18" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1110.6" y="1525" width="0.2" height="15.0" fill="rgb(212,65,35)" rx="2" ry="2" />
<text  x="1113.57" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="139.2" y="1925" width="0.2" height="15.0" fill="rgb(253,215,51)" rx="2" ry="2" />
<text  x="142.24" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="816.9" y="1669" width="0.2" height="15.0" fill="rgb(230,110,3)" rx="2" ry="2" />
<text  x="819.87" y="1679.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="341.3" y="2005" width="0.4" height="15.0" fill="rgb(234,70,49)" rx="2" ry="2" />
<text  x="344.31" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1126.2" y="1845" width="0.2" height="15.0" fill="rgb(216,63,19)" rx="2" ry="2" />
<text  x="1129.18" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="267.5" y="1637" width="0.2" height="15.0" fill="rgb(240,161,11)" rx="2" ry="2" />
<text  x="270.49" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="854.3" y="1845" width="0.4" height="15.0" fill="rgb(206,80,40)" rx="2" ry="2" />
<text  x="857.29" y="1855.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1110.2" y="1861" width="0.2" height="15.0" fill="rgb(230,77,45)" rx="2" ry="2" />
<text  x="1113.17" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="894.1" y="1989" width="0.2" height="15.0" fill="rgb(249,206,12)" rx="2" ry="2" />
<text  x="897.10" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="158.7" y="1941" width="0.2" height="15.0" fill="rgb(215,55,19)" rx="2" ry="2" />
<text  x="161.65" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="180.5" y="1973" width="0.2" height="15.0" fill="rgb(216,130,10)" rx="2" ry="2" />
<text  x="183.46" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="26.4" y="1957" width="1.0" height="15.0" fill="rgb(225,185,49)" rx="2" ry="2" />
<text  x="29.41" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="980.7" y="1829" width="0.2" height="15.0" fill="rgb(248,79,23)" rx="2" ry="2" />
<text  x="983.73" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="834.1" y="1573" width="0.2" height="15.0" fill="rgb(205,161,25)" rx="2" ry="2" />
<text  x="837.08" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="85.2" y="1941" width="0.2" height="15.0" fill="rgb(230,35,22)" rx="2" ry="2" />
<text  x="88.23" y="1951.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="32.0" y="1893" width="0.2" height="15.0" fill="rgb(216,102,9)" rx="2" ry="2" />
<text  x="35.01" y="1903.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="707.2" y="1701" width="0.2" height="15.0" fill="rgb(251,161,50)" rx="2" ry="2" />
<text  x="710.24" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1016.1" y="1861" width="0.2" height="15.0" fill="rgb(245,158,39)" rx="2" ry="2" />
<text  x="1019.14" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="789" width="15.4" height="15.0" fill="rgb(221,229,16)" rx="2" ry="2" />
<text  x="106.43" y="799.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="53.0" y="1909" width="0.2" height="15.0" fill="rgb(241,47,48)" rx="2" ry="2" />
<text  x="56.01" y="1919.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="504.0" y="1653" width="0.2" height="15.0" fill="rgb(238,38,27)" rx="2" ry="2" />
<text  x="506.97" y="1663.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="117.4" y="53" width="0.2" height="15.0" fill="rgb(212,162,27)" rx="2" ry="2" />
<text  x="120.44" y="63.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="556.4" y="1829" width="0.2" height="15.0" fill="rgb(208,97,36)" rx="2" ry="2" />
<text  x="559.39" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (3 samples, 0.05%)</title><rect x="969.7" y="2005" width="0.6" height="15.0" fill="rgb(243,54,29)" rx="2" ry="2" />
<text  x="972.73" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="623.4" y="1653" width="0.2" height="15.0" fill="rgb(228,215,4)" rx="2" ry="2" />
<text  x="626.41" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="929.1" y="1829" width="0.2" height="15.0" fill="rgb(206,137,48)" rx="2" ry="2" />
<text  x="932.11" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="809.7" y="1589" width="0.4" height="15.0" fill="rgb(206,88,0)" rx="2" ry="2" />
<text  x="812.67" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="697.6" y="1781" width="0.2" height="15.0" fill="rgb(211,208,37)" rx="2" ry="2" />
<text  x="700.63" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="1149.6" y="2053" width="0.4" height="15.0" fill="rgb(221,117,37)" rx="2" ry="2" />
<text  x="1152.59" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="567.6" y="1957" width="0.2" height="15.0" fill="rgb(239,109,2)" rx="2" ry="2" />
<text  x="570.59" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="954.3" y="1973" width="0.4" height="15.0" fill="rgb(247,106,39)" rx="2" ry="2" />
<text  x="957.32" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="590.4" y="1749" width="0.2" height="15.0" fill="rgb(209,210,3)" rx="2" ry="2" />
<text  x="593.40" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (2 samples, 0.03%)</title><rect x="888.9" y="1941" width="0.4" height="15.0" fill="rgb(235,12,47)" rx="2" ry="2" />
<text  x="891.90" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="633.0" y="2005" width="0.2" height="15.0" fill="rgb(240,101,11)" rx="2" ry="2" />
<text  x="636.01" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="893.7" y="1973" width="0.4" height="15.0" fill="rgb(244,149,33)" rx="2" ry="2" />
<text  x="896.70" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="995.3" y="1941" width="0.2" height="15.0" fill="rgb(229,131,3)" rx="2" ry="2" />
<text  x="998.33" y="1951.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="853.3" y="1621" width="0.2" height="15.0" fill="rgb(228,138,15)" rx="2" ry="2" />
<text  x="856.29" y="1631.5" ></text>
</g>
<g >
<title>_vm_normal_page (1 samples, 0.02%)</title><rect x="1137.6" y="1957" width="0.2" height="15.0" fill="rgb(242,108,4)" rx="2" ry="2" />
<text  x="1140.58" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.5" y="1989" width="0.2" height="15.0" fill="rgb(213,222,11)" rx="2" ry="2" />
<text  x="984.53" y="1999.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="856.5" y="1941" width="0.4" height="15.0" fill="rgb(247,72,21)" rx="2" ry="2" />
<text  x="859.49" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1148.2" y="1973" width="0.2" height="15.0" fill="rgb(227,62,14)" rx="2" ry="2" />
<text  x="1151.19" y="1983.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="429.7" y="2005" width="0.2" height="15.0" fill="rgb(234,49,12)" rx="2" ry="2" />
<text  x="432.74" y="2015.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="585.8" y="2005" width="0.4" height="15.0" fill="rgb(241,142,18)" rx="2" ry="2" />
<text  x="588.80" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="753.9" y="1525" width="0.2" height="15.0" fill="rgb(224,178,11)" rx="2" ry="2" />
<text  x="756.85" y="1535.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.4" y="1797" width="0.2" height="15.0" fill="rgb(210,164,46)" rx="2" ry="2" />
<text  x="124.44" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="247.1" y="1877" width="0.6" height="15.0" fill="rgb(228,7,43)" rx="2" ry="2" />
<text  x="250.08" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (51 samples, 0.86%)</title><rect x="1110.2" y="1909" width="10.2" height="15.0" fill="rgb(252,150,28)" rx="2" ry="2" />
<text  x="1113.17" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="565.8" y="1829" width="0.2" height="15.0" fill="rgb(210,187,30)" rx="2" ry="2" />
<text  x="568.79" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="889.1" y="1861" width="0.2" height="15.0" fill="rgb(234,107,47)" rx="2" ry="2" />
<text  x="892.10" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="259.5" y="1797" width="0.2" height="15.0" fill="rgb(245,174,6)" rx="2" ry="2" />
<text  x="262.48" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (25 samples, 0.42%)</title><rect x="956.5" y="2037" width="5.0" height="15.0" fill="rgb(233,23,6)" rx="2" ry="2" />
<text  x="959.52" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="150.6" y="1733" width="0.2" height="15.0" fill="rgb(215,74,49)" rx="2" ry="2" />
<text  x="153.65" y="1743.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="408.5" y="1893" width="0.2" height="15.0" fill="rgb(252,214,23)" rx="2" ry="2" />
<text  x="411.54" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="935.3" y="1797" width="0.2" height="15.0" fill="rgb(223,189,30)" rx="2" ry="2" />
<text  x="938.31" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="1181.6" y="2037" width="1.0" height="15.0" fill="rgb(246,176,43)" rx="2" ry="2" />
<text  x="1184.60" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="298.7" y="1653" width="0.2" height="15.0" fill="rgb(222,134,47)" rx="2" ry="2" />
<text  x="301.70" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="796.1" y="1509" width="0.2" height="15.0" fill="rgb(226,136,18)" rx="2" ry="2" />
<text  x="799.07" y="1519.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="126.4" y="1701" width="0.2" height="15.0" fill="rgb(221,145,23)" rx="2" ry="2" />
<text  x="129.44" y="1711.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1119.4" y="1509" width="0.2" height="15.0" fill="rgb(206,212,25)" rx="2" ry="2" />
<text  x="1122.38" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (125 samples, 2.12%)</title><rect x="199.3" y="1989" width="25.0" height="15.0" fill="rgb(223,187,44)" rx="2" ry="2" />
<text  x="202.26" y="1999.5" >f..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1053.6" y="1925" width="0.2" height="15.0" fill="rgb(230,44,15)" rx="2" ry="2" />
<text  x="1056.55" y="1935.5" ></text>
</g>
<g >
<title>release_sock (22 samples, 0.37%)</title><rect x="387.3" y="1941" width="4.4" height="15.0" fill="rgb(254,93,51)" rx="2" ry="2" />
<text  x="390.33" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="997.1" y="1957" width="0.2" height="15.0" fill="rgb(245,95,21)" rx="2" ry="2" />
<text  x="1000.13" y="1967.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (1 samples, 0.02%)</title><rect x="13.4" y="1893" width="0.2" height="15.0" fill="rgb(206,73,44)" rx="2" ry="2" />
<text  x="16.40" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="849.5" y="1877" width="0.2" height="15.0" fill="rgb(228,52,37)" rx="2" ry="2" />
<text  x="852.48" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1073.8" y="1845" width="0.2" height="15.0" fill="rgb(219,13,37)" rx="2" ry="2" />
<text  x="1076.76" y="1855.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="628.4" y="1957" width="0.2" height="15.0" fill="rgb(233,175,39)" rx="2" ry="2" />
<text  x="631.41" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="961.9" y="2021" width="0.6" height="15.0" fill="rgb(233,182,17)" rx="2" ry="2" />
<text  x="964.92" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="707.2" y="1749" width="0.4" height="15.0" fill="rgb(245,21,25)" rx="2" ry="2" />
<text  x="710.24" y="1759.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="132.4" y="1925" width="0.2" height="15.0" fill="rgb(230,165,50)" rx="2" ry="2" />
<text  x="135.44" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="845.1" y="1909" width="0.2" height="15.0" fill="rgb(248,74,27)" rx="2" ry="2" />
<text  x="848.08" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="854.9" y="1861" width="0.2" height="15.0" fill="rgb(231,95,9)" rx="2" ry="2" />
<text  x="857.89" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="52.6" y="1941" width="1.0" height="15.0" fill="rgb(251,190,27)" rx="2" ry="2" />
<text  x="55.61" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="586.6" y="1973" width="0.2" height="15.0" fill="rgb(237,54,42)" rx="2" ry="2" />
<text  x="589.60" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1086.6" y="1909" width="0.2" height="15.0" fill="rgb(216,190,1)" rx="2" ry="2" />
<text  x="1089.56" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="664.0" y="1925" width="0.2" height="15.0" fill="rgb(235,158,46)" rx="2" ry="2" />
<text  x="667.02" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="809.7" y="1573" width="0.4" height="15.0" fill="rgb(210,204,26)" rx="2" ry="2" />
<text  x="812.67" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="898.7" y="2021" width="1.4" height="15.0" fill="rgb(244,71,38)" rx="2" ry="2" />
<text  x="901.70" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="357.1" y="1813" width="0.4" height="15.0" fill="rgb(225,213,37)" rx="2" ry="2" />
<text  x="360.12" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="523.0" y="1749" width="0.2" height="15.0" fill="rgb(213,37,39)" rx="2" ry="2" />
<text  x="525.97" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="760.1" y="1701" width="0.2" height="15.0" fill="rgb(232,47,46)" rx="2" ry="2" />
<text  x="763.05" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="666.8" y="1973" width="0.2" height="15.0" fill="rgb(243,46,45)" rx="2" ry="2" />
<text  x="669.82" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (3 samples, 0.05%)</title><rect x="215.3" y="1861" width="0.6" height="15.0" fill="rgb(240,183,21)" rx="2" ry="2" />
<text  x="218.27" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="525.6" y="1669" width="0.2" height="15.0" fill="rgb(237,93,27)" rx="2" ry="2" />
<text  x="528.57" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="54.2" y="1765" width="0.2" height="15.0" fill="rgb(205,39,44)" rx="2" ry="2" />
<text  x="57.21" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="626.2" y="1813" width="0.2" height="15.0" fill="rgb(233,67,50)" rx="2" ry="2" />
<text  x="629.21" y="1823.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="1184.4" y="2053" width="0.4" height="15.0" fill="rgb(233,34,31)" rx="2" ry="2" />
<text  x="1187.40" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (19 samples, 0.32%)</title><rect x="492.2" y="1925" width="3.8" height="15.0" fill="rgb(212,189,45)" rx="2" ry="2" />
<text  x="495.16" y="1935.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (6 samples, 0.10%)</title><rect x="847.9" y="1925" width="1.2" height="15.0" fill="rgb(241,64,46)" rx="2" ry="2" />
<text  x="850.88" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="843.5" y="1733" width="0.2" height="15.0" fill="rgb(220,146,3)" rx="2" ry="2" />
<text  x="846.48" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="788.3" y="1397" width="0.2" height="15.0" fill="rgb(215,159,24)" rx="2" ry="2" />
<text  x="791.26" y="1407.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (10 samples, 0.17%)</title><rect x="208.7" y="1925" width="2.0" height="15.0" fill="rgb(254,188,41)" rx="2" ry="2" />
<text  x="211.67" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="575.8" y="1733" width="0.4" height="15.0" fill="rgb(224,220,18)" rx="2" ry="2" />
<text  x="578.79" y="1743.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (30 samples, 0.51%)</title><rect x="317.1" y="1797" width="6.0" height="15.0" fill="rgb(250,19,26)" rx="2" ry="2" />
<text  x="320.10" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (14 samples, 0.24%)</title><rect x="976.5" y="1973" width="2.8" height="15.0" fill="rgb(242,114,49)" rx="2" ry="2" />
<text  x="979.53" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="165.7" y="1973" width="0.2" height="15.0" fill="rgb(215,204,30)" rx="2" ry="2" />
<text  x="168.65" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="183.7" y="2021" width="0.2" height="15.0" fill="rgb(205,52,28)" rx="2" ry="2" />
<text  x="186.66" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="916.5" y="1861" width="0.2" height="15.0" fill="rgb(223,219,8)" rx="2" ry="2" />
<text  x="919.51" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="979.3" y="1957" width="0.6" height="15.0" fill="rgb(246,109,30)" rx="2" ry="2" />
<text  x="982.33" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="483.6" y="1541" width="0.2" height="15.0" fill="rgb(242,177,4)" rx="2" ry="2" />
<text  x="486.56" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="215.3" y="1845" width="0.6" height="15.0" fill="rgb(219,77,50)" rx="2" ry="2" />
<text  x="218.27" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="74.6" y="1861" width="0.2" height="15.0" fill="rgb(206,127,13)" rx="2" ry="2" />
<text  x="77.62" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="133.8" y="1941" width="0.2" height="15.0" fill="rgb(241,138,12)" rx="2" ry="2" />
<text  x="136.84" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="735.2" y="1765" width="0.2" height="15.0" fill="rgb(208,184,41)" rx="2" ry="2" />
<text  x="738.25" y="1775.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="735.4" y="1765" width="0.8" height="15.0" fill="rgb(252,99,14)" rx="2" ry="2" />
<text  x="738.45" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="363.5" y="1717" width="0.2" height="15.0" fill="rgb(232,78,6)" rx="2" ry="2" />
<text  x="366.52" y="1727.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="503.6" y="1861" width="0.2" height="15.0" fill="rgb(230,99,0)" rx="2" ry="2" />
<text  x="506.57" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (90 samples, 1.53%)</title><rect x="872.5" y="1989" width="18.0" height="15.0" fill="rgb(226,85,24)" rx="2" ry="2" />
<text  x="875.49" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1120.2" y="1493" width="0.2" height="15.0" fill="rgb(241,170,0)" rx="2" ry="2" />
<text  x="1123.18" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="680.0" y="1605" width="0.2" height="15.0" fill="rgb(238,59,34)" rx="2" ry="2" />
<text  x="683.03" y="1615.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="639.6" y="1989" width="0.2" height="15.0" fill="rgb(230,72,5)" rx="2" ry="2" />
<text  x="642.61" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="914.1" y="1957" width="0.2" height="15.0" fill="rgb(236,98,29)" rx="2" ry="2" />
<text  x="917.11" y="1967.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.03%)</title><rect x="416.9" y="1909" width="0.4" height="15.0" fill="rgb(230,11,33)" rx="2" ry="2" />
<text  x="419.94" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="657.2" y="1989" width="0.2" height="15.0" fill="rgb(212,175,1)" rx="2" ry="2" />
<text  x="660.22" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="831.7" y="1637" width="0.2" height="15.0" fill="rgb(208,133,7)" rx="2" ry="2" />
<text  x="834.68" y="1647.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="809.9" y="1349" width="0.2" height="15.0" fill="rgb(216,66,13)" rx="2" ry="2" />
<text  x="812.87" y="1359.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="363.5" y="1589" width="0.2" height="15.0" fill="rgb(223,129,52)" rx="2" ry="2" />
<text  x="366.52" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="336.7" y="1781" width="0.2" height="15.0" fill="rgb(242,58,49)" rx="2" ry="2" />
<text  x="339.71" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="84.8" y="1765" width="0.2" height="15.0" fill="rgb(214,41,37)" rx="2" ry="2" />
<text  x="87.83" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1110.6" y="1637" width="0.2" height="15.0" fill="rgb(214,83,38)" rx="2" ry="2" />
<text  x="1113.57" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="225.3" y="2021" width="0.2" height="15.0" fill="rgb(241,127,15)" rx="2" ry="2" />
<text  x="228.27" y="2031.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="830.7" y="1813" width="0.2" height="15.0" fill="rgb(238,62,38)" rx="2" ry="2" />
<text  x="833.68" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="222.5" y="1925" width="0.2" height="15.0" fill="rgb(245,74,34)" rx="2" ry="2" />
<text  x="225.47" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (7 samples, 0.12%)</title><rect x="531.2" y="1989" width="1.4" height="15.0" fill="rgb(250,180,25)" rx="2" ry="2" />
<text  x="534.18" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="623.4" y="1605" width="0.2" height="15.0" fill="rgb(241,47,0)" rx="2" ry="2" />
<text  x="626.41" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="889.1" y="1829" width="0.2" height="15.0" fill="rgb(247,84,27)" rx="2" ry="2" />
<text  x="892.10" y="1839.5" ></text>
</g>
<g >
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1160.2" y="1941" width="0.2" height="15.0" fill="rgb(240,190,21)" rx="2" ry="2" />
<text  x="1163.19" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (24 samples, 0.41%)</title><rect x="558.0" y="2005" width="4.8" height="15.0" fill="rgb(251,182,28)" rx="2" ry="2" />
<text  x="560.99" y="2015.5" ></text>
</g>
<g >
<title>epoll_wait (83 samples, 1.41%)</title><rect x="509.4" y="2037" width="16.6" height="15.0" fill="rgb(230,180,8)" rx="2" ry="2" />
<text  x="512.37" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="925.5" y="1909" width="0.4" height="15.0" fill="rgb(234,117,36)" rx="2" ry="2" />
<text  x="928.51" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="71.4" y="1653" width="0.2" height="15.0" fill="rgb(231,184,50)" rx="2" ry="2" />
<text  x="74.42" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="150.4" y="1781" width="0.2" height="15.0" fill="rgb(254,128,39)" rx="2" ry="2" />
<text  x="153.45" y="1791.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="428.5" y="1653" width="0.2" height="15.0" fill="rgb(210,204,53)" rx="2" ry="2" />
<text  x="431.54" y="1663.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="558.4" y="1973" width="0.2" height="15.0" fill="rgb(230,129,36)" rx="2" ry="2" />
<text  x="561.39" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="707.2" y="1861" width="0.6" height="15.0" fill="rgb(245,114,44)" rx="2" ry="2" />
<text  x="710.24" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="993.3" y="1989" width="0.2" height="15.0" fill="rgb(251,25,10)" rx="2" ry="2" />
<text  x="996.33" y="1999.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="860.1" y="1653" width="0.2" height="15.0" fill="rgb(228,162,28)" rx="2" ry="2" />
<text  x="863.09" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (7 samples, 0.12%)</title><rect x="882.9" y="1925" width="1.4" height="15.0" fill="rgb(236,222,18)" rx="2" ry="2" />
<text  x="885.90" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="78.2" y="1797" width="0.8" height="15.0" fill="rgb(247,105,2)" rx="2" ry="2" />
<text  x="81.22" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1005.1" y="1781" width="0.2" height="15.0" fill="rgb(219,109,14)" rx="2" ry="2" />
<text  x="1008.14" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="357.1" y="1829" width="0.4" height="15.0" fill="rgb(228,43,44)" rx="2" ry="2" />
<text  x="360.12" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="531.8" y="1813" width="0.2" height="15.0" fill="rgb(238,184,17)" rx="2" ry="2" />
<text  x="534.78" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="827.3" y="1733" width="0.2" height="15.0" fill="rgb(217,157,14)" rx="2" ry="2" />
<text  x="830.28" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="363.5" y="1669" width="0.2" height="15.0" fill="rgb(244,192,51)" rx="2" ry="2" />
<text  x="366.52" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="408.1" y="1781" width="0.2" height="15.0" fill="rgb(245,205,54)" rx="2" ry="2" />
<text  x="411.13" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="633.8" y="1973" width="0.2" height="15.0" fill="rgb(242,27,22)" rx="2" ry="2" />
<text  x="636.81" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="71.4" y="1861" width="0.2" height="15.0" fill="rgb(220,39,50)" rx="2" ry="2" />
<text  x="74.42" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="757.7" y="1781" width="1.4" height="15.0" fill="rgb(208,43,24)" rx="2" ry="2" />
<text  x="760.65" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="154.0" y="1893" width="0.2" height="15.0" fill="rgb(206,10,4)" rx="2" ry="2" />
<text  x="157.05" y="1903.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="53.0" y="1621" width="0.2" height="15.0" fill="rgb(225,148,12)" rx="2" ry="2" />
<text  x="56.01" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="862.7" y="1973" width="0.2" height="15.0" fill="rgb(223,90,15)" rx="2" ry="2" />
<text  x="865.69" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (2 samples, 0.03%)</title><rect x="980.3" y="1909" width="0.4" height="15.0" fill="rgb(236,121,14)" rx="2" ry="2" />
<text  x="983.33" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="340.1" y="1941" width="0.2" height="15.0" fill="rgb(212,188,10)" rx="2" ry="2" />
<text  x="343.11" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1049.2" y="2005" width="0.4" height="15.0" fill="rgb(245,104,37)" rx="2" ry="2" />
<text  x="1052.15" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.5" y="1909" width="0.2" height="15.0" fill="rgb(236,134,45)" rx="2" ry="2" />
<text  x="861.49" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="470.6" y="1813" width="0.2" height="15.0" fill="rgb(209,51,29)" rx="2" ry="2" />
<text  x="473.56" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="916.5" y="1909" width="0.2" height="15.0" fill="rgb(254,3,13)" rx="2" ry="2" />
<text  x="919.51" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="984.9" y="1909" width="0.4" height="15.0" fill="rgb(249,196,12)" rx="2" ry="2" />
<text  x="987.93" y="1919.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="84.8" y="1653" width="0.2" height="15.0" fill="rgb(214,50,24)" rx="2" ry="2" />
<text  x="87.83" y="1663.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="634.8" y="1925" width="0.2" height="15.0" fill="rgb(233,95,27)" rx="2" ry="2" />
<text  x="637.81" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="889.3" y="1957" width="1.0" height="15.0" fill="rgb(239,32,20)" rx="2" ry="2" />
<text  x="892.30" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="180.5" y="1829" width="0.2" height="15.0" fill="rgb(226,63,12)" rx="2" ry="2" />
<text  x="183.46" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="884.9" y="1941" width="0.2" height="15.0" fill="rgb(245,6,11)" rx="2" ry="2" />
<text  x="887.90" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="532.8" y="1973" width="0.8" height="15.0" fill="rgb(247,197,36)" rx="2" ry="2" />
<text  x="535.78" y="1983.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="243.9" y="1893" width="0.2" height="15.0" fill="rgb(219,174,52)" rx="2" ry="2" />
<text  x="246.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="1022.5" y="2037" width="0.2" height="15.0" fill="rgb(221,60,13)" rx="2" ry="2" />
<text  x="1025.54" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="66.6" y="1845" width="0.2" height="15.0" fill="rgb(244,213,51)" rx="2" ry="2" />
<text  x="69.62" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="167.9" y="1973" width="0.2" height="15.0" fill="rgb(225,84,52)" rx="2" ry="2" />
<text  x="170.85" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="531.8" y="1877" width="0.2" height="15.0" fill="rgb(212,212,25)" rx="2" ry="2" />
<text  x="534.78" y="1887.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="879.5" y="1909" width="0.2" height="15.0" fill="rgb(206,23,26)" rx="2" ry="2" />
<text  x="882.49" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="357.1" y="1605" width="0.2" height="15.0" fill="rgb(244,82,29)" rx="2" ry="2" />
<text  x="360.12" y="1615.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (2 samples, 0.03%)</title><rect x="618.0" y="1957" width="0.4" height="15.0" fill="rgb(210,85,5)" rx="2" ry="2" />
<text  x="621.01" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="704.4" y="1637" width="0.2" height="15.0" fill="rgb(223,64,21)" rx="2" ry="2" />
<text  x="707.44" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="71.4" y="1813" width="0.2" height="15.0" fill="rgb(216,70,12)" rx="2" ry="2" />
<text  x="74.42" y="1823.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="942.9" y="1749" width="0.2" height="15.0" fill="rgb(242,207,15)" rx="2" ry="2" />
<text  x="945.92" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="583.0" y="1765" width="0.2" height="15.0" fill="rgb(206,96,29)" rx="2" ry="2" />
<text  x="585.99" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="560.2" y="1893" width="0.6" height="15.0" fill="rgb(226,20,1)" rx="2" ry="2" />
<text  x="563.19" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (2 samples, 0.03%)</title><rect x="162.1" y="1989" width="0.4" height="15.0" fill="rgb(246,132,15)" rx="2" ry="2" />
<text  x="165.05" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="103.0" y="1589" width="17.2" height="15.0" fill="rgb(226,35,43)" rx="2" ry="2" />
<text  x="106.03" y="1599.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="933.7" y="1605" width="0.2" height="15.0" fill="rgb(248,144,35)" rx="2" ry="2" />
<text  x="936.71" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="752.5" y="1541" width="0.2" height="15.0" fill="rgb(239,4,18)" rx="2" ry="2" />
<text  x="755.45" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="942.9" y="1893" width="0.2" height="15.0" fill="rgb(216,226,37)" rx="2" ry="2" />
<text  x="945.92" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="341.3" y="2021" width="0.4" height="15.0" fill="rgb(234,36,28)" rx="2" ry="2" />
<text  x="344.31" y="2031.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="825.1" y="1333" width="0.2" height="15.0" fill="rgb(230,177,2)" rx="2" ry="2" />
<text  x="828.08" y="1343.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="735.4" y="1749" width="0.8" height="15.0" fill="rgb(229,149,4)" rx="2" ry="2" />
<text  x="738.45" y="1759.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="223.1" y="1701" width="0.2" height="15.0" fill="rgb(239,1,8)" rx="2" ry="2" />
<text  x="226.07" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (42 samples, 0.71%)</title><rect x="1111.8" y="1557" width="8.4" height="15.0" fill="rgb(213,65,52)" rx="2" ry="2" />
<text  x="1114.77" y="1567.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="171.3" y="1989" width="0.2" height="15.0" fill="rgb(242,203,6)" rx="2" ry="2" />
<text  x="174.25" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="165.7" y="1989" width="0.2" height="15.0" fill="rgb(212,195,38)" rx="2" ry="2" />
<text  x="168.65" y="1999.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="696.2" y="1925" width="0.2" height="15.0" fill="rgb(239,32,1)" rx="2" ry="2" />
<text  x="699.23" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (2 samples, 0.03%)</title><rect x="1144.6" y="2005" width="0.4" height="15.0" fill="rgb(251,69,0)" rx="2" ry="2" />
<text  x="1147.58" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="97.8" y="1941" width="0.2" height="15.0" fill="rgb(215,97,3)" rx="2" ry="2" />
<text  x="100.83" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.15%)</title><rect x="552.0" y="1973" width="1.8" height="15.0" fill="rgb(206,11,47)" rx="2" ry="2" />
<text  x="554.98" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="676.6" y="1861" width="0.2" height="15.0" fill="rgb(250,191,10)" rx="2" ry="2" />
<text  x="679.63" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="454.0" y="1813" width="0.2" height="15.0" fill="rgb(236,217,27)" rx="2" ry="2" />
<text  x="456.95" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="712.4" y="1557" width="0.2" height="15.0" fill="rgb(247,206,7)" rx="2" ry="2" />
<text  x="715.44" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="935.3" y="1701" width="0.2" height="15.0" fill="rgb(225,34,51)" rx="2" ry="2" />
<text  x="938.31" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="97.8" y="1925" width="0.2" height="15.0" fill="rgb(234,148,3)" rx="2" ry="2" />
<text  x="100.83" y="1935.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="340.9" y="1925" width="0.2" height="15.0" fill="rgb(238,5,20)" rx="2" ry="2" />
<text  x="343.91" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (68 samples, 1.15%)</title><rect x="1150.8" y="1989" width="13.6" height="15.0" fill="rgb(247,223,31)" rx="2" ry="2" />
<text  x="1153.79" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1145.4" y="2005" width="0.2" height="15.0" fill="rgb(235,148,39)" rx="2" ry="2" />
<text  x="1148.38" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="974.3" y="1957" width="0.2" height="15.0" fill="rgb(216,166,23)" rx="2" ry="2" />
<text  x="977.33" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8 samples, 0.14%)</title><rect x="286.5" y="1509" width="1.6" height="15.0" fill="rgb(253,215,13)" rx="2" ry="2" />
<text  x="289.49" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="482.8" y="1845" width="0.6" height="15.0" fill="rgb(207,190,38)" rx="2" ry="2" />
<text  x="485.76" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="866.5" y="1957" width="0.6" height="15.0" fill="rgb(241,97,51)" rx="2" ry="2" />
<text  x="869.49" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="565.6" y="1685" width="0.2" height="15.0" fill="rgb(238,62,5)" rx="2" ry="2" />
<text  x="568.59" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="157.4" y="1669" width="0.3" height="15.0" fill="rgb(243,100,31)" rx="2" ry="2" />
<text  x="160.45" y="1679.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="257.7" y="1861" width="0.8" height="15.0" fill="rgb(228,6,30)" rx="2" ry="2" />
<text  x="260.68" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2 samples, 0.03%)</title><rect x="1019.1" y="2037" width="0.4" height="15.0" fill="rgb(239,138,5)" rx="2" ry="2" />
<text  x="1022.14" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1142.0" y="2021" width="0.4" height="15.0" fill="rgb(249,107,2)" rx="2" ry="2" />
<text  x="1144.98" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="532.0" y="1957" width="0.6" height="15.0" fill="rgb(205,182,43)" rx="2" ry="2" />
<text  x="534.98" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="505.0" y="1893" width="0.2" height="15.0" fill="rgb(237,127,27)" rx="2" ry="2" />
<text  x="507.97" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="824.1" y="1653" width="0.2" height="15.0" fill="rgb(241,114,25)" rx="2" ry="2" />
<text  x="827.08" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (13 samples, 0.22%)</title><rect x="528.2" y="1989" width="2.6" height="15.0" fill="rgb(209,18,23)" rx="2" ry="2" />
<text  x="531.18" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="359.5" y="1893" width="0.2" height="15.0" fill="rgb(235,150,38)" rx="2" ry="2" />
<text  x="362.52" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="886.1" y="1861" width="0.2" height="15.0" fill="rgb(240,185,6)" rx="2" ry="2" />
<text  x="889.10" y="1871.5" ></text>
</g>
<g >
<title>tcp_push (258 samples, 4.37%)</title><rect x="272.9" y="1877" width="51.6" height="15.0" fill="rgb(253,124,6)" rx="2" ry="2" />
<text  x="275.89" y="1887.5" >tcp_p..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="454.0" y="1749" width="0.2" height="15.0" fill="rgb(235,72,50)" rx="2" ry="2" />
<text  x="456.95" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="904.9" y="1989" width="2.8" height="15.0" fill="rgb(210,24,10)" rx="2" ry="2" />
<text  x="907.90" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="615.0" y="1941" width="0.2" height="15.0" fill="rgb(211,206,44)" rx="2" ry="2" />
<text  x="618.01" y="1951.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="1158.8" y="1925" width="0.2" height="15.0" fill="rgb(219,35,29)" rx="2" ry="2" />
<text  x="1161.79" y="1935.5" ></text>
</g>
<g >
<title>____fput (470 samples, 7.97%)</title><rect x="737.6" y="1829" width="94.1" height="15.0" fill="rgb(252,79,26)" rx="2" ry="2" />
<text  x="740.65" y="1839.5" >____fput</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="942.9" y="1797" width="0.2" height="15.0" fill="rgb(254,129,25)" rx="2" ry="2" />
<text  x="945.92" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="165" width="14.6" height="15.0" fill="rgb(239,17,15)" rx="2" ry="2" />
<text  x="106.43" y="175.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="843.5" y="1749" width="0.2" height="15.0" fill="rgb(249,7,50)" rx="2" ry="2" />
<text  x="846.48" y="1759.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="842.1" y="1781" width="0.8" height="15.0" fill="rgb(234,20,37)" rx="2" ry="2" />
<text  x="845.08" y="1791.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="735.2" y="1733" width="0.2" height="15.0" fill="rgb(221,17,5)" rx="2" ry="2" />
<text  x="738.25" y="1743.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="664.0" y="1685" width="0.2" height="15.0" fill="rgb(232,33,1)" rx="2" ry="2" />
<text  x="667.02" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="944.7" y="1957" width="0.2" height="15.0" fill="rgb(241,218,45)" rx="2" ry="2" />
<text  x="947.72" y="1967.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1004.1" y="2005" width="0.2" height="15.0" fill="rgb(248,87,14)" rx="2" ry="2" />
<text  x="1007.14" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="864.5" y="1989" width="0.2" height="15.0" fill="rgb(209,224,9)" rx="2" ry="2" />
<text  x="867.49" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="889.1" y="1573" width="0.2" height="15.0" fill="rgb(232,69,10)" rx="2" ry="2" />
<text  x="892.10" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="244.5" y="1925" width="0.2" height="15.0" fill="rgb(209,115,38)" rx="2" ry="2" />
<text  x="247.48" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="952.9" y="1973" width="0.4" height="15.0" fill="rgb(224,24,20)" rx="2" ry="2" />
<text  x="955.92" y="1983.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="967.9" y="2037" width="0.4" height="15.0" fill="rgb(246,11,11)" rx="2" ry="2" />
<text  x="970.92" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="223.1" y="1797" width="0.2" height="15.0" fill="rgb(226,222,18)" rx="2" ry="2" />
<text  x="226.07" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="79.4" y="1749" width="0.2" height="15.0" fill="rgb(217,51,51)" rx="2" ry="2" />
<text  x="82.42" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="428.5" y="1893" width="0.2" height="15.0" fill="rgb(236,8,44)" rx="2" ry="2" />
<text  x="431.54" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="669.6" y="1925" width="0.6" height="15.0" fill="rgb(222,171,50)" rx="2" ry="2" />
<text  x="672.62" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="984.7" y="1829" width="0.2" height="15.0" fill="rgb(237,72,49)" rx="2" ry="2" />
<text  x="987.73" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="760.1" y="1733" width="0.2" height="15.0" fill="rgb(232,69,30)" rx="2" ry="2" />
<text  x="763.05" y="1743.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="916.5" y="1669" width="0.2" height="15.0" fill="rgb(220,176,26)" rx="2" ry="2" />
<text  x="919.51" y="1679.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="981.3" y="1957" width="0.2" height="15.0" fill="rgb(251,99,49)" rx="2" ry="2" />
<text  x="984.33" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="264.7" y="1557" width="0.2" height="15.0" fill="rgb(229,26,37)" rx="2" ry="2" />
<text  x="267.69" y="1567.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="500.0" y="1925" width="0.4" height="15.0" fill="rgb(235,181,43)" rx="2" ry="2" />
<text  x="502.97" y="1935.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="735.2" y="1717" width="0.2" height="15.0" fill="rgb(236,20,34)" rx="2" ry="2" />
<text  x="738.25" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="843.5" y="1717" width="0.2" height="15.0" fill="rgb(219,103,11)" rx="2" ry="2" />
<text  x="846.48" y="1727.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="648.4" y="1509" width="0.2" height="15.0" fill="rgb(220,16,33)" rx="2" ry="2" />
<text  x="651.42" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="561.8" y="1973" width="0.4" height="15.0" fill="rgb(247,142,31)" rx="2" ry="2" />
<text  x="564.79" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="249.1" y="1749" width="0.2" height="15.0" fill="rgb(231,138,44)" rx="2" ry="2" />
<text  x="252.08" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="979.3" y="1973" width="0.6" height="15.0" fill="rgb(216,0,40)" rx="2" ry="2" />
<text  x="982.33" y="1983.5" ></text>
</g>
<g >
<title>module_put (1 samples, 0.02%)</title><rect x="831.3" y="1813" width="0.2" height="15.0" fill="rgb(246,209,35)" rx="2" ry="2" />
<text  x="834.28" y="1823.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="969.1" y="1605" width="0.2" height="15.0" fill="rgb(216,73,52)" rx="2" ry="2" />
<text  x="972.13" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="824.9" y="1653" width="0.4" height="15.0" fill="rgb(208,86,51)" rx="2" ry="2" />
<text  x="827.88" y="1663.5" ></text>
</g>
<g >
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="1113.0" y="1493" width="0.8" height="15.0" fill="rgb(251,199,37)" rx="2" ry="2" />
<text  x="1115.97" y="1503.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1102.2" y="1781" width="0.6" height="15.0" fill="rgb(223,56,3)" rx="2" ry="2" />
<text  x="1105.17" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="901" width="15.4" height="15.0" fill="rgb(231,113,26)" rx="2" ry="2" />
<text  x="106.43" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1125.6" y="1701" width="0.2" height="15.0" fill="rgb(233,130,40)" rx="2" ry="2" />
<text  x="1128.58" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="79.4" y="1877" width="0.2" height="15.0" fill="rgb(236,43,3)" rx="2" ry="2" />
<text  x="82.42" y="1887.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="749.3" y="1653" width="0.2" height="15.0" fill="rgb(238,114,34)" rx="2" ry="2" />
<text  x="752.25" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="965.5" y="2021" width="0.2" height="15.0" fill="rgb(231,98,29)" rx="2" ry="2" />
<text  x="968.52" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="890.5" y="1797" width="0.2" height="15.0" fill="rgb(221,32,11)" rx="2" ry="2" />
<text  x="893.50" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="739.4" y="1525" width="0.2" height="15.0" fill="rgb(220,51,18)" rx="2" ry="2" />
<text  x="742.45" y="1535.5" ></text>
</g>
<g >
<title>remove_wait_queue (22 samples, 0.37%)</title><rect x="491.8" y="1941" width="4.4" height="15.0" fill="rgb(253,87,5)" rx="2" ry="2" />
<text  x="494.76" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="707.2" y="1941" width="0.6" height="15.0" fill="rgb(213,146,37)" rx="2" ry="2" />
<text  x="710.24" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="135.4" y="1973" width="1.0" height="15.0" fill="rgb(209,96,5)" rx="2" ry="2" />
<text  x="138.44" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="831.9" y="1845" width="0.2" height="15.0" fill="rgb(240,127,47)" rx="2" ry="2" />
<text  x="834.88" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="523.0" y="1653" width="0.2" height="15.0" fill="rgb(247,2,51)" rx="2" ry="2" />
<text  x="525.97" y="1663.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="980.3" y="1893" width="0.4" height="15.0" fill="rgb(210,99,52)" rx="2" ry="2" />
<text  x="983.33" y="1903.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="82.8" y="1925" width="0.4" height="15.0" fill="rgb(215,229,6)" rx="2" ry="2" />
<text  x="85.82" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="677.4" y="1845" width="0.2" height="15.0" fill="rgb(222,183,45)" rx="2" ry="2" />
<text  x="680.43" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="597" width="15.4" height="15.0" fill="rgb(249,37,43)" rx="2" ry="2" />
<text  x="106.43" y="607.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (11 samples, 0.19%)</title><rect x="69.4" y="1941" width="2.2" height="15.0" fill="rgb(221,169,22)" rx="2" ry="2" />
<text  x="72.42" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="122.2" y="1845" width="0.2" height="15.0" fill="rgb(251,84,27)" rx="2" ry="2" />
<text  x="125.24" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="970.3" y="2005" width="0.2" height="15.0" fill="rgb(230,22,32)" rx="2" ry="2" />
<text  x="973.33" y="2015.5" ></text>
</g>
<g >
<title>mntput (2 samples, 0.03%)</title><rect x="755.9" y="1797" width="0.4" height="15.0" fill="rgb(221,130,7)" rx="2" ry="2" />
<text  x="758.85" y="1807.5" ></text>
</g>
<g >
<title>__GI___setsockopt (4 samples, 0.07%)</title><rect x="1168.6" y="2037" width="0.8" height="15.0" fill="rgb(244,29,51)" rx="2" ry="2" />
<text  x="1171.59" y="2047.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="781.5" y="1669" width="0.2" height="15.0" fill="rgb(226,107,54)" rx="2" ry="2" />
<text  x="784.46" y="1679.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (401 samples, 6.80%)</title><rect x="1050.0" y="1989" width="80.2" height="15.0" fill="rgb(246,37,7)" rx="2" ry="2" />
<text  x="1052.95" y="1999.5" >SYSC_recv..</text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1020.3" y="2037" width="0.2" height="15.0" fill="rgb(251,229,39)" rx="2" ry="2" />
<text  x="1023.34" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="430.3" y="1765" width="0.2" height="15.0" fill="rgb(223,167,47)" rx="2" ry="2" />
<text  x="433.34" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="623.4" y="1509" width="0.2" height="15.0" fill="rgb(226,56,26)" rx="2" ry="2" />
<text  x="626.41" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="363.5" y="1861" width="0.2" height="15.0" fill="rgb(223,143,42)" rx="2" ry="2" />
<text  x="366.52" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="1019.5" y="2037" width="0.8" height="15.0" fill="rgb(215,189,17)" rx="2" ry="2" />
<text  x="1022.54" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="846.1" y="1893" width="0.2" height="15.0" fill="rgb(242,108,42)" rx="2" ry="2" />
<text  x="849.08" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (6 samples, 0.10%)</title><rect x="655.2" y="1989" width="1.2" height="15.0" fill="rgb(230,102,22)" rx="2" ry="2" />
<text  x="658.22" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="175.7" y="1989" width="0.2" height="15.0" fill="rgb(227,213,21)" rx="2" ry="2" />
<text  x="178.66" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (36 samples, 0.61%)</title><rect x="167.3" y="2005" width="7.2" height="15.0" fill="rgb(229,154,39)" rx="2" ry="2" />
<text  x="170.25" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="123.2" y="1909" width="0.4" height="15.0" fill="rgb(245,22,44)" rx="2" ry="2" />
<text  x="126.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1049.6" y="1781" width="0.2" height="15.0" fill="rgb(240,13,20)" rx="2" ry="2" />
<text  x="1052.55" y="1791.5" ></text>
</g>
<g >
<title>vfprintf (20 samples, 0.34%)</title><rect x="186.3" y="2021" width="4.0" height="15.0" fill="rgb(232,185,14)" rx="2" ry="2" />
<text  x="189.26" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1120.2" y="1701" width="0.2" height="15.0" fill="rgb(242,75,26)" rx="2" ry="2" />
<text  x="1123.18" y="1711.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1149.4" y="1989" width="0.2" height="15.0" fill="rgb(244,162,30)" rx="2" ry="2" />
<text  x="1152.39" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="704.4" y="1829" width="0.2" height="15.0" fill="rgb(251,124,4)" rx="2" ry="2" />
<text  x="707.44" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="900.3" y="2037" width="0.2" height="15.0" fill="rgb(241,101,0)" rx="2" ry="2" />
<text  x="903.30" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="545.0" y="2005" width="0.6" height="15.0" fill="rgb(239,47,8)" rx="2" ry="2" />
<text  x="547.98" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="321.5" y="1621" width="0.2" height="15.0" fill="rgb(248,84,53)" rx="2" ry="2" />
<text  x="324.51" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="834.1" y="1637" width="0.2" height="15.0" fill="rgb(233,29,5)" rx="2" ry="2" />
<text  x="837.08" y="1647.5" ></text>
</g>
<g >
<title>_warn_unseeded_randomness (1 samples, 0.02%)</title><rect x="414.7" y="1845" width="0.2" height="15.0" fill="rgb(236,15,1)" rx="2" ry="2" />
<text  x="417.74" y="1855.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="755.1" y="1765" width="0.2" height="15.0" fill="rgb(228,72,16)" rx="2" ry="2" />
<text  x="758.05" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1125.6" y="1733" width="0.2" height="15.0" fill="rgb(219,114,18)" rx="2" ry="2" />
<text  x="1128.58" y="1743.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="830.9" y="1813" width="0.2" height="15.0" fill="rgb(249,186,51)" rx="2" ry="2" />
<text  x="833.88" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (31 samples, 0.53%)</title><rect x="298.9" y="1669" width="6.2" height="15.0" fill="rgb(210,80,6)" rx="2" ry="2" />
<text  x="301.90" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (10 samples, 0.17%)</title><rect x="286.1" y="1573" width="2.0" height="15.0" fill="rgb(246,32,14)" rx="2" ry="2" />
<text  x="289.09" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="144.6" y="1877" width="0.2" height="15.0" fill="rgb(215,227,31)" rx="2" ry="2" />
<text  x="147.65" y="1887.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1189.0" y="1605" width="0.2" height="15.0" fill="rgb(223,128,35)" rx="2" ry="2" />
<text  x="1192.00" y="1615.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="587.6" y="1861" width="0.2" height="15.0" fill="rgb(208,162,36)" rx="2" ry="2" />
<text  x="590.60" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="916.5" y="1765" width="0.2" height="15.0" fill="rgb(250,201,22)" rx="2" ry="2" />
<text  x="919.51" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="879.5" y="1669" width="0.2" height="15.0" fill="rgb(212,189,34)" rx="2" ry="2" />
<text  x="882.49" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="211.5" y="1829" width="0.2" height="15.0" fill="rgb(236,68,23)" rx="2" ry="2" />
<text  x="214.47" y="1839.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="542.6" y="1989" width="0.4" height="15.0" fill="rgb(217,157,26)" rx="2" ry="2" />
<text  x="545.58" y="1999.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.02%)</title><rect x="969.3" y="1765" width="0.2" height="15.0" fill="rgb(239,158,36)" rx="2" ry="2" />
<text  x="972.33" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="557.0" y="1893" width="0.4" height="15.0" fill="rgb(251,111,15)" rx="2" ry="2" />
<text  x="559.99" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="544.8" y="1973" width="0.2" height="15.0" fill="rgb(249,148,42)" rx="2" ry="2" />
<text  x="547.78" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="908.3" y="1973" width="0.2" height="15.0" fill="rgb(254,53,51)" rx="2" ry="2" />
<text  x="911.30" y="1983.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="557.4" y="1909" width="0.2" height="15.0" fill="rgb(241,118,13)" rx="2" ry="2" />
<text  x="560.39" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (6 samples, 0.10%)</title><rect x="968.3" y="2037" width="1.2" height="15.0" fill="rgb(210,157,33)" rx="2" ry="2" />
<text  x="971.32" y="2047.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="315.9" y="1829" width="0.2" height="15.0" fill="rgb(213,88,1)" rx="2" ry="2" />
<text  x="318.90" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="648.4" y="1637" width="0.2" height="15.0" fill="rgb(207,56,10)" rx="2" ry="2" />
<text  x="651.42" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="267.5" y="1541" width="0.2" height="15.0" fill="rgb(212,215,28)" rx="2" ry="2" />
<text  x="270.49" y="1551.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="332.5" y="1573" width="0.2" height="15.0" fill="rgb(205,223,34)" rx="2" ry="2" />
<text  x="335.51" y="1583.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="880.5" y="1893" width="0.2" height="15.0" fill="rgb(239,70,31)" rx="2" ry="2" />
<text  x="883.50" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="67.2" y="1941" width="0.2" height="15.0" fill="rgb(246,7,23)" rx="2" ry="2" />
<text  x="70.22" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="890.9" y="1973" width="0.2" height="15.0" fill="rgb(251,225,50)" rx="2" ry="2" />
<text  x="893.90" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="628.0" y="1957" width="0.2" height="15.0" fill="rgb(252,99,28)" rx="2" ry="2" />
<text  x="631.01" y="1967.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="78.2" y="1845" width="0.8" height="15.0" fill="rgb(215,50,38)" rx="2" ry="2" />
<text  x="81.22" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="611.6" y="1765" width="0.2" height="15.0" fill="rgb(211,203,52)" rx="2" ry="2" />
<text  x="614.60" y="1775.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="58.4" y="1925" width="0.2" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="61.42" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="120.4" y="1445" width="0.2" height="15.0" fill="rgb(240,109,44)" rx="2" ry="2" />
<text  x="123.44" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.56%)</title><rect x="102.8" y="1765" width="18.4" height="15.0" fill="rgb(215,167,8)" rx="2" ry="2" />
<text  x="105.83" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="408.1" y="1669" width="0.2" height="15.0" fill="rgb(225,213,21)" rx="2" ry="2" />
<text  x="411.13" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.6" y="469" width="0.2" height="15.0" fill="rgb(232,42,47)" rx="2" ry="2" />
<text  x="121.64" y="479.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="470.6" y="1637" width="0.2" height="15.0" fill="rgb(254,57,15)" rx="2" ry="2" />
<text  x="473.56" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="505.0" y="1797" width="0.2" height="15.0" fill="rgb(250,31,28)" rx="2" ry="2" />
<text  x="507.97" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.1" y="1717" width="0.2" height="15.0" fill="rgb(251,96,53)" rx="2" ry="2" />
<text  x="844.08" y="1727.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1184.4" y="2021" width="0.4" height="15.0" fill="rgb(230,84,20)" rx="2" ry="2" />
<text  x="1187.40" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="914.9" y="1701" width="0.2" height="15.0" fill="rgb(215,22,4)" rx="2" ry="2" />
<text  x="917.91" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="53.0" y="1765" width="0.2" height="15.0" fill="rgb(215,44,4)" rx="2" ry="2" />
<text  x="56.01" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (5 samples, 0.08%)</title><rect x="1143.6" y="2005" width="1.0" height="15.0" fill="rgb(253,97,52)" rx="2" ry="2" />
<text  x="1146.58" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="150.6" y="1829" width="0.2" height="15.0" fill="rgb(240,106,21)" rx="2" ry="2" />
<text  x="153.65" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="553.2" y="1941" width="0.6" height="15.0" fill="rgb(254,85,22)" rx="2" ry="2" />
<text  x="556.18" y="1951.5" ></text>
</g>
<g >
<title>alloc_file (61 samples, 1.03%)</title><rect x="409.9" y="1941" width="12.2" height="15.0" fill="rgb(215,113,36)" rx="2" ry="2" />
<text  x="412.94" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (7 samples, 0.12%)</title><rect x="929.5" y="1893" width="1.4" height="15.0" fill="rgb(227,116,10)" rx="2" ry="2" />
<text  x="932.51" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="112.4" y="37" width="0.2" height="15.0" fill="rgb(205,96,50)" rx="2" ry="2" />
<text  x="115.43" y="47.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="889.1" y="1509" width="0.2" height="15.0" fill="rgb(249,165,17)" rx="2" ry="2" />
<text  x="892.10" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="853.3" y="1861" width="0.2" height="15.0" fill="rgb(252,46,23)" rx="2" ry="2" />
<text  x="856.29" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="174.5" y="2021" width="0.2" height="15.0" fill="rgb(242,149,2)" rx="2" ry="2" />
<text  x="177.46" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="384.5" y="1733" width="0.2" height="15.0" fill="rgb(219,23,50)" rx="2" ry="2" />
<text  x="387.53" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="557.4" y="1941" width="0.2" height="15.0" fill="rgb(207,229,12)" rx="2" ry="2" />
<text  x="560.39" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="402.1" y="1605" width="0.2" height="15.0" fill="rgb(234,34,42)" rx="2" ry="2" />
<text  x="405.13" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.07%)</title><rect x="627.8" y="2005" width="0.8" height="15.0" fill="rgb(210,221,2)" rx="2" ry="2" />
<text  x="630.81" y="2015.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="540.6" y="1973" width="0.4" height="15.0" fill="rgb(249,150,13)" rx="2" ry="2" />
<text  x="543.58" y="1983.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="935.1" y="1925" width="0.2" height="15.0" fill="rgb(210,38,48)" rx="2" ry="2" />
<text  x="938.11" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="321.5" y="1589" width="0.2" height="15.0" fill="rgb(228,9,0)" rx="2" ry="2" />
<text  x="324.51" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="454.0" y="1733" width="0.2" height="15.0" fill="rgb(205,69,39)" rx="2" ry="2" />
<text  x="456.95" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="426.3" y="1909" width="0.2" height="15.0" fill="rgb(214,36,43)" rx="2" ry="2" />
<text  x="429.34" y="1919.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="752.5" y="1701" width="0.4" height="15.0" fill="rgb(218,55,16)" rx="2" ry="2" />
<text  x="755.45" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="831.9" y="1621" width="0.2" height="15.0" fill="rgb(207,126,36)" rx="2" ry="2" />
<text  x="834.88" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="610.6" y="1605" width="0.2" height="15.0" fill="rgb(225,131,35)" rx="2" ry="2" />
<text  x="613.60" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="914.9" y="1989" width="0.2" height="15.0" fill="rgb(243,159,0)" rx="2" ry="2" />
<text  x="917.91" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="357.1" y="1637" width="0.2" height="15.0" fill="rgb(221,162,17)" rx="2" ry="2" />
<text  x="360.12" y="1647.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1184.4" y="2005" width="0.4" height="15.0" fill="rgb(252,71,54)" rx="2" ry="2" />
<text  x="1187.40" y="2015.5" ></text>
</g>
<g >
<title>sock_destroy_inode (16 samples, 0.27%)</title><rect x="749.3" y="1685" width="3.2" height="15.0" fill="rgb(232,2,40)" rx="2" ry="2" />
<text  x="752.25" y="1695.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1008.7" y="1957" width="0.2" height="15.0" fill="rgb(206,226,31)" rx="2" ry="2" />
<text  x="1011.74" y="1967.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="630.0" y="1893" width="0.2" height="15.0" fill="rgb(219,41,41)" rx="2" ry="2" />
<text  x="633.01" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (11 samples, 0.19%)</title><rect x="639.4" y="2005" width="2.2" height="15.0" fill="rgb(232,79,52)" rx="2" ry="2" />
<text  x="642.41" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="617.6" y="1973" width="0.2" height="15.0" fill="rgb(240,104,6)" rx="2" ry="2" />
<text  x="620.61" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.41%)</title><rect x="103.0" y="1365" width="16.6" height="15.0" fill="rgb(235,92,12)" rx="2" ry="2" />
<text  x="106.03" y="1375.5" ></text>
</g>
<g >
<title>tcp_init_xmit_timers (1 samples, 0.02%)</title><rect x="565.6" y="1701" width="0.2" height="15.0" fill="rgb(239,110,53)" rx="2" ry="2" />
<text  x="568.59" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="74.2" y="1925" width="0.2" height="15.0" fill="rgb(210,14,19)" rx="2" ry="2" />
<text  x="77.22" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="969.1" y="1829" width="0.4" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="972.13" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="70.2" y="1845" width="0.4" height="15.0" fill="rgb(205,139,50)" rx="2" ry="2" />
<text  x="73.22" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="847.7" y="1877" width="0.2" height="15.0" fill="rgb(229,16,23)" rx="2" ry="2" />
<text  x="850.68" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="703.6" y="1861" width="0.4" height="15.0" fill="rgb(236,88,4)" rx="2" ry="2" />
<text  x="706.64" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="157.9" y="1829" width="0.2" height="15.0" fill="rgb(219,142,42)" rx="2" ry="2" />
<text  x="160.85" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="858.5" y="1749" width="0.2" height="15.0" fill="rgb(207,105,23)" rx="2" ry="2" />
<text  x="861.49" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="118.2" y="181" width="0.2" height="15.0" fill="rgb(244,205,46)" rx="2" ry="2" />
<text  x="121.24" y="191.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="156.4" y="1925" width="0.2" height="15.0" fill="rgb(216,187,31)" rx="2" ry="2" />
<text  x="159.45" y="1935.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="748.5" y="1669" width="0.2" height="15.0" fill="rgb(237,170,19)" rx="2" ry="2" />
<text  x="751.45" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="137.6" y="1989" width="0.2" height="15.0" fill="rgb(220,57,10)" rx="2" ry="2" />
<text  x="140.64" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="843.5" y="1829" width="0.2" height="15.0" fill="rgb(210,192,15)" rx="2" ry="2" />
<text  x="846.48" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.6" y="501" width="0.2" height="15.0" fill="rgb(218,27,42)" rx="2" ry="2" />
<text  x="121.64" y="511.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="711.0" y="1989" width="0.8" height="15.0" fill="rgb(205,57,31)" rx="2" ry="2" />
<text  x="714.04" y="1999.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="229.5" y="1957" width="0.2" height="15.0" fill="rgb(210,87,38)" rx="2" ry="2" />
<text  x="232.47" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="626.2" y="1909" width="0.2" height="15.0" fill="rgb(215,228,50)" rx="2" ry="2" />
<text  x="629.21" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (12 samples, 0.20%)</title><rect x="218.9" y="1861" width="2.4" height="15.0" fill="rgb(236,6,38)" rx="2" ry="2" />
<text  x="221.87" y="1871.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1139.0" y="1717" width="0.2" height="15.0" fill="rgb(222,126,13)" rx="2" ry="2" />
<text  x="1141.98" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="848.7" y="1877" width="0.4" height="15.0" fill="rgb(243,163,4)" rx="2" ry="2" />
<text  x="851.68" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="787.1" y="1493" width="0.2" height="15.0" fill="rgb(207,88,50)" rx="2" ry="2" />
<text  x="790.06" y="1503.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.02%)</title><rect x="277.5" y="1813" width="0.2" height="15.0" fill="rgb(254,108,44)" rx="2" ry="2" />
<text  x="280.49" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="430.3" y="1781" width="0.2" height="15.0" fill="rgb(205,180,35)" rx="2" ry="2" />
<text  x="433.34" y="1791.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="259.1" y="1877" width="0.4" height="15.0" fill="rgb(247,13,1)" rx="2" ry="2" />
<text  x="262.08" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (6 samples, 0.10%)</title><rect x="713.2" y="2037" width="1.2" height="15.0" fill="rgb(245,214,16)" rx="2" ry="2" />
<text  x="716.24" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="307.9" y="1781" width="0.4" height="15.0" fill="rgb(237,92,19)" rx="2" ry="2" />
<text  x="310.90" y="1791.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1068.0" y="1637" width="0.2" height="15.0" fill="rgb(235,167,36)" rx="2" ry="2" />
<text  x="1070.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="332.5" y="1589" width="0.2" height="15.0" fill="rgb(232,2,21)" rx="2" ry="2" />
<text  x="335.51" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="752.5" y="1493" width="0.2" height="15.0" fill="rgb(246,193,37)" rx="2" ry="2" />
<text  x="755.45" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="565.6" y="1877" width="0.2" height="15.0" fill="rgb(246,171,42)" rx="2" ry="2" />
<text  x="568.59" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="583.0" y="1797" width="0.2" height="15.0" fill="rgb(221,166,32)" rx="2" ry="2" />
<text  x="585.99" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="879.5" y="1717" width="0.2" height="15.0" fill="rgb(225,129,37)" rx="2" ry="2" />
<text  x="882.49" y="1727.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (17 samples, 0.29%)</title><rect x="813.1" y="1653" width="3.4" height="15.0" fill="rgb(235,223,0)" rx="2" ry="2" />
<text  x="816.07" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (6 samples, 0.10%)</title><rect x="943.7" y="2005" width="1.2" height="15.0" fill="rgb(238,215,26)" rx="2" ry="2" />
<text  x="946.72" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (10 samples, 0.17%)</title><rect x="286.1" y="1605" width="2.0" height="15.0" fill="rgb(218,94,16)" rx="2" ry="2" />
<text  x="289.09" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="565.6" y="1893" width="0.2" height="15.0" fill="rgb(250,3,0)" rx="2" ry="2" />
<text  x="568.59" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="969.1" y="1685" width="0.2" height="15.0" fill="rgb(243,144,0)" rx="2" ry="2" />
<text  x="972.13" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="97.8" y="1909" width="0.2" height="15.0" fill="rgb(215,41,20)" rx="2" ry="2" />
<text  x="100.83" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="80.0" y="1781" width="0.2" height="15.0" fill="rgb(225,111,39)" rx="2" ry="2" />
<text  x="83.02" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="969.1" y="1749" width="0.2" height="15.0" fill="rgb(211,180,6)" rx="2" ry="2" />
<text  x="972.13" y="1759.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="787.9" y="1237" width="0.2" height="15.0" fill="rgb(252,202,31)" rx="2" ry="2" />
<text  x="790.86" y="1247.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="428.7" y="1973" width="0.2" height="15.0" fill="rgb(213,111,16)" rx="2" ry="2" />
<text  x="431.74" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1005.1" y="1765" width="0.2" height="15.0" fill="rgb(215,203,51)" rx="2" ry="2" />
<text  x="1008.14" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (4 samples, 0.07%)</title><rect x="592.2" y="2005" width="0.8" height="15.0" fill="rgb(206,8,43)" rx="2" ry="2" />
<text  x="595.20" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="92.6" y="2005" width="0.4" height="15.0" fill="rgb(225,63,26)" rx="2" ry="2" />
<text  x="95.63" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="483.6" y="1589" width="0.2" height="15.0" fill="rgb(230,145,49)" rx="2" ry="2" />
<text  x="486.56" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="753.9" y="1509" width="0.2" height="15.0" fill="rgb(242,128,30)" rx="2" ry="2" />
<text  x="756.85" y="1519.5" ></text>
</g>
<g >
<title>lock_timer_base (5 samples, 0.08%)</title><rect x="815.5" y="1605" width="1.0" height="15.0" fill="rgb(239,174,23)" rx="2" ry="2" />
<text  x="818.47" y="1615.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="120.6" y="1685" width="0.2" height="15.0" fill="rgb(236,130,23)" rx="2" ry="2" />
<text  x="123.64" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="854.9" y="1845" width="0.2" height="15.0" fill="rgb(253,117,34)" rx="2" ry="2" />
<text  x="857.89" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="739.4" y="1733" width="0.2" height="15.0" fill="rgb(219,53,11)" rx="2" ry="2" />
<text  x="742.45" y="1743.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="29.2" y="1989" width="0.2" height="15.0" fill="rgb(209,82,26)" rx="2" ry="2" />
<text  x="32.21" y="1999.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (16 samples, 0.27%)</title><rect x="422.1" y="1941" width="3.2" height="15.0" fill="rgb(230,39,10)" rx="2" ry="2" />
<text  x="425.14" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="935.3" y="1669" width="0.2" height="15.0" fill="rgb(235,222,53)" rx="2" ry="2" />
<text  x="938.31" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="827.3" y="1573" width="0.2" height="15.0" fill="rgb(249,88,29)" rx="2" ry="2" />
<text  x="830.28" y="1583.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="76.0" y="1957" width="0.2" height="15.0" fill="rgb(248,73,31)" rx="2" ry="2" />
<text  x="79.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="664.0" y="1701" width="0.2" height="15.0" fill="rgb(248,112,51)" rx="2" ry="2" />
<text  x="667.02" y="1711.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="655.0" y="1973" width="0.2" height="15.0" fill="rgb(224,152,9)" rx="2" ry="2" />
<text  x="658.02" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="565.8" y="1957" width="0.2" height="15.0" fill="rgb(206,201,5)" rx="2" ry="2" />
<text  x="568.79" y="1967.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="628.2" y="1941" width="0.2" height="15.0" fill="rgb(224,154,39)" rx="2" ry="2" />
<text  x="631.21" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="518.6" y="1877" width="0.6" height="15.0" fill="rgb(240,200,2)" rx="2" ry="2" />
<text  x="521.57" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="483.4" y="1909" width="0.2" height="15.0" fill="rgb(205,189,41)" rx="2" ry="2" />
<text  x="486.36" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="505.0" y="1909" width="0.2" height="15.0" fill="rgb(226,88,26)" rx="2" ry="2" />
<text  x="507.97" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1049.6" y="1925" width="0.2" height="15.0" fill="rgb(238,62,1)" rx="2" ry="2" />
<text  x="1052.55" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="525.6" y="1605" width="0.2" height="15.0" fill="rgb(213,195,8)" rx="2" ry="2" />
<text  x="528.57" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1130.2" y="2021" width="0.8" height="15.0" fill="rgb(218,184,3)" rx="2" ry="2" />
<text  x="1133.18" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="753.9" y="1669" width="0.2" height="15.0" fill="rgb(221,148,54)" rx="2" ry="2" />
<text  x="756.85" y="1679.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="936.1" y="1941" width="0.2" height="15.0" fill="rgb(234,11,53)" rx="2" ry="2" />
<text  x="939.11" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="561.2" y="1973" width="0.2" height="15.0" fill="rgb(220,57,24)" rx="2" ry="2" />
<text  x="564.19" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1125.6" y="1813" width="0.2" height="15.0" fill="rgb(246,186,30)" rx="2" ry="2" />
<text  x="1128.58" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="117.4" y="69" width="0.2" height="15.0" fill="rgb(212,142,26)" rx="2" ry="2" />
<text  x="120.44" y="79.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="707.2" y="1893" width="0.6" height="15.0" fill="rgb(233,23,24)" rx="2" ry="2" />
<text  x="710.24" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="634.6" y="1893" width="0.2" height="15.0" fill="rgb(235,170,36)" rx="2" ry="2" />
<text  x="637.61" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="707.4" y="1685" width="0.2" height="15.0" fill="rgb(231,101,3)" rx="2" ry="2" />
<text  x="710.44" y="1695.5" ></text>
</g>
<g >
<title>validate_xmit_skb (12 samples, 0.20%)</title><rect x="802.5" y="1525" width="2.4" height="15.0" fill="rgb(214,228,46)" rx="2" ry="2" />
<text  x="805.47" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="54.2" y="1893" width="0.2" height="15.0" fill="rgb(229,184,39)" rx="2" ry="2" />
<text  x="57.21" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="963.9" y="1973" width="0.2" height="15.0" fill="rgb(242,155,53)" rx="2" ry="2" />
<text  x="966.92" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="697.6" y="1893" width="0.2" height="15.0" fill="rgb(239,68,47)" rx="2" ry="2" />
<text  x="700.63" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="943.9" y="1989" width="1.0" height="15.0" fill="rgb(230,94,20)" rx="2" ry="2" />
<text  x="946.92" y="1999.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="220.3" y="1829" width="0.4" height="15.0" fill="rgb(244,91,10)" rx="2" ry="2" />
<text  x="223.27" y="1839.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="787.3" y="1253" width="0.2" height="15.0" fill="rgb(249,57,29)" rx="2" ry="2" />
<text  x="790.26" y="1263.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="483.6" y="1669" width="0.2" height="15.0" fill="rgb(205,146,52)" rx="2" ry="2" />
<text  x="486.56" y="1679.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1068.2" y="1845" width="0.2" height="15.0" fill="rgb(234,176,46)" rx="2" ry="2" />
<text  x="1071.16" y="1855.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="321.7" y="1749" width="0.2" height="15.0" fill="rgb(245,185,43)" rx="2" ry="2" />
<text  x="324.71" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="148.8" y="1877" width="0.4" height="15.0" fill="rgb(238,138,1)" rx="2" ry="2" />
<text  x="151.85" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="53.0" y="1637" width="0.2" height="15.0" fill="rgb(221,146,52)" rx="2" ry="2" />
<text  x="56.01" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="875.3" y="1685" width="0.2" height="15.0" fill="rgb(216,116,12)" rx="2" ry="2" />
<text  x="878.29" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (81 samples, 1.37%)</title><rect x="206.5" y="1941" width="16.2" height="15.0" fill="rgb(228,108,3)" rx="2" ry="2" />
<text  x="209.47" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="890.9" y="1845" width="0.2" height="15.0" fill="rgb(231,45,22)" rx="2" ry="2" />
<text  x="893.90" y="1855.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="970.1" y="1941" width="0.2" height="15.0" fill="rgb(246,202,1)" rx="2" ry="2" />
<text  x="973.13" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (102 samples, 1.73%)</title><rect x="594.8" y="1973" width="20.4" height="15.0" fill="rgb(236,158,12)" rx="2" ry="2" />
<text  x="597.80" y="1983.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="454.0" y="1989" width="0.2" height="15.0" fill="rgb(245,102,36)" rx="2" ry="2" />
<text  x="456.95" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="217.7" y="1797" width="0.2" height="15.0" fill="rgb(228,26,22)" rx="2" ry="2" />
<text  x="220.67" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="933.7" y="1829" width="0.2" height="15.0" fill="rgb(245,225,50)" rx="2" ry="2" />
<text  x="936.71" y="1839.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2 samples, 0.03%)</title><rect x="624.2" y="1829" width="0.4" height="15.0" fill="rgb(237,189,17)" rx="2" ry="2" />
<text  x="627.21" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="843.7" y="1797" width="0.2" height="15.0" fill="rgb(226,184,8)" rx="2" ry="2" />
<text  x="846.68" y="1807.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (33 samples, 0.56%)</title><rect x="917.9" y="1973" width="6.6" height="15.0" fill="rgb(215,107,46)" rx="2" ry="2" />
<text  x="920.91" y="1983.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (8 samples, 0.14%)</title><rect x="1182.8" y="2053" width="1.6" height="15.0" fill="rgb(229,189,31)" rx="2" ry="2" />
<text  x="1185.80" y="2063.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="414.9" y="1813" width="0.2" height="15.0" fill="rgb(208,152,37)" rx="2" ry="2" />
<text  x="417.94" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="963.9" y="1957" width="0.2" height="15.0" fill="rgb(225,27,49)" rx="2" ry="2" />
<text  x="966.92" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1174.0" y="1973" width="0.4" height="15.0" fill="rgb(213,161,29)" rx="2" ry="2" />
<text  x="1176.99" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="470.6" y="1861" width="0.2" height="15.0" fill="rgb(222,150,33)" rx="2" ry="2" />
<text  x="473.56" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="680.0" y="1813" width="0.2" height="15.0" fill="rgb(253,49,14)" rx="2" ry="2" />
<text  x="683.03" y="1823.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="103.8" y="37" width="0.2" height="15.0" fill="rgb(236,176,10)" rx="2" ry="2" />
<text  x="106.83" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="180.5" y="1781" width="0.2" height="15.0" fill="rgb(235,197,32)" rx="2" ry="2" />
<text  x="183.46" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="964.9" y="1957" width="0.2" height="15.0" fill="rgb(213,88,21)" rx="2" ry="2" />
<text  x="967.92" y="1967.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="313.9" y="1813" width="0.2" height="15.0" fill="rgb(228,123,10)" rx="2" ry="2" />
<text  x="316.90" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1179.0" y="1989" width="0.4" height="15.0" fill="rgb(239,131,54)" rx="2" ry="2" />
<text  x="1182.00" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="339.5" y="1877" width="0.6" height="15.0" fill="rgb(214,41,11)" rx="2" ry="2" />
<text  x="342.51" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (8 samples, 0.14%)</title><rect x="214.3" y="1877" width="1.6" height="15.0" fill="rgb(248,121,43)" rx="2" ry="2" />
<text  x="217.27" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="150.6" y="1861" width="0.2" height="15.0" fill="rgb(241,25,41)" rx="2" ry="2" />
<text  x="153.65" y="1871.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="889.3" y="1845" width="0.8" height="15.0" fill="rgb(241,213,40)" rx="2" ry="2" />
<text  x="892.30" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (2 samples, 0.03%)</title><rect x="37.0" y="1941" width="0.4" height="15.0" fill="rgb(226,67,49)" rx="2" ry="2" />
<text  x="40.01" y="1951.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (2 samples, 0.03%)</title><rect x="930.9" y="1893" width="0.4" height="15.0" fill="rgb(245,62,22)" rx="2" ry="2" />
<text  x="933.91" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="61.8" y="1845" width="0.2" height="15.0" fill="rgb(216,196,7)" rx="2" ry="2" />
<text  x="64.82" y="1855.5" ></text>
</g>
<g >
<title>inode_init_always (10 samples, 0.17%)</title><rect x="400.7" y="1909" width="2.0" height="15.0" fill="rgb(219,180,33)" rx="2" ry="2" />
<text  x="403.73" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="197.5" y="2021" width="0.2" height="15.0" fill="rgb(236,172,25)" rx="2" ry="2" />
<text  x="200.46" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="332.5" y="1733" width="0.2" height="15.0" fill="rgb(230,215,2)" rx="2" ry="2" />
<text  x="335.51" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="921.7" y="1893" width="0.8" height="15.0" fill="rgb(235,10,41)" rx="2" ry="2" />
<text  x="924.71" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1067.8" y="1637" width="0.2" height="15.0" fill="rgb(250,171,32)" rx="2" ry="2" />
<text  x="1070.76" y="1647.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="887.3" y="1925" width="0.6" height="15.0" fill="rgb(237,124,27)" rx="2" ry="2" />
<text  x="890.30" y="1935.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="1005.1" y="1701" width="0.2" height="15.0" fill="rgb(227,178,46)" rx="2" ry="2" />
<text  x="1008.14" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="858.9" y="1941" width="0.2" height="15.0" fill="rgb(235,160,19)" rx="2" ry="2" />
<text  x="861.89" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="942.9" y="1909" width="0.2" height="15.0" fill="rgb(225,29,7)" rx="2" ry="2" />
<text  x="945.92" y="1919.5" ></text>
</g>
<g >
<title>security_file_alloc (22 samples, 0.37%)</title><rect x="417.7" y="1909" width="4.4" height="15.0" fill="rgb(222,82,4)" rx="2" ry="2" />
<text  x="420.74" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="995.3" y="1957" width="0.4" height="15.0" fill="rgb(207,61,39)" rx="2" ry="2" />
<text  x="998.33" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="117.4" y="85" width="0.2" height="15.0" fill="rgb(222,140,27)" rx="2" ry="2" />
<text  x="120.44" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="271.9" y="1701" width="0.4" height="15.0" fill="rgb(234,16,41)" rx="2" ry="2" />
<text  x="274.89" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (15 samples, 0.25%)</title><rect x="891.1" y="2005" width="3.0" height="15.0" fill="rgb(209,202,2)" rx="2" ry="2" />
<text  x="894.10" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="180.5" y="1845" width="0.2" height="15.0" fill="rgb(244,102,36)" rx="2" ry="2" />
<text  x="183.46" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="567.6" y="1877" width="0.2" height="15.0" fill="rgb(244,114,41)" rx="2" ry="2" />
<text  x="570.59" y="1887.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="603.4" y="1573" width="0.2" height="15.0" fill="rgb(224,167,10)" rx="2" ry="2" />
<text  x="606.40" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="363.5" y="1685" width="0.2" height="15.0" fill="rgb(220,207,14)" rx="2" ry="2" />
<text  x="366.52" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="924.1" y="1941" width="0.4" height="15.0" fill="rgb(230,144,38)" rx="2" ry="2" />
<text  x="927.11" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="963.9" y="1989" width="0.2" height="15.0" fill="rgb(213,89,22)" rx="2" ry="2" />
<text  x="966.92" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="217.5" y="1813" width="0.4" height="15.0" fill="rgb(252,226,16)" rx="2" ry="2" />
<text  x="220.47" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1139.0" y="2005" width="0.2" height="15.0" fill="rgb(215,10,47)" rx="2" ry="2" />
<text  x="1141.98" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="209.5" y="1861" width="0.2" height="15.0" fill="rgb(254,60,12)" rx="2" ry="2" />
<text  x="212.47" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (3 samples, 0.05%)</title><rect x="148.0" y="1893" width="0.6" height="15.0" fill="rgb(217,20,0)" rx="2" ry="2" />
<text  x="151.05" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="831.9" y="1653" width="0.2" height="15.0" fill="rgb(228,117,10)" rx="2" ry="2" />
<text  x="834.88" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (6 samples, 0.10%)</title><rect x="48.6" y="1909" width="1.2" height="15.0" fill="rgb(249,130,3)" rx="2" ry="2" />
<text  x="51.61" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="61.2" y="1813" width="0.2" height="15.0" fill="rgb(247,198,1)" rx="2" ry="2" />
<text  x="64.22" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="879.5" y="1925" width="0.2" height="15.0" fill="rgb(213,204,9)" rx="2" ry="2" />
<text  x="882.49" y="1935.5" ></text>
</g>
<g >
<title>skb_entail (23 samples, 0.39%)</title><rect x="267.9" y="1877" width="4.6" height="15.0" fill="rgb(252,188,18)" rx="2" ry="2" />
<text  x="270.89" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="340.9" y="2021" width="0.4" height="15.0" fill="rgb(225,88,47)" rx="2" ry="2" />
<text  x="343.91" y="2031.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (2 samples, 0.03%)</title><rect x="1005.3" y="2005" width="0.4" height="15.0" fill="rgb(240,185,18)" rx="2" ry="2" />
<text  x="1008.34" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1130.8" y="1781" width="0.2" height="15.0" fill="rgb(251,49,16)" rx="2" ry="2" />
<text  x="1133.78" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="961.5" y="2037" width="0.2" height="15.0" fill="rgb(223,106,28)" rx="2" ry="2" />
<text  x="964.52" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1177.6" y="1989" width="0.2" height="15.0" fill="rgb(205,88,31)" rx="2" ry="2" />
<text  x="1180.60" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (12 samples, 0.20%)</title><rect x="76.8" y="1957" width="2.4" height="15.0" fill="rgb(239,124,25)" rx="2" ry="2" />
<text  x="79.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="848.5" y="1749" width="0.2" height="15.0" fill="rgb(250,111,23)" rx="2" ry="2" />
<text  x="851.48" y="1759.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.10 (1 samples, 0.02%)</title><rect x="1137.4" y="1957" width="0.2" height="15.0" fill="rgb(219,19,21)" rx="2" ry="2" />
<text  x="1140.38" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="543.4" y="1909" width="0.2" height="15.0" fill="rgb(214,127,51)" rx="2" ry="2" />
<text  x="546.38" y="1919.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (400 samples, 6.78%)</title><rect x="13.6" y="2053" width="80.0" height="15.0" fill="rgb(248,30,45)" rx="2" ry="2" />
<text  x="16.60" y="2063.5" >[libevent..</text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="707.2" y="1877" width="0.6" height="15.0" fill="rgb(208,197,1)" rx="2" ry="2" />
<text  x="710.24" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="559.6" y="1941" width="1.6" height="15.0" fill="rgb(249,194,35)" rx="2" ry="2" />
<text  x="562.59" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1054.4" y="1845" width="0.2" height="15.0" fill="rgb(229,43,47)" rx="2" ry="2" />
<text  x="1057.35" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="735.2" y="1813" width="0.2" height="15.0" fill="rgb(217,143,15)" rx="2" ry="2" />
<text  x="738.25" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="503.6" y="1973" width="0.6" height="15.0" fill="rgb(254,172,14)" rx="2" ry="2" />
<text  x="506.57" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="575.8" y="1845" width="0.4" height="15.0" fill="rgb(228,196,2)" rx="2" ry="2" />
<text  x="578.79" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1605" width="0.2" height="15.0" fill="rgb(211,20,9)" rx="2" ry="2" />
<text  x="259.48" y="1615.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="503.6" y="1925" width="0.2" height="15.0" fill="rgb(234,49,38)" rx="2" ry="2" />
<text  x="506.57" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="835.7" y="1765" width="0.2" height="15.0" fill="rgb(235,150,4)" rx="2" ry="2" />
<text  x="838.68" y="1775.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="712.4" y="1749" width="0.2" height="15.0" fill="rgb(223,155,34)" rx="2" ry="2" />
<text  x="715.44" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="555.8" y="1925" width="1.0" height="15.0" fill="rgb(251,103,17)" rx="2" ry="2" />
<text  x="558.79" y="1935.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1073.6" y="1877" width="0.2" height="15.0" fill="rgb(215,39,49)" rx="2" ry="2" />
<text  x="1076.56" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="402.7" y="1861" width="0.2" height="15.0" fill="rgb(252,111,29)" rx="2" ry="2" />
<text  x="405.73" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1033.3" y="1989" width="0.2" height="15.0" fill="rgb(248,210,52)" rx="2" ry="2" />
<text  x="1036.35" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="97.8" y="1733" width="0.2" height="15.0" fill="rgb(244,14,20)" rx="2" ry="2" />
<text  x="100.83" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="518.8" y="1701" width="0.4" height="15.0" fill="rgb(208,25,26)" rx="2" ry="2" />
<text  x="521.77" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="835.7" y="1781" width="0.2" height="15.0" fill="rgb(232,205,10)" rx="2" ry="2" />
<text  x="838.68" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="483.6" y="1845" width="0.2" height="15.0" fill="rgb(228,205,18)" rx="2" ry="2" />
<text  x="486.56" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="881.1" y="1909" width="0.2" height="15.0" fill="rgb(233,225,14)" rx="2" ry="2" />
<text  x="884.10" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.9" y="1973" width="0.2" height="15.0" fill="rgb(242,115,35)" rx="2" ry="2" />
<text  x="160.85" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="603.4" y="1717" width="0.2" height="15.0" fill="rgb(228,12,45)" rx="2" ry="2" />
<text  x="606.40" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="531.8" y="1893" width="0.2" height="15.0" fill="rgb(217,97,31)" rx="2" ry="2" />
<text  x="534.78" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="51.4" y="1877" width="0.2" height="15.0" fill="rgb(252,91,33)" rx="2" ry="2" />
<text  x="54.41" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="544.6" y="1973" width="0.2" height="15.0" fill="rgb(220,86,36)" rx="2" ry="2" />
<text  x="547.58" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1120.2" y="1717" width="0.2" height="15.0" fill="rgb(221,46,48)" rx="2" ry="2" />
<text  x="1123.18" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="139.2" y="1909" width="0.2" height="15.0" fill="rgb(228,193,40)" rx="2" ry="2" />
<text  x="142.24" y="1919.5" ></text>
</g>
<g >
<title>__fdget (9 samples, 0.15%)</title><rect x="609.0" y="1845" width="1.8" height="15.0" fill="rgb(248,76,42)" rx="2" ry="2" />
<text  x="612.00" y="1855.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="486.8" y="1941" width="0.2" height="15.0" fill="rgb(217,65,23)" rx="2" ry="2" />
<text  x="489.76" y="1951.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (5 samples, 0.08%)</title><rect x="406.5" y="1861" width="1.0" height="15.0" fill="rgb(241,129,32)" rx="2" ry="2" />
<text  x="409.53" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="103.0" y="1349" width="16.4" height="15.0" fill="rgb(231,45,30)" rx="2" ry="2" />
<text  x="106.03" y="1359.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="211.1" y="1909" width="0.2" height="15.0" fill="rgb(253,191,45)" rx="2" ry="2" />
<text  x="214.07" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="898.1" y="1925" width="0.2" height="15.0" fill="rgb(253,176,34)" rx="2" ry="2" />
<text  x="901.10" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="843.5" y="1589" width="0.2" height="15.0" fill="rgb(215,96,6)" rx="2" ry="2" />
<text  x="846.48" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="648.4" y="1909" width="0.2" height="15.0" fill="rgb(245,87,11)" rx="2" ry="2" />
<text  x="651.42" y="1919.5" ></text>
</g>
<g >
<title>secure_tcp_seq (1 samples, 0.02%)</title><rect x="523.0" y="1557" width="0.2" height="15.0" fill="rgb(231,106,22)" rx="2" ry="2" />
<text  x="525.97" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="244.5" y="1941" width="0.2" height="15.0" fill="rgb(235,32,1)" rx="2" ry="2" />
<text  x="247.48" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1669" width="0.2" height="15.0" fill="rgb(237,132,43)" rx="2" ry="2" />
<text  x="614.40" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="383.5" y="1909" width="0.2" height="15.0" fill="rgb(215,226,30)" rx="2" ry="2" />
<text  x="386.53" y="1919.5" ></text>
</g>
<g >
<title>__GI___getsockname (23 samples, 0.39%)</title><rect x="190.7" y="2037" width="4.6" height="15.0" fill="rgb(240,62,31)" rx="2" ry="2" />
<text  x="193.66" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="454.0" y="1909" width="0.2" height="15.0" fill="rgb(236,187,15)" rx="2" ry="2" />
<text  x="456.95" y="1919.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="942.9" y="1781" width="0.2" height="15.0" fill="rgb(239,120,51)" rx="2" ry="2" />
<text  x="945.92" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="359.5" y="1925" width="0.2" height="15.0" fill="rgb(234,213,9)" rx="2" ry="2" />
<text  x="362.52" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="189.9" y="2005" width="0.4" height="15.0" fill="rgb(248,155,38)" rx="2" ry="2" />
<text  x="192.86" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="518.8" y="1653" width="0.4" height="15.0" fill="rgb(236,139,23)" rx="2" ry="2" />
<text  x="521.77" y="1663.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1130.8" y="1749" width="0.2" height="15.0" fill="rgb(252,221,20)" rx="2" ry="2" />
<text  x="1133.78" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="932.1" y="1925" width="0.4" height="15.0" fill="rgb(226,23,35)" rx="2" ry="2" />
<text  x="935.11" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="1129.4" y="1957" width="0.8" height="15.0" fill="rgb(236,12,22)" rx="2" ry="2" />
<text  x="1132.38" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="341.1" y="1941" width="0.2" height="15.0" fill="rgb(214,111,27)" rx="2" ry="2" />
<text  x="344.11" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (7 samples, 0.12%)</title><rect x="590.8" y="1989" width="1.4" height="15.0" fill="rgb(210,217,53)" rx="2" ry="2" />
<text  x="593.80" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="712.4" y="1829" width="0.2" height="15.0" fill="rgb(207,29,31)" rx="2" ry="2" />
<text  x="715.44" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (2 samples, 0.03%)</title><rect x="714.4" y="2037" width="0.4" height="15.0" fill="rgb(208,4,22)" rx="2" ry="2" />
<text  x="717.44" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output (122 samples, 2.07%)</title><rect x="282.5" y="1765" width="24.4" height="15.0" fill="rgb(240,147,4)" rx="2" ry="2" />
<text  x="285.49" y="1775.5" >i..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="121.8" y="1797" width="0.2" height="15.0" fill="rgb(238,132,11)" rx="2" ry="2" />
<text  x="124.84" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="894.1" y="2005" width="0.2" height="15.0" fill="rgb(206,165,48)" rx="2" ry="2" />
<text  x="897.10" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="969.1" y="1797" width="0.2" height="15.0" fill="rgb(238,4,23)" rx="2" ry="2" />
<text  x="972.13" y="1807.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="593.2" y="1973" width="0.4" height="15.0" fill="rgb(222,5,39)" rx="2" ry="2" />
<text  x="596.20" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="853.3" y="1797" width="0.2" height="15.0" fill="rgb(245,185,47)" rx="2" ry="2" />
<text  x="856.29" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="118.2" y="101" width="0.2" height="15.0" fill="rgb(249,109,9)" rx="2" ry="2" />
<text  x="121.24" y="111.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="249.9" y="1893" width="0.2" height="15.0" fill="rgb(233,17,13)" rx="2" ry="2" />
<text  x="252.88" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="332.5" y="1669" width="0.2" height="15.0" fill="rgb(225,72,21)" rx="2" ry="2" />
<text  x="335.51" y="1679.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (8 samples, 0.14%)</title><rect x="543.2" y="1989" width="1.6" height="15.0" fill="rgb(230,64,33)" rx="2" ry="2" />
<text  x="546.18" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1120.2" y="1509" width="0.2" height="15.0" fill="rgb(232,173,17)" rx="2" ry="2" />
<text  x="1123.18" y="1519.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="118.6" y="261" width="0.2" height="15.0" fill="rgb(226,67,48)" rx="2" ry="2" />
<text  x="121.64" y="271.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="854.7" y="1925" width="0.4" height="15.0" fill="rgb(216,174,43)" rx="2" ry="2" />
<text  x="857.69" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1188.8" y="1989" width="0.4" height="15.0" fill="rgb(245,21,15)" rx="2" ry="2" />
<text  x="1191.80" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="787.9" y="1221" width="0.2" height="15.0" fill="rgb(234,60,40)" rx="2" ry="2" />
<text  x="790.86" y="1231.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="587.6" y="1829" width="0.2" height="15.0" fill="rgb(207,203,9)" rx="2" ry="2" />
<text  x="590.60" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="935.3" y="1717" width="0.2" height="15.0" fill="rgb(251,183,14)" rx="2" ry="2" />
<text  x="938.31" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="824.1" y="1685" width="0.2" height="15.0" fill="rgb(229,204,45)" rx="2" ry="2" />
<text  x="827.08" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (4 samples, 0.07%)</title><rect x="663.4" y="2037" width="0.8" height="15.0" fill="rgb(207,10,17)" rx="2" ry="2" />
<text  x="666.42" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="707.4" y="1637" width="0.2" height="15.0" fill="rgb(252,136,7)" rx="2" ry="2" />
<text  x="710.44" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.73%)</title><rect x="102.8" y="1925" width="20.4" height="15.0" fill="rgb(241,165,3)" rx="2" ry="2" />
<text  x="105.83" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="696.4" y="1925" width="0.2" height="15.0" fill="rgb(222,202,37)" rx="2" ry="2" />
<text  x="699.43" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="118.6" y="357" width="0.2" height="15.0" fill="rgb(207,151,24)" rx="2" ry="2" />
<text  x="121.64" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1179.4" y="2021" width="0.2" height="15.0" fill="rgb(248,158,10)" rx="2" ry="2" />
<text  x="1182.40" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (3 samples, 0.05%)</title><rect x="587.2" y="2005" width="0.6" height="15.0" fill="rgb(235,85,31)" rx="2" ry="2" />
<text  x="590.20" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="103.0" y="1653" width="17.6" height="15.0" fill="rgb(206,86,14)" rx="2" ry="2" />
<text  x="106.03" y="1663.5" ></text>
</g>
<g >
<title>sock_rfree (9 samples, 0.15%)</title><rect x="1084.8" y="1893" width="1.8" height="15.0" fill="rgb(218,173,35)" rx="2" ry="2" />
<text  x="1087.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="704.4" y="1621" width="0.2" height="15.0" fill="rgb(228,96,12)" rx="2" ry="2" />
<text  x="707.44" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="264.7" y="1669" width="0.2" height="15.0" fill="rgb(218,213,30)" rx="2" ry="2" />
<text  x="267.69" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="523.0" y="1861" width="0.2" height="15.0" fill="rgb(226,24,43)" rx="2" ry="2" />
<text  x="525.97" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="174.3" y="1957" width="0.2" height="15.0" fill="rgb(254,74,17)" rx="2" ry="2" />
<text  x="177.26" y="1967.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="286.5" y="1429" width="0.2" height="15.0" fill="rgb(236,154,51)" rx="2" ry="2" />
<text  x="289.49" y="1439.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="307.7" y="1781" width="0.2" height="15.0" fill="rgb(220,6,26)" rx="2" ry="2" />
<text  x="310.70" y="1791.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="623.4" y="1541" width="0.2" height="15.0" fill="rgb(219,142,5)" rx="2" ry="2" />
<text  x="626.41" y="1551.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="585.2" y="1941" width="0.2" height="15.0" fill="rgb(236,64,23)" rx="2" ry="2" />
<text  x="588.19" y="1951.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="483.2" y="1525" width="0.2" height="15.0" fill="rgb(233,146,47)" rx="2" ry="2" />
<text  x="486.16" y="1535.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="119.2" y="1317" width="0.2" height="15.0" fill="rgb(254,74,1)" rx="2" ry="2" />
<text  x="122.24" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1139.2" y="2037" width="0.6" height="15.0" fill="rgb(216,132,12)" rx="2" ry="2" />
<text  x="1142.18" y="2047.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="491.2" y="1909" width="0.4" height="15.0" fill="rgb(239,37,3)" rx="2" ry="2" />
<text  x="494.16" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1102.0" y="1797" width="0.8" height="15.0" fill="rgb(221,22,41)" rx="2" ry="2" />
<text  x="1104.97" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1142.0" y="1893" width="0.2" height="15.0" fill="rgb(215,187,32)" rx="2" ry="2" />
<text  x="1144.98" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="994.3" y="1973" width="0.2" height="15.0" fill="rgb(216,162,27)" rx="2" ry="2" />
<text  x="997.33" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="954.3" y="1957" width="0.4" height="15.0" fill="rgb(219,29,27)" rx="2" ry="2" />
<text  x="957.32" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="565.6" y="1813" width="0.2" height="15.0" fill="rgb(246,7,36)" rx="2" ry="2" />
<text  x="568.59" y="1823.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="921.7" y="1781" width="0.8" height="15.0" fill="rgb(244,126,16)" rx="2" ry="2" />
<text  x="924.71" y="1791.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="1130.8" y="1717" width="0.2" height="15.0" fill="rgb(238,229,14)" rx="2" ry="2" />
<text  x="1133.78" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="198.3" y="2021" width="0.2" height="15.0" fill="rgb(243,36,34)" rx="2" ry="2" />
<text  x="201.26" y="2031.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="316.9" y="1797" width="0.2" height="15.0" fill="rgb(227,44,1)" rx="2" ry="2" />
<text  x="319.90" y="1807.5" ></text>
</g>
<g >
<title>__skb_clone (23 samples, 0.39%)</title><rect x="308.5" y="1797" width="4.6" height="15.0" fill="rgb(248,51,6)" rx="2" ry="2" />
<text  x="311.50" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="272.9" y="1829" width="0.2" height="15.0" fill="rgb(216,180,17)" rx="2" ry="2" />
<text  x="275.89" y="1839.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="567.6" y="1797" width="0.2" height="15.0" fill="rgb(227,2,12)" rx="2" ry="2" />
<text  x="570.59" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="117.8" y="101" width="0.2" height="15.0" fill="rgb(247,19,14)" rx="2" ry="2" />
<text  x="120.84" y="111.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="151.2" y="1893" width="0.4" height="15.0" fill="rgb(246,32,22)" rx="2" ry="2" />
<text  x="154.25" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="968.1" y="2005" width="0.2" height="15.0" fill="rgb(213,13,34)" rx="2" ry="2" />
<text  x="971.12" y="2015.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="858.5" y="1685" width="0.2" height="15.0" fill="rgb(216,211,3)" rx="2" ry="2" />
<text  x="861.49" y="1695.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="408.1" y="1877" width="0.2" height="15.0" fill="rgb(209,199,52)" rx="2" ry="2" />
<text  x="411.13" y="1887.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="150.6" y="1605" width="0.2" height="15.0" fill="rgb(240,147,0)" rx="2" ry="2" />
<text  x="153.65" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="384.5" y="1765" width="0.2" height="15.0" fill="rgb(226,214,14)" rx="2" ry="2" />
<text  x="387.53" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="831.7" y="1669" width="0.2" height="15.0" fill="rgb(205,80,18)" rx="2" ry="2" />
<text  x="834.68" y="1679.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="611.4" y="1573" width="0.2" height="15.0" fill="rgb(215,140,29)" rx="2" ry="2" />
<text  x="614.40" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="321.5" y="1573" width="0.2" height="15.0" fill="rgb(225,9,13)" rx="2" ry="2" />
<text  x="324.51" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.88%)</title><rect x="102.4" y="1989" width="22.2" height="15.0" fill="rgb(214,166,23)" rx="2" ry="2" />
<text  x="105.43" y="1999.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="381.5" y="1765" width="0.2" height="15.0" fill="rgb(219,193,0)" rx="2" ry="2" />
<text  x="384.53" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="182.7" y="1925" width="0.2" height="15.0" fill="rgb(215,148,48)" rx="2" ry="2" />
<text  x="185.66" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="165.3" y="1877" width="0.2" height="15.0" fill="rgb(215,62,12)" rx="2" ry="2" />
<text  x="168.25" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="540.2" y="1845" width="0.2" height="15.0" fill="rgb(218,122,21)" rx="2" ry="2" />
<text  x="543.18" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1073.8" y="1797" width="0.2" height="15.0" fill="rgb(253,224,40)" rx="2" ry="2" />
<text  x="1076.76" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="525.6" y="1765" width="0.2" height="15.0" fill="rgb(213,6,7)" rx="2" ry="2" />
<text  x="528.57" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="963.7" y="1957" width="0.2" height="15.0" fill="rgb(246,210,39)" rx="2" ry="2" />
<text  x="966.72" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="454.0" y="1973" width="0.2" height="15.0" fill="rgb(250,209,30)" rx="2" ry="2" />
<text  x="456.95" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="408.1" y="1701" width="0.2" height="15.0" fill="rgb(232,7,49)" rx="2" ry="2" />
<text  x="411.13" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="739.4" y="1573" width="0.2" height="15.0" fill="rgb(233,101,20)" rx="2" ry="2" />
<text  x="742.45" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="949.5" y="2005" width="0.4" height="15.0" fill="rgb(215,197,48)" rx="2" ry="2" />
<text  x="952.52" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="470.6" y="1733" width="0.2" height="15.0" fill="rgb(239,35,45)" rx="2" ry="2" />
<text  x="473.56" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="332.5" y="1685" width="0.2" height="15.0" fill="rgb(205,62,34)" rx="2" ry="2" />
<text  x="335.51" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="394.1" y="1893" width="0.2" height="15.0" fill="rgb(225,210,29)" rx="2" ry="2" />
<text  x="397.13" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="201.9" y="1941" width="2.6" height="15.0" fill="rgb(239,76,32)" rx="2" ry="2" />
<text  x="204.87" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="114.8" y="37" width="0.4" height="15.0" fill="rgb(211,187,33)" rx="2" ry="2" />
<text  x="117.84" y="47.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="130.2" y="1973" width="0.2" height="15.0" fill="rgb(227,6,45)" rx="2" ry="2" />
<text  x="133.24" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="244.5" y="1845" width="0.2" height="15.0" fill="rgb(243,111,16)" rx="2" ry="2" />
<text  x="247.48" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="683.8" y="1893" width="0.2" height="15.0" fill="rgb(216,220,26)" rx="2" ry="2" />
<text  x="686.83" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="118.0" y="69" width="0.2" height="15.0" fill="rgb(231,159,41)" rx="2" ry="2" />
<text  x="121.04" y="79.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="647.4" y="1813" width="0.2" height="15.0" fill="rgb(213,83,43)" rx="2" ry="2" />
<text  x="650.42" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="542.4" y="1957" width="0.2" height="15.0" fill="rgb(215,10,5)" rx="2" ry="2" />
<text  x="545.38" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="336.7" y="1877" width="0.2" height="15.0" fill="rgb(231,132,26)" rx="2" ry="2" />
<text  x="339.71" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="704.4" y="1845" width="0.2" height="15.0" fill="rgb(206,60,37)" rx="2" ry="2" />
<text  x="707.44" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.08%)</title><rect x="1182.8" y="2021" width="1.0" height="15.0" fill="rgb(231,114,20)" rx="2" ry="2" />
<text  x="1185.80" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (10 samples, 0.17%)</title><rect x="286.1" y="1621" width="2.0" height="15.0" fill="rgb(227,87,45)" rx="2" ry="2" />
<text  x="289.09" y="1631.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="171.5" y="1973" width="0.2" height="15.0" fill="rgb(240,187,44)" rx="2" ry="2" />
<text  x="174.45" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (9 samples, 0.15%)</title><rect x="1124.0" y="1925" width="1.8" height="15.0" fill="rgb(225,26,11)" rx="2" ry="2" />
<text  x="1126.98" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (28 samples, 0.47%)</title><rect x="1113.0" y="1509" width="5.6" height="15.0" fill="rgb(241,34,48)" rx="2" ry="2" />
<text  x="1115.97" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="626.2" y="1797" width="0.2" height="15.0" fill="rgb(223,80,14)" rx="2" ry="2" />
<text  x="629.21" y="1807.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="719.8" y="1845" width="0.2" height="15.0" fill="rgb(246,133,54)" rx="2" ry="2" />
<text  x="722.84" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="437" width="15.2" height="15.0" fill="rgb(205,64,34)" rx="2" ry="2" />
<text  x="106.43" y="447.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="854.9" y="1829" width="0.2" height="15.0" fill="rgb(252,106,26)" rx="2" ry="2" />
<text  x="857.89" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1178.0" y="1893" width="0.2" height="15.0" fill="rgb(235,121,30)" rx="2" ry="2" />
<text  x="1181.00" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="90.0" y="1957" width="0.2" height="15.0" fill="rgb(222,103,3)" rx="2" ry="2" />
<text  x="93.03" y="1967.5" ></text>
</g>
<g >
<title>skb_clone (25 samples, 0.42%)</title><rect x="805.1" y="1669" width="5.0" height="15.0" fill="rgb(228,191,8)" rx="2" ry="2" />
<text  x="808.07" y="1679.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="483.6" y="1605" width="0.2" height="15.0" fill="rgb(212,208,26)" rx="2" ry="2" />
<text  x="486.56" y="1615.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="697.6" y="1589" width="0.2" height="15.0" fill="rgb(216,84,15)" rx="2" ry="2" />
<text  x="700.63" y="1599.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="656.8" y="1989" width="0.4" height="15.0" fill="rgb(223,115,4)" rx="2" ry="2" />
<text  x="659.82" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.4" y="1941" width="0.3" height="15.0" fill="rgb(242,58,7)" rx="2" ry="2" />
<text  x="160.45" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="79.4" y="1861" width="0.2" height="15.0" fill="rgb(216,118,51)" rx="2" ry="2" />
<text  x="82.42" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="26.0" y="1973" width="1.6" height="15.0" fill="rgb(253,9,49)" rx="2" ry="2" />
<text  x="29.01" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="546.4" y="1877" width="0.2" height="15.0" fill="rgb(208,213,50)" rx="2" ry="2" />
<text  x="549.38" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="61.6" y="1925" width="0.6" height="15.0" fill="rgb(226,38,10)" rx="2" ry="2" />
<text  x="64.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1149.8" y="1797" width="0.2" height="15.0" fill="rgb(211,37,10)" rx="2" ry="2" />
<text  x="1152.79" y="1807.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1067.8" y="1525" width="0.2" height="15.0" fill="rgb(252,72,46)" rx="2" ry="2" />
<text  x="1070.76" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="271.9" y="1845" width="0.4" height="15.0" fill="rgb(247,60,31)" rx="2" ry="2" />
<text  x="274.89" y="1855.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (6 samples, 0.10%)</title><rect x="1159.0" y="1909" width="1.2" height="15.0" fill="rgb(231,185,14)" rx="2" ry="2" />
<text  x="1161.99" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="898.9" y="1973" width="0.2" height="15.0" fill="rgb(243,137,1)" rx="2" ry="2" />
<text  x="901.90" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="454.0" y="1877" width="0.2" height="15.0" fill="rgb(241,26,35)" rx="2" ry="2" />
<text  x="456.95" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="531.8" y="1861" width="0.2" height="15.0" fill="rgb(229,162,20)" rx="2" ry="2" />
<text  x="534.78" y="1871.5" ></text>
</g>
<g >
<title>page_frag_free (21 samples, 0.36%)</title><rect x="1074.2" y="1861" width="4.2" height="15.0" fill="rgb(231,28,24)" rx="2" ry="2" />
<text  x="1077.16" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="753.9" y="1621" width="0.2" height="15.0" fill="rgb(213,44,0)" rx="2" ry="2" />
<text  x="756.85" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="854.9" y="1877" width="0.2" height="15.0" fill="rgb(252,111,4)" rx="2" ry="2" />
<text  x="857.89" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="981.7" y="1877" width="0.2" height="15.0" fill="rgb(243,133,8)" rx="2" ry="2" />
<text  x="984.73" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="853.3" y="1765" width="0.2" height="15.0" fill="rgb(253,121,16)" rx="2" ry="2" />
<text  x="856.29" y="1775.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="625.8" y="1893" width="0.4" height="15.0" fill="rgb(213,100,18)" rx="2" ry="2" />
<text  x="628.81" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="704.4" y="1685" width="0.2" height="15.0" fill="rgb(209,44,53)" rx="2" ry="2" />
<text  x="707.44" y="1695.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="841.1" y="1621" width="0.2" height="15.0" fill="rgb(245,90,46)" rx="2" ry="2" />
<text  x="844.08" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1178.8" y="1973" width="0.2" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="1181.80" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="428.5" y="1573" width="0.2" height="15.0" fill="rgb(250,226,53)" rx="2" ry="2" />
<text  x="431.54" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="394.1" y="1925" width="0.2" height="15.0" fill="rgb(241,178,22)" rx="2" ry="2" />
<text  x="397.13" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="935.3" y="1941" width="0.2" height="15.0" fill="rgb(216,34,23)" rx="2" ry="2" />
<text  x="938.31" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="774.9" y="1685" width="0.2" height="15.0" fill="rgb(228,125,3)" rx="2" ry="2" />
<text  x="777.86" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="753.9" y="1493" width="0.2" height="15.0" fill="rgb(226,118,46)" rx="2" ry="2" />
<text  x="756.85" y="1503.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1177.6" y="1957" width="0.2" height="15.0" fill="rgb(232,78,54)" rx="2" ry="2" />
<text  x="1180.60" y="1967.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (46 samples, 0.78%)</title><rect x="487.0" y="1957" width="9.2" height="15.0" fill="rgb(220,88,31)" rx="2" ry="2" />
<text  x="489.96" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="531.8" y="1909" width="0.2" height="15.0" fill="rgb(218,135,31)" rx="2" ry="2" />
<text  x="534.78" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="273.1" y="1589" width="0.2" height="15.0" fill="rgb(216,5,12)" rx="2" ry="2" />
<text  x="276.09" y="1599.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="249.1" y="1685" width="0.2" height="15.0" fill="rgb(224,8,38)" rx="2" ry="2" />
<text  x="252.08" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (93 samples, 1.58%)</title><rect x="527.4" y="2037" width="18.6" height="15.0" fill="rgb(217,183,42)" rx="2" ry="2" />
<text  x="530.38" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="764.7" y="1733" width="0.2" height="15.0" fill="rgb(237,159,1)" rx="2" ry="2" />
<text  x="767.66" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="44.4" y="1909" width="0.6" height="15.0" fill="rgb(214,176,8)" rx="2" ry="2" />
<text  x="47.41" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1110.0" y="1781" width="0.2" height="15.0" fill="rgb(226,59,49)" rx="2" ry="2" />
<text  x="1112.97" y="1791.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="54.2" y="1749" width="0.2" height="15.0" fill="rgb(241,120,31)" rx="2" ry="2" />
<text  x="57.21" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="215.9" y="1845" width="0.4" height="15.0" fill="rgb(221,194,1)" rx="2" ry="2" />
<text  x="218.87" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="416.1" y="1717" width="0.2" height="15.0" fill="rgb(237,89,24)" rx="2" ry="2" />
<text  x="419.14" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="883.5" y="1909" width="0.8" height="15.0" fill="rgb(224,124,33)" rx="2" ry="2" />
<text  x="886.50" y="1919.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1151.8" y="1957" width="0.2" height="15.0" fill="rgb(222,228,5)" rx="2" ry="2" />
<text  x="1154.79" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="831.7" y="1813" width="0.2" height="15.0" fill="rgb(205,0,25)" rx="2" ry="2" />
<text  x="834.68" y="1823.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (6 samples, 0.10%)</title><rect x="537.6" y="1957" width="1.2" height="15.0" fill="rgb(245,133,26)" rx="2" ry="2" />
<text  x="540.58" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="336.7" y="1925" width="0.2" height="15.0" fill="rgb(252,172,14)" rx="2" ry="2" />
<text  x="339.71" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="74.4" y="1941" width="0.2" height="15.0" fill="rgb(229,28,8)" rx="2" ry="2" />
<text  x="77.42" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="578.6" y="1877" width="0.2" height="15.0" fill="rgb(213,142,23)" rx="2" ry="2" />
<text  x="581.59" y="1887.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="564.8" y="1941" width="0.2" height="15.0" fill="rgb(223,176,37)" rx="2" ry="2" />
<text  x="567.79" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="773.3" y="1669" width="0.2" height="15.0" fill="rgb(212,40,39)" rx="2" ry="2" />
<text  x="776.26" y="1679.5" ></text>
</g>
<g >
<title>__libc_recv (549 samples, 9.31%)</title><rect x="1027.5" y="2053" width="109.9" height="15.0" fill="rgb(207,62,14)" rx="2" ry="2" />
<text  x="1030.54" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="921.7" y="1829" width="0.8" height="15.0" fill="rgb(209,187,6)" rx="2" ry="2" />
<text  x="924.71" y="1839.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="697.6" y="1621" width="0.2" height="15.0" fill="rgb(240,156,33)" rx="2" ry="2" />
<text  x="700.63" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="341.1" y="1973" width="0.2" height="15.0" fill="rgb(243,7,8)" rx="2" ry="2" />
<text  x="344.11" y="1983.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="363.5" y="1541" width="0.2" height="15.0" fill="rgb(209,168,50)" rx="2" ry="2" />
<text  x="366.52" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.34%)</title><rect x="403.7" y="1893" width="4.0" height="15.0" fill="rgb(238,39,32)" rx="2" ry="2" />
<text  x="406.73" y="1903.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="753.9" y="1429" width="0.2" height="15.0" fill="rgb(217,217,37)" rx="2" ry="2" />
<text  x="756.85" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="80.2" y="1925" width="0.8" height="15.0" fill="rgb(239,4,10)" rx="2" ry="2" />
<text  x="83.22" y="1935.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="942.9" y="1765" width="0.2" height="15.0" fill="rgb(217,217,47)" rx="2" ry="2" />
<text  x="945.92" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104 samples, 1.76%)</title><rect x="686.4" y="1973" width="20.8" height="15.0" fill="rgb(222,177,31)" rx="2" ry="2" />
<text  x="689.43" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="845.3" y="1893" width="0.2" height="15.0" fill="rgb(221,132,53)" rx="2" ry="2" />
<text  x="848.28" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="118.6" y="341" width="0.2" height="15.0" fill="rgb(230,215,15)" rx="2" ry="2" />
<text  x="121.64" y="351.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="289.3" y="1701" width="0.2" height="15.0" fill="rgb(225,64,4)" rx="2" ry="2" />
<text  x="292.29" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1067.8" y="1685" width="0.4" height="15.0" fill="rgb(226,185,10)" rx="2" ry="2" />
<text  x="1070.76" y="1695.5" ></text>
</g>
<g >
<title>tcp_ack (41 samples, 0.70%)</title><rect x="1112.0" y="1541" width="8.2" height="15.0" fill="rgb(216,4,14)" rx="2" ry="2" />
<text  x="1114.97" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="831.7" y="1829" width="0.2" height="15.0" fill="rgb(232,162,18)" rx="2" ry="2" />
<text  x="834.68" y="1839.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="453.4" y="1861" width="0.6" height="15.0" fill="rgb(249,203,1)" rx="2" ry="2" />
<text  x="456.35" y="1871.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="415.1" y="1845" width="0.8" height="15.0" fill="rgb(248,102,38)" rx="2" ry="2" />
<text  x="418.14" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1120.2" y="1541" width="0.2" height="15.0" fill="rgb(232,222,30)" rx="2" ry="2" />
<text  x="1123.18" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="824.1" y="1701" width="0.2" height="15.0" fill="rgb(237,41,34)" rx="2" ry="2" />
<text  x="827.08" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (8 samples, 0.14%)</title><rect x="786.9" y="1509" width="1.6" height="15.0" fill="rgb(235,97,39)" rx="2" ry="2" />
<text  x="789.86" y="1519.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1126.2" y="1637" width="0.2" height="15.0" fill="rgb(237,229,54)" rx="2" ry="2" />
<text  x="1129.18" y="1647.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1004.3" y="2005" width="0.2" height="15.0" fill="rgb(254,63,29)" rx="2" ry="2" />
<text  x="1007.34" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="664.0" y="1845" width="0.2" height="15.0" fill="rgb(246,97,32)" rx="2" ry="2" />
<text  x="667.02" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="271.9" y="1637" width="0.2" height="15.0" fill="rgb(222,2,23)" rx="2" ry="2" />
<text  x="274.89" y="1647.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="787.9" y="1301" width="0.2" height="15.0" fill="rgb(254,54,38)" rx="2" ry="2" />
<text  x="790.86" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.80%)</title><rect x="102.6" y="1957" width="21.2" height="15.0" fill="rgb(232,47,45)" rx="2" ry="2" />
<text  x="105.63" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.6" y="1829" width="0.8" height="15.0" fill="rgb(217,228,52)" rx="2" ry="2" />
<text  x="15.60" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="848.5" y="1797" width="0.2" height="15.0" fill="rgb(215,129,12)" rx="2" ry="2" />
<text  x="851.48" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="267.1" y="1749" width="0.2" height="15.0" fill="rgb(238,98,23)" rx="2" ry="2" />
<text  x="270.09" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (6 samples, 0.10%)</title><rect x="787.3" y="1413" width="1.2" height="15.0" fill="rgb(226,15,40)" rx="2" ry="2" />
<text  x="790.26" y="1423.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="306.3" y="1701" width="0.2" height="15.0" fill="rgb(227,154,37)" rx="2" ry="2" />
<text  x="309.30" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (23 samples, 0.39%)</title><rect x="956.5" y="1989" width="4.6" height="15.0" fill="rgb(244,216,45)" rx="2" ry="2" />
<text  x="959.52" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="150.0" y="1861" width="0.6" height="15.0" fill="rgb(220,173,47)" rx="2" ry="2" />
<text  x="153.05" y="1871.5" ></text>
</g>
<g >
<title>__destroy_inode (5 samples, 0.08%)</title><rect x="747.7" y="1685" width="1.0" height="15.0" fill="rgb(212,96,44)" rx="2" ry="2" />
<text  x="750.65" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="936.3" y="1893" width="0.2" height="15.0" fill="rgb(226,197,10)" rx="2" ry="2" />
<text  x="939.31" y="1903.5" ></text>
</g>
<g >
<title>skb_defer_rx_timestamp (1 samples, 0.02%)</title><rect x="402.7" y="1797" width="0.2" height="15.0" fill="rgb(247,41,13)" rx="2" ry="2" />
<text  x="405.73" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="713.0" y="2037" width="0.2" height="15.0" fill="rgb(221,81,36)" rx="2" ry="2" />
<text  x="716.04" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="120.4" y="1493" width="0.2" height="15.0" fill="rgb(220,90,31)" rx="2" ry="2" />
<text  x="123.44" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="974.3" y="1909" width="0.2" height="15.0" fill="rgb(247,159,5)" rx="2" ry="2" />
<text  x="977.33" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="578.6" y="1653" width="0.2" height="15.0" fill="rgb(221,17,33)" rx="2" ry="2" />
<text  x="581.59" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="739.4" y="1765" width="0.2" height="15.0" fill="rgb(225,91,2)" rx="2" ry="2" />
<text  x="742.45" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="954.3" y="1941" width="0.2" height="15.0" fill="rgb(249,48,38)" rx="2" ry="2" />
<text  x="957.32" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1110.6" y="1541" width="0.2" height="15.0" fill="rgb(240,172,43)" rx="2" ry="2" />
<text  x="1113.57" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="454.0" y="1925" width="0.2" height="15.0" fill="rgb(252,4,0)" rx="2" ry="2" />
<text  x="456.95" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="850.3" y="1925" width="1.2" height="15.0" fill="rgb(211,57,52)" rx="2" ry="2" />
<text  x="853.28" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="578.6" y="1717" width="0.2" height="15.0" fill="rgb(207,206,21)" rx="2" ry="2" />
<text  x="581.59" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="151.6" y="1877" width="0.2" height="15.0" fill="rgb(221,54,17)" rx="2" ry="2" />
<text  x="154.65" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="578.6" y="1733" width="0.2" height="15.0" fill="rgb(253,121,31)" rx="2" ry="2" />
<text  x="581.59" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="575.8" y="1829" width="0.4" height="15.0" fill="rgb(250,166,34)" rx="2" ry="2" />
<text  x="578.79" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="831.7" y="1653" width="0.2" height="15.0" fill="rgb(227,9,4)" rx="2" ry="2" />
<text  x="834.68" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="48.4" y="1909" width="0.2" height="15.0" fill="rgb(236,36,31)" rx="2" ry="2" />
<text  x="51.41" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (12 samples, 0.20%)</title><rect x="535.2" y="1973" width="2.4" height="15.0" fill="rgb(225,18,14)" rx="2" ry="2" />
<text  x="538.18" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="348.9" y="2021" width="1.8" height="15.0" fill="rgb(249,143,31)" rx="2" ry="2" />
<text  x="351.91" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="933.7" y="1621" width="0.2" height="15.0" fill="rgb(223,35,6)" rx="2" ry="2" />
<text  x="936.71" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="972.3" y="1893" width="0.2" height="15.0" fill="rgb(228,138,42)" rx="2" ry="2" />
<text  x="975.33" y="1903.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="229.5" y="1941" width="0.2" height="15.0" fill="rgb(216,70,10)" rx="2" ry="2" />
<text  x="232.47" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (2 samples, 0.03%)</title><rect x="719.6" y="1909" width="0.4" height="15.0" fill="rgb(253,98,42)" rx="2" ry="2" />
<text  x="722.64" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="84.8" y="1957" width="0.2" height="15.0" fill="rgb(253,122,27)" rx="2" ry="2" />
<text  x="87.83" y="1967.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="626.2" y="1589" width="0.2" height="15.0" fill="rgb(209,39,31)" rx="2" ry="2" />
<text  x="629.21" y="1599.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="896.9" y="1989" width="0.2" height="15.0" fill="rgb(243,86,37)" rx="2" ry="2" />
<text  x="899.90" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="340.9" y="1957" width="0.2" height="15.0" fill="rgb(249,81,19)" rx="2" ry="2" />
<text  x="343.91" y="1967.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="280.7" y="1797" width="0.2" height="15.0" fill="rgb(210,184,10)" rx="2" ry="2" />
<text  x="283.69" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="118.4" y="197" width="0.2" height="15.0" fill="rgb(227,221,10)" rx="2" ry="2" />
<text  x="121.44" y="207.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (11 samples, 0.19%)</title><rect x="528.4" y="1957" width="2.2" height="15.0" fill="rgb(222,101,24)" rx="2" ry="2" />
<text  x="531.38" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="540.2" y="1909" width="0.2" height="15.0" fill="rgb(210,122,4)" rx="2" ry="2" />
<text  x="543.18" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="625.4" y="1861" width="0.2" height="15.0" fill="rgb(232,134,6)" rx="2" ry="2" />
<text  x="628.41" y="1871.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="858.7" y="1941" width="0.2" height="15.0" fill="rgb(234,79,14)" rx="2" ry="2" />
<text  x="861.69" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1144.8" y="1973" width="0.2" height="15.0" fill="rgb(214,15,42)" rx="2" ry="2" />
<text  x="1147.78" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="889.5" y="1797" width="0.6" height="15.0" fill="rgb(253,146,29)" rx="2" ry="2" />
<text  x="892.50" y="1807.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="752.5" y="1685" width="0.2" height="15.0" fill="rgb(241,188,45)" rx="2" ry="2" />
<text  x="755.45" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="75.2" y="1909" width="0.2" height="15.0" fill="rgb(216,189,23)" rx="2" ry="2" />
<text  x="78.22" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1113.2" y="1477" width="0.2" height="15.0" fill="rgb(228,217,29)" rx="2" ry="2" />
<text  x="1116.17" y="1487.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="885.3" y="1925" width="0.2" height="15.0" fill="rgb(210,173,18)" rx="2" ry="2" />
<text  x="888.30" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="139.2" y="1893" width="0.2" height="15.0" fill="rgb(227,50,16)" rx="2" ry="2" />
<text  x="142.24" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="879.5" y="1733" width="0.2" height="15.0" fill="rgb(241,105,7)" rx="2" ry="2" />
<text  x="882.49" y="1743.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="1091.4" y="1557" width="0.2" height="15.0" fill="rgb(254,175,34)" rx="2" ry="2" />
<text  x="1094.37" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="157.9" y="1877" width="0.2" height="15.0" fill="rgb(224,52,32)" rx="2" ry="2" />
<text  x="160.85" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="628.2" y="1957" width="0.2" height="15.0" fill="rgb(243,181,40)" rx="2" ry="2" />
<text  x="631.21" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="336.7" y="1749" width="0.2" height="15.0" fill="rgb(253,207,12)" rx="2" ry="2" />
<text  x="339.71" y="1759.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="827.3" y="1509" width="0.2" height="15.0" fill="rgb(215,218,37)" rx="2" ry="2" />
<text  x="830.28" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="18.4" y="1957" width="0.2" height="15.0" fill="rgb(212,121,22)" rx="2" ry="2" />
<text  x="21.40" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1120.2" y="1557" width="0.2" height="15.0" fill="rgb(236,70,47)" rx="2" ry="2" />
<text  x="1123.18" y="1567.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="80.0" y="1605" width="0.2" height="15.0" fill="rgb(241,11,35)" rx="2" ry="2" />
<text  x="83.02" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="267.5" y="1589" width="0.2" height="15.0" fill="rgb(244,139,30)" rx="2" ry="2" />
<text  x="270.49" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.1" y="1829" width="0.2" height="15.0" fill="rgb(211,58,25)" rx="2" ry="2" />
<text  x="844.08" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="278.7" y="1797" width="0.2" height="15.0" fill="rgb(241,50,11)" rx="2" ry="2" />
<text  x="281.69" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="483.2" y="1621" width="0.2" height="15.0" fill="rgb(210,220,10)" rx="2" ry="2" />
<text  x="486.16" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1067.8" y="1589" width="0.2" height="15.0" fill="rgb(227,192,20)" rx="2" ry="2" />
<text  x="1070.76" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1091.4" y="1685" width="0.4" height="15.0" fill="rgb(217,136,0)" rx="2" ry="2" />
<text  x="1094.37" y="1695.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="504.6" y="1877" width="0.2" height="15.0" fill="rgb(231,8,18)" rx="2" ry="2" />
<text  x="507.57" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (3 samples, 0.05%)</title><rect x="1150.0" y="2053" width="0.6" height="15.0" fill="rgb(218,155,14)" rx="2" ry="2" />
<text  x="1152.99" y="2063.5" ></text>
</g>
<g >
<title>event_del_nolock_ (4 samples, 0.07%)</title><rect x="1140.4" y="2053" width="0.8" height="15.0" fill="rgb(234,38,17)" rx="2" ry="2" />
<text  x="1143.38" y="2063.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1125.6" y="1637" width="0.2" height="15.0" fill="rgb(244,77,54)" rx="2" ry="2" />
<text  x="1128.58" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="328.5" y="1829" width="0.4" height="15.0" fill="rgb(250,88,54)" rx="2" ry="2" />
<text  x="331.51" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="976.1" y="1957" width="0.4" height="15.0" fill="rgb(214,23,37)" rx="2" ry="2" />
<text  x="979.13" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="998.7" y="1973" width="0.4" height="15.0" fill="rgb(253,161,43)" rx="2" ry="2" />
<text  x="1001.74" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="933.7" y="1749" width="0.2" height="15.0" fill="rgb(209,103,53)" rx="2" ry="2" />
<text  x="936.71" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="645.6" y="1909" width="0.2" height="15.0" fill="rgb(213,225,47)" rx="2" ry="2" />
<text  x="648.62" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (9 samples, 0.15%)</title><rect x="208.9" y="1909" width="1.8" height="15.0" fill="rgb(250,186,18)" rx="2" ry="2" />
<text  x="211.87" y="1919.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (4 samples, 0.07%)</title><rect x="1151.0" y="1973" width="0.8" height="15.0" fill="rgb(220,27,37)" rx="2" ry="2" />
<text  x="1153.99" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="560.4" y="1861" width="0.4" height="15.0" fill="rgb(236,88,49)" rx="2" ry="2" />
<text  x="563.39" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="981.7" y="1957" width="0.2" height="15.0" fill="rgb(224,17,31)" rx="2" ry="2" />
<text  x="984.73" y="1967.5" ></text>
</g>
<g >
<title>isspace@plt (2 samples, 0.03%)</title><rect x="1009.5" y="2021" width="0.4" height="15.0" fill="rgb(246,161,36)" rx="2" ry="2" />
<text  x="1012.54" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (2 samples, 0.03%)</title><rect x="71.0" y="1925" width="0.4" height="15.0" fill="rgb(237,43,13)" rx="2" ry="2" />
<text  x="74.02" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="306.1" y="1653" width="0.2" height="15.0" fill="rgb(206,76,49)" rx="2" ry="2" />
<text  x="309.10" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.08%)</title><rect x="124.8" y="1989" width="1.0" height="15.0" fill="rgb(244,218,52)" rx="2" ry="2" />
<text  x="127.84" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_init_ts_off (1 samples, 0.02%)</title><rect x="1188.8" y="1733" width="0.2" height="15.0" fill="rgb(215,215,6)" rx="2" ry="2" />
<text  x="1191.80" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (48 samples, 0.81%)</title><rect x="1110.6" y="1845" width="9.6" height="15.0" fill="rgb(229,68,12)" rx="2" ry="2" />
<text  x="1113.57" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="18.4" y="1973" width="0.2" height="15.0" fill="rgb(230,191,44)" rx="2" ry="2" />
<text  x="21.40" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="79.4" y="1909" width="0.2" height="15.0" fill="rgb(250,113,34)" rx="2" ry="2" />
<text  x="82.42" y="1919.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="408.1" y="1637" width="0.2" height="15.0" fill="rgb(228,85,38)" rx="2" ry="2" />
<text  x="411.13" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (6 samples, 0.10%)</title><rect x="787.3" y="1477" width="1.2" height="15.0" fill="rgb(208,119,38)" rx="2" ry="2" />
<text  x="790.26" y="1487.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="916.5" y="1685" width="0.2" height="15.0" fill="rgb(209,185,46)" rx="2" ry="2" />
<text  x="919.51" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="697.6" y="1797" width="0.2" height="15.0" fill="rgb(218,113,1)" rx="2" ry="2" />
<text  x="700.63" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="893.3" y="1989" width="0.2" height="15.0" fill="rgb(242,171,22)" rx="2" ry="2" />
<text  x="896.30" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="117.6" y="69" width="0.2" height="15.0" fill="rgb(240,215,51)" rx="2" ry="2" />
<text  x="120.64" y="79.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="666.4" y="1989" width="0.2" height="15.0" fill="rgb(205,134,0)" rx="2" ry="2" />
<text  x="669.42" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1126.2" y="1765" width="0.2" height="15.0" fill="rgb(208,105,35)" rx="2" ry="2" />
<text  x="1129.18" y="1775.5" ></text>
</g>
<g >
<title>inet_accept (152 samples, 2.58%)</title><rect x="361.5" y="1957" width="30.4" height="15.0" fill="rgb(231,173,19)" rx="2" ry="2" />
<text  x="364.52" y="1967.5" >in..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="980.7" y="1909" width="0.2" height="15.0" fill="rgb(241,79,40)" rx="2" ry="2" />
<text  x="983.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="213" width="14.6" height="15.0" fill="rgb(244,44,40)" rx="2" ry="2" />
<text  x="106.43" y="223.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="518.8" y="1669" width="0.4" height="15.0" fill="rgb(236,228,30)" rx="2" ry="2" />
<text  x="521.77" y="1679.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="391.5" y="1925" width="0.2" height="15.0" fill="rgb(233,108,3)" rx="2" ry="2" />
<text  x="394.53" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (19 samples, 0.32%)</title><rect x="412.9" y="1909" width="3.8" height="15.0" fill="rgb(238,137,32)" rx="2" ry="2" />
<text  x="415.94" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="470.6" y="1797" width="0.2" height="15.0" fill="rgb(237,54,0)" rx="2" ry="2" />
<text  x="473.56" y="1807.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="68.6" y="1861" width="0.2" height="15.0" fill="rgb(217,95,27)" rx="2" ry="2" />
<text  x="71.62" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="697.6" y="1669" width="0.2" height="15.0" fill="rgb(234,105,40)" rx="2" ry="2" />
<text  x="700.63" y="1679.5" ></text>
</g>
<g >
<title>_copy_to_iter (14 samples, 0.24%)</title><rect x="1098.6" y="1909" width="2.8" height="15.0" fill="rgb(231,224,12)" rx="2" ry="2" />
<text  x="1101.57" y="1919.5" ></text>
</g>
<g >
<title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="1075.4" y="1829" width="0.2" height="15.0" fill="rgb(237,128,9)" rx="2" ry="2" />
<text  x="1078.36" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (3 samples, 0.05%)</title><rect x="719.4" y="1925" width="0.6" height="15.0" fill="rgb(226,140,32)" rx="2" ry="2" />
<text  x="722.44" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="634.4" y="1957" width="0.8" height="15.0" fill="rgb(240,36,18)" rx="2" ry="2" />
<text  x="637.41" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="267.1" y="1733" width="0.2" height="15.0" fill="rgb(212,163,41)" rx="2" ry="2" />
<text  x="270.09" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="307.9" y="1813" width="0.4" height="15.0" fill="rgb(222,186,53)" rx="2" ry="2" />
<text  x="310.90" y="1823.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="1016.3" y="2037" width="0.8" height="15.0" fill="rgb(212,94,22)" rx="2" ry="2" />
<text  x="1019.34" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (8 samples, 0.14%)</title><rect x="538.8" y="1973" width="1.6" height="15.0" fill="rgb(241,32,16)" rx="2" ry="2" />
<text  x="541.78" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="394.1" y="1861" width="0.2" height="15.0" fill="rgb(254,161,33)" rx="2" ry="2" />
<text  x="397.13" y="1871.5" ></text>
</g>
<g >
<title>skb_free_head (22 samples, 0.37%)</title><rect x="1074.0" y="1877" width="4.4" height="15.0" fill="rgb(217,5,28)" rx="2" ry="2" />
<text  x="1076.96" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="707.4" y="1717" width="0.2" height="15.0" fill="rgb(233,29,21)" rx="2" ry="2" />
<text  x="710.44" y="1727.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.2" y="1973" width="0.8" height="15.0" fill="rgb(217,33,21)" rx="2" ry="2" />
<text  x="14.20" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.2" y="1829" width="0.8" height="15.0" fill="rgb(252,146,44)" rx="2" ry="2" />
<text  x="13.20" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.8" y="1941" width="0.4" height="15.0" fill="rgb(207,33,43)" rx="2" ry="2" />
<text  x="141.84" y="1951.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="383.7" y="1909" width="0.2" height="15.0" fill="rgb(248,52,26)" rx="2" ry="2" />
<text  x="386.73" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="664.0" y="1957" width="0.2" height="15.0" fill="rgb(217,3,49)" rx="2" ry="2" />
<text  x="667.02" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="118.6" y="405" width="0.2" height="15.0" fill="rgb(240,206,45)" rx="2" ry="2" />
<text  x="121.64" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.08%)</title><rect x="321.9" y="1733" width="1.0" height="15.0" fill="rgb(223,117,33)" rx="2" ry="2" />
<text  x="324.91" y="1743.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="847.7" y="1813" width="0.2" height="15.0" fill="rgb(226,165,45)" rx="2" ry="2" />
<text  x="850.68" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="981.7" y="1941" width="0.2" height="15.0" fill="rgb(234,93,28)" rx="2" ry="2" />
<text  x="984.73" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="853.9" y="1845" width="0.2" height="15.0" fill="rgb(248,135,47)" rx="2" ry="2" />
<text  x="856.89" y="1855.5" ></text>
</g>
<g >
<title>find_exception (1 samples, 0.02%)</title><rect x="483.2" y="1509" width="0.2" height="15.0" fill="rgb(219,219,21)" rx="2" ry="2" />
<text  x="486.16" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="933.7" y="1797" width="0.2" height="15.0" fill="rgb(223,49,35)" rx="2" ry="2" />
<text  x="936.71" y="1807.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="816.5" y="1685" width="0.2" height="15.0" fill="rgb(220,214,43)" rx="2" ry="2" />
<text  x="819.47" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="831.7" y="1781" width="0.2" height="15.0" fill="rgb(247,216,12)" rx="2" ry="2" />
<text  x="834.68" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="328.5" y="1797" width="0.4" height="15.0" fill="rgb(205,44,30)" rx="2" ry="2" />
<text  x="331.51" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (6 samples, 0.10%)</title><rect x="546.0" y="1973" width="1.2" height="15.0" fill="rgb(222,33,5)" rx="2" ry="2" />
<text  x="548.98" y="1983.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.02%)</title><rect x="182.9" y="2021" width="0.2" height="15.0" fill="rgb(244,45,20)" rx="2" ry="2" />
<text  x="185.86" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="175.5" y="1941" width="0.2" height="15.0" fill="rgb(208,33,0)" rx="2" ry="2" />
<text  x="178.46" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="944.1" y="1973" width="0.8" height="15.0" fill="rgb(235,76,17)" rx="2" ry="2" />
<text  x="947.12" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="51.4" y="1845" width="0.2" height="15.0" fill="rgb(239,18,45)" rx="2" ry="2" />
<text  x="54.41" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="54.2" y="1925" width="0.2" height="15.0" fill="rgb(219,218,19)" rx="2" ry="2" />
<text  x="57.21" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="590.4" y="1573" width="0.2" height="15.0" fill="rgb(214,59,27)" rx="2" ry="2" />
<text  x="593.40" y="1583.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="737.8" y="1797" width="0.2" height="15.0" fill="rgb(220,6,31)" rx="2" ry="2" />
<text  x="740.85" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="1147.0" y="2053" width="0.2" height="15.0" fill="rgb(206,147,0)" rx="2" ry="2" />
<text  x="1149.99" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1054.4" y="1877" width="0.2" height="15.0" fill="rgb(232,70,34)" rx="2" ry="2" />
<text  x="1057.35" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="359.5" y="1861" width="0.2" height="15.0" fill="rgb(250,120,5)" rx="2" ry="2" />
<text  x="362.52" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="648.4" y="1573" width="0.2" height="15.0" fill="rgb(209,39,8)" rx="2" ry="2" />
<text  x="651.42" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="1120.2" y="1861" width="0.2" height="15.0" fill="rgb(230,206,54)" rx="2" ry="2" />
<text  x="1123.18" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="309" width="14.8" height="15.0" fill="rgb(230,160,32)" rx="2" ry="2" />
<text  x="106.43" y="319.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1110.6" y="1461" width="0.2" height="15.0" fill="rgb(236,50,2)" rx="2" ry="2" />
<text  x="1113.57" y="1471.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (8 samples, 0.14%)</title><rect x="849.9" y="1941" width="1.6" height="15.0" fill="rgb(217,209,33)" rx="2" ry="2" />
<text  x="852.88" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="626.2" y="1765" width="0.2" height="15.0" fill="rgb(229,166,24)" rx="2" ry="2" />
<text  x="629.21" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="972.3" y="1925" width="0.2" height="15.0" fill="rgb(205,76,0)" rx="2" ry="2" />
<text  x="975.33" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (226 samples, 3.83%)</title><rect x="548.4" y="2021" width="45.2" height="15.0" fill="rgb(219,82,54)" rx="2" ry="2" />
<text  x="551.38" y="2031.5" >foll..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="560.4" y="1845" width="0.2" height="15.0" fill="rgb(240,199,28)" rx="2" ry="2" />
<text  x="563.39" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="1178.2" y="2005" width="0.8" height="15.0" fill="rgb(227,25,32)" rx="2" ry="2" />
<text  x="1181.20" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="523.0" y="1829" width="0.2" height="15.0" fill="rgb(247,5,8)" rx="2" ry="2" />
<text  x="525.97" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1087.0" y="1925" width="0.2" height="15.0" fill="rgb(249,24,24)" rx="2" ry="2" />
<text  x="1089.97" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="847.3" y="1893" width="0.2" height="15.0" fill="rgb(219,16,46)" rx="2" ry="2" />
<text  x="850.28" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="531.8" y="1925" width="0.2" height="15.0" fill="rgb(226,190,22)" rx="2" ry="2" />
<text  x="534.78" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (1 samples, 0.02%)</title><rect x="965.5" y="2037" width="0.2" height="15.0" fill="rgb(244,215,25)" rx="2" ry="2" />
<text  x="968.52" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="831.7" y="1733" width="0.2" height="15.0" fill="rgb(226,131,52)" rx="2" ry="2" />
<text  x="834.68" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="503.8" y="1941" width="0.4" height="15.0" fill="rgb(215,42,1)" rx="2" ry="2" />
<text  x="506.77" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="578.6" y="1749" width="0.2" height="15.0" fill="rgb(252,191,6)" rx="2" ry="2" />
<text  x="581.59" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="61.6" y="1909" width="0.6" height="15.0" fill="rgb(237,18,18)" rx="2" ry="2" />
<text  x="64.62" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="328.9" y="1845" width="0.2" height="15.0" fill="rgb(239,11,51)" rx="2" ry="2" />
<text  x="331.91" y="1855.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="328.7" y="1541" width="0.2" height="15.0" fill="rgb(242,101,7)" rx="2" ry="2" />
<text  x="331.71" y="1551.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="1102.0" y="1781" width="0.2" height="15.0" fill="rgb(231,34,14)" rx="2" ry="2" />
<text  x="1104.97" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="66.6" y="1925" width="0.2" height="15.0" fill="rgb(237,85,44)" rx="2" ry="2" />
<text  x="69.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="118.4" y="53" width="0.2" height="15.0" fill="rgb(232,100,28)" rx="2" ry="2" />
<text  x="121.44" y="63.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="921.7" y="1733" width="0.8" height="15.0" fill="rgb(252,228,44)" rx="2" ry="2" />
<text  x="924.71" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="879.5" y="1749" width="0.2" height="15.0" fill="rgb(253,16,50)" rx="2" ry="2" />
<text  x="882.49" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="66.6" y="1877" width="0.2" height="15.0" fill="rgb(213,202,21)" rx="2" ry="2" />
<text  x="69.62" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="428.5" y="1685" width="0.2" height="15.0" fill="rgb(245,94,35)" rx="2" ry="2" />
<text  x="431.54" y="1695.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="965.1" y="2005" width="0.2" height="15.0" fill="rgb(220,134,6)" rx="2" ry="2" />
<text  x="968.12" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (12 samples, 0.20%)</title><rect x="1143.2" y="2037" width="2.4" height="15.0" fill="rgb(206,120,28)" rx="2" ry="2" />
<text  x="1146.18" y="2047.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="858.5" y="1637" width="0.2" height="15.0" fill="rgb(239,135,54)" rx="2" ry="2" />
<text  x="861.49" y="1647.5" ></text>
</g>
<g >
<title>___sys_sendmsg (475 samples, 8.05%)</title><rect x="241.1" y="1957" width="95.0" height="15.0" fill="rgb(235,13,32)" rx="2" ry="2" />
<text  x="244.08" y="1967.5" >___sys_send..</text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="453.2" y="1925" width="0.8" height="15.0" fill="rgb(224,17,33)" rx="2" ry="2" />
<text  x="456.15" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="84.8" y="1861" width="0.2" height="15.0" fill="rgb(250,155,43)" rx="2" ry="2" />
<text  x="87.83" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="578.6" y="1941" width="0.2" height="15.0" fill="rgb(223,68,36)" rx="2" ry="2" />
<text  x="581.59" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="85.2" y="1877" width="0.2" height="15.0" fill="rgb(224,219,48)" rx="2" ry="2" />
<text  x="88.23" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="32.0" y="2005" width="0.2" height="15.0" fill="rgb(254,15,43)" rx="2" ry="2" />
<text  x="35.01" y="2015.5" ></text>
</g>
<g >
<title>sk_free (2 samples, 0.03%)</title><rect x="787.3" y="1333" width="0.4" height="15.0" fill="rgb(236,83,50)" rx="2" ry="2" />
<text  x="790.26" y="1343.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="739.2" y="1781" width="0.2" height="15.0" fill="rgb(246,28,54)" rx="2" ry="2" />
<text  x="742.25" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="633.2" y="2005" width="0.4" height="15.0" fill="rgb(221,51,37)" rx="2" ry="2" />
<text  x="636.21" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="357.3" y="1653" width="0.2" height="15.0" fill="rgb(242,222,20)" rx="2" ry="2" />
<text  x="360.32" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="858.5" y="1605" width="0.2" height="15.0" fill="rgb(236,196,11)" rx="2" ry="2" />
<text  x="861.49" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1126.2" y="1701" width="0.2" height="15.0" fill="rgb(217,181,23)" rx="2" ry="2" />
<text  x="1129.18" y="1711.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="427.5" y="1941" width="0.2" height="15.0" fill="rgb(212,16,33)" rx="2" ry="2" />
<text  x="430.54" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="995.9" y="1957" width="0.4" height="15.0" fill="rgb(220,170,15)" rx="2" ry="2" />
<text  x="998.93" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 3.19%)</title><rect x="915.9" y="2021" width="37.6" height="15.0" fill="rgb(245,157,45)" rx="2" ry="2" />
<text  x="918.91" y="2031.5" >[un..</text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="635.0" y="1941" width="0.2" height="15.0" fill="rgb(240,50,27)" rx="2" ry="2" />
<text  x="638.01" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="560.8" y="1909" width="0.2" height="15.0" fill="rgb(208,207,41)" rx="2" ry="2" />
<text  x="563.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="339.9" y="1701" width="0.2" height="15.0" fill="rgb(211,48,39)" rx="2" ry="2" />
<text  x="342.91" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (3 samples, 0.05%)</title><rect x="24.6" y="1989" width="0.6" height="15.0" fill="rgb(227,204,2)" rx="2" ry="2" />
<text  x="27.60" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20 samples, 0.34%)</title><rect x="622.2" y="1909" width="4.0" height="15.0" fill="rgb(236,135,28)" rx="2" ry="2" />
<text  x="625.21" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="739.4" y="1685" width="0.2" height="15.0" fill="rgb(254,33,52)" rx="2" ry="2" />
<text  x="742.45" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="267.5" y="1605" width="0.2" height="15.0" fill="rgb(215,174,45)" rx="2" ry="2" />
<text  x="270.49" y="1615.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="158.1" y="2005" width="0.8" height="15.0" fill="rgb(239,69,32)" rx="2" ry="2" />
<text  x="161.05" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5 samples, 0.08%)</title><rect x="815.5" y="1589" width="1.0" height="15.0" fill="rgb(210,48,41)" rx="2" ry="2" />
<text  x="818.47" y="1599.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="641.4" y="1909" width="0.2" height="15.0" fill="rgb(220,114,6)" rx="2" ry="2" />
<text  x="644.41" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="210.1" y="1845" width="0.4" height="15.0" fill="rgb(223,24,9)" rx="2" ry="2" />
<text  x="213.07" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (13 samples, 0.22%)</title><rect x="151.0" y="1925" width="2.6" height="15.0" fill="rgb(209,107,24)" rx="2" ry="2" />
<text  x="154.05" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="384.5" y="1813" width="0.2" height="15.0" fill="rgb(217,184,26)" rx="2" ry="2" />
<text  x="387.53" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="858.5" y="1877" width="0.2" height="15.0" fill="rgb(224,101,46)" rx="2" ry="2" />
<text  x="861.49" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="546.8" y="1845" width="0.2" height="15.0" fill="rgb(242,145,36)" rx="2" ry="2" />
<text  x="549.78" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="611.6" y="1861" width="0.2" height="15.0" fill="rgb(214,183,32)" rx="2" ry="2" />
<text  x="614.60" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="482.8" y="1717" width="0.6" height="15.0" fill="rgb(245,156,8)" rx="2" ry="2" />
<text  x="485.76" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (2 samples, 0.03%)</title><rect x="650.2" y="1989" width="0.4" height="15.0" fill="rgb(242,125,34)" rx="2" ry="2" />
<text  x="653.22" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="970.1" y="1973" width="0.2" height="15.0" fill="rgb(253,80,11)" rx="2" ry="2" />
<text  x="973.13" y="1983.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (8 samples, 0.14%)</title><rect x="268.7" y="1861" width="1.6" height="15.0" fill="rgb(243,132,53)" rx="2" ry="2" />
<text  x="271.69" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7 samples, 0.12%)</title><rect x="374.9" y="1925" width="1.4" height="15.0" fill="rgb(226,177,29)" rx="2" ry="2" />
<text  x="377.92" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="886.1" y="1925" width="0.2" height="15.0" fill="rgb(252,189,40)" rx="2" ry="2" />
<text  x="889.10" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="637.4" y="2005" width="0.8" height="15.0" fill="rgb(226,200,49)" rx="2" ry="2" />
<text  x="640.41" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.4" y="1541" width="0.2" height="15.0" fill="rgb(228,172,16)" rx="2" ry="2" />
<text  x="123.44" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="324.1" y="1765" width="0.4" height="15.0" fill="rgb(231,219,20)" rx="2" ry="2" />
<text  x="327.11" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="402.1" y="1781" width="0.2" height="15.0" fill="rgb(231,120,41)" rx="2" ry="2" />
<text  x="405.13" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="752.5" y="1669" width="0.2" height="15.0" fill="rgb(222,164,38)" rx="2" ry="2" />
<text  x="755.45" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="271.9" y="1605" width="0.2" height="15.0" fill="rgb(219,48,14)" rx="2" ry="2" />
<text  x="274.89" y="1615.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="906.5" y="1973" width="0.2" height="15.0" fill="rgb(222,31,6)" rx="2" ry="2" />
<text  x="909.50" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="189.9" y="1925" width="0.4" height="15.0" fill="rgb(250,16,1)" rx="2" ry="2" />
<text  x="192.86" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="704.4" y="1797" width="0.2" height="15.0" fill="rgb(245,77,22)" rx="2" ry="2" />
<text  x="707.44" y="1807.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="1130.8" y="1701" width="0.2" height="15.0" fill="rgb(230,194,41)" rx="2" ry="2" />
<text  x="1133.78" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="623.4" y="1637" width="0.2" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="626.41" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="889.1" y="1589" width="0.2" height="15.0" fill="rgb(222,60,25)" rx="2" ry="2" />
<text  x="892.10" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="565.8" y="1941" width="0.2" height="15.0" fill="rgb(210,14,43)" rx="2" ry="2" />
<text  x="568.79" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (4 samples, 0.07%)</title><rect x="929.9" y="1877" width="0.8" height="15.0" fill="rgb(209,122,29)" rx="2" ry="2" />
<text  x="932.91" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="416.3" y="1893" width="0.2" height="15.0" fill="rgb(228,112,32)" rx="2" ry="2" />
<text  x="419.34" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="856.3" y="1845" width="0.2" height="15.0" fill="rgb(225,188,45)" rx="2" ry="2" />
<text  x="859.29" y="1855.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="852.1" y="1909" width="0.4" height="15.0" fill="rgb(254,84,32)" rx="2" ry="2" />
<text  x="855.09" y="1919.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="288.1" y="1685" width="0.2" height="15.0" fill="rgb(230,18,19)" rx="2" ry="2" />
<text  x="291.09" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="897.7" y="1925" width="0.4" height="15.0" fill="rgb(236,134,24)" rx="2" ry="2" />
<text  x="900.70" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="988.5" y="1909" width="0.4" height="15.0" fill="rgb(252,133,37)" rx="2" ry="2" />
<text  x="991.53" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="890.7" y="1909" width="0.2" height="15.0" fill="rgb(226,152,22)" rx="2" ry="2" />
<text  x="893.70" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1144.8" y="1989" width="0.2" height="15.0" fill="rgb(248,16,19)" rx="2" ry="2" />
<text  x="1147.78" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="879.5" y="1653" width="0.2" height="15.0" fill="rgb(233,216,0)" rx="2" ry="2" />
<text  x="882.49" y="1663.5" ></text>
</g>
<g >
<title>new_inode_pseudo (61 samples, 1.03%)</title><rect x="396.5" y="1941" width="12.2" height="15.0" fill="rgb(208,125,31)" rx="2" ry="2" />
<text  x="399.53" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="567.6" y="1893" width="0.2" height="15.0" fill="rgb(206,117,40)" rx="2" ry="2" />
<text  x="570.59" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="402.1" y="1717" width="0.2" height="15.0" fill="rgb(213,10,35)" rx="2" ry="2" />
<text  x="405.13" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="402.1" y="1621" width="0.2" height="15.0" fill="rgb(233,104,41)" rx="2" ry="2" />
<text  x="405.13" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="504.4" y="1973" width="0.8" height="15.0" fill="rgb(252,170,41)" rx="2" ry="2" />
<text  x="507.37" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="194.5" y="2021" width="0.2" height="15.0" fill="rgb(211,0,22)" rx="2" ry="2" />
<text  x="197.46" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="630.0" y="1941" width="0.2" height="15.0" fill="rgb(225,124,30)" rx="2" ry="2" />
<text  x="633.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="913.9" y="2037" width="0.2" height="15.0" fill="rgb(241,194,35)" rx="2" ry="2" />
<text  x="916.91" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="543.4" y="1941" width="0.2" height="15.0" fill="rgb(207,163,43)" rx="2" ry="2" />
<text  x="546.38" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="639.8" y="1989" width="0.2" height="15.0" fill="rgb(209,84,18)" rx="2" ry="2" />
<text  x="642.81" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::FibersPoolResizer::run (1 samples, 0.02%)</title><rect x="18.4" y="2005" width="0.2" height="15.0" fill="rgb(215,154,43)" rx="2" ry="2" />
<text  x="21.40" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="117.8" y="37" width="0.2" height="15.0" fill="rgb(230,90,28)" rx="2" ry="2" />
<text  x="120.84" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="914.5" y="1989" width="0.2" height="15.0" fill="rgb(219,162,28)" rx="2" ry="2" />
<text  x="917.51" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="981.7" y="1685" width="0.2" height="15.0" fill="rgb(235,169,22)" rx="2" ry="2" />
<text  x="984.73" y="1695.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="384.7" y="1925" width="0.2" height="15.0" fill="rgb(220,135,28)" rx="2" ry="2" />
<text  x="387.73" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (2 samples, 0.03%)</title><rect x="591.8" y="1973" width="0.4" height="15.0" fill="rgb(247,186,29)" rx="2" ry="2" />
<text  x="594.80" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="629.8" y="2021" width="0.6" height="15.0" fill="rgb(244,150,18)" rx="2" ry="2" />
<text  x="632.81" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="394.1" y="1877" width="0.2" height="15.0" fill="rgb(253,204,0)" rx="2" ry="2" />
<text  x="397.13" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="751.9" y="1621" width="0.2" height="15.0" fill="rgb(225,37,20)" rx="2" ry="2" />
<text  x="754.85" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.7" y="1797" width="0.2" height="15.0" fill="rgb(245,205,33)" rx="2" ry="2" />
<text  x="834.68" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="43.0" y="1973" width="0.2" height="15.0" fill="rgb(217,68,8)" rx="2" ry="2" />
<text  x="46.01" y="1983.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="813.7" y="1621" width="0.2" height="15.0" fill="rgb(250,156,6)" rx="2" ry="2" />
<text  x="816.67" y="1631.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="782.7" y="1653" width="0.2" height="15.0" fill="rgb(241,99,51)" rx="2" ry="2" />
<text  x="785.66" y="1663.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="943.5" y="1861" width="0.2" height="15.0" fill="rgb(211,101,45)" rx="2" ry="2" />
<text  x="946.52" y="1871.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="535.8" y="1781" width="0.2" height="15.0" fill="rgb(214,145,47)" rx="2" ry="2" />
<text  x="538.78" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="853.3" y="1781" width="0.2" height="15.0" fill="rgb(210,7,53)" rx="2" ry="2" />
<text  x="856.29" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.9" y="1893" width="0.2" height="15.0" fill="rgb(217,211,52)" rx="2" ry="2" />
<text  x="160.85" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="626.2" y="1829" width="0.2" height="15.0" fill="rgb(239,130,44)" rx="2" ry="2" />
<text  x="629.21" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="865.9" y="1989" width="1.2" height="15.0" fill="rgb(236,218,51)" rx="2" ry="2" />
<text  x="868.89" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1144.2" y="1973" width="0.2" height="15.0" fill="rgb(246,23,15)" rx="2" ry="2" />
<text  x="1147.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="913.3" y="1989" width="0.4" height="15.0" fill="rgb(253,167,19)" rx="2" ry="2" />
<text  x="916.31" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="80.0" y="1637" width="0.2" height="15.0" fill="rgb(211,149,31)" rx="2" ry="2" />
<text  x="83.02" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="641.6" y="1989" width="0.2" height="15.0" fill="rgb(217,57,37)" rx="2" ry="2" />
<text  x="644.61" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="1181.4" y="2053" width="0.2" height="15.0" fill="rgb(250,90,23)" rx="2" ry="2" />
<text  x="1184.40" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="954.3" y="1925" width="0.2" height="15.0" fill="rgb(251,110,48)" rx="2" ry="2" />
<text  x="957.32" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (15 samples, 0.25%)</title><rect x="226.5" y="2021" width="3.0" height="15.0" fill="rgb(214,89,33)" rx="2" ry="2" />
<text  x="229.47" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="998.9" y="1957" width="0.2" height="15.0" fill="rgb(236,16,25)" rx="2" ry="2" />
<text  x="1001.94" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="165.5" y="1957" width="0.2" height="15.0" fill="rgb(209,175,38)" rx="2" ry="2" />
<text  x="168.45" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="843.5" y="1781" width="0.2" height="15.0" fill="rgb(235,101,24)" rx="2" ry="2" />
<text  x="846.48" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="307.9" y="1797" width="0.4" height="15.0" fill="rgb(226,10,7)" rx="2" ry="2" />
<text  x="310.90" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="264.1" y="1797" width="0.6" height="15.0" fill="rgb(213,78,6)" rx="2" ry="2" />
<text  x="267.09" y="1807.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="12.6" y="1957" width="1.0" height="15.0" fill="rgb(217,20,47)" rx="2" ry="2" />
<text  x="15.60" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="890.7" y="1893" width="0.2" height="15.0" fill="rgb(231,226,8)" rx="2" ry="2" />
<text  x="893.70" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (4 samples, 0.07%)</title><rect x="843.1" y="1925" width="0.8" height="15.0" fill="rgb(241,187,50)" rx="2" ry="2" />
<text  x="846.08" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="942.1" y="1973" width="0.4" height="15.0" fill="rgb(224,168,21)" rx="2" ry="2" />
<text  x="945.12" y="1983.5" ></text>
</g>
<g >
<title>__fdget_raw (2 samples, 0.03%)</title><rect x="577.2" y="1925" width="0.4" height="15.0" fill="rgb(219,109,41)" rx="2" ry="2" />
<text  x="580.19" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="854.9" y="1797" width="0.2" height="15.0" fill="rgb(228,105,19)" rx="2" ry="2" />
<text  x="857.89" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="860.1" y="1717" width="0.2" height="15.0" fill="rgb(224,181,44)" rx="2" ry="2" />
<text  x="863.09" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="901.7" y="2005" width="0.2" height="15.0" fill="rgb(251,110,48)" rx="2" ry="2" />
<text  x="904.70" y="2015.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (22 samples, 0.37%)</title><rect x="95.4" y="2037" width="4.4" height="15.0" fill="rgb(250,155,52)" rx="2" ry="2" />
<text  x="98.43" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="936.3" y="1733" width="0.2" height="15.0" fill="rgb(208,175,3)" rx="2" ry="2" />
<text  x="939.31" y="1743.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4 samples, 0.07%)</title><rect x="738.0" y="1797" width="0.8" height="15.0" fill="rgb(221,48,21)" rx="2" ry="2" />
<text  x="741.05" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="533.2" y="1941" width="0.2" height="15.0" fill="rgb(212,4,10)" rx="2" ry="2" />
<text  x="536.18" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="680.0" y="1653" width="0.2" height="15.0" fill="rgb(237,13,17)" rx="2" ry="2" />
<text  x="683.03" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="470.6" y="1845" width="0.2" height="15.0" fill="rgb(213,186,44)" rx="2" ry="2" />
<text  x="473.56" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="896.5" y="2021" width="0.4" height="15.0" fill="rgb(206,97,17)" rx="2" ry="2" />
<text  x="899.50" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="629.0" y="2037" width="0.6" height="15.0" fill="rgb(212,79,4)" rx="2" ry="2" />
<text  x="632.01" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="680.0" y="1749" width="0.2" height="15.0" fill="rgb(215,112,14)" rx="2" ry="2" />
<text  x="683.03" y="1759.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="149.4" y="1861" width="0.2" height="15.0" fill="rgb(232,191,8)" rx="2" ry="2" />
<text  x="152.45" y="1871.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="429.9" y="1909" width="0.2" height="15.0" fill="rgb(223,20,33)" rx="2" ry="2" />
<text  x="432.94" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1073.8" y="1813" width="0.2" height="15.0" fill="rgb(217,47,27)" rx="2" ry="2" />
<text  x="1076.76" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="630.0" y="1989" width="0.2" height="15.0" fill="rgb(236,186,18)" rx="2" ry="2" />
<text  x="633.01" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1067.8" y="1781" width="0.4" height="15.0" fill="rgb(214,32,54)" rx="2" ry="2" />
<text  x="1070.76" y="1791.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.2" y="1957" width="0.8" height="15.0" fill="rgb(251,101,29)" rx="2" ry="2" />
<text  x="14.20" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (3 samples, 0.05%)</title><rect x="582.6" y="1973" width="0.6" height="15.0" fill="rgb(225,75,45)" rx="2" ry="2" />
<text  x="585.59" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1126.2" y="1749" width="0.2" height="15.0" fill="rgb(238,78,5)" rx="2" ry="2" />
<text  x="1129.18" y="1759.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="842.1" y="1845" width="0.8" height="15.0" fill="rgb(211,169,31)" rx="2" ry="2" />
<text  x="845.08" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (8 samples, 0.14%)</title><rect x="108.8" y="37" width="1.6" height="15.0" fill="rgb(212,212,45)" rx="2" ry="2" />
<text  x="111.83" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1067.8" y="1733" width="0.4" height="15.0" fill="rgb(243,156,50)" rx="2" ry="2" />
<text  x="1070.76" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="140.4" y="1925" width="0.4" height="15.0" fill="rgb(211,161,51)" rx="2" ry="2" />
<text  x="143.44" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.6" y="1957" width="0.2" height="15.0" fill="rgb(253,168,52)" rx="2" ry="2" />
<text  x="77.62" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="162.3" y="1973" width="0.2" height="15.0" fill="rgb(242,5,39)" rx="2" ry="2" />
<text  x="165.25" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="512.0" y="1685" width="0.2" height="15.0" fill="rgb(208,36,54)" rx="2" ry="2" />
<text  x="514.97" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="923.3" y="1925" width="0.2" height="15.0" fill="rgb(213,224,33)" rx="2" ry="2" />
<text  x="926.31" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="752.5" y="1413" width="0.2" height="15.0" fill="rgb(248,37,53)" rx="2" ry="2" />
<text  x="755.45" y="1423.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1139.0" y="1685" width="0.2" height="15.0" fill="rgb(230,211,6)" rx="2" ry="2" />
<text  x="1141.98" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="120.4" y="1349" width="0.2" height="15.0" fill="rgb(220,160,7)" rx="2" ry="2" />
<text  x="123.44" y="1359.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="919.3" y="1941" width="0.2" height="15.0" fill="rgb(217,148,2)" rx="2" ry="2" />
<text  x="922.31" y="1951.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="12.6" y="1989" width="1.0" height="15.0" fill="rgb(245,209,50)" rx="2" ry="2" />
<text  x="15.60" y="1999.5" ></text>
</g>
<g >
<title>event_changelist_remove_all_ (1 samples, 0.02%)</title><rect x="526.2" y="2037" width="0.2" height="15.0" fill="rgb(214,206,24)" rx="2" ry="2" />
<text  x="529.17" y="2047.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="428.5" y="1589" width="0.2" height="15.0" fill="rgb(231,141,30)" rx="2" ry="2" />
<text  x="431.54" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="357.1" y="1989" width="0.4" height="15.0" fill="rgb(248,35,10)" rx="2" ry="2" />
<text  x="360.12" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="809.7" y="1509" width="0.4" height="15.0" fill="rgb(205,228,6)" rx="2" ry="2" />
<text  x="812.67" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (8 samples, 0.14%)</title><rect x="35.8" y="1989" width="1.6" height="15.0" fill="rgb(216,171,2)" rx="2" ry="2" />
<text  x="38.81" y="1999.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="787.9" y="1269" width="0.2" height="15.0" fill="rgb(250,197,3)" rx="2" ry="2" />
<text  x="790.86" y="1279.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="577.4" y="1909" width="0.2" height="15.0" fill="rgb(210,50,27)" rx="2" ry="2" />
<text  x="580.39" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1149.8" y="1685" width="0.2" height="15.0" fill="rgb(212,14,40)" rx="2" ry="2" />
<text  x="1152.79" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1103.0" y="1877" width="0.2" height="15.0" fill="rgb(210,133,6)" rx="2" ry="2" />
<text  x="1105.97" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="126.2" y="1861" width="0.4" height="15.0" fill="rgb(218,206,0)" rx="2" ry="2" />
<text  x="129.24" y="1871.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="583.0" y="1733" width="0.2" height="15.0" fill="rgb(232,150,35)" rx="2" ry="2" />
<text  x="585.99" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="809.7" y="1605" width="0.4" height="15.0" fill="rgb(214,59,8)" rx="2" ry="2" />
<text  x="812.67" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="825.1" y="1413" width="0.2" height="15.0" fill="rgb(215,53,31)" rx="2" ry="2" />
<text  x="828.08" y="1423.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="758.9" y="1669" width="0.2" height="15.0" fill="rgb(250,132,22)" rx="2" ry="2" />
<text  x="761.85" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="935.3" y="1765" width="0.2" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="938.31" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="117.8" y="69" width="0.2" height="15.0" fill="rgb(212,140,35)" rx="2" ry="2" />
<text  x="120.84" y="79.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="415.1" y="1877" width="0.8" height="15.0" fill="rgb(212,14,6)" rx="2" ry="2" />
<text  x="418.14" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="916.5" y="1925" width="0.2" height="15.0" fill="rgb(247,197,39)" rx="2" ry="2" />
<text  x="919.51" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10 samples, 0.17%)</title><rect x="286.1" y="1557" width="2.0" height="15.0" fill="rgb(213,224,22)" rx="2" ry="2" />
<text  x="289.09" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1125.6" y="1909" width="0.2" height="15.0" fill="rgb(236,68,15)" rx="2" ry="2" />
<text  x="1128.58" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="189.9" y="1797" width="0.2" height="15.0" fill="rgb(247,70,1)" rx="2" ry="2" />
<text  x="192.86" y="1807.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (35 samples, 0.59%)</title><rect x="316.1" y="1829" width="7.0" height="15.0" fill="rgb(236,196,51)" rx="2" ry="2" />
<text  x="319.10" y="1839.5" ></text>
</g>
<g >
<title>__check_object_size (14 samples, 0.24%)</title><rect x="1095.8" y="1909" width="2.8" height="15.0" fill="rgb(237,101,51)" rx="2" ry="2" />
<text  x="1098.77" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (36 samples, 0.61%)</title><rect x="55.0" y="1957" width="7.2" height="15.0" fill="rgb(253,95,6)" rx="2" ry="2" />
<text  x="58.02" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1142.0" y="1845" width="0.2" height="15.0" fill="rgb(213,186,13)" rx="2" ry="2" />
<text  x="1144.98" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="854.9" y="1813" width="0.2" height="15.0" fill="rgb(253,194,9)" rx="2" ry="2" />
<text  x="857.89" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (3 samples, 0.05%)</title><rect x="629.0" y="2005" width="0.6" height="15.0" fill="rgb(243,170,40)" rx="2" ry="2" />
<text  x="632.01" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1139.0" y="1957" width="0.2" height="15.0" fill="rgb(209,203,32)" rx="2" ry="2" />
<text  x="1141.98" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1237" width="16.0" height="15.0" fill="rgb(230,148,18)" rx="2" ry="2" />
<text  x="106.23" y="1247.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="312.7" y="1733" width="0.2" height="15.0" fill="rgb(221,47,18)" rx="2" ry="2" />
<text  x="315.70" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.5" y="1925" width="0.2" height="15.0" fill="rgb(242,26,30)" rx="2" ry="2" />
<text  x="861.49" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1461" width="16.8" height="15.0" fill="rgb(247,228,53)" rx="2" ry="2" />
<text  x="106.03" y="1471.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (3 samples, 0.05%)</title><rect x="684.2" y="2021" width="0.6" height="15.0" fill="rgb(243,48,12)" rx="2" ry="2" />
<text  x="687.23" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="116.4" y="37" width="0.4" height="15.0" fill="rgb(223,171,21)" rx="2" ry="2" />
<text  x="119.44" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="118.6" y="373" width="0.2" height="15.0" fill="rgb(244,63,53)" rx="2" ry="2" />
<text  x="121.64" y="383.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="712.4" y="1765" width="0.2" height="15.0" fill="rgb(207,166,20)" rx="2" ry="2" />
<text  x="715.44" y="1775.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="704.4" y="1605" width="0.2" height="15.0" fill="rgb(216,82,13)" rx="2" ry="2" />
<text  x="707.44" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="825.1" y="1381" width="0.2" height="15.0" fill="rgb(228,188,19)" rx="2" ry="2" />
<text  x="828.08" y="1391.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="11.0" y="2037" width="0.2" height="15.0" fill="rgb(238,120,20)" rx="2" ry="2" />
<text  x="14.00" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="914.9" y="1797" width="0.2" height="15.0" fill="rgb(236,116,3)" rx="2" ry="2" />
<text  x="917.91" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="363.5" y="1701" width="0.2" height="15.0" fill="rgb(246,175,46)" rx="2" ry="2" />
<text  x="366.52" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="126.4" y="1733" width="0.2" height="15.0" fill="rgb(240,170,2)" rx="2" ry="2" />
<text  x="129.44" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="575.8" y="1813" width="0.4" height="15.0" fill="rgb(227,23,40)" rx="2" ry="2" />
<text  x="578.79" y="1823.5" ></text>
</g>
<g >
<title>_find_next_bit (2 samples, 0.03%)</title><rect x="361.1" y="1925" width="0.4" height="15.0" fill="rgb(221,171,21)" rx="2" ry="2" />
<text  x="364.12" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1139.0" y="1701" width="0.2" height="15.0" fill="rgb(254,141,38)" rx="2" ry="2" />
<text  x="1141.98" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1188.8" y="2037" width="0.4" height="15.0" fill="rgb(231,171,21)" rx="2" ry="2" />
<text  x="1191.80" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="141.8" y="1877" width="0.2" height="15.0" fill="rgb(244,225,32)" rx="2" ry="2" />
<text  x="144.84" y="1887.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="834.1" y="1525" width="0.2" height="15.0" fill="rgb(228,65,10)" rx="2" ry="2" />
<text  x="837.08" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="97.8" y="1765" width="0.2" height="15.0" fill="rgb(219,23,25)" rx="2" ry="2" />
<text  x="100.83" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="249.1" y="1813" width="0.2" height="15.0" fill="rgb(214,227,40)" rx="2" ry="2" />
<text  x="252.08" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="567.6" y="1925" width="0.2" height="15.0" fill="rgb(243,79,51)" rx="2" ry="2" />
<text  x="570.59" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1142.0" y="1829" width="0.2" height="15.0" fill="rgb(206,18,34)" rx="2" ry="2" />
<text  x="1144.98" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="277" width="14.8" height="15.0" fill="rgb(217,103,12)" rx="2" ry="2" />
<text  x="106.43" y="287.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="956.3" y="1989" width="0.2" height="15.0" fill="rgb(234,73,41)" rx="2" ry="2" />
<text  x="959.32" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="168.9" y="1973" width="0.6" height="15.0" fill="rgb(252,101,19)" rx="2" ry="2" />
<text  x="171.85" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="565.8" y="1717" width="0.2" height="15.0" fill="rgb(249,212,25)" rx="2" ry="2" />
<text  x="568.79" y="1727.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="120.4" y="1253" width="0.2" height="15.0" fill="rgb(211,117,52)" rx="2" ry="2" />
<text  x="123.44" y="1263.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="611.0" y="1877" width="0.2" height="15.0" fill="rgb(231,190,11)" rx="2" ry="2" />
<text  x="614.00" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="984.7" y="1701" width="0.2" height="15.0" fill="rgb(232,71,10)" rx="2" ry="2" />
<text  x="987.73" y="1711.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1065.6" y="1893" width="0.4" height="15.0" fill="rgb(233,35,30)" rx="2" ry="2" />
<text  x="1068.56" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1149.8" y="1845" width="0.2" height="15.0" fill="rgb(212,214,50)" rx="2" ry="2" />
<text  x="1152.79" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1016.1" y="1877" width="0.2" height="15.0" fill="rgb(241,1,31)" rx="2" ry="2" />
<text  x="1019.14" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="611.4" y="1845" width="0.2" height="15.0" fill="rgb(223,180,21)" rx="2" ry="2" />
<text  x="614.40" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="308.1" y="1557" width="0.2" height="15.0" fill="rgb(215,57,2)" rx="2" ry="2" />
<text  x="311.10" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="512.0" y="1797" width="0.2" height="15.0" fill="rgb(216,176,51)" rx="2" ry="2" />
<text  x="514.97" y="1807.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.2" y="1941" width="0.8" height="15.0" fill="rgb(229,203,9)" rx="2" ry="2" />
<text  x="14.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="264.7" y="1525" width="0.2" height="15.0" fill="rgb(241,166,29)" rx="2" ry="2" />
<text  x="267.69" y="1535.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="578.6" y="1701" width="0.2" height="15.0" fill="rgb(211,133,51)" rx="2" ry="2" />
<text  x="581.59" y="1711.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="626.2" y="1669" width="0.2" height="15.0" fill="rgb(238,164,38)" rx="2" ry="2" />
<text  x="629.21" y="1679.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="328.9" y="1829" width="0.2" height="15.0" fill="rgb(228,69,10)" rx="2" ry="2" />
<text  x="331.91" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="546.0" y="1957" width="1.2" height="15.0" fill="rgb(239,185,51)" rx="2" ry="2" />
<text  x="548.98" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="583.0" y="1877" width="0.2" height="15.0" fill="rgb(250,159,35)" rx="2" ry="2" />
<text  x="585.99" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="244.5" y="1893" width="0.2" height="15.0" fill="rgb(243,52,34)" rx="2" ry="2" />
<text  x="247.48" y="1903.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1189.4" y="2005" width="0.4" height="15.0" fill="rgb(219,225,46)" rx="2" ry="2" />
<text  x="1192.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="854.9" y="1717" width="0.2" height="15.0" fill="rgb(224,66,50)" rx="2" ry="2" />
<text  x="857.89" y="1727.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (2 samples, 0.03%)</title><rect x="1171.6" y="2037" width="0.4" height="15.0" fill="rgb(237,203,21)" rx="2" ry="2" />
<text  x="1174.59" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="825.1" y="1573" width="0.2" height="15.0" fill="rgb(252,93,30)" rx="2" ry="2" />
<text  x="828.08" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="869" width="15.4" height="15.0" fill="rgb(232,150,39)" rx="2" ry="2" />
<text  x="106.43" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="415.1" y="1861" width="0.8" height="15.0" fill="rgb(210,143,24)" rx="2" ry="2" />
<text  x="418.14" y="1871.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="12.6" y="2005" width="1.0" height="15.0" fill="rgb(211,88,29)" rx="2" ry="2" />
<text  x="15.60" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="118.0" y="229" width="0.2" height="15.0" fill="rgb(230,155,18)" rx="2" ry="2" />
<text  x="121.04" y="239.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="336.7" y="1605" width="0.2" height="15.0" fill="rgb(246,204,26)" rx="2" ry="2" />
<text  x="339.71" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="62.2" y="1957" width="0.2" height="15.0" fill="rgb(215,84,11)" rx="2" ry="2" />
<text  x="65.22" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="165.3" y="1861" width="0.2" height="15.0" fill="rgb(222,159,48)" rx="2" ry="2" />
<text  x="168.25" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (905 samples, 15.34%)</title><rect x="715.4" y="2037" width="181.1" height="15.0" fill="rgb(238,57,5)" rx="2" ry="2" />
<text  x="718.44" y="2047.5" >facebook::memcache::McS..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="259.5" y="1653" width="0.2" height="15.0" fill="rgb(250,212,4)" rx="2" ry="2" />
<text  x="262.48" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="336.7" y="1909" width="0.2" height="15.0" fill="rgb(212,196,38)" rx="2" ry="2" />
<text  x="339.71" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::doFibersPoolResizing (1 samples, 0.02%)</title><rect x="18.4" y="1989" width="0.2" height="15.0" fill="rgb(223,61,36)" rx="2" ry="2" />
<text  x="21.40" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1130.8" y="1813" width="0.2" height="15.0" fill="rgb(215,203,17)" rx="2" ry="2" />
<text  x="1133.78" y="1823.5" ></text>
</g>
<g >
<title>free_unref_page_commit (14 samples, 0.24%)</title><rect x="1075.6" y="1829" width="2.8" height="15.0" fill="rgb(228,96,33)" rx="2" ry="2" />
<text  x="1078.56" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="889.3" y="1877" width="1.0" height="15.0" fill="rgb(245,173,2)" rx="2" ry="2" />
<text  x="892.30" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="256.5" y="1541" width="0.2" height="15.0" fill="rgb(247,97,42)" rx="2" ry="2" />
<text  x="259.48" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="118.6" y="565" width="0.2" height="15.0" fill="rgb(225,190,41)" rx="2" ry="2" />
<text  x="121.64" y="575.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="634.6" y="1925" width="0.2" height="15.0" fill="rgb(241,85,42)" rx="2" ry="2" />
<text  x="637.61" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="363.5" y="1829" width="0.2" height="15.0" fill="rgb(242,199,24)" rx="2" ry="2" />
<text  x="366.52" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="160.5" y="2021" width="0.2" height="15.0" fill="rgb(254,220,21)" rx="2" ry="2" />
<text  x="163.45" y="2031.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="763.1" y="1733" width="0.2" height="15.0" fill="rgb(242,15,15)" rx="2" ry="2" />
<text  x="766.06" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="264.7" y="1685" width="0.2" height="15.0" fill="rgb(251,216,37)" rx="2" ry="2" />
<text  x="267.69" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="333.3" y="1925" width="0.2" height="15.0" fill="rgb(247,119,35)" rx="2" ry="2" />
<text  x="336.31" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="835.7" y="1749" width="0.2" height="15.0" fill="rgb(224,140,33)" rx="2" ry="2" />
<text  x="838.68" y="1759.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="908.9" y="1989" width="0.8" height="15.0" fill="rgb(215,154,27)" rx="2" ry="2" />
<text  x="911.90" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="953.5" y="2005" width="0.4" height="15.0" fill="rgb(225,6,46)" rx="2" ry="2" />
<text  x="956.52" y="2015.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="969.3" y="1797" width="0.2" height="15.0" fill="rgb(243,198,20)" rx="2" ry="2" />
<text  x="972.33" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.1" y="1781" width="0.2" height="15.0" fill="rgb(247,192,9)" rx="2" ry="2" />
<text  x="844.08" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="182.7" y="1941" width="0.2" height="15.0" fill="rgb(254,5,30)" rx="2" ry="2" />
<text  x="185.66" y="1951.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="764.9" y="1733" width="0.2" height="15.0" fill="rgb(225,194,2)" rx="2" ry="2" />
<text  x="767.86" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="914.9" y="1749" width="0.2" height="15.0" fill="rgb(226,16,8)" rx="2" ry="2" />
<text  x="917.91" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="79.4" y="1765" width="0.2" height="15.0" fill="rgb(249,7,6)" rx="2" ry="2" />
<text  x="82.42" y="1775.5" ></text>
</g>
<g >
<title>__fdget (23 samples, 0.39%)</title><rect x="466.2" y="1973" width="4.6" height="15.0" fill="rgb(246,98,47)" rx="2" ry="2" />
<text  x="469.15" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="326.9" y="1861" width="0.2" height="15.0" fill="rgb(246,195,50)" rx="2" ry="2" />
<text  x="329.91" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="831.9" y="1637" width="0.2" height="15.0" fill="rgb(218,91,46)" rx="2" ry="2" />
<text  x="834.88" y="1647.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="503.0" y="1973" width="0.6" height="15.0" fill="rgb(226,199,40)" rx="2" ry="2" />
<text  x="505.97" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (34 samples, 0.58%)</title><rect x="982.1" y="1989" width="6.8" height="15.0" fill="rgb(254,147,37)" rx="2" ry="2" />
<text  x="985.13" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="336.7" y="1797" width="0.2" height="15.0" fill="rgb(213,92,36)" rx="2" ry="2" />
<text  x="339.71" y="1807.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="594.2" y="2021" width="0.2" height="15.0" fill="rgb(233,109,19)" rx="2" ry="2" />
<text  x="597.20" y="2031.5" ></text>
</g>
<g >
<title>free_unref_page (15 samples, 0.25%)</title><rect x="1075.4" y="1845" width="3.0" height="15.0" fill="rgb(236,194,4)" rx="2" ry="2" />
<text  x="1078.36" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="562.4" y="1989" width="0.2" height="15.0" fill="rgb(224,211,49)" rx="2" ry="2" />
<text  x="565.39" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="629.0" y="2021" width="0.6" height="15.0" fill="rgb(240,42,53)" rx="2" ry="2" />
<text  x="632.01" y="2031.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="943.5" y="1941" width="0.2" height="15.0" fill="rgb(237,113,24)" rx="2" ry="2" />
<text  x="946.52" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="752.5" y="1477" width="0.2" height="15.0" fill="rgb(247,22,32)" rx="2" ry="2" />
<text  x="755.45" y="1487.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="503.8" y="1861" width="0.4" height="15.0" fill="rgb(245,95,32)" rx="2" ry="2" />
<text  x="506.77" y="1871.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="180.9" y="2021" width="0.4" height="15.0" fill="rgb(252,227,16)" rx="2" ry="2" />
<text  x="183.86" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="357.1" y="1861" width="0.4" height="15.0" fill="rgb(213,52,4)" rx="2" ry="2" />
<text  x="360.12" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (100 samples, 1.70%)</title><rect x="916.7" y="2005" width="20.0" height="15.0" fill="rgb(229,74,2)" rx="2" ry="2" />
<text  x="919.71" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1147.8" y="2005" width="0.2" height="15.0" fill="rgb(211,115,26)" rx="2" ry="2" />
<text  x="1150.79" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="149.4" y="1877" width="0.2" height="15.0" fill="rgb(227,167,7)" rx="2" ry="2" />
<text  x="152.45" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="916.5" y="1957" width="0.2" height="15.0" fill="rgb(253,42,30)" rx="2" ry="2" />
<text  x="919.51" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1144.2" y="1941" width="0.2" height="15.0" fill="rgb(240,148,8)" rx="2" ry="2" />
<text  x="1147.18" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="914.1" y="1893" width="0.2" height="15.0" fill="rgb(225,208,37)" rx="2" ry="2" />
<text  x="917.11" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (7 samples, 0.12%)</title><rect x="151.8" y="1893" width="1.4" height="15.0" fill="rgb(238,186,3)" rx="2" ry="2" />
<text  x="154.85" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="126.2" y="1749" width="0.4" height="15.0" fill="rgb(216,120,46)" rx="2" ry="2" />
<text  x="129.24" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (11 samples, 0.19%)</title><rect x="1147.4" y="2021" width="2.2" height="15.0" fill="rgb(236,184,28)" rx="2" ry="2" />
<text  x="1150.39" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="381.5" y="1797" width="0.2" height="15.0" fill="rgb(212,85,0)" rx="2" ry="2" />
<text  x="384.53" y="1807.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="415.1" y="1781" width="0.2" height="15.0" fill="rgb(246,134,42)" rx="2" ry="2" />
<text  x="418.14" y="1791.5" ></text>
</g>
<g >
<title>inet_reqsk_alloc (1 samples, 0.02%)</title><rect x="664.0" y="1669" width="0.2" height="15.0" fill="rgb(224,167,41)" rx="2" ry="2" />
<text  x="667.02" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1110.6" y="1573" width="0.2" height="15.0" fill="rgb(205,195,47)" rx="2" ry="2" />
<text  x="1113.57" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="575.8" y="1893" width="0.4" height="15.0" fill="rgb(206,126,23)" rx="2" ry="2" />
<text  x="578.79" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="346.1" y="2037" width="0.2" height="15.0" fill="rgb(233,216,9)" rx="2" ry="2" />
<text  x="349.11" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (7 samples, 0.12%)</title><rect x="77.8" y="1925" width="1.4" height="15.0" fill="rgb(226,227,32)" rx="2" ry="2" />
<text  x="80.82" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="712.4" y="1685" width="0.2" height="15.0" fill="rgb(230,80,33)" rx="2" ry="2" />
<text  x="715.44" y="1695.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="164.1" y="2005" width="0.2" height="15.0" fill="rgb(223,208,48)" rx="2" ry="2" />
<text  x="167.05" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9 samples, 0.15%)</title><rect x="1124.0" y="1941" width="1.8" height="15.0" fill="rgb(244,180,50)" rx="2" ry="2" />
<text  x="1126.98" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="285.5" y="1653" width="0.6" height="15.0" fill="rgb(241,133,6)" rx="2" ry="2" />
<text  x="288.49" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="831.9" y="1749" width="0.2" height="15.0" fill="rgb(207,20,10)" rx="2" ry="2" />
<text  x="834.88" y="1759.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="140.2" y="1941" width="0.2" height="15.0" fill="rgb(224,202,53)" rx="2" ry="2" />
<text  x="143.24" y="1951.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="680.0" y="1573" width="0.2" height="15.0" fill="rgb(239,202,41)" rx="2" ry="2" />
<text  x="683.03" y="1583.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (7 samples, 0.12%)</title><rect x="324.5" y="1877" width="1.4" height="15.0" fill="rgb(243,202,9)" rx="2" ry="2" />
<text  x="327.51" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="755.5" y="1733" width="0.2" height="15.0" fill="rgb(242,94,8)" rx="2" ry="2" />
<text  x="758.45" y="1743.5" ></text>
</g>
<g >
<title>_IO_setb (3 samples, 0.05%)</title><rect x="184.9" y="2037" width="0.6" height="15.0" fill="rgb(232,179,27)" rx="2" ry="2" />
<text  x="187.86" y="2047.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (27 samples, 0.46%)</title><rect x="818.9" y="1717" width="5.4" height="15.0" fill="rgb(243,51,4)" rx="2" ry="2" />
<text  x="821.87" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="627.6" y="1989" width="0.2" height="15.0" fill="rgb(241,83,28)" rx="2" ry="2" />
<text  x="630.61" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="829.9" y="1525" width="0.2" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="832.88" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="211.5" y="1797" width="0.2" height="15.0" fill="rgb(213,53,4)" rx="2" ry="2" />
<text  x="214.47" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="853.3" y="1653" width="0.2" height="15.0" fill="rgb(241,161,32)" rx="2" ry="2" />
<text  x="856.29" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (2 samples, 0.03%)</title><rect x="161.1" y="2021" width="0.4" height="15.0" fill="rgb(227,111,48)" rx="2" ry="2" />
<text  x="164.05" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="555.8" y="1941" width="1.6" height="15.0" fill="rgb(237,78,22)" rx="2" ry="2" />
<text  x="558.79" y="1951.5" ></text>
</g>
<g >
<title>__skb_clone (25 samples, 0.42%)</title><rect x="805.1" y="1653" width="5.0" height="15.0" fill="rgb(229,132,23)" rx="2" ry="2" />
<text  x="808.07" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="267.5" y="1765" width="0.4" height="15.0" fill="rgb(242,11,18)" rx="2" ry="2" />
<text  x="270.49" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1081.8" y="1813" width="0.2" height="15.0" fill="rgb(244,198,23)" rx="2" ry="2" />
<text  x="1084.76" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="547.0" y="1941" width="0.2" height="15.0" fill="rgb(205,60,16)" rx="2" ry="2" />
<text  x="549.98" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="53.4" y="1893" width="0.2" height="15.0" fill="rgb(225,221,16)" rx="2" ry="2" />
<text  x="56.41" y="1903.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="11.2" y="2053" width="1.2" height="15.0" fill="rgb(228,81,45)" rx="2" ry="2" />
<text  x="14.20" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="546.6" y="1893" width="0.4" height="15.0" fill="rgb(211,80,33)" rx="2" ry="2" />
<text  x="549.58" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (3 samples, 0.05%)</title><rect x="1164.6" y="2053" width="0.6" height="15.0" fill="rgb(253,18,32)" rx="2" ry="2" />
<text  x="1167.59" y="2063.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="735.4" y="1781" width="0.8" height="15.0" fill="rgb(243,149,33)" rx="2" ry="2" />
<text  x="738.45" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="936.3" y="1685" width="0.2" height="15.0" fill="rgb(209,30,42)" rx="2" ry="2" />
<text  x="939.31" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (5 samples, 0.08%)</title><rect x="48.8" y="1893" width="1.0" height="15.0" fill="rgb(222,76,38)" rx="2" ry="2" />
<text  x="51.81" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="58.8" y="1909" width="0.6" height="15.0" fill="rgb(246,104,29)" rx="2" ry="2" />
<text  x="61.82" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="357.1" y="1797" width="0.4" height="15.0" fill="rgb(244,179,5)" rx="2" ry="2" />
<text  x="360.12" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="328.5" y="1653" width="0.4" height="15.0" fill="rgb(213,197,48)" rx="2" ry="2" />
<text  x="331.51" y="1663.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="608.4" y="1829" width="0.4" height="15.0" fill="rgb(241,185,33)" rx="2" ry="2" />
<text  x="611.40" y="1839.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="363.5" y="1941" width="0.2" height="15.0" fill="rgb(231,134,51)" rx="2" ry="2" />
<text  x="366.52" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="638.6" y="2005" width="0.2" height="15.0" fill="rgb(238,70,14)" rx="2" ry="2" />
<text  x="641.61" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="280.5" y="1797" width="0.2" height="15.0" fill="rgb(231,150,9)" rx="2" ry="2" />
<text  x="283.49" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="429.9" y="2005" width="0.6" height="15.0" fill="rgb(250,208,34)" rx="2" ry="2" />
<text  x="432.94" y="2015.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.4" y="1973" width="0.2" height="15.0" fill="rgb(249,216,13)" rx="2" ry="2" />
<text  x="105.43" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="610.6" y="1765" width="0.2" height="15.0" fill="rgb(224,27,21)" rx="2" ry="2" />
<text  x="613.60" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (5 samples, 0.08%)</title><rect x="789.7" y="1541" width="1.0" height="15.0" fill="rgb(251,165,7)" rx="2" ry="2" />
<text  x="792.66" y="1551.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="611.4" y="1557" width="0.2" height="15.0" fill="rgb(227,228,40)" rx="2" ry="2" />
<text  x="614.40" y="1567.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="895.9" y="2005" width="0.6" height="15.0" fill="rgb(217,155,23)" rx="2" ry="2" />
<text  x="898.90" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="120.4" y="1317" width="0.2" height="15.0" fill="rgb(239,15,20)" rx="2" ry="2" />
<text  x="123.44" y="1327.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1125.6" y="1765" width="0.2" height="15.0" fill="rgb(232,139,30)" rx="2" ry="2" />
<text  x="1128.58" y="1775.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="541.2" y="1973" width="0.2" height="15.0" fill="rgb(244,59,45)" rx="2" ry="2" />
<text  x="544.18" y="1983.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="332.5" y="1541" width="0.2" height="15.0" fill="rgb(229,38,2)" rx="2" ry="2" />
<text  x="335.51" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="712.6" y="2037" width="0.2" height="15.0" fill="rgb(252,120,47)" rx="2" ry="2" />
<text  x="715.64" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9 samples, 0.15%)</title><rect x="1173.0" y="1989" width="1.8" height="15.0" fill="rgb(252,77,37)" rx="2" ry="2" />
<text  x="1175.99" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="482.8" y="1813" width="0.6" height="15.0" fill="rgb(242,76,7)" rx="2" ry="2" />
<text  x="485.76" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="933.7" y="1669" width="0.2" height="15.0" fill="rgb(251,24,48)" rx="2" ry="2" />
<text  x="936.71" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="954.5" y="1909" width="0.2" height="15.0" fill="rgb(211,83,36)" rx="2" ry="2" />
<text  x="957.52" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="890.5" y="1749" width="0.2" height="15.0" fill="rgb(250,117,23)" rx="2" ry="2" />
<text  x="893.50" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="402.1" y="1797" width="0.2" height="15.0" fill="rgb(230,12,1)" rx="2" ry="2" />
<text  x="405.13" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="880.5" y="1909" width="0.2" height="15.0" fill="rgb(243,148,48)" rx="2" ry="2" />
<text  x="883.50" y="1919.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="816.7" y="1685" width="0.6" height="15.0" fill="rgb(235,168,46)" rx="2" ry="2" />
<text  x="819.67" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="333.3" y="1861" width="0.2" height="15.0" fill="rgb(205,194,45)" rx="2" ry="2" />
<text  x="336.31" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="626.2" y="1861" width="0.2" height="15.0" fill="rgb(215,34,52)" rx="2" ry="2" />
<text  x="629.21" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="552.0" y="1957" width="1.8" height="15.0" fill="rgb(252,38,53)" rx="2" ry="2" />
<text  x="554.98" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="634.6" y="1909" width="0.2" height="15.0" fill="rgb(212,23,2)" rx="2" ry="2" />
<text  x="637.61" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="357.1" y="1701" width="0.2" height="15.0" fill="rgb(207,163,36)" rx="2" ry="2" />
<text  x="360.12" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="333.3" y="1813" width="0.2" height="15.0" fill="rgb(234,223,53)" rx="2" ry="2" />
<text  x="336.31" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="314.1" y="1813" width="0.2" height="15.0" fill="rgb(245,205,0)" rx="2" ry="2" />
<text  x="317.10" y="1823.5" ></text>
</g>
<g >
<title>mod_timer (29 samples, 0.49%)</title><rect x="317.1" y="1765" width="5.8" height="15.0" fill="rgb(244,158,50)" rx="2" ry="2" />
<text  x="320.10" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="831.9" y="1765" width="0.2" height="15.0" fill="rgb(253,131,15)" rx="2" ry="2" />
<text  x="834.88" y="1775.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="889.3" y="1941" width="1.0" height="15.0" fill="rgb(220,192,40)" rx="2" ry="2" />
<text  x="892.30" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="126.4" y="1685" width="0.2" height="15.0" fill="rgb(232,36,24)" rx="2" ry="2" />
<text  x="129.44" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="945.5" y="2005" width="0.2" height="15.0" fill="rgb(253,183,34)" rx="2" ry="2" />
<text  x="948.52" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="712.4" y="1701" width="0.2" height="15.0" fill="rgb(220,55,2)" rx="2" ry="2" />
<text  x="715.44" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="589.6" y="1941" width="0.2" height="15.0" fill="rgb(232,122,47)" rx="2" ry="2" />
<text  x="592.60" y="1951.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="801.1" y="1493" width="0.2" height="15.0" fill="rgb(246,218,46)" rx="2" ry="2" />
<text  x="804.07" y="1503.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="157.4" y="1781" width="0.3" height="15.0" fill="rgb(219,183,30)" rx="2" ry="2" />
<text  x="160.45" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="298.7" y="1589" width="0.2" height="15.0" fill="rgb(218,16,3)" rx="2" ry="2" />
<text  x="301.70" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="912.3" y="2037" width="0.2" height="15.0" fill="rgb(227,107,26)" rx="2" ry="2" />
<text  x="915.31" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="626.2" y="1893" width="0.2" height="15.0" fill="rgb(213,50,3)" rx="2" ry="2" />
<text  x="629.21" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1142.0" y="1909" width="0.2" height="15.0" fill="rgb(244,51,29)" rx="2" ry="2" />
<text  x="1144.98" y="1919.5" ></text>
</g>
<g >
<title>map_id_range_down (2 samples, 0.03%)</title><rect x="401.7" y="1877" width="0.4" height="15.0" fill="rgb(207,115,19)" rx="2" ry="2" />
<text  x="404.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="565.8" y="1669" width="0.2" height="15.0" fill="rgb(237,225,4)" rx="2" ry="2" />
<text  x="568.79" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="825.1" y="1541" width="0.2" height="15.0" fill="rgb(206,19,8)" rx="2" ry="2" />
<text  x="828.08" y="1551.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="211.5" y="1861" width="0.2" height="15.0" fill="rgb(215,189,25)" rx="2" ry="2" />
<text  x="214.47" y="1871.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="590.4" y="1637" width="0.2" height="15.0" fill="rgb(240,150,36)" rx="2" ry="2" />
<text  x="593.40" y="1647.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (5 samples, 0.08%)</title><rect x="78.0" y="1893" width="1.0" height="15.0" fill="rgb(252,153,28)" rx="2" ry="2" />
<text  x="81.02" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (9 samples, 0.15%)</title><rect x="420.1" y="1893" width="1.8" height="15.0" fill="rgb(237,152,48)" rx="2" ry="2" />
<text  x="423.14" y="1903.5" ></text>
</g>
<g >
<title>__close (5 samples, 0.08%)</title><rect x="197.5" y="2037" width="1.0" height="15.0" fill="rgb(229,95,32)" rx="2" ry="2" />
<text  x="200.46" y="2047.5" ></text>
</g>
<g >
<title>free (23 samples, 0.39%)</title><rect x="176.1" y="2021" width="4.6" height="15.0" fill="rgb(224,200,43)" rx="2" ry="2" />
<text  x="179.06" y="2031.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="773.5" y="1653" width="0.4" height="15.0" fill="rgb(241,6,34)" rx="2" ry="2" />
<text  x="776.46" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="929.1" y="1797" width="0.2" height="15.0" fill="rgb(206,145,3)" rx="2" ry="2" />
<text  x="932.11" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="611.6" y="1845" width="0.2" height="15.0" fill="rgb(219,53,38)" rx="2" ry="2" />
<text  x="614.60" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="834.1" y="1781" width="0.2" height="15.0" fill="rgb(207,76,7)" rx="2" ry="2" />
<text  x="837.08" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="80.0" y="1877" width="0.2" height="15.0" fill="rgb(210,191,10)" rx="2" ry="2" />
<text  x="83.02" y="1887.5" ></text>
</g>
<g >
<title>sock_close (357 samples, 6.05%)</title><rect x="759.1" y="1797" width="71.4" height="15.0" fill="rgb(245,198,23)" rx="2" ry="2" />
<text  x="762.05" y="1807.5" >sock_close</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="104.0" y="37" width="0.2" height="15.0" fill="rgb(253,104,33)" rx="2" ry="2" />
<text  x="107.03" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="809.7" y="1461" width="0.4" height="15.0" fill="rgb(230,159,4)" rx="2" ry="2" />
<text  x="812.67" y="1471.5" ></text>
</g>
<g >
<title>folly::operator!= (4 samples, 0.07%)</title><rect x="27.6" y="1989" width="0.8" height="15.0" fill="rgb(250,20,6)" rx="2" ry="2" />
<text  x="30.61" y="1999.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="626.2" y="1573" width="0.2" height="15.0" fill="rgb(246,175,4)" rx="2" ry="2" />
<text  x="629.21" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="631.6" y="2021" width="2.2" height="15.0" fill="rgb(231,75,51)" rx="2" ry="2" />
<text  x="634.61" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="381.5" y="1893" width="0.2" height="15.0" fill="rgb(250,38,36)" rx="2" ry="2" />
<text  x="384.53" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="85.2" y="1957" width="0.2" height="15.0" fill="rgb(234,119,47)" rx="2" ry="2" />
<text  x="88.23" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="932.1" y="1941" width="0.4" height="15.0" fill="rgb(207,12,27)" rx="2" ry="2" />
<text  x="935.11" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="480.0" y="1893" width="0.6" height="15.0" fill="rgb(217,188,30)" rx="2" ry="2" />
<text  x="482.96" y="1903.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="754.3" y="1717" width="0.2" height="15.0" fill="rgb(254,54,21)" rx="2" ry="2" />
<text  x="757.25" y="1727.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="56.8" y="1909" width="0.4" height="15.0" fill="rgb(243,47,51)" rx="2" ry="2" />
<text  x="59.82" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="278.7" y="1733" width="0.2" height="15.0" fill="rgb(218,195,44)" rx="2" ry="2" />
<text  x="281.69" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1509" width="16.8" height="15.0" fill="rgb(241,118,24)" rx="2" ry="2" />
<text  x="106.03" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (111 samples, 1.88%)</title><rect x="63.4" y="1989" width="22.2" height="15.0" fill="rgb(233,60,50)" rx="2" ry="2" />
<text  x="66.42" y="1999.5" >f..</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="971.7" y="2005" width="0.4" height="15.0" fill="rgb(223,93,49)" rx="2" ry="2" />
<text  x="974.73" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="565.0" y="1973" width="0.2" height="15.0" fill="rgb(206,223,5)" rx="2" ry="2" />
<text  x="567.99" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="648.4" y="1717" width="0.2" height="15.0" fill="rgb(248,34,25)" rx="2" ry="2" />
<text  x="651.42" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="904.3" y="1941" width="0.2" height="15.0" fill="rgb(254,179,16)" rx="2" ry="2" />
<text  x="907.30" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9 samples, 0.15%)</title><rect x="286.3" y="1541" width="1.8" height="15.0" fill="rgb(231,139,36)" rx="2" ry="2" />
<text  x="289.29" y="1551.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="415.1" y="1893" width="0.8" height="15.0" fill="rgb(220,194,1)" rx="2" ry="2" />
<text  x="418.14" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="547.0" y="1925" width="0.2" height="15.0" fill="rgb(248,178,51)" rx="2" ry="2" />
<text  x="549.98" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="501.4" y="1973" width="0.2" height="15.0" fill="rgb(220,198,48)" rx="2" ry="2" />
<text  x="504.37" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="835.7" y="1877" width="0.2" height="15.0" fill="rgb(221,120,40)" rx="2" ry="2" />
<text  x="838.68" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.8" y="1989" width="0.2" height="15.0" fill="rgb(238,70,12)" rx="2" ry="2" />
<text  x="1186.80" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="415.9" y="1893" width="0.4" height="15.0" fill="rgb(234,227,37)" rx="2" ry="2" />
<text  x="418.94" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="84.8" y="1941" width="0.2" height="15.0" fill="rgb(220,30,47)" rx="2" ry="2" />
<text  x="87.83" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="416.7" y="1909" width="0.2" height="15.0" fill="rgb(233,71,15)" rx="2" ry="2" />
<text  x="419.74" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="825.1" y="1589" width="0.2" height="15.0" fill="rgb(229,106,15)" rx="2" ry="2" />
<text  x="828.08" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="482.8" y="1893" width="0.6" height="15.0" fill="rgb(228,0,45)" rx="2" ry="2" />
<text  x="485.76" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="843.7" y="1877" width="0.2" height="15.0" fill="rgb(236,109,39)" rx="2" ry="2" />
<text  x="846.68" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="53.4" y="1877" width="0.2" height="15.0" fill="rgb(206,24,54)" rx="2" ry="2" />
<text  x="56.41" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="66.6" y="1861" width="0.2" height="15.0" fill="rgb(218,57,43)" rx="2" ry="2" />
<text  x="69.62" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (72 samples, 1.22%)</title><rect x="669.4" y="1957" width="14.4" height="15.0" fill="rgb(206,142,49)" rx="2" ry="2" />
<text  x="672.42" y="1967.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="312.7" y="1669" width="0.2" height="15.0" fill="rgb(224,193,38)" rx="2" ry="2" />
<text  x="315.70" y="1679.5" ></text>
</g>
<g >
<title>ep_remove (64 samples, 1.09%)</title><rect x="484.6" y="1973" width="12.8" height="15.0" fill="rgb(209,212,47)" rx="2" ry="2" />
<text  x="487.56" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="626.2" y="1653" width="0.2" height="15.0" fill="rgb(209,94,36)" rx="2" ry="2" />
<text  x="629.21" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (14 samples, 0.24%)</title><rect x="551.6" y="2005" width="2.8" height="15.0" fill="rgb(215,20,15)" rx="2" ry="2" />
<text  x="554.58" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="505.0" y="1813" width="0.2" height="15.0" fill="rgb(226,86,18)" rx="2" ry="2" />
<text  x="507.97" y="1823.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="287.7" y="1349" width="0.2" height="15.0" fill="rgb(245,182,24)" rx="2" ry="2" />
<text  x="290.69" y="1359.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="980.7" y="1669" width="0.2" height="15.0" fill="rgb(240,219,15)" rx="2" ry="2" />
<text  x="983.73" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (473 samples, 8.02%)</title><rect x="1035.5" y="2021" width="94.7" height="15.0" fill="rgb(222,63,25)" rx="2" ry="2" />
<text  x="1038.55" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="816.1" y="1573" width="0.4" height="15.0" fill="rgb(249,137,14)" rx="2" ry="2" />
<text  x="819.07" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1130.8" y="1925" width="0.2" height="15.0" fill="rgb(226,39,16)" rx="2" ry="2" />
<text  x="1133.78" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="683.8" y="1973" width="0.2" height="15.0" fill="rgb(241,30,54)" rx="2" ry="2" />
<text  x="686.83" y="1983.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="679.4" y="1813" width="0.6" height="15.0" fill="rgb(231,112,35)" rx="2" ry="2" />
<text  x="682.43" y="1823.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="590.4" y="1477" width="0.2" height="15.0" fill="rgb(238,90,27)" rx="2" ry="2" />
<text  x="593.40" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="981.7" y="1749" width="0.2" height="15.0" fill="rgb(253,50,26)" rx="2" ry="2" />
<text  x="984.73" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="887.1" y="1941" width="0.8" height="15.0" fill="rgb(249,210,14)" rx="2" ry="2" />
<text  x="890.10" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="565.6" y="1845" width="0.2" height="15.0" fill="rgb(252,226,2)" rx="2" ry="2" />
<text  x="568.59" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="863.7" y="1957" width="0.2" height="15.0" fill="rgb(236,103,29)" rx="2" ry="2" />
<text  x="866.69" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="312.7" y="1749" width="0.2" height="15.0" fill="rgb(206,80,51)" rx="2" ry="2" />
<text  x="315.70" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="307.7" y="1717" width="0.2" height="15.0" fill="rgb(219,116,49)" rx="2" ry="2" />
<text  x="310.70" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="175.5" y="1909" width="0.2" height="15.0" fill="rgb(237,175,42)" rx="2" ry="2" />
<text  x="178.46" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="980.7" y="1765" width="0.2" height="15.0" fill="rgb(217,138,0)" rx="2" ry="2" />
<text  x="983.73" y="1775.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="788.1" y="1397" width="0.2" height="15.0" fill="rgb(243,136,12)" rx="2" ry="2" />
<text  x="791.06" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="914.9" y="1845" width="0.2" height="15.0" fill="rgb(236,103,37)" rx="2" ry="2" />
<text  x="917.91" y="1855.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1091.4" y="1653" width="0.2" height="15.0" fill="rgb(216,192,42)" rx="2" ry="2" />
<text  x="1094.37" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="915.7" y="2037" width="0.2" height="15.0" fill="rgb(251,217,5)" rx="2" ry="2" />
<text  x="918.71" y="2047.5" ></text>
</g>
<g >
<title>call_rcu_sched (7 samples, 0.12%)</title><rect x="485.6" y="1957" width="1.4" height="15.0" fill="rgb(254,48,3)" rx="2" ry="2" />
<text  x="488.56" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="890.5" y="1893" width="0.2" height="15.0" fill="rgb(235,198,23)" rx="2" ry="2" />
<text  x="893.50" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="683.6" y="1941" width="0.2" height="15.0" fill="rgb(216,218,51)" rx="2" ry="2" />
<text  x="686.63" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="809.7" y="1445" width="0.4" height="15.0" fill="rgb(226,70,50)" rx="2" ry="2" />
<text  x="812.67" y="1455.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="647.4" y="1717" width="0.2" height="15.0" fill="rgb(239,3,37)" rx="2" ry="2" />
<text  x="650.42" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="623.4" y="1701" width="0.2" height="15.0" fill="rgb(224,66,5)" rx="2" ry="2" />
<text  x="626.41" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="223.1" y="1845" width="0.2" height="15.0" fill="rgb(228,5,27)" rx="2" ry="2" />
<text  x="226.07" y="1855.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="680.4" y="1877" width="0.2" height="15.0" fill="rgb(243,122,32)" rx="2" ry="2" />
<text  x="683.43" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="499.0" y="1973" width="2.4" height="15.0" fill="rgb(239,108,35)" rx="2" ry="2" />
<text  x="501.97" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="181.5" y="2021" width="0.2" height="15.0" fill="rgb(234,106,30)" rx="2" ry="2" />
<text  x="184.46" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (4 samples, 0.07%)</title><rect x="81.0" y="1925" width="0.8" height="15.0" fill="rgb(226,147,1)" rx="2" ry="2" />
<text  x="84.02" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="647.2" y="1925" width="0.4" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="650.22" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (100 samples, 1.70%)</title><rect x="785.1" y="1621" width="20.0" height="15.0" fill="rgb(243,164,4)" rx="2" ry="2" />
<text  x="788.06" y="1631.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="44.0" y="1925" width="0.4" height="15.0" fill="rgb(212,44,15)" rx="2" ry="2" />
<text  x="47.01" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="534.2" y="1973" width="0.4" height="15.0" fill="rgb(249,190,36)" rx="2" ry="2" />
<text  x="537.18" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="400.1" y="1829" width="0.2" height="15.0" fill="rgb(229,86,43)" rx="2" ry="2" />
<text  x="403.13" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="168.7" y="1941" width="0.2" height="15.0" fill="rgb(212,59,51)" rx="2" ry="2" />
<text  x="171.65" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="256.5" y="1781" width="0.2" height="15.0" fill="rgb(209,15,0)" rx="2" ry="2" />
<text  x="259.48" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="267.5" y="1749" width="0.2" height="15.0" fill="rgb(225,133,44)" rx="2" ry="2" />
<text  x="270.49" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="1148.4" y="1973" width="0.4" height="15.0" fill="rgb(237,145,26)" rx="2" ry="2" />
<text  x="1151.39" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="686.6" y="1957" width="0.2" height="15.0" fill="rgb(237,137,29)" rx="2" ry="2" />
<text  x="689.63" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1067.8" y="1701" width="0.4" height="15.0" fill="rgb(223,223,20)" rx="2" ry="2" />
<text  x="1070.76" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="523.0" y="1765" width="0.2" height="15.0" fill="rgb(244,193,19)" rx="2" ry="2" />
<text  x="525.97" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="936.3" y="1701" width="0.2" height="15.0" fill="rgb(208,1,32)" rx="2" ry="2" />
<text  x="939.31" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="146.2" y="1909" width="0.2" height="15.0" fill="rgb(252,115,22)" rx="2" ry="2" />
<text  x="149.25" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="943.5" y="1909" width="0.2" height="15.0" fill="rgb(242,175,44)" rx="2" ry="2" />
<text  x="946.52" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="416.1" y="1829" width="0.2" height="15.0" fill="rgb(226,4,18)" rx="2" ry="2" />
<text  x="419.14" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (7 samples, 0.12%)</title><rect x="1145.6" y="2037" width="1.4" height="15.0" fill="rgb(207,10,20)" rx="2" ry="2" />
<text  x="1148.58" y="2047.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1131.4" y="2005" width="0.8" height="15.0" fill="rgb(251,191,45)" rx="2" ry="2" />
<text  x="1134.38" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.24%)</title><rect x="285.3" y="1685" width="2.8" height="15.0" fill="rgb(228,1,3)" rx="2" ry="2" />
<text  x="288.29" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1005.1" y="1909" width="0.2" height="15.0" fill="rgb(236,204,24)" rx="2" ry="2" />
<text  x="1008.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_mss (36 samples, 0.61%)</title><rect x="325.9" y="1877" width="7.2" height="15.0" fill="rgb(209,62,20)" rx="2" ry="2" />
<text  x="328.91" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="221.1" y="1813" width="0.2" height="15.0" fill="rgb(229,78,34)" rx="2" ry="2" />
<text  x="224.07" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="712.4" y="1605" width="0.2" height="15.0" fill="rgb(221,84,1)" rx="2" ry="2" />
<text  x="715.44" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1110.0" y="1845" width="0.2" height="15.0" fill="rgb(245,100,24)" rx="2" ry="2" />
<text  x="1112.97" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.19%)</title><rect x="56.4" y="1941" width="2.2" height="15.0" fill="rgb(218,98,54)" rx="2" ry="2" />
<text  x="59.42" y="1951.5" ></text>
</g>
<g >
<title>__memchr_avx2 (8 samples, 0.14%)</title><rect x="344.5" y="2037" width="1.6" height="15.0" fill="rgb(213,61,46)" rx="2" ry="2" />
<text  x="347.51" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="324.1" y="1829" width="0.4" height="15.0" fill="rgb(207,79,5)" rx="2" ry="2" />
<text  x="327.11" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="198.7" y="2005" width="0.2" height="15.0" fill="rgb(245,152,11)" rx="2" ry="2" />
<text  x="201.66" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="482.8" y="1797" width="0.6" height="15.0" fill="rgb(235,134,10)" rx="2" ry="2" />
<text  x="485.76" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (10 samples, 0.17%)</title><rect x="852.7" y="1925" width="2.0" height="15.0" fill="rgb(227,63,49)" rx="2" ry="2" />
<text  x="855.69" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="71.4" y="1925" width="0.2" height="15.0" fill="rgb(209,211,21)" rx="2" ry="2" />
<text  x="74.42" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeoutExpired (1 samples, 0.02%)</title><rect x="18.4" y="2021" width="0.2" height="15.0" fill="rgb(224,9,25)" rx="2" ry="2" />
<text  x="21.40" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="787.9" y="1317" width="0.2" height="15.0" fill="rgb(240,180,4)" rx="2" ry="2" />
<text  x="790.86" y="1327.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="610.6" y="1589" width="0.2" height="15.0" fill="rgb(226,195,46)" rx="2" ry="2" />
<text  x="613.60" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="75.2" y="1957" width="0.2" height="15.0" fill="rgb(236,223,36)" rx="2" ry="2" />
<text  x="78.22" y="1967.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="858.5" y="1669" width="0.2" height="15.0" fill="rgb(234,184,27)" rx="2" ry="2" />
<text  x="861.49" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="856.3" y="1877" width="0.2" height="15.0" fill="rgb(235,133,19)" rx="2" ry="2" />
<text  x="859.29" y="1887.5" ></text>
</g>
<g >
<title>__alloc_fd (3 samples, 0.05%)</title><rect x="360.9" y="1941" width="0.6" height="15.0" fill="rgb(237,156,37)" rx="2" ry="2" />
<text  x="363.92" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="85.2" y="1893" width="0.2" height="15.0" fill="rgb(254,158,2)" rx="2" ry="2" />
<text  x="88.23" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="680.0" y="1765" width="0.2" height="15.0" fill="rgb(209,90,29)" rx="2" ry="2" />
<text  x="683.03" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="565.6" y="1829" width="0.2" height="15.0" fill="rgb(213,163,47)" rx="2" ry="2" />
<text  x="568.59" y="1839.5" ></text>
</g>
<g >
<title>__fput (464 samples, 7.87%)</title><rect x="737.6" y="1813" width="92.9" height="15.0" fill="rgb(234,38,7)" rx="2" ry="2" />
<text  x="740.65" y="1823.5" >__fput</text>
</g>
<g >
<title>do_syscall_64 (50 samples, 0.85%)</title><rect x="670.6" y="1909" width="10.0" height="15.0" fill="rgb(248,121,34)" rx="2" ry="2" />
<text  x="673.62" y="1919.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="623.4" y="1493" width="0.2" height="15.0" fill="rgb(245,13,32)" rx="2" ry="2" />
<text  x="626.41" y="1503.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="569.0" y="1957" width="0.4" height="15.0" fill="rgb(216,26,54)" rx="2" ry="2" />
<text  x="571.99" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="853.3" y="1669" width="0.2" height="15.0" fill="rgb(248,221,23)" rx="2" ry="2" />
<text  x="856.29" y="1679.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="1091.6" y="1621" width="0.2" height="15.0" fill="rgb(246,217,15)" rx="2" ry="2" />
<text  x="1094.57" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncReader::AsyncReader (1 samples, 0.02%)</title><rect x="551.4" y="2005" width="0.2" height="15.0" fill="rgb(206,146,4)" rx="2" ry="2" />
<text  x="554.38" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1445" width="0.2" height="15.0" fill="rgb(230,121,52)" rx="2" ry="2" />
<text  x="828.08" y="1455.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="10.2" y="1989" width="0.8" height="15.0" fill="rgb(254,123,19)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(239,190,3)" rx="2" ry="2" />
<text  x="1192.20" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="53.0" y="1797" width="0.2" height="15.0" fill="rgb(219,62,4)" rx="2" ry="2" />
<text  x="56.01" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="630.2" y="2005" width="0.2" height="15.0" fill="rgb(227,183,44)" rx="2" ry="2" />
<text  x="633.21" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="483.6" y="1701" width="0.2" height="15.0" fill="rgb(249,134,32)" rx="2" ry="2" />
<text  x="486.56" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (1 samples, 0.02%)</title><rect x="628.8" y="2021" width="0.2" height="15.0" fill="rgb(229,82,20)" rx="2" ry="2" />
<text  x="631.81" y="2031.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="964.7" y="2005" width="0.4" height="15.0" fill="rgb(229,48,39)" rx="2" ry="2" />
<text  x="967.72" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="273.1" y="1845" width="0.2" height="15.0" fill="rgb(233,34,12)" rx="2" ry="2" />
<text  x="276.09" y="1855.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="519.0" y="1605" width="0.2" height="15.0" fill="rgb(223,7,1)" rx="2" ry="2" />
<text  x="521.97" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (8 samples, 0.14%)</title><rect x="48.2" y="1925" width="1.6" height="15.0" fill="rgb(223,21,12)" rx="2" ry="2" />
<text  x="51.21" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="267.5" y="1653" width="0.2" height="15.0" fill="rgb(245,91,2)" rx="2" ry="2" />
<text  x="270.49" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="273.1" y="1637" width="0.2" height="15.0" fill="rgb(224,49,8)" rx="2" ry="2" />
<text  x="276.09" y="1647.5" ></text>
</g>
<g >
<title>security_inode_free (1 samples, 0.02%)</title><rect x="749.1" y="1685" width="0.2" height="15.0" fill="rgb(225,130,25)" rx="2" ry="2" />
<text  x="752.05" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="980.7" y="1685" width="0.2" height="15.0" fill="rgb(230,84,6)" rx="2" ry="2" />
<text  x="983.73" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="863.7" y="1909" width="0.2" height="15.0" fill="rgb(252,121,44)" rx="2" ry="2" />
<text  x="866.69" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (20 samples, 0.34%)</title><rect x="852.5" y="1941" width="4.0" height="15.0" fill="rgb(225,228,19)" rx="2" ry="2" />
<text  x="855.49" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="85.0" y="1973" width="0.2" height="15.0" fill="rgb(238,219,8)" rx="2" ry="2" />
<text  x="88.03" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="153.2" y="1893" width="0.4" height="15.0" fill="rgb(211,90,26)" rx="2" ry="2" />
<text  x="156.25" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="483.2" y="1605" width="0.2" height="15.0" fill="rgb(230,53,37)" rx="2" ry="2" />
<text  x="486.16" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="267.5" y="1669" width="0.2" height="15.0" fill="rgb(225,120,39)" rx="2" ry="2" />
<text  x="270.49" y="1679.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (4 samples, 0.07%)</title><rect x="394.7" y="1925" width="0.8" height="15.0" fill="rgb(244,7,2)" rx="2" ry="2" />
<text  x="397.73" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="929.3" y="1861" width="0.2" height="15.0" fill="rgb(244,62,2)" rx="2" ry="2" />
<text  x="932.31" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1179.0" y="2005" width="0.4" height="15.0" fill="rgb(216,204,19)" rx="2" ry="2" />
<text  x="1182.00" y="2015.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="346.3" y="2037" width="0.2" height="15.0" fill="rgb(222,21,39)" rx="2" ry="2" />
<text  x="349.31" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="1146.0" y="1989" width="0.6" height="15.0" fill="rgb(212,57,49)" rx="2" ry="2" />
<text  x="1148.99" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (4 samples, 0.07%)</title><rect x="663.4" y="1989" width="0.8" height="15.0" fill="rgb(238,27,23)" rx="2" ry="2" />
<text  x="666.42" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="503.8" y="1909" width="0.4" height="15.0" fill="rgb(252,93,44)" rx="2" ry="2" />
<text  x="506.77" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="829.9" y="1653" width="0.2" height="15.0" fill="rgb(206,51,23)" rx="2" ry="2" />
<text  x="832.88" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="249.1" y="1717" width="0.2" height="15.0" fill="rgb(243,194,45)" rx="2" ry="2" />
<text  x="252.08" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="844.5" y="1925" width="0.2" height="15.0" fill="rgb(232,192,33)" rx="2" ry="2" />
<text  x="847.48" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (22 samples, 0.37%)</title><rect x="919.5" y="1941" width="4.4" height="15.0" fill="rgb(235,0,19)" rx="2" ry="2" />
<text  x="922.51" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="535.8" y="1893" width="0.2" height="15.0" fill="rgb(206,58,40)" rx="2" ry="2" />
<text  x="538.78" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="79.4" y="1781" width="0.2" height="15.0" fill="rgb(230,107,0)" rx="2" ry="2" />
<text  x="82.42" y="1791.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="323.1" y="1813" width="0.2" height="15.0" fill="rgb(241,157,25)" rx="2" ry="2" />
<text  x="326.11" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="157.2" y="1941" width="0.2" height="15.0" fill="rgb(228,46,54)" rx="2" ry="2" />
<text  x="160.25" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="1179.8" y="2053" width="0.2" height="15.0" fill="rgb(239,135,11)" rx="2" ry="2" />
<text  x="1182.80" y="2063.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="529.4" y="1941" width="0.4" height="15.0" fill="rgb(231,4,13)" rx="2" ry="2" />
<text  x="532.38" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="141.8" y="1861" width="0.2" height="15.0" fill="rgb(246,78,48)" rx="2" ry="2" />
<text  x="144.84" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="118.6" y="437" width="0.2" height="15.0" fill="rgb(224,144,7)" rx="2" ry="2" />
<text  x="121.64" y="447.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="340.9" y="1989" width="0.2" height="15.0" fill="rgb(209,21,17)" rx="2" ry="2" />
<text  x="343.91" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (24 samples, 0.41%)</title><rect x="811.7" y="1685" width="4.8" height="15.0" fill="rgb(209,137,50)" rx="2" ry="2" />
<text  x="814.67" y="1695.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="312.9" y="1749" width="0.2" height="15.0" fill="rgb(248,88,3)" rx="2" ry="2" />
<text  x="315.90" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="886.1" y="1877" width="0.2" height="15.0" fill="rgb(253,227,0)" rx="2" ry="2" />
<text  x="889.10" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="523.0" y="1541" width="0.2" height="15.0" fill="rgb(226,144,48)" rx="2" ry="2" />
<text  x="525.97" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="483.2" y="1589" width="0.2" height="15.0" fill="rgb(223,46,43)" rx="2" ry="2" />
<text  x="486.16" y="1599.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="914.9" y="1685" width="0.2" height="15.0" fill="rgb(254,182,45)" rx="2" ry="2" />
<text  x="917.91" y="1695.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1182.6" y="2053" width="0.2" height="15.0" fill="rgb(218,111,12)" rx="2" ry="2" />
<text  x="1185.60" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (628 samples, 10.65%)</title><rect x="723.4" y="1941" width="125.7" height="15.0" fill="rgb(230,146,40)" rx="2" ry="2" />
<text  x="726.44" y="1951.5" >folly::AsyncSoc..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="942.9" y="1925" width="0.2" height="15.0" fill="rgb(207,88,20)" rx="2" ry="2" />
<text  x="945.92" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="843.7" y="1813" width="0.2" height="15.0" fill="rgb(230,168,43)" rx="2" ry="2" />
<text  x="846.68" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (543 samples, 9.21%)</title><rect x="726.2" y="1877" width="108.7" height="15.0" fill="rgb(243,110,26)" rx="2" ry="2" />
<text  x="729.24" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="935.3" y="1829" width="0.2" height="15.0" fill="rgb(254,42,30)" rx="2" ry="2" />
<text  x="938.31" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.2" y="1893" width="0.2" height="15.0" fill="rgb(243,8,8)" rx="2" ry="2" />
<text  x="65.22" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="588.2" y="1941" width="0.2" height="15.0" fill="rgb(243,176,6)" rx="2" ry="2" />
<text  x="591.20" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.6" y="1877" width="0.2" height="15.0" fill="rgb(235,16,9)" rx="2" ry="2" />
<text  x="77.62" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1149.8" y="1957" width="0.2" height="15.0" fill="rgb(240,80,48)" rx="2" ry="2" />
<text  x="1152.79" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1103.0" y="1829" width="0.2" height="15.0" fill="rgb(244,70,53)" rx="2" ry="2" />
<text  x="1105.97" y="1839.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="485.6" y="1941" width="1.2" height="15.0" fill="rgb(226,185,2)" rx="2" ry="2" />
<text  x="488.56" y="1951.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="829.9" y="1493" width="0.2" height="15.0" fill="rgb(234,190,43)" rx="2" ry="2" />
<text  x="832.88" y="1503.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="1181.6" y="2053" width="1.0" height="15.0" fill="rgb(233,118,23)" rx="2" ry="2" />
<text  x="1184.60" y="2063.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 0.10%)</title><rect x="243.3" y="1909" width="1.2" height="15.0" fill="rgb(220,151,48)" rx="2" ry="2" />
<text  x="246.28" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="969.1" y="1637" width="0.2" height="15.0" fill="rgb(245,187,51)" rx="2" ry="2" />
<text  x="972.13" y="1647.5" ></text>
</g>
<g >
<title>lock_sock_nested (17 samples, 0.29%)</title><rect x="383.9" y="1941" width="3.4" height="15.0" fill="rgb(218,35,49)" rx="2" ry="2" />
<text  x="386.93" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="511.6" y="1925" width="0.2" height="15.0" fill="rgb(227,136,35)" rx="2" ry="2" />
<text  x="514.57" y="1935.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.8" y="1877" width="0.2" height="15.0" fill="rgb(243,107,36)" rx="2" ry="2" />
<text  x="125.84" y="1887.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (6 samples, 0.10%)</title><rect x="763.3" y="1717" width="1.2" height="15.0" fill="rgb(208,54,2)" rx="2" ry="2" />
<text  x="766.26" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="834.1" y="1669" width="0.2" height="15.0" fill="rgb(248,61,2)" rx="2" ry="2" />
<text  x="837.08" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="271.9" y="1621" width="0.2" height="15.0" fill="rgb(240,123,30)" rx="2" ry="2" />
<text  x="274.89" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1125" width="15.6" height="15.0" fill="rgb(227,66,5)" rx="2" ry="2" />
<text  x="106.43" y="1135.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="118.6" y="85" width="0.2" height="15.0" fill="rgb(237,209,10)" rx="2" ry="2" />
<text  x="121.64" y="95.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="886.1" y="1957" width="0.2" height="15.0" fill="rgb(207,150,22)" rx="2" ry="2" />
<text  x="889.10" y="1967.5" ></text>
</g>
<g >
<title>security_inode_alloc (2 samples, 0.03%)</title><rect x="402.3" y="1893" width="0.4" height="15.0" fill="rgb(233,163,5)" rx="2" ry="2" />
<text  x="405.33" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="531.6" y="1957" width="0.4" height="15.0" fill="rgb(245,97,31)" rx="2" ry="2" />
<text  x="534.58" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1253" width="16.0" height="15.0" fill="rgb(229,105,10)" rx="2" ry="2" />
<text  x="106.23" y="1263.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1126.2" y="1861" width="0.2" height="15.0" fill="rgb(205,81,33)" rx="2" ry="2" />
<text  x="1129.18" y="1871.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1138.0" y="2053" width="0.4" height="15.0" fill="rgb(253,169,5)" rx="2" ry="2" />
<text  x="1140.98" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="883.9" y="1893" width="0.4" height="15.0" fill="rgb(223,227,10)" rx="2" ry="2" />
<text  x="886.90" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="860.1" y="1877" width="0.2" height="15.0" fill="rgb(217,108,0)" rx="2" ry="2" />
<text  x="863.09" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="590.4" y="1669" width="0.2" height="15.0" fill="rgb(218,17,23)" rx="2" ry="2" />
<text  x="593.40" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="835.7" y="1717" width="0.2" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="838.68" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (1 samples, 0.02%)</title><rect x="224.1" y="1973" width="0.2" height="15.0" fill="rgb(241,192,51)" rx="2" ry="2" />
<text  x="227.07" y="1983.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="213.7" y="1877" width="0.4" height="15.0" fill="rgb(249,123,20)" rx="2" ry="2" />
<text  x="216.67" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="328.5" y="1845" width="0.4" height="15.0" fill="rgb(249,0,15)" rx="2" ry="2" />
<text  x="331.51" y="1855.5" ></text>
</g>
<g >
<title>do_fcntl (1 samples, 0.02%)</title><rect x="577.8" y="1925" width="0.2" height="15.0" fill="rgb(236,13,54)" rx="2" ry="2" />
<text  x="580.79" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (7 samples, 0.12%)</title><rect x="666.6" y="1989" width="1.4" height="15.0" fill="rgb(220,98,12)" rx="2" ry="2" />
<text  x="669.62" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="842.1" y="1749" width="0.8" height="15.0" fill="rgb(247,162,12)" rx="2" ry="2" />
<text  x="845.08" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="977.7" y="1957" width="0.2" height="15.0" fill="rgb(217,48,46)" rx="2" ry="2" />
<text  x="980.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (3 samples, 0.05%)</title><rect x="174.7" y="2021" width="0.6" height="15.0" fill="rgb(249,47,48)" rx="2" ry="2" />
<text  x="177.66" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="421.1" y="1845" width="0.8" height="15.0" fill="rgb(227,113,41)" rx="2" ry="2" />
<text  x="424.14" y="1855.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="1120.2" y="1397" width="0.2" height="15.0" fill="rgb(219,152,44)" rx="2" ry="2" />
<text  x="1123.18" y="1407.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="242.7" y="1925" width="0.2" height="15.0" fill="rgb(226,25,41)" rx="2" ry="2" />
<text  x="245.68" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="427.9" y="1925" width="0.6" height="15.0" fill="rgb(225,176,37)" rx="2" ry="2" />
<text  x="430.94" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.25%)</title><rect x="622.6" y="1893" width="3.0" height="15.0" fill="rgb(213,136,22)" rx="2" ry="2" />
<text  x="625.61" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="259.5" y="1765" width="0.2" height="15.0" fill="rgb(225,206,38)" rx="2" ry="2" />
<text  x="262.48" y="1775.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="583.6" y="2005" width="0.2" height="15.0" fill="rgb(222,137,51)" rx="2" ry="2" />
<text  x="586.59" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="890.1" y="1749" width="0.2" height="15.0" fill="rgb(235,91,50)" rx="2" ry="2" />
<text  x="893.10" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="525.8" y="2021" width="0.2" height="15.0" fill="rgb(215,28,5)" rx="2" ry="2" />
<text  x="528.77" y="2031.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="68.6" y="1845" width="0.2" height="15.0" fill="rgb(232,139,5)" rx="2" ry="2" />
<text  x="71.62" y="1855.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="84.8" y="1685" width="0.2" height="15.0" fill="rgb(248,116,26)" rx="2" ry="2" />
<text  x="87.83" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="25.6" y="1989" width="0.2" height="15.0" fill="rgb(230,0,16)" rx="2" ry="2" />
<text  x="28.61" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="575.8" y="1765" width="0.4" height="15.0" fill="rgb(211,220,35)" rx="2" ry="2" />
<text  x="578.79" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1016.1" y="1989" width="0.2" height="15.0" fill="rgb(253,225,29)" rx="2" ry="2" />
<text  x="1019.14" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="648.4" y="1605" width="0.2" height="15.0" fill="rgb(248,44,35)" rx="2" ry="2" />
<text  x="651.42" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="71.4" y="1637" width="0.2" height="15.0" fill="rgb(238,54,35)" rx="2" ry="2" />
<text  x="74.42" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="428.5" y="1717" width="0.2" height="15.0" fill="rgb(221,25,5)" rx="2" ry="2" />
<text  x="431.54" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1381" width="16.8" height="15.0" fill="rgb(225,26,33)" rx="2" ry="2" />
<text  x="106.03" y="1391.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="567.6" y="1829" width="0.2" height="15.0" fill="rgb(244,137,48)" rx="2" ry="2" />
<text  x="570.59" y="1839.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="648.4" y="1525" width="0.2" height="15.0" fill="rgb(218,120,51)" rx="2" ry="2" />
<text  x="651.42" y="1535.5" ></text>
</g>
<g >
<title>skb_release_all (89 samples, 1.51%)</title><rect x="1068.8" y="1909" width="17.8" height="15.0" fill="rgb(222,177,52)" rx="2" ry="2" />
<text  x="1071.76" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1125.6" y="1829" width="0.2" height="15.0" fill="rgb(236,105,6)" rx="2" ry="2" />
<text  x="1128.58" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="267.1" y="1685" width="0.2" height="15.0" fill="rgb(242,14,26)" rx="2" ry="2" />
<text  x="270.09" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="483.6" y="1653" width="0.2" height="15.0" fill="rgb(235,202,9)" rx="2" ry="2" />
<text  x="486.56" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="118.6" y="53" width="0.2" height="15.0" fill="rgb(211,181,14)" rx="2" ry="2" />
<text  x="121.64" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="80.0" y="1813" width="0.2" height="15.0" fill="rgb(214,228,29)" rx="2" ry="2" />
<text  x="83.02" y="1823.5" ></text>
</g>
<g >
<title>__libc_recv (4 samples, 0.07%)</title><rect x="960.3" y="1973" width="0.8" height="15.0" fill="rgb(250,159,2)" rx="2" ry="2" />
<text  x="963.32" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="328.5" y="1749" width="0.4" height="15.0" fill="rgb(237,7,24)" rx="2" ry="2" />
<text  x="331.51" y="1759.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="195.1" y="2021" width="0.2" height="15.0" fill="rgb(240,140,7)" rx="2" ry="2" />
<text  x="198.06" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="931.7" y="1909" width="0.2" height="15.0" fill="rgb(228,21,6)" rx="2" ry="2" />
<text  x="934.71" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="843.7" y="1749" width="0.2" height="15.0" fill="rgb(242,31,11)" rx="2" ry="2" />
<text  x="846.68" y="1759.5" ></text>
</g>
<g >
<title>tcp_recvmsg (3 samples, 0.05%)</title><rect x="1125.8" y="1957" width="0.6" height="15.0" fill="rgb(219,189,46)" rx="2" ry="2" />
<text  x="1128.78" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="517" width="15.2" height="15.0" fill="rgb(214,201,53)" rx="2" ry="2" />
<text  x="106.43" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (7 samples, 0.12%)</title><rect x="590.8" y="2005" width="1.4" height="15.0" fill="rgb(230,221,19)" rx="2" ry="2" />
<text  x="593.80" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (3 samples, 0.05%)</title><rect x="545.0" y="1989" width="0.6" height="15.0" fill="rgb(228,25,4)" rx="2" ry="2" />
<text  x="547.98" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (42 samples, 0.71%)</title><rect x="618.4" y="1957" width="8.4" height="15.0" fill="rgb(238,130,42)" rx="2" ry="2" />
<text  x="621.41" y="1967.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (9 samples, 0.15%)</title><rect x="379.7" y="1893" width="1.8" height="15.0" fill="rgb(211,81,3)" rx="2" ry="2" />
<text  x="382.73" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="942.9" y="1973" width="0.2" height="15.0" fill="rgb(237,19,4)" rx="2" ry="2" />
<text  x="945.92" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1413" width="16.8" height="15.0" fill="rgb(208,228,5)" rx="2" ry="2" />
<text  x="106.03" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="400.1" y="1781" width="0.2" height="15.0" fill="rgb(242,213,1)" rx="2" ry="2" />
<text  x="403.13" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="219.9" y="1797" width="0.4" height="15.0" fill="rgb(220,219,51)" rx="2" ry="2" />
<text  x="222.87" y="1807.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="835.7" y="1621" width="0.2" height="15.0" fill="rgb(221,214,25)" rx="2" ry="2" />
<text  x="838.68" y="1631.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="530.6" y="1957" width="0.2" height="15.0" fill="rgb(254,215,20)" rx="2" ry="2" />
<text  x="533.58" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="134.8" y="1957" width="0.2" height="15.0" fill="rgb(218,64,44)" rx="2" ry="2" />
<text  x="137.84" y="1967.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="565.4" y="1989" width="0.2" height="15.0" fill="rgb(212,68,2)" rx="2" ry="2" />
<text  x="568.39" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="858.5" y="1813" width="0.2" height="15.0" fill="rgb(233,163,50)" rx="2" ry="2" />
<text  x="861.49" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="854.1" y="1877" width="0.6" height="15.0" fill="rgb(221,50,43)" rx="2" ry="2" />
<text  x="857.09" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.9" y="1941" width="0.2" height="15.0" fill="rgb(244,146,45)" rx="2" ry="2" />
<text  x="160.85" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.6" y="517" width="0.2" height="15.0" fill="rgb(235,168,17)" rx="2" ry="2" />
<text  x="121.64" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="259.5" y="1861" width="0.2" height="15.0" fill="rgb(240,66,25)" rx="2" ry="2" />
<text  x="262.48" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1091.6" y="1669" width="0.2" height="15.0" fill="rgb(225,53,27)" rx="2" ry="2" />
<text  x="1094.57" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="992.7" y="2005" width="0.2" height="15.0" fill="rgb(209,112,2)" rx="2" ry="2" />
<text  x="995.73" y="2015.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="219.5" y="1829" width="0.8" height="15.0" fill="rgb(244,213,24)" rx="2" ry="2" />
<text  x="222.47" y="1839.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="74.6" y="1717" width="0.2" height="15.0" fill="rgb(230,51,37)" rx="2" ry="2" />
<text  x="77.62" y="1727.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="340.9" y="1973" width="0.2" height="15.0" fill="rgb(211,71,13)" rx="2" ry="2" />
<text  x="343.91" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (2 samples, 0.03%)</title><rect x="714.8" y="2037" width="0.4" height="15.0" fill="rgb(207,38,20)" rx="2" ry="2" />
<text  x="717.84" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="969.1" y="1861" width="0.4" height="15.0" fill="rgb(209,61,0)" rx="2" ry="2" />
<text  x="972.13" y="1871.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="860.1" y="1957" width="0.2" height="15.0" fill="rgb(205,15,34)" rx="2" ry="2" />
<text  x="863.09" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (100 samples, 1.70%)</title><rect x="102.8" y="1877" width="20.0" height="15.0" fill="rgb(208,92,2)" rx="2" ry="2" />
<text  x="105.83" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="630.0" y="1957" width="0.2" height="15.0" fill="rgb(213,173,28)" rx="2" ry="2" />
<text  x="633.01" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (7 samples, 0.12%)</title><rect x="29.4" y="1989" width="1.4" height="15.0" fill="rgb(254,111,27)" rx="2" ry="2" />
<text  x="32.41" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1120.2" y="1813" width="0.2" height="15.0" fill="rgb(210,172,32)" rx="2" ry="2" />
<text  x="1123.18" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="954.9" y="1957" width="0.2" height="15.0" fill="rgb(234,15,11)" rx="2" ry="2" />
<text  x="957.92" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (5 samples, 0.08%)</title><rect x="143.8" y="1925" width="1.0" height="15.0" fill="rgb(220,161,41)" rx="2" ry="2" />
<text  x="146.85" y="1935.5" ></text>
</g>
<g >
<title>sys_setsockopt (57 samples, 0.97%)</title><rect x="695.8" y="1941" width="11.4" height="15.0" fill="rgb(228,183,24)" rx="2" ry="2" />
<text  x="698.83" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (7 samples, 0.12%)</title><rect x="539.0" y="1957" width="1.4" height="15.0" fill="rgb(244,116,2)" rx="2" ry="2" />
<text  x="541.98" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (10 samples, 0.17%)</title><rect x="171.7" y="1989" width="2.0" height="15.0" fill="rgb(252,205,1)" rx="2" ry="2" />
<text  x="174.65" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1139.0" y="1813" width="0.2" height="15.0" fill="rgb(232,93,35)" rx="2" ry="2" />
<text  x="1141.98" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="843.5" y="1765" width="0.2" height="15.0" fill="rgb(253,27,47)" rx="2" ry="2" />
<text  x="846.48" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1009.1" y="1941" width="0.2" height="15.0" fill="rgb(244,129,39)" rx="2" ry="2" />
<text  x="1012.14" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="928.9" y="1893" width="0.6" height="15.0" fill="rgb(234,72,40)" rx="2" ry="2" />
<text  x="931.91" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="120.4" y="1301" width="0.2" height="15.0" fill="rgb(233,190,50)" rx="2" ry="2" />
<text  x="123.44" y="1311.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="758.9" y="1701" width="0.2" height="15.0" fill="rgb(242,129,42)" rx="2" ry="2" />
<text  x="761.85" y="1711.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="147.8" y="1861" width="0.2" height="15.0" fill="rgb(206,109,6)" rx="2" ry="2" />
<text  x="150.85" y="1871.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="856.3" y="1829" width="0.2" height="15.0" fill="rgb(252,202,3)" rx="2" ry="2" />
<text  x="859.29" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="163.9" y="2005" width="0.2" height="15.0" fill="rgb(210,56,26)" rx="2" ry="2" />
<text  x="166.85" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="61.6" y="1893" width="0.6" height="15.0" fill="rgb(224,9,6)" rx="2" ry="2" />
<text  x="64.62" y="1903.5" ></text>
</g>
<g >
<title>vfprintf (3 samples, 0.05%)</title><rect x="1138.6" y="2037" width="0.6" height="15.0" fill="rgb(223,150,29)" rx="2" ry="2" />
<text  x="1141.58" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (5 samples, 0.08%)</title><rect x="954.3" y="2005" width="1.0" height="15.0" fill="rgb(208,39,43)" rx="2" ry="2" />
<text  x="957.32" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (905 samples, 15.34%)</title><rect x="715.4" y="2021" width="181.1" height="15.0" fill="rgb(215,211,5)" rx="2" ry="2" />
<text  x="718.44" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="518.8" y="1605" width="0.2" height="15.0" fill="rgb(251,23,1)" rx="2" ry="2" />
<text  x="521.77" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1139.0" y="1989" width="0.2" height="15.0" fill="rgb(244,116,19)" rx="2" ry="2" />
<text  x="1141.98" y="1999.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (6 samples, 0.10%)</title><rect x="856.9" y="1941" width="1.2" height="15.0" fill="rgb(237,44,11)" rx="2" ry="2" />
<text  x="859.89" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1126.2" y="1925" width="0.2" height="15.0" fill="rgb(224,182,17)" rx="2" ry="2" />
<text  x="1129.18" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="752.5" y="1445" width="0.2" height="15.0" fill="rgb(239,144,5)" rx="2" ry="2" />
<text  x="755.45" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="531.8" y="1797" width="0.2" height="15.0" fill="rgb(223,185,31)" rx="2" ry="2" />
<text  x="534.78" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="137.6" y="2005" width="0.2" height="15.0" fill="rgb(209,98,52)" rx="2" ry="2" />
<text  x="140.64" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="30.2" y="1973" width="0.4" height="15.0" fill="rgb(229,132,17)" rx="2" ry="2" />
<text  x="33.21" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="244.5" y="1861" width="0.2" height="15.0" fill="rgb(242,79,20)" rx="2" ry="2" />
<text  x="247.48" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="923.9" y="1893" width="0.2" height="15.0" fill="rgb(226,219,22)" rx="2" ry="2" />
<text  x="926.91" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="267.5" y="1829" width="0.4" height="15.0" fill="rgb(206,225,24)" rx="2" ry="2" />
<text  x="270.49" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="289.5" y="1701" width="0.4" height="15.0" fill="rgb(208,229,12)" rx="2" ry="2" />
<text  x="292.49" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="140.4" y="1909" width="0.2" height="15.0" fill="rgb(209,226,51)" rx="2" ry="2" />
<text  x="143.44" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="588.2" y="1861" width="0.2" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="591.20" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="523.0" y="1845" width="0.2" height="15.0" fill="rgb(237,112,26)" rx="2" ry="2" />
<text  x="525.97" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="950.5" y="1989" width="0.2" height="15.0" fill="rgb(247,196,23)" rx="2" ry="2" />
<text  x="953.52" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="545.6" y="2021" width="0.2" height="15.0" fill="rgb(240,202,1)" rx="2" ry="2" />
<text  x="548.58" y="2031.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.02%)</title><rect x="827.3" y="1765" width="0.2" height="15.0" fill="rgb(251,144,38)" rx="2" ry="2" />
<text  x="830.28" y="1775.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="58.0" y="1861" width="0.2" height="15.0" fill="rgb(222,100,25)" rx="2" ry="2" />
<text  x="61.02" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="611.4" y="1829" width="0.2" height="15.0" fill="rgb(223,44,19)" rx="2" ry="2" />
<text  x="614.40" y="1839.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="407.5" y="1877" width="0.2" height="15.0" fill="rgb(229,6,46)" rx="2" ry="2" />
<text  x="410.53" y="1887.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="707.4" y="1621" width="0.2" height="15.0" fill="rgb(211,64,23)" rx="2" ry="2" />
<text  x="710.44" y="1631.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (7 samples, 0.12%)</title><rect x="566.2" y="1973" width="1.4" height="15.0" fill="rgb(238,211,7)" rx="2" ry="2" />
<text  x="569.19" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (105 samples, 1.78%)</title><rect x="870.1" y="2005" width="21.0" height="15.0" fill="rgb(250,153,4)" rx="2" ry="2" />
<text  x="873.09" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1067.8" y="1813" width="0.4" height="15.0" fill="rgb(247,87,41)" rx="2" ry="2" />
<text  x="1070.76" y="1823.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.0" y="1317" width="0.2" height="15.0" fill="rgb(238,176,25)" rx="2" ry="2" />
<text  x="106.03" y="1327.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="707.4" y="1573" width="0.2" height="15.0" fill="rgb(248,153,15)" rx="2" ry="2" />
<text  x="710.44" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="843.5" y="1845" width="0.2" height="15.0" fill="rgb(248,190,1)" rx="2" ry="2" />
<text  x="846.48" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="120.6" y="1669" width="0.2" height="15.0" fill="rgb(213,135,5)" rx="2" ry="2" />
<text  x="123.64" y="1679.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="932.5" y="1941" width="0.2" height="15.0" fill="rgb(241,148,52)" rx="2" ry="2" />
<text  x="935.51" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="336.7" y="1733" width="0.2" height="15.0" fill="rgb(251,44,54)" rx="2" ry="2" />
<text  x="339.71" y="1743.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="817.1" y="1653" width="0.2" height="15.0" fill="rgb(211,104,41)" rx="2" ry="2" />
<text  x="820.07" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="357.1" y="1877" width="0.4" height="15.0" fill="rgb(211,85,9)" rx="2" ry="2" />
<text  x="360.12" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="899.5" y="1989" width="0.6" height="15.0" fill="rgb(238,180,6)" rx="2" ry="2" />
<text  x="902.50" y="1999.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="590.4" y="1493" width="0.2" height="15.0" fill="rgb(236,9,19)" rx="2" ry="2" />
<text  x="593.40" y="1503.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1176.0" y="1941" width="0.2" height="15.0" fill="rgb(225,106,38)" rx="2" ry="2" />
<text  x="1179.00" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="328.9" y="1813" width="0.2" height="15.0" fill="rgb(222,107,26)" rx="2" ry="2" />
<text  x="331.91" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="913.1" y="2021" width="0.2" height="15.0" fill="rgb(211,29,0)" rx="2" ry="2" />
<text  x="916.11" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="208.7" y="1909" width="0.2" height="15.0" fill="rgb(242,33,29)" rx="2" ry="2" />
<text  x="211.67" y="1919.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="787.3" y="1317" width="0.2" height="15.0" fill="rgb(225,46,4)" rx="2" ry="2" />
<text  x="790.26" y="1327.5" ></text>
</g>
<g >
<title>netdev_pick_tx (9 samples, 0.15%)</title><rect x="289.9" y="1701" width="1.8" height="15.0" fill="rgb(232,215,28)" rx="2" ry="2" />
<text  x="292.89" y="1711.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="335.3" y="1877" width="0.6" height="15.0" fill="rgb(219,67,10)" rx="2" ry="2" />
<text  x="338.31" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="402.1" y="1637" width="0.2" height="15.0" fill="rgb(207,120,16)" rx="2" ry="2" />
<text  x="405.13" y="1647.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="765.3" y="1733" width="0.8" height="15.0" fill="rgb(212,123,10)" rx="2" ry="2" />
<text  x="768.26" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="919.7" y="1925" width="1.0" height="15.0" fill="rgb(242,192,39)" rx="2" ry="2" />
<text  x="922.71" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="108.0" y="37" width="0.4" height="15.0" fill="rgb(222,173,48)" rx="2" ry="2" />
<text  x="111.03" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="898.7" y="2005" width="0.4" height="15.0" fill="rgb(236,135,2)" rx="2" ry="2" />
<text  x="901.70" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="175.5" y="1957" width="0.2" height="15.0" fill="rgb(216,139,6)" rx="2" ry="2" />
<text  x="178.46" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="588.2" y="1781" width="0.2" height="15.0" fill="rgb(219,37,24)" rx="2" ry="2" />
<text  x="591.20" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="723.0" y="1941" width="0.4" height="15.0" fill="rgb(223,74,27)" rx="2" ry="2" />
<text  x="726.04" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="825.1" y="1477" width="0.2" height="15.0" fill="rgb(222,60,22)" rx="2" ry="2" />
<text  x="828.08" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="827.3" y="1621" width="0.2" height="15.0" fill="rgb(217,134,40)" rx="2" ry="2" />
<text  x="830.28" y="1631.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="525.6" y="1589" width="0.2" height="15.0" fill="rgb(253,186,52)" rx="2" ry="2" />
<text  x="528.57" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="312.7" y="1765" width="0.2" height="15.0" fill="rgb(207,77,13)" rx="2" ry="2" />
<text  x="315.70" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1142.0" y="1733" width="0.2" height="15.0" fill="rgb(236,6,15)" rx="2" ry="2" />
<text  x="1144.98" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="114.6" y="53" width="0.2" height="15.0" fill="rgb(224,122,35)" rx="2" ry="2" />
<text  x="117.64" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="248.5" y="1877" width="0.2" height="15.0" fill="rgb(217,90,28)" rx="2" ry="2" />
<text  x="251.48" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="567.6" y="1909" width="0.2" height="15.0" fill="rgb(238,66,5)" rx="2" ry="2" />
<text  x="570.59" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="1125.6" y="1605" width="0.2" height="15.0" fill="rgb(213,53,17)" rx="2" ry="2" />
<text  x="1128.58" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1109" width="15.6" height="15.0" fill="rgb(241,154,20)" rx="2" ry="2" />
<text  x="106.43" y="1119.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1189.0" y="1557" width="0.2" height="15.0" fill="rgb(251,41,39)" rx="2" ry="2" />
<text  x="1192.00" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="829.9" y="1573" width="0.2" height="15.0" fill="rgb(208,205,31)" rx="2" ry="2" />
<text  x="832.88" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="933.7" y="1557" width="0.2" height="15.0" fill="rgb(228,149,26)" rx="2" ry="2" />
<text  x="936.71" y="1567.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="885.5" y="1925" width="0.2" height="15.0" fill="rgb(206,160,20)" rx="2" ry="2" />
<text  x="888.50" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="165.9" y="2021" width="0.2" height="15.0" fill="rgb(205,139,30)" rx="2" ry="2" />
<text  x="168.85" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (93 samples, 1.58%)</title><rect x="596.6" y="1957" width="18.6" height="15.0" fill="rgb(207,96,48)" rx="2" ry="2" />
<text  x="599.60" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="118.0" y="101" width="0.2" height="15.0" fill="rgb(244,214,44)" rx="2" ry="2" />
<text  x="121.04" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="273.1" y="1685" width="0.2" height="15.0" fill="rgb(253,60,21)" rx="2" ry="2" />
<text  x="276.09" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="810.7" y="1669" width="0.2" height="15.0" fill="rgb(237,209,4)" rx="2" ry="2" />
<text  x="813.67" y="1679.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="810.9" y="1685" width="0.2" height="15.0" fill="rgb(218,203,29)" rx="2" ry="2" />
<text  x="813.87" y="1695.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="830.1" y="1781" width="0.2" height="15.0" fill="rgb(233,182,54)" rx="2" ry="2" />
<text  x="833.08" y="1791.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.10%)</title><rect x="472.2" y="1973" width="1.2" height="15.0" fill="rgb(209,21,41)" rx="2" ry="2" />
<text  x="475.16" y="1983.5" ></text>
</g>
<g >
<title>event_assign (3 samples, 0.05%)</title><rect x="159.3" y="2021" width="0.6" height="15.0" fill="rgb(222,79,8)" rx="2" ry="2" />
<text  x="162.25" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="168.5" y="1973" width="0.4" height="15.0" fill="rgb(227,158,54)" rx="2" ry="2" />
<text  x="171.45" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="534.4" y="1957" width="0.2" height="15.0" fill="rgb(226,38,18)" rx="2" ry="2" />
<text  x="537.38" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="993.3" y="1909" width="0.2" height="15.0" fill="rgb(232,9,12)" rx="2" ry="2" />
<text  x="996.33" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="711.4" y="1909" width="0.2" height="15.0" fill="rgb(248,4,38)" rx="2" ry="2" />
<text  x="714.44" y="1919.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="890.5" y="1685" width="0.2" height="15.0" fill="rgb(239,163,13)" rx="2" ry="2" />
<text  x="893.50" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1110.0" y="1765" width="0.2" height="15.0" fill="rgb(244,172,29)" rx="2" ry="2" />
<text  x="1112.97" y="1775.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="287.3" y="1429" width="0.6" height="15.0" fill="rgb(221,143,38)" rx="2" ry="2" />
<text  x="290.29" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.20%)</title><rect x="597.4" y="1925" width="14.2" height="15.0" fill="rgb(207,205,18)" rx="2" ry="2" />
<text  x="600.40" y="1935.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="789.5" y="1541" width="0.2" height="15.0" fill="rgb(253,22,1)" rx="2" ry="2" />
<text  x="792.46" y="1551.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="889.1" y="1493" width="0.2" height="15.0" fill="rgb(248,137,43)" rx="2" ry="2" />
<text  x="892.10" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="914.9" y="1829" width="0.2" height="15.0" fill="rgb(214,172,13)" rx="2" ry="2" />
<text  x="917.91" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (91 samples, 1.54%)</title><rect x="527.4" y="2021" width="18.2" height="15.0" fill="rgb(254,217,8)" rx="2" ry="2" />
<text  x="530.38" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="221.5" y="1877" width="0.2" height="15.0" fill="rgb(232,170,22)" rx="2" ry="2" />
<text  x="224.47" y="1887.5" ></text>
</g>
<g >
<title>fput (4 samples, 0.07%)</title><rect x="833.5" y="1813" width="0.8" height="15.0" fill="rgb(245,37,18)" rx="2" ry="2" />
<text  x="836.48" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.6" y="1893" width="0.2" height="15.0" fill="rgb(229,51,19)" rx="2" ry="2" />
<text  x="77.62" y="1903.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="123.0" y="1909" width="0.2" height="15.0" fill="rgb(207,85,32)" rx="2" ry="2" />
<text  x="126.04" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="210.3" y="1813" width="0.2" height="15.0" fill="rgb(236,42,9)" rx="2" ry="2" />
<text  x="213.27" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="747.0" y="1685" width="0.2" height="15.0" fill="rgb(233,8,46)" rx="2" ry="2" />
<text  x="750.05" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (21 samples, 0.36%)</title><rect x="558.0" y="1989" width="4.2" height="15.0" fill="rgb(251,136,49)" rx="2" ry="2" />
<text  x="560.99" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.6" y="1925" width="0.2" height="15.0" fill="rgb(245,116,9)" rx="2" ry="2" />
<text  x="77.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="150.6" y="1749" width="0.2" height="15.0" fill="rgb(226,185,49)" rx="2" ry="2" />
<text  x="153.65" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="697.6" y="1861" width="0.2" height="15.0" fill="rgb(245,106,33)" rx="2" ry="2" />
<text  x="700.63" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="384.5" y="1781" width="0.2" height="15.0" fill="rgb(245,199,52)" rx="2" ry="2" />
<text  x="387.53" y="1791.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="752.5" y="1397" width="0.2" height="15.0" fill="rgb(252,156,33)" rx="2" ry="2" />
<text  x="755.45" y="1407.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="285.3" y="1653" width="0.2" height="15.0" fill="rgb(218,46,43)" rx="2" ry="2" />
<text  x="288.29" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1016.1" y="1893" width="0.2" height="15.0" fill="rgb(205,187,48)" rx="2" ry="2" />
<text  x="1019.14" y="1903.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="623.4" y="1589" width="0.2" height="15.0" fill="rgb(208,160,13)" rx="2" ry="2" />
<text  x="626.41" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="611.4" y="1797" width="0.2" height="15.0" fill="rgb(206,20,17)" rx="2" ry="2" />
<text  x="614.40" y="1807.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="504.6" y="1829" width="0.2" height="15.0" fill="rgb(218,119,46)" rx="2" ry="2" />
<text  x="507.57" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1120.2" y="1781" width="0.2" height="15.0" fill="rgb(211,125,26)" rx="2" ry="2" />
<text  x="1123.18" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="557.4" y="1925" width="0.2" height="15.0" fill="rgb(254,178,0)" rx="2" ry="2" />
<text  x="560.39" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="556.2" y="1877" width="0.4" height="15.0" fill="rgb(233,19,16)" rx="2" ry="2" />
<text  x="559.19" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="711.4" y="1925" width="0.2" height="15.0" fill="rgb(224,226,11)" rx="2" ry="2" />
<text  x="714.44" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="913.7" y="1989" width="0.2" height="15.0" fill="rgb(249,6,4)" rx="2" ry="2" />
<text  x="916.71" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="53.0" y="1877" width="0.2" height="15.0" fill="rgb(254,104,52)" rx="2" ry="2" />
<text  x="56.01" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="63.2" y="1989" width="0.2" height="15.0" fill="rgb(220,97,35)" rx="2" ry="2" />
<text  x="66.22" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="739.4" y="1621" width="0.2" height="15.0" fill="rgb(208,36,39)" rx="2" ry="2" />
<text  x="742.45" y="1631.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="430.3" y="1701" width="0.2" height="15.0" fill="rgb(229,133,22)" rx="2" ry="2" />
<text  x="433.34" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.0" y="1893" width="0.2" height="15.0" fill="rgb(216,143,25)" rx="2" ry="2" />
<text  x="145.04" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="512.0" y="1733" width="0.2" height="15.0" fill="rgb(210,109,53)" rx="2" ry="2" />
<text  x="514.97" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="590.2" y="1989" width="0.4" height="15.0" fill="rgb(236,207,32)" rx="2" ry="2" />
<text  x="593.20" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="664.0" y="1829" width="0.2" height="15.0" fill="rgb(209,110,49)" rx="2" ry="2" />
<text  x="667.02" y="1839.5" ></text>
</g>
<g >
<title>dst_release (14 samples, 0.24%)</title><rect x="1079.2" y="1877" width="2.8" height="15.0" fill="rgb(242,221,35)" rx="2" ry="2" />
<text  x="1082.16" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="118.2" y="165" width="0.2" height="15.0" fill="rgb(234,215,32)" rx="2" ry="2" />
<text  x="121.24" y="175.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="890.5" y="1845" width="0.2" height="15.0" fill="rgb(246,0,38)" rx="2" ry="2" />
<text  x="893.50" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="118.0" y="117" width="0.2" height="15.0" fill="rgb(238,224,36)" rx="2" ry="2" />
<text  x="121.04" y="127.5" ></text>
</g>
<g >
<title>__libc_fcntl (9 samples, 0.15%)</title><rect x="1169.4" y="2037" width="1.8" height="15.0" fill="rgb(238,114,48)" rx="2" ry="2" />
<text  x="1172.39" y="2047.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="357.3" y="1621" width="0.2" height="15.0" fill="rgb(208,37,50)" rx="2" ry="2" />
<text  x="360.32" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="112.6" y="53" width="1.2" height="15.0" fill="rgb(216,115,22)" rx="2" ry="2" />
<text  x="115.63" y="63.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="211.5" y="1877" width="0.2" height="15.0" fill="rgb(239,201,42)" rx="2" ry="2" />
<text  x="214.47" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="565.6" y="1973" width="0.2" height="15.0" fill="rgb(207,67,8)" rx="2" ry="2" />
<text  x="568.59" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.32%)</title><rect x="645.0" y="1941" width="3.8" height="15.0" fill="rgb(248,73,16)" rx="2" ry="2" />
<text  x="648.02" y="1951.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="590.4" y="1605" width="0.2" height="15.0" fill="rgb(223,9,52)" rx="2" ry="2" />
<text  x="593.40" y="1615.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (49 samples, 0.83%)</title><rect x="1110.6" y="1877" width="9.8" height="15.0" fill="rgb(246,161,11)" rx="2" ry="2" />
<text  x="1113.57" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="308.1" y="1605" width="0.2" height="15.0" fill="rgb(224,15,2)" rx="2" ry="2" />
<text  x="311.10" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="120.4" y="1413" width="0.2" height="15.0" fill="rgb(237,27,27)" rx="2" ry="2" />
<text  x="123.44" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="197.7" y="2021" width="0.6" height="15.0" fill="rgb(251,120,3)" rx="2" ry="2" />
<text  x="200.66" y="2031.5" ></text>
</g>
<g >
<title>tcp_current_mss (20 samples, 0.34%)</title><rect x="329.1" y="1861" width="4.0" height="15.0" fill="rgb(216,85,40)" rx="2" ry="2" />
<text  x="332.11" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="835.7" y="1733" width="0.2" height="15.0" fill="rgb(243,142,37)" rx="2" ry="2" />
<text  x="838.68" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1149.8" y="1941" width="0.2" height="15.0" fill="rgb(251,94,6)" rx="2" ry="2" />
<text  x="1152.79" y="1951.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="84.2" y="1941" width="0.4" height="15.0" fill="rgb(233,191,32)" rx="2" ry="2" />
<text  x="87.23" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="110.8" y="37" width="0.2" height="15.0" fill="rgb(221,170,34)" rx="2" ry="2" />
<text  x="113.83" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="935.3" y="1893" width="0.2" height="15.0" fill="rgb(247,134,43)" rx="2" ry="2" />
<text  x="938.31" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="61.2" y="1829" width="0.2" height="15.0" fill="rgb(222,109,54)" rx="2" ry="2" />
<text  x="64.22" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="165.3" y="1909" width="0.2" height="15.0" fill="rgb(246,198,29)" rx="2" ry="2" />
<text  x="168.25" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="512.0" y="1845" width="0.2" height="15.0" fill="rgb(224,173,51)" rx="2" ry="2" />
<text  x="514.97" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="180.5" y="1813" width="0.2" height="15.0" fill="rgb(237,83,36)" rx="2" ry="2" />
<text  x="183.46" y="1823.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="697.6" y="1653" width="0.2" height="15.0" fill="rgb(213,48,34)" rx="2" ry="2" />
<text  x="700.63" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="578.6" y="1797" width="0.2" height="15.0" fill="rgb(207,217,1)" rx="2" ry="2" />
<text  x="581.59" y="1807.5" ></text>
</g>
<g >
<title>__init_waitqueue_head (1 samples, 0.02%)</title><rect x="400.5" y="1909" width="0.2" height="15.0" fill="rgb(208,228,36)" rx="2" ry="2" />
<text  x="403.53" y="1919.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="748.9" y="1685" width="0.2" height="15.0" fill="rgb(254,61,29)" rx="2" ry="2" />
<text  x="751.85" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="150.4" y="1813" width="0.2" height="15.0" fill="rgb(218,12,18)" rx="2" ry="2" />
<text  x="153.45" y="1823.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="578.8" y="1973" width="2.6" height="15.0" fill="rgb(218,184,42)" rx="2" ry="2" />
<text  x="581.79" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="889.1" y="1909" width="0.2" height="15.0" fill="rgb(232,94,5)" rx="2" ry="2" />
<text  x="892.10" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.8" y="1861" width="0.2" height="15.0" fill="rgb(224,147,54)" rx="2" ry="2" />
<text  x="125.84" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="835.7" y="1829" width="0.2" height="15.0" fill="rgb(247,34,8)" rx="2" ry="2" />
<text  x="838.68" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="890.1" y="1637" width="0.2" height="15.0" fill="rgb(219,21,37)" rx="2" ry="2" />
<text  x="893.10" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1142.0" y="1813" width="0.2" height="15.0" fill="rgb(251,5,37)" rx="2" ry="2" />
<text  x="1144.98" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="533.8" y="1957" width="0.4" height="15.0" fill="rgb(245,194,32)" rx="2" ry="2" />
<text  x="536.78" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="715.4" y="1989" width="0.2" height="15.0" fill="rgb(232,108,9)" rx="2" ry="2" />
<text  x="718.44" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="525.6" y="1685" width="0.2" height="15.0" fill="rgb(250,112,32)" rx="2" ry="2" />
<text  x="528.57" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="844.7" y="1925" width="0.2" height="15.0" fill="rgb(251,8,41)" rx="2" ry="2" />
<text  x="847.68" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="118.6" y="117" width="0.2" height="15.0" fill="rgb(232,178,50)" rx="2" ry="2" />
<text  x="121.64" y="127.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.02%)</title><rect x="587.6" y="1813" width="0.2" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="590.60" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="546.2" y="1925" width="0.2" height="15.0" fill="rgb(243,62,37)" rx="2" ry="2" />
<text  x="549.18" y="1935.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="626.4" y="1925" width="0.2" height="15.0" fill="rgb(236,10,15)" rx="2" ry="2" />
<text  x="629.41" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="54.2" y="1941" width="0.2" height="15.0" fill="rgb(210,76,29)" rx="2" ry="2" />
<text  x="57.21" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="851.1" y="1909" width="0.4" height="15.0" fill="rgb(214,68,28)" rx="2" ry="2" />
<text  x="854.09" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="626.2" y="1733" width="0.2" height="15.0" fill="rgb(235,209,33)" rx="2" ry="2" />
<text  x="629.21" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="636.0" y="2037" width="0.2" height="15.0" fill="rgb(208,46,43)" rx="2" ry="2" />
<text  x="639.01" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="211.5" y="1717" width="0.2" height="15.0" fill="rgb(222,229,35)" rx="2" ry="2" />
<text  x="214.47" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="267.5" y="1573" width="0.2" height="15.0" fill="rgb(211,116,49)" rx="2" ry="2" />
<text  x="270.49" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="890.5" y="1909" width="0.2" height="15.0" fill="rgb(210,146,47)" rx="2" ry="2" />
<text  x="893.50" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (387 samples, 6.56%)</title><rect x="352.3" y="2005" width="77.4" height="15.0" fill="rgb(234,222,20)" rx="2" ry="2" />
<text  x="355.32" y="2015.5" >do_sysca..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="829.9" y="1701" width="0.2" height="15.0" fill="rgb(210,74,19)" rx="2" ry="2" />
<text  x="832.88" y="1711.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.2" y="1861" width="0.8" height="15.0" fill="rgb(246,113,18)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="31.6" y="2005" width="0.4" height="15.0" fill="rgb(244,42,14)" rx="2" ry="2" />
<text  x="34.61" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1139.0" y="1845" width="0.2" height="15.0" fill="rgb(243,39,23)" rx="2" ry="2" />
<text  x="1141.98" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="223.1" y="1909" width="0.2" height="15.0" fill="rgb(240,211,13)" rx="2" ry="2" />
<text  x="226.07" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="381.7" y="1925" width="0.8" height="15.0" fill="rgb(240,97,8)" rx="2" ry="2" />
<text  x="384.73" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="428.5" y="1941" width="0.2" height="15.0" fill="rgb(237,183,3)" rx="2" ry="2" />
<text  x="431.54" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="933.7" y="1717" width="0.2" height="15.0" fill="rgb(234,198,40)" rx="2" ry="2" />
<text  x="936.71" y="1727.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="648.4" y="1557" width="0.2" height="15.0" fill="rgb(210,174,48)" rx="2" ry="2" />
<text  x="651.42" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="325" width="14.8" height="15.0" fill="rgb(236,49,49)" rx="2" ry="2" />
<text  x="106.43" y="335.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (4 samples, 0.07%)</title><rect x="969.7" y="2037" width="0.8" height="15.0" fill="rgb(230,173,6)" rx="2" ry="2" />
<text  x="972.73" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="610.6" y="1621" width="0.2" height="15.0" fill="rgb(215,217,14)" rx="2" ry="2" />
<text  x="613.60" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="890.1" y="1829" width="0.2" height="15.0" fill="rgb(253,40,25)" rx="2" ry="2" />
<text  x="893.10" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="118.4" y="133" width="0.2" height="15.0" fill="rgb(244,171,4)" rx="2" ry="2" />
<text  x="121.44" y="143.5" ></text>
</g>
<g >
<title>sock_recvmsg (367 samples, 6.22%)</title><rect x="1053.0" y="1973" width="73.4" height="15.0" fill="rgb(236,53,20)" rx="2" ry="2" />
<text  x="1055.95" y="1983.5" >sock_rec..</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1069.0" y="1893" width="0.2" height="15.0" fill="rgb(238,226,12)" rx="2" ry="2" />
<text  x="1071.96" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1067.8" y="1797" width="0.4" height="15.0" fill="rgb(248,93,45)" rx="2" ry="2" />
<text  x="1070.76" y="1807.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="306.5" y="1509" width="0.2" height="15.0" fill="rgb(208,151,0)" rx="2" ry="2" />
<text  x="309.50" y="1519.5" ></text>
</g>
<g >
<title>inet_release (328 samples, 5.56%)</title><rect x="760.3" y="1765" width="65.6" height="15.0" fill="rgb(236,91,39)" rx="2" ry="2" />
<text  x="763.25" y="1775.5" >inet_re..</text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="576.0" y="1637" width="0.2" height="15.0" fill="rgb(247,76,39)" rx="2" ry="2" />
<text  x="578.99" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="981.7" y="1781" width="0.2" height="15.0" fill="rgb(207,21,44)" rx="2" ry="2" />
<text  x="984.73" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="286.5" y="1477" width="0.2" height="15.0" fill="rgb(215,165,47)" rx="2" ry="2" />
<text  x="289.49" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1188.8" y="1829" width="0.4" height="15.0" fill="rgb(253,40,20)" rx="2" ry="2" />
<text  x="1191.80" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="79.2" y="1941" width="0.4" height="15.0" fill="rgb(223,111,22)" rx="2" ry="2" />
<text  x="82.22" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="167.9" y="1957" width="0.2" height="15.0" fill="rgb(224,32,30)" rx="2" ry="2" />
<text  x="170.85" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="307.9" y="1701" width="0.4" height="15.0" fill="rgb(254,128,34)" rx="2" ry="2" />
<text  x="310.90" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="889.1" y="1717" width="0.2" height="15.0" fill="rgb(205,106,49)" rx="2" ry="2" />
<text  x="892.10" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="562.6" y="1989" width="0.2" height="15.0" fill="rgb(253,166,26)" rx="2" ry="2" />
<text  x="565.59" y="1999.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="258.5" y="1861" width="0.2" height="15.0" fill="rgb(244,63,3)" rx="2" ry="2" />
<text  x="261.48" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="53.0" y="1717" width="0.2" height="15.0" fill="rgb(222,4,2)" rx="2" ry="2" />
<text  x="56.01" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="518.6" y="1845" width="0.6" height="15.0" fill="rgb(220,13,50)" rx="2" ry="2" />
<text  x="521.57" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1110.0" y="1749" width="0.2" height="15.0" fill="rgb(232,61,3)" rx="2" ry="2" />
<text  x="1112.97" y="1759.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (7 samples, 0.12%)</title><rect x="825.9" y="1765" width="1.4" height="15.0" fill="rgb(250,166,24)" rx="2" ry="2" />
<text  x="828.88" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="505.0" y="1845" width="0.2" height="15.0" fill="rgb(219,97,31)" rx="2" ry="2" />
<text  x="507.97" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="858.5" y="1797" width="0.2" height="15.0" fill="rgb(230,151,45)" rx="2" ry="2" />
<text  x="861.49" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="430.1" y="1909" width="0.4" height="15.0" fill="rgb(249,127,23)" rx="2" ry="2" />
<text  x="433.14" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="137.2" y="1973" width="0.4" height="15.0" fill="rgb(234,166,29)" rx="2" ry="2" />
<text  x="140.24" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="256.5" y="1573" width="0.2" height="15.0" fill="rgb(226,53,11)" rx="2" ry="2" />
<text  x="259.48" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1110.4" y="1845" width="0.2" height="15.0" fill="rgb(212,228,44)" rx="2" ry="2" />
<text  x="1113.37" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="590.4" y="1797" width="0.2" height="15.0" fill="rgb(252,160,46)" rx="2" ry="2" />
<text  x="593.40" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="851.7" y="1925" width="0.8" height="15.0" fill="rgb(250,144,3)" rx="2" ry="2" />
<text  x="854.69" y="1935.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="909.7" y="1989" width="0.2" height="15.0" fill="rgb(248,87,36)" rx="2" ry="2" />
<text  x="912.70" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="805" width="15.4" height="15.0" fill="rgb(248,12,54)" rx="2" ry="2" />
<text  x="106.43" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1016.1" y="1829" width="0.2" height="15.0" fill="rgb(229,181,17)" rx="2" ry="2" />
<text  x="1019.14" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="273.1" y="1765" width="0.2" height="15.0" fill="rgb(221,53,24)" rx="2" ry="2" />
<text  x="276.09" y="1775.5" ></text>
</g>
<g >
<title>sk_reset_timer (17 samples, 0.29%)</title><rect x="813.1" y="1637" width="3.4" height="15.0" fill="rgb(231,44,41)" rx="2" ry="2" />
<text  x="816.07" y="1647.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="84.8" y="1733" width="0.2" height="15.0" fill="rgb(227,5,42)" rx="2" ry="2" />
<text  x="87.83" y="1743.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="298.7" y="1637" width="0.2" height="15.0" fill="rgb(230,172,37)" rx="2" ry="2" />
<text  x="301.70" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="824.1" y="1637" width="0.2" height="15.0" fill="rgb(241,86,41)" rx="2" ry="2" />
<text  x="827.08" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (56 samples, 0.95%)</title><rect x="641.6" y="2021" width="11.2" height="15.0" fill="rgb(245,20,3)" rx="2" ry="2" />
<text  x="644.61" y="2031.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="801.3" y="1509" width="0.2" height="15.0" fill="rgb(229,80,42)" rx="2" ry="2" />
<text  x="804.27" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="173.9" y="1973" width="0.6" height="15.0" fill="rgb(242,112,6)" rx="2" ry="2" />
<text  x="176.86" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="827.3" y="1541" width="0.2" height="15.0" fill="rgb(229,178,9)" rx="2" ry="2" />
<text  x="830.28" y="1551.5" ></text>
</g>
<g >
<title>__alloc_skb (40 samples, 0.68%)</title><rect x="259.9" y="1861" width="8.0" height="15.0" fill="rgb(249,142,43)" rx="2" ry="2" />
<text  x="262.88" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (5 samples, 0.08%)</title><rect x="1175.2" y="1973" width="1.0" height="15.0" fill="rgb(248,32,0)" rx="2" ry="2" />
<text  x="1178.19" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="103.4" y="117" width="14.4" height="15.0" fill="rgb(224,198,17)" rx="2" ry="2" />
<text  x="106.43" y="127.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="954.5" y="1941" width="0.2" height="15.0" fill="rgb(229,197,52)" rx="2" ry="2" />
<text  x="957.52" y="1951.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="10.2" y="2005" width="0.8" height="15.0" fill="rgb(220,168,18)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="641.4" y="1861" width="0.2" height="15.0" fill="rgb(217,157,33)" rx="2" ry="2" />
<text  x="644.41" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="164.9" y="1909" width="0.2" height="15.0" fill="rgb(223,77,5)" rx="2" ry="2" />
<text  x="167.85" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.2" y="2021" width="0.8" height="15.0" fill="rgb(230,204,24)" rx="2" ry="2" />
<text  x="14.20" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="630.4" y="2005" width="0.2" height="15.0" fill="rgb(240,160,36)" rx="2" ry="2" />
<text  x="633.41" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.7" y="1765" width="0.2" height="15.0" fill="rgb(232,210,24)" rx="2" ry="2" />
<text  x="281.69" y="1775.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="966.9" y="2037" width="0.6" height="15.0" fill="rgb(232,7,8)" rx="2" ry="2" />
<text  x="969.92" y="2047.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (2 samples, 0.03%)</title><rect x="591.4" y="1941" width="0.4" height="15.0" fill="rgb(224,56,47)" rx="2" ry="2" />
<text  x="594.40" y="1951.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="504.0" y="1637" width="0.2" height="15.0" fill="rgb(241,170,17)" rx="2" ry="2" />
<text  x="506.97" y="1647.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="414.9" y="1845" width="0.2" height="15.0" fill="rgb(251,63,46)" rx="2" ry="2" />
<text  x="417.94" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="752.5" y="1509" width="0.2" height="15.0" fill="rgb(232,6,42)" rx="2" ry="2" />
<text  x="755.45" y="1519.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="479.8" y="1909" width="0.2" height="15.0" fill="rgb(241,48,28)" rx="2" ry="2" />
<text  x="482.76" y="1919.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="282.9" y="1749" width="0.2" height="15.0" fill="rgb(207,107,48)" rx="2" ry="2" />
<text  x="285.89" y="1759.5" ></text>
</g>
<g >
<title>up_write (13 samples, 0.22%)</title><rect x="827.5" y="1765" width="2.6" height="15.0" fill="rgb(239,116,47)" rx="2" ry="2" />
<text  x="830.48" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="504.4" y="1957" width="0.8" height="15.0" fill="rgb(239,201,14)" rx="2" ry="2" />
<text  x="507.37" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="712.4" y="1989" width="0.2" height="15.0" fill="rgb(238,46,17)" rx="2" ry="2" />
<text  x="715.44" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="97.8" y="1973" width="0.2" height="15.0" fill="rgb(237,73,52)" rx="2" ry="2" />
<text  x="100.83" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="984.7" y="1685" width="0.2" height="15.0" fill="rgb(232,223,48)" rx="2" ry="2" />
<text  x="987.73" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="893.7" y="1957" width="0.2" height="15.0" fill="rgb(226,204,41)" rx="2" ry="2" />
<text  x="896.70" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (48 samples, 0.81%)</title><rect x="1110.6" y="1749" width="9.6" height="15.0" fill="rgb(247,196,18)" rx="2" ry="2" />
<text  x="1113.57" y="1759.5" ></text>
</g>
<g >
<title>ip_local_out (129 samples, 2.19%)</title><rect x="281.1" y="1797" width="25.8" height="15.0" fill="rgb(211,194,41)" rx="2" ry="2" />
<text  x="284.09" y="1807.5" >i..</text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="357.3" y="1637" width="0.2" height="15.0" fill="rgb(240,105,44)" rx="2" ry="2" />
<text  x="360.32" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="428.5" y="1669" width="0.2" height="15.0" fill="rgb(227,228,37)" rx="2" ry="2" />
<text  x="431.54" y="1679.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.08%)</title><rect x="1017.7" y="2037" width="1.0" height="15.0" fill="rgb(217,121,30)" rx="2" ry="2" />
<text  x="1020.74" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="332.5" y="1829" width="0.2" height="15.0" fill="rgb(209,105,2)" rx="2" ry="2" />
<text  x="335.51" y="1839.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 0.02%)</title><rect x="707.0" y="1925" width="0.2" height="15.0" fill="rgb(219,166,46)" rx="2" ry="2" />
<text  x="710.04" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (30 samples, 0.51%)</title><rect x="144.8" y="1925" width="6.0" height="15.0" fill="rgb(252,93,11)" rx="2" ry="2" />
<text  x="147.85" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="543.2" y="1973" width="1.4" height="15.0" fill="rgb(222,130,30)" rx="2" ry="2" />
<text  x="546.18" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="328.5" y="1669" width="0.4" height="15.0" fill="rgb(217,106,6)" rx="2" ry="2" />
<text  x="331.51" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="518.8" y="1749" width="0.4" height="15.0" fill="rgb(221,52,47)" rx="2" ry="2" />
<text  x="521.77" y="1759.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="648.4" y="1477" width="0.2" height="15.0" fill="rgb(244,157,24)" rx="2" ry="2" />
<text  x="651.42" y="1487.5" ></text>
</g>
<g >
<title>__d_alloc (2 samples, 0.03%)</title><rect x="409.3" y="1941" width="0.4" height="15.0" fill="rgb(218,138,0)" rx="2" ry="2" />
<text  x="412.34" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="885.3" y="1941" width="0.2" height="15.0" fill="rgb(233,115,47)" rx="2" ry="2" />
<text  x="888.30" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (37 samples, 0.63%)</title><rect x="1001.9" y="2021" width="7.4" height="15.0" fill="rgb(245,62,20)" rx="2" ry="2" />
<text  x="1004.94" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="117.4" y="37" width="0.2" height="15.0" fill="rgb(225,70,6)" rx="2" ry="2" />
<text  x="120.44" y="47.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.54%)</title><rect x="102.8" y="1749" width="18.2" height="15.0" fill="rgb(222,95,54)" rx="2" ry="2" />
<text  x="105.83" y="1759.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="969.1" y="1493" width="0.2" height="15.0" fill="rgb(242,84,1)" rx="2" ry="2" />
<text  x="972.13" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="1091.2" y="1813" width="0.6" height="15.0" fill="rgb(217,156,54)" rx="2" ry="2" />
<text  x="1094.17" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1120.2" y="1653" width="0.2" height="15.0" fill="rgb(246,21,7)" rx="2" ry="2" />
<text  x="1123.18" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="79.4" y="1733" width="0.2" height="15.0" fill="rgb(241,152,54)" rx="2" ry="2" />
<text  x="82.42" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (16 samples, 0.27%)</title><rect x="618.8" y="1909" width="3.2" height="15.0" fill="rgb(254,178,46)" rx="2" ry="2" />
<text  x="621.81" y="1919.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="491.6" y="1909" width="0.2" height="15.0" fill="rgb(209,0,14)" rx="2" ry="2" />
<text  x="494.56" y="1919.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="831.1" y="1813" width="0.2" height="15.0" fill="rgb(246,127,28)" rx="2" ry="2" />
<text  x="834.08" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="980.7" y="1749" width="0.2" height="15.0" fill="rgb(211,18,54)" rx="2" ry="2" />
<text  x="983.73" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="165.3" y="1893" width="0.2" height="15.0" fill="rgb(236,180,6)" rx="2" ry="2" />
<text  x="168.25" y="1903.5" ></text>
</g>
<g >
<title>syscall (61 samples, 1.03%)</title><rect x="1152.0" y="1973" width="12.2" height="15.0" fill="rgb(252,24,53)" rx="2" ry="2" />
<text  x="1154.99" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="454.0" y="1765" width="0.2" height="15.0" fill="rgb(215,218,18)" rx="2" ry="2" />
<text  x="456.95" y="1775.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="314.5" y="1829" width="0.2" height="15.0" fill="rgb(245,63,34)" rx="2" ry="2" />
<text  x="317.50" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="402.7" y="1909" width="0.2" height="15.0" fill="rgb(246,65,27)" rx="2" ry="2" />
<text  x="405.73" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.0" y="1157" width="0.2" height="15.0" fill="rgb(237,0,29)" rx="2" ry="2" />
<text  x="122.04" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="968.3" y="2021" width="1.2" height="15.0" fill="rgb(248,0,4)" rx="2" ry="2" />
<text  x="971.32" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (1 samples, 0.02%)</title><rect x="71.6" y="1957" width="0.2" height="15.0" fill="rgb(205,227,49)" rx="2" ry="2" />
<text  x="74.62" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="217.7" y="1749" width="0.2" height="15.0" fill="rgb(222,28,8)" rx="2" ry="2" />
<text  x="220.67" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (1 samples, 0.02%)</title><rect x="913.1" y="2037" width="0.2" height="15.0" fill="rgb(250,55,8)" rx="2" ry="2" />
<text  x="916.11" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="746.8" y="1701" width="0.2" height="15.0" fill="rgb(254,146,30)" rx="2" ry="2" />
<text  x="749.85" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="997.7" y="1973" width="0.2" height="15.0" fill="rgb(240,66,14)" rx="2" ry="2" />
<text  x="1000.73" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (4 samples, 0.07%)</title><rect x="290.9" y="1685" width="0.8" height="15.0" fill="rgb(216,156,25)" rx="2" ry="2" />
<text  x="293.90" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (10 samples, 0.17%)</title><rect x="559.2" y="1957" width="2.0" height="15.0" fill="rgb(208,132,13)" rx="2" ry="2" />
<text  x="562.19" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1081.8" y="1797" width="0.2" height="15.0" fill="rgb(210,176,44)" rx="2" ry="2" />
<text  x="1084.76" y="1807.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(235,203,22)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="482.8" y="1653" width="0.6" height="15.0" fill="rgb(237,93,28)" rx="2" ry="2" />
<text  x="485.76" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="249.1" y="1733" width="0.2" height="15.0" fill="rgb(229,183,47)" rx="2" ry="2" />
<text  x="252.08" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="381.5" y="1813" width="0.2" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" />
<text  x="384.53" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="972.3" y="1973" width="0.2" height="15.0" fill="rgb(208,21,32)" rx="2" ry="2" />
<text  x="975.33" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1188.8" y="2005" width="0.4" height="15.0" fill="rgb(212,51,22)" rx="2" ry="2" />
<text  x="1191.80" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1035.3" y="2021" width="0.2" height="15.0" fill="rgb(225,57,17)" rx="2" ry="2" />
<text  x="1038.35" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1189.0" y="1669" width="0.2" height="15.0" fill="rgb(233,209,25)" rx="2" ry="2" />
<text  x="1192.00" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (3 samples, 0.05%)</title><rect x="81.2" y="1909" width="0.6" height="15.0" fill="rgb(253,187,39)" rx="2" ry="2" />
<text  x="84.22" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.1" y="1733" width="0.2" height="15.0" fill="rgb(205,43,12)" rx="2" ry="2" />
<text  x="844.08" y="1743.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (22 samples, 0.37%)</title><rect x="185.9" y="2037" width="4.4" height="15.0" fill="rgb(219,131,4)" rx="2" ry="2" />
<text  x="188.86" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="988.9" y="1973" width="0.6" height="15.0" fill="rgb(228,103,3)" rx="2" ry="2" />
<text  x="991.93" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="222.1" y="1925" width="0.4" height="15.0" fill="rgb(222,229,52)" rx="2" ry="2" />
<text  x="225.07" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="984.7" y="1861" width="0.2" height="15.0" fill="rgb(225,157,34)" rx="2" ry="2" />
<text  x="987.73" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="946.3" y="2005" width="0.6" height="15.0" fill="rgb(243,73,5)" rx="2" ry="2" />
<text  x="949.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="910.9" y="2005" width="0.2" height="15.0" fill="rgb(226,8,44)" rx="2" ry="2" />
<text  x="913.91" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="59.2" y="1893" width="0.2" height="15.0" fill="rgb(237,43,9)" rx="2" ry="2" />
<text  x="62.22" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (161 samples, 2.73%)</title><rect x="778.7" y="1685" width="32.2" height="15.0" fill="rgb(227,22,51)" rx="2" ry="2" />
<text  x="781.66" y="1695.5" >__..</text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="627.0" y="1989" width="0.2" height="15.0" fill="rgb(228,219,2)" rx="2" ry="2" />
<text  x="630.01" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="969.1" y="1589" width="0.2" height="15.0" fill="rgb(251,109,20)" rx="2" ry="2" />
<text  x="972.13" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="758.9" y="1733" width="0.2" height="15.0" fill="rgb(237,105,53)" rx="2" ry="2" />
<text  x="761.85" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="560.0" y="1925" width="0.2" height="15.0" fill="rgb(241,81,9)" rx="2" ry="2" />
<text  x="562.99" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1148.4" y="1941" width="0.2" height="15.0" fill="rgb(219,74,36)" rx="2" ry="2" />
<text  x="1151.39" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="752.5" y="1333" width="0.2" height="15.0" fill="rgb(230,61,11)" rx="2" ry="2" />
<text  x="755.45" y="1343.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (8 samples, 0.14%)</title><rect x="164.3" y="2005" width="1.6" height="15.0" fill="rgb(210,204,6)" rx="2" ry="2" />
<text  x="167.25" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="980.7" y="1813" width="0.2" height="15.0" fill="rgb(215,179,42)" rx="2" ry="2" />
<text  x="983.73" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="157.9" y="1765" width="0.2" height="15.0" fill="rgb(212,228,23)" rx="2" ry="2" />
<text  x="160.85" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (3 samples, 0.05%)</title><rect x="913.3" y="2037" width="0.6" height="15.0" fill="rgb(252,173,19)" rx="2" ry="2" />
<text  x="916.31" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="286.1" y="1541" width="0.2" height="15.0" fill="rgb(211,202,50)" rx="2" ry="2" />
<text  x="289.09" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="402.1" y="1749" width="0.2" height="15.0" fill="rgb(237,173,24)" rx="2" ry="2" />
<text  x="405.13" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="745.4" y="1701" width="0.8" height="15.0" fill="rgb(234,135,40)" rx="2" ry="2" />
<text  x="748.45" y="1711.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1067.8" y="1573" width="0.2" height="15.0" fill="rgb(219,119,24)" rx="2" ry="2" />
<text  x="1070.76" y="1583.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="578.6" y="1669" width="0.2" height="15.0" fill="rgb(238,122,27)" rx="2" ry="2" />
<text  x="581.59" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.9" y="1957" width="0.2" height="15.0" fill="rgb(226,49,22)" rx="2" ry="2" />
<text  x="893.90" y="1967.5" ></text>
</g>
<g >
<title>move_addr_to_user (2 samples, 0.03%)</title><rect x="608.0" y="1861" width="0.4" height="15.0" fill="rgb(226,96,7)" rx="2" ry="2" />
<text  x="611.00" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="680.8" y="1925" width="2.8" height="15.0" fill="rgb(251,28,35)" rx="2" ry="2" />
<text  x="683.83" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="753.9" y="1477" width="0.2" height="15.0" fill="rgb(247,205,31)" rx="2" ry="2" />
<text  x="756.85" y="1487.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="132.2" y="1925" width="0.2" height="15.0" fill="rgb(208,141,46)" rx="2" ry="2" />
<text  x="135.24" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (48 samples, 0.81%)</title><rect x="1110.6" y="1813" width="9.6" height="15.0" fill="rgb(230,13,39)" rx="2" ry="2" />
<text  x="1113.57" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1103.0" y="1861" width="0.2" height="15.0" fill="rgb(205,66,6)" rx="2" ry="2" />
<text  x="1105.97" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="79.4" y="1797" width="0.2" height="15.0" fill="rgb(221,81,10)" rx="2" ry="2" />
<text  x="82.42" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="825.1" y="1557" width="0.2" height="15.0" fill="rgb(217,177,24)" rx="2" ry="2" />
<text  x="828.08" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="879.5" y="1861" width="0.2" height="15.0" fill="rgb(210,47,25)" rx="2" ry="2" />
<text  x="882.49" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="588.4" y="1989" width="1.4" height="15.0" fill="rgb(247,49,15)" rx="2" ry="2" />
<text  x="591.40" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="889.1" y="1781" width="0.2" height="15.0" fill="rgb(246,57,31)" rx="2" ry="2" />
<text  x="892.10" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="890.7" y="1941" width="0.2" height="15.0" fill="rgb(212,27,49)" rx="2" ry="2" />
<text  x="893.70" y="1951.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="849.5" y="1893" width="0.2" height="15.0" fill="rgb(227,226,13)" rx="2" ry="2" />
<text  x="852.48" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="923.5" y="1925" width="0.4" height="15.0" fill="rgb(218,13,19)" rx="2" ry="2" />
<text  x="926.51" y="1935.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="336.1" y="1957" width="0.2" height="15.0" fill="rgb(235,104,39)" rx="2" ry="2" />
<text  x="339.11" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="285.9" y="1573" width="0.2" height="15.0" fill="rgb(207,153,48)" rx="2" ry="2" />
<text  x="288.89" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (4 samples, 0.07%)</title><rect x="53.6" y="1973" width="0.8" height="15.0" fill="rgb(208,32,14)" rx="2" ry="2" />
<text  x="56.61" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="71.4" y="1733" width="0.2" height="15.0" fill="rgb(233,210,8)" rx="2" ry="2" />
<text  x="74.42" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="416.1" y="1861" width="0.2" height="15.0" fill="rgb(215,169,39)" rx="2" ry="2" />
<text  x="419.14" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="735.6" y="1733" width="0.6" height="15.0" fill="rgb(210,80,5)" rx="2" ry="2" />
<text  x="738.65" y="1743.5" ></text>
</g>
<g >
<title>ipv4_mtu (5 samples, 0.08%)</title><rect x="817.9" y="1717" width="1.0" height="15.0" fill="rgb(246,202,32)" rx="2" ry="2" />
<text  x="820.87" y="1727.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="887.9" y="1941" width="0.4" height="15.0" fill="rgb(213,55,52)" rx="2" ry="2" />
<text  x="890.90" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="190.5" y="2021" width="0.2" height="15.0" fill="rgb(248,199,31)" rx="2" ry="2" />
<text  x="193.46" y="2031.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="843.5" y="1605" width="0.2" height="15.0" fill="rgb(233,165,52)" rx="2" ry="2" />
<text  x="846.48" y="1615.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="357.1" y="1653" width="0.2" height="15.0" fill="rgb(235,173,19)" rx="2" ry="2" />
<text  x="360.12" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="849.3" y="1925" width="0.4" height="15.0" fill="rgb(229,92,33)" rx="2" ry="2" />
<text  x="852.28" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="899.9" y="1973" width="0.2" height="15.0" fill="rgb(217,0,23)" rx="2" ry="2" />
<text  x="902.90" y="1983.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (4 samples, 0.07%)</title><rect x="965.9" y="2037" width="0.8" height="15.0" fill="rgb(225,44,14)" rx="2" ry="2" />
<text  x="968.92" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="75.2" y="1925" width="0.2" height="15.0" fill="rgb(237,22,39)" rx="2" ry="2" />
<text  x="78.22" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="126.2" y="1925" width="0.4" height="15.0" fill="rgb(208,166,41)" rx="2" ry="2" />
<text  x="129.24" y="1935.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="804.5" y="1509" width="0.2" height="15.0" fill="rgb(223,45,20)" rx="2" ry="2" />
<text  x="807.47" y="1519.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="531.8" y="1701" width="0.2" height="15.0" fill="rgb(218,127,19)" rx="2" ry="2" />
<text  x="534.78" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="623.4" y="1749" width="0.2" height="15.0" fill="rgb(243,103,26)" rx="2" ry="2" />
<text  x="626.41" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="954.3" y="2021" width="2.0" height="15.0" fill="rgb(228,179,54)" rx="2" ry="2" />
<text  x="957.32" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="575.8" y="1861" width="0.4" height="15.0" fill="rgb(211,145,40)" rx="2" ry="2" />
<text  x="578.79" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="787.9" y="1189" width="0.2" height="15.0" fill="rgb(210,190,29)" rx="2" ry="2" />
<text  x="790.86" y="1199.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="611.4" y="1765" width="0.2" height="15.0" fill="rgb(247,12,27)" rx="2" ry="2" />
<text  x="614.40" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (27 samples, 0.46%)</title><rect x="1172.8" y="2005" width="5.4" height="15.0" fill="rgb(240,127,54)" rx="2" ry="2" />
<text  x="1175.79" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="339.5" y="1829" width="0.6" height="15.0" fill="rgb(239,138,14)" rx="2" ry="2" />
<text  x="342.51" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="518.8" y="1637" width="0.4" height="15.0" fill="rgb(222,143,25)" rx="2" ry="2" />
<text  x="521.77" y="1647.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (8 samples, 0.14%)</title><rect x="786.9" y="1557" width="1.6" height="15.0" fill="rgb(211,88,49)" rx="2" ry="2" />
<text  x="789.86" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="328.5" y="1781" width="0.4" height="15.0" fill="rgb(212,46,39)" rx="2" ry="2" />
<text  x="331.51" y="1791.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (14 samples, 0.24%)</title><rect x="153.6" y="1925" width="2.8" height="15.0" fill="rgb(216,103,52)" rx="2" ry="2" />
<text  x="156.65" y="1935.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="829.9" y="1477" width="0.2" height="15.0" fill="rgb(246,53,22)" rx="2" ry="2" />
<text  x="832.88" y="1487.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="889.1" y="1541" width="0.2" height="15.0" fill="rgb(221,143,46)" rx="2" ry="2" />
<text  x="892.10" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="259.5" y="1733" width="0.2" height="15.0" fill="rgb(206,165,22)" rx="2" ry="2" />
<text  x="262.48" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="902.5" y="2037" width="0.2" height="15.0" fill="rgb(233,67,36)" rx="2" ry="2" />
<text  x="905.50" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="897.7" y="1909" width="0.2" height="15.0" fill="rgb(216,102,48)" rx="2" ry="2" />
<text  x="900.70" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="531.6" y="1973" width="0.4" height="15.0" fill="rgb(250,170,35)" rx="2" ry="2" />
<text  x="534.58" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1020.9" y="2021" width="0.8" height="15.0" fill="rgb(224,13,23)" rx="2" ry="2" />
<text  x="1023.94" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (111 samples, 1.88%)</title><rect x="782.9" y="1653" width="22.2" height="15.0" fill="rgb(246,163,0)" rx="2" ry="2" />
<text  x="785.86" y="1663.5" >i..</text>
</g>
<g >
<title>folly::RequestContext::setContext (27 samples, 0.46%)</title><rect x="974.5" y="1989" width="5.4" height="15.0" fill="rgb(222,215,26)" rx="2" ry="2" />
<text  x="977.53" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="424.3" y="1893" width="0.2" height="15.0" fill="rgb(209,144,16)" rx="2" ry="2" />
<text  x="427.34" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="652.4" y="2005" width="0.4" height="15.0" fill="rgb(250,215,15)" rx="2" ry="2" />
<text  x="655.42" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="824.9" y="1685" width="0.4" height="15.0" fill="rgb(216,220,27)" rx="2" ry="2" />
<text  x="827.88" y="1695.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="616.0" y="1973" width="0.2" height="15.0" fill="rgb(220,212,9)" rx="2" ry="2" />
<text  x="619.01" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="583.0" y="1749" width="0.2" height="15.0" fill="rgb(217,91,14)" rx="2" ry="2" />
<text  x="585.99" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="856.3" y="1909" width="0.2" height="15.0" fill="rgb(247,198,39)" rx="2" ry="2" />
<text  x="859.29" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (1 samples, 0.02%)</title><rect x="141.4" y="1941" width="0.2" height="15.0" fill="rgb(220,147,35)" rx="2" ry="2" />
<text  x="144.44" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="120.4" y="1205" width="0.2" height="15.0" fill="rgb(248,96,52)" rx="2" ry="2" />
<text  x="123.44" y="1215.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="916.1" y="1973" width="0.4" height="15.0" fill="rgb(235,134,42)" rx="2" ry="2" />
<text  x="919.11" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="118.4" y="229" width="0.2" height="15.0" fill="rgb(226,58,16)" rx="2" ry="2" />
<text  x="121.44" y="239.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="150.6" y="1765" width="0.2" height="15.0" fill="rgb(232,36,33)" rx="2" ry="2" />
<text  x="153.65" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="752.5" y="1461" width="0.2" height="15.0" fill="rgb(225,54,43)" rx="2" ry="2" />
<text  x="755.45" y="1471.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (3 samples, 0.05%)</title><rect x="840.7" y="1925" width="0.6" height="15.0" fill="rgb(232,202,54)" rx="2" ry="2" />
<text  x="843.68" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="153.8" y="1893" width="0.2" height="15.0" fill="rgb(224,160,30)" rx="2" ry="2" />
<text  x="156.85" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="711.4" y="1957" width="0.2" height="15.0" fill="rgb(223,148,50)" rx="2" ry="2" />
<text  x="714.44" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="556.4" y="1845" width="0.2" height="15.0" fill="rgb(253,97,30)" rx="2" ry="2" />
<text  x="559.39" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="74.8" y="1957" width="0.4" height="15.0" fill="rgb(235,204,43)" rx="2" ry="2" />
<text  x="77.82" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="590.4" y="1685" width="0.2" height="15.0" fill="rgb(219,148,53)" rx="2" ry="2" />
<text  x="593.40" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="648.4" y="1861" width="0.2" height="15.0" fill="rgb(237,24,21)" rx="2" ry="2" />
<text  x="651.42" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (44 samples, 0.75%)</title><rect x="1111.4" y="1621" width="8.8" height="15.0" fill="rgb(238,91,50)" rx="2" ry="2" />
<text  x="1114.37" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="914.9" y="1717" width="0.2" height="15.0" fill="rgb(250,103,16)" rx="2" ry="2" />
<text  x="917.91" y="1727.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1131.4" y="1925" width="0.8" height="15.0" fill="rgb(213,164,30)" rx="2" ry="2" />
<text  x="1134.38" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="567.4" y="1957" width="0.2" height="15.0" fill="rgb(245,119,3)" rx="2" ry="2" />
<text  x="570.39" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="942.9" y="1861" width="0.2" height="15.0" fill="rgb(208,96,14)" rx="2" ry="2" />
<text  x="945.92" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="523.0" y="1701" width="0.2" height="15.0" fill="rgb(232,132,41)" rx="2" ry="2" />
<text  x="525.97" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="623.4" y="1829" width="0.2" height="15.0" fill="rgb(210,18,31)" rx="2" ry="2" />
<text  x="626.41" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="875.3" y="1877" width="0.2" height="15.0" fill="rgb(214,4,41)" rx="2" ry="2" />
<text  x="878.29" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="405" width="15.2" height="15.0" fill="rgb(205,21,13)" rx="2" ry="2" />
<text  x="106.43" y="415.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1110.0" y="1813" width="0.2" height="15.0" fill="rgb(241,178,34)" rx="2" ry="2" />
<text  x="1112.97" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="430.1" y="1845" width="0.4" height="15.0" fill="rgb(244,125,0)" rx="2" ry="2" />
<text  x="433.14" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="504.6" y="1845" width="0.2" height="15.0" fill="rgb(234,3,21)" rx="2" ry="2" />
<text  x="507.57" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="530.2" y="1925" width="0.4" height="15.0" fill="rgb(220,83,34)" rx="2" ry="2" />
<text  x="533.18" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="66.6" y="1717" width="0.2" height="15.0" fill="rgb(246,108,26)" rx="2" ry="2" />
<text  x="69.62" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="115.2" y="53" width="0.2" height="15.0" fill="rgb(219,85,43)" rx="2" ry="2" />
<text  x="118.24" y="63.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="969.7" y="2021" width="0.8" height="15.0" fill="rgb(252,218,10)" rx="2" ry="2" />
<text  x="972.73" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="656.4" y="1973" width="0.2" height="15.0" fill="rgb(238,219,11)" rx="2" ry="2" />
<text  x="659.42" y="1983.5" ></text>
</g>
<g >
<title>__d_instantiate (4 samples, 0.07%)</title><rect x="425.7" y="1925" width="0.8" height="15.0" fill="rgb(248,77,26)" rx="2" ry="2" />
<text  x="428.74" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="595.2" y="1957" width="1.4" height="15.0" fill="rgb(215,187,53)" rx="2" ry="2" />
<text  x="598.20" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="967.7" y="2037" width="0.2" height="15.0" fill="rgb(224,86,12)" rx="2" ry="2" />
<text  x="970.72" y="2047.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="391.7" y="1941" width="0.2" height="15.0" fill="rgb(246,169,26)" rx="2" ry="2" />
<text  x="394.73" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="363.5" y="1893" width="0.2" height="15.0" fill="rgb(226,60,52)" rx="2" ry="2" />
<text  x="366.52" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="845.9" y="1909" width="0.4" height="15.0" fill="rgb(235,203,39)" rx="2" ry="2" />
<text  x="848.88" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="211.5" y="1621" width="0.2" height="15.0" fill="rgb(247,182,13)" rx="2" ry="2" />
<text  x="214.47" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="900.5" y="2037" width="0.4" height="15.0" fill="rgb(230,207,35)" rx="2" ry="2" />
<text  x="903.50" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="809.7" y="1477" width="0.4" height="15.0" fill="rgb(212,204,24)" rx="2" ry="2" />
<text  x="812.67" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="610.6" y="1733" width="0.2" height="15.0" fill="rgb(219,157,23)" rx="2" ry="2" />
<text  x="613.60" y="1743.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="504.6" y="1909" width="0.2" height="15.0" fill="rgb(208,132,36)" rx="2" ry="2" />
<text  x="507.57" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="523.0" y="1813" width="0.2" height="15.0" fill="rgb(237,172,51)" rx="2" ry="2" />
<text  x="525.97" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="561.0" y="1893" width="0.2" height="15.0" fill="rgb(235,77,17)" rx="2" ry="2" />
<text  x="563.99" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="173.1" y="1941" width="0.6" height="15.0" fill="rgb(244,93,9)" rx="2" ry="2" />
<text  x="176.06" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (1 samples, 0.02%)</title><rect x="583.4" y="2005" width="0.2" height="15.0" fill="rgb(242,36,2)" rx="2" ry="2" />
<text  x="586.39" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="472.0" y="1973" width="0.2" height="15.0" fill="rgb(214,122,37)" rx="2" ry="2" />
<text  x="474.96" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="954.7" y="1941" width="0.2" height="15.0" fill="rgb(230,174,19)" rx="2" ry="2" />
<text  x="957.72" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (9 samples, 0.15%)</title><rect x="920.7" y="1925" width="1.8" height="15.0" fill="rgb(217,225,13)" rx="2" ry="2" />
<text  x="923.71" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.4" y="1781" width="0.2" height="15.0" fill="rgb(219,107,36)" rx="2" ry="2" />
<text  x="124.44" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="117.6" y="37" width="0.2" height="15.0" fill="rgb(214,75,54)" rx="2" ry="2" />
<text  x="120.64" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1049.6" y="1973" width="0.2" height="15.0" fill="rgb(241,128,38)" rx="2" ry="2" />
<text  x="1052.55" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="981.7" y="1973" width="0.2" height="15.0" fill="rgb(227,167,48)" rx="2" ry="2" />
<text  x="984.73" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="229" width="14.6" height="15.0" fill="rgb(223,180,45)" rx="2" ry="2" />
<text  x="106.43" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="554.2" y="1973" width="0.2" height="15.0" fill="rgb(229,49,9)" rx="2" ry="2" />
<text  x="557.18" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="163.5" y="1989" width="0.4" height="15.0" fill="rgb(235,167,13)" rx="2" ry="2" />
<text  x="166.45" y="1999.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (2 samples, 0.03%)</title><rect x="429.1" y="1973" width="0.4" height="15.0" fill="rgb(238,201,45)" rx="2" ry="2" />
<text  x="432.14" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="321.5" y="1733" width="0.2" height="15.0" fill="rgb(232,105,27)" rx="2" ry="2" />
<text  x="324.51" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="623.4" y="1861" width="0.2" height="15.0" fill="rgb(216,80,41)" rx="2" ry="2" />
<text  x="626.41" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="751.3" y="1653" width="1.2" height="15.0" fill="rgb(254,74,2)" rx="2" ry="2" />
<text  x="754.25" y="1663.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="684.0" y="2005" width="0.2" height="15.0" fill="rgb(234,12,51)" rx="2" ry="2" />
<text  x="687.03" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="402.1" y="1685" width="0.2" height="15.0" fill="rgb(234,65,10)" rx="2" ry="2" />
<text  x="405.13" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="49.8" y="1957" width="0.2" height="15.0" fill="rgb(215,126,8)" rx="2" ry="2" />
<text  x="52.81" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="150.6" y="1909" width="0.2" height="15.0" fill="rgb(212,25,8)" rx="2" ry="2" />
<text  x="153.65" y="1919.5" ></text>
</g>
<g >
<title>sock_sendmsg (457 samples, 7.75%)</title><rect x="244.7" y="1941" width="91.4" height="15.0" fill="rgb(224,221,12)" rx="2" ry="2" />
<text  x="247.68" y="1951.5" >sock_sendmsg</text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="921.7" y="1813" width="0.8" height="15.0" fill="rgb(243,185,38)" rx="2" ry="2" />
<text  x="924.71" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="914.1" y="2005" width="1.0" height="15.0" fill="rgb(241,67,10)" rx="2" ry="2" />
<text  x="917.11" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="969.1" y="1813" width="0.4" height="15.0" fill="rgb(213,41,21)" rx="2" ry="2" />
<text  x="972.13" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.0" y="149" width="0.2" height="15.0" fill="rgb(244,45,7)" rx="2" ry="2" />
<text  x="121.04" y="159.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.02%)</title><rect x="12.4" y="2005" width="0.2" height="15.0" fill="rgb(218,67,45)" rx="2" ry="2" />
<text  x="15.40" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="57.2" y="1909" width="0.2" height="15.0" fill="rgb(219,153,15)" rx="2" ry="2" />
<text  x="60.22" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="546.4" y="1861" width="0.2" height="15.0" fill="rgb(225,133,5)" rx="2" ry="2" />
<text  x="549.38" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="980.7" y="1733" width="0.2" height="15.0" fill="rgb(232,110,32)" rx="2" ry="2" />
<text  x="983.73" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10 samples, 0.17%)</title><rect x="286.1" y="1637" width="2.0" height="15.0" fill="rgb(224,88,1)" rx="2" ry="2" />
<text  x="289.09" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="249.1" y="1893" width="0.2" height="15.0" fill="rgb(249,51,24)" rx="2" ry="2" />
<text  x="252.08" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="680.0" y="1797" width="0.2" height="15.0" fill="rgb(206,227,48)" rx="2" ry="2" />
<text  x="683.03" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="664.0" y="1733" width="0.2" height="15.0" fill="rgb(253,93,25)" rx="2" ry="2" />
<text  x="667.02" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1005.1" y="1749" width="0.2" height="15.0" fill="rgb(208,49,27)" rx="2" ry="2" />
<text  x="1008.14" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="118.0" y="85" width="0.2" height="15.0" fill="rgb(214,153,46)" rx="2" ry="2" />
<text  x="121.04" y="95.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="915.9" y="2005" width="0.2" height="15.0" fill="rgb(240,170,14)" rx="2" ry="2" />
<text  x="918.91" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="680.0" y="1685" width="0.2" height="15.0" fill="rgb(230,184,1)" rx="2" ry="2" />
<text  x="683.03" y="1695.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="150.8" y="1925" width="0.2" height="15.0" fill="rgb(235,90,18)" rx="2" ry="2" />
<text  x="153.85" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="165.3" y="1829" width="0.2" height="15.0" fill="rgb(243,151,27)" rx="2" ry="2" />
<text  x="168.25" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="707.8" y="1973" width="2.4" height="15.0" fill="rgb(229,131,14)" rx="2" ry="2" />
<text  x="710.84" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="755.5" y="1749" width="0.2" height="15.0" fill="rgb(245,220,43)" rx="2" ry="2" />
<text  x="758.45" y="1759.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="565.6" y="1669" width="0.2" height="15.0" fill="rgb(226,112,23)" rx="2" ry="2" />
<text  x="568.59" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="381.5" y="1877" width="0.2" height="15.0" fill="rgb(254,67,24)" rx="2" ry="2" />
<text  x="384.53" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="955.3" y="1973" width="0.4" height="15.0" fill="rgb(253,219,12)" rx="2" ry="2" />
<text  x="958.32" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="321.5" y="1605" width="0.2" height="15.0" fill="rgb(207,121,27)" rx="2" ry="2" />
<text  x="324.51" y="1615.5" ></text>
</g>
<g >
<title>tcp_write_xmit (205 samples, 3.48%)</title><rect x="776.7" y="1701" width="41.0" height="15.0" fill="rgb(206,76,44)" rx="2" ry="2" />
<text  x="779.66" y="1711.5" >tcp..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="587.6" y="1941" width="0.2" height="15.0" fill="rgb(234,138,7)" rx="2" ry="2" />
<text  x="590.60" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="512.0" y="1765" width="0.2" height="15.0" fill="rgb(225,196,33)" rx="2" ry="2" />
<text  x="514.97" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="627.8" y="1989" width="0.8" height="15.0" fill="rgb(209,1,23)" rx="2" ry="2" />
<text  x="630.81" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="564.6" y="1957" width="0.4" height="15.0" fill="rgb(211,82,46)" rx="2" ry="2" />
<text  x="567.59" y="1967.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="346.5" y="2037" width="0.2" height="15.0" fill="rgb(245,175,52)" rx="2" ry="2" />
<text  x="349.51" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="31.2" y="2005" width="0.2" height="15.0" fill="rgb(221,68,52)" rx="2" ry="2" />
<text  x="34.21" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (11 samples, 0.19%)</title><rect x="608.8" y="1861" width="2.2" height="15.0" fill="rgb(240,123,22)" rx="2" ry="2" />
<text  x="611.80" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="576.0" y="1653" width="0.2" height="15.0" fill="rgb(234,117,14)" rx="2" ry="2" />
<text  x="578.99" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="278.7" y="1573" width="0.2" height="15.0" fill="rgb(233,125,40)" rx="2" ry="2" />
<text  x="281.69" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (4 samples, 0.07%)</title><rect x="719.2" y="1989" width="0.8" height="15.0" fill="rgb(250,75,50)" rx="2" ry="2" />
<text  x="722.24" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="80.0" y="1717" width="0.2" height="15.0" fill="rgb(241,207,8)" rx="2" ry="2" />
<text  x="83.02" y="1727.5" ></text>
</g>
<g >
<title>kfree_skbmem (15 samples, 0.25%)</title><rect x="1065.6" y="1909" width="3.0" height="15.0" fill="rgb(239,37,33)" rx="2" ry="2" />
<text  x="1068.56" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1148.2" y="1957" width="0.2" height="15.0" fill="rgb(251,57,4)" rx="2" ry="2" />
<text  x="1151.19" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="74.6" y="1765" width="0.2" height="15.0" fill="rgb(244,121,2)" rx="2" ry="2" />
<text  x="77.62" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="120.4" y="1285" width="0.2" height="15.0" fill="rgb(250,166,49)" rx="2" ry="2" />
<text  x="123.44" y="1295.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="189.9" y="1733" width="0.2" height="15.0" fill="rgb(228,80,1)" rx="2" ry="2" />
<text  x="192.86" y="1743.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="502.4" y="1957" width="0.2" height="15.0" fill="rgb(206,220,17)" rx="2" ry="2" />
<text  x="505.37" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="211.5" y="1701" width="0.2" height="15.0" fill="rgb(218,92,34)" rx="2" ry="2" />
<text  x="214.47" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="553.8" y="1973" width="0.4" height="15.0" fill="rgb(236,229,5)" rx="2" ry="2" />
<text  x="556.78" y="1983.5" ></text>
</g>
<g >
<title>SYSC_getsockname (1 samples, 0.02%)</title><rect x="603.2" y="1893" width="0.2" height="15.0" fill="rgb(221,99,51)" rx="2" ry="2" />
<text  x="606.20" y="1903.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="114.6" y="69" width="0.2" height="15.0" fill="rgb(229,94,9)" rx="2" ry="2" />
<text  x="117.64" y="79.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1067.8" y="1749" width="0.4" height="15.0" fill="rgb(221,11,17)" rx="2" ry="2" />
<text  x="1070.76" y="1759.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="316.7" y="1813" width="0.2" height="15.0" fill="rgb(210,193,44)" rx="2" ry="2" />
<text  x="319.70" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="79.4" y="1813" width="0.2" height="15.0" fill="rgb(209,180,3)" rx="2" ry="2" />
<text  x="82.42" y="1823.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1146.4" y="1957" width="0.2" height="15.0" fill="rgb(233,48,29)" rx="2" ry="2" />
<text  x="1149.39" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="152.2" y="1877" width="0.2" height="15.0" fill="rgb(223,145,38)" rx="2" ry="2" />
<text  x="155.25" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="339.5" y="1861" width="0.6" height="15.0" fill="rgb(247,15,27)" rx="2" ry="2" />
<text  x="342.51" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="834.1" y="1749" width="0.2" height="15.0" fill="rgb(228,51,30)" rx="2" ry="2" />
<text  x="837.08" y="1759.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="321.5" y="1461" width="0.2" height="15.0" fill="rgb(241,197,29)" rx="2" ry="2" />
<text  x="324.51" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1125.6" y="1669" width="0.2" height="15.0" fill="rgb(211,144,39)" rx="2" ry="2" />
<text  x="1128.58" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="890.5" y="1781" width="0.2" height="15.0" fill="rgb(245,139,8)" rx="2" ry="2" />
<text  x="893.50" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="835.5" y="1893" width="0.4" height="15.0" fill="rgb(223,93,34)" rx="2" ry="2" />
<text  x="838.48" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="408.1" y="1813" width="0.2" height="15.0" fill="rgb(245,112,47)" rx="2" ry="2" />
<text  x="411.13" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="346.7" y="2037" width="1.0" height="15.0" fill="rgb(208,84,16)" rx="2" ry="2" />
<text  x="349.71" y="2047.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="151.6" y="1893" width="0.2" height="15.0" fill="rgb(216,172,19)" rx="2" ry="2" />
<text  x="154.65" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1120.2" y="1621" width="0.2" height="15.0" fill="rgb(252,154,28)" rx="2" ry="2" />
<text  x="1123.18" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="923.9" y="1941" width="0.2" height="15.0" fill="rgb(224,53,41)" rx="2" ry="2" />
<text  x="926.91" y="1951.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="992.7" y="1925" width="0.2" height="15.0" fill="rgb(238,69,4)" rx="2" ry="2" />
<text  x="995.73" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="271.9" y="1669" width="0.4" height="15.0" fill="rgb(227,61,18)" rx="2" ry="2" />
<text  x="274.89" y="1679.5" ></text>
</g>
<g >
<title>__slab_free (10 samples, 0.17%)</title><rect x="1116.4" y="1429" width="2.0" height="15.0" fill="rgb(238,22,47)" rx="2" ry="2" />
<text  x="1119.38" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="408.1" y="1717" width="0.2" height="15.0" fill="rgb(231,179,14)" rx="2" ry="2" />
<text  x="411.13" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1016.1" y="2005" width="0.2" height="15.0" fill="rgb(208,80,42)" rx="2" ry="2" />
<text  x="1019.14" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1301" width="16.0" height="15.0" fill="rgb(220,227,47)" rx="2" ry="2" />
<text  x="106.23" y="1311.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1054.2" y="1941" width="0.2" height="15.0" fill="rgb(214,226,30)" rx="2" ry="2" />
<text  x="1057.15" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1189.0" y="1573" width="0.2" height="15.0" fill="rgb(214,3,33)" rx="2" ry="2" />
<text  x="1192.00" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="913.5" y="1925" width="0.2" height="15.0" fill="rgb(239,104,0)" rx="2" ry="2" />
<text  x="916.51" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="787.9" y="1125" width="0.2" height="15.0" fill="rgb(246,36,45)" rx="2" ry="2" />
<text  x="790.86" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (82 samples, 1.39%)</title><rect x="509.4" y="2005" width="16.4" height="15.0" fill="rgb(211,104,6)" rx="2" ry="2" />
<text  x="512.37" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1120.2" y="1829" width="0.2" height="15.0" fill="rgb(243,80,29)" rx="2" ry="2" />
<text  x="1123.18" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="890.5" y="1813" width="0.2" height="15.0" fill="rgb(222,30,30)" rx="2" ry="2" />
<text  x="893.50" y="1823.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="308.1" y="1541" width="0.2" height="15.0" fill="rgb(227,26,46)" rx="2" ry="2" />
<text  x="311.10" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="120.4" y="1221" width="0.2" height="15.0" fill="rgb(212,192,47)" rx="2" ry="2" />
<text  x="123.44" y="1231.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="525.6" y="1749" width="0.2" height="15.0" fill="rgb(222,218,49)" rx="2" ry="2" />
<text  x="528.57" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="531.8" y="1845" width="0.2" height="15.0" fill="rgb(230,77,24)" rx="2" ry="2" />
<text  x="534.78" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="217.9" y="1861" width="0.2" height="15.0" fill="rgb(205,28,21)" rx="2" ry="2" />
<text  x="220.87" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="624.6" y="1829" width="0.6" height="15.0" fill="rgb(209,153,33)" rx="2" ry="2" />
<text  x="627.61" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="623.4" y="1669" width="0.2" height="15.0" fill="rgb(211,161,46)" rx="2" ry="2" />
<text  x="626.41" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (2 samples, 0.03%)</title><rect x="869.7" y="2005" width="0.4" height="15.0" fill="rgb(244,178,41)" rx="2" ry="2" />
<text  x="872.69" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (48 samples, 0.81%)</title><rect x="1110.6" y="1861" width="9.6" height="15.0" fill="rgb(237,56,6)" rx="2" ry="2" />
<text  x="1113.57" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (5 samples, 0.08%)</title><rect x="667.0" y="1973" width="1.0" height="15.0" fill="rgb(206,161,34)" rx="2" ry="2" />
<text  x="670.02" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="117.0" y="53" width="0.4" height="15.0" fill="rgb(205,73,50)" rx="2" ry="2" />
<text  x="120.04" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="164.5" y="1957" width="1.0" height="15.0" fill="rgb(207,141,47)" rx="2" ry="2" />
<text  x="167.45" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="328.7" y="1573" width="0.2" height="15.0" fill="rgb(223,119,22)" rx="2" ry="2" />
<text  x="331.71" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="575.8" y="1749" width="0.4" height="15.0" fill="rgb(205,32,2)" rx="2" ry="2" />
<text  x="578.79" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="680.0" y="1621" width="0.2" height="15.0" fill="rgb(248,82,51)" rx="2" ry="2" />
<text  x="683.03" y="1631.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (1 samples, 0.02%)</title><rect x="93.0" y="2021" width="0.2" height="15.0" fill="rgb(205,85,43)" rx="2" ry="2" />
<text  x="96.03" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="683.8" y="1957" width="0.2" height="15.0" fill="rgb(210,178,30)" rx="2" ry="2" />
<text  x="686.83" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="890.1" y="1733" width="0.2" height="15.0" fill="rgb(239,89,13)" rx="2" ry="2" />
<text  x="893.10" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (2 samples, 0.03%)</title><rect x="555.4" y="1973" width="0.4" height="15.0" fill="rgb(235,229,47)" rx="2" ry="2" />
<text  x="558.38" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.5" y="2005" width="0.2" height="15.0" fill="rgb(243,106,22)" rx="2" ry="2" />
<text  x="232.47" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="249.1" y="1781" width="0.2" height="15.0" fill="rgb(241,58,33)" rx="2" ry="2" />
<text  x="252.08" y="1791.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="529.2" y="1925" width="0.2" height="15.0" fill="rgb(242,182,53)" rx="2" ry="2" />
<text  x="532.18" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="950.7" y="1989" width="2.6" height="15.0" fill="rgb(230,30,7)" rx="2" ry="2" />
<text  x="953.72" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="363.5" y="1925" width="0.2" height="15.0" fill="rgb(219,49,17)" rx="2" ry="2" />
<text  x="366.52" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1145.2" y="2021" width="0.2" height="15.0" fill="rgb(250,56,26)" rx="2" ry="2" />
<text  x="1148.18" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.6" y="1861" width="0.2" height="15.0" fill="rgb(230,202,20)" rx="2" ry="2" />
<text  x="125.64" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="992.7" y="2021" width="0.2" height="15.0" fill="rgb(213,116,18)" rx="2" ry="2" />
<text  x="995.73" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1120.2" y="1637" width="0.2" height="15.0" fill="rgb(253,158,48)" rx="2" ry="2" />
<text  x="1123.18" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="929.1" y="1877" width="0.4" height="15.0" fill="rgb(242,155,20)" rx="2" ry="2" />
<text  x="932.11" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="866.9" y="1941" width="0.2" height="15.0" fill="rgb(228,177,24)" rx="2" ry="2" />
<text  x="869.89" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="102.8" y="1733" width="0.2" height="15.0" fill="rgb(221,1,9)" rx="2" ry="2" />
<text  x="105.83" y="1743.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="635.4" y="1957" width="0.2" height="15.0" fill="rgb(221,40,30)" rx="2" ry="2" />
<text  x="638.41" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (11 samples, 0.19%)</title><rect x="489.6" y="1941" width="2.2" height="15.0" fill="rgb(247,73,51)" rx="2" ry="2" />
<text  x="492.56" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (37 samples, 0.63%)</title><rect x="642.4" y="1973" width="7.4" height="15.0" fill="rgb(242,143,38)" rx="2" ry="2" />
<text  x="645.41" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="246.5" y="1893" width="0.2" height="15.0" fill="rgb(212,225,54)" rx="2" ry="2" />
<text  x="249.48" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="889.1" y="1557" width="0.2" height="15.0" fill="rgb(254,22,22)" rx="2" ry="2" />
<text  x="892.10" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="80.0" y="1653" width="0.2" height="15.0" fill="rgb(237,38,17)" rx="2" ry="2" />
<text  x="83.02" y="1663.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1120.2" y="1461" width="0.2" height="15.0" fill="rgb(213,14,28)" rx="2" ry="2" />
<text  x="1123.18" y="1471.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="54.2" y="1861" width="0.2" height="15.0" fill="rgb(245,204,50)" rx="2" ry="2" />
<text  x="57.21" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.2" y="1861" width="0.8" height="15.0" fill="rgb(221,190,52)" rx="2" ry="2" />
<text  x="14.20" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1189.0" y="1685" width="0.2" height="15.0" fill="rgb(211,140,10)" rx="2" ry="2" />
<text  x="1192.00" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (1 samples, 0.02%)</title><rect x="63.0" y="1989" width="0.2" height="15.0" fill="rgb(239,47,33)" rx="2" ry="2" />
<text  x="66.02" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="809.7" y="1381" width="0.4" height="15.0" fill="rgb(249,10,46)" rx="2" ry="2" />
<text  x="812.67" y="1391.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (4 samples, 0.07%)</title><rect x="70.0" y="1909" width="0.8" height="15.0" fill="rgb(237,195,5)" rx="2" ry="2" />
<text  x="73.02" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="221.5" y="1893" width="0.2" height="15.0" fill="rgb(231,53,43)" rx="2" ry="2" />
<text  x="224.47" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="697.6" y="1765" width="0.2" height="15.0" fill="rgb(252,130,7)" rx="2" ry="2" />
<text  x="700.63" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="955.3" y="2005" width="0.4" height="15.0" fill="rgb(207,227,8)" rx="2" ry="2" />
<text  x="958.32" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="969.1" y="1669" width="0.2" height="15.0" fill="rgb(243,69,24)" rx="2" ry="2" />
<text  x="972.13" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="739.4" y="1557" width="0.2" height="15.0" fill="rgb(232,7,42)" rx="2" ry="2" />
<text  x="742.45" y="1567.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.02%)</title><rect x="249.7" y="1893" width="0.2" height="15.0" fill="rgb(211,172,7)" rx="2" ry="2" />
<text  x="252.68" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="626.2" y="1925" width="0.2" height="15.0" fill="rgb(223,95,28)" rx="2" ry="2" />
<text  x="629.21" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1149.8" y="1909" width="0.2" height="15.0" fill="rgb(226,3,38)" rx="2" ry="2" />
<text  x="1152.79" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1016.1" y="1957" width="0.2" height="15.0" fill="rgb(249,65,43)" rx="2" ry="2" />
<text  x="1019.14" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="175.5" y="1973" width="0.2" height="15.0" fill="rgb(234,28,32)" rx="2" ry="2" />
<text  x="178.46" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="525.6" y="1797" width="0.2" height="15.0" fill="rgb(231,145,44)" rx="2" ry="2" />
<text  x="528.57" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (14 samples, 0.24%)</title><rect x="886.5" y="1957" width="2.8" height="15.0" fill="rgb(233,109,53)" rx="2" ry="2" />
<text  x="889.50" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="648.4" y="1621" width="0.2" height="15.0" fill="rgb(236,150,10)" rx="2" ry="2" />
<text  x="651.42" y="1631.5" ></text>
</g>
<g >
<title>copy_page_to_iter (7 samples, 0.12%)</title><rect x="1101.4" y="1909" width="1.4" height="15.0" fill="rgb(212,69,17)" rx="2" ry="2" />
<text  x="1104.37" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (8 samples, 0.14%)</title><rect x="164.3" y="2021" width="1.6" height="15.0" fill="rgb(205,214,50)" rx="2" ry="2" />
<text  x="167.25" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="955.7" y="2005" width="0.6" height="15.0" fill="rgb(230,188,22)" rx="2" ry="2" />
<text  x="958.72" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="80.0" y="1909" width="0.2" height="15.0" fill="rgb(211,150,3)" rx="2" ry="2" />
<text  x="83.02" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="80.0" y="1749" width="0.2" height="15.0" fill="rgb(245,52,54)" rx="2" ry="2" />
<text  x="83.02" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="307.9" y="1717" width="0.4" height="15.0" fill="rgb(235,139,1)" rx="2" ry="2" />
<text  x="310.90" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="824.9" y="1605" width="0.4" height="15.0" fill="rgb(224,76,51)" rx="2" ry="2" />
<text  x="827.88" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="712.4" y="1893" width="0.2" height="15.0" fill="rgb(225,128,32)" rx="2" ry="2" />
<text  x="715.44" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="712.4" y="1845" width="0.2" height="15.0" fill="rgb(236,18,49)" rx="2" ry="2" />
<text  x="715.44" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="306.5" y="1589" width="0.2" height="15.0" fill="rgb(217,108,51)" rx="2" ry="2" />
<text  x="309.50" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (41 samples, 0.70%)</title><rect x="166.3" y="2021" width="8.2" height="15.0" fill="rgb(225,27,14)" rx="2" ry="2" />
<text  x="169.25" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="273.1" y="1781" width="0.2" height="15.0" fill="rgb(254,75,45)" rx="2" ry="2" />
<text  x="276.09" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (100 samples, 1.70%)</title><rect x="664.8" y="2037" width="20.0" height="15.0" fill="rgb(242,53,5)" rx="2" ry="2" />
<text  x="667.82" y="2047.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (86 samples, 1.46%)</title><rect x="1103.2" y="1925" width="17.2" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="1106.17" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="66.2" y="1957" width="0.2" height="15.0" fill="rgb(206,111,9)" rx="2" ry="2" />
<text  x="69.22" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="587.4" y="1941" width="0.2" height="15.0" fill="rgb(250,191,3)" rx="2" ry="2" />
<text  x="590.40" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="99.2" y="2005" width="0.4" height="15.0" fill="rgb(205,119,17)" rx="2" ry="2" />
<text  x="102.23" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="453.2" y="1957" width="0.8" height="15.0" fill="rgb(217,29,13)" rx="2" ry="2" />
<text  x="456.15" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1033.3" y="1973" width="0.2" height="15.0" fill="rgb(217,150,21)" rx="2" ry="2" />
<text  x="1036.35" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="223.1" y="1717" width="0.2" height="15.0" fill="rgb(227,132,21)" rx="2" ry="2" />
<text  x="226.07" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="987.5" y="1893" width="0.2" height="15.0" fill="rgb(227,84,7)" rx="2" ry="2" />
<text  x="990.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1005.1" y="1733" width="0.2" height="15.0" fill="rgb(218,164,6)" rx="2" ry="2" />
<text  x="1008.14" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="470.6" y="1893" width="0.2" height="15.0" fill="rgb(221,199,40)" rx="2" ry="2" />
<text  x="473.56" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="916.5" y="1893" width="0.2" height="15.0" fill="rgb(237,198,47)" rx="2" ry="2" />
<text  x="919.51" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="157.4" y="1685" width="0.3" height="15.0" fill="rgb(215,204,2)" rx="2" ry="2" />
<text  x="160.45" y="1695.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="842.3" y="1717" width="0.6" height="15.0" fill="rgb(212,152,9)" rx="2" ry="2" />
<text  x="845.28" y="1727.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="842.1" y="1813" width="0.8" height="15.0" fill="rgb(228,96,0)" rx="2" ry="2" />
<text  x="845.08" y="1823.5" ></text>
</g>
<g >
<title>sys_fcntl (3 samples, 0.05%)</title><rect x="578.0" y="1957" width="0.6" height="15.0" fill="rgb(212,10,29)" rx="2" ry="2" />
<text  x="580.99" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="843.5" y="1653" width="0.2" height="15.0" fill="rgb(239,36,4)" rx="2" ry="2" />
<text  x="846.48" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="541.8" y="1989" width="0.8" height="15.0" fill="rgb(236,173,18)" rx="2" ry="2" />
<text  x="544.78" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="935.3" y="1909" width="0.2" height="15.0" fill="rgb(208,123,5)" rx="2" ry="2" />
<text  x="938.31" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="889.1" y="1797" width="0.2" height="15.0" fill="rgb(238,32,22)" rx="2" ry="2" />
<text  x="892.10" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="586.4" y="2005" width="0.6" height="15.0" fill="rgb(233,119,6)" rx="2" ry="2" />
<text  x="589.40" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="626.2" y="1749" width="0.2" height="15.0" fill="rgb(214,19,5)" rx="2" ry="2" />
<text  x="629.21" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (36 samples, 0.61%)</title><rect x="1172.2" y="2021" width="7.2" height="15.0" fill="rgb(251,22,44)" rx="2" ry="2" />
<text  x="1175.19" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="936.3" y="1909" width="0.2" height="15.0" fill="rgb(225,20,48)" rx="2" ry="2" />
<text  x="939.31" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="527.0" y="2037" width="0.2" height="15.0" fill="rgb(226,85,27)" rx="2" ry="2" />
<text  x="529.98" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="271.9" y="1781" width="0.4" height="15.0" fill="rgb(239,30,28)" rx="2" ry="2" />
<text  x="274.89" y="1791.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="486.6" y="1925" width="0.2" height="15.0" fill="rgb(247,225,18)" rx="2" ry="2" />
<text  x="489.56" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="483.6" y="1573" width="0.2" height="15.0" fill="rgb(215,45,32)" rx="2" ry="2" />
<text  x="486.56" y="1583.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="893.9" y="1957" width="0.2" height="15.0" fill="rgb(251,146,5)" rx="2" ry="2" />
<text  x="896.90" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="428.5" y="1829" width="0.2" height="15.0" fill="rgb(254,174,47)" rx="2" ry="2" />
<text  x="431.54" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="942.9" y="1813" width="0.2" height="15.0" fill="rgb(238,10,21)" rx="2" ry="2" />
<text  x="945.92" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="880.3" y="1925" width="0.2" height="15.0" fill="rgb(240,186,26)" rx="2" ry="2" />
<text  x="883.30" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="222.9" y="1941" width="0.2" height="15.0" fill="rgb(206,63,47)" rx="2" ry="2" />
<text  x="225.87" y="1951.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="70.6" y="1877" width="0.2" height="15.0" fill="rgb(240,212,48)" rx="2" ry="2" />
<text  x="73.62" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="147.2" y="1877" width="0.8" height="15.0" fill="rgb(210,36,34)" rx="2" ry="2" />
<text  x="150.25" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="751.9" y="1637" width="0.2" height="15.0" fill="rgb(251,200,31)" rx="2" ry="2" />
<text  x="754.85" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1126.2" y="1813" width="0.2" height="15.0" fill="rgb(228,85,44)" rx="2" ry="2" />
<text  x="1129.18" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="80.0" y="1685" width="0.2" height="15.0" fill="rgb(231,82,7)" rx="2" ry="2" />
<text  x="83.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.03%)</title><rect x="83.6" y="1909" width="0.4" height="15.0" fill="rgb(241,132,46)" rx="2" ry="2" />
<text  x="86.62" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="321.5" y="1557" width="0.2" height="15.0" fill="rgb(233,18,36)" rx="2" ry="2" />
<text  x="324.51" y="1567.5" ></text>
</g>
<g >
<title>sys_sendmsg (502 samples, 8.51%)</title><rect x="239.9" y="1989" width="100.4" height="15.0" fill="rgb(219,151,53)" rx="2" ry="2" />
<text  x="242.88" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="10.2" y="1973" width="0.8" height="15.0" fill="rgb(235,149,7)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="528.8" y="1941" width="0.6" height="15.0" fill="rgb(241,143,51)" rx="2" ry="2" />
<text  x="531.78" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (6 samples, 0.10%)</title><rect x="546.0" y="2037" width="1.2" height="15.0" fill="rgb(251,222,51)" rx="2" ry="2" />
<text  x="548.98" y="2047.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (30 samples, 0.51%)</title><rect x="698.6" y="1893" width="6.0" height="15.0" fill="rgb(254,116,5)" rx="2" ry="2" />
<text  x="701.63" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="312.7" y="1717" width="0.2" height="15.0" fill="rgb(221,68,37)" rx="2" ry="2" />
<text  x="315.70" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="964.9" y="1973" width="0.2" height="15.0" fill="rgb(215,117,12)" rx="2" ry="2" />
<text  x="967.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1573" width="0.2" height="15.0" fill="rgb(208,186,9)" rx="2" ry="2" />
<text  x="267.69" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="1130.2" y="1973" width="0.8" height="15.0" fill="rgb(251,183,6)" rx="2" ry="2" />
<text  x="1133.18" y="1983.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (12 samples, 0.20%)</title><rect x="704.6" y="1925" width="2.4" height="15.0" fill="rgb(205,3,4)" rx="2" ry="2" />
<text  x="707.64" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.1" y="1285" width="0.2" height="15.0" fill="rgb(213,106,8)" rx="2" ry="2" />
<text  x="828.08" y="1295.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="12.6" y="1861" width="0.8" height="15.0" fill="rgb(215,41,15)" rx="2" ry="2" />
<text  x="15.60" y="1871.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="886.1" y="1749" width="0.2" height="15.0" fill="rgb(216,87,36)" rx="2" ry="2" />
<text  x="889.10" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="103.0" y="1685" width="17.6" height="15.0" fill="rgb(231,55,54)" rx="2" ry="2" />
<text  x="106.03" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="704.4" y="1653" width="0.2" height="15.0" fill="rgb(227,5,31)" rx="2" ry="2" />
<text  x="707.44" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="765.5" y="1717" width="0.4" height="15.0" fill="rgb(235,7,11)" rx="2" ry="2" />
<text  x="768.46" y="1727.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (70 samples, 1.19%)</title><rect x="511.8" y="1925" width="14.0" height="15.0" fill="rgb(235,121,25)" rx="2" ry="2" />
<text  x="514.77" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (6 samples, 0.10%)</title><rect x="131.4" y="1957" width="1.2" height="15.0" fill="rgb(220,2,50)" rx="2" ry="2" />
<text  x="134.44" y="1967.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (6 samples, 0.10%)</title><rect x="537.6" y="1941" width="1.2" height="15.0" fill="rgb(251,170,6)" rx="2" ry="2" />
<text  x="540.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="306.5" y="1557" width="0.2" height="15.0" fill="rgb(246,171,5)" rx="2" ry="2" />
<text  x="309.50" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="143.4" y="1925" width="0.2" height="15.0" fill="rgb(242,130,49)" rx="2" ry="2" />
<text  x="146.45" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.8" y="1909" width="0.2" height="15.0" fill="rgb(248,111,10)" rx="2" ry="2" />
<text  x="538.78" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="518.8" y="1717" width="0.4" height="15.0" fill="rgb(209,118,34)" rx="2" ry="2" />
<text  x="521.77" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="649.4" y="1925" width="0.2" height="15.0" fill="rgb(239,194,1)" rx="2" ry="2" />
<text  x="652.42" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (1 samples, 0.02%)</title><rect x="72.8" y="1957" width="0.2" height="15.0" fill="rgb(244,121,53)" rx="2" ry="2" />
<text  x="75.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="970.9" y="2005" width="0.2" height="15.0" fill="rgb(226,5,3)" rx="2" ry="2" />
<text  x="973.93" y="2015.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (56 samples, 0.95%)</title><rect x="743.2" y="1749" width="11.3" height="15.0" fill="rgb(235,31,0)" rx="2" ry="2" />
<text  x="746.25" y="1759.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="80.0" y="1589" width="0.2" height="15.0" fill="rgb(234,80,36)" rx="2" ry="2" />
<text  x="83.02" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="603.4" y="1621" width="0.2" height="15.0" fill="rgb(245,208,10)" rx="2" ry="2" />
<text  x="606.40" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="900.9" y="2021" width="1.0" height="15.0" fill="rgb(244,209,11)" rx="2" ry="2" />
<text  x="903.90" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="889.1" y="1621" width="0.2" height="15.0" fill="rgb(241,31,34)" rx="2" ry="2" />
<text  x="892.10" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="887.5" y="1893" width="0.2" height="15.0" fill="rgb(243,202,44)" rx="2" ry="2" />
<text  x="890.50" y="1903.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.07%)</title><rect x="196.7" y="2005" width="0.8" height="15.0" fill="rgb(207,214,26)" rx="2" ry="2" />
<text  x="199.66" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="704.4" y="1717" width="0.2" height="15.0" fill="rgb(239,136,18)" rx="2" ry="2" />
<text  x="707.44" y="1727.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1001.5" y="2021" width="0.2" height="15.0" fill="rgb(212,34,44)" rx="2" ry="2" />
<text  x="1004.54" y="2031.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="328.9" y="1781" width="0.2" height="15.0" fill="rgb(250,185,26)" rx="2" ry="2" />
<text  x="331.91" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1137.4" y="2021" width="0.4" height="15.0" fill="rgb(236,214,26)" rx="2" ry="2" />
<text  x="1140.38" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="321.5" y="1749" width="0.2" height="15.0" fill="rgb(216,97,50)" rx="2" ry="2" />
<text  x="324.51" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="139.4" y="1909" width="0.2" height="15.0" fill="rgb(236,4,43)" rx="2" ry="2" />
<text  x="142.44" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="333.3" y="1781" width="0.2" height="15.0" fill="rgb(208,227,5)" rx="2" ry="2" />
<text  x="336.31" y="1791.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="831.9" y="1557" width="0.2" height="15.0" fill="rgb(235,148,22)" rx="2" ry="2" />
<text  x="834.88" y="1567.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (8 samples, 0.14%)</title><rect x="91.0" y="2005" width="1.6" height="15.0" fill="rgb(230,17,48)" rx="2" ry="2" />
<text  x="94.03" y="2015.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="996.1" y="1941" width="0.2" height="15.0" fill="rgb(206,193,31)" rx="2" ry="2" />
<text  x="999.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="905.5" y="1973" width="0.8" height="15.0" fill="rgb(234,178,39)" rx="2" ry="2" />
<text  x="908.50" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="590.4" y="1957" width="0.2" height="15.0" fill="rgb(231,193,38)" rx="2" ry="2" />
<text  x="593.40" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1142.0" y="1877" width="0.2" height="15.0" fill="rgb(208,120,14)" rx="2" ry="2" />
<text  x="1144.98" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="996.5" y="1957" width="0.6" height="15.0" fill="rgb(247,159,0)" rx="2" ry="2" />
<text  x="999.53" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="531.8" y="1781" width="0.2" height="15.0" fill="rgb(207,190,0)" rx="2" ry="2" />
<text  x="534.78" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="860.1" y="1733" width="0.2" height="15.0" fill="rgb(241,216,40)" rx="2" ry="2" />
<text  x="863.09" y="1743.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="656.4" y="1989" width="0.2" height="15.0" fill="rgb(242,141,35)" rx="2" ry="2" />
<text  x="659.42" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="54.2" y="1813" width="0.2" height="15.0" fill="rgb(224,133,19)" rx="2" ry="2" />
<text  x="57.21" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="335.9" y="1925" width="0.2" height="15.0" fill="rgb(215,201,39)" rx="2" ry="2" />
<text  x="338.91" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="83.4" y="1925" width="0.6" height="15.0" fill="rgb(253,179,27)" rx="2" ry="2" />
<text  x="86.42" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="853.1" y="1909" width="1.6" height="15.0" fill="rgb(239,195,30)" rx="2" ry="2" />
<text  x="856.09" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (285 samples, 4.83%)</title><rect x="101.8" y="2021" width="57.1" height="15.0" fill="rgb(249,93,5)" rx="2" ry="2" />
<text  x="104.83" y="2031.5" >[unkno..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="835.7" y="1653" width="0.2" height="15.0" fill="rgb(232,126,48)" rx="2" ry="2" />
<text  x="838.68" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="483.6" y="1813" width="0.2" height="15.0" fill="rgb(212,63,6)" rx="2" ry="2" />
<text  x="486.56" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="74.6" y="1701" width="0.2" height="15.0" fill="rgb(222,93,24)" rx="2" ry="2" />
<text  x="77.62" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="875.3" y="1957" width="0.2" height="15.0" fill="rgb(230,114,10)" rx="2" ry="2" />
<text  x="878.29" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="719.6" y="1877" width="0.4" height="15.0" fill="rgb(242,229,11)" rx="2" ry="2" />
<text  x="722.64" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="896.9" y="1973" width="0.2" height="15.0" fill="rgb(215,140,16)" rx="2" ry="2" />
<text  x="899.90" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (12 samples, 0.20%)</title><rect x="47.4" y="1957" width="2.4" height="15.0" fill="rgb(223,55,46)" rx="2" ry="2" />
<text  x="50.41" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="753.9" y="1573" width="0.2" height="15.0" fill="rgb(229,25,9)" rx="2" ry="2" />
<text  x="756.85" y="1583.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="336.7" y="1637" width="0.2" height="15.0" fill="rgb(226,40,8)" rx="2" ry="2" />
<text  x="339.71" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="1021.7" y="2037" width="0.2" height="15.0" fill="rgb(212,168,15)" rx="2" ry="2" />
<text  x="1024.74" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (6 samples, 0.10%)</title><rect x="773.9" y="1701" width="1.2" height="15.0" fill="rgb(254,15,23)" rx="2" ry="2" />
<text  x="776.86" y="1711.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="298.7" y="1621" width="0.2" height="15.0" fill="rgb(239,91,43)" rx="2" ry="2" />
<text  x="301.70" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1016.1" y="1909" width="0.2" height="15.0" fill="rgb(219,15,27)" rx="2" ry="2" />
<text  x="1019.14" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="518.8" y="1765" width="0.4" height="15.0" fill="rgb(233,14,5)" rx="2" ry="2" />
<text  x="521.77" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="150.6" y="1701" width="0.2" height="15.0" fill="rgb(207,213,22)" rx="2" ry="2" />
<text  x="153.65" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="333.3" y="1877" width="0.2" height="15.0" fill="rgb(231,209,27)" rx="2" ry="2" />
<text  x="336.31" y="1887.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (6 samples, 0.10%)</title><rect x="745.0" y="1717" width="1.2" height="15.0" fill="rgb(241,39,37)" rx="2" ry="2" />
<text  x="748.05" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1049.6" y="1877" width="0.2" height="15.0" fill="rgb(235,222,42)" rx="2" ry="2" />
<text  x="1052.55" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="848.5" y="1733" width="0.2" height="15.0" fill="rgb(224,193,28)" rx="2" ry="2" />
<text  x="851.48" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="51.4" y="1893" width="0.2" height="15.0" fill="rgb(235,32,10)" rx="2" ry="2" />
<text  x="54.41" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (107 samples, 1.81%)</title><rect x="970.9" y="2037" width="21.4" height="15.0" fill="rgb(254,71,28)" rx="2" ry="2" />
<text  x="973.93" y="2047.5" >f..</text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="966.7" y="2037" width="0.2" height="15.0" fill="rgb(239,165,20)" rx="2" ry="2" />
<text  x="969.72" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::recv (13 samples, 0.22%)</title><rect x="50.0" y="1957" width="2.6" height="15.0" fill="rgb(234,42,27)" rx="2" ry="2" />
<text  x="53.01" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="332.5" y="1813" width="0.2" height="15.0" fill="rgb(236,79,8)" rx="2" ry="2" />
<text  x="335.51" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="157.4" y="1733" width="0.3" height="15.0" fill="rgb(234,149,40)" rx="2" ry="2" />
<text  x="160.45" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="565.8" y="1749" width="0.2" height="15.0" fill="rgb(228,74,10)" rx="2" ry="2" />
<text  x="568.79" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="118.6" y="421" width="0.2" height="15.0" fill="rgb(239,169,4)" rx="2" ry="2" />
<text  x="121.64" y="431.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="482.8" y="1765" width="0.6" height="15.0" fill="rgb(246,187,49)" rx="2" ry="2" />
<text  x="485.76" y="1775.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="711.4" y="1845" width="0.2" height="15.0" fill="rgb(213,30,46)" rx="2" ry="2" />
<text  x="714.44" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="173.7" y="1989" width="0.8" height="15.0" fill="rgb(214,64,8)" rx="2" ry="2" />
<text  x="176.66" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1091.2" y="1893" width="0.6" height="15.0" fill="rgb(253,162,29)" rx="2" ry="2" />
<text  x="1094.17" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="712.4" y="1781" width="0.2" height="15.0" fill="rgb(224,157,13)" rx="2" ry="2" />
<text  x="715.44" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="430.1" y="1813" width="0.4" height="15.0" fill="rgb(233,222,37)" rx="2" ry="2" />
<text  x="433.14" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (54 samples, 0.92%)</title><rect x="616.8" y="2005" width="10.8" height="15.0" fill="rgb(222,66,27)" rx="2" ry="2" />
<text  x="619.81" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="648.4" y="1685" width="0.2" height="15.0" fill="rgb(242,184,32)" rx="2" ry="2" />
<text  x="651.42" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="54.2" y="1909" width="0.2" height="15.0" fill="rgb(244,70,5)" rx="2" ry="2" />
<text  x="57.21" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="79.4" y="1829" width="0.2" height="15.0" fill="rgb(211,178,47)" rx="2" ry="2" />
<text  x="82.42" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="603.4" y="1861" width="0.2" height="15.0" fill="rgb(253,69,42)" rx="2" ry="2" />
<text  x="606.40" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1130.8" y="1797" width="0.2" height="15.0" fill="rgb(248,155,17)" rx="2" ry="2" />
<text  x="1133.78" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="259.5" y="1701" width="0.2" height="15.0" fill="rgb(245,173,23)" rx="2" ry="2" />
<text  x="262.48" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="470.6" y="1877" width="0.2" height="15.0" fill="rgb(245,163,53)" rx="2" ry="2" />
<text  x="473.56" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="454.0" y="1861" width="0.2" height="15.0" fill="rgb(245,110,16)" rx="2" ry="2" />
<text  x="456.95" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="359.5" y="1845" width="0.2" height="15.0" fill="rgb(250,2,48)" rx="2" ry="2" />
<text  x="362.52" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="581" width="15.2" height="15.0" fill="rgb(229,169,4)" rx="2" ry="2" />
<text  x="106.43" y="591.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="402.1" y="1829" width="0.2" height="15.0" fill="rgb(232,120,31)" rx="2" ry="2" />
<text  x="405.13" y="1839.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="323.1" y="1829" width="0.2" height="15.0" fill="rgb(230,158,19)" rx="2" ry="2" />
<text  x="326.11" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="824.9" y="1621" width="0.4" height="15.0" fill="rgb(246,71,16)" rx="2" ry="2" />
<text  x="827.88" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1149.8" y="1893" width="0.2" height="15.0" fill="rgb(210,26,27)" rx="2" ry="2" />
<text  x="1152.79" y="1903.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1139.0" y="1749" width="0.2" height="15.0" fill="rgb(223,7,2)" rx="2" ry="2" />
<text  x="1141.98" y="1759.5" ></text>
</g>
<g >
<title>lock_timer_base (5 samples, 0.08%)</title><rect x="321.9" y="1749" width="1.0" height="15.0" fill="rgb(251,37,42)" rx="2" ry="2" />
<text  x="324.91" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1005.1" y="1829" width="0.2" height="15.0" fill="rgb(220,28,41)" rx="2" ry="2" />
<text  x="1008.14" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="381.7" y="1909" width="0.8" height="15.0" fill="rgb(214,31,19)" rx="2" ry="2" />
<text  x="384.73" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="879.5" y="1765" width="0.2" height="15.0" fill="rgb(225,168,7)" rx="2" ry="2" />
<text  x="882.49" y="1775.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="766.3" y="1733" width="0.2" height="15.0" fill="rgb(234,50,51)" rx="2" ry="2" />
<text  x="769.26" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="735.2" y="1797" width="0.2" height="15.0" fill="rgb(249,89,24)" rx="2" ry="2" />
<text  x="738.25" y="1807.5" ></text>
</g>
<g >
<title>get_empty_filp (60 samples, 1.02%)</title><rect x="410.1" y="1925" width="12.0" height="15.0" fill="rgb(212,145,20)" rx="2" ry="2" />
<text  x="413.14" y="1935.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="118.4" y="37" width="0.2" height="15.0" fill="rgb(205,193,34)" rx="2" ry="2" />
<text  x="121.44" y="47.5" ></text>
</g>
<g >
<title>task_numa_fault (1 samples, 0.02%)</title><rect x="658.4" y="1925" width="0.2" height="15.0" fill="rgb(253,84,6)" rx="2" ry="2" />
<text  x="661.42" y="1935.5" ></text>
</g>
<g >
<title>prandom_u32_state (1 samples, 0.02%)</title><rect x="402.1" y="1589" width="0.2" height="15.0" fill="rgb(225,80,17)" rx="2" ry="2" />
<text  x="405.13" y="1599.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="429.9" y="1893" width="0.2" height="15.0" fill="rgb(211,114,27)" rx="2" ry="2" />
<text  x="432.94" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="540.2" y="1893" width="0.2" height="15.0" fill="rgb(247,204,53)" rx="2" ry="2" />
<text  x="543.18" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="890.9" y="1941" width="0.2" height="15.0" fill="rgb(210,167,24)" rx="2" ry="2" />
<text  x="893.90" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="697.6" y="1813" width="0.2" height="15.0" fill="rgb(216,227,16)" rx="2" ry="2" />
<text  x="700.63" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="248.7" y="1877" width="0.4" height="15.0" fill="rgb(223,79,20)" rx="2" ry="2" />
<text  x="251.68" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="603.4" y="1797" width="0.2" height="15.0" fill="rgb(236,174,35)" rx="2" ry="2" />
<text  x="606.40" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="954.7" y="1893" width="0.2" height="15.0" fill="rgb(229,153,9)" rx="2" ry="2" />
<text  x="957.72" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.4" y="325" width="0.2" height="15.0" fill="rgb(246,47,26)" rx="2" ry="2" />
<text  x="121.44" y="335.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="26.2" y="1957" width="0.2" height="15.0" fill="rgb(249,149,51)" rx="2" ry="2" />
<text  x="29.21" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="483.6" y="1557" width="0.2" height="15.0" fill="rgb(233,6,3)" rx="2" ry="2" />
<text  x="486.56" y="1567.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="112.0" y="37" width="0.2" height="15.0" fill="rgb(206,130,12)" rx="2" ry="2" />
<text  x="115.03" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="111.6" y="37" width="0.4" height="15.0" fill="rgb(251,49,23)" rx="2" ry="2" />
<text  x="114.63" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="758.9" y="1749" width="0.2" height="15.0" fill="rgb(244,109,44)" rx="2" ry="2" />
<text  x="761.85" y="1759.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="357.1" y="1685" width="0.2" height="15.0" fill="rgb(216,192,27)" rx="2" ry="2" />
<text  x="360.12" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1049.6" y="2005" width="0.2" height="15.0" fill="rgb(241,7,35)" rx="2" ry="2" />
<text  x="1052.55" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="182.7" y="1957" width="0.2" height="15.0" fill="rgb(213,131,44)" rx="2" ry="2" />
<text  x="185.66" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="53.0" y="1845" width="0.2" height="15.0" fill="rgb(242,22,10)" rx="2" ry="2" />
<text  x="56.01" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1188.8" y="2021" width="0.4" height="15.0" fill="rgb(216,224,47)" rx="2" ry="2" />
<text  x="1191.80" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="809.7" y="1397" width="0.4" height="15.0" fill="rgb(235,155,54)" rx="2" ry="2" />
<text  x="812.67" y="1407.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="150.6" y="1637" width="0.2" height="15.0" fill="rgb(254,131,22)" rx="2" ry="2" />
<text  x="153.65" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="996.9" y="1941" width="0.2" height="15.0" fill="rgb(235,13,21)" rx="2" ry="2" />
<text  x="999.93" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="843.5" y="1797" width="0.2" height="15.0" fill="rgb(210,165,11)" rx="2" ry="2" />
<text  x="846.48" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.3" y="2037" width="0.2" height="15.0" fill="rgb(213,83,37)" rx="2" ry="2" />
<text  x="1036.35" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="704.2" y="1861" width="0.2" height="15.0" fill="rgb(243,67,24)" rx="2" ry="2" />
<text  x="707.24" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="79.0" y="1893" width="0.2" height="15.0" fill="rgb(211,202,22)" rx="2" ry="2" />
<text  x="82.02" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="661" width="15.4" height="15.0" fill="rgb(211,145,27)" rx="2" ry="2" />
<text  x="106.43" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1125.6" y="1845" width="0.2" height="15.0" fill="rgb(219,166,50)" rx="2" ry="2" />
<text  x="1128.58" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="851.5" y="1941" width="1.0" height="15.0" fill="rgb(241,214,34)" rx="2" ry="2" />
<text  x="854.49" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="97.8" y="1813" width="0.2" height="15.0" fill="rgb(210,32,10)" rx="2" ry="2" />
<text  x="100.83" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (46 samples, 0.78%)</title><rect x="1111.0" y="1685" width="9.2" height="15.0" fill="rgb(249,126,35)" rx="2" ry="2" />
<text  x="1113.97" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="863.7" y="1877" width="0.2" height="15.0" fill="rgb(226,157,33)" rx="2" ry="2" />
<text  x="866.69" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="470.6" y="1605" width="0.2" height="15.0" fill="rgb(205,82,26)" rx="2" ry="2" />
<text  x="473.56" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1149.8" y="2021" width="0.2" height="15.0" fill="rgb(217,174,37)" rx="2" ry="2" />
<text  x="1152.79" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_free (13 samples, 0.22%)</title><rect x="1066.0" y="1893" width="2.6" height="15.0" fill="rgb(242,20,38)" rx="2" ry="2" />
<text  x="1068.96" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="704.4" y="1861" width="0.2" height="15.0" fill="rgb(254,148,14)" rx="2" ry="2" />
<text  x="707.44" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="647.4" y="1733" width="0.2" height="15.0" fill="rgb(246,221,11)" rx="2" ry="2" />
<text  x="650.42" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="648.8" y="1941" width="0.8" height="15.0" fill="rgb(222,219,22)" rx="2" ry="2" />
<text  x="651.82" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="992.7" y="1957" width="0.2" height="15.0" fill="rgb(234,28,53)" rx="2" ry="2" />
<text  x="995.73" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="429.5" y="1973" width="0.2" height="15.0" fill="rgb(211,115,25)" rx="2" ry="2" />
<text  x="432.54" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="913.5" y="1941" width="0.2" height="15.0" fill="rgb(242,198,46)" rx="2" ry="2" />
<text  x="916.51" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="914.1" y="1909" width="0.2" height="15.0" fill="rgb(210,200,43)" rx="2" ry="2" />
<text  x="917.11" y="1919.5" ></text>
</g>
<g >
<title>__fdget (14 samples, 0.24%)</title><rect x="337.3" y="1941" width="2.8" height="15.0" fill="rgb(238,76,4)" rx="2" ry="2" />
<text  x="340.31" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (11 samples, 0.19%)</title><rect x="631.6" y="2037" width="2.2" height="15.0" fill="rgb(249,56,32)" rx="2" ry="2" />
<text  x="634.61" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="854.9" y="1909" width="0.2" height="15.0" fill="rgb(209,13,21)" rx="2" ry="2" />
<text  x="857.89" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="638.8" y="2005" width="0.6" height="15.0" fill="rgb(224,126,50)" rx="2" ry="2" />
<text  x="641.81" y="2015.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="504.8" y="1909" width="0.2" height="15.0" fill="rgb(236,143,21)" rx="2" ry="2" />
<text  x="507.77" y="1919.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="842.1" y="1861" width="0.8" height="15.0" fill="rgb(246,90,29)" rx="2" ry="2" />
<text  x="845.08" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="896.9" y="2021" width="0.2" height="15.0" fill="rgb(236,143,0)" rx="2" ry="2" />
<text  x="899.90" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="886.1" y="1909" width="0.2" height="15.0" fill="rgb(250,192,28)" rx="2" ry="2" />
<text  x="889.10" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="711.4" y="1893" width="0.2" height="15.0" fill="rgb(227,139,14)" rx="2" ry="2" />
<text  x="714.44" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (24 samples, 0.41%)</title><rect x="1028.3" y="2037" width="4.8" height="15.0" fill="rgb(236,130,2)" rx="2" ry="2" />
<text  x="1031.35" y="2047.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="423.5" y="1877" width="0.8" height="15.0" fill="rgb(254,164,27)" rx="2" ry="2" />
<text  x="426.54" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (16 samples, 0.27%)</title><rect x="1142.4" y="2053" width="3.2" height="15.0" fill="rgb(226,130,27)" rx="2" ry="2" />
<text  x="1145.38" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="332.5" y="1621" width="0.2" height="15.0" fill="rgb(225,25,10)" rx="2" ry="2" />
<text  x="335.51" y="1631.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="680.6" y="1909" width="0.2" height="15.0" fill="rgb(230,124,12)" rx="2" ry="2" />
<text  x="683.63" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (10 samples, 0.17%)</title><rect x="66.8" y="1957" width="2.0" height="15.0" fill="rgb(241,106,16)" rx="2" ry="2" />
<text  x="69.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="629.6" y="2037" width="0.2" height="15.0" fill="rgb(221,149,54)" rx="2" ry="2" />
<text  x="632.61" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="143.8" y="1893" width="1.0" height="15.0" fill="rgb(226,156,27)" rx="2" ry="2" />
<text  x="146.85" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.14%)</title><rect x="934.7" y="1957" width="1.6" height="15.0" fill="rgb(248,69,43)" rx="2" ry="2" />
<text  x="937.71" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="482.2" y="1893" width="0.2" height="15.0" fill="rgb(245,95,36)" rx="2" ry="2" />
<text  x="485.16" y="1903.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="120.0" y="1573" width="0.2" height="15.0" fill="rgb(252,133,5)" rx="2" ry="2" />
<text  x="123.04" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="321.5" y="1493" width="0.2" height="15.0" fill="rgb(238,40,46)" rx="2" ry="2" />
<text  x="324.51" y="1503.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="914.9" y="1877" width="0.2" height="15.0" fill="rgb(220,159,34)" rx="2" ry="2" />
<text  x="917.91" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="875.5" y="1957" width="0.2" height="15.0" fill="rgb(250,158,2)" rx="2" ry="2" />
<text  x="878.49" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="54.2" y="1845" width="0.2" height="15.0" fill="rgb(221,119,42)" rx="2" ry="2" />
<text  x="57.21" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (12 samples, 0.20%)</title><rect x="215.9" y="1877" width="2.4" height="15.0" fill="rgb(241,32,21)" rx="2" ry="2" />
<text  x="218.87" y="1887.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="545.8" y="2021" width="0.2" height="15.0" fill="rgb(242,169,39)" rx="2" ry="2" />
<text  x="548.78" y="2031.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="75.8" y="1957" width="0.2" height="15.0" fill="rgb(221,190,29)" rx="2" ry="2" />
<text  x="78.82" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="165.3" y="1813" width="0.2" height="15.0" fill="rgb(253,61,19)" rx="2" ry="2" />
<text  x="168.25" y="1823.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (41 samples, 0.70%)</title><rect x="259.7" y="1877" width="8.2" height="15.0" fill="rgb(235,75,0)" rx="2" ry="2" />
<text  x="262.68" y="1887.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="308.1" y="1509" width="0.2" height="15.0" fill="rgb(210,200,46)" rx="2" ry="2" />
<text  x="311.10" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="984.7" y="1749" width="0.2" height="15.0" fill="rgb(208,113,39)" rx="2" ry="2" />
<text  x="987.73" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="80.0" y="1845" width="0.2" height="15.0" fill="rgb(232,157,34)" rx="2" ry="2" />
<text  x="83.02" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="264.7" y="1797" width="0.2" height="15.0" fill="rgb(226,92,13)" rx="2" ry="2" />
<text  x="267.69" y="1807.5" ></text>
</g>
<g >
<title>tcp_poll (3 samples, 0.05%)</title><rect x="484.0" y="1957" width="0.6" height="15.0" fill="rgb(234,88,33)" rx="2" ry="2" />
<text  x="486.96" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="267.1" y="1781" width="0.2" height="15.0" fill="rgb(233,71,3)" rx="2" ry="2" />
<text  x="270.09" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="721.0" y="1973" width="0.2" height="15.0" fill="rgb(253,52,52)" rx="2" ry="2" />
<text  x="724.04" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="843.5" y="1813" width="0.2" height="15.0" fill="rgb(251,113,12)" rx="2" ry="2" />
<text  x="846.48" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="307.9" y="1733" width="0.4" height="15.0" fill="rgb(234,33,21)" rx="2" ry="2" />
<text  x="310.90" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="564.2" y="1957" width="0.4" height="15.0" fill="rgb(226,80,45)" rx="2" ry="2" />
<text  x="567.19" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="321.5" y="1653" width="0.2" height="15.0" fill="rgb(246,165,17)" rx="2" ry="2" />
<text  x="324.51" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1005.1" y="1813" width="0.2" height="15.0" fill="rgb(223,84,12)" rx="2" ry="2" />
<text  x="1008.14" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="394.1" y="1941" width="0.2" height="15.0" fill="rgb(214,3,33)" rx="2" ry="2" />
<text  x="397.13" y="1951.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="766.1" y="1733" width="0.2" height="15.0" fill="rgb(239,70,40)" rx="2" ry="2" />
<text  x="769.06" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (18 samples, 0.31%)</title><rect x="554.4" y="2005" width="3.6" height="15.0" fill="rgb(222,144,16)" rx="2" ry="2" />
<text  x="557.38" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="18.4" y="1925" width="0.2" height="15.0" fill="rgb(212,129,31)" rx="2" ry="2" />
<text  x="21.40" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="278.7" y="1717" width="0.2" height="15.0" fill="rgb(244,168,27)" rx="2" ry="2" />
<text  x="281.69" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="166.9" y="2005" width="0.2" height="15.0" fill="rgb(233,156,50)" rx="2" ry="2" />
<text  x="169.85" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="273.1" y="1653" width="0.2" height="15.0" fill="rgb(250,116,38)" rx="2" ry="2" />
<text  x="276.09" y="1663.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="899.3" y="1989" width="0.2" height="15.0" fill="rgb(253,207,25)" rx="2" ry="2" />
<text  x="902.30" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="273.1" y="1605" width="0.2" height="15.0" fill="rgb(238,119,2)" rx="2" ry="2" />
<text  x="276.09" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="74.6" y="1749" width="0.2" height="15.0" fill="rgb(252,85,52)" rx="2" ry="2" />
<text  x="77.62" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="829.9" y="1637" width="0.2" height="15.0" fill="rgb(232,58,18)" rx="2" ry="2" />
<text  x="832.88" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="115.4" y="53" width="1.0" height="15.0" fill="rgb(216,25,23)" rx="2" ry="2" />
<text  x="118.44" y="63.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="90.2" y="1989" width="0.2" height="15.0" fill="rgb(211,218,12)" rx="2" ry="2" />
<text  x="93.23" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="890.1" y="1669" width="0.2" height="15.0" fill="rgb(228,68,34)" rx="2" ry="2" />
<text  x="893.10" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1110.6" y="1621" width="0.2" height="15.0" fill="rgb(213,34,40)" rx="2" ry="2" />
<text  x="1113.57" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (10 samples, 0.17%)</title><rect x="1120.4" y="1925" width="2.0" height="15.0" fill="rgb(230,147,30)" rx="2" ry="2" />
<text  x="1123.38" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="359.3" y="1957" width="0.2" height="15.0" fill="rgb(246,195,38)" rx="2" ry="2" />
<text  x="362.32" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="454.0" y="1957" width="0.2" height="15.0" fill="rgb(233,28,37)" rx="2" ry="2" />
<text  x="456.95" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="542.2" y="1941" width="0.2" height="15.0" fill="rgb(218,114,43)" rx="2" ry="2" />
<text  x="545.18" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (14 samples, 0.24%)</title><rect x="337.3" y="1925" width="2.8" height="15.0" fill="rgb(250,106,26)" rx="2" ry="2" />
<text  x="340.31" y="1935.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="933.7" y="1589" width="0.2" height="15.0" fill="rgb(206,144,43)" rx="2" ry="2" />
<text  x="936.71" y="1599.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (2 samples, 0.03%)</title><rect x="544.2" y="1925" width="0.4" height="15.0" fill="rgb(245,77,5)" rx="2" ry="2" />
<text  x="547.18" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="752.5" y="1621" width="0.2" height="15.0" fill="rgb(247,109,18)" rx="2" ry="2" />
<text  x="755.45" y="1631.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="158.9" y="2021" width="0.4" height="15.0" fill="rgb(214,142,8)" rx="2" ry="2" />
<text  x="161.85" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="707.2" y="1829" width="0.6" height="15.0" fill="rgb(248,52,35)" rx="2" ry="2" />
<text  x="710.24" y="1839.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (1 samples, 0.02%)</title><rect x="32.0" y="1861" width="0.2" height="15.0" fill="rgb(211,95,27)" rx="2" ry="2" />
<text  x="35.01" y="1871.5" ></text>
</g>
<g >
<title>sock_poll (68 samples, 1.15%)</title><rect x="512.2" y="1909" width="13.6" height="15.0" fill="rgb(238,201,5)" rx="2" ry="2" />
<text  x="515.17" y="1919.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (3 samples, 0.05%)</title><rect x="1178.4" y="1989" width="0.6" height="15.0" fill="rgb(239,216,29)" rx="2" ry="2" />
<text  x="1181.40" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="787.9" y="1173" width="0.2" height="15.0" fill="rgb(227,11,49)" rx="2" ry="2" />
<text  x="790.86" y="1183.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="62.0" y="1877" width="0.2" height="15.0" fill="rgb(250,117,21)" rx="2" ry="2" />
<text  x="65.02" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="565.6" y="1861" width="0.2" height="15.0" fill="rgb(210,131,33)" rx="2" ry="2" />
<text  x="568.59" y="1871.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="739.4" y="1509" width="0.2" height="15.0" fill="rgb(239,196,47)" rx="2" ry="2" />
<text  x="742.45" y="1519.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="1017.5" y="2037" width="0.2" height="15.0" fill="rgb(249,144,1)" rx="2" ry="2" />
<text  x="1020.54" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="416.1" y="1877" width="0.2" height="15.0" fill="rgb(238,143,25)" rx="2" ry="2" />
<text  x="419.14" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="189.9" y="1893" width="0.4" height="15.0" fill="rgb(207,108,53)" rx="2" ry="2" />
<text  x="192.86" y="1903.5" ></text>
</g>
<g >
<title>__fdget (7 samples, 0.12%)</title><rect x="705.0" y="1909" width="1.4" height="15.0" fill="rgb(252,118,44)" rx="2" ry="2" />
<text  x="708.04" y="1919.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (5 samples, 0.08%)</title><rect x="1025.1" y="2053" width="1.0" height="15.0" fill="rgb(246,183,31)" rx="2" ry="2" />
<text  x="1028.14" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="981.7" y="1909" width="0.2" height="15.0" fill="rgb(225,147,10)" rx="2" ry="2" />
<text  x="984.73" y="1919.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="936.3" y="1973" width="0.2" height="15.0" fill="rgb(232,190,28)" rx="2" ry="2" />
<text  x="939.31" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="12.4" y="2037" width="0.2" height="15.0" fill="rgb(213,78,15)" rx="2" ry="2" />
<text  x="15.40" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="530.8" y="1989" width="0.4" height="15.0" fill="rgb(254,218,33)" rx="2" ry="2" />
<text  x="533.78" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (38 samples, 0.64%)</title><rect x="768.7" y="1717" width="7.6" height="15.0" fill="rgb(235,203,15)" rx="2" ry="2" />
<text  x="771.66" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1179.4" y="1989" width="0.2" height="15.0" fill="rgb(250,50,35)" rx="2" ry="2" />
<text  x="1182.40" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="97.8" y="1781" width="0.2" height="15.0" fill="rgb(233,61,8)" rx="2" ry="2" />
<text  x="100.83" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1525" width="16.8" height="15.0" fill="rgb(206,95,11)" rx="2" ry="2" />
<text  x="106.03" y="1535.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="483.6" y="1493" width="0.2" height="15.0" fill="rgb(250,127,43)" rx="2" ry="2" />
<text  x="486.56" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="565.8" y="1845" width="0.2" height="15.0" fill="rgb(251,117,2)" rx="2" ry="2" />
<text  x="568.79" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.14%)</title><rect x="650.6" y="1989" width="1.6" height="15.0" fill="rgb(220,60,5)" rx="2" ry="2" />
<text  x="653.62" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="984.7" y="1893" width="0.2" height="15.0" fill="rgb(252,16,25)" rx="2" ry="2" />
<text  x="987.73" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="123.2" y="1925" width="0.4" height="15.0" fill="rgb(223,115,53)" rx="2" ry="2" />
<text  x="126.24" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="59.0" y="1861" width="0.2" height="15.0" fill="rgb(207,139,3)" rx="2" ry="2" />
<text  x="62.02" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="918.3" y="1957" width="0.4" height="15.0" fill="rgb(233,195,22)" rx="2" ry="2" />
<text  x="921.31" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="272.9" y="1845" width="0.2" height="15.0" fill="rgb(207,117,9)" rx="2" ry="2" />
<text  x="275.89" y="1855.5" ></text>
</g>
<g >
<title>ip_queue_xmit (117 samples, 1.98%)</title><rect x="781.7" y="1669" width="23.4" height="15.0" fill="rgb(207,102,42)" rx="2" ry="2" />
<text  x="784.66" y="1679.5" >i..</text>
</g>
<g >
<title>__sys_sendmsg (502 samples, 8.51%)</title><rect x="239.9" y="1973" width="100.4" height="15.0" fill="rgb(227,113,30)" rx="2" ry="2" />
<text  x="242.88" y="1983.5" >__sys_sendmsg</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="543.4" y="1925" width="0.2" height="15.0" fill="rgb(229,163,4)" rx="2" ry="2" />
<text  x="546.38" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_active_ (6 samples, 0.10%)</title><rect x="1141.2" y="2053" width="1.2" height="15.0" fill="rgb(223,155,23)" rx="2" ry="2" />
<text  x="1144.18" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="853.3" y="1701" width="0.2" height="15.0" fill="rgb(241,180,41)" rx="2" ry="2" />
<text  x="856.29" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.4" y="1909" width="0.3" height="15.0" fill="rgb(233,129,22)" rx="2" ry="2" />
<text  x="160.45" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="988.1" y="1909" width="0.4" height="15.0" fill="rgb(240,178,49)" rx="2" ry="2" />
<text  x="991.13" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4 samples, 0.07%)</title><rect x="627.8" y="1973" width="0.8" height="15.0" fill="rgb(248,84,21)" rx="2" ry="2" />
<text  x="630.81" y="1983.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="623.4" y="1557" width="0.2" height="15.0" fill="rgb(223,199,17)" rx="2" ry="2" />
<text  x="626.41" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="875.3" y="1909" width="0.2" height="15.0" fill="rgb(224,27,32)" rx="2" ry="2" />
<text  x="878.29" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (304 samples, 5.15%)</title><rect x="32.2" y="2021" width="60.8" height="15.0" fill="rgb(208,28,42)" rx="2" ry="2" />
<text  x="35.21" y="2031.5" >folly:..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (139 samples, 2.36%)</title><rect x="684.8" y="2037" width="27.8" height="15.0" fill="rgb(241,157,40)" rx="2" ry="2" />
<text  x="687.83" y="2047.5" >f..</text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1054.0" y="1941" width="0.2" height="15.0" fill="rgb(224,206,47)" rx="2" ry="2" />
<text  x="1056.95" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="554.2" y="1941" width="0.2" height="15.0" fill="rgb(247,119,5)" rx="2" ry="2" />
<text  x="557.18" y="1951.5" ></text>
</g>
<g >
<title>rb_erase (4 samples, 0.07%)</title><rect x="1118.6" y="1509" width="0.8" height="15.0" fill="rgb(214,132,7)" rx="2" ry="2" />
<text  x="1121.58" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="165.1" y="1909" width="0.2" height="15.0" fill="rgb(251,58,30)" rx="2" ry="2" />
<text  x="168.05" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (4 samples, 0.07%)</title><rect x="73.0" y="1957" width="0.8" height="15.0" fill="rgb(231,104,4)" rx="2" ry="2" />
<text  x="76.02" y="1967.5" ></text>
</g>
<g >
<title>__dentry_kill (66 samples, 1.12%)</title><rect x="741.2" y="1765" width="13.3" height="15.0" fill="rgb(251,94,39)" rx="2" ry="2" />
<text  x="744.25" y="1775.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="116.4" y="69" width="0.4" height="15.0" fill="rgb(225,135,39)" rx="2" ry="2" />
<text  x="119.44" y="79.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="824.1" y="1669" width="0.2" height="15.0" fill="rgb(211,227,44)" rx="2" ry="2" />
<text  x="827.08" y="1679.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="391.3" y="1909" width="0.2" height="15.0" fill="rgb(238,24,27)" rx="2" ry="2" />
<text  x="394.33" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="112.2" y="37" width="0.2" height="15.0" fill="rgb(210,153,17)" rx="2" ry="2" />
<text  x="115.23" y="47.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.10%)</title><rect x="1131.0" y="2037" width="1.2" height="15.0" fill="rgb(207,216,24)" rx="2" ry="2" />
<text  x="1133.98" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="575.8" y="1781" width="0.4" height="15.0" fill="rgb(231,40,8)" rx="2" ry="2" />
<text  x="578.79" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="590.4" y="1765" width="0.2" height="15.0" fill="rgb(212,126,19)" rx="2" ry="2" />
<text  x="593.40" y="1775.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="587.0" y="2005" width="0.2" height="15.0" fill="rgb(218,207,31)" rx="2" ry="2" />
<text  x="590.00" y="2015.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="395.1" y="1909" width="0.4" height="15.0" fill="rgb(248,98,5)" rx="2" ry="2" />
<text  x="398.13" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="189.9" y="1973" width="0.4" height="15.0" fill="rgb(232,99,38)" rx="2" ry="2" />
<text  x="192.86" y="1983.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1008.9" y="1973" width="0.2" height="15.0" fill="rgb(235,65,40)" rx="2" ry="2" />
<text  x="1011.94" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="648.4" y="1893" width="0.2" height="15.0" fill="rgb(215,62,35)" rx="2" ry="2" />
<text  x="651.42" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="593.8" y="2021" width="0.2" height="15.0" fill="rgb(240,147,14)" rx="2" ry="2" />
<text  x="596.80" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="611.6" y="1925" width="0.2" height="15.0" fill="rgb(219,18,29)" rx="2" ry="2" />
<text  x="614.60" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (10 samples, 0.17%)</title><rect x="171.7" y="1973" width="2.0" height="15.0" fill="rgb(209,167,11)" rx="2" ry="2" />
<text  x="174.65" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="537.4" y="1941" width="0.2" height="15.0" fill="rgb(248,51,21)" rx="2" ry="2" />
<text  x="540.38" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="543.2" y="1957" width="1.4" height="15.0" fill="rgb(219,226,22)" rx="2" ry="2" />
<text  x="546.18" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="647.4" y="1861" width="0.2" height="15.0" fill="rgb(221,182,12)" rx="2" ry="2" />
<text  x="650.42" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="981" width="15.6" height="15.0" fill="rgb(230,33,5)" rx="2" ry="2" />
<text  x="106.43" y="991.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="924.7" y="1941" width="0.2" height="15.0" fill="rgb(207,141,38)" rx="2" ry="2" />
<text  x="927.71" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (126 samples, 2.14%)</title><rect x="101.8" y="2005" width="25.2" height="15.0" fill="rgb(246,101,33)" rx="2" ry="2" />
<text  x="104.83" y="2015.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (90 samples, 1.53%)</title><rect x="666.0" y="2005" width="18.0" height="15.0" fill="rgb(226,75,9)" rx="2" ry="2" />
<text  x="669.02" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="384.3" y="1845" width="0.4" height="15.0" fill="rgb(250,45,1)" rx="2" ry="2" />
<text  x="387.33" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="267.5" y="1813" width="0.4" height="15.0" fill="rgb(244,102,0)" rx="2" ry="2" />
<text  x="270.49" y="1823.5" ></text>
</g>
<g >
<title>ip_output (48 samples, 0.81%)</title><rect x="1110.6" y="1829" width="9.6" height="15.0" fill="rgb(243,16,5)" rx="2" ry="2" />
<text  x="1113.57" y="1839.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="809.9" y="1333" width="0.2" height="15.0" fill="rgb(218,49,26)" rx="2" ry="2" />
<text  x="812.87" y="1343.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="956.1" y="1973" width="0.2" height="15.0" fill="rgb(211,24,11)" rx="2" ry="2" />
<text  x="959.12" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="563.6" y="1973" width="1.4" height="15.0" fill="rgb(243,154,25)" rx="2" ry="2" />
<text  x="566.59" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="936.5" y="1989" width="0.2" height="15.0" fill="rgb(220,115,13)" rx="2" ry="2" />
<text  x="939.51" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="285.9" y="1557" width="0.2" height="15.0" fill="rgb(239,156,2)" rx="2" ry="2" />
<text  x="288.89" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="525.6" y="1733" width="0.2" height="15.0" fill="rgb(229,198,45)" rx="2" ry="2" />
<text  x="528.57" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="93.2" y="2021" width="0.2" height="15.0" fill="rgb(211,138,22)" rx="2" ry="2" />
<text  x="96.23" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="223.1" y="1877" width="0.2" height="15.0" fill="rgb(219,151,9)" rx="2" ry="2" />
<text  x="226.07" y="1887.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="787.5" y="1317" width="0.2" height="15.0" fill="rgb(250,91,36)" rx="2" ry="2" />
<text  x="790.46" y="1327.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (2 samples, 0.03%)</title><rect x="658.0" y="1989" width="0.4" height="15.0" fill="rgb(219,65,16)" rx="2" ry="2" />
<text  x="661.02" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1005.1" y="1653" width="0.2" height="15.0" fill="rgb(215,10,42)" rx="2" ry="2" />
<text  x="1008.14" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="381.5" y="1861" width="0.2" height="15.0" fill="rgb(241,100,49)" rx="2" ry="2" />
<text  x="384.53" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="860.1" y="1829" width="0.2" height="15.0" fill="rgb(228,18,44)" rx="2" ry="2" />
<text  x="863.09" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="936.3" y="1877" width="0.2" height="15.0" fill="rgb(211,175,40)" rx="2" ry="2" />
<text  x="939.31" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="118.6" y="277" width="0.2" height="15.0" fill="rgb(233,103,11)" rx="2" ry="2" />
<text  x="121.64" y="287.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="921.7" y="1877" width="0.8" height="15.0" fill="rgb(232,48,23)" rx="2" ry="2" />
<text  x="924.71" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="964.9" y="1909" width="0.2" height="15.0" fill="rgb(206,172,41)" rx="2" ry="2" />
<text  x="967.92" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="858.5" y="1861" width="0.2" height="15.0" fill="rgb(224,93,46)" rx="2" ry="2" />
<text  x="861.49" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="483.6" y="1461" width="0.2" height="15.0" fill="rgb(208,203,5)" rx="2" ry="2" />
<text  x="486.56" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (2 samples, 0.03%)</title><rect x="592.4" y="1989" width="0.4" height="15.0" fill="rgb(235,13,35)" rx="2" ry="2" />
<text  x="595.40" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="707.2" y="1909" width="0.6" height="15.0" fill="rgb(231,222,53)" rx="2" ry="2" />
<text  x="710.24" y="1919.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.03%)</title><rect x="127.0" y="2005" width="0.4" height="15.0" fill="rgb(211,67,34)" rx="2" ry="2" />
<text  x="130.04" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="641.2" y="1973" width="0.4" height="15.0" fill="rgb(214,145,42)" rx="2" ry="2" />
<text  x="644.21" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="299.1" y="1653" width="0.2" height="15.0" fill="rgb(213,165,13)" rx="2" ry="2" />
<text  x="302.10" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (7 samples, 0.12%)</title><rect x="846.5" y="1925" width="1.4" height="15.0" fill="rgb(253,177,0)" rx="2" ry="2" />
<text  x="849.48" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="90.0" y="1941" width="0.2" height="15.0" fill="rgb(221,16,29)" rx="2" ry="2" />
<text  x="93.03" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="899.1" y="2005" width="0.2" height="15.0" fill="rgb(229,151,0)" rx="2" ry="2" />
<text  x="902.10" y="2015.5" ></text>
</g>
<g >
<title>sys_gettid (6 samples, 0.10%)</title><rect x="1159.0" y="1925" width="1.2" height="15.0" fill="rgb(238,197,10)" rx="2" ry="2" />
<text  x="1161.99" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1142.0" y="1973" width="0.4" height="15.0" fill="rgb(236,76,1)" rx="2" ry="2" />
<text  x="1144.98" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1461" width="0.2" height="15.0" fill="rgb(214,120,23)" rx="2" ry="2" />
<text  x="828.08" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1176.4" y="1989" width="0.2" height="15.0" fill="rgb(224,147,52)" rx="2" ry="2" />
<text  x="1179.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="546.0" y="2005" width="1.2" height="15.0" fill="rgb(211,167,14)" rx="2" ry="2" />
<text  x="548.98" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="809.7" y="1413" width="0.4" height="15.0" fill="rgb(210,226,20)" rx="2" ry="2" />
<text  x="812.67" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="501" width="15.2" height="15.0" fill="rgb(251,205,51)" rx="2" ry="2" />
<text  x="106.43" y="511.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="890.9" y="1861" width="0.2" height="15.0" fill="rgb(246,104,6)" rx="2" ry="2" />
<text  x="893.90" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="381.5" y="1781" width="0.2" height="15.0" fill="rgb(239,141,28)" rx="2" ry="2" />
<text  x="384.53" y="1791.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (5 samples, 0.08%)</title><rect x="539.4" y="1941" width="1.0" height="15.0" fill="rgb(250,44,11)" rx="2" ry="2" />
<text  x="542.38" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="116.8" y="53" width="0.2" height="15.0" fill="rgb(252,128,26)" rx="2" ry="2" />
<text  x="119.84" y="63.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (190 samples, 3.22%)</title><rect x="276.3" y="1829" width="38.0" height="15.0" fill="rgb(249,219,30)" rx="2" ry="2" />
<text  x="279.29" y="1839.5" >__t..</text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1102.0" y="1845" width="0.8" height="15.0" fill="rgb(226,166,32)" rx="2" ry="2" />
<text  x="1104.97" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="162.9" y="1941" width="0.2" height="15.0" fill="rgb(234,20,37)" rx="2" ry="2" />
<text  x="165.85" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::close (3 samples, 0.05%)</title><rect x="858.1" y="1941" width="0.6" height="15.0" fill="rgb(213,164,5)" rx="2" ry="2" />
<text  x="861.09" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="503.6" y="1941" width="0.2" height="15.0" fill="rgb(232,89,41)" rx="2" ry="2" />
<text  x="506.57" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="707.2" y="1765" width="0.4" height="15.0" fill="rgb(223,6,25)" rx="2" ry="2" />
<text  x="710.24" y="1775.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.2" y="1845" width="0.8" height="15.0" fill="rgb(251,194,44)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="585.6" y="2005" width="0.2" height="15.0" fill="rgb(207,150,41)" rx="2" ry="2" />
<text  x="588.60" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1024.7" y="2021" width="0.4" height="15.0" fill="rgb(246,88,41)" rx="2" ry="2" />
<text  x="1027.74" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (36 samples, 0.61%)</title><rect x="924.9" y="1941" width="7.2" height="15.0" fill="rgb(253,218,54)" rx="2" ry="2" />
<text  x="927.91" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="76.6" y="1909" width="0.2" height="15.0" fill="rgb(248,26,15)" rx="2" ry="2" />
<text  x="79.62" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="500.0" y="1957" width="0.4" height="15.0" fill="rgb(216,36,46)" rx="2" ry="2" />
<text  x="502.97" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="74.6" y="1733" width="0.2" height="15.0" fill="rgb(239,44,11)" rx="2" ry="2" />
<text  x="77.62" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="512.0" y="1717" width="0.2" height="15.0" fill="rgb(225,199,12)" rx="2" ry="2" />
<text  x="514.97" y="1727.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="118.6" y="229" width="0.2" height="15.0" fill="rgb(238,215,52)" rx="2" ry="2" />
<text  x="121.64" y="239.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="735.4" y="1845" width="0.8" height="15.0" fill="rgb(233,124,8)" rx="2" ry="2" />
<text  x="738.45" y="1855.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="540.8" y="1957" width="0.2" height="15.0" fill="rgb(241,144,52)" rx="2" ry="2" />
<text  x="543.78" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="829.9" y="1749" width="0.2" height="15.0" fill="rgb(248,35,1)" rx="2" ry="2" />
<text  x="832.88" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="758.9" y="1717" width="0.2" height="15.0" fill="rgb(229,213,49)" rx="2" ry="2" />
<text  x="761.85" y="1727.5" ></text>
</g>
<g >
<title>tcp_conn_request (2 samples, 0.03%)</title><rect x="1188.8" y="1749" width="0.4" height="15.0" fill="rgb(242,60,27)" rx="2" ry="2" />
<text  x="1191.80" y="1759.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="578.6" y="1605" width="0.2" height="15.0" fill="rgb(227,144,6)" rx="2" ry="2" />
<text  x="581.59" y="1615.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="888.7" y="1861" width="0.2" height="15.0" fill="rgb(237,76,41)" rx="2" ry="2" />
<text  x="891.70" y="1871.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="421.9" y="1893" width="0.2" height="15.0" fill="rgb(236,77,45)" rx="2" ry="2" />
<text  x="424.94" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="652.2" y="1989" width="0.2" height="15.0" fill="rgb(246,214,12)" rx="2" ry="2" />
<text  x="655.22" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="148.4" y="1877" width="0.2" height="15.0" fill="rgb(243,22,34)" rx="2" ry="2" />
<text  x="151.45" y="1887.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="118.6" y="69" width="0.2" height="15.0" fill="rgb(213,22,51)" rx="2" ry="2" />
<text  x="121.64" y="79.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="676.8" y="1861" width="0.6" height="15.0" fill="rgb(214,192,7)" rx="2" ry="2" />
<text  x="679.83" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="999.3" y="1989" width="0.2" height="15.0" fill="rgb(221,7,11)" rx="2" ry="2" />
<text  x="1002.34" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1142.0" y="1957" width="0.4" height="15.0" fill="rgb(231,114,26)" rx="2" ry="2" />
<text  x="1144.98" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="974.3" y="1973" width="0.2" height="15.0" fill="rgb(250,36,52)" rx="2" ry="2" />
<text  x="977.33" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1103.0" y="1909" width="0.2" height="15.0" fill="rgb(253,106,16)" rx="2" ry="2" />
<text  x="1105.97" y="1919.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (47 samples, 0.80%)</title><rect x="1000.5" y="2037" width="9.4" height="15.0" fill="rgb(228,216,48)" rx="2" ry="2" />
<text  x="1003.54" y="2047.5" ></text>
</g>
<g >
<title>clear_inode (2 samples, 0.03%)</title><rect x="747.0" y="1701" width="0.4" height="15.0" fill="rgb(244,209,41)" rx="2" ry="2" />
<text  x="750.05" y="1711.5" ></text>
</g>
<g >
<title>destroy_inode (1 samples, 0.02%)</title><rect x="746.2" y="1717" width="0.2" height="15.0" fill="rgb(240,58,3)" rx="2" ry="2" />
<text  x="749.25" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="512.0" y="1701" width="0.2" height="15.0" fill="rgb(209,160,53)" rx="2" ry="2" />
<text  x="514.97" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="629" width="15.4" height="15.0" fill="rgb(252,39,45)" rx="2" ry="2" />
<text  x="106.43" y="639.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="913.3" y="2021" width="0.6" height="15.0" fill="rgb(246,87,53)" rx="2" ry="2" />
<text  x="916.31" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="215.3" y="1829" width="0.6" height="15.0" fill="rgb(219,158,54)" rx="2" ry="2" />
<text  x="218.27" y="1839.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (14 samples, 0.24%)</title><rect x="802.1" y="1541" width="2.8" height="15.0" fill="rgb(214,17,45)" rx="2" ry="2" />
<text  x="805.07" y="1551.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="755.5" y="1765" width="0.2" height="15.0" fill="rgb(205,143,26)" rx="2" ry="2" />
<text  x="758.45" y="1775.5" ></text>
</g>
<g >
<title>kmem_cache_free (14 samples, 0.24%)</title><rect x="749.7" y="1669" width="2.8" height="15.0" fill="rgb(232,167,24)" rx="2" ry="2" />
<text  x="752.65" y="1679.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="126.4" y="1669" width="0.2" height="15.0" fill="rgb(237,31,49)" rx="2" ry="2" />
<text  x="129.44" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="533" width="15.2" height="15.0" fill="rgb(224,108,9)" rx="2" ry="2" />
<text  x="106.43" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (7 samples, 0.12%)</title><rect x="82.8" y="1957" width="1.4" height="15.0" fill="rgb(227,59,17)" rx="2" ry="2" />
<text  x="85.82" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="565.6" y="1989" width="0.2" height="15.0" fill="rgb(218,5,41)" rx="2" ry="2" />
<text  x="568.59" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="163.1" y="1973" width="0.2" height="15.0" fill="rgb(233,110,20)" rx="2" ry="2" />
<text  x="166.05" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (3 samples, 0.05%)</title><rect x="864.7" y="1989" width="0.6" height="15.0" fill="rgb(220,61,33)" rx="2" ry="2" />
<text  x="867.69" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="273.3" y="1845" width="0.2" height="15.0" fill="rgb(242,122,10)" rx="2" ry="2" />
<text  x="276.29" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="150.6" y="1893" width="0.2" height="15.0" fill="rgb(208,85,27)" rx="2" ry="2" />
<text  x="153.65" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="150.6" y="1797" width="0.2" height="15.0" fill="rgb(240,138,18)" rx="2" ry="2" />
<text  x="153.65" y="1807.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="849.5" y="1861" width="0.2" height="15.0" fill="rgb(247,45,36)" rx="2" ry="2" />
<text  x="852.48" y="1871.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (48 samples, 0.81%)</title><rect x="1110.6" y="1765" width="9.6" height="15.0" fill="rgb(232,225,5)" rx="2" ry="2" />
<text  x="1113.57" y="1775.5" ></text>
</g>
<g >
<title>SYSC_getsockname (37 samples, 0.63%)</title><rect x="603.6" y="1877" width="7.4" height="15.0" fill="rgb(215,56,21)" rx="2" ry="2" />
<text  x="606.60" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="140.4" y="1893" width="0.2" height="15.0" fill="rgb(243,6,4)" rx="2" ry="2" />
<text  x="143.44" y="1903.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="707.6" y="1765" width="0.2" height="15.0" fill="rgb(239,205,15)" rx="2" ry="2" />
<text  x="710.64" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="712.0" y="2021" width="0.4" height="15.0" fill="rgb(219,128,39)" rx="2" ry="2" />
<text  x="715.04" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="97.8" y="1877" width="0.2" height="15.0" fill="rgb(233,221,31)" rx="2" ry="2" />
<text  x="100.83" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="110.6" y="37" width="0.2" height="15.0" fill="rgb(209,217,44)" rx="2" ry="2" />
<text  x="113.63" y="47.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="357.1" y="1589" width="0.2" height="15.0" fill="rgb(216,214,16)" rx="2" ry="2" />
<text  x="360.12" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="75.2" y="1877" width="0.2" height="15.0" fill="rgb(250,227,23)" rx="2" ry="2" />
<text  x="78.22" y="1887.5" ></text>
</g>
<g >
<title>ip_send_check (3 samples, 0.05%)</title><rect x="281.5" y="1765" width="0.6" height="15.0" fill="rgb(237,198,33)" rx="2" ry="2" />
<text  x="284.49" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (9 samples, 0.15%)</title><rect x="128.6" y="1989" width="1.8" height="15.0" fill="rgb(227,7,39)" rx="2" ry="2" />
<text  x="131.64" y="1999.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="825.7" y="1749" width="0.2" height="15.0" fill="rgb(254,191,27)" rx="2" ry="2" />
<text  x="828.68" y="1759.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (414 samples, 7.02%)</title><rect x="250.3" y="1893" width="82.8" height="15.0" fill="rgb(206,222,48)" rx="2" ry="2" />
<text  x="253.28" y="1903.5" >tcp_sendm..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="809.7" y="1637" width="0.4" height="15.0" fill="rgb(229,17,22)" rx="2" ry="2" />
<text  x="812.67" y="1647.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="695.6" y="1941" width="0.2" height="15.0" fill="rgb(245,219,19)" rx="2" ry="2" />
<text  x="698.63" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="889.1" y="1925" width="0.2" height="15.0" fill="rgb(247,86,54)" rx="2" ry="2" />
<text  x="892.10" y="1935.5" ></text>
</g>
<g >
<title>__fget (13 samples, 0.22%)</title><rect x="337.5" y="1909" width="2.6" height="15.0" fill="rgb(253,63,0)" rx="2" ry="2" />
<text  x="340.51" y="1919.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="79.4" y="1701" width="0.2" height="15.0" fill="rgb(238,143,9)" rx="2" ry="2" />
<text  x="82.42" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="126.2" y="1781" width="0.4" height="15.0" fill="rgb(210,32,28)" rx="2" ry="2" />
<text  x="129.24" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="680.0" y="1589" width="0.2" height="15.0" fill="rgb(210,177,53)" rx="2" ry="2" />
<text  x="683.03" y="1599.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="831.7" y="1621" width="0.2" height="15.0" fill="rgb(231,207,28)" rx="2" ry="2" />
<text  x="834.68" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="536.4" y="1957" width="1.2" height="15.0" fill="rgb(211,204,40)" rx="2" ry="2" />
<text  x="539.38" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="473.8" y="1941" width="0.2" height="15.0" fill="rgb(211,3,4)" rx="2" ry="2" />
<text  x="476.76" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="560.2" y="1877" width="0.2" height="15.0" fill="rgb(226,200,36)" rx="2" ry="2" />
<text  x="563.19" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="470.6" y="1701" width="0.2" height="15.0" fill="rgb(237,178,47)" rx="2" ry="2" />
<text  x="473.56" y="1711.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="51.6" y="1941" width="0.6" height="15.0" fill="rgb(229,133,21)" rx="2" ry="2" />
<text  x="54.61" y="1951.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="184.7" y="2037" width="0.2" height="15.0" fill="rgb(205,54,41)" rx="2" ry="2" />
<text  x="187.66" y="2047.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (26 samples, 0.44%)</title><rect x="1132.2" y="2037" width="5.2" height="15.0" fill="rgb(210,214,1)" rx="2" ry="2" />
<text  x="1135.18" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="753.9" y="1685" width="0.2" height="15.0" fill="rgb(223,33,44)" rx="2" ry="2" />
<text  x="756.85" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="710.2" y="1989" width="0.2" height="15.0" fill="rgb(252,185,25)" rx="2" ry="2" />
<text  x="713.24" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="739.4" y="1637" width="0.2" height="15.0" fill="rgb(224,32,38)" rx="2" ry="2" />
<text  x="742.45" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="936.3" y="1845" width="0.2" height="15.0" fill="rgb(207,147,34)" rx="2" ry="2" />
<text  x="939.31" y="1855.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1119.6" y="1509" width="0.2" height="15.0" fill="rgb(239,53,24)" rx="2" ry="2" />
<text  x="1122.58" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="104.2" y="37" width="0.2" height="15.0" fill="rgb(237,111,49)" rx="2" ry="2" />
<text  x="107.23" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="1150.8" y="1973" width="0.2" height="15.0" fill="rgb(252,104,25)" rx="2" ry="2" />
<text  x="1153.79" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="860.1" y="1813" width="0.2" height="15.0" fill="rgb(241,102,41)" rx="2" ry="2" />
<text  x="863.09" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="273.1" y="1829" width="0.2" height="15.0" fill="rgb(254,51,51)" rx="2" ry="2" />
<text  x="276.09" y="1839.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="604.6" y="1861" width="0.2" height="15.0" fill="rgb(218,60,48)" rx="2" ry="2" />
<text  x="607.60" y="1871.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="257.5" y="1861" width="0.2" height="15.0" fill="rgb(206,22,22)" rx="2" ry="2" />
<text  x="260.48" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="590.4" y="1717" width="0.2" height="15.0" fill="rgb(211,78,29)" rx="2" ry="2" />
<text  x="593.40" y="1727.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="73.4" y="1941" width="0.4" height="15.0" fill="rgb(244,15,6)" rx="2" ry="2" />
<text  x="76.42" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="118.4" y="165" width="0.2" height="15.0" fill="rgb(223,172,32)" rx="2" ry="2" />
<text  x="121.44" y="175.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="889.3" y="1909" width="1.0" height="15.0" fill="rgb(250,121,28)" rx="2" ry="2" />
<text  x="892.30" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="611.4" y="1685" width="0.2" height="15.0" fill="rgb(243,221,34)" rx="2" ry="2" />
<text  x="614.40" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="923.9" y="1909" width="0.2" height="15.0" fill="rgb(218,107,8)" rx="2" ry="2" />
<text  x="926.91" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="264.7" y="1541" width="0.2" height="15.0" fill="rgb(246,102,35)" rx="2" ry="2" />
<text  x="267.69" y="1551.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="610.6" y="1557" width="0.2" height="15.0" fill="rgb(209,28,11)" rx="2" ry="2" />
<text  x="613.60" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="273.1" y="1573" width="0.2" height="15.0" fill="rgb(244,85,21)" rx="2" ry="2" />
<text  x="276.09" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="37.0" y="1957" width="0.4" height="15.0" fill="rgb(207,77,38)" rx="2" ry="2" />
<text  x="40.01" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="118.6" y="389" width="0.2" height="15.0" fill="rgb(206,150,0)" rx="2" ry="2" />
<text  x="121.64" y="399.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="229.5" y="1925" width="0.2" height="15.0" fill="rgb(221,162,47)" rx="2" ry="2" />
<text  x="232.47" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="124.2" y="1973" width="0.4" height="15.0" fill="rgb(214,162,39)" rx="2" ry="2" />
<text  x="127.24" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="421.1" y="1829" width="0.8" height="15.0" fill="rgb(239,181,21)" rx="2" ry="2" />
<text  x="424.14" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="603.4" y="1637" width="0.2" height="15.0" fill="rgb(228,156,44)" rx="2" ry="2" />
<text  x="606.40" y="1647.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="843.7" y="1765" width="0.2" height="15.0" fill="rgb(212,103,48)" rx="2" ry="2" />
<text  x="846.68" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="168.3" y="1957" width="0.2" height="15.0" fill="rgb(241,189,48)" rx="2" ry="2" />
<text  x="171.25" y="1967.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="810.7" y="1653" width="0.2" height="15.0" fill="rgb(216,87,19)" rx="2" ry="2" />
<text  x="813.67" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1188.8" y="1797" width="0.4" height="15.0" fill="rgb(246,206,13)" rx="2" ry="2" />
<text  x="1191.80" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="164.5" y="1989" width="1.2" height="15.0" fill="rgb(205,90,47)" rx="2" ry="2" />
<text  x="167.45" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="787.3" y="1365" width="0.8" height="15.0" fill="rgb(222,32,1)" rx="2" ry="2" />
<text  x="790.26" y="1375.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (6 samples, 0.10%)</title><rect x="537.6" y="1973" width="1.2" height="15.0" fill="rgb(220,103,17)" rx="2" ry="2" />
<text  x="540.58" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (697 samples, 11.82%)</title><rect x="721.2" y="1973" width="139.5" height="15.0" fill="rgb(240,8,53)" rx="2" ry="2" />
<text  x="724.24" y="1983.5" >folly::AsyncSocke..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.0" y="1845" width="0.2" height="15.0" fill="rgb(243,108,33)" rx="2" ry="2" />
<text  x="160.05" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="306.5" y="1717" width="0.2" height="15.0" fill="rgb(217,99,25)" rx="2" ry="2" />
<text  x="309.50" y="1727.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.2" y="1749" width="0.2" height="15.0" fill="rgb(245,33,27)" rx="2" ry="2" />
<text  x="124.24" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (4 samples, 0.07%)</title><rect x="719.2" y="1973" width="0.8" height="15.0" fill="rgb(231,108,45)" rx="2" ry="2" />
<text  x="722.24" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="567.6" y="1845" width="0.2" height="15.0" fill="rgb(251,124,22)" rx="2" ry="2" />
<text  x="570.59" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="835.7" y="1685" width="0.2" height="15.0" fill="rgb(225,57,13)" rx="2" ry="2" />
<text  x="838.68" y="1695.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="889.3" y="1813" width="0.8" height="15.0" fill="rgb(207,46,34)" rx="2" ry="2" />
<text  x="892.30" y="1823.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="321.5" y="1381" width="0.2" height="15.0" fill="rgb(245,43,42)" rx="2" ry="2" />
<text  x="324.51" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="981.7" y="1733" width="0.2" height="15.0" fill="rgb(229,165,48)" rx="2" ry="2" />
<text  x="984.73" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="321.5" y="1685" width="0.2" height="15.0" fill="rgb(233,123,47)" rx="2" ry="2" />
<text  x="324.51" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="664.0" y="1861" width="0.2" height="15.0" fill="rgb(252,146,49)" rx="2" ry="2" />
<text  x="667.02" y="1871.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="120.4" y="1605" width="0.2" height="15.0" fill="rgb(224,228,11)" rx="2" ry="2" />
<text  x="123.44" y="1615.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="869.7" y="1989" width="0.4" height="15.0" fill="rgb(242,93,18)" rx="2" ry="2" />
<text  x="872.69" y="1999.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="641.4" y="1813" width="0.2" height="15.0" fill="rgb(227,136,48)" rx="2" ry="2" />
<text  x="644.41" y="1823.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (3 samples, 0.05%)</title><rect x="162.5" y="1973" width="0.6" height="15.0" fill="rgb(240,117,9)" rx="2" ry="2" />
<text  x="165.45" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="735.4" y="1733" width="0.2" height="15.0" fill="rgb(251,51,38)" rx="2" ry="2" />
<text  x="738.45" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (2 samples, 0.03%)</title><rect x="534.2" y="1989" width="0.4" height="15.0" fill="rgb(212,196,33)" rx="2" ry="2" />
<text  x="537.18" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="164.5" y="1973" width="1.2" height="15.0" fill="rgb(206,190,35)" rx="2" ry="2" />
<text  x="167.45" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="707.2" y="1733" width="0.4" height="15.0" fill="rgb(242,31,39)" rx="2" ry="2" />
<text  x="710.24" y="1743.5" ></text>
</g>
<g >
<title>tcp_drop (1 samples, 0.02%)</title><rect x="831.9" y="1589" width="0.2" height="15.0" fill="rgb(252,36,6)" rx="2" ry="2" />
<text  x="834.88" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1149.8" y="1925" width="0.2" height="15.0" fill="rgb(235,105,53)" rx="2" ry="2" />
<text  x="1152.79" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="981.7" y="1829" width="0.2" height="15.0" fill="rgb(206,73,54)" rx="2" ry="2" />
<text  x="984.73" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="160.1" y="2021" width="0.4" height="15.0" fill="rgb(250,189,16)" rx="2" ry="2" />
<text  x="163.05" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (4 samples, 0.07%)</title><rect x="842.1" y="1909" width="0.8" height="15.0" fill="rgb(252,56,9)" rx="2" ry="2" />
<text  x="845.08" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1005.1" y="1669" width="0.2" height="15.0" fill="rgb(225,113,7)" rx="2" ry="2" />
<text  x="1008.14" y="1679.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (10 samples, 0.17%)</title><rect x="333.9" y="1909" width="2.0" height="15.0" fill="rgb(211,64,39)" rx="2" ry="2" />
<text  x="336.91" y="1919.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="962.3" y="2005" width="0.2" height="15.0" fill="rgb(214,91,46)" rx="2" ry="2" />
<text  x="965.32" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="935.3" y="1621" width="0.2" height="15.0" fill="rgb(252,190,32)" rx="2" ry="2" />
<text  x="938.31" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (21 samples, 0.36%)</title><rect x="86.0" y="1989" width="4.2" height="15.0" fill="rgb(241,57,27)" rx="2" ry="2" />
<text  x="89.03" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="897.1" y="2021" width="1.6" height="15.0" fill="rgb(221,148,54)" rx="2" ry="2" />
<text  x="900.10" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="70.2" y="1893" width="0.6" height="15.0" fill="rgb(214,211,52)" rx="2" ry="2" />
<text  x="73.22" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="712.4" y="1973" width="0.2" height="15.0" fill="rgb(234,215,7)" rx="2" ry="2" />
<text  x="715.44" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="875.3" y="1765" width="0.2" height="15.0" fill="rgb(206,79,27)" rx="2" ry="2" />
<text  x="878.29" y="1775.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="255.9" y="1861" width="0.8" height="15.0" fill="rgb(219,198,23)" rx="2" ry="2" />
<text  x="258.88" y="1871.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="712.4" y="1717" width="0.2" height="15.0" fill="rgb(210,9,2)" rx="2" ry="2" />
<text  x="715.44" y="1727.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="535.8" y="1797" width="0.2" height="15.0" fill="rgb(209,95,7)" rx="2" ry="2" />
<text  x="538.78" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.2" y="277" width="0.2" height="15.0" fill="rgb(237,170,5)" rx="2" ry="2" />
<text  x="121.24" y="287.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="103.0" y="1733" width="17.8" height="15.0" fill="rgb(222,121,23)" rx="2" ry="2" />
<text  x="106.03" y="1743.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.07%)</title><rect x="315.1" y="1797" width="0.8" height="15.0" fill="rgb(222,143,15)" rx="2" ry="2" />
<text  x="318.10" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="965" width="15.4" height="15.0" fill="rgb(232,3,12)" rx="2" ry="2" />
<text  x="106.43" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="753.9" y="1557" width="0.2" height="15.0" fill="rgb(215,21,41)" rx="2" ry="2" />
<text  x="756.85" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="523.0" y="1669" width="0.2" height="15.0" fill="rgb(225,62,15)" rx="2" ry="2" />
<text  x="525.97" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="886.3" y="1957" width="0.2" height="15.0" fill="rgb(228,210,39)" rx="2" ry="2" />
<text  x="889.30" y="1967.5" ></text>
</g>
<g >
<title>__sock_release (355 samples, 6.02%)</title><rect x="759.1" y="1781" width="71.0" height="15.0" fill="rgb(239,222,29)" rx="2" ry="2" />
<text  x="762.05" y="1791.5" >__sock_r..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="992.7" y="1973" width="0.2" height="15.0" fill="rgb(215,224,9)" rx="2" ry="2" />
<text  x="995.73" y="1983.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="980.1" y="1941" width="0.8" height="15.0" fill="rgb(243,188,26)" rx="2" ry="2" />
<text  x="983.13" y="1951.5" ></text>
</g>
<g >
<title>skb_clone (24 samples, 0.41%)</title><rect x="308.3" y="1813" width="4.8" height="15.0" fill="rgb(233,61,38)" rx="2" ry="2" />
<text  x="311.30" y="1823.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="505.0" y="1781" width="0.2" height="15.0" fill="rgb(206,152,50)" rx="2" ry="2" />
<text  x="507.97" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="104.4" y="37" width="0.6" height="15.0" fill="rgb(224,133,38)" rx="2" ry="2" />
<text  x="107.43" y="47.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="175.9" y="2021" width="0.2" height="15.0" fill="rgb(239,82,45)" rx="2" ry="2" />
<text  x="178.86" y="2031.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="842.1" y="1893" width="0.8" height="15.0" fill="rgb(239,41,33)" rx="2" ry="2" />
<text  x="845.08" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="485" width="15.2" height="15.0" fill="rgb(214,214,51)" rx="2" ry="2" />
<text  x="106.43" y="495.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1009.1" y="2005" width="0.2" height="15.0" fill="rgb(207,36,35)" rx="2" ry="2" />
<text  x="1012.14" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="704.4" y="1749" width="0.2" height="15.0" fill="rgb(240,115,47)" rx="2" ry="2" />
<text  x="707.44" y="1759.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="1091.4" y="1621" width="0.2" height="15.0" fill="rgb(222,76,5)" rx="2" ry="2" />
<text  x="1094.37" y="1631.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="27.6" y="1973" width="0.4" height="15.0" fill="rgb(240,87,5)" rx="2" ry="2" />
<text  x="30.61" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="856.1" y="1877" width="0.2" height="15.0" fill="rgb(216,49,11)" rx="2" ry="2" />
<text  x="859.09" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.1" y="1877" width="0.2" height="15.0" fill="rgb(227,174,43)" rx="2" ry="2" />
<text  x="844.08" y="1887.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="608.6" y="1813" width="0.2" height="15.0" fill="rgb(243,57,37)" rx="2" ry="2" />
<text  x="611.60" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (98 samples, 1.66%)</title><rect x="916.9" y="1989" width="19.6" height="15.0" fill="rgb(210,36,13)" rx="2" ry="2" />
<text  x="919.91" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="523.0" y="1877" width="0.2" height="15.0" fill="rgb(233,227,54)" rx="2" ry="2" />
<text  x="525.97" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="134.4" y="1957" width="0.2" height="15.0" fill="rgb(241,90,3)" rx="2" ry="2" />
<text  x="137.44" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.2" y="1845" width="0.8" height="15.0" fill="rgb(219,196,43)" rx="2" ry="2" />
<text  x="14.20" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="62.2" y="1877" width="0.2" height="15.0" fill="rgb(234,133,17)" rx="2" ry="2" />
<text  x="65.22" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="611.6" y="1909" width="0.2" height="15.0" fill="rgb(232,27,52)" rx="2" ry="2" />
<text  x="614.60" y="1919.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="921.7" y="1797" width="0.8" height="15.0" fill="rgb(219,198,26)" rx="2" ry="2" />
<text  x="924.71" y="1807.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1149.8" y="1765" width="0.2" height="15.0" fill="rgb(251,168,11)" rx="2" ry="2" />
<text  x="1152.79" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (34 samples, 0.58%)</title><rect x="982.1" y="1973" width="6.8" height="15.0" fill="rgb(216,220,26)" rx="2" ry="2" />
<text  x="985.13" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="118.6" y="165" width="0.2" height="15.0" fill="rgb(230,158,34)" rx="2" ry="2" />
<text  x="121.64" y="175.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="1102.0" y="1893" width="0.8" height="15.0" fill="rgb(252,72,47)" rx="2" ry="2" />
<text  x="1104.97" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="634.4" y="1941" width="0.6" height="15.0" fill="rgb(251,16,9)" rx="2" ry="2" />
<text  x="637.41" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="217.1" y="1845" width="0.8" height="15.0" fill="rgb(254,50,2)" rx="2" ry="2" />
<text  x="220.07" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1179.6" y="2021" width="0.2" height="15.0" fill="rgb(233,82,33)" rx="2" ry="2" />
<text  x="1182.60" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="470.6" y="1909" width="0.2" height="15.0" fill="rgb(220,70,50)" rx="2" ry="2" />
<text  x="473.56" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="829.9" y="1621" width="0.2" height="15.0" fill="rgb(229,205,6)" rx="2" ry="2" />
<text  x="832.88" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="648.4" y="1701" width="0.2" height="15.0" fill="rgb(211,66,49)" rx="2" ry="2" />
<text  x="651.42" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (2 samples, 0.03%)</title><rect x="849.3" y="1941" width="0.4" height="15.0" fill="rgb(210,122,7)" rx="2" ry="2" />
<text  x="852.28" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="35.6" y="1989" width="0.2" height="15.0" fill="rgb(215,110,23)" rx="2" ry="2" />
<text  x="38.61" y="1999.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="696.8" y="1877" width="0.4" height="15.0" fill="rgb(234,211,31)" rx="2" ry="2" />
<text  x="699.83" y="1887.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="504.6" y="1861" width="0.2" height="15.0" fill="rgb(237,100,19)" rx="2" ry="2" />
<text  x="507.57" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="984.7" y="1797" width="0.2" height="15.0" fill="rgb(218,118,45)" rx="2" ry="2" />
<text  x="987.73" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="949.9" y="2005" width="0.2" height="15.0" fill="rgb(222,201,0)" rx="2" ry="2" />
<text  x="952.92" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="829.9" y="1669" width="0.2" height="15.0" fill="rgb(218,209,4)" rx="2" ry="2" />
<text  x="832.88" y="1679.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="787.9" y="1141" width="0.2" height="15.0" fill="rgb(224,7,46)" rx="2" ry="2" />
<text  x="790.86" y="1151.5" ></text>
</g>
<g >
<title>ipv4_dst_check (4 samples, 0.07%)</title><rect x="306.9" y="1797" width="0.8" height="15.0" fill="rgb(216,116,46)" rx="2" ry="2" />
<text  x="309.90" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="117.0" y="37" width="0.2" height="15.0" fill="rgb(224,193,18)" rx="2" ry="2" />
<text  x="120.04" y="47.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="138.4" y="1989" width="0.4" height="15.0" fill="rgb(217,202,28)" rx="2" ry="2" />
<text  x="141.44" y="1999.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="853.3" y="1589" width="0.2" height="15.0" fill="rgb(219,180,13)" rx="2" ry="2" />
<text  x="856.29" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="969.1" y="1733" width="0.2" height="15.0" fill="rgb(242,62,30)" rx="2" ry="2" />
<text  x="972.13" y="1743.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="119.8" y="1557" width="0.2" height="15.0" fill="rgb(227,19,53)" rx="2" ry="2" />
<text  x="122.84" y="1567.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="778.5" y="1685" width="0.2" height="15.0" fill="rgb(236,153,12)" rx="2" ry="2" />
<text  x="781.46" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_locked (3 samples, 0.05%)</title><rect x="287.3" y="1413" width="0.6" height="15.0" fill="rgb(223,76,52)" rx="2" ry="2" />
<text  x="290.29" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="483.6" y="1797" width="0.2" height="15.0" fill="rgb(253,147,30)" rx="2" ry="2" />
<text  x="486.56" y="1807.5" ></text>
</g>
<g >
<title>sys_close (3 samples, 0.05%)</title><rect x="834.9" y="1877" width="0.6" height="15.0" fill="rgb(206,0,21)" rx="2" ry="2" />
<text  x="837.88" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="357.1" y="1525" width="0.2" height="15.0" fill="rgb(213,140,30)" rx="2" ry="2" />
<text  x="360.12" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="979.1" y="1941" width="0.2" height="15.0" fill="rgb(209,217,34)" rx="2" ry="2" />
<text  x="982.13" y="1951.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="306.5" y="1525" width="0.2" height="15.0" fill="rgb(228,217,51)" rx="2" ry="2" />
<text  x="309.50" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="140.8" y="1941" width="0.4" height="15.0" fill="rgb(221,118,53)" rx="2" ry="2" />
<text  x="143.84" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;void  (12 samples, 0.20%)</title><rect x="933.9" y="1973" width="2.4" height="15.0" fill="rgb(233,119,54)" rx="2" ry="2" />
<text  x="936.91" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1091.0" y="1925" width="0.8" height="15.0" fill="rgb(242,122,21)" rx="2" ry="2" />
<text  x="1093.97" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="553.4" y="1925" width="0.4" height="15.0" fill="rgb(242,212,50)" rx="2" ry="2" />
<text  x="556.38" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (35 samples, 0.59%)</title><rect x="936.7" y="2005" width="7.0" height="15.0" fill="rgb(219,105,10)" rx="2" ry="2" />
<text  x="939.71" y="2015.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="504.0" y="1685" width="0.2" height="15.0" fill="rgb(211,172,20)" rx="2" ry="2" />
<text  x="506.97" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~new_allocator (1 samples, 0.02%)</title><rect x="81.6" y="1877" width="0.2" height="15.0" fill="rgb(244,53,46)" rx="2" ry="2" />
<text  x="84.62" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="211.5" y="1781" width="0.2" height="15.0" fill="rgb(231,177,45)" rx="2" ry="2" />
<text  x="214.47" y="1791.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1068.4" y="1877" width="0.2" height="15.0" fill="rgb(218,125,44)" rx="2" ry="2" />
<text  x="1071.36" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="533.6" y="1973" width="0.6" height="15.0" fill="rgb(215,178,0)" rx="2" ry="2" />
<text  x="536.58" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (1 samples, 0.02%)</title><rect x="64.2" y="1973" width="0.2" height="15.0" fill="rgb(240,207,42)" rx="2" ry="2" />
<text  x="67.22" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1130.2" y="2037" width="0.8" height="15.0" fill="rgb(236,181,24)" rx="2" ry="2" />
<text  x="1133.18" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="126.2" y="1845" width="0.4" height="15.0" fill="rgb(241,13,6)" rx="2" ry="2" />
<text  x="129.24" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="907.7" y="1989" width="0.8" height="15.0" fill="rgb(226,15,0)" rx="2" ry="2" />
<text  x="910.70" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="84.8" y="1925" width="0.2" height="15.0" fill="rgb(219,11,54)" rx="2" ry="2" />
<text  x="87.83" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="851.1" y="1893" width="0.4" height="15.0" fill="rgb(246,101,5)" rx="2" ry="2" />
<text  x="854.09" y="1903.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (6 samples, 0.10%)</title><rect x="763.3" y="1733" width="1.2" height="15.0" fill="rgb(241,39,49)" rx="2" ry="2" />
<text  x="766.26" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="97.4" y="2021" width="2.2" height="15.0" fill="rgb(225,82,8)" rx="2" ry="2" />
<text  x="100.43" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="858.5" y="1845" width="0.2" height="15.0" fill="rgb(244,158,3)" rx="2" ry="2" />
<text  x="861.49" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="271.9" y="1589" width="0.2" height="15.0" fill="rgb(208,43,33)" rx="2" ry="2" />
<text  x="274.89" y="1599.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="118.8" y="965" width="0.2" height="15.0" fill="rgb(251,183,41)" rx="2" ry="2" />
<text  x="121.84" y="975.5" ></text>
</g>
<g >
<title>sched_clock (4 samples, 0.07%)</title><rect x="315.1" y="1813" width="0.8" height="15.0" fill="rgb(233,23,31)" rx="2" ry="2" />
<text  x="318.10" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="122.4" y="1861" width="0.2" height="15.0" fill="rgb(226,160,50)" rx="2" ry="2" />
<text  x="125.44" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="167.7" y="1957" width="0.2" height="15.0" fill="rgb(217,162,9)" rx="2" ry="2" />
<text  x="170.65" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="879.5" y="1621" width="0.2" height="15.0" fill="rgb(212,64,0)" rx="2" ry="2" />
<text  x="882.49" y="1631.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="661.6" y="2005" width="0.2" height="15.0" fill="rgb(234,67,53)" rx="2" ry="2" />
<text  x="664.62" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.83%)</title><rect x="102.6" y="1973" width="21.6" height="15.0" fill="rgb(214,59,37)" rx="2" ry="2" />
<text  x="105.63" y="1983.5" >[..</text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="969.1" y="1509" width="0.2" height="15.0" fill="rgb(223,183,19)" rx="2" ry="2" />
<text  x="972.13" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="150.6" y="1845" width="0.2" height="15.0" fill="rgb(244,115,51)" rx="2" ry="2" />
<text  x="153.65" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="298.7" y="1669" width="0.2" height="15.0" fill="rgb(240,18,47)" rx="2" ry="2" />
<text  x="301.70" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="1026.7" y="2053" width="0.8" height="15.0" fill="rgb(208,91,48)" rx="2" ry="2" />
<text  x="1029.74" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="611.4" y="1781" width="0.2" height="15.0" fill="rgb(248,6,7)" rx="2" ry="2" />
<text  x="614.40" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="754.5" y="1765" width="0.4" height="15.0" fill="rgb(227,13,2)" rx="2" ry="2" />
<text  x="757.45" y="1775.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="953.3" y="2005" width="0.2" height="15.0" fill="rgb(242,90,24)" rx="2" ry="2" />
<text  x="956.32" y="2015.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="840.1" y="1909" width="0.2" height="15.0" fill="rgb(219,39,44)" rx="2" ry="2" />
<text  x="843.08" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="983.9" y="1909" width="1.0" height="15.0" fill="rgb(253,33,41)" rx="2" ry="2" />
<text  x="986.93" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="429.9" y="1973" width="0.6" height="15.0" fill="rgb(238,83,40)" rx="2" ry="2" />
<text  x="432.94" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="149" width="14.6" height="15.0" fill="rgb(239,195,44)" rx="2" ry="2" />
<text  x="106.43" y="159.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="590.4" y="1541" width="0.2" height="15.0" fill="rgb(245,81,30)" rx="2" ry="2" />
<text  x="593.40" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="914.9" y="1925" width="0.2" height="15.0" fill="rgb(209,212,13)" rx="2" ry="2" />
<text  x="917.91" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="61.8" y="1861" width="0.2" height="15.0" fill="rgb(222,6,9)" rx="2" ry="2" />
<text  x="64.82" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="1110.4" y="1829" width="0.2" height="15.0" fill="rgb(232,125,14)" rx="2" ry="2" />
<text  x="1113.37" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="829.9" y="1589" width="0.2" height="15.0" fill="rgb(238,229,1)" rx="2" ry="2" />
<text  x="832.88" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="954.7" y="1877" width="0.2" height="15.0" fill="rgb(254,153,48)" rx="2" ry="2" />
<text  x="957.72" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="933.7" y="1685" width="0.2" height="15.0" fill="rgb(224,165,6)" rx="2" ry="2" />
<text  x="936.71" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="831.9" y="1733" width="0.2" height="15.0" fill="rgb(210,36,4)" rx="2" ry="2" />
<text  x="834.88" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="752.5" y="1653" width="0.2" height="15.0" fill="rgb(224,179,20)" rx="2" ry="2" />
<text  x="755.45" y="1663.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="943.5" y="1893" width="0.2" height="15.0" fill="rgb(236,80,7)" rx="2" ry="2" />
<text  x="946.52" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="12.6" y="1925" width="1.0" height="15.0" fill="rgb(205,167,6)" rx="2" ry="2" />
<text  x="15.60" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="27.2" y="1941" width="0.2" height="15.0" fill="rgb(244,175,35)" rx="2" ry="2" />
<text  x="30.21" y="1951.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="829.9" y="1509" width="0.2" height="15.0" fill="rgb(241,95,48)" rx="2" ry="2" />
<text  x="832.88" y="1519.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="541.4" y="1989" width="0.2" height="15.0" fill="rgb(228,57,19)" rx="2" ry="2" />
<text  x="544.38" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="980.7" y="1893" width="0.2" height="15.0" fill="rgb(238,79,18)" rx="2" ry="2" />
<text  x="983.73" y="1903.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="336.3" y="1957" width="0.4" height="15.0" fill="rgb(236,102,19)" rx="2" ry="2" />
<text  x="339.31" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1033.1" y="2037" width="0.2" height="15.0" fill="rgb(229,108,28)" rx="2" ry="2" />
<text  x="1036.15" y="2047.5" ></text>
</g>
<g >
<title>malloc (18 samples, 0.31%)</title><rect x="1185.6" y="2053" width="3.6" height="15.0" fill="rgb(251,111,31)" rx="2" ry="2" />
<text  x="1188.60" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1182.0" y="2021" width="0.2" height="15.0" fill="rgb(224,9,31)" rx="2" ry="2" />
<text  x="1185.00" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1098.4" y="1861" width="0.2" height="15.0" fill="rgb(206,14,7)" rx="2" ry="2" />
<text  x="1101.37" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_accept (81 samples, 1.37%)</title><rect x="367.7" y="1941" width="16.2" height="15.0" fill="rgb(235,161,39)" rx="2" ry="2" />
<text  x="370.72" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="158.7" y="1957" width="0.2" height="15.0" fill="rgb(221,95,40)" rx="2" ry="2" />
<text  x="161.65" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="1089.8" y="1909" width="0.8" height="15.0" fill="rgb(206,225,6)" rx="2" ry="2" />
<text  x="1092.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="110.4" y="37" width="0.2" height="15.0" fill="rgb(247,220,15)" rx="2" ry="2" />
<text  x="113.43" y="47.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="830.5" y="1813" width="0.2" height="15.0" fill="rgb(217,107,42)" rx="2" ry="2" />
<text  x="833.48" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="714.2" y="2021" width="0.2" height="15.0" fill="rgb(233,124,21)" rx="2" ry="2" />
<text  x="717.24" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1054.4" y="1893" width="0.2" height="15.0" fill="rgb(239,210,37)" rx="2" ry="2" />
<text  x="1057.35" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1033.3" y="1957" width="0.2" height="15.0" fill="rgb(229,216,49)" rx="2" ry="2" />
<text  x="1036.35" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="845.7" y="1909" width="0.2" height="15.0" fill="rgb(224,68,39)" rx="2" ry="2" />
<text  x="848.68" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="142.0" y="1861" width="0.2" height="15.0" fill="rgb(237,118,6)" rx="2" ry="2" />
<text  x="145.04" y="1871.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1111.6" y="1573" width="0.2" height="15.0" fill="rgb(212,201,43)" rx="2" ry="2" />
<text  x="1114.57" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="339.5" y="1845" width="0.6" height="15.0" fill="rgb(243,128,17)" rx="2" ry="2" />
<text  x="342.51" y="1855.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1185.2" y="2053" width="0.4" height="15.0" fill="rgb(211,78,42)" rx="2" ry="2" />
<text  x="1188.20" y="2063.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="704.4" y="1573" width="0.2" height="15.0" fill="rgb(215,113,43)" rx="2" ry="2" />
<text  x="707.44" y="1583.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="996.9" y="1925" width="0.2" height="15.0" fill="rgb(214,73,13)" rx="2" ry="2" />
<text  x="999.93" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (11 samples, 0.19%)</title><rect x="47.6" y="1941" width="2.2" height="15.0" fill="rgb(205,23,44)" rx="2" ry="2" />
<text  x="50.61" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="453.2" y="1989" width="0.8" height="15.0" fill="rgb(216,63,7)" rx="2" ry="2" />
<text  x="456.15" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="985.5" y="1893" width="0.2" height="15.0" fill="rgb(219,15,3)" rx="2" ry="2" />
<text  x="988.53" y="1903.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="78.4" y="1717" width="0.6" height="15.0" fill="rgb(226,194,37)" rx="2" ry="2" />
<text  x="81.42" y="1727.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="84.8" y="1717" width="0.2" height="15.0" fill="rgb(207,102,42)" rx="2" ry="2" />
<text  x="87.83" y="1727.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="890.5" y="1717" width="0.2" height="15.0" fill="rgb(252,148,5)" rx="2" ry="2" />
<text  x="893.50" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="512.0" y="1893" width="0.2" height="15.0" fill="rgb(208,109,20)" rx="2" ry="2" />
<text  x="514.97" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="256.5" y="1749" width="0.2" height="15.0" fill="rgb(217,75,35)" rx="2" ry="2" />
<text  x="259.48" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="751.9" y="1589" width="0.2" height="15.0" fill="rgb(205,152,25)" rx="2" ry="2" />
<text  x="754.85" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1067.8" y="1669" width="0.4" height="15.0" fill="rgb(238,192,25)" rx="2" ry="2" />
<text  x="1070.76" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="68.4" y="1893" width="0.4" height="15.0" fill="rgb(206,48,48)" rx="2" ry="2" />
<text  x="71.42" y="1903.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="916.5" y="1701" width="0.2" height="15.0" fill="rgb(216,121,17)" rx="2" ry="2" />
<text  x="919.51" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="559.0" y="1957" width="0.2" height="15.0" fill="rgb(213,70,54)" rx="2" ry="2" />
<text  x="561.99" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="126.2" y="1973" width="0.4" height="15.0" fill="rgb(241,127,51)" rx="2" ry="2" />
<text  x="129.24" y="1983.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (11 samples, 0.19%)</title><rect x="1099.2" y="1893" width="2.2" height="15.0" fill="rgb(235,66,40)" rx="2" ry="2" />
<text  x="1102.17" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1188.8" y="1893" width="0.4" height="15.0" fill="rgb(239,93,29)" rx="2" ry="2" />
<text  x="1191.80" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="76.4" y="1893" width="0.2" height="15.0" fill="rgb(254,218,26)" rx="2" ry="2" />
<text  x="79.42" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="503.8" y="1845" width="0.4" height="15.0" fill="rgb(242,183,40)" rx="2" ry="2" />
<text  x="506.77" y="1855.5" ></text>
</g>
<g >
<title>__fget (6 samples, 0.10%)</title><rect x="705.2" y="1877" width="1.2" height="15.0" fill="rgb(247,87,51)" rx="2" ry="2" />
<text  x="708.24" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="264.7" y="1813" width="0.2" height="15.0" fill="rgb(229,103,4)" rx="2" ry="2" />
<text  x="267.69" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="635.4" y="2005" width="0.2" height="15.0" fill="rgb(240,56,44)" rx="2" ry="2" />
<text  x="638.41" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (102 samples, 1.73%)</title><rect x="64.4" y="1973" width="20.4" height="15.0" fill="rgb(232,92,32)" rx="2" ry="2" />
<text  x="67.42" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="523.0" y="1685" width="0.2" height="15.0" fill="rgb(238,144,16)" rx="2" ry="2" />
<text  x="525.97" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (4 samples, 0.07%)</title><rect x="902.7" y="1973" width="0.8" height="15.0" fill="rgb(217,51,25)" rx="2" ry="2" />
<text  x="905.70" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="80.0" y="1861" width="0.2" height="15.0" fill="rgb(236,107,36)" rx="2" ry="2" />
<text  x="83.02" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="829.9" y="1429" width="0.2" height="15.0" fill="rgb(212,227,15)" rx="2" ry="2" />
<text  x="832.88" y="1439.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="583.8" y="2005" width="0.2" height="15.0" fill="rgb(243,123,42)" rx="2" ry="2" />
<text  x="586.79" y="2015.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.02%)</title><rect x="239.7" y="1989" width="0.2" height="15.0" fill="rgb(247,206,24)" rx="2" ry="2" />
<text  x="242.68" y="1999.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="119.4" y="1333" width="0.2" height="15.0" fill="rgb(253,40,36)" rx="2" ry="2" />
<text  x="122.44" y="1343.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1110.6" y="1653" width="0.2" height="15.0" fill="rgb(212,31,39)" rx="2" ry="2" />
<text  x="1113.57" y="1663.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="556.2" y="1861" width="0.4" height="15.0" fill="rgb(226,210,2)" rx="2" ry="2" />
<text  x="559.19" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="923.9" y="1925" width="0.2" height="15.0" fill="rgb(248,177,38)" rx="2" ry="2" />
<text  x="926.91" y="1935.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="677.0" y="1845" width="0.4" height="15.0" fill="rgb(250,105,35)" rx="2" ry="2" />
<text  x="680.03" y="1855.5" ></text>
</g>
<g >
<title>security_socket_accept (5 samples, 0.08%)</title><rect x="394.5" y="1957" width="1.0" height="15.0" fill="rgb(220,13,36)" rx="2" ry="2" />
<text  x="397.53" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="683.8" y="1909" width="0.2" height="15.0" fill="rgb(252,4,16)" rx="2" ry="2" />
<text  x="686.83" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="888.7" y="1877" width="0.2" height="15.0" fill="rgb(224,157,27)" rx="2" ry="2" />
<text  x="891.70" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1126.2" y="1717" width="0.2" height="15.0" fill="rgb(207,222,13)" rx="2" ry="2" />
<text  x="1129.18" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="889.1" y="1669" width="0.2" height="15.0" fill="rgb(223,216,31)" rx="2" ry="2" />
<text  x="892.10" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="588.2" y="1957" width="0.2" height="15.0" fill="rgb(211,37,22)" rx="2" ry="2" />
<text  x="591.20" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="512.0" y="1829" width="0.2" height="15.0" fill="rgb(233,203,2)" rx="2" ry="2" />
<text  x="514.97" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="229.5" y="1973" width="0.2" height="15.0" fill="rgb(227,208,14)" rx="2" ry="2" />
<text  x="232.47" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="333.3" y="1765" width="0.2" height="15.0" fill="rgb(245,176,9)" rx="2" ry="2" />
<text  x="336.31" y="1775.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="971.3" y="2005" width="0.4" height="15.0" fill="rgb(211,125,42)" rx="2" ry="2" />
<text  x="974.33" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1139.0" y="1973" width="0.2" height="15.0" fill="rgb(228,107,10)" rx="2" ry="2" />
<text  x="1141.98" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (289 samples, 4.90%)</title><rect x="32.6" y="2005" width="57.8" height="15.0" fill="rgb(223,8,51)" rx="2" ry="2" />
<text  x="35.61" y="2015.5" >folly:..</text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="339.7" y="1717" width="0.4" height="15.0" fill="rgb(228,80,41)" rx="2" ry="2" />
<text  x="342.71" y="1727.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1125.6" y="1621" width="0.2" height="15.0" fill="rgb(214,1,26)" rx="2" ry="2" />
<text  x="1128.58" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="428.5" y="1861" width="0.2" height="15.0" fill="rgb(225,226,35)" rx="2" ry="2" />
<text  x="431.54" y="1871.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="223.1" y="1653" width="0.2" height="15.0" fill="rgb(235,124,2)" rx="2" ry="2" />
<text  x="226.07" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (481 samples, 8.16%)</title><rect x="1033.9" y="2037" width="96.3" height="15.0" fill="rgb(210,35,46)" rx="2" ry="2" />
<text  x="1036.95" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="948.1" y="1989" width="1.4" height="15.0" fill="rgb(208,38,13)" rx="2" ry="2" />
<text  x="951.12" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="103.0" y="1701" width="17.8" height="15.0" fill="rgb(249,137,48)" rx="2" ry="2" />
<text  x="106.03" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="879.5" y="1797" width="0.2" height="15.0" fill="rgb(227,131,12)" rx="2" ry="2" />
<text  x="882.49" y="1807.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="415.3" y="1781" width="0.6" height="15.0" fill="rgb(237,5,47)" rx="2" ry="2" />
<text  x="418.34" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="697.6" y="1733" width="0.2" height="15.0" fill="rgb(232,5,40)" rx="2" ry="2" />
<text  x="700.63" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1749" width="0.2" height="15.0" fill="rgb(207,82,51)" rx="2" ry="2" />
<text  x="844.08" y="1759.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="62.0" y="1861" width="0.2" height="15.0" fill="rgb(233,188,53)" rx="2" ry="2" />
<text  x="65.02" y="1871.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="963.7" y="1941" width="0.2" height="15.0" fill="rgb(206,50,53)" rx="2" ry="2" />
<text  x="966.72" y="1951.5" ></text>
</g>
<g >
<title>fput (7 samples, 0.12%)</title><rect x="497.6" y="1973" width="1.4" height="15.0" fill="rgb(237,224,13)" rx="2" ry="2" />
<text  x="500.57" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="954.7" y="1973" width="0.2" height="15.0" fill="rgb(211,39,12)" rx="2" ry="2" />
<text  x="957.72" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="117.8" y="85" width="0.2" height="15.0" fill="rgb(210,208,33)" rx="2" ry="2" />
<text  x="120.84" y="95.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (3 samples, 0.05%)</title><rect x="633.8" y="1989" width="0.6" height="15.0" fill="rgb(254,64,3)" rx="2" ry="2" />
<text  x="636.81" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="287.9" y="1493" width="0.2" height="15.0" fill="rgb(240,139,52)" rx="2" ry="2" />
<text  x="290.89" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="44.0" y="1941" width="1.2" height="15.0" fill="rgb(228,35,29)" rx="2" ry="2" />
<text  x="47.01" y="1951.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="134.0" y="1941" width="0.4" height="15.0" fill="rgb(205,130,17)" rx="2" ry="2" />
<text  x="137.04" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="97.8" y="1893" width="0.2" height="15.0" fill="rgb(237,176,45)" rx="2" ry="2" />
<text  x="100.83" y="1903.5" ></text>
</g>
<g >
<title>cpu_needs_another_gp (1 samples, 0.02%)</title><rect x="635.4" y="1877" width="0.2" height="15.0" fill="rgb(228,187,6)" rx="2" ry="2" />
<text  x="638.41" y="1887.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="785.1" y="1605" width="0.2" height="15.0" fill="rgb(239,123,16)" rx="2" ry="2" />
<text  x="788.06" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="85.2" y="1813" width="0.2" height="15.0" fill="rgb(251,4,33)" rx="2" ry="2" />
<text  x="88.23" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="992.7" y="1989" width="0.2" height="15.0" fill="rgb(205,178,36)" rx="2" ry="2" />
<text  x="995.73" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="879.5" y="1685" width="0.2" height="15.0" fill="rgb(230,24,5)" rx="2" ry="2" />
<text  x="882.49" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="875.3" y="1797" width="0.2" height="15.0" fill="rgb(222,7,36)" rx="2" ry="2" />
<text  x="878.29" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="249.1" y="1765" width="0.2" height="15.0" fill="rgb(242,39,45)" rx="2" ry="2" />
<text  x="252.08" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="879.5" y="1589" width="0.2" height="15.0" fill="rgb(231,228,27)" rx="2" ry="2" />
<text  x="882.49" y="1599.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="74.2" y="1909" width="0.2" height="15.0" fill="rgb(229,210,22)" rx="2" ry="2" />
<text  x="77.22" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (14 samples, 0.24%)</title><rect x="654.6" y="2005" width="2.8" height="15.0" fill="rgb(229,71,31)" rx="2" ry="2" />
<text  x="657.62" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="219.7" y="1797" width="0.2" height="15.0" fill="rgb(212,85,18)" rx="2" ry="2" />
<text  x="222.67" y="1807.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="963.7" y="1925" width="0.2" height="15.0" fill="rgb(205,118,30)" rx="2" ry="2" />
<text  x="966.72" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1049.6" y="1845" width="0.2" height="15.0" fill="rgb(244,118,52)" rx="2" ry="2" />
<text  x="1052.55" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="954.7" y="1925" width="0.2" height="15.0" fill="rgb(215,86,17)" rx="2" ry="2" />
<text  x="957.72" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.2" y="1877" width="0.8" height="15.0" fill="rgb(236,214,37)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (2 samples, 0.03%)</title><rect x="843.9" y="1925" width="0.4" height="15.0" fill="rgb(207,11,10)" rx="2" ry="2" />
<text  x="846.88" y="1935.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (10 samples, 0.17%)</title><rect x="565.8" y="1989" width="2.0" height="15.0" fill="rgb(245,57,35)" rx="2" ry="2" />
<text  x="568.79" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="482.8" y="1781" width="0.6" height="15.0" fill="rgb(213,189,10)" rx="2" ry="2" />
<text  x="485.76" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="408.1" y="1797" width="0.2" height="15.0" fill="rgb(229,169,45)" rx="2" ry="2" />
<text  x="411.13" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="974.3" y="1941" width="0.2" height="15.0" fill="rgb(251,80,45)" rx="2" ry="2" />
<text  x="977.33" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (7 samples, 0.12%)</title><rect x="1145.6" y="2021" width="1.4" height="15.0" fill="rgb(244,184,40)" rx="2" ry="2" />
<text  x="1148.58" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="787.9" y="1253" width="0.2" height="15.0" fill="rgb(209,221,42)" rx="2" ry="2" />
<text  x="790.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="84.0" y="1925" width="0.2" height="15.0" fill="rgb(239,96,17)" rx="2" ry="2" />
<text  x="87.03" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="712.4" y="1733" width="0.2" height="15.0" fill="rgb(220,127,15)" rx="2" ry="2" />
<text  x="715.44" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="126.8" y="1989" width="0.2" height="15.0" fill="rgb(234,69,53)" rx="2" ry="2" />
<text  x="129.84" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="147.0" y="1877" width="0.2" height="15.0" fill="rgb(235,176,53)" rx="2" ry="2" />
<text  x="150.05" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="648.4" y="1829" width="0.2" height="15.0" fill="rgb(213,182,50)" rx="2" ry="2" />
<text  x="651.42" y="1839.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="869.3" y="1989" width="0.2" height="15.0" fill="rgb(229,106,8)" rx="2" ry="2" />
<text  x="872.29" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="53.0" y="1653" width="0.2" height="15.0" fill="rgb(209,35,11)" rx="2" ry="2" />
<text  x="56.01" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1120.2" y="1765" width="0.2" height="15.0" fill="rgb(205,41,36)" rx="2" ry="2" />
<text  x="1123.18" y="1775.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="256.5" y="1557" width="0.2" height="15.0" fill="rgb(229,41,20)" rx="2" ry="2" />
<text  x="259.48" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="332.5" y="1653" width="0.2" height="15.0" fill="rgb(206,49,11)" rx="2" ry="2" />
<text  x="335.51" y="1663.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="333.3" y="1733" width="0.2" height="15.0" fill="rgb(249,113,24)" rx="2" ry="2" />
<text  x="336.31" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="980.7" y="1845" width="0.2" height="15.0" fill="rgb(208,6,25)" rx="2" ry="2" />
<text  x="983.73" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="525.6" y="1781" width="0.2" height="15.0" fill="rgb(213,157,54)" rx="2" ry="2" />
<text  x="528.57" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="306.5" y="1637" width="0.2" height="15.0" fill="rgb(246,34,36)" rx="2" ry="2" />
<text  x="309.50" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="321.3" y="1749" width="0.2" height="15.0" fill="rgb(213,109,30)" rx="2" ry="2" />
<text  x="324.31" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1178.0" y="1957" width="0.2" height="15.0" fill="rgb(219,224,38)" rx="2" ry="2" />
<text  x="1181.00" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="363.5" y="1605" width="0.2" height="15.0" fill="rgb(215,87,49)" rx="2" ry="2" />
<text  x="366.52" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="223.1" y="1733" width="0.2" height="15.0" fill="rgb(213,59,14)" rx="2" ry="2" />
<text  x="226.07" y="1743.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1118.4" y="1477" width="0.2" height="15.0" fill="rgb(245,171,26)" rx="2" ry="2" />
<text  x="1121.38" y="1487.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="752.5" y="1589" width="0.2" height="15.0" fill="rgb(247,146,11)" rx="2" ry="2" />
<text  x="755.45" y="1599.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="363.5" y="1637" width="0.2" height="15.0" fill="rgb(239,172,49)" rx="2" ry="2" />
<text  x="366.52" y="1647.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="882.7" y="1925" width="0.2" height="15.0" fill="rgb(220,41,9)" rx="2" ry="2" />
<text  x="885.70" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.4" y="1877" width="0.2" height="15.0" fill="rgb(245,34,17)" rx="2" ry="2" />
<text  x="64.42" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="245" width="14.8" height="15.0" fill="rgb(239,39,51)" rx="2" ry="2" />
<text  x="106.43" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 0.73%)</title><rect x="569.4" y="1957" width="8.6" height="15.0" fill="rgb(252,108,38)" rx="2" ry="2" />
<text  x="572.39" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="935.3" y="1685" width="0.2" height="15.0" fill="rgb(205,52,54)" rx="2" ry="2" />
<text  x="938.31" y="1695.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="245.9" y="1909" width="0.2" height="15.0" fill="rgb(243,143,30)" rx="2" ry="2" />
<text  x="248.88" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1067.8" y="1653" width="0.4" height="15.0" fill="rgb(237,24,51)" rx="2" ry="2" />
<text  x="1070.76" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="1167.6" y="2053" width="0.4" height="15.0" fill="rgb(227,12,0)" rx="2" ry="2" />
<text  x="1170.59" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="897.3" y="1941" width="0.2" height="15.0" fill="rgb(215,115,46)" rx="2" ry="2" />
<text  x="900.30" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="880.5" y="1877" width="0.2" height="15.0" fill="rgb(223,163,9)" rx="2" ry="2" />
<text  x="883.50" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="546.0" y="1989" width="1.2" height="15.0" fill="rgb(223,228,27)" rx="2" ry="2" />
<text  x="548.98" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="860.1" y="1941" width="0.2" height="15.0" fill="rgb(218,1,53)" rx="2" ry="2" />
<text  x="863.09" y="1951.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1102.8" y="1909" width="0.2" height="15.0" fill="rgb(235,192,19)" rx="2" ry="2" />
<text  x="1105.77" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="218.1" y="1861" width="0.2" height="15.0" fill="rgb(249,51,45)" rx="2" ry="2" />
<text  x="221.07" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="223.1" y="1749" width="0.2" height="15.0" fill="rgb(207,174,46)" rx="2" ry="2" />
<text  x="226.07" y="1759.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="534.2" y="1941" width="0.2" height="15.0" fill="rgb(247,67,30)" rx="2" ry="2" />
<text  x="537.18" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="904.5" y="1989" width="0.4" height="15.0" fill="rgb(244,171,20)" rx="2" ry="2" />
<text  x="907.50" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="831.7" y="1749" width="0.2" height="15.0" fill="rgb(237,224,52)" rx="2" ry="2" />
<text  x="834.68" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="267.5" y="1685" width="0.2" height="15.0" fill="rgb(208,90,46)" rx="2" ry="2" />
<text  x="270.49" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="827.3" y="1637" width="0.2" height="15.0" fill="rgb(220,72,6)" rx="2" ry="2" />
<text  x="830.28" y="1647.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (13 samples, 0.22%)</title><rect x="1123.2" y="1957" width="2.6" height="15.0" fill="rgb(208,62,35)" rx="2" ry="2" />
<text  x="1126.18" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="1091.2" y="1797" width="0.6" height="15.0" fill="rgb(224,74,27)" rx="2" ry="2" />
<text  x="1094.17" y="1807.5" ></text>
</g>
<g >
<title>down_write (2 samples, 0.03%)</title><rect x="759.9" y="1765" width="0.4" height="15.0" fill="rgb(240,218,35)" rx="2" ry="2" />
<text  x="762.85" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="875.9" y="1941" width="0.2" height="15.0" fill="rgb(212,198,6)" rx="2" ry="2" />
<text  x="878.89" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.3" y="2021" width="0.2" height="15.0" fill="rgb(247,19,2)" rx="2" ry="2" />
<text  x="1023.34" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="118.6" y="37" width="0.2" height="15.0" fill="rgb(210,81,50)" rx="2" ry="2" />
<text  x="121.64" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1005.1" y="1957" width="0.2" height="15.0" fill="rgb(226,21,18)" rx="2" ry="2" />
<text  x="1008.14" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="611.6" y="1733" width="0.2" height="15.0" fill="rgb(242,145,38)" rx="2" ry="2" />
<text  x="614.60" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="603.4" y="1685" width="0.2" height="15.0" fill="rgb(243,4,40)" rx="2" ry="2" />
<text  x="606.40" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="80.0" y="1797" width="0.2" height="15.0" fill="rgb(205,127,5)" rx="2" ry="2" />
<text  x="83.02" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="930.5" y="1861" width="0.2" height="15.0" fill="rgb(239,174,27)" rx="2" ry="2" />
<text  x="933.51" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1188.8" y="1813" width="0.4" height="15.0" fill="rgb(253,2,44)" rx="2" ry="2" />
<text  x="1191.80" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="981.7" y="1893" width="0.2" height="15.0" fill="rgb(237,123,39)" rx="2" ry="2" />
<text  x="984.73" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="1130.2" y="1989" width="0.8" height="15.0" fill="rgb(236,105,41)" rx="2" ry="2" />
<text  x="1133.18" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="718.6" y="1973" width="0.2" height="15.0" fill="rgb(232,24,16)" rx="2" ry="2" />
<text  x="721.64" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="54.2" y="1957" width="0.2" height="15.0" fill="rgb(223,185,18)" rx="2" ry="2" />
<text  x="57.21" y="1967.5" ></text>
</g>
<g >
<title>secure_tcp_ts_off (1 samples, 0.02%)</title><rect x="936.3" y="1621" width="0.2" height="15.0" fill="rgb(214,182,48)" rx="2" ry="2" />
<text  x="939.31" y="1631.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="546.2" y="1941" width="0.2" height="15.0" fill="rgb(232,12,23)" rx="2" ry="2" />
<text  x="549.18" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1130.8" y="1829" width="0.2" height="15.0" fill="rgb(220,39,26)" rx="2" ry="2" />
<text  x="1133.78" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="72.4" y="1941" width="0.2" height="15.0" fill="rgb(227,221,13)" rx="2" ry="2" />
<text  x="75.42" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="357.1" y="1781" width="0.4" height="15.0" fill="rgb(218,96,18)" rx="2" ry="2" />
<text  x="360.12" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="897.5" y="1925" width="0.2" height="15.0" fill="rgb(249,149,45)" rx="2" ry="2" />
<text  x="900.50" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="71.4" y="1605" width="0.2" height="15.0" fill="rgb(230,57,52)" rx="2" ry="2" />
<text  x="74.42" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="504.0" y="1669" width="0.2" height="15.0" fill="rgb(245,130,54)" rx="2" ry="2" />
<text  x="506.97" y="1679.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="12.6" y="1973" width="1.0" height="15.0" fill="rgb(211,79,16)" rx="2" ry="2" />
<text  x="15.60" y="1983.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="1151.8" y="1973" width="0.2" height="15.0" fill="rgb(239,172,46)" rx="2" ry="2" />
<text  x="1154.79" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="946.1" y="1973" width="0.2" height="15.0" fill="rgb(207,131,19)" rx="2" ry="2" />
<text  x="949.12" y="1983.5" ></text>
</g>
<g >
<title>skb_free_head (15 samples, 0.25%)</title><rect x="1115.4" y="1461" width="3.0" height="15.0" fill="rgb(225,224,28)" rx="2" ry="2" />
<text  x="1118.37" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="624.6" y="1845" width="0.6" height="15.0" fill="rgb(233,216,40)" rx="2" ry="2" />
<text  x="627.61" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1174.6" y="1973" width="0.2" height="15.0" fill="rgb(212,227,8)" rx="2" ry="2" />
<text  x="1177.59" y="1983.5" ></text>
</g>
<g >
<title>dentry_free (7 samples, 0.12%)</title><rect x="741.8" y="1749" width="1.4" height="15.0" fill="rgb(244,221,21)" rx="2" ry="2" />
<text  x="744.85" y="1759.5" ></text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="1110.2" y="1877" width="0.4" height="15.0" fill="rgb(252,185,27)" rx="2" ry="2" />
<text  x="1113.17" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="618.2" y="1941" width="0.2" height="15.0" fill="rgb(245,85,12)" rx="2" ry="2" />
<text  x="621.21" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="955.3" y="1989" width="0.4" height="15.0" fill="rgb(240,154,11)" rx="2" ry="2" />
<text  x="958.32" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (12 samples, 0.20%)</title><rect x="151.2" y="1909" width="2.4" height="15.0" fill="rgb(211,29,22)" rx="2" ry="2" />
<text  x="154.25" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.02%)</title><rect x="623.2" y="1861" width="0.2" height="15.0" fill="rgb(219,70,54)" rx="2" ry="2" />
<text  x="626.21" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1053.6" y="1893" width="0.2" height="15.0" fill="rgb(243,64,31)" rx="2" ry="2" />
<text  x="1056.55" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="157.4" y="1717" width="0.3" height="15.0" fill="rgb(249,22,4)" rx="2" ry="2" />
<text  x="160.45" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="103.0" y="1621" width="17.6" height="15.0" fill="rgb(252,180,33)" rx="2" ry="2" />
<text  x="106.03" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="1164.4" y="2053" width="0.2" height="15.0" fill="rgb(243,12,43)" rx="2" ry="2" />
<text  x="1167.39" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="384.5" y="1797" width="0.2" height="15.0" fill="rgb(207,89,43)" rx="2" ry="2" />
<text  x="387.53" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="634.0" y="1973" width="0.2" height="15.0" fill="rgb(236,144,18)" rx="2" ry="2" />
<text  x="637.01" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11 samples, 0.19%)</title><rect x="422.9" y="1909" width="2.2" height="15.0" fill="rgb(214,121,17)" rx="2" ry="2" />
<text  x="425.94" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="116.8" y="37" width="0.2" height="15.0" fill="rgb(235,1,2)" rx="2" ry="2" />
<text  x="119.84" y="47.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="305.1" y="1685" width="0.2" height="15.0" fill="rgb(252,87,50)" rx="2" ry="2" />
<text  x="308.10" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="824.1" y="1621" width="0.2" height="15.0" fill="rgb(210,151,35)" rx="2" ry="2" />
<text  x="827.08" y="1631.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="32.0" y="1877" width="0.2" height="15.0" fill="rgb(237,195,29)" rx="2" ry="2" />
<text  x="35.01" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (8 samples, 0.14%)</title><rect x="209.1" y="1893" width="1.6" height="15.0" fill="rgb(225,185,9)" rx="2" ry="2" />
<text  x="212.07" y="1903.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="980.3" y="1925" width="0.6" height="15.0" fill="rgb(234,160,36)" rx="2" ry="2" />
<text  x="983.33" y="1935.5" ></text>
</g>
<g >
<title>inet_recvmsg (347 samples, 5.88%)</title><rect x="1053.8" y="1957" width="69.4" height="15.0" fill="rgb(213,104,20)" rx="2" ry="2" />
<text  x="1056.75" y="1967.5" >inet_re..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="869.7" y="1973" width="0.4" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="872.69" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="210.5" y="1877" width="0.2" height="15.0" fill="rgb(217,88,54)" rx="2" ry="2" />
<text  x="213.47" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="649.8" y="1989" width="0.4" height="15.0" fill="rgb(250,190,1)" rx="2" ry="2" />
<text  x="652.82" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="623.4" y="1733" width="0.2" height="15.0" fill="rgb(213,168,18)" rx="2" ry="2" />
<text  x="626.41" y="1743.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="610.6" y="1509" width="0.2" height="15.0" fill="rgb(208,213,19)" rx="2" ry="2" />
<text  x="613.60" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="402.1" y="1669" width="0.2" height="15.0" fill="rgb(245,2,17)" rx="2" ry="2" />
<text  x="405.13" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="321.5" y="1541" width="0.2" height="15.0" fill="rgb(252,211,15)" rx="2" ry="2" />
<text  x="324.51" y="1551.5" ></text>
</g>
<g >
<title>skb_release_all (24 samples, 0.41%)</title><rect x="1113.8" y="1493" width="4.8" height="15.0" fill="rgb(214,71,16)" rx="2" ry="2" />
<text  x="1116.77" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="408.1" y="1861" width="0.2" height="15.0" fill="rgb(238,129,33)" rx="2" ry="2" />
<text  x="411.13" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="860.1" y="1861" width="0.2" height="15.0" fill="rgb(211,210,9)" rx="2" ry="2" />
<text  x="863.09" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="381.5" y="1749" width="0.2" height="15.0" fill="rgb(238,151,37)" rx="2" ry="2" />
<text  x="384.53" y="1759.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1118.2" y="1413" width="0.2" height="15.0" fill="rgb(208,175,10)" rx="2" ry="2" />
<text  x="1121.18" y="1423.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="752.5" y="1349" width="0.2" height="15.0" fill="rgb(236,188,12)" rx="2" ry="2" />
<text  x="755.45" y="1359.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="421.1" y="1765" width="0.8" height="15.0" fill="rgb(223,97,17)" rx="2" ry="2" />
<text  x="424.14" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1005.1" y="1925" width="0.2" height="15.0" fill="rgb(253,84,24)" rx="2" ry="2" />
<text  x="1008.14" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="357.1" y="1957" width="0.4" height="15.0" fill="rgb(233,181,28)" rx="2" ry="2" />
<text  x="360.12" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="965.1" y="1989" width="0.2" height="15.0" fill="rgb(240,210,38)" rx="2" ry="2" />
<text  x="968.12" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (117 samples, 1.98%)</title><rect x="283.3" y="1749" width="23.4" height="15.0" fill="rgb(254,49,16)" rx="2" ry="2" />
<text  x="286.29" y="1759.5" >i..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="75.4" y="1957" width="0.2" height="15.0" fill="rgb(211,181,18)" rx="2" ry="2" />
<text  x="78.42" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="190.7" y="2021" width="3.8" height="15.0" fill="rgb(211,3,9)" rx="2" ry="2" />
<text  x="193.66" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="719.6" y="1893" width="0.4" height="15.0" fill="rgb(209,21,23)" rx="2" ry="2" />
<text  x="722.64" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (47 samples, 0.80%)</title><rect x="876.1" y="1957" width="9.4" height="15.0" fill="rgb(237,25,48)" rx="2" ry="2" />
<text  x="879.09" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="470.6" y="1717" width="0.2" height="15.0" fill="rgb(226,183,4)" rx="2" ry="2" />
<text  x="473.56" y="1727.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (87 samples, 1.48%)</title><rect x="527.6" y="2005" width="17.4" height="15.0" fill="rgb(233,105,18)" rx="2" ry="2" />
<text  x="530.58" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="273.1" y="1669" width="0.2" height="15.0" fill="rgb(248,8,11)" rx="2" ry="2" />
<text  x="276.09" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="943.5" y="1957" width="0.2" height="15.0" fill="rgb(252,136,44)" rx="2" ry="2" />
<text  x="946.52" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="264.7" y="1509" width="0.2" height="15.0" fill="rgb(253,6,52)" rx="2" ry="2" />
<text  x="267.69" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="189.9" y="1989" width="0.4" height="15.0" fill="rgb(252,78,49)" rx="2" ry="2" />
<text  x="192.86" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="408.1" y="1685" width="0.2" height="15.0" fill="rgb(248,205,1)" rx="2" ry="2" />
<text  x="411.13" y="1695.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (3 samples, 0.05%)</title><rect x="593.0" y="2005" width="0.6" height="15.0" fill="rgb(218,176,37)" rx="2" ry="2" />
<text  x="596.00" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="787.3" y="1397" width="0.8" height="15.0" fill="rgb(243,79,28)" rx="2" ry="2" />
<text  x="790.26" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="503.8" y="1781" width="0.4" height="15.0" fill="rgb(231,228,24)" rx="2" ry="2" />
<text  x="506.77" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="221.3" y="1909" width="0.4" height="15.0" fill="rgb(245,135,11)" rx="2" ry="2" />
<text  x="224.27" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="707.4" y="1701" width="0.2" height="15.0" fill="rgb(234,85,47)" rx="2" ry="2" />
<text  x="710.44" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="278.7" y="1621" width="0.2" height="15.0" fill="rgb(243,5,24)" rx="2" ry="2" />
<text  x="281.69" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="194.7" y="2021" width="0.4" height="15.0" fill="rgb(237,112,19)" rx="2" ry="2" />
<text  x="197.66" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1178.8" y="1941" width="0.2" height="15.0" fill="rgb(230,154,12)" rx="2" ry="2" />
<text  x="1181.80" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (5 samples, 0.08%)</title><rect x="582.2" y="1989" width="1.0" height="15.0" fill="rgb(216,3,29)" rx="2" ry="2" />
<text  x="585.19" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="402.1" y="1701" width="0.2" height="15.0" fill="rgb(254,125,21)" rx="2" ry="2" />
<text  x="405.13" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="157.9" y="1861" width="0.2" height="15.0" fill="rgb(235,95,0)" rx="2" ry="2" />
<text  x="160.85" y="1871.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="125.8" y="1989" width="0.2" height="15.0" fill="rgb(242,59,33)" rx="2" ry="2" />
<text  x="128.84" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="505.0" y="1829" width="0.2" height="15.0" fill="rgb(249,37,3)" rx="2" ry="2" />
<text  x="507.97" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1317" width="16.0" height="15.0" fill="rgb(228,113,3)" rx="2" ry="2" />
<text  x="106.23" y="1327.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1142.2" y="1893" width="0.2" height="15.0" fill="rgb(218,153,7)" rx="2" ry="2" />
<text  x="1145.18" y="1903.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="25.4" y="1973" width="0.2" height="15.0" fill="rgb(222,158,35)" rx="2" ry="2" />
<text  x="28.41" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="888.5" y="1925" width="0.4" height="15.0" fill="rgb(235,20,19)" rx="2" ry="2" />
<text  x="891.50" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="588.2" y="1813" width="0.2" height="15.0" fill="rgb(215,53,29)" rx="2" ry="2" />
<text  x="591.20" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="754.9" y="1765" width="0.2" height="15.0" fill="rgb(209,14,5)" rx="2" ry="2" />
<text  x="757.85" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="328.5" y="1813" width="0.4" height="15.0" fill="rgb(254,163,30)" rx="2" ry="2" />
<text  x="331.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="956.3" y="2021" width="0.2" height="15.0" fill="rgb(224,184,52)" rx="2" ry="2" />
<text  x="959.32" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="112.0" y="53" width="0.6" height="15.0" fill="rgb(252,60,50)" rx="2" ry="2" />
<text  x="115.03" y="63.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="680.0" y="1669" width="0.2" height="15.0" fill="rgb(242,214,49)" rx="2" ry="2" />
<text  x="683.03" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="336.7" y="1589" width="0.2" height="15.0" fill="rgb(242,127,12)" rx="2" ry="2" />
<text  x="339.71" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1149.8" y="2037" width="0.2" height="15.0" fill="rgb(253,206,39)" rx="2" ry="2" />
<text  x="1152.79" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (4 samples, 0.07%)</title><rect x="933.1" y="1973" width="0.8" height="15.0" fill="rgb(224,209,13)" rx="2" ry="2" />
<text  x="936.11" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="56.6" y="1909" width="0.2" height="15.0" fill="rgb(217,119,7)" rx="2" ry="2" />
<text  x="59.62" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="332.7" y="1845" width="0.4" height="15.0" fill="rgb(214,174,48)" rx="2" ry="2" />
<text  x="335.71" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="505.0" y="1861" width="0.2" height="15.0" fill="rgb(208,118,21)" rx="2" ry="2" />
<text  x="507.97" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="525.6" y="1621" width="0.2" height="15.0" fill="rgb(220,41,40)" rx="2" ry="2" />
<text  x="528.57" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="862.9" y="1989" width="0.2" height="15.0" fill="rgb(234,213,36)" rx="2" ry="2" />
<text  x="865.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="677" width="15.4" height="15.0" fill="rgb(239,23,3)" rx="2" ry="2" />
<text  x="106.43" y="687.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="860.1" y="1669" width="0.2" height="15.0" fill="rgb(248,114,17)" rx="2" ry="2" />
<text  x="863.09" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="982.1" y="1925" width="0.2" height="15.0" fill="rgb(252,175,29)" rx="2" ry="2" />
<text  x="985.13" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1088.6" y="1909" width="0.2" height="15.0" fill="rgb(222,72,8)" rx="2" ry="2" />
<text  x="1091.57" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="890.5" y="1861" width="0.2" height="15.0" fill="rgb(242,40,40)" rx="2" ry="2" />
<text  x="893.50" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="787.9" y="1205" width="0.2" height="15.0" fill="rgb(222,120,43)" rx="2" ry="2" />
<text  x="790.86" y="1215.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="429.9" y="2021" width="0.6" height="15.0" fill="rgb(251,211,48)" rx="2" ry="2" />
<text  x="432.94" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="546.2" y="1909" width="0.2" height="15.0" fill="rgb(219,150,41)" rx="2" ry="2" />
<text  x="549.18" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1131.4" y="1957" width="0.8" height="15.0" fill="rgb(240,139,37)" rx="2" ry="2" />
<text  x="1134.38" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (25 samples, 0.42%)</title><rect x="562.8" y="2005" width="5.0" height="15.0" fill="rgb(213,134,28)" rx="2" ry="2" />
<text  x="565.79" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.0" y="1877" width="0.2" height="15.0" fill="rgb(206,215,20)" rx="2" ry="2" />
<text  x="160.05" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="835.7" y="1701" width="0.2" height="15.0" fill="rgb(231,88,2)" rx="2" ry="2" />
<text  x="838.68" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="103.2" y="1157" width="15.8" height="15.0" fill="rgb(218,180,37)" rx="2" ry="2" />
<text  x="106.23" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="611.6" y="1797" width="0.2" height="15.0" fill="rgb(231,214,11)" rx="2" ry="2" />
<text  x="614.60" y="1807.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="658.4" y="2005" width="0.2" height="15.0" fill="rgb(238,206,18)" rx="2" ry="2" />
<text  x="661.42" y="2015.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="829.9" y="1445" width="0.2" height="15.0" fill="rgb(206,109,21)" rx="2" ry="2" />
<text  x="832.88" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="118.2" y="69" width="0.2" height="15.0" fill="rgb(247,121,27)" rx="2" ry="2" />
<text  x="121.24" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="328.5" y="1717" width="0.4" height="15.0" fill="rgb(226,150,3)" rx="2" ry="2" />
<text  x="331.51" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="118.4" y="85" width="0.2" height="15.0" fill="rgb(245,23,46)" rx="2" ry="2" />
<text  x="121.44" y="95.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="984.7" y="1717" width="0.2" height="15.0" fill="rgb(212,36,50)" rx="2" ry="2" />
<text  x="987.73" y="1727.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="427.9" y="1909" width="0.6" height="15.0" fill="rgb(241,12,32)" rx="2" ry="2" />
<text  x="430.94" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="221.3" y="1893" width="0.2" height="15.0" fill="rgb(243,94,6)" rx="2" ry="2" />
<text  x="224.27" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="633.8" y="2005" width="0.6" height="15.0" fill="rgb(245,43,35)" rx="2" ry="2" />
<text  x="636.81" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="531.8" y="1829" width="0.2" height="15.0" fill="rgb(223,27,45)" rx="2" ry="2" />
<text  x="534.78" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="980.7" y="1797" width="0.2" height="15.0" fill="rgb(217,189,49)" rx="2" ry="2" />
<text  x="983.73" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1110.0" y="1733" width="0.2" height="15.0" fill="rgb(233,198,3)" rx="2" ry="2" />
<text  x="1112.97" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="150.4" y="1829" width="0.2" height="15.0" fill="rgb(231,55,6)" rx="2" ry="2" />
<text  x="153.45" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="712.4" y="1621" width="0.2" height="15.0" fill="rgb(206,186,35)" rx="2" ry="2" />
<text  x="715.44" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1089.6" y="1909" width="0.2" height="15.0" fill="rgb(212,155,14)" rx="2" ry="2" />
<text  x="1092.57" y="1919.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="831.9" y="1573" width="0.2" height="15.0" fill="rgb(214,163,2)" rx="2" ry="2" />
<text  x="834.88" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (8 samples, 0.14%)</title><rect x="861.3" y="1989" width="1.6" height="15.0" fill="rgb(219,34,38)" rx="2" ry="2" />
<text  x="864.29" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="307.9" y="1669" width="0.4" height="15.0" fill="rgb(218,81,5)" rx="2" ry="2" />
<text  x="310.90" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="53.0" y="1893" width="0.2" height="15.0" fill="rgb(233,84,17)" rx="2" ry="2" />
<text  x="56.01" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="454.0" y="1701" width="0.2" height="15.0" fill="rgb(205,159,1)" rx="2" ry="2" />
<text  x="456.95" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="827.3" y="1669" width="0.2" height="15.0" fill="rgb(236,205,38)" rx="2" ry="2" />
<text  x="830.28" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="10.2" y="2037" width="0.8" height="15.0" fill="rgb(207,116,31)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="945.7" y="2005" width="0.2" height="15.0" fill="rgb(219,133,28)" rx="2" ry="2" />
<text  x="948.72" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="427.7" y="1957" width="0.8" height="15.0" fill="rgb(210,152,30)" rx="2" ry="2" />
<text  x="430.74" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.4" y="1349" width="0.2" height="15.0" fill="rgb(252,203,32)" rx="2" ry="2" />
<text  x="122.44" y="1359.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1142.0" y="1781" width="0.2" height="15.0" fill="rgb(220,24,52)" rx="2" ry="2" />
<text  x="1144.98" y="1791.5" ></text>
</g>
<g >
<title>mod_timer (13 samples, 0.22%)</title><rect x="813.9" y="1621" width="2.6" height="15.0" fill="rgb(220,211,40)" rx="2" ry="2" />
<text  x="816.87" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="565.8" y="1925" width="0.2" height="15.0" fill="rgb(217,196,41)" rx="2" ry="2" />
<text  x="568.79" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1174.4" y="1973" width="0.2" height="15.0" fill="rgb(231,135,47)" rx="2" ry="2" />
<text  x="1177.39" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="246.9" y="1893" width="0.2" height="15.0" fill="rgb(210,143,28)" rx="2" ry="2" />
<text  x="249.88" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="211.7" y="1877" width="0.4" height="15.0" fill="rgb(224,5,1)" rx="2" ry="2" />
<text  x="214.67" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (15 samples, 0.25%)</title><rect x="619.0" y="1893" width="3.0" height="15.0" fill="rgb(223,200,0)" rx="2" ry="2" />
<text  x="622.01" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1168.0" y="2053" width="0.2" height="15.0" fill="rgb(242,46,1)" rx="2" ry="2" />
<text  x="1170.99" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (68 samples, 1.15%)</title><rect x="1150.8" y="2037" width="13.6" height="15.0" fill="rgb(243,4,49)" rx="2" ry="2" />
<text  x="1153.79" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="223.1" y="1813" width="0.2" height="15.0" fill="rgb(221,180,6)" rx="2" ry="2" />
<text  x="226.07" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="336.7" y="1861" width="0.2" height="15.0" fill="rgb(234,182,3)" rx="2" ry="2" />
<text  x="339.71" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="603.4" y="1749" width="0.2" height="15.0" fill="rgb(222,38,29)" rx="2" ry="2" />
<text  x="606.40" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="603.4" y="1669" width="0.2" height="15.0" fill="rgb(235,137,16)" rx="2" ry="2" />
<text  x="606.40" y="1679.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.2" y="1829" width="0.8" height="15.0" fill="rgb(235,181,31)" rx="2" ry="2" />
<text  x="14.20" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="503.6" y="1893" width="0.2" height="15.0" fill="rgb(209,151,26)" rx="2" ry="2" />
<text  x="506.57" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (1 samples, 0.02%)</title><rect x="628.6" y="2021" width="0.2" height="15.0" fill="rgb(215,162,48)" rx="2" ry="2" />
<text  x="631.61" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="739.4" y="1605" width="0.2" height="15.0" fill="rgb(218,14,21)" rx="2" ry="2" />
<text  x="742.45" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="181.3" y="2021" width="0.2" height="15.0" fill="rgb(238,124,15)" rx="2" ry="2" />
<text  x="184.26" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="834.1" y="1589" width="0.2" height="15.0" fill="rgb(215,115,38)" rx="2" ry="2" />
<text  x="837.08" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="981.7" y="1717" width="0.2" height="15.0" fill="rgb(222,226,0)" rx="2" ry="2" />
<text  x="984.73" y="1727.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="577.4" y="1893" width="0.2" height="15.0" fill="rgb(207,163,32)" rx="2" ry="2" />
<text  x="580.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="846.3" y="1909" width="0.2" height="15.0" fill="rgb(206,184,33)" rx="2" ry="2" />
<text  x="849.28" y="1919.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.2" y="2005" width="0.8" height="15.0" fill="rgb(214,108,21)" rx="2" ry="2" />
<text  x="14.20" y="2015.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="995.5" y="1941" width="0.2" height="15.0" fill="rgb(229,10,50)" rx="2" ry="2" />
<text  x="998.53" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.2" y="293" width="0.2" height="15.0" fill="rgb(224,111,29)" rx="2" ry="2" />
<text  x="121.24" y="303.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1653" width="0.2" height="15.0" fill="rgb(215,210,0)" rx="2" ry="2" />
<text  x="614.40" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="831.9" y="1669" width="0.2" height="15.0" fill="rgb(238,40,16)" rx="2" ry="2" />
<text  x="834.88" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="588.4" y="1973" width="0.2" height="15.0" fill="rgb(250,110,10)" rx="2" ry="2" />
<text  x="591.40" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="150.4" y="1845" width="0.2" height="15.0" fill="rgb(208,38,34)" rx="2" ry="2" />
<text  x="153.45" y="1855.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="753.9" y="1413" width="0.2" height="15.0" fill="rgb(207,1,42)" rx="2" ry="2" />
<text  x="756.85" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="308.1" y="1589" width="0.2" height="15.0" fill="rgb(226,68,4)" rx="2" ry="2" />
<text  x="311.10" y="1599.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (51 samples, 0.86%)</title><rect x="1110.2" y="1893" width="10.2" height="15.0" fill="rgb(252,204,13)" rx="2" ry="2" />
<text  x="1113.17" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.2" y="1141" width="0.2" height="15.0" fill="rgb(218,84,19)" rx="2" ry="2" />
<text  x="106.23" y="1151.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="835.7" y="1813" width="0.2" height="15.0" fill="rgb(235,91,0)" rx="2" ry="2" />
<text  x="838.68" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="875.1" y="1941" width="0.2" height="15.0" fill="rgb(225,123,43)" rx="2" ry="2" />
<text  x="878.09" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1141" width="15.6" height="15.0" fill="rgb(221,178,44)" rx="2" ry="2" />
<text  x="106.43" y="1151.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="189.9" y="1781" width="0.2" height="15.0" fill="rgb(229,212,49)" rx="2" ry="2" />
<text  x="192.86" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="843.5" y="1637" width="0.2" height="15.0" fill="rgb(228,206,17)" rx="2" ry="2" />
<text  x="846.48" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="787.9" y="1333" width="0.2" height="15.0" fill="rgb(218,3,25)" rx="2" ry="2" />
<text  x="790.86" y="1343.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="120.4" y="1509" width="0.2" height="15.0" fill="rgb(254,66,16)" rx="2" ry="2" />
<text  x="123.44" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1139.0" y="1669" width="0.2" height="15.0" fill="rgb(213,58,34)" rx="2" ry="2" />
<text  x="1141.98" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="483.0" y="1637" width="0.4" height="15.0" fill="rgb(207,21,24)" rx="2" ry="2" />
<text  x="485.96" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="586.4" y="1989" width="0.4" height="15.0" fill="rgb(219,99,10)" rx="2" ry="2" />
<text  x="589.40" y="1999.5" ></text>
</g>
<g >
<title>__fget (12 samples, 0.20%)</title><rect x="1127.0" y="1925" width="2.4" height="15.0" fill="rgb(206,217,11)" rx="2" ry="2" />
<text  x="1129.98" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="453" width="15.2" height="15.0" fill="rgb(239,62,49)" rx="2" ry="2" />
<text  x="106.43" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="578.6" y="1973" width="0.2" height="15.0" fill="rgb(241,183,51)" rx="2" ry="2" />
<text  x="581.59" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="863.7" y="1925" width="0.2" height="15.0" fill="rgb(250,13,12)" rx="2" ry="2" />
<text  x="866.69" y="1935.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1123.0" y="1925" width="0.2" height="15.0" fill="rgb(236,98,26)" rx="2" ry="2" />
<text  x="1125.98" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="523.0" y="1637" width="0.2" height="15.0" fill="rgb(234,144,41)" rx="2" ry="2" />
<text  x="525.97" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="503.8" y="1733" width="0.4" height="15.0" fill="rgb(228,220,51)" rx="2" ry="2" />
<text  x="506.77" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="211.5" y="1813" width="0.2" height="15.0" fill="rgb(213,113,27)" rx="2" ry="2" />
<text  x="214.47" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="719.4" y="1893" width="0.2" height="15.0" fill="rgb(231,135,44)" rx="2" ry="2" />
<text  x="722.44" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (3 samples, 0.05%)</title><rect x="999.5" y="2005" width="0.6" height="15.0" fill="rgb(214,151,34)" rx="2" ry="2" />
<text  x="1002.54" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (27 samples, 0.46%)</title><rect x="376.3" y="1925" width="5.4" height="15.0" fill="rgb(213,151,19)" rx="2" ry="2" />
<text  x="379.32" y="1935.5" ></text>
</g>
<g >
<title>tcp_poll (20 samples, 0.34%)</title><rect x="519.2" y="1893" width="4.0" height="15.0" fill="rgb(222,8,45)" rx="2" ry="2" />
<text  x="522.17" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="59.0" y="1893" width="0.2" height="15.0" fill="rgb(225,78,49)" rx="2" ry="2" />
<text  x="62.02" y="1903.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="842.1" y="1797" width="0.8" height="15.0" fill="rgb(205,180,33)" rx="2" ry="2" />
<text  x="845.08" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="66.6" y="1797" width="0.2" height="15.0" fill="rgb(225,164,8)" rx="2" ry="2" />
<text  x="69.62" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="849.5" y="1845" width="0.2" height="15.0" fill="rgb(223,101,24)" rx="2" ry="2" />
<text  x="852.48" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="865.3" y="1989" width="0.4" height="15.0" fill="rgb(250,9,11)" rx="2" ry="2" />
<text  x="868.29" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.0" y="165" width="0.2" height="15.0" fill="rgb(217,49,4)" rx="2" ry="2" />
<text  x="121.04" y="175.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="626.2" y="1685" width="0.2" height="15.0" fill="rgb(246,29,23)" rx="2" ry="2" />
<text  x="629.21" y="1695.5" ></text>
</g>
<g >
<title>__gthread_self (2 samples, 0.03%)</title><rect x="86.6" y="1957" width="0.4" height="15.0" fill="rgb(225,74,15)" rx="2" ry="2" />
<text  x="89.63" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="697.6" y="1829" width="0.2" height="15.0" fill="rgb(207,85,54)" rx="2" ry="2" />
<text  x="700.63" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="66.6" y="1813" width="0.2" height="15.0" fill="rgb(217,63,46)" rx="2" ry="2" />
<text  x="69.62" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="502.2" y="1957" width="0.2" height="15.0" fill="rgb(215,118,18)" rx="2" ry="2" />
<text  x="505.17" y="1967.5" ></text>
</g>
<g >
<title>add_wait_queue (3 samples, 0.05%)</title><rect x="480.0" y="1909" width="0.6" height="15.0" fill="rgb(213,145,4)" rx="2" ry="2" />
<text  x="482.96" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="890.5" y="1701" width="0.2" height="15.0" fill="rgb(218,10,9)" rx="2" ry="2" />
<text  x="893.50" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="278.7" y="1653" width="0.2" height="15.0" fill="rgb(218,80,20)" rx="2" ry="2" />
<text  x="281.69" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="105.0" y="37" width="0.4" height="15.0" fill="rgb(242,98,29)" rx="2" ry="2" />
<text  x="108.03" y="47.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="964.9" y="1893" width="0.2" height="15.0" fill="rgb(209,198,5)" rx="2" ry="2" />
<text  x="967.92" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="116.4" y="53" width="0.4" height="15.0" fill="rgb(253,100,43)" rx="2" ry="2" />
<text  x="119.44" y="63.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (9 samples, 0.15%)</title><rect x="93.6" y="2053" width="1.8" height="15.0" fill="rgb(253,86,44)" rx="2" ry="2" />
<text  x="96.63" y="2063.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="594.0" y="2021" width="0.2" height="15.0" fill="rgb(237,187,11)" rx="2" ry="2" />
<text  x="597.00" y="2031.5" ></text>
</g>
<g >
<title>inet_release (1 samples, 0.02%)</title><rect x="830.3" y="1781" width="0.2" height="15.0" fill="rgb(212,69,20)" rx="2" ry="2" />
<text  x="833.28" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (4 samples, 0.07%)</title><rect x="900.9" y="2005" width="0.8" height="15.0" fill="rgb(248,75,48)" rx="2" ry="2" />
<text  x="903.90" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (82 samples, 1.39%)</title><rect x="788.5" y="1589" width="16.4" height="15.0" fill="rgb(206,83,54)" rx="2" ry="2" />
<text  x="791.46" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1067.8" y="1461" width="0.2" height="15.0" fill="rgb(243,183,21)" rx="2" ry="2" />
<text  x="1070.76" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="648.4" y="1653" width="0.2" height="15.0" fill="rgb(227,164,50)" rx="2" ry="2" />
<text  x="651.42" y="1663.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (1 samples, 0.02%)</title><rect x="504.2" y="2005" width="0.2" height="15.0" fill="rgb(246,183,12)" rx="2" ry="2" />
<text  x="507.17" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="180.5" y="1989" width="0.2" height="15.0" fill="rgb(209,14,37)" rx="2" ry="2" />
<text  x="183.46" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="857.9" y="1909" width="0.2" height="15.0" fill="rgb(242,187,26)" rx="2" ry="2" />
<text  x="860.89" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="332.5" y="1765" width="0.2" height="15.0" fill="rgb(221,190,39)" rx="2" ry="2" />
<text  x="335.51" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1184.2" y="2021" width="0.2" height="15.0" fill="rgb(250,127,27)" rx="2" ry="2" />
<text  x="1187.20" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="645.6" y="1925" width="0.2" height="15.0" fill="rgb(238,21,16)" rx="2" ry="2" />
<text  x="648.62" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="482.8" y="1829" width="0.6" height="15.0" fill="rgb(250,48,49)" rx="2" ry="2" />
<text  x="485.76" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="67.4" y="1941" width="0.2" height="15.0" fill="rgb(208,11,22)" rx="2" ry="2" />
<text  x="70.42" y="1951.5" ></text>
</g>
<g >
<title>sys_fcntl (9 samples, 0.15%)</title><rect x="576.2" y="1941" width="1.8" height="15.0" fill="rgb(226,79,30)" rx="2" ry="2" />
<text  x="579.19" y="1951.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (7 samples, 0.12%)</title><rect x="263.7" y="1845" width="1.4" height="15.0" fill="rgb(251,162,53)" rx="2" ry="2" />
<text  x="266.69" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1130.8" y="1861" width="0.2" height="15.0" fill="rgb(251,121,12)" rx="2" ry="2" />
<text  x="1133.78" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="357.1" y="1765" width="0.4" height="15.0" fill="rgb(242,12,31)" rx="2" ry="2" />
<text  x="360.12" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="704.4" y="1701" width="0.2" height="15.0" fill="rgb(215,102,0)" rx="2" ry="2" />
<text  x="707.44" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="578.6" y="1781" width="0.2" height="15.0" fill="rgb(229,188,35)" rx="2" ry="2" />
<text  x="581.59" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="942.9" y="1877" width="0.2" height="15.0" fill="rgb(226,105,37)" rx="2" ry="2" />
<text  x="945.92" y="1887.5" ></text>
</g>
<g >
<title>locks_remove_posix (3 samples, 0.05%)</title><rect x="834.3" y="1813" width="0.6" height="15.0" fill="rgb(208,122,32)" rx="2" ry="2" />
<text  x="837.28" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="890.9" y="1909" width="0.2" height="15.0" fill="rgb(241,112,29)" rx="2" ry="2" />
<text  x="893.90" y="1919.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="735.4" y="1797" width="0.8" height="15.0" fill="rgb(213,50,22)" rx="2" ry="2" />
<text  x="738.45" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="610.6" y="1749" width="0.2" height="15.0" fill="rgb(208,110,45)" rx="2" ry="2" />
<text  x="613.60" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="118.2" y="133" width="0.2" height="15.0" fill="rgb(225,187,2)" rx="2" ry="2" />
<text  x="121.24" y="143.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="118.6" y="325" width="0.2" height="15.0" fill="rgb(236,158,49)" rx="2" ry="2" />
<text  x="121.64" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="560.2" y="1909" width="0.6" height="15.0" fill="rgb(207,37,39)" rx="2" ry="2" />
<text  x="563.19" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="402.7" y="1829" width="0.2" height="15.0" fill="rgb(214,207,43)" rx="2" ry="2" />
<text  x="405.73" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="25.0" y="1957" width="0.2" height="15.0" fill="rgb(234,25,13)" rx="2" ry="2" />
<text  x="28.01" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="853.1" y="1893" width="0.4" height="15.0" fill="rgb(239,188,36)" rx="2" ry="2" />
<text  x="856.09" y="1903.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="707.4" y="1653" width="0.2" height="15.0" fill="rgb(251,91,19)" rx="2" ry="2" />
<text  x="710.44" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="875.3" y="1733" width="0.2" height="15.0" fill="rgb(253,219,6)" rx="2" ry="2" />
<text  x="878.29" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1189.0" y="1701" width="0.2" height="15.0" fill="rgb(221,15,6)" rx="2" ry="2" />
<text  x="1192.00" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (2 samples, 0.03%)</title><rect x="139.2" y="1941" width="0.4" height="15.0" fill="rgb(224,14,47)" rx="2" ry="2" />
<text  x="142.24" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="889.1" y="1845" width="0.2" height="15.0" fill="rgb(206,48,39)" rx="2" ry="2" />
<text  x="892.10" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="545.0" y="1973" width="0.6" height="15.0" fill="rgb(251,160,16)" rx="2" ry="2" />
<text  x="547.98" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1126.2" y="1733" width="0.2" height="15.0" fill="rgb(217,112,11)" rx="2" ry="2" />
<text  x="1129.18" y="1743.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="523.0" y="1589" width="0.2" height="15.0" fill="rgb(239,116,22)" rx="2" ry="2" />
<text  x="525.97" y="1599.5" ></text>
</g>
<g >
<title>release_sock (11 samples, 0.19%)</title><rect x="1088.8" y="1925" width="2.2" height="15.0" fill="rgb(210,85,0)" rx="2" ry="2" />
<text  x="1091.77" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="715.2" y="2037" width="0.2" height="15.0" fill="rgb(233,223,12)" rx="2" ry="2" />
<text  x="718.24" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="634.4" y="1989" width="1.0" height="15.0" fill="rgb(215,77,54)" rx="2" ry="2" />
<text  x="637.41" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="84.6" y="1941" width="0.2" height="15.0" fill="rgb(210,211,13)" rx="2" ry="2" />
<text  x="87.63" y="1951.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (5 samples, 0.08%)</title><rect x="539.4" y="1925" width="1.0" height="15.0" fill="rgb(240,48,10)" rx="2" ry="2" />
<text  x="542.38" y="1935.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="12.4" y="1973" width="0.2" height="15.0" fill="rgb(236,165,10)" rx="2" ry="2" />
<text  x="15.40" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="934.3" y="1957" width="0.2" height="15.0" fill="rgb(207,98,40)" rx="2" ry="2" />
<text  x="937.31" y="1967.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (12 samples, 0.20%)</title><rect x="333.5" y="1925" width="2.4" height="15.0" fill="rgb(218,26,48)" rx="2" ry="2" />
<text  x="336.51" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (68 samples, 1.15%)</title><rect x="1150.8" y="2005" width="13.6" height="15.0" fill="rgb(238,79,47)" rx="2" ry="2" />
<text  x="1153.79" y="2015.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="611.6" y="1717" width="0.2" height="15.0" fill="rgb(249,25,53)" rx="2" ry="2" />
<text  x="614.60" y="1727.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="519.0" y="1589" width="0.2" height="15.0" fill="rgb(209,88,41)" rx="2" ry="2" />
<text  x="521.97" y="1599.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="68.2" y="1909" width="0.6" height="15.0" fill="rgb(219,139,29)" rx="2" ry="2" />
<text  x="71.22" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="931.3" y="1893" width="0.2" height="15.0" fill="rgb(229,15,39)" rx="2" ry="2" />
<text  x="934.31" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="164.7" y="1925" width="0.4" height="15.0" fill="rgb(244,16,7)" rx="2" ry="2" />
<text  x="167.65" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="278.7" y="1685" width="0.2" height="15.0" fill="rgb(211,81,6)" rx="2" ry="2" />
<text  x="281.69" y="1695.5" ></text>
</g>
<g >
<title>__check_object_size (14 samples, 0.24%)</title><rect x="253.9" y="1877" width="2.8" height="15.0" fill="rgb(243,12,40)" rx="2" ry="2" />
<text  x="256.88" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="610.6" y="1717" width="0.2" height="15.0" fill="rgb(212,117,47)" rx="2" ry="2" />
<text  x="613.60" y="1727.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1110.2" y="1845" width="0.2" height="15.0" fill="rgb(241,188,44)" rx="2" ry="2" />
<text  x="1113.17" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="635.2" y="1941" width="0.2" height="15.0" fill="rgb(234,8,35)" rx="2" ry="2" />
<text  x="638.21" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="719.6" y="1861" width="0.4" height="15.0" fill="rgb(228,154,8)" rx="2" ry="2" />
<text  x="722.64" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="1148.0" y="1989" width="0.4" height="15.0" fill="rgb(206,66,12)" rx="2" ry="2" />
<text  x="1150.99" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="942.9" y="1845" width="0.2" height="15.0" fill="rgb(245,181,20)" rx="2" ry="2" />
<text  x="945.92" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="647.6" y="1925" width="0.2" height="15.0" fill="rgb(241,121,53)" rx="2" ry="2" />
<text  x="650.62" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1098.4" y="1813" width="0.2" height="15.0" fill="rgb(222,40,45)" rx="2" ry="2" />
<text  x="1101.37" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="591.4" y="1973" width="0.4" height="15.0" fill="rgb(247,164,3)" rx="2" ry="2" />
<text  x="594.40" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="299.3" y="1653" width="0.2" height="15.0" fill="rgb(224,228,3)" rx="2" ry="2" />
<text  x="302.30" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.7" y="1957" width="0.2" height="15.0" fill="rgb(221,112,39)" rx="2" ry="2" />
<text  x="893.70" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="180.5" y="1877" width="0.2" height="15.0" fill="rgb(225,2,9)" rx="2" ry="2" />
<text  x="183.46" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="74.6" y="1685" width="0.2" height="15.0" fill="rgb(247,135,44)" rx="2" ry="2" />
<text  x="77.62" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (41 samples, 0.70%)</title><rect x="924.5" y="1973" width="8.2" height="15.0" fill="rgb(231,6,19)" rx="2" ry="2" />
<text  x="927.51" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1120.2" y="1733" width="0.2" height="15.0" fill="rgb(244,48,32)" rx="2" ry="2" />
<text  x="1123.18" y="1743.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (1 samples, 0.02%)</title><rect x="965.7" y="2037" width="0.2" height="15.0" fill="rgb(226,95,29)" rx="2" ry="2" />
<text  x="968.72" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="603.4" y="1589" width="0.2" height="15.0" fill="rgb(214,129,12)" rx="2" ry="2" />
<text  x="606.40" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="164.5" y="1941" width="1.0" height="15.0" fill="rgb(206,69,22)" rx="2" ry="2" />
<text  x="167.45" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="963.9" y="2005" width="0.2" height="15.0" fill="rgb(234,53,49)" rx="2" ry="2" />
<text  x="966.92" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (68 samples, 1.15%)</title><rect x="1150.8" y="2021" width="13.6" height="15.0" fill="rgb(241,5,45)" rx="2" ry="2" />
<text  x="1153.79" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1139.0" y="2021" width="0.2" height="15.0" fill="rgb(240,12,2)" rx="2" ry="2" />
<text  x="1141.98" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="265.5" y="1829" width="0.4" height="15.0" fill="rgb(246,9,14)" rx="2" ry="2" />
<text  x="268.49" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="896.9" y="2037" width="0.2" height="15.0" fill="rgb(226,25,22)" rx="2" ry="2" />
<text  x="899.90" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="328.5" y="1637" width="0.4" height="15.0" fill="rgb(232,58,51)" rx="2" ry="2" />
<text  x="331.51" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (102 samples, 1.73%)</title><rect x="686.8" y="1957" width="20.4" height="15.0" fill="rgb(253,184,7)" rx="2" ry="2" />
<text  x="689.83" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1149.8" y="1973" width="0.2" height="15.0" fill="rgb(218,228,44)" rx="2" ry="2" />
<text  x="1152.79" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (9 samples, 0.15%)</title><rect x="581.4" y="2005" width="1.8" height="15.0" fill="rgb(213,29,50)" rx="2" ry="2" />
<text  x="584.39" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="853.3" y="1877" width="0.2" height="15.0" fill="rgb(251,168,16)" rx="2" ry="2" />
<text  x="856.29" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="307.7" y="1749" width="0.2" height="15.0" fill="rgb(252,168,18)" rx="2" ry="2" />
<text  x="310.70" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="905.3" y="1973" width="0.2" height="15.0" fill="rgb(240,27,41)" rx="2" ry="2" />
<text  x="908.30" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="244.5" y="1877" width="0.2" height="15.0" fill="rgb(223,93,20)" rx="2" ry="2" />
<text  x="247.48" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="967.9" y="2021" width="0.4" height="15.0" fill="rgb(250,189,25)" rx="2" ry="2" />
<text  x="970.92" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="267.1" y="1717" width="0.2" height="15.0" fill="rgb(217,88,34)" rx="2" ry="2" />
<text  x="270.09" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="154.2" y="1893" width="0.2" height="15.0" fill="rgb(231,216,13)" rx="2" ry="2" />
<text  x="157.25" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="753.9" y="1637" width="0.2" height="15.0" fill="rgb(233,193,0)" rx="2" ry="2" />
<text  x="756.85" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="271.9" y="1765" width="0.4" height="15.0" fill="rgb(250,122,46)" rx="2" ry="2" />
<text  x="274.89" y="1775.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (5 samples, 0.08%)</title><rect x="964.3" y="2021" width="1.0" height="15.0" fill="rgb(241,192,12)" rx="2" ry="2" />
<text  x="967.32" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="78.2" y="1877" width="0.8" height="15.0" fill="rgb(211,188,45)" rx="2" ry="2" />
<text  x="81.22" y="1887.5" ></text>
</g>
<g >
<title>import_single_range (3 samples, 0.05%)</title><rect x="1052.2" y="1973" width="0.6" height="15.0" fill="rgb(226,108,16)" rx="2" ry="2" />
<text  x="1055.15" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="936.3" y="1765" width="0.2" height="15.0" fill="rgb(228,27,22)" rx="2" ry="2" />
<text  x="939.31" y="1775.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="1131.4" y="1877" width="0.8" height="15.0" fill="rgb(234,39,49)" rx="2" ry="2" />
<text  x="1134.38" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (29 samples, 0.49%)</title><rect x="918.7" y="1957" width="5.8" height="15.0" fill="rgb(247,12,29)" rx="2" ry="2" />
<text  x="921.71" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="575.8" y="1909" width="0.4" height="15.0" fill="rgb(242,58,5)" rx="2" ry="2" />
<text  x="578.79" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="482.6" y="1893" width="0.2" height="15.0" fill="rgb(220,184,31)" rx="2" ry="2" />
<text  x="485.56" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1188.8" y="1973" width="0.4" height="15.0" fill="rgb(234,211,7)" rx="2" ry="2" />
<text  x="1191.80" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="286.5" y="1493" width="0.2" height="15.0" fill="rgb(223,215,48)" rx="2" ry="2" />
<text  x="289.49" y="1503.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="928.7" y="1893" width="0.2" height="15.0" fill="rgb(239,97,42)" rx="2" ry="2" />
<text  x="931.71" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="223.1" y="1925" width="0.2" height="15.0" fill="rgb(222,123,53)" rx="2" ry="2" />
<text  x="226.07" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="97.8" y="1957" width="0.2" height="15.0" fill="rgb(243,55,36)" rx="2" ry="2" />
<text  x="100.83" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="969.1" y="1925" width="0.4" height="15.0" fill="rgb(229,74,32)" rx="2" ry="2" />
<text  x="972.13" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (85 samples, 1.44%)</title><rect x="873.3" y="1973" width="17.0" height="15.0" fill="rgb(207,20,5)" rx="2" ry="2" />
<text  x="876.29" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="271.9" y="1685" width="0.4" height="15.0" fill="rgb(216,215,48)" rx="2" ry="2" />
<text  x="274.89" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1098.4" y="1877" width="0.2" height="15.0" fill="rgb(234,77,53)" rx="2" ry="2" />
<text  x="1101.37" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="140.6" y="1877" width="0.2" height="15.0" fill="rgb(219,206,31)" rx="2" ry="2" />
<text  x="143.64" y="1887.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="150.6" y="1589" width="0.2" height="15.0" fill="rgb(218,54,24)" rx="2" ry="2" />
<text  x="153.65" y="1599.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="529.2" y="1893" width="0.2" height="15.0" fill="rgb(246,26,18)" rx="2" ry="2" />
<text  x="532.18" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (48 samples, 0.81%)</title><rect x="1110.6" y="1717" width="9.6" height="15.0" fill="rgb(228,183,24)" rx="2" ry="2" />
<text  x="1113.57" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="259.5" y="1877" width="0.2" height="15.0" fill="rgb(248,101,6)" rx="2" ry="2" />
<text  x="262.48" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="532.8" y="1957" width="0.2" height="15.0" fill="rgb(252,51,46)" rx="2" ry="2" />
<text  x="535.78" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="168.1" y="1941" width="0.2" height="15.0" fill="rgb(238,162,37)" rx="2" ry="2" />
<text  x="171.05" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="483.6" y="1893" width="0.2" height="15.0" fill="rgb(238,183,43)" rx="2" ry="2" />
<text  x="486.56" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1005.1" y="1893" width="0.2" height="15.0" fill="rgb(205,155,30)" rx="2" ry="2" />
<text  x="1008.14" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="129.6" y="1941" width="0.6" height="15.0" fill="rgb(234,62,38)" rx="2" ry="2" />
<text  x="132.64" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="267.1" y="1765" width="0.2" height="15.0" fill="rgb(214,123,49)" rx="2" ry="2" />
<text  x="270.09" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="504.0" y="1717" width="0.2" height="15.0" fill="rgb(207,15,38)" rx="2" ry="2" />
<text  x="506.97" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="735.4" y="1813" width="0.8" height="15.0" fill="rgb(211,53,5)" rx="2" ry="2" />
<text  x="738.45" y="1823.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="321.5" y="1397" width="0.2" height="15.0" fill="rgb(244,198,33)" rx="2" ry="2" />
<text  x="324.51" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="613" width="15.4" height="15.0" fill="rgb(212,178,23)" rx="2" ry="2" />
<text  x="106.43" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="118.2" y="149" width="0.2" height="15.0" fill="rgb(241,42,25)" rx="2" ry="2" />
<text  x="121.24" y="159.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="933.7" y="1877" width="0.2" height="15.0" fill="rgb(218,179,8)" rx="2" ry="2" />
<text  x="936.71" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="611.6" y="1813" width="0.2" height="15.0" fill="rgb(241,128,10)" rx="2" ry="2" />
<text  x="614.60" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="115.4" y="69" width="1.0" height="15.0" fill="rgb(246,146,21)" rx="2" ry="2" />
<text  x="118.44" y="79.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="868.9" y="1989" width="0.4" height="15.0" fill="rgb(252,20,12)" rx="2" ry="2" />
<text  x="871.89" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="483.2" y="1557" width="0.2" height="15.0" fill="rgb(208,222,45)" rx="2" ry="2" />
<text  x="486.16" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="285.7" y="1605" width="0.4" height="15.0" fill="rgb(248,184,29)" rx="2" ry="2" />
<text  x="288.69" y="1615.5" ></text>
</g>
<g >
<title>d_instantiate (11 samples, 0.19%)</title><rect x="425.3" y="1941" width="2.2" height="15.0" fill="rgb(214,68,11)" rx="2" ry="2" />
<text  x="428.34" y="1951.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1078.2" y="1797" width="0.2" height="15.0" fill="rgb(216,206,39)" rx="2" ry="2" />
<text  x="1081.16" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="712.4" y="1797" width="0.2" height="15.0" fill="rgb(249,59,28)" rx="2" ry="2" />
<text  x="715.44" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="890.9" y="1829" width="0.2" height="15.0" fill="rgb(254,23,15)" rx="2" ry="2" />
<text  x="893.90" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="853.9" y="1877" width="0.2" height="15.0" fill="rgb(249,122,47)" rx="2" ry="2" />
<text  x="856.89" y="1887.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="879.7" y="1925" width="0.4" height="15.0" fill="rgb(231,17,36)" rx="2" ry="2" />
<text  x="882.69" y="1935.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="500.6" y="1941" width="0.2" height="15.0" fill="rgb(225,21,43)" rx="2" ry="2" />
<text  x="503.57" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="575.8" y="1797" width="0.4" height="15.0" fill="rgb(205,170,48)" rx="2" ry="2" />
<text  x="578.79" y="1807.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1067.8" y="1557" width="0.2" height="15.0" fill="rgb(222,35,20)" rx="2" ry="2" />
<text  x="1070.76" y="1567.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="126.0" y="1989" width="0.6" height="15.0" fill="rgb(240,146,28)" rx="2" ry="2" />
<text  x="129.04" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.4" y="1845" width="0.3" height="15.0" fill="rgb(230,123,10)" rx="2" ry="2" />
<text  x="160.45" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (4 samples, 0.07%)</title><rect x="34.8" y="1989" width="0.8" height="15.0" fill="rgb(253,38,5)" rx="2" ry="2" />
<text  x="37.81" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="53.0" y="1701" width="0.2" height="15.0" fill="rgb(248,215,12)" rx="2" ry="2" />
<text  x="56.01" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="189.9" y="1909" width="0.4" height="15.0" fill="rgb(237,7,34)" rx="2" ry="2" />
<text  x="192.86" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="1130.2" y="1957" width="0.8" height="15.0" fill="rgb(219,2,13)" rx="2" ry="2" />
<text  x="1133.18" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="903.9" y="1973" width="0.6" height="15.0" fill="rgb(242,129,51)" rx="2" ry="2" />
<text  x="906.90" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="712.4" y="1957" width="0.2" height="15.0" fill="rgb(213,13,38)" rx="2" ry="2" />
<text  x="715.44" y="1967.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="120.2" y="1589" width="0.2" height="15.0" fill="rgb(214,18,20)" rx="2" ry="2" />
<text  x="123.24" y="1599.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="359.7" y="1957" width="0.4" height="15.0" fill="rgb(211,93,0)" rx="2" ry="2" />
<text  x="362.72" y="1967.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1142.0" y="1717" width="0.2" height="15.0" fill="rgb(208,21,16)" rx="2" ry="2" />
<text  x="1144.98" y="1727.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="453.0" y="1989" width="0.2" height="15.0" fill="rgb(206,60,49)" rx="2" ry="2" />
<text  x="455.95" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="339.7" y="1797" width="0.4" height="15.0" fill="rgb(240,118,30)" rx="2" ry="2" />
<text  x="342.71" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (488 samples, 8.27%)</title><rect x="734.2" y="1861" width="97.7" height="15.0" fill="rgb(214,31,0)" rx="2" ry="2" />
<text  x="737.25" y="1871.5" >exit_to_use..</text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="925.7" y="1877" width="0.2" height="15.0" fill="rgb(205,17,32)" rx="2" ry="2" />
<text  x="928.71" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="272.1" y="1653" width="0.2" height="15.0" fill="rgb(233,48,48)" rx="2" ry="2" />
<text  x="275.09" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="216.5" y="1829" width="0.6" height="15.0" fill="rgb(240,24,14)" rx="2" ry="2" />
<text  x="219.47" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1110.0" y="1877" width="0.2" height="15.0" fill="rgb(211,106,7)" rx="2" ry="2" />
<text  x="1112.97" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="984.7" y="1781" width="0.2" height="15.0" fill="rgb(225,218,42)" rx="2" ry="2" />
<text  x="987.73" y="1791.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="428.5" y="1605" width="0.2" height="15.0" fill="rgb(243,48,25)" rx="2" ry="2" />
<text  x="431.54" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="843.7" y="1845" width="0.2" height="15.0" fill="rgb(250,190,2)" rx="2" ry="2" />
<text  x="846.68" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="267.5" y="1701" width="0.2" height="15.0" fill="rgb(244,168,33)" rx="2" ry="2" />
<text  x="270.49" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="496.0" y="1925" width="0.2" height="15.0" fill="rgb(209,183,38)" rx="2" ry="2" />
<text  x="498.96" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="87.0" y="1957" width="0.2" height="15.0" fill="rgb(240,99,9)" rx="2" ry="2" />
<text  x="90.03" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1130.8" y="1941" width="0.2" height="15.0" fill="rgb(242,16,31)" rx="2" ry="2" />
<text  x="1133.78" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="384.5" y="1749" width="0.2" height="15.0" fill="rgb(245,29,27)" rx="2" ry="2" />
<text  x="387.53" y="1759.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="839.7" y="1909" width="0.4" height="15.0" fill="rgb(253,215,25)" rx="2" ry="2" />
<text  x="842.68" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="424.5" y="1893" width="0.4" height="15.0" fill="rgb(221,59,50)" rx="2" ry="2" />
<text  x="427.54" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="650.8" y="1973" width="1.4" height="15.0" fill="rgb(205,146,34)" rx="2" ry="2" />
<text  x="653.82" y="1983.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="787.3" y="1301" width="0.2" height="15.0" fill="rgb(224,199,40)" rx="2" ry="2" />
<text  x="790.26" y="1311.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="189.9" y="1861" width="0.4" height="15.0" fill="rgb(240,164,33)" rx="2" ry="2" />
<text  x="192.86" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="84.8" y="1909" width="0.2" height="15.0" fill="rgb(220,227,46)" rx="2" ry="2" />
<text  x="87.83" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="136.6" y="1989" width="1.0" height="15.0" fill="rgb(242,79,2)" rx="2" ry="2" />
<text  x="139.64" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (9 samples, 0.15%)</title><rect x="609.0" y="1829" width="1.8" height="15.0" fill="rgb(253,87,46)" rx="2" ry="2" />
<text  x="612.00" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1018.9" y="2037" width="0.2" height="15.0" fill="rgb(212,215,49)" rx="2" ry="2" />
<text  x="1021.94" y="2047.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="898.3" y="1957" width="0.2" height="15.0" fill="rgb(216,87,38)" rx="2" ry="2" />
<text  x="901.30" y="1967.5" ></text>
</g>
<g >
<title>SYSC_getpeername (20 samples, 0.34%)</title><rect x="676.4" y="1877" width="4.0" height="15.0" fill="rgb(209,178,17)" rx="2" ry="2" />
<text  x="679.43" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="597.2" y="1925" width="0.2" height="15.0" fill="rgb(229,58,26)" rx="2" ry="2" />
<text  x="600.20" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1169.2" y="2021" width="0.2" height="15.0" fill="rgb(208,5,6)" rx="2" ry="2" />
<text  x="1172.19" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (2 samples, 0.03%)</title><rect x="896.5" y="2037" width="0.4" height="15.0" fill="rgb(246,7,6)" rx="2" ry="2" />
<text  x="899.50" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="888.7" y="1893" width="0.2" height="15.0" fill="rgb(216,136,42)" rx="2" ry="2" />
<text  x="891.70" y="1903.5" ></text>
</g>
<g >
<title>sys_getsockname (38 samples, 0.64%)</title><rect x="603.6" y="1893" width="7.6" height="15.0" fill="rgb(215,116,7)" rx="2" ry="2" />
<text  x="606.60" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="890.9" y="1877" width="0.2" height="15.0" fill="rgb(229,86,47)" rx="2" ry="2" />
<text  x="893.90" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="541.8" y="1973" width="0.8" height="15.0" fill="rgb(252,120,5)" rx="2" ry="2" />
<text  x="544.78" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="590.4" y="1813" width="0.2" height="15.0" fill="rgb(248,47,21)" rx="2" ry="2" />
<text  x="593.40" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="272.9" y="1781" width="0.2" height="15.0" fill="rgb(205,167,2)" rx="2" ry="2" />
<text  x="275.89" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1126.2" y="1685" width="0.2" height="15.0" fill="rgb(231,46,32)" rx="2" ry="2" />
<text  x="1129.18" y="1695.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="703.6" y="1877" width="0.4" height="15.0" fill="rgb(228,180,6)" rx="2" ry="2" />
<text  x="706.64" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="298.7" y="1605" width="0.2" height="15.0" fill="rgb(212,99,24)" rx="2" ry="2" />
<text  x="301.70" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="84.8" y="1893" width="0.2" height="15.0" fill="rgb(212,79,48)" rx="2" ry="2" />
<text  x="87.83" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="889.1" y="1685" width="0.2" height="15.0" fill="rgb(250,193,18)" rx="2" ry="2" />
<text  x="892.10" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="934.5" y="1957" width="0.2" height="15.0" fill="rgb(215,29,7)" rx="2" ry="2" />
<text  x="937.51" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="935.9" y="1941" width="0.2" height="15.0" fill="rgb(227,64,3)" rx="2" ry="2" />
<text  x="938.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="824.5" y="1701" width="1.2" height="15.0" fill="rgb(254,187,11)" rx="2" ry="2" />
<text  x="827.48" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="518.6" y="1893" width="0.6" height="15.0" fill="rgb(219,147,46)" rx="2" ry="2" />
<text  x="521.57" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="357.1" y="1845" width="0.4" height="15.0" fill="rgb(245,207,13)" rx="2" ry="2" />
<text  x="360.12" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (3 samples, 0.05%)</title><rect x="141.6" y="1925" width="0.6" height="15.0" fill="rgb(253,184,2)" rx="2" ry="2" />
<text  x="144.64" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1067.8" y="1509" width="0.2" height="15.0" fill="rgb(246,158,15)" rx="2" ry="2" />
<text  x="1070.76" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="886.1" y="1765" width="0.2" height="15.0" fill="rgb(253,140,49)" rx="2" ry="2" />
<text  x="889.10" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="739.4" y="1749" width="0.2" height="15.0" fill="rgb(236,194,25)" rx="2" ry="2" />
<text  x="742.45" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1110.6" y="1669" width="0.2" height="15.0" fill="rgb(240,15,42)" rx="2" ry="2" />
<text  x="1113.57" y="1679.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="57.8" y="1893" width="0.2" height="15.0" fill="rgb(248,227,45)" rx="2" ry="2" />
<text  x="60.82" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.81%)</title><rect x="902.7" y="2021" width="9.6" height="15.0" fill="rgb(247,123,18)" rx="2" ry="2" />
<text  x="905.70" y="2031.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="430.3" y="1669" width="0.2" height="15.0" fill="rgb(230,46,51)" rx="2" ry="2" />
<text  x="433.34" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="843.5" y="1621" width="0.2" height="15.0" fill="rgb(225,213,51)" rx="2" ry="2" />
<text  x="846.48" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="549" width="15.2" height="15.0" fill="rgb(241,18,0)" rx="2" ry="2" />
<text  x="106.43" y="559.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="120.4" y="1189" width="0.2" height="15.0" fill="rgb(230,137,54)" rx="2" ry="2" />
<text  x="123.44" y="1199.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="339.7" y="1813" width="0.4" height="15.0" fill="rgb(218,221,29)" rx="2" ry="2" />
<text  x="342.71" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="879.5" y="1605" width="0.2" height="15.0" fill="rgb(205,44,48)" rx="2" ry="2" />
<text  x="882.49" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1120.2" y="1685" width="0.2" height="15.0" fill="rgb(229,6,34)" rx="2" ry="2" />
<text  x="1123.18" y="1695.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="415.1" y="1797" width="0.8" height="15.0" fill="rgb(205,88,28)" rx="2" ry="2" />
<text  x="418.14" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="428.5" y="1749" width="0.2" height="15.0" fill="rgb(254,54,48)" rx="2" ry="2" />
<text  x="431.54" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="546.4" y="1925" width="0.6" height="15.0" fill="rgb(242,9,37)" rx="2" ry="2" />
<text  x="549.38" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="817.5" y="1685" width="0.2" height="15.0" fill="rgb(244,123,29)" rx="2" ry="2" />
<text  x="820.47" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="587.2" y="1989" width="0.6" height="15.0" fill="rgb(240,143,50)" rx="2" ry="2" />
<text  x="590.20" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="306.5" y="1573" width="0.2" height="15.0" fill="rgb(253,157,49)" rx="2" ry="2" />
<text  x="309.50" y="1583.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="78.2" y="1829" width="0.8" height="15.0" fill="rgb(249,139,8)" rx="2" ry="2" />
<text  x="81.22" y="1839.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="759.9" y="1749" width="0.2" height="15.0" fill="rgb(240,73,41)" rx="2" ry="2" />
<text  x="762.85" y="1759.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="535.8" y="1829" width="0.2" height="15.0" fill="rgb(248,196,33)" rx="2" ry="2" />
<text  x="538.78" y="1839.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="1171.8" y="2021" width="0.2" height="15.0" fill="rgb(251,89,26)" rx="2" ry="2" />
<text  x="1174.79" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="972.1" y="2005" width="0.4" height="15.0" fill="rgb(234,183,3)" rx="2" ry="2" />
<text  x="975.13" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="565.8" y="1701" width="0.2" height="15.0" fill="rgb(212,98,13)" rx="2" ry="2" />
<text  x="568.79" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (4 samples, 0.07%)</title><rect x="590.0" y="2005" width="0.8" height="15.0" fill="rgb(251,118,30)" rx="2" ry="2" />
<text  x="593.00" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="259.5" y="1781" width="0.2" height="15.0" fill="rgb(212,104,49)" rx="2" ry="2" />
<text  x="262.48" y="1791.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (2 samples, 0.03%)</title><rect x="1005.7" y="2005" width="0.4" height="15.0" fill="rgb(247,208,53)" rx="2" ry="2" />
<text  x="1008.74" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="363.5" y="1749" width="0.2" height="15.0" fill="rgb(217,200,14)" rx="2" ry="2" />
<text  x="366.52" y="1759.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="752.5" y="1365" width="0.2" height="15.0" fill="rgb(253,136,19)" rx="2" ry="2" />
<text  x="755.45" y="1375.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="611.4" y="1621" width="0.2" height="15.0" fill="rgb(253,36,39)" rx="2" ry="2" />
<text  x="614.40" y="1631.5" ></text>
</g>
<g >
<title>dev_queue_xmit (91 samples, 1.54%)</title><rect x="288.3" y="1733" width="18.2" height="15.0" fill="rgb(234,43,3)" rx="2" ry="2" />
<text  x="291.29" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 0.92%)</title><rect x="641.6" y="2005" width="10.8" height="15.0" fill="rgb(242,79,47)" rx="2" ry="2" />
<text  x="644.61" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="885.9" y="1925" width="0.2" height="15.0" fill="rgb(245,142,17)" rx="2" ry="2" />
<text  x="888.90" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1189.0" y="1733" width="0.2" height="15.0" fill="rgb(209,184,27)" rx="2" ry="2" />
<text  x="1192.00" y="1743.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.02%)</title><rect x="497.4" y="1973" width="0.2" height="15.0" fill="rgb(224,37,48)" rx="2" ry="2" />
<text  x="500.37" y="1983.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="895.5" y="2005" width="0.2" height="15.0" fill="rgb(253,125,16)" rx="2" ry="2" />
<text  x="898.50" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="611.8" y="1925" width="3.2" height="15.0" fill="rgb(251,131,16)" rx="2" ry="2" />
<text  x="614.80" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="103.4" y="101" width="14.2" height="15.0" fill="rgb(249,78,33)" rx="2" ry="2" />
<text  x="106.43" y="111.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="787.7" y="1333" width="0.2" height="15.0" fill="rgb(248,2,48)" rx="2" ry="2" />
<text  x="790.66" y="1343.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="321.5" y="1509" width="0.2" height="15.0" fill="rgb(252,126,27)" rx="2" ry="2" />
<text  x="324.51" y="1519.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="392.5" y="1957" width="0.2" height="15.0" fill="rgb(252,216,33)" rx="2" ry="2" />
<text  x="395.53" y="1967.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1054.4" y="1941" width="0.2" height="15.0" fill="rgb(217,211,39)" rx="2" ry="2" />
<text  x="1057.35" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.5" y="1845" width="0.2" height="15.0" fill="rgb(247,209,17)" rx="2" ry="2" />
<text  x="886.50" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="557.2" y="1877" width="0.2" height="15.0" fill="rgb(220,222,31)" rx="2" ry="2" />
<text  x="560.19" y="1887.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (23 samples, 0.39%)</title><rect x="479.0" y="1925" width="4.6" height="15.0" fill="rgb(226,115,14)" rx="2" ry="2" />
<text  x="481.96" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (4 samples, 0.07%)</title><rect x="985.9" y="1893" width="0.8" height="15.0" fill="rgb(234,99,7)" rx="2" ry="2" />
<text  x="988.93" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="214.1" y="1877" width="0.2" height="15.0" fill="rgb(252,5,54)" rx="2" ry="2" />
<text  x="217.07" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (11 samples, 0.19%)</title><rect x="79.6" y="1941" width="2.2" height="15.0" fill="rgb(236,114,45)" rx="2" ry="2" />
<text  x="82.62" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="273.1" y="1797" width="0.2" height="15.0" fill="rgb(239,48,31)" rx="2" ry="2" />
<text  x="276.09" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.24%)</title><rect x="285.3" y="1669" width="2.8" height="15.0" fill="rgb(241,36,11)" rx="2" ry="2" />
<text  x="288.29" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="758.9" y="1685" width="0.2" height="15.0" fill="rgb(211,160,1)" rx="2" ry="2" />
<text  x="761.85" y="1695.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="184.5" y="2037" width="0.2" height="15.0" fill="rgb(213,125,11)" rx="2" ry="2" />
<text  x="187.46" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="590.4" y="1829" width="0.2" height="15.0" fill="rgb(205,206,30)" rx="2" ry="2" />
<text  x="593.40" y="1839.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="787.3" y="1285" width="0.2" height="15.0" fill="rgb(220,25,40)" rx="2" ry="2" />
<text  x="790.26" y="1295.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="273.1" y="1749" width="0.2" height="15.0" fill="rgb(234,207,52)" rx="2" ry="2" />
<text  x="276.09" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="916.5" y="1749" width="0.2" height="15.0" fill="rgb(244,183,33)" rx="2" ry="2" />
<text  x="919.51" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="648.4" y="1765" width="0.2" height="15.0" fill="rgb(212,142,26)" rx="2" ry="2" />
<text  x="651.42" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="51.4" y="1813" width="0.2" height="15.0" fill="rgb(240,32,51)" rx="2" ry="2" />
<text  x="54.41" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="588.2" y="1909" width="0.2" height="15.0" fill="rgb(232,164,25)" rx="2" ry="2" />
<text  x="591.20" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::recv (2 samples, 0.03%)</title><rect x="62.4" y="1973" width="0.4" height="15.0" fill="rgb(206,73,10)" rx="2" ry="2" />
<text  x="65.42" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="696.8" y="1909" width="0.4" height="15.0" fill="rgb(220,221,4)" rx="2" ry="2" />
<text  x="699.83" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="898.9" y="1989" width="0.2" height="15.0" fill="rgb(228,71,31)" rx="2" ry="2" />
<text  x="901.90" y="1999.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="321.1" y="1749" width="0.2" height="15.0" fill="rgb(250,96,39)" rx="2" ry="2" />
<text  x="324.11" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="523.0" y="1781" width="0.2" height="15.0" fill="rgb(230,19,14)" rx="2" ry="2" />
<text  x="525.97" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (127 samples, 2.15%)</title><rect x="198.9" y="2005" width="25.4" height="15.0" fill="rgb(219,14,28)" rx="2" ry="2" />
<text  x="201.86" y="2015.5" >f..</text>
</g>
<g >
<title>folly::IPAddress::IPAddress (4 samples, 0.07%)</title><rect x="668.6" y="1909" width="0.8" height="15.0" fill="rgb(209,154,46)" rx="2" ry="2" />
<text  x="671.62" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="848.5" y="1829" width="0.2" height="15.0" fill="rgb(209,61,46)" rx="2" ry="2" />
<text  x="851.48" y="1839.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="755.5" y="1637" width="0.2" height="15.0" fill="rgb(205,67,51)" rx="2" ry="2" />
<text  x="758.45" y="1647.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="400.3" y="1893" width="0.2" height="15.0" fill="rgb(226,173,45)" rx="2" ry="2" />
<text  x="403.33" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (3 samples, 0.05%)</title><rect x="880.1" y="1941" width="0.6" height="15.0" fill="rgb(250,75,46)" rx="2" ry="2" />
<text  x="883.09" y="1951.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (57 samples, 0.97%)</title><rect x="1091.8" y="1925" width="11.4" height="15.0" fill="rgb(214,163,14)" rx="2" ry="2" />
<text  x="1094.77" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1049.6" y="1813" width="0.2" height="15.0" fill="rgb(239,89,16)" rx="2" ry="2" />
<text  x="1052.55" y="1823.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="812.9" y="1653" width="0.2" height="15.0" fill="rgb(244,29,53)" rx="2" ry="2" />
<text  x="815.87" y="1663.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="180.7" y="2021" width="0.2" height="15.0" fill="rgb(207,221,0)" rx="2" ry="2" />
<text  x="183.66" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="136.4" y="1973" width="0.2" height="15.0" fill="rgb(236,75,42)" rx="2" ry="2" />
<text  x="139.44" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (6 samples, 0.10%)</title><rect x="286.7" y="1493" width="1.2" height="15.0" fill="rgb(217,127,20)" rx="2" ry="2" />
<text  x="289.69" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="518.8" y="1781" width="0.4" height="15.0" fill="rgb(227,91,49)" rx="2" ry="2" />
<text  x="521.77" y="1791.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="719.8" y="1813" width="0.2" height="15.0" fill="rgb(229,196,22)" rx="2" ry="2" />
<text  x="722.84" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="249.1" y="1797" width="0.2" height="15.0" fill="rgb(233,85,13)" rx="2" ry="2" />
<text  x="252.08" y="1807.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.2" y="1989" width="0.8" height="15.0" fill="rgb(230,175,13)" rx="2" ry="2" />
<text  x="14.20" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="525.6" y="1861" width="0.2" height="15.0" fill="rgb(221,4,17)" rx="2" ry="2" />
<text  x="528.57" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (6 samples, 0.10%)</title><rect x="787.3" y="1461" width="1.2" height="15.0" fill="rgb(223,203,7)" rx="2" ry="2" />
<text  x="790.26" y="1471.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="809.7" y="1429" width="0.4" height="15.0" fill="rgb(230,32,36)" rx="2" ry="2" />
<text  x="812.67" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (24 samples, 0.41%)</title><rect x="791.1" y="1541" width="4.8" height="15.0" fill="rgb(225,110,26)" rx="2" ry="2" />
<text  x="794.06" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.1" y="1797" width="0.2" height="15.0" fill="rgb(253,107,37)" rx="2" ry="2" />
<text  x="844.08" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.4" y="1557" width="0.2" height="15.0" fill="rgb(249,111,1)" rx="2" ry="2" />
<text  x="123.44" y="1567.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1189.2" y="2037" width="0.6" height="15.0" fill="rgb(205,195,52)" rx="2" ry="2" />
<text  x="1192.20" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="809.7" y="1349" width="0.2" height="15.0" fill="rgb(214,79,30)" rx="2" ry="2" />
<text  x="812.67" y="1359.5" ></text>
</g>
<g >
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="286.3" y="1525" width="0.2" height="15.0" fill="rgb(238,7,44)" rx="2" ry="2" />
<text  x="289.29" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="914.9" y="1861" width="0.2" height="15.0" fill="rgb(247,186,27)" rx="2" ry="2" />
<text  x="917.91" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="114.8" y="53" width="0.4" height="15.0" fill="rgb(230,175,23)" rx="2" ry="2" />
<text  x="117.84" y="63.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15 samples, 0.25%)</title><rect x="285.3" y="1701" width="3.0" height="15.0" fill="rgb(254,68,45)" rx="2" ry="2" />
<text  x="288.29" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="126.6" y="1989" width="0.2" height="15.0" fill="rgb(211,201,23)" rx="2" ry="2" />
<text  x="129.64" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="115.2" y="37" width="0.2" height="15.0" fill="rgb(213,76,28)" rx="2" ry="2" />
<text  x="118.24" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="954.3" y="1909" width="0.2" height="15.0" fill="rgb(245,2,45)" rx="2" ry="2" />
<text  x="957.32" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="709" width="15.4" height="15.0" fill="rgb(246,90,52)" rx="2" ry="2" />
<text  x="106.43" y="719.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="914.9" y="1957" width="0.2" height="15.0" fill="rgb(213,6,7)" rx="2" ry="2" />
<text  x="917.91" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="664.0" y="1781" width="0.2" height="15.0" fill="rgb(231,160,16)" rx="2" ry="2" />
<text  x="667.02" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="863.7" y="1941" width="0.2" height="15.0" fill="rgb(211,131,52)" rx="2" ry="2" />
<text  x="866.69" y="1951.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="566.0" y="1973" width="0.2" height="15.0" fill="rgb(212,69,8)" rx="2" ry="2" />
<text  x="568.99" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="183.9" y="2021" width="0.2" height="15.0" fill="rgb(236,187,46)" rx="2" ry="2" />
<text  x="186.86" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="160.7" y="2021" width="0.2" height="15.0" fill="rgb(217,167,45)" rx="2" ry="2" />
<text  x="163.65" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="259.5" y="1637" width="0.2" height="15.0" fill="rgb(228,193,28)" rx="2" ry="2" />
<text  x="262.48" y="1647.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1149.4" y="2005" width="0.2" height="15.0" fill="rgb(236,70,0)" rx="2" ry="2" />
<text  x="1152.39" y="2015.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.03%)</title><rect x="1137.4" y="1989" width="0.4" height="15.0" fill="rgb(219,162,15)" rx="2" ry="2" />
<text  x="1140.38" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="857.9" y="1893" width="0.2" height="15.0" fill="rgb(249,107,17)" rx="2" ry="2" />
<text  x="860.89" y="1903.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="596.4" y="1925" width="0.2" height="15.0" fill="rgb(250,37,44)" rx="2" ry="2" />
<text  x="599.40" y="1935.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (2 samples, 0.03%)</title><rect x="538.4" y="1925" width="0.4" height="15.0" fill="rgb(235,74,32)" rx="2" ry="2" />
<text  x="541.38" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="278.7" y="1557" width="0.2" height="15.0" fill="rgb(246,136,13)" rx="2" ry="2" />
<text  x="281.69" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1073.8" y="1861" width="0.2" height="15.0" fill="rgb(206,161,20)" rx="2" ry="2" />
<text  x="1076.76" y="1871.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1052.8" y="1973" width="0.2" height="15.0" fill="rgb(222,49,33)" rx="2" ry="2" />
<text  x="1055.75" y="1983.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="565.8" y="1653" width="0.2" height="15.0" fill="rgb(252,72,25)" rx="2" ry="2" />
<text  x="568.79" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="118.4" y="181" width="0.2" height="15.0" fill="rgb(229,83,53)" rx="2" ry="2" />
<text  x="121.44" y="191.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="804.7" y="1509" width="0.2" height="15.0" fill="rgb(249,133,18)" rx="2" ry="2" />
<text  x="807.67" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="328.7" y="1605" width="0.2" height="15.0" fill="rgb(252,131,44)" rx="2" ry="2" />
<text  x="331.71" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="470.6" y="1829" width="0.2" height="15.0" fill="rgb(250,50,54)" rx="2" ry="2" />
<text  x="473.56" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="154.8" y="1877" width="1.0" height="15.0" fill="rgb(208,59,43)" rx="2" ry="2" />
<text  x="157.85" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="150.6" y="1877" width="0.2" height="15.0" fill="rgb(208,48,24)" rx="2" ry="2" />
<text  x="153.65" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (44 samples, 0.75%)</title><rect x="1111.4" y="1605" width="8.8" height="15.0" fill="rgb(219,5,2)" rx="2" ry="2" />
<text  x="1114.37" y="1615.5" ></text>
</g>
<g >
<title>mcrouter (5,880 samples, 99.69%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(205,48,49)" rx="2" ry="2" />
<text  x="16.60" y="2079.5" >mcrouter</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="333.3" y="1893" width="0.2" height="15.0" fill="rgb(233,207,45)" rx="2" ry="2" />
<text  x="336.31" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="935.3" y="1733" width="0.2" height="15.0" fill="rgb(233,163,7)" rx="2" ry="2" />
<text  x="938.31" y="1743.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="453.2" y="1877" width="0.8" height="15.0" fill="rgb(210,143,46)" rx="2" ry="2" />
<text  x="456.15" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="483.6" y="1509" width="0.2" height="15.0" fill="rgb(230,115,3)" rx="2" ry="2" />
<text  x="486.56" y="1519.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (4 samples, 0.07%)</title><rect x="1138.4" y="2053" width="0.8" height="15.0" fill="rgb(230,32,5)" rx="2" ry="2" />
<text  x="1141.38" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="333.3" y="1845" width="0.2" height="15.0" fill="rgb(218,32,22)" rx="2" ry="2" />
<text  x="336.31" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.0" y="1909" width="0.2" height="15.0" fill="rgb(226,115,46)" rx="2" ry="2" />
<text  x="160.05" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="848.5" y="1845" width="0.2" height="15.0" fill="rgb(239,44,16)" rx="2" ry="2" />
<text  x="851.48" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="841.1" y="1653" width="0.2" height="15.0" fill="rgb(217,212,24)" rx="2" ry="2" />
<text  x="844.08" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="165.3" y="1845" width="0.2" height="15.0" fill="rgb(231,13,3)" rx="2" ry="2" />
<text  x="168.25" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (7 samples, 0.12%)</title><rect x="1143.6" y="2021" width="1.4" height="15.0" fill="rgb(254,56,13)" rx="2" ry="2" />
<text  x="1146.58" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="992.7" y="1941" width="0.2" height="15.0" fill="rgb(242,202,33)" rx="2" ry="2" />
<text  x="995.73" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (5 samples, 0.08%)</title><rect x="655.2" y="1973" width="1.0" height="15.0" fill="rgb(214,107,52)" rx="2" ry="2" />
<text  x="658.22" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="74.6" y="1845" width="0.2" height="15.0" fill="rgb(253,61,33)" rx="2" ry="2" />
<text  x="77.62" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1733" width="0.2" height="15.0" fill="rgb(247,81,28)" rx="2" ry="2" />
<text  x="614.40" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1067.8" y="1717" width="0.4" height="15.0" fill="rgb(252,215,16)" rx="2" ry="2" />
<text  x="1070.76" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1091.2" y="1845" width="0.6" height="15.0" fill="rgb(214,123,3)" rx="2" ry="2" />
<text  x="1094.17" y="1855.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="935.3" y="1605" width="0.2" height="15.0" fill="rgb(238,127,15)" rx="2" ry="2" />
<text  x="938.31" y="1615.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="661.4" y="2005" width="0.2" height="15.0" fill="rgb(237,167,21)" rx="2" ry="2" />
<text  x="664.42" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="87.2" y="1957" width="0.8" height="15.0" fill="rgb(218,168,50)" rx="2" ry="2" />
<text  x="90.23" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="843.5" y="1701" width="0.2" height="15.0" fill="rgb(247,82,34)" rx="2" ry="2" />
<text  x="846.48" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="897.1" y="1989" width="1.4" height="15.0" fill="rgb(223,42,49)" rx="2" ry="2" />
<text  x="900.10" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="58.0" y="1893" width="0.2" height="15.0" fill="rgb(246,41,9)" rx="2" ry="2" />
<text  x="61.02" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="333.3" y="1829" width="0.2" height="15.0" fill="rgb(247,187,40)" rx="2" ry="2" />
<text  x="336.31" y="1839.5" ></text>
</g>
<g >
<title>netdev_pick_tx (6 samples, 0.10%)</title><rect x="789.5" y="1557" width="1.2" height="15.0" fill="rgb(206,152,32)" rx="2" ry="2" />
<text  x="792.46" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="853.9" y="1861" width="0.2" height="15.0" fill="rgb(231,69,25)" rx="2" ry="2" />
<text  x="856.89" y="1871.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="788.3" y="1365" width="0.2" height="15.0" fill="rgb(221,106,43)" rx="2" ry="2" />
<text  x="791.26" y="1375.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="843.5" y="1893" width="0.2" height="15.0" fill="rgb(224,112,16)" rx="2" ry="2" />
<text  x="846.48" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="211.5" y="1653" width="0.2" height="15.0" fill="rgb(231,108,19)" rx="2" ry="2" />
<text  x="214.47" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.1" y="1893" width="0.2" height="15.0" fill="rgb(247,194,30)" rx="2" ry="2" />
<text  x="892.10" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="256.5" y="1621" width="0.2" height="15.0" fill="rgb(245,4,11)" rx="2" ry="2" />
<text  x="259.48" y="1631.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="89.6" y="1941" width="0.2" height="15.0" fill="rgb(240,89,34)" rx="2" ry="2" />
<text  x="92.63" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.08%)</title><rect x="286.9" y="1445" width="1.0" height="15.0" fill="rgb(216,72,40)" rx="2" ry="2" />
<text  x="289.89" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="697.6" y="1685" width="0.2" height="15.0" fill="rgb(238,68,27)" rx="2" ry="2" />
<text  x="700.63" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1049.6" y="1893" width="0.2" height="15.0" fill="rgb(228,83,2)" rx="2" ry="2" />
<text  x="1052.55" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="84.8" y="1813" width="0.2" height="15.0" fill="rgb(254,94,35)" rx="2" ry="2" />
<text  x="87.83" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1173.8" y="1973" width="0.2" height="15.0" fill="rgb(236,156,21)" rx="2" ry="2" />
<text  x="1176.79" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="898.5" y="1989" width="0.2" height="15.0" fill="rgb(233,227,37)" rx="2" ry="2" />
<text  x="901.50" y="1999.5" ></text>
</g>
<g >
<title>tcp_tso_segs (4 samples, 0.07%)</title><rect x="323.3" y="1829" width="0.8" height="15.0" fill="rgb(253,19,44)" rx="2" ry="2" />
<text  x="326.31" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="1169.4" y="2021" width="1.8" height="15.0" fill="rgb(223,85,48)" rx="2" ry="2" />
<text  x="1172.39" y="2031.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="272.9" y="1749" width="0.2" height="15.0" fill="rgb(251,85,38)" rx="2" ry="2" />
<text  x="275.89" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="913.1" y="2005" width="0.2" height="15.0" fill="rgb(242,27,1)" rx="2" ry="2" />
<text  x="916.11" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="504.6" y="1941" width="0.6" height="15.0" fill="rgb(209,220,26)" rx="2" ry="2" />
<text  x="507.57" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.4" y="309" width="0.2" height="15.0" fill="rgb(247,58,1)" rx="2" ry="2" />
<text  x="121.44" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="560.4" y="1829" width="0.2" height="15.0" fill="rgb(232,4,5)" rx="2" ry="2" />
<text  x="563.39" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (1 samples, 0.02%)</title><rect x="30.6" y="1973" width="0.2" height="15.0" fill="rgb(230,19,25)" rx="2" ry="2" />
<text  x="33.61" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="1022.7" y="2021" width="1.8" height="15.0" fill="rgb(224,141,2)" rx="2" ry="2" />
<text  x="1025.74" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.2" y="261" width="0.2" height="15.0" fill="rgb(223,144,3)" rx="2" ry="2" />
<text  x="121.24" y="271.5" ></text>
</g>
<g >
<title>[unknown] (56 samples, 0.95%)</title><rect x="103.4" y="69" width="11.2" height="15.0" fill="rgb(236,19,38)" rx="2" ry="2" />
<text  x="106.43" y="79.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="97.8" y="1701" width="0.2" height="15.0" fill="rgb(221,130,31)" rx="2" ry="2" />
<text  x="100.83" y="1711.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="774.7" y="1669" width="0.2" height="15.0" fill="rgb(247,102,35)" rx="2" ry="2" />
<text  x="777.66" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="825.1" y="1509" width="0.2" height="15.0" fill="rgb(212,21,2)" rx="2" ry="2" />
<text  x="828.08" y="1519.5" ></text>
</g>
<g >
<title>epoll_ctl (381 samples, 6.46%)</title><rect x="433.1" y="2037" width="76.3" height="15.0" fill="rgb(245,52,32)" rx="2" ry="2" />
<text  x="436.14" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="810.5" y="1669" width="0.2" height="15.0" fill="rgb(209,151,30)" rx="2" ry="2" />
<text  x="813.47" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="565.6" y="1909" width="0.2" height="15.0" fill="rgb(212,67,43)" rx="2" ry="2" />
<text  x="568.59" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="825.1" y="1269" width="0.2" height="15.0" fill="rgb(222,219,11)" rx="2" ry="2" />
<text  x="828.08" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="854.9" y="1781" width="0.2" height="15.0" fill="rgb(250,95,46)" rx="2" ry="2" />
<text  x="857.89" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="189.9" y="1957" width="0.4" height="15.0" fill="rgb(227,174,4)" rx="2" ry="2" />
<text  x="192.86" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="339.9" y="1685" width="0.2" height="15.0" fill="rgb(215,33,14)" rx="2" ry="2" />
<text  x="342.91" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="916.5" y="1781" width="0.2" height="15.0" fill="rgb(221,178,51)" rx="2" ry="2" />
<text  x="919.51" y="1791.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1138.4" y="2037" width="0.2" height="15.0" fill="rgb(239,228,12)" rx="2" ry="2" />
<text  x="1141.38" y="2047.5" ></text>
</g>
<g >
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="272.5" y="1877" width="0.4" height="15.0" fill="rgb(242,217,23)" rx="2" ry="2" />
<text  x="275.49" y="1887.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (18 samples, 0.31%)</title><rect x="79.2" y="1957" width="3.6" height="15.0" fill="rgb(216,28,2)" rx="2" ry="2" />
<text  x="82.22" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="707.2" y="1925" width="0.6" height="15.0" fill="rgb(229,10,0)" rx="2" ry="2" />
<text  x="710.24" y="1935.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (80 samples, 1.36%)</title><rect x="509.8" y="1957" width="16.0" height="15.0" fill="rgb(242,25,34)" rx="2" ry="2" />
<text  x="512.77" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="324.1" y="1749" width="0.4" height="15.0" fill="rgb(211,5,49)" rx="2" ry="2" />
<text  x="327.11" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (14 samples, 0.24%)</title><rect x="161.5" y="2021" width="2.8" height="15.0" fill="rgb(230,108,28)" rx="2" ry="2" />
<text  x="164.45" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (3 samples, 0.05%)</title><rect x="719.4" y="1941" width="0.6" height="15.0" fill="rgb(227,86,42)" rx="2" ry="2" />
<text  x="722.44" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="545.2" y="1941" width="0.4" height="15.0" fill="rgb(209,14,27)" rx="2" ry="2" />
<text  x="548.18" y="1951.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="328.9" y="1797" width="0.2" height="15.0" fill="rgb(244,174,54)" rx="2" ry="2" />
<text  x="331.91" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.2" y="1909" width="0.2" height="15.0" fill="rgb(222,146,28)" rx="2" ry="2" />
<text  x="65.22" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="470.8" y="1973" width="0.2" height="15.0" fill="rgb(227,90,51)" rx="2" ry="2" />
<text  x="473.76" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (68 samples, 1.15%)</title><rect x="1150.8" y="2053" width="13.6" height="15.0" fill="rgb(253,26,43)" rx="2" ry="2" />
<text  x="1153.79" y="2063.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="843.7" y="1909" width="0.2" height="15.0" fill="rgb(253,46,16)" rx="2" ry="2" />
<text  x="846.68" y="1919.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="312.5" y="1781" width="0.2" height="15.0" fill="rgb(221,53,10)" rx="2" ry="2" />
<text  x="315.50" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="118.2" y="85" width="0.2" height="15.0" fill="rgb(220,110,38)" rx="2" ry="2" />
<text  x="121.24" y="95.5" ></text>
</g>
<g >
<title>rcu_segcblist_future_gp_needed (1 samples, 0.02%)</title><rect x="635.4" y="1861" width="0.2" height="15.0" fill="rgb(251,224,38)" rx="2" ry="2" />
<text  x="638.41" y="1871.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(208,43,28)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1067.8" y="1477" width="0.2" height="15.0" fill="rgb(235,223,14)" rx="2" ry="2" />
<text  x="1070.76" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="84.8" y="1845" width="0.2" height="15.0" fill="rgb(215,151,37)" rx="2" ry="2" />
<text  x="87.83" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="753.9" y="1461" width="0.2" height="15.0" fill="rgb(253,145,18)" rx="2" ry="2" />
<text  x="756.85" y="1471.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="118.2" y="213" width="0.2" height="15.0" fill="rgb(245,116,15)" rx="2" ry="2" />
<text  x="121.24" y="223.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (3 samples, 0.05%)</title><rect x="843.1" y="1909" width="0.6" height="15.0" fill="rgb(246,28,11)" rx="2" ry="2" />
<text  x="846.08" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="996.5" y="1973" width="0.8" height="15.0" fill="rgb(220,45,51)" rx="2" ry="2" />
<text  x="999.53" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="842.1" y="1733" width="0.8" height="15.0" fill="rgb(209,89,3)" rx="2" ry="2" />
<text  x="845.08" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1120.2" y="1589" width="0.2" height="15.0" fill="rgb(230,92,25)" rx="2" ry="2" />
<text  x="1123.18" y="1599.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (7 samples, 0.12%)</title><rect x="406.1" y="1877" width="1.4" height="15.0" fill="rgb(216,4,6)" rx="2" ry="2" />
<text  x="409.13" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="256.5" y="1637" width="0.2" height="15.0" fill="rgb(220,151,24)" rx="2" ry="2" />
<text  x="259.48" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="590.4" y="1701" width="0.2" height="15.0" fill="rgb(215,209,8)" rx="2" ry="2" />
<text  x="593.40" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="503.8" y="1749" width="0.4" height="15.0" fill="rgb(228,218,44)" rx="2" ry="2" />
<text  x="506.77" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.64%)</title><rect x="1152.6" y="1941" width="7.6" height="15.0" fill="rgb(254,94,54)" rx="2" ry="2" />
<text  x="1155.59" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1178.0" y="1909" width="0.2" height="15.0" fill="rgb(213,97,23)" rx="2" ry="2" />
<text  x="1181.00" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;int, void&gt; (1 samples, 0.02%)</title><rect x="586.2" y="2005" width="0.2" height="15.0" fill="rgb(228,64,28)" rx="2" ry="2" />
<text  x="589.20" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="73.8" y="1957" width="0.2" height="15.0" fill="rgb(205,52,43)" rx="2" ry="2" />
<text  x="76.82" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="658.4" y="1973" width="0.2" height="15.0" fill="rgb(215,195,11)" rx="2" ry="2" />
<text  x="661.42" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="589.8" y="1989" width="0.2" height="15.0" fill="rgb(211,5,45)" rx="2" ry="2" />
<text  x="592.80" y="1999.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.02%)</title><rect x="535.8" y="1749" width="0.2" height="15.0" fill="rgb(209,85,40)" rx="2" ry="2" />
<text  x="538.78" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (48 samples, 0.81%)</title><rect x="1110.6" y="1781" width="9.6" height="15.0" fill="rgb(206,168,33)" rx="2" ry="2" />
<text  x="1113.57" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1081.8" y="1781" width="0.2" height="15.0" fill="rgb(215,73,4)" rx="2" ry="2" />
<text  x="1084.76" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (5 samples, 0.08%)</title><rect x="588.8" y="1957" width="1.0" height="15.0" fill="rgb(249,21,4)" rx="2" ry="2" />
<text  x="591.80" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="848.5" y="1765" width="0.2" height="15.0" fill="rgb(225,135,9)" rx="2" ry="2" />
<text  x="851.48" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.1" y="1845" width="0.2" height="15.0" fill="rgb(221,126,48)" rx="2" ry="2" />
<text  x="844.08" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="944.9" y="2005" width="0.6" height="15.0" fill="rgb(251,156,40)" rx="2" ry="2" />
<text  x="947.92" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1006.7" y="1989" width="0.2" height="15.0" fill="rgb(216,99,39)" rx="2" ry="2" />
<text  x="1009.74" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="381.5" y="1845" width="0.2" height="15.0" fill="rgb(236,100,19)" rx="2" ry="2" />
<text  x="384.53" y="1855.5" ></text>
</g>
<g >
<title>siphash_3u32 (1 samples, 0.02%)</title><rect x="97.8" y="1669" width="0.2" height="15.0" fill="rgb(218,98,39)" rx="2" ry="2" />
<text  x="100.83" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (3 samples, 0.05%)</title><rect x="734.6" y="1845" width="0.6" height="15.0" fill="rgb(248,45,14)" rx="2" ry="2" />
<text  x="737.65" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="339.7" y="1765" width="0.4" height="15.0" fill="rgb(211,29,11)" rx="2" ry="2" />
<text  x="342.71" y="1775.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (4 samples, 0.07%)</title><rect x="290.9" y="1669" width="0.8" height="15.0" fill="rgb(215,18,28)" rx="2" ry="2" />
<text  x="293.90" y="1679.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="981.7" y="1701" width="0.2" height="15.0" fill="rgb(249,142,9)" rx="2" ry="2" />
<text  x="984.73" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="647.8" y="1925" width="0.4" height="15.0" fill="rgb(215,29,14)" rx="2" ry="2" />
<text  x="650.82" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (4 samples, 0.07%)</title><rect x="677.6" y="1845" width="0.8" height="15.0" fill="rgb(234,89,46)" rx="2" ry="2" />
<text  x="680.63" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (5 samples, 0.08%)</title><rect x="67.8" y="1925" width="1.0" height="15.0" fill="rgb(208,204,45)" rx="2" ry="2" />
<text  x="70.82" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="180.5" y="1893" width="0.2" height="15.0" fill="rgb(208,189,9)" rx="2" ry="2" />
<text  x="183.46" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.14%)</title><rect x="786.9" y="1541" width="1.6" height="15.0" fill="rgb(230,101,25)" rx="2" ry="2" />
<text  x="789.86" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="58.6" y="1925" width="0.8" height="15.0" fill="rgb(253,8,17)" rx="2" ry="2" />
<text  x="61.62" y="1935.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="535.8" y="1813" width="0.2" height="15.0" fill="rgb(206,87,48)" rx="2" ry="2" />
<text  x="538.78" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="18.4" y="1941" width="0.2" height="15.0" fill="rgb(222,99,31)" rx="2" ry="2" />
<text  x="21.40" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="809.7" y="1301" width="0.2" height="15.0" fill="rgb(207,8,17)" rx="2" ry="2" />
<text  x="812.67" y="1311.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (49 samples, 0.83%)</title><rect x="617.2" y="1989" width="9.8" height="15.0" fill="rgb(209,133,20)" rx="2" ry="2" />
<text  x="620.21" y="1999.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="394.3" y="1957" width="0.2" height="15.0" fill="rgb(226,51,15)" rx="2" ry="2" />
<text  x="397.33" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="604.2" y="1861" width="0.4" height="15.0" fill="rgb(216,127,52)" rx="2" ry="2" />
<text  x="607.20" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1091.4" y="1669" width="0.2" height="15.0" fill="rgb(206,57,40)" rx="2" ry="2" />
<text  x="1094.37" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="565.6" y="1941" width="0.2" height="15.0" fill="rgb(209,58,26)" rx="2" ry="2" />
<text  x="568.59" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="146.6" y="1893" width="0.2" height="15.0" fill="rgb(239,99,50)" rx="2" ry="2" />
<text  x="149.65" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="648.4" y="1845" width="0.2" height="15.0" fill="rgb(221,35,31)" rx="2" ry="2" />
<text  x="651.42" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="890.5" y="1733" width="0.2" height="15.0" fill="rgb(248,3,39)" rx="2" ry="2" />
<text  x="893.50" y="1743.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="118.6" y="101" width="0.2" height="15.0" fill="rgb(233,6,46)" rx="2" ry="2" />
<text  x="121.64" y="111.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="211.5" y="1765" width="0.2" height="15.0" fill="rgb(221,227,23)" rx="2" ry="2" />
<text  x="214.47" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="860.1" y="1765" width="0.2" height="15.0" fill="rgb(205,62,43)" rx="2" ry="2" />
<text  x="863.09" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="656.2" y="1973" width="0.2" height="15.0" fill="rgb(243,136,35)" rx="2" ry="2" />
<text  x="659.22" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="168.7" y="1957" width="0.2" height="15.0" fill="rgb(205,222,19)" rx="2" ry="2" />
<text  x="171.65" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="809.7" y="1525" width="0.4" height="15.0" fill="rgb(211,114,16)" rx="2" ry="2" />
<text  x="812.67" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1653" width="0.2" height="15.0" fill="rgb(207,36,46)" rx="2" ry="2" />
<text  x="267.69" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="168.1" y="1973" width="0.4" height="15.0" fill="rgb(254,177,44)" rx="2" ry="2" />
<text  x="171.05" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="362.3" y="1941" width="0.4" height="15.0" fill="rgb(215,142,50)" rx="2" ry="2" />
<text  x="365.32" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="118.2" y="325" width="0.2" height="15.0" fill="rgb(252,136,6)" rx="2" ry="2" />
<text  x="121.24" y="335.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="576.0" y="1621" width="0.2" height="15.0" fill="rgb(230,14,32)" rx="2" ry="2" />
<text  x="578.99" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="283.1" y="1749" width="0.2" height="15.0" fill="rgb(220,41,44)" rx="2" ry="2" />
<text  x="286.09" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (94 samples, 1.59%)</title><rect x="138.8" y="1973" width="18.9" height="15.0" fill="rgb(227,51,41)" rx="2" ry="2" />
<text  x="141.84" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="77.8" y="1941" width="1.4" height="15.0" fill="rgb(225,71,51)" rx="2" ry="2" />
<text  x="80.82" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="324.1" y="1813" width="0.4" height="15.0" fill="rgb(250,203,41)" rx="2" ry="2" />
<text  x="327.11" y="1823.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="875.3" y="1669" width="0.2" height="15.0" fill="rgb(215,186,29)" rx="2" ry="2" />
<text  x="878.29" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="668.2" y="1941" width="1.2" height="15.0" fill="rgb(241,203,31)" rx="2" ry="2" />
<text  x="671.22" y="1951.5" ></text>
</g>
<g >
<title>sock_put (2 samples, 0.03%)</title><rect x="787.3" y="1349" width="0.4" height="15.0" fill="rgb(231,107,12)" rx="2" ry="2" />
<text  x="790.26" y="1359.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="185.5" y="2037" width="0.4" height="15.0" fill="rgb(238,36,2)" rx="2" ry="2" />
<text  x="188.46" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="117.8" y="53" width="0.2" height="15.0" fill="rgb(211,43,18)" rx="2" ry="2" />
<text  x="120.84" y="63.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (42 samples, 0.71%)</title><rect x="45.2" y="1973" width="8.4" height="15.0" fill="rgb(216,32,31)" rx="2" ry="2" />
<text  x="48.21" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="503.8" y="1813" width="0.4" height="15.0" fill="rgb(208,148,51)" rx="2" ry="2" />
<text  x="506.77" y="1823.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="707.4" y="1557" width="0.2" height="15.0" fill="rgb(253,227,16)" rx="2" ry="2" />
<text  x="710.44" y="1567.5" ></text>
</g>
<g >
<title>__clock_gettime (11 samples, 0.19%)</title><rect x="195.3" y="2037" width="2.2" height="15.0" fill="rgb(217,33,47)" rx="2" ry="2" />
<text  x="198.26" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (3 samples, 0.05%)</title><rect x="1166.8" y="2053" width="0.6" height="15.0" fill="rgb(253,99,7)" rx="2" ry="2" />
<text  x="1169.79" y="2063.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1115.2" y="1461" width="0.2" height="15.0" fill="rgb(236,226,38)" rx="2" ry="2" />
<text  x="1118.17" y="1471.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="860.1" y="1781" width="0.2" height="15.0" fill="rgb(216,143,14)" rx="2" ry="2" />
<text  x="863.09" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="890.1" y="1653" width="0.2" height="15.0" fill="rgb(207,45,10)" rx="2" ry="2" />
<text  x="893.10" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (46 samples, 0.78%)</title><rect x="1111.0" y="1653" width="9.2" height="15.0" fill="rgb(229,45,23)" rx="2" ry="2" />
<text  x="1113.97" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.0" y="1813" width="0.2" height="15.0" fill="rgb(232,228,7)" rx="2" ry="2" />
<text  x="125.04" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="914.1" y="2037" width="1.2" height="15.0" fill="rgb(243,120,30)" rx="2" ry="2" />
<text  x="917.11" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="483.6" y="1829" width="0.2" height="15.0" fill="rgb(230,202,44)" rx="2" ry="2" />
<text  x="486.56" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="328.7" y="1621" width="0.2" height="15.0" fill="rgb(235,3,4)" rx="2" ry="2" />
<text  x="331.71" y="1631.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="32.0" y="1925" width="0.2" height="15.0" fill="rgb(240,221,31)" rx="2" ry="2" />
<text  x="35.01" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (22 samples, 0.37%)</title><rect x="130.8" y="1973" width="4.4" height="15.0" fill="rgb(222,162,14)" rx="2" ry="2" />
<text  x="133.84" y="1983.5" ></text>
</g>
<g >
<title>put_cpu_partial (5 samples, 0.08%)</title><rect x="1067.4" y="1861" width="1.0" height="15.0" fill="rgb(249,42,17)" rx="2" ry="2" />
<text  x="1070.36" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="79.4" y="1893" width="0.2" height="15.0" fill="rgb(232,191,31)" rx="2" ry="2" />
<text  x="82.42" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1005.1" y="1845" width="0.2" height="15.0" fill="rgb(206,164,53)" rx="2" ry="2" />
<text  x="1008.14" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="969.1" y="1781" width="0.2" height="15.0" fill="rgb(232,197,11)" rx="2" ry="2" />
<text  x="972.13" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="886.1" y="1781" width="0.2" height="15.0" fill="rgb(230,195,8)" rx="2" ry="2" />
<text  x="889.10" y="1791.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="809.7" y="1317" width="0.2" height="15.0" fill="rgb(251,188,48)" rx="2" ry="2" />
<text  x="812.67" y="1327.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (1 samples, 0.02%)</title><rect x="25.4" y="1989" width="0.2" height="15.0" fill="rgb(235,181,48)" rx="2" ry="2" />
<text  x="28.41" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="933.7" y="1653" width="0.2" height="15.0" fill="rgb(223,209,13)" rx="2" ry="2" />
<text  x="936.71" y="1663.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="85.6" y="1989" width="0.4" height="15.0" fill="rgb(218,150,20)" rx="2" ry="2" />
<text  x="88.63" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="921.7" y="1749" width="0.8" height="15.0" fill="rgb(233,213,36)" rx="2" ry="2" />
<text  x="924.71" y="1759.5" ></text>
</g>
<g >
<title>import_iovec (7 samples, 0.12%)</title><rect x="243.1" y="1925" width="1.4" height="15.0" fill="rgb(206,81,51)" rx="2" ry="2" />
<text  x="246.08" y="1935.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="543.0" y="1989" width="0.2" height="15.0" fill="rgb(216,13,51)" rx="2" ry="2" />
<text  x="545.98" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="751.9" y="1605" width="0.2" height="15.0" fill="rgb(219,54,36)" rx="2" ry="2" />
<text  x="754.85" y="1615.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (12 samples, 0.20%)</title><rect x="242.1" y="1941" width="2.4" height="15.0" fill="rgb(215,98,40)" rx="2" ry="2" />
<text  x="245.08" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="827.3" y="1589" width="0.2" height="15.0" fill="rgb(218,176,9)" rx="2" ry="2" />
<text  x="830.28" y="1599.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="935.9" y="1925" width="0.2" height="15.0" fill="rgb(223,108,48)" rx="2" ry="2" />
<text  x="938.91" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="97.8" y="1685" width="0.2" height="15.0" fill="rgb(209,168,2)" rx="2" ry="2" />
<text  x="100.83" y="1695.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="12.6" y="1909" width="1.0" height="15.0" fill="rgb(233,22,40)" rx="2" ry="2" />
<text  x="15.60" y="1919.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="340.3" y="2005" width="0.2" height="15.0" fill="rgb(249,88,26)" rx="2" ry="2" />
<text  x="343.31" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="180.5" y="1765" width="0.2" height="15.0" fill="rgb(209,9,37)" rx="2" ry="2" />
<text  x="183.46" y="1775.5" ></text>
</g>
<g >
<title>rb_erase_cached (6 samples, 0.10%)</title><rect x="496.2" y="1957" width="1.2" height="15.0" fill="rgb(242,194,9)" rx="2" ry="2" />
<text  x="499.16" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.5" y="2021" width="0.2" height="15.0" fill="rgb(253,142,29)" rx="2" ry="2" />
<text  x="232.47" y="2031.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="417.3" y="1909" width="0.4" height="15.0" fill="rgb(245,93,27)" rx="2" ry="2" />
<text  x="420.34" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="825.1" y="1301" width="0.2" height="15.0" fill="rgb(224,12,11)" rx="2" ry="2" />
<text  x="828.08" y="1311.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="180.5" y="1749" width="0.2" height="15.0" fill="rgb(231,176,8)" rx="2" ry="2" />
<text  x="183.46" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="140.8" y="1925" width="0.4" height="15.0" fill="rgb(215,96,37)" rx="2" ry="2" />
<text  x="143.84" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1045" width="15.6" height="15.0" fill="rgb(243,219,48)" rx="2" ry="2" />
<text  x="106.43" y="1055.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="993.3" y="1973" width="0.2" height="15.0" fill="rgb(220,117,27)" rx="2" ry="2" />
<text  x="996.33" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="75.2" y="1845" width="0.2" height="15.0" fill="rgb(226,189,49)" rx="2" ry="2" />
<text  x="78.22" y="1855.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="565.2" y="1973" width="0.2" height="15.0" fill="rgb(208,62,33)" rx="2" ry="2" />
<text  x="568.19" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="622.4" y="1893" width="0.2" height="15.0" fill="rgb(243,173,22)" rx="2" ry="2" />
<text  x="625.41" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="979.9" y="1973" width="1.6" height="15.0" fill="rgb(233,172,41)" rx="2" ry="2" />
<text  x="982.93" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="929.1" y="1861" width="0.2" height="15.0" fill="rgb(253,29,7)" rx="2" ry="2" />
<text  x="932.11" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1130.8" y="1893" width="0.2" height="15.0" fill="rgb(213,134,40)" rx="2" ry="2" />
<text  x="1133.78" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="969.1" y="1765" width="0.2" height="15.0" fill="rgb(251,162,30)" rx="2" ry="2" />
<text  x="972.13" y="1775.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="416.5" y="1893" width="0.2" height="15.0" fill="rgb(230,18,26)" rx="2" ry="2" />
<text  x="419.54" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.08%)</title><rect x="1176.6" y="1989" width="1.0" height="15.0" fill="rgb(228,215,6)" rx="2" ry="2" />
<text  x="1179.60" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="821" width="15.4" height="15.0" fill="rgb(249,116,5)" rx="2" ry="2" />
<text  x="106.43" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="635.4" y="1989" width="0.2" height="15.0" fill="rgb(241,32,25)" rx="2" ry="2" />
<text  x="638.41" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="307.9" y="1653" width="0.4" height="15.0" fill="rgb(242,56,53)" rx="2" ry="2" />
<text  x="310.90" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="747.2" y="1685" width="0.2" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="750.25" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (332 samples, 5.63%)</title><rect x="437.9" y="2021" width="66.5" height="15.0" fill="rgb(250,108,38)" rx="2" ry="2" />
<text  x="440.95" y="2031.5" >entry_S..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="890.9" y="1925" width="0.2" height="15.0" fill="rgb(206,229,22)" rx="2" ry="2" />
<text  x="893.90" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="707.4" y="1605" width="0.2" height="15.0" fill="rgb(210,36,30)" rx="2" ry="2" />
<text  x="710.44" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="267.5" y="1733" width="0.2" height="15.0" fill="rgb(234,205,45)" rx="2" ry="2" />
<text  x="270.49" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="856.3" y="1925" width="0.2" height="15.0" fill="rgb(239,122,44)" rx="2" ry="2" />
<text  x="859.29" y="1935.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="258.7" y="1861" width="0.4" height="15.0" fill="rgb(210,181,52)" rx="2" ry="2" />
<text  x="261.68" y="1871.5" ></text>
</g>
<g >
<title>__fget (19 samples, 0.32%)</title><rect x="467.0" y="1941" width="3.8" height="15.0" fill="rgb(227,19,3)" rx="2" ry="2" />
<text  x="469.95" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (2 samples, 0.03%)</title><rect x="664.4" y="2037" width="0.4" height="15.0" fill="rgb(218,57,12)" rx="2" ry="2" />
<text  x="667.42" y="2047.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="483.2" y="1541" width="0.2" height="15.0" fill="rgb(217,146,3)" rx="2" ry="2" />
<text  x="486.16" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="664.2" y="2037" width="0.2" height="15.0" fill="rgb(246,60,12)" rx="2" ry="2" />
<text  x="667.22" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="590.4" y="1525" width="0.2" height="15.0" fill="rgb(208,101,37)" rx="2" ry="2" />
<text  x="593.40" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1081.8" y="1861" width="0.2" height="15.0" fill="rgb(247,26,8)" rx="2" ry="2" />
<text  x="1084.76" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="111.4" y="37" width="0.2" height="15.0" fill="rgb(212,160,24)" rx="2" ry="2" />
<text  x="114.43" y="47.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="969.3" y="1749" width="0.2" height="15.0" fill="rgb(210,20,2)" rx="2" ry="2" />
<text  x="972.33" y="1759.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="1131.2" y="2021" width="1.0" height="15.0" fill="rgb(227,79,23)" rx="2" ry="2" />
<text  x="1134.18" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (1 samples, 0.02%)</title><rect x="206.3" y="1941" width="0.2" height="15.0" fill="rgb(226,126,30)" rx="2" ry="2" />
<text  x="209.27" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="969.1" y="1701" width="0.2" height="15.0" fill="rgb(218,100,36)" rx="2" ry="2" />
<text  x="972.13" y="1711.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="724.4" y="1925" width="0.2" height="15.0" fill="rgb(211,105,1)" rx="2" ry="2" />
<text  x="727.44" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="591.4" y="1957" width="0.4" height="15.0" fill="rgb(226,162,15)" rx="2" ry="2" />
<text  x="594.40" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1103.0" y="1845" width="0.2" height="15.0" fill="rgb(242,21,54)" rx="2" ry="2" />
<text  x="1105.97" y="1855.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (37 samples, 0.63%)</title><rect x="697.2" y="1925" width="7.4" height="15.0" fill="rgb(214,155,54)" rx="2" ry="2" />
<text  x="700.23" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (12 samples, 0.20%)</title><rect x="552.0" y="1989" width="2.4" height="15.0" fill="rgb(210,84,0)" rx="2" ry="2" />
<text  x="554.98" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="61.8" y="1877" width="0.2" height="15.0" fill="rgb(236,187,8)" rx="2" ry="2" />
<text  x="64.82" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="259.5" y="1829" width="0.2" height="15.0" fill="rgb(223,223,6)" rx="2" ry="2" />
<text  x="262.48" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="454.0" y="1797" width="0.2" height="15.0" fill="rgb(245,32,1)" rx="2" ry="2" />
<text  x="456.95" y="1807.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="322.7" y="1717" width="0.2" height="15.0" fill="rgb(238,213,5)" rx="2" ry="2" />
<text  x="325.71" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1067.8" y="1845" width="0.4" height="15.0" fill="rgb(226,91,28)" rx="2" ry="2" />
<text  x="1070.76" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="914.9" y="1893" width="0.2" height="15.0" fill="rgb(231,194,50)" rx="2" ry="2" />
<text  x="917.91" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="560.4" y="1877" width="0.4" height="15.0" fill="rgb(249,38,23)" rx="2" ry="2" />
<text  x="563.39" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="890.9" y="1813" width="0.2" height="15.0" fill="rgb(222,45,30)" rx="2" ry="2" />
<text  x="893.90" y="1823.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="118.6" y="581" width="0.2" height="15.0" fill="rgb(240,180,44)" rx="2" ry="2" />
<text  x="121.64" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="76.4" y="1909" width="0.2" height="15.0" fill="rgb(250,26,33)" rx="2" ry="2" />
<text  x="79.42" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1110.0" y="1829" width="0.2" height="15.0" fill="rgb(245,197,18)" rx="2" ry="2" />
<text  x="1112.97" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="881.1" y="1845" width="0.2" height="15.0" fill="rgb(239,8,24)" rx="2" ry="2" />
<text  x="884.10" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="264.7" y="1637" width="0.2" height="15.0" fill="rgb(240,43,52)" rx="2" ry="2" />
<text  x="267.69" y="1647.5" ></text>
</g>
<g >
<title>kick_process (1 samples, 0.02%)</title><rect x="833.7" y="1797" width="0.2" height="15.0" fill="rgb(243,26,33)" rx="2" ry="2" />
<text  x="836.68" y="1807.5" ></text>
</g>
<g >
<title>security_file_free (14 samples, 0.24%)</title><rect x="756.3" y="1797" width="2.8" height="15.0" fill="rgb(214,196,7)" rx="2" ry="2" />
<text  x="759.25" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="825.1" y="1397" width="0.2" height="15.0" fill="rgb(241,63,21)" rx="2" ry="2" />
<text  x="828.08" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="897.3" y="1957" width="1.0" height="15.0" fill="rgb(248,34,24)" rx="2" ry="2" />
<text  x="900.30" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="114.4" y="37" width="0.2" height="15.0" fill="rgb(223,34,7)" rx="2" ry="2" />
<text  x="117.44" y="47.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="590.4" y="1509" width="0.2" height="15.0" fill="rgb(219,203,37)" rx="2" ry="2" />
<text  x="593.40" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="504.4" y="2005" width="0.8" height="15.0" fill="rgb(216,103,28)" rx="2" ry="2" />
<text  x="507.37" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="150.6" y="1717" width="0.2" height="15.0" fill="rgb(233,39,8)" rx="2" ry="2" />
<text  x="153.65" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="336.7" y="1957" width="0.2" height="15.0" fill="rgb(215,199,34)" rx="2" ry="2" />
<text  x="339.71" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="848.5" y="1781" width="0.2" height="15.0" fill="rgb(223,29,38)" rx="2" ry="2" />
<text  x="851.48" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (5 samples, 0.08%)</title><rect x="900.9" y="2037" width="1.0" height="15.0" fill="rgb(221,21,2)" rx="2" ry="2" />
<text  x="903.90" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="542.8" y="1973" width="0.2" height="15.0" fill="rgb(253,32,40)" rx="2" ry="2" />
<text  x="545.78" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="120.4" y="1397" width="0.2" height="15.0" fill="rgb(243,84,52)" rx="2" ry="2" />
<text  x="123.44" y="1407.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="169.7" y="1973" width="1.4" height="15.0" fill="rgb(223,176,24)" rx="2" ry="2" />
<text  x="172.65" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="697.6" y="1749" width="0.2" height="15.0" fill="rgb(236,164,5)" rx="2" ry="2" />
<text  x="700.63" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="590.4" y="1781" width="0.2" height="15.0" fill="rgb(230,136,34)" rx="2" ry="2" />
<text  x="593.40" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="428.5" y="1781" width="0.2" height="15.0" fill="rgb(221,17,10)" rx="2" ry="2" />
<text  x="431.54" y="1791.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="339.7" y="1685" width="0.2" height="15.0" fill="rgb(230,153,20)" rx="2" ry="2" />
<text  x="342.71" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="553.0" y="1925" width="0.2" height="15.0" fill="rgb(228,116,6)" rx="2" ry="2" />
<text  x="555.98" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="853" width="15.4" height="15.0" fill="rgb(238,51,9)" rx="2" ry="2" />
<text  x="106.43" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1149.8" y="1781" width="0.2" height="15.0" fill="rgb(244,40,51)" rx="2" ry="2" />
<text  x="1152.79" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="610.6" y="1637" width="0.2" height="15.0" fill="rgb(238,79,41)" rx="2" ry="2" />
<text  x="613.60" y="1647.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 0.17%)</title><rect x="195.5" y="2021" width="2.0" height="15.0" fill="rgb(236,69,35)" rx="2" ry="2" />
<text  x="198.46" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="949" width="15.4" height="15.0" fill="rgb(229,86,8)" rx="2" ry="2" />
<text  x="106.43" y="959.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="648.4" y="1541" width="0.2" height="15.0" fill="rgb(219,55,38)" rx="2" ry="2" />
<text  x="651.42" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="118.4" y="101" width="0.2" height="15.0" fill="rgb(223,186,27)" rx="2" ry="2" />
<text  x="121.44" y="111.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="623.4" y="1525" width="0.2" height="15.0" fill="rgb(247,100,24)" rx="2" ry="2" />
<text  x="626.41" y="1535.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="590.4" y="1589" width="0.2" height="15.0" fill="rgb(237,36,35)" rx="2" ry="2" />
<text  x="593.40" y="1599.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21 samples, 0.36%)</title><rect x="505.2" y="2021" width="4.2" height="15.0" fill="rgb(252,133,20)" rx="2" ry="2" />
<text  x="508.17" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="150.6" y="1685" width="0.2" height="15.0" fill="rgb(215,188,48)" rx="2" ry="2" />
<text  x="153.65" y="1695.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="470.6" y="1653" width="0.2" height="15.0" fill="rgb(205,16,39)" rx="2" ry="2" />
<text  x="473.56" y="1663.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="587.6" y="1877" width="0.2" height="15.0" fill="rgb(215,108,44)" rx="2" ry="2" />
<text  x="590.60" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="350.7" y="2021" width="0.4" height="15.0" fill="rgb(228,216,26)" rx="2" ry="2" />
<text  x="353.72" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="525.6" y="1813" width="0.2" height="15.0" fill="rgb(207,128,23)" rx="2" ry="2" />
<text  x="528.57" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="416.1" y="1813" width="0.2" height="15.0" fill="rgb(234,183,17)" rx="2" ry="2" />
<text  x="419.14" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="603.4" y="1845" width="0.2" height="15.0" fill="rgb(214,1,32)" rx="2" ry="2" />
<text  x="606.40" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1184.0" y="2005" width="0.2" height="15.0" fill="rgb(242,63,19)" rx="2" ry="2" />
<text  x="1187.00" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="336.7" y="1685" width="0.2" height="15.0" fill="rgb(227,53,34)" rx="2" ry="2" />
<text  x="339.71" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (48 samples, 0.81%)</title><rect x="1110.6" y="1733" width="9.6" height="15.0" fill="rgb(208,112,18)" rx="2" ry="2" />
<text  x="1113.57" y="1743.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="363.5" y="1653" width="0.2" height="15.0" fill="rgb(249,39,0)" rx="2" ry="2" />
<text  x="366.52" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="536.8" y="1925" width="0.6" height="15.0" fill="rgb(222,128,43)" rx="2" ry="2" />
<text  x="539.78" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (4 samples, 0.07%)</title><rect x="305.5" y="1685" width="0.8" height="15.0" fill="rgb(231,204,49)" rx="2" ry="2" />
<text  x="308.50" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="557.6" y="1941" width="0.4" height="15.0" fill="rgb(214,180,29)" rx="2" ry="2" />
<text  x="560.59" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb (107 samples, 1.81%)</title><rect x="1065.4" y="1925" width="21.4" height="15.0" fill="rgb(211,14,4)" rx="2" ry="2" />
<text  x="1068.36" y="1935.5" >_..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="858.5" y="1829" width="0.2" height="15.0" fill="rgb(247,18,37)" rx="2" ry="2" />
<text  x="861.49" y="1839.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="788.3" y="1381" width="0.2" height="15.0" fill="rgb(254,129,6)" rx="2" ry="2" />
<text  x="791.26" y="1391.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="416.1" y="1765" width="0.2" height="15.0" fill="rgb(251,142,7)" rx="2" ry="2" />
<text  x="419.14" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (8 samples, 0.14%)</title><rect x="979.9" y="1989" width="1.6" height="15.0" fill="rgb(212,10,42)" rx="2" ry="2" />
<text  x="982.93" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="118.4" y="117" width="0.2" height="15.0" fill="rgb(246,148,39)" rx="2" ry="2" />
<text  x="121.44" y="127.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="113.2" y="37" width="0.6" height="15.0" fill="rgb(205,86,6)" rx="2" ry="2" />
<text  x="116.23" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (40 samples, 0.68%)</title><rect x="924.7" y="1957" width="8.0" height="15.0" fill="rgb(223,97,32)" rx="2" ry="2" />
<text  x="927.71" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="585.4" y="1941" width="0.2" height="15.0" fill="rgb(219,29,54)" rx="2" ry="2" />
<text  x="588.40" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="897.9" y="1909" width="0.2" height="15.0" fill="rgb(226,222,50)" rx="2" ry="2" />
<text  x="900.90" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="697.6" y="1637" width="0.2" height="15.0" fill="rgb(237,41,30)" rx="2" ry="2" />
<text  x="700.63" y="1647.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="535.8" y="1877" width="0.2" height="15.0" fill="rgb(225,79,11)" rx="2" ry="2" />
<text  x="538.78" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="644.8" y="1941" width="0.2" height="15.0" fill="rgb(246,180,42)" rx="2" ry="2" />
<text  x="647.82" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="332.5" y="1701" width="0.2" height="15.0" fill="rgb(250,159,46)" rx="2" ry="2" />
<text  x="335.51" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (1 samples, 0.02%)</title><rect x="72.6" y="1957" width="0.2" height="15.0" fill="rgb(213,4,50)" rx="2" ry="2" />
<text  x="75.62" y="1967.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="860.5" y="1957" width="0.2" height="15.0" fill="rgb(206,74,28)" rx="2" ry="2" />
<text  x="863.49" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="328.5" y="1765" width="0.4" height="15.0" fill="rgb(216,110,4)" rx="2" ry="2" />
<text  x="331.51" y="1775.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (1 samples, 0.02%)</title><rect x="583.2" y="2005" width="0.2" height="15.0" fill="rgb(213,224,10)" rx="2" ry="2" />
<text  x="586.19" y="2015.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="470.6" y="1589" width="0.2" height="15.0" fill="rgb(226,115,36)" rx="2" ry="2" />
<text  x="473.56" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="984.7" y="1845" width="0.2" height="15.0" fill="rgb(253,188,41)" rx="2" ry="2" />
<text  x="987.73" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="292.3" y="1685" width="0.4" height="15.0" fill="rgb(251,144,36)" rx="2" ry="2" />
<text  x="295.30" y="1695.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="394.1" y="1845" width="0.2" height="15.0" fill="rgb(253,184,43)" rx="2" ry="2" />
<text  x="397.13" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="80.0" y="1765" width="0.2" height="15.0" fill="rgb(227,144,37)" rx="2" ry="2" />
<text  x="83.02" y="1775.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="841.1" y="1605" width="0.2" height="15.0" fill="rgb(218,50,6)" rx="2" ry="2" />
<text  x="844.08" y="1615.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (250 samples, 4.24%)</title><rect x="454.2" y="1989" width="50.0" height="15.0" fill="rgb(230,221,35)" rx="2" ry="2" />
<text  x="457.15" y="1999.5" >sys_e..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="683.8" y="1925" width="0.2" height="15.0" fill="rgb(221,79,17)" rx="2" ry="2" />
<text  x="686.83" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1103.0" y="1893" width="0.2" height="15.0" fill="rgb(248,79,7)" rx="2" ry="2" />
<text  x="1105.97" y="1903.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="403.3" y="1893" width="0.2" height="15.0" fill="rgb(231,110,14)" rx="2" ry="2" />
<text  x="406.33" y="1903.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.14%)</title><rect x="678.6" y="1845" width="1.6" height="15.0" fill="rgb(235,62,51)" rx="2" ry="2" />
<text  x="681.63" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="824.9" y="1669" width="0.4" height="15.0" fill="rgb(210,110,22)" rx="2" ry="2" />
<text  x="827.88" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="854.3" y="1829" width="0.4" height="15.0" fill="rgb(221,83,48)" rx="2" ry="2" />
<text  x="857.29" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="902.7" y="1989" width="1.8" height="15.0" fill="rgb(207,214,8)" rx="2" ry="2" />
<text  x="905.70" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1139.0" y="1797" width="0.2" height="15.0" fill="rgb(254,72,18)" rx="2" ry="2" />
<text  x="1141.98" y="1807.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (16 samples, 0.27%)</title><rect x="715.6" y="1989" width="3.2" height="15.0" fill="rgb(252,117,25)" rx="2" ry="2" />
<text  x="718.64" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (88 samples, 1.49%)</title><rect x="139.8" y="1957" width="17.6" height="15.0" fill="rgb(216,172,44)" rx="2" ry="2" />
<text  x="142.84" y="1967.5" ></text>
</g>
<g >
<title>ep_poll (80 samples, 1.36%)</title><rect x="509.8" y="1973" width="16.0" height="15.0" fill="rgb(231,134,45)" rx="2" ry="2" />
<text  x="512.77" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="560.6" y="1829" width="0.2" height="15.0" fill="rgb(218,55,37)" rx="2" ry="2" />
<text  x="563.59" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="954.3" y="1989" width="1.0" height="15.0" fill="rgb(242,10,52)" rx="2" ry="2" />
<text  x="957.32" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="400.1" y="1861" width="0.2" height="15.0" fill="rgb(233,113,4)" rx="2" ry="2" />
<text  x="403.13" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="389" width="15.2" height="15.0" fill="rgb(254,204,18)" rx="2" ry="2" />
<text  x="106.43" y="399.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="842.1" y="1877" width="0.8" height="15.0" fill="rgb(233,119,18)" rx="2" ry="2" />
<text  x="845.08" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="561.4" y="1973" width="0.4" height="15.0" fill="rgb(227,47,35)" rx="2" ry="2" />
<text  x="564.39" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="512.0" y="1877" width="0.2" height="15.0" fill="rgb(218,213,25)" rx="2" ry="2" />
<text  x="514.97" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="470.6" y="1621" width="0.2" height="15.0" fill="rgb(209,77,23)" rx="2" ry="2" />
<text  x="473.56" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="760.1" y="1685" width="0.2" height="15.0" fill="rgb(247,144,1)" rx="2" ry="2" />
<text  x="763.05" y="1695.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="626.2" y="1637" width="0.2" height="15.0" fill="rgb(214,24,22)" rx="2" ry="2" />
<text  x="629.21" y="1647.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="482.2" y="1877" width="0.2" height="15.0" fill="rgb(219,15,38)" rx="2" ry="2" />
<text  x="485.16" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="858.5" y="1893" width="0.2" height="15.0" fill="rgb(209,83,44)" rx="2" ry="2" />
<text  x="861.49" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="147.8" y="1845" width="0.2" height="15.0" fill="rgb(226,87,37)" rx="2" ry="2" />
<text  x="150.85" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="428.5" y="1909" width="0.2" height="15.0" fill="rgb(212,160,12)" rx="2" ry="2" />
<text  x="431.54" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="58.6" y="1941" width="0.8" height="15.0" fill="rgb(233,100,3)" rx="2" ry="2" />
<text  x="61.62" y="1951.5" ></text>
</g>
<g >
<title>filp_close (9 samples, 0.15%)</title><rect x="833.1" y="1829" width="1.8" height="15.0" fill="rgb(232,79,38)" rx="2" ry="2" />
<text  x="836.08" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="680.0" y="1781" width="0.2" height="15.0" fill="rgb(239,195,38)" rx="2" ry="2" />
<text  x="683.03" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.6" y="1925" width="0.2" height="15.0" fill="rgb(224,112,12)" rx="2" ry="2" />
<text  x="126.64" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="611.4" y="1877" width="0.2" height="15.0" fill="rgb(228,143,25)" rx="2" ry="2" />
<text  x="614.40" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="980.7" y="1717" width="0.2" height="15.0" fill="rgb(238,15,35)" rx="2" ry="2" />
<text  x="983.73" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="244.3" y="1845" width="0.2" height="15.0" fill="rgb(245,224,25)" rx="2" ry="2" />
<text  x="247.28" y="1855.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="896.9" y="2005" width="0.2" height="15.0" fill="rgb(253,20,25)" rx="2" ry="2" />
<text  x="899.90" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="961.7" y="2021" width="0.2" height="15.0" fill="rgb(231,179,22)" rx="2" ry="2" />
<text  x="964.72" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (4 samples, 0.07%)</title><rect x="131.8" y="1941" width="0.8" height="15.0" fill="rgb(247,30,23)" rx="2" ry="2" />
<text  x="134.84" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1110.6" y="1685" width="0.2" height="15.0" fill="rgb(250,165,17)" rx="2" ry="2" />
<text  x="1113.57" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1139.0" y="1941" width="0.2" height="15.0" fill="rgb(232,56,3)" rx="2" ry="2" />
<text  x="1141.98" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="150.4" y="1797" width="0.2" height="15.0" fill="rgb(224,12,0)" rx="2" ry="2" />
<text  x="153.45" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="11.2" y="2037" width="0.8" height="15.0" fill="rgb(215,139,26)" rx="2" ry="2" />
<text  x="14.20" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="914.9" y="1973" width="0.2" height="15.0" fill="rgb(243,137,50)" rx="2" ry="2" />
<text  x="917.91" y="1983.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="755.7" y="1797" width="0.2" height="15.0" fill="rgb(247,214,49)" rx="2" ry="2" />
<text  x="758.65" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1126.2" y="1781" width="0.2" height="15.0" fill="rgb(214,41,17)" rx="2" ry="2" />
<text  x="1129.18" y="1791.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="626.8" y="1973" width="0.2" height="15.0" fill="rgb(214,16,50)" rx="2" ry="2" />
<text  x="629.81" y="1983.5" ></text>
</g>
<g >
<title>sys_madvise (2 samples, 0.03%)</title><rect x="1137.4" y="2005" width="0.4" height="15.0" fill="rgb(215,135,17)" rx="2" ry="2" />
<text  x="1140.38" y="2015.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="680.0" y="1557" width="0.2" height="15.0" fill="rgb(241,187,5)" rx="2" ry="2" />
<text  x="683.03" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="980.1" y="1957" width="1.2" height="15.0" fill="rgb(250,64,30)" rx="2" ry="2" />
<text  x="983.13" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="787.9" y="1285" width="0.2" height="15.0" fill="rgb(238,184,36)" rx="2" ry="2" />
<text  x="790.86" y="1295.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="306.5" y="1733" width="0.2" height="15.0" fill="rgb(220,217,29)" rx="2" ry="2" />
<text  x="309.50" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (3 samples, 0.05%)</title><rect x="105.8" y="37" width="0.6" height="15.0" fill="rgb(218,170,48)" rx="2" ry="2" />
<text  x="108.83" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.14%)</title><rect x="172.1" y="1957" width="1.6" height="15.0" fill="rgb(224,150,14)" rx="2" ry="2" />
<text  x="175.05" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1183.8" y="2021" width="0.4" height="15.0" fill="rgb(239,16,42)" rx="2" ry="2" />
<text  x="1186.80" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1005.1" y="1717" width="0.2" height="15.0" fill="rgb(205,124,46)" rx="2" ry="2" />
<text  x="1008.14" y="1727.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="264.7" y="1477" width="0.2" height="15.0" fill="rgb(214,22,34)" rx="2" ry="2" />
<text  x="267.69" y="1487.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (3 samples, 0.05%)</title><rect x="975.9" y="1973" width="0.6" height="15.0" fill="rgb(213,141,20)" rx="2" ry="2" />
<text  x="978.93" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="430.3" y="1733" width="0.2" height="15.0" fill="rgb(222,153,14)" rx="2" ry="2" />
<text  x="433.34" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="287.3" y="1397" width="0.6" height="15.0" fill="rgb(219,30,9)" rx="2" ry="2" />
<text  x="290.29" y="1407.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="357.1" y="1541" width="0.2" height="15.0" fill="rgb(218,162,37)" rx="2" ry="2" />
<text  x="360.12" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="969.1" y="1845" width="0.4" height="15.0" fill="rgb(210,56,23)" rx="2" ry="2" />
<text  x="972.13" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="890.7" y="1973" width="0.2" height="15.0" fill="rgb(227,177,29)" rx="2" ry="2" />
<text  x="893.70" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (19 samples, 0.32%)</title><rect x="86.0" y="1973" width="3.8" height="15.0" fill="rgb(213,194,14)" rx="2" ry="2" />
<text  x="89.03" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="357.1" y="1717" width="0.2" height="15.0" fill="rgb(254,215,49)" rx="2" ry="2" />
<text  x="360.12" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="853.3" y="1733" width="0.2" height="15.0" fill="rgb(251,83,29)" rx="2" ry="2" />
<text  x="856.29" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (1 samples, 0.02%)</title><rect x="175.7" y="2005" width="0.2" height="15.0" fill="rgb(243,61,10)" rx="2" ry="2" />
<text  x="178.66" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="630.0" y="1909" width="0.2" height="15.0" fill="rgb(239,174,30)" rx="2" ry="2" />
<text  x="633.01" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="359.5" y="1941" width="0.2" height="15.0" fill="rgb(250,155,14)" rx="2" ry="2" />
<text  x="362.52" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (6 samples, 0.10%)</title><rect x="855.1" y="1925" width="1.2" height="15.0" fill="rgb(228,172,20)" rx="2" ry="2" />
<text  x="858.09" y="1935.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="483.6" y="1477" width="0.2" height="15.0" fill="rgb(211,24,24)" rx="2" ry="2" />
<text  x="486.56" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="359.5" y="1877" width="0.2" height="15.0" fill="rgb(221,189,41)" rx="2" ry="2" />
<text  x="362.52" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="518.8" y="1733" width="0.4" height="15.0" fill="rgb(241,213,11)" rx="2" ry="2" />
<text  x="521.77" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (415 samples, 7.04%)</title><rect x="101.4" y="2037" width="83.1" height="15.0" fill="rgb(253,146,53)" rx="2" ry="2" />
<text  x="104.43" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="556.6" y="1893" width="0.2" height="15.0" fill="rgb(236,73,24)" rx="2" ry="2" />
<text  x="559.59" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="339.5" y="1781" width="0.2" height="15.0" fill="rgb(231,177,11)" rx="2" ry="2" />
<text  x="342.51" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="603.4" y="1893" width="0.2" height="15.0" fill="rgb(249,168,12)" rx="2" ry="2" />
<text  x="606.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_recvmsg (343 samples, 5.82%)</title><rect x="1054.6" y="1941" width="68.6" height="15.0" fill="rgb(213,62,32)" rx="2" ry="2" />
<text  x="1057.55" y="1951.5" >tcp_rec..</text>
</g>
<g >
<title>__fget (8 samples, 0.14%)</title><rect x="609.2" y="1813" width="1.6" height="15.0" fill="rgb(205,79,4)" rx="2" ry="2" />
<text  x="612.20" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="249.1" y="1877" width="0.2" height="15.0" fill="rgb(236,28,20)" rx="2" ry="2" />
<text  x="252.08" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1145.4" y="1989" width="0.2" height="15.0" fill="rgb(239,71,36)" rx="2" ry="2" />
<text  x="1148.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="663.4" y="2005" width="0.8" height="15.0" fill="rgb(242,72,37)" rx="2" ry="2" />
<text  x="666.42" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="332.5" y="1797" width="0.2" height="15.0" fill="rgb(238,224,17)" rx="2" ry="2" />
<text  x="335.51" y="1807.5" ></text>
</g>
<g >
<title>kfree_call_rcu (2 samples, 0.03%)</title><rect x="749.3" y="1669" width="0.4" height="15.0" fill="rgb(216,88,0)" rx="2" ry="2" />
<text  x="752.25" y="1679.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (2 samples, 0.03%)</title><rect x="608.4" y="1845" width="0.4" height="15.0" fill="rgb(248,168,9)" rx="2" ry="2" />
<text  x="611.40" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="363.5" y="1733" width="0.2" height="15.0" fill="rgb(210,139,34)" rx="2" ry="2" />
<text  x="366.52" y="1743.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="696.8" y="1893" width="0.4" height="15.0" fill="rgb(207,160,45)" rx="2" ry="2" />
<text  x="699.83" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="216.5" y="1813" width="0.6" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="219.47" y="1823.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (10 samples, 0.17%)</title><rect x="161.9" y="2005" width="2.0" height="15.0" fill="rgb(214,179,43)" rx="2" ry="2" />
<text  x="164.85" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="890.1" y="1781" width="0.2" height="15.0" fill="rgb(248,109,23)" rx="2" ry="2" />
<text  x="893.10" y="1791.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (31 samples, 0.53%)</title><rect x="795.9" y="1541" width="6.2" height="15.0" fill="rgb(248,132,3)" rx="2" ry="2" />
<text  x="798.87" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="707.2" y="1957" width="0.6" height="15.0" fill="rgb(249,67,37)" rx="2" ry="2" />
<text  x="710.24" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="76.2" y="1925" width="0.2" height="15.0" fill="rgb(218,1,25)" rx="2" ry="2" />
<text  x="79.22" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="843.7" y="1829" width="0.2" height="15.0" fill="rgb(212,138,0)" rx="2" ry="2" />
<text  x="846.68" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="123.0" y="1893" width="0.2" height="15.0" fill="rgb(228,212,2)" rx="2" ry="2" />
<text  x="126.04" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="760.1" y="1717" width="0.2" height="15.0" fill="rgb(229,7,42)" rx="2" ry="2" />
<text  x="763.05" y="1727.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="546.4" y="1893" width="0.2" height="15.0" fill="rgb(253,69,53)" rx="2" ry="2" />
<text  x="549.38" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="339.7" y="1749" width="0.4" height="15.0" fill="rgb(233,13,48)" rx="2" ry="2" />
<text  x="342.71" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.9" y="1957" width="0.2" height="15.0" fill="rgb(213,184,1)" rx="2" ry="2" />
<text  x="160.85" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="278.7" y="1637" width="0.2" height="15.0" fill="rgb(221,178,54)" rx="2" ry="2" />
<text  x="281.69" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="118.2" y="117" width="0.2" height="15.0" fill="rgb(241,194,43)" rx="2" ry="2" />
<text  x="121.24" y="127.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (29 samples, 0.49%)</title><rect x="652.8" y="2037" width="5.8" height="15.0" fill="rgb(246,117,0)" rx="2" ry="2" />
<text  x="655.82" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="216.9" y="1765" width="0.2" height="15.0" fill="rgb(228,52,4)" rx="2" ry="2" />
<text  x="219.87" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="933.1" y="1957" width="0.8" height="15.0" fill="rgb(253,38,46)" rx="2" ry="2" />
<text  x="936.11" y="1967.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (11 samples, 0.19%)</title><rect x="1076.2" y="1813" width="2.2" height="15.0" fill="rgb(212,89,14)" rx="2" ry="2" />
<text  x="1079.16" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="889.1" y="1701" width="0.2" height="15.0" fill="rgb(210,185,39)" rx="2" ry="2" />
<text  x="892.10" y="1711.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="943.5" y="1973" width="0.2" height="15.0" fill="rgb(230,218,53)" rx="2" ry="2" />
<text  x="946.52" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="79.4" y="1717" width="0.2" height="15.0" fill="rgb(239,193,44)" rx="2" ry="2" />
<text  x="82.42" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="333.3" y="1909" width="0.2" height="15.0" fill="rgb(242,147,53)" rx="2" ry="2" />
<text  x="336.31" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="869.5" y="1989" width="0.2" height="15.0" fill="rgb(219,154,33)" rx="2" ry="2" />
<text  x="872.49" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (5 samples, 0.08%)</title><rect x="906.7" y="1973" width="1.0" height="15.0" fill="rgb(252,209,51)" rx="2" ry="2" />
<text  x="909.70" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="58.0" y="1877" width="0.2" height="15.0" fill="rgb(223,196,1)" rx="2" ry="2" />
<text  x="61.02" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="827.3" y="1685" width="0.2" height="15.0" fill="rgb(215,48,42)" rx="2" ry="2" />
<text  x="830.28" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="273.1" y="1717" width="0.2" height="15.0" fill="rgb(220,86,41)" rx="2" ry="2" />
<text  x="276.09" y="1727.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="626.2" y="1605" width="0.2" height="15.0" fill="rgb(228,121,41)" rx="2" ry="2" />
<text  x="629.21" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="880.7" y="1925" width="0.6" height="15.0" fill="rgb(229,172,43)" rx="2" ry="2" />
<text  x="883.70" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1029" width="15.6" height="15.0" fill="rgb(218,108,39)" rx="2" ry="2" />
<text  x="106.43" y="1039.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="454.0" y="1717" width="0.2" height="15.0" fill="rgb(227,222,27)" rx="2" ry="2" />
<text  x="456.95" y="1727.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="502.6" y="1973" width="0.2" height="15.0" fill="rgb(209,35,39)" rx="2" ry="2" />
<text  x="505.57" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="180.5" y="1925" width="0.2" height="15.0" fill="rgb(230,13,26)" rx="2" ry="2" />
<text  x="183.46" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (8 samples, 0.14%)</title><rect x="772.3" y="1685" width="1.6" height="15.0" fill="rgb(215,119,0)" rx="2" ry="2" />
<text  x="775.26" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="630.4" y="2021" width="0.2" height="15.0" fill="rgb(243,214,23)" rx="2" ry="2" />
<text  x="633.41" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="536.0" y="1941" width="0.4" height="15.0" fill="rgb(239,171,31)" rx="2" ry="2" />
<text  x="538.98" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="500.4" y="1957" width="0.2" height="15.0" fill="rgb(254,83,9)" rx="2" ry="2" />
<text  x="503.37" y="1967.5" ></text>
</g>
<g >
<title>inet_sendmsg (440 samples, 7.46%)</title><rect x="245.3" y="1925" width="88.0" height="15.0" fill="rgb(243,122,9)" rx="2" ry="2" />
<text  x="248.28" y="1935.5" >inet_sendmsg</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="953.5" y="1989" width="0.4" height="15.0" fill="rgb(249,220,42)" rx="2" ry="2" />
<text  x="956.52" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1098.4" y="1845" width="0.2" height="15.0" fill="rgb(246,107,11)" rx="2" ry="2" />
<text  x="1101.37" y="1855.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="610.6" y="1525" width="0.2" height="15.0" fill="rgb(249,104,12)" rx="2" ry="2" />
<text  x="613.60" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1073.8" y="1877" width="0.2" height="15.0" fill="rgb(231,189,35)" rx="2" ry="2" />
<text  x="1076.76" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1126.2" y="1669" width="0.2" height="15.0" fill="rgb(208,90,4)" rx="2" ry="2" />
<text  x="1129.18" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="259.5" y="1669" width="0.2" height="15.0" fill="rgb(214,175,47)" rx="2" ry="2" />
<text  x="262.48" y="1679.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="641.4" y="1845" width="0.2" height="15.0" fill="rgb(241,154,13)" rx="2" ry="2" />
<text  x="644.41" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="25.8" y="1989" width="1.8" height="15.0" fill="rgb(214,66,10)" rx="2" ry="2" />
<text  x="28.81" y="1999.5" ></text>
</g>
<g >
<title>__check_heap_object (6 samples, 0.10%)</title><rect x="254.7" y="1861" width="1.2" height="15.0" fill="rgb(239,202,46)" rx="2" ry="2" />
<text  x="257.68" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (6 samples, 0.10%)</title><rect x="1020.5" y="2037" width="1.2" height="15.0" fill="rgb(248,228,9)" rx="2" ry="2" />
<text  x="1023.54" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="89.8" y="1973" width="0.2" height="15.0" fill="rgb(219,215,22)" rx="2" ry="2" />
<text  x="92.83" y="1983.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="831.5" y="1813" width="0.2" height="15.0" fill="rgb(249,62,22)" rx="2" ry="2" />
<text  x="834.48" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (23 samples, 0.39%)</title><rect x="466.2" y="1957" width="4.6" height="15.0" fill="rgb(213,99,35)" rx="2" ry="2" />
<text  x="469.15" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="664.0" y="1813" width="0.2" height="15.0" fill="rgb(208,212,39)" rx="2" ry="2" />
<text  x="667.02" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="963.7" y="1973" width="0.2" height="15.0" fill="rgb(214,163,36)" rx="2" ry="2" />
<text  x="966.72" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="625.6" y="1893" width="0.2" height="15.0" fill="rgb(243,27,50)" rx="2" ry="2" />
<text  x="628.61" y="1903.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.02%)</title><rect x="587.6" y="1797" width="0.2" height="15.0" fill="rgb(209,95,15)" rx="2" ry="2" />
<text  x="590.60" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="589.4" y="1941" width="0.2" height="15.0" fill="rgb(246,38,27)" rx="2" ry="2" />
<text  x="592.40" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="935.3" y="1877" width="0.2" height="15.0" fill="rgb(205,137,16)" rx="2" ry="2" />
<text  x="938.31" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (1 samples, 0.02%)</title><rect x="626.6" y="1941" width="0.2" height="15.0" fill="rgb(205,143,15)" rx="2" ry="2" />
<text  x="629.61" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1139.0" y="1925" width="0.2" height="15.0" fill="rgb(219,20,37)" rx="2" ry="2" />
<text  x="1141.98" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (7 samples, 0.12%)</title><rect x="897.1" y="1973" width="1.4" height="15.0" fill="rgb(225,102,10)" rx="2" ry="2" />
<text  x="900.10" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="503.8" y="1893" width="0.4" height="15.0" fill="rgb(243,135,20)" rx="2" ry="2" />
<text  x="506.77" y="1903.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="921.7" y="1845" width="0.8" height="15.0" fill="rgb(249,48,47)" rx="2" ry="2" />
<text  x="924.71" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="80.0" y="1893" width="0.2" height="15.0" fill="rgb(227,116,24)" rx="2" ry="2" />
<text  x="83.02" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="583.0" y="1941" width="0.2" height="15.0" fill="rgb(227,154,41)" rx="2" ry="2" />
<text  x="585.99" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17 samples, 0.29%)</title><rect x="1160.8" y="1957" width="3.4" height="15.0" fill="rgb(235,113,30)" rx="2" ry="2" />
<text  x="1163.79" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="980.7" y="1653" width="0.2" height="15.0" fill="rgb(252,11,21)" rx="2" ry="2" />
<text  x="983.73" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="683.8" y="1941" width="0.2" height="15.0" fill="rgb(216,24,20)" rx="2" ry="2" />
<text  x="686.83" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="71.4" y="1749" width="0.2" height="15.0" fill="rgb(208,71,26)" rx="2" ry="2" />
<text  x="74.42" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="611.4" y="1893" width="0.2" height="15.0" fill="rgb(248,228,47)" rx="2" ry="2" />
<text  x="614.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="259.5" y="1621" width="0.2" height="15.0" fill="rgb(235,201,24)" rx="2" ry="2" />
<text  x="262.48" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="108.4" y="37" width="0.4" height="15.0" fill="rgb(233,114,5)" rx="2" ry="2" />
<text  x="111.43" y="47.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.02%)</title><rect x="603.4" y="1557" width="0.2" height="15.0" fill="rgb(251,220,8)" rx="2" ry="2" />
<text  x="606.40" y="1567.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.8" y="1541" width="0.2" height="15.0" fill="rgb(232,203,9)" rx="2" ry="2" />
<text  x="122.84" y="1551.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="121.8" y="1813" width="0.2" height="15.0" fill="rgb(221,4,53)" rx="2" ry="2" />
<text  x="124.84" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (4 samples, 0.07%)</title><rect x="629.8" y="2037" width="0.8" height="15.0" fill="rgb(227,8,51)" rx="2" ry="2" />
<text  x="632.81" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="339.7" y="1781" width="0.4" height="15.0" fill="rgb(241,64,45)" rx="2" ry="2" />
<text  x="342.71" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="981.9" y="1989" width="0.2" height="15.0" fill="rgb(227,135,8)" rx="2" ry="2" />
<text  x="984.93" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="890.1" y="1861" width="0.2" height="15.0" fill="rgb(248,177,39)" rx="2" ry="2" />
<text  x="893.10" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1149.8" y="1877" width="0.2" height="15.0" fill="rgb(235,85,48)" rx="2" ry="2" />
<text  x="1152.79" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1188.8" y="1861" width="0.4" height="15.0" fill="rgb(240,218,7)" rx="2" ry="2" />
<text  x="1191.80" y="1871.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="1091.4" y="1605" width="0.2" height="15.0" fill="rgb(225,191,2)" rx="2" ry="2" />
<text  x="1094.37" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1126.2" y="1941" width="0.2" height="15.0" fill="rgb(224,44,32)" rx="2" ry="2" />
<text  x="1129.18" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.03%)</title><rect x="117.0" y="69" width="0.4" height="15.0" fill="rgb(205,129,3)" rx="2" ry="2" />
<text  x="120.04" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="504.4" y="2021" width="0.8" height="15.0" fill="rgb(210,42,47)" rx="2" ry="2" />
<text  x="507.37" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="70.2" y="1861" width="0.4" height="15.0" fill="rgb(228,47,2)" rx="2" ry="2" />
<text  x="73.22" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="45.0" y="1909" width="0.2" height="15.0" fill="rgb(207,67,50)" rx="2" ry="2" />
<text  x="48.01" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="964.9" y="1989" width="0.2" height="15.0" fill="rgb(231,17,35)" rx="2" ry="2" />
<text  x="967.92" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="103.0" y="1573" width="17.0" height="15.0" fill="rgb(242,180,47)" rx="2" ry="2" />
<text  x="106.03" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="634.4" y="1973" width="0.8" height="15.0" fill="rgb(236,184,18)" rx="2" ry="2" />
<text  x="637.41" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="34.6" y="1989" width="0.2" height="15.0" fill="rgb(225,52,29)" rx="2" ry="2" />
<text  x="37.61" y="1999.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="964.1" y="2021" width="0.2" height="15.0" fill="rgb(208,161,33)" rx="2" ry="2" />
<text  x="967.12" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="956.5" y="1957" width="3.8" height="15.0" fill="rgb(248,179,54)" rx="2" ry="2" />
<text  x="959.52" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="1183.2" y="2005" width="0.6" height="15.0" fill="rgb(211,100,34)" rx="2" ry="2" />
<text  x="1186.20" y="2015.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="223.1" y="1669" width="0.2" height="15.0" fill="rgb(254,101,51)" rx="2" ry="2" />
<text  x="226.07" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="117.6" y="53" width="0.2" height="15.0" fill="rgb(252,139,7)" rx="2" ry="2" />
<text  x="120.64" y="63.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="120.4" y="1157" width="0.2" height="15.0" fill="rgb(224,196,19)" rx="2" ry="2" />
<text  x="123.44" y="1167.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="883.5" y="1893" width="0.4" height="15.0" fill="rgb(231,199,26)" rx="2" ry="2" />
<text  x="886.50" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="118.6" y="245" width="0.2" height="15.0" fill="rgb(210,131,8)" rx="2" ry="2" />
<text  x="121.64" y="255.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="1110.6" y="1493" width="0.2" height="15.0" fill="rgb(240,219,47)" rx="2" ry="2" />
<text  x="1113.57" y="1503.5" ></text>
</g>
<g >
<title>secure_tcp_seq (1 samples, 0.02%)</title><rect x="914.9" y="1653" width="0.2" height="15.0" fill="rgb(222,120,29)" rx="2" ry="2" />
<text  x="917.91" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="244.5" y="1749" width="0.2" height="15.0" fill="rgb(248,59,43)" rx="2" ry="2" />
<text  x="247.48" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="259.5" y="1717" width="0.2" height="15.0" fill="rgb(213,87,38)" rx="2" ry="2" />
<text  x="262.48" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (8 samples, 0.14%)</title><rect x="106.4" y="37" width="1.6" height="15.0" fill="rgb(247,206,29)" rx="2" ry="2" />
<text  x="109.43" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="256.5" y="1733" width="0.2" height="15.0" fill="rgb(217,91,48)" rx="2" ry="2" />
<text  x="259.48" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="834.1" y="1621" width="0.2" height="15.0" fill="rgb(228,165,12)" rx="2" ry="2" />
<text  x="837.08" y="1631.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="652.0" y="1957" width="0.2" height="15.0" fill="rgb(210,152,48)" rx="2" ry="2" />
<text  x="655.02" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1125.6" y="1749" width="0.2" height="15.0" fill="rgb(220,21,40)" rx="2" ry="2" />
<text  x="1128.58" y="1759.5" ></text>
</g>
<g >
<title>call_rcu_sched (4 samples, 0.07%)</title><rect x="738.8" y="1797" width="0.8" height="15.0" fill="rgb(242,195,28)" rx="2" ry="2" />
<text  x="741.85" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="264.7" y="1605" width="0.2" height="15.0" fill="rgb(225,210,29)" rx="2" ry="2" />
<text  x="267.69" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="523.0" y="1605" width="0.2" height="15.0" fill="rgb(232,108,33)" rx="2" ry="2" />
<text  x="525.97" y="1615.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="656.6" y="1989" width="0.2" height="15.0" fill="rgb(206,112,29)" rx="2" ry="2" />
<text  x="659.62" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="773" width="15.4" height="15.0" fill="rgb(246,85,45)" rx="2" ry="2" />
<text  x="106.43" y="783.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (80 samples, 1.36%)</title><rect x="668.0" y="1989" width="16.0" height="15.0" fill="rgb(242,26,12)" rx="2" ry="2" />
<text  x="671.02" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="259.5" y="1685" width="0.2" height="15.0" fill="rgb(213,131,2)" rx="2" ry="2" />
<text  x="262.48" y="1695.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="384.3" y="1893" width="0.4" height="15.0" fill="rgb(225,165,42)" rx="2" ry="2" />
<text  x="387.33" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::(anonymous namespace)::findFirstNonDigit (1 samples, 0.02%)</title><rect x="1001.7" y="2021" width="0.2" height="15.0" fill="rgb(253,95,11)" rx="2" ry="2" />
<text  x="1004.74" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="359.5" y="1797" width="0.2" height="15.0" fill="rgb(247,213,8)" rx="2" ry="2" />
<text  x="362.52" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (2 samples, 0.03%)</title><rect x="912.7" y="2037" width="0.4" height="15.0" fill="rgb(208,19,9)" rx="2" ry="2" />
<text  x="915.71" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="216.9" y="1781" width="0.2" height="15.0" fill="rgb(242,101,6)" rx="2" ry="2" />
<text  x="219.87" y="1791.5" ></text>
</g>
<g >
<title>accept4 (1 samples, 0.02%)</title><rect x="21.0" y="2005" width="0.2" height="15.0" fill="rgb(214,62,16)" rx="2" ry="2" />
<text  x="24.00" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="66.6" y="1685" width="0.2" height="15.0" fill="rgb(207,182,11)" rx="2" ry="2" />
<text  x="69.62" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="518.8" y="1813" width="0.4" height="15.0" fill="rgb(252,221,6)" rx="2" ry="2" />
<text  x="521.77" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1139.0" y="1877" width="0.2" height="15.0" fill="rgb(223,131,37)" rx="2" ry="2" />
<text  x="1141.98" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="143.6" y="1893" width="0.2" height="15.0" fill="rgb(241,226,33)" rx="2" ry="2" />
<text  x="146.65" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="712.4" y="1861" width="0.2" height="15.0" fill="rgb(212,68,7)" rx="2" ry="2" />
<text  x="715.44" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="704.4" y="1733" width="0.2" height="15.0" fill="rgb(208,48,39)" rx="2" ry="2" />
<text  x="707.44" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="483.6" y="1861" width="0.2" height="15.0" fill="rgb(237,32,37)" rx="2" ry="2" />
<text  x="486.56" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="51.4" y="1861" width="0.2" height="15.0" fill="rgb(213,195,1)" rx="2" ry="2" />
<text  x="54.41" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (13 samples, 0.22%)</title><rect x="1168.6" y="2053" width="2.6" height="15.0" fill="rgb(254,6,8)" rx="2" ry="2" />
<text  x="1171.59" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="120.4" y="1429" width="0.2" height="15.0" fill="rgb(221,57,10)" rx="2" ry="2" />
<text  x="123.44" y="1439.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="545.2" y="1957" width="0.4" height="15.0" fill="rgb(247,60,19)" rx="2" ry="2" />
<text  x="548.18" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="578.6" y="1813" width="0.2" height="15.0" fill="rgb(246,101,18)" rx="2" ry="2" />
<text  x="581.59" y="1823.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="564.6" y="1941" width="0.2" height="15.0" fill="rgb(208,91,22)" rx="2" ry="2" />
<text  x="567.59" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="66.6" y="1765" width="0.2" height="15.0" fill="rgb(234,20,3)" rx="2" ry="2" />
<text  x="69.62" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::dataBufferDestructor&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="981.7" y="1989" width="0.2" height="15.0" fill="rgb(233,61,14)" rx="2" ry="2" />
<text  x="984.73" y="1999.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="969.1" y="1717" width="0.2" height="15.0" fill="rgb(229,157,10)" rx="2" ry="2" />
<text  x="972.13" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="626.2" y="1877" width="0.2" height="15.0" fill="rgb(240,6,6)" rx="2" ry="2" />
<text  x="629.21" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="97.8" y="1717" width="0.2" height="15.0" fill="rgb(248,11,3)" rx="2" ry="2" />
<text  x="100.83" y="1727.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.32%)</title><rect x="835.9" y="1893" width="3.8" height="15.0" fill="rgb(225,5,31)" rx="2" ry="2" />
<text  x="838.88" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="719.4" y="1909" width="0.2" height="15.0" fill="rgb(232,132,24)" rx="2" ry="2" />
<text  x="722.44" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="809.7" y="1557" width="0.4" height="15.0" fill="rgb(221,211,5)" rx="2" ry="2" />
<text  x="812.67" y="1567.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1131.4" y="1973" width="0.8" height="15.0" fill="rgb(218,25,32)" rx="2" ry="2" />
<text  x="1134.38" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="541.6" y="1989" width="0.2" height="15.0" fill="rgb(229,138,15)" rx="2" ry="2" />
<text  x="544.58" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="752.5" y="1381" width="0.2" height="15.0" fill="rgb(217,182,47)" rx="2" ry="2" />
<text  x="755.45" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="118.0" y="37" width="0.2" height="15.0" fill="rgb(228,44,33)" rx="2" ry="2" />
<text  x="121.04" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="79.6" y="1925" width="0.6" height="15.0" fill="rgb(249,154,12)" rx="2" ry="2" />
<text  x="82.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="332.5" y="1717" width="0.2" height="15.0" fill="rgb(218,2,3)" rx="2" ry="2" />
<text  x="335.51" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="899.3" y="2005" width="0.8" height="15.0" fill="rgb(217,8,5)" rx="2" ry="2" />
<text  x="902.30" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="52.6" y="1925" width="1.0" height="15.0" fill="rgb(252,75,53)" rx="2" ry="2" />
<text  x="55.61" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="863.7" y="1973" width="0.2" height="15.0" fill="rgb(206,202,8)" rx="2" ry="2" />
<text  x="866.69" y="1983.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="889.3" y="1925" width="1.0" height="15.0" fill="rgb(227,42,4)" rx="2" ry="2" />
<text  x="892.30" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1091.4" y="1589" width="0.2" height="15.0" fill="rgb(222,57,30)" rx="2" ry="2" />
<text  x="1094.37" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="860.1" y="1797" width="0.2" height="15.0" fill="rgb(217,12,46)" rx="2" ry="2" />
<text  x="863.09" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="223.3" y="1957" width="0.4" height="15.0" fill="rgb(207,178,11)" rx="2" ry="2" />
<text  x="226.27" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="856.3" y="1861" width="0.2" height="15.0" fill="rgb(206,197,42)" rx="2" ry="2" />
<text  x="859.29" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="80.0" y="1829" width="0.2" height="15.0" fill="rgb(223,208,1)" rx="2" ry="2" />
<text  x="83.02" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="739.4" y="1669" width="0.2" height="15.0" fill="rgb(247,189,24)" rx="2" ry="2" />
<text  x="742.45" y="1679.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="969.1" y="1653" width="0.2" height="15.0" fill="rgb(226,198,8)" rx="2" ry="2" />
<text  x="972.13" y="1663.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="540.4" y="1973" width="0.2" height="15.0" fill="rgb(254,180,17)" rx="2" ry="2" />
<text  x="543.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.5" y="1989" width="0.2" height="15.0" fill="rgb(240,23,35)" rx="2" ry="2" />
<text  x="911.50" y="1999.5" ></text>
</g>
<g >
<title>dput.part.26 (76 samples, 1.29%)</title><rect x="740.0" y="1781" width="15.3" height="15.0" fill="rgb(220,25,9)" rx="2" ry="2" />
<text  x="743.05" y="1791.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="163.3" y="1989" width="0.2" height="15.0" fill="rgb(226,144,22)" rx="2" ry="2" />
<text  x="166.25" y="1999.5" ></text>
</g>
<g >
<title>skb_release_head_state (32 samples, 0.54%)</title><rect x="1078.4" y="1893" width="6.4" height="15.0" fill="rgb(210,54,19)" rx="2" ry="2" />
<text  x="1081.36" y="1903.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="103.4" y="37" width="0.4" height="15.0" fill="rgb(213,25,49)" rx="2" ry="2" />
<text  x="106.43" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="180.5" y="1909" width="0.2" height="15.0" fill="rgb(241,152,15)" rx="2" ry="2" />
<text  x="183.46" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="71.4" y="1893" width="0.2" height="15.0" fill="rgb(245,17,51)" rx="2" ry="2" />
<text  x="74.42" y="1903.5" ></text>
</g>
<g >
<title>ipv4_mtu (9 samples, 0.15%)</title><rect x="327.1" y="1861" width="1.8" height="15.0" fill="rgb(251,209,41)" rx="2" ry="2" />
<text  x="330.11" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="504.4" y="1989" width="0.8" height="15.0" fill="rgb(254,136,32)" rx="2" ry="2" />
<text  x="507.37" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="430.1" y="1861" width="0.4" height="15.0" fill="rgb(221,81,13)" rx="2" ry="2" />
<text  x="433.14" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="273.1" y="1701" width="0.2" height="15.0" fill="rgb(217,23,3)" rx="2" ry="2" />
<text  x="276.09" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="848.7" y="1893" width="0.4" height="15.0" fill="rgb(208,102,11)" rx="2" ry="2" />
<text  x="851.68" y="1903.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="847.7" y="1781" width="0.2" height="15.0" fill="rgb(229,180,29)" rx="2" ry="2" />
<text  x="850.68" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="834.1" y="1701" width="0.2" height="15.0" fill="rgb(206,190,1)" rx="2" ry="2" />
<text  x="837.08" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="933.7" y="1925" width="0.2" height="15.0" fill="rgb(221,58,12)" rx="2" ry="2" />
<text  x="936.71" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1016.1" y="1973" width="0.2" height="15.0" fill="rgb(229,2,13)" rx="2" ry="2" />
<text  x="1019.14" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (14 samples, 0.24%)</title><rect x="68.8" y="1957" width="2.8" height="15.0" fill="rgb(229,195,20)" rx="2" ry="2" />
<text  x="71.82" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="649.2" y="1925" width="0.2" height="15.0" fill="rgb(211,82,49)" rx="2" ry="2" />
<text  x="652.22" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="879.5" y="1701" width="0.2" height="15.0" fill="rgb(231,67,3)" rx="2" ry="2" />
<text  x="882.49" y="1711.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="359.5" y="1957" width="0.2" height="15.0" fill="rgb(252,131,47)" rx="2" ry="2" />
<text  x="362.52" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="84.8" y="1973" width="0.2" height="15.0" fill="rgb(247,109,48)" rx="2" ry="2" />
<text  x="87.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="264.7" y="1589" width="0.2" height="15.0" fill="rgb(230,145,24)" rx="2" ry="2" />
<text  x="267.69" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="304.9" y="1637" width="0.2" height="15.0" fill="rgb(245,84,54)" rx="2" ry="2" />
<text  x="307.90" y="1647.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1189.0" y="1589" width="0.2" height="15.0" fill="rgb(206,4,25)" rx="2" ry="2" />
<text  x="1192.00" y="1599.5" ></text>
</g>
<g >
<title>sys_accept4 (361 samples, 6.12%)</title><rect x="357.5" y="1989" width="72.2" height="15.0" fill="rgb(217,213,32)" rx="2" ry="2" />
<text  x="360.52" y="1999.5" >sys_acce..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="946.9" y="2005" width="0.4" height="15.0" fill="rgb(233,215,18)" rx="2" ry="2" />
<text  x="949.92" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="623.4" y="1813" width="0.2" height="15.0" fill="rgb(242,207,46)" rx="2" ry="2" />
<text  x="626.41" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="71.4" y="1669" width="0.2" height="15.0" fill="rgb(231,208,27)" rx="2" ry="2" />
<text  x="74.42" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="267.1" y="1701" width="0.2" height="15.0" fill="rgb(207,212,39)" rx="2" ry="2" />
<text  x="270.09" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="336.7" y="1701" width="0.2" height="15.0" fill="rgb(212,147,50)" rx="2" ry="2" />
<text  x="339.71" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="578.6" y="1893" width="0.2" height="15.0" fill="rgb(228,190,49)" rx="2" ry="2" />
<text  x="581.59" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="603.4" y="1813" width="0.2" height="15.0" fill="rgb(220,35,46)" rx="2" ry="2" />
<text  x="606.40" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="1091.2" y="1861" width="0.6" height="15.0" fill="rgb(243,43,43)" rx="2" ry="2" />
<text  x="1094.17" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="428.5" y="1845" width="0.2" height="15.0" fill="rgb(237,82,45)" rx="2" ry="2" />
<text  x="431.54" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="328.5" y="1701" width="0.4" height="15.0" fill="rgb(215,115,31)" rx="2" ry="2" />
<text  x="331.51" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="974.3" y="1925" width="0.2" height="15.0" fill="rgb(216,38,34)" rx="2" ry="2" />
<text  x="977.33" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="984.7" y="1733" width="0.2" height="15.0" fill="rgb(250,183,13)" rx="2" ry="2" />
<text  x="987.73" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="932.3" y="1909" width="0.2" height="15.0" fill="rgb(252,147,51)" rx="2" ry="2" />
<text  x="935.31" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="500.8" y="1957" width="0.2" height="15.0" fill="rgb(230,143,30)" rx="2" ry="2" />
<text  x="503.77" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="1020.9" y="2005" width="0.8" height="15.0" fill="rgb(208,70,6)" rx="2" ry="2" />
<text  x="1023.94" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="972.3" y="1941" width="0.2" height="15.0" fill="rgb(225,150,23)" rx="2" ry="2" />
<text  x="975.33" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="169.5" y="1989" width="1.8" height="15.0" fill="rgb(251,173,38)" rx="2" ry="2" />
<text  x="172.45" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1090.6" y="1893" width="0.4" height="15.0" fill="rgb(218,166,14)" rx="2" ry="2" />
<text  x="1093.57" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="160.9" y="2021" width="0.2" height="15.0" fill="rgb(253,107,14)" rx="2" ry="2" />
<text  x="163.85" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="664.0" y="1717" width="0.2" height="15.0" fill="rgb(237,123,11)" rx="2" ry="2" />
<text  x="667.02" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (33 samples, 0.56%)</title><rect x="992.9" y="2005" width="6.6" height="15.0" fill="rgb(235,177,43)" rx="2" ry="2" />
<text  x="995.93" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="648.2" y="1925" width="0.4" height="15.0" fill="rgb(251,90,45)" rx="2" ry="2" />
<text  x="651.22" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="533.4" y="1957" width="0.2" height="15.0" fill="rgb(219,131,17)" rx="2" ry="2" />
<text  x="536.38" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="12.0" y="2037" width="0.4" height="15.0" fill="rgb(226,226,15)" rx="2" ry="2" />
<text  x="15.00" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="118.6" y="549" width="0.2" height="15.0" fill="rgb(207,17,52)" rx="2" ry="2" />
<text  x="121.64" y="559.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="879.5" y="1829" width="0.2" height="15.0" fill="rgb(248,155,39)" rx="2" ry="2" />
<text  x="882.49" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (30 samples, 0.51%)</title><rect x="925.9" y="1925" width="6.0" height="15.0" fill="rgb(222,188,52)" rx="2" ry="2" />
<text  x="928.91" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="615.6" y="1989" width="0.6" height="15.0" fill="rgb(237,46,6)" rx="2" ry="2" />
<text  x="618.61" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="157.9" y="1813" width="0.2" height="15.0" fill="rgb(212,0,49)" rx="2" ry="2" />
<text  x="160.85" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="707.6" y="1781" width="0.2" height="15.0" fill="rgb(232,218,43)" rx="2" ry="2" />
<text  x="710.64" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="223.1" y="1893" width="0.2" height="15.0" fill="rgb(217,209,35)" rx="2" ry="2" />
<text  x="226.07" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="1180.0" y="2053" width="0.4" height="15.0" fill="rgb(254,73,28)" rx="2" ry="2" />
<text  x="1183.00" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="153.2" y="1877" width="0.4" height="15.0" fill="rgb(245,81,21)" rx="2" ry="2" />
<text  x="156.25" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1188.8" y="1957" width="0.4" height="15.0" fill="rgb(236,51,46)" rx="2" ry="2" />
<text  x="1191.80" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="969.1" y="1877" width="0.4" height="15.0" fill="rgb(225,178,11)" rx="2" ry="2" />
<text  x="972.13" y="1887.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="933.7" y="1541" width="0.2" height="15.0" fill="rgb(241,164,1)" rx="2" ry="2" />
<text  x="936.71" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="611.4" y="1717" width="0.2" height="15.0" fill="rgb(239,78,15)" rx="2" ry="2" />
<text  x="614.40" y="1727.5" ></text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.02%)</title><rect x="752.7" y="1685" width="0.2" height="15.0" fill="rgb(227,202,45)" rx="2" ry="2" />
<text  x="755.65" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="565.6" y="1925" width="0.2" height="15.0" fill="rgb(245,78,19)" rx="2" ry="2" />
<text  x="568.59" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="503.8" y="1829" width="0.4" height="15.0" fill="rgb(213,54,30)" rx="2" ry="2" />
<text  x="506.77" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="267.5" y="1621" width="0.2" height="15.0" fill="rgb(252,70,8)" rx="2" ry="2" />
<text  x="270.49" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="212.9" y="1893" width="0.2" height="15.0" fill="rgb(236,156,6)" rx="2" ry="2" />
<text  x="215.87" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.0" y="197" width="0.2" height="15.0" fill="rgb(222,148,20)" rx="2" ry="2" />
<text  x="121.04" y="207.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="931.9" y="1909" width="0.2" height="15.0" fill="rgb(226,160,34)" rx="2" ry="2" />
<text  x="934.91" y="1919.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.02%)</title><rect x="535.8" y="1765" width="0.2" height="15.0" fill="rgb(245,154,33)" rx="2" ry="2" />
<text  x="538.78" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="224.3" y="2037" width="0.2" height="15.0" fill="rgb(208,178,9)" rx="2" ry="2" />
<text  x="227.27" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="856.3" y="1893" width="0.2" height="15.0" fill="rgb(206,193,30)" rx="2" ry="2" />
<text  x="859.29" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (71 samples, 1.20%)</title><rect x="669.4" y="1941" width="14.2" height="15.0" fill="rgb(226,120,44)" rx="2" ry="2" />
<text  x="672.42" y="1951.5" ></text>
</g>
<g >
<title>ip_output (124 samples, 2.10%)</title><rect x="282.1" y="1781" width="24.8" height="15.0" fill="rgb(206,120,51)" rx="2" ry="2" />
<text  x="285.09" y="1791.5" >i..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="62.2" y="1861" width="0.2" height="15.0" fill="rgb(219,1,54)" rx="2" ry="2" />
<text  x="65.22" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="321.5" y="1477" width="0.2" height="15.0" fill="rgb(243,195,40)" rx="2" ry="2" />
<text  x="324.51" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="647.4" y="1877" width="0.2" height="15.0" fill="rgb(253,127,17)" rx="2" ry="2" />
<text  x="650.42" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="384.3" y="1877" width="0.4" height="15.0" fill="rgb(226,39,31)" rx="2" ry="2" />
<text  x="387.33" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="162.5" y="1957" width="0.2" height="15.0" fill="rgb(235,59,12)" rx="2" ry="2" />
<text  x="165.45" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="707.4" y="1541" width="0.2" height="15.0" fill="rgb(226,118,24)" rx="2" ry="2" />
<text  x="710.44" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1126.2" y="1893" width="0.2" height="15.0" fill="rgb(253,103,46)" rx="2" ry="2" />
<text  x="1129.18" y="1903.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="845.5" y="1909" width="0.2" height="15.0" fill="rgb(254,98,27)" rx="2" ry="2" />
<text  x="848.48" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="416.1" y="1701" width="0.2" height="15.0" fill="rgb(207,3,42)" rx="2" ry="2" />
<text  x="419.14" y="1711.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="78.2" y="1861" width="0.8" height="15.0" fill="rgb(218,2,47)" rx="2" ry="2" />
<text  x="81.22" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="551.8" y="1989" width="0.2" height="15.0" fill="rgb(246,8,9)" rx="2" ry="2" />
<text  x="554.78" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (39 samples, 0.66%)</title><rect x="1172.0" y="2037" width="7.8" height="15.0" fill="rgb(232,117,4)" rx="2" ry="2" />
<text  x="1174.99" y="2047.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (4 samples, 0.07%)</title><rect x="362.7" y="1941" width="0.8" height="15.0" fill="rgb(253,66,6)" rx="2" ry="2" />
<text  x="365.72" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="981.7" y="1845" width="0.2" height="15.0" fill="rgb(238,164,23)" rx="2" ry="2" />
<text  x="984.73" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="603.4" y="1653" width="0.2" height="15.0" fill="rgb(246,142,52)" rx="2" ry="2" />
<text  x="606.40" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1541" width="16.8" height="15.0" fill="rgb(208,220,9)" rx="2" ry="2" />
<text  x="106.03" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="503.6" y="1957" width="0.6" height="15.0" fill="rgb(234,36,38)" rx="2" ry="2" />
<text  x="506.57" y="1967.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="58.2" y="1893" width="0.2" height="15.0" fill="rgb(224,124,11)" rx="2" ry="2" />
<text  x="61.22" y="1903.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="308.1" y="1525" width="0.2" height="15.0" fill="rgb(218,39,14)" rx="2" ry="2" />
<text  x="311.10" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="285.7" y="1621" width="0.4" height="15.0" fill="rgb(235,139,51)" rx="2" ry="2" />
<text  x="288.69" y="1631.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="10.2" y="1957" width="0.8" height="15.0" fill="rgb(243,82,32)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="307.7" y="1733" width="0.2" height="15.0" fill="rgb(243,81,43)" rx="2" ry="2" />
<text  x="310.70" y="1743.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="860.1" y="1621" width="0.2" height="15.0" fill="rgb(242,94,3)" rx="2" ry="2" />
<text  x="863.09" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="223.1" y="1941" width="0.2" height="15.0" fill="rgb(238,182,9)" rx="2" ry="2" />
<text  x="226.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (13 samples, 0.22%)</title><rect x="523.2" y="1893" width="2.6" height="15.0" fill="rgb(232,45,10)" rx="2" ry="2" />
<text  x="526.17" y="1903.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="287.7" y="1365" width="0.2" height="15.0" fill="rgb(250,197,24)" rx="2" ry="2" />
<text  x="290.69" y="1375.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1139.0" y="1893" width="0.2" height="15.0" fill="rgb(209,165,53)" rx="2" ry="2" />
<text  x="1141.98" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="707.4" y="1589" width="0.2" height="15.0" fill="rgb(207,166,17)" rx="2" ry="2" />
<text  x="710.44" y="1599.5" ></text>
</g>
<g >
<title>sys_getpeername (21 samples, 0.36%)</title><rect x="676.4" y="1893" width="4.2" height="15.0" fill="rgb(214,171,26)" rx="2" ry="2" />
<text  x="679.43" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="157.4" y="1749" width="0.3" height="15.0" fill="rgb(219,189,28)" rx="2" ry="2" />
<text  x="160.45" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="845.3" y="1909" width="0.2" height="15.0" fill="rgb(211,65,49)" rx="2" ry="2" />
<text  x="848.28" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="215.5" y="1797" width="0.4" height="15.0" fill="rgb(237,41,44)" rx="2" ry="2" />
<text  x="218.47" y="1807.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1189.2" y="2021" width="0.6" height="15.0" fill="rgb(236,158,33)" rx="2" ry="2" />
<text  x="1192.20" y="2031.5" ></text>
</g>
<g >
<title>event_base_set (2 samples, 0.03%)</title><rect x="98.0" y="2005" width="0.4" height="15.0" fill="rgb(208,168,52)" rx="2" ry="2" />
<text  x="101.03" y="2015.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="273.5" y="1845" width="0.2" height="15.0" fill="rgb(212,229,39)" rx="2" ry="2" />
<text  x="276.49" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="150.6" y="1653" width="0.2" height="15.0" fill="rgb(242,7,1)" rx="2" ry="2" />
<text  x="153.65" y="1663.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="611.4" y="1605" width="0.2" height="15.0" fill="rgb(230,199,10)" rx="2" ry="2" />
<text  x="614.40" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="712.4" y="1813" width="0.2" height="15.0" fill="rgb(206,195,16)" rx="2" ry="2" />
<text  x="715.44" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="697.6" y="1845" width="0.2" height="15.0" fill="rgb(209,37,47)" rx="2" ry="2" />
<text  x="700.63" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1183.0" y="2005" width="0.2" height="15.0" fill="rgb(233,19,49)" rx="2" ry="2" />
<text  x="1186.00" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1125.6" y="1877" width="0.2" height="15.0" fill="rgb(228,52,32)" rx="2" ry="2" />
<text  x="1128.58" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="933.7" y="1813" width="0.2" height="15.0" fill="rgb(225,146,26)" rx="2" ry="2" />
<text  x="936.71" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="71.4" y="1541" width="0.2" height="15.0" fill="rgb(236,53,41)" rx="2" ry="2" />
<text  x="74.42" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (30 samples, 0.51%)</title><rect x="796.1" y="1525" width="6.0" height="15.0" fill="rgb(236,90,7)" rx="2" ry="2" />
<text  x="799.07" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.9" y="1925" width="0.2" height="15.0" fill="rgb(214,109,22)" rx="2" ry="2" />
<text  x="160.85" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="837" width="15.4" height="15.0" fill="rgb(238,208,17)" rx="2" ry="2" />
<text  x="106.43" y="847.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="402.1" y="1765" width="0.2" height="15.0" fill="rgb(233,73,31)" rx="2" ry="2" />
<text  x="405.13" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="53.0" y="1685" width="0.2" height="15.0" fill="rgb(244,63,17)" rx="2" ry="2" />
<text  x="56.01" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (23 samples, 0.39%)</title><rect x="658.6" y="2037" width="4.6" height="15.0" fill="rgb(206,139,0)" rx="2" ry="2" />
<text  x="661.62" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (10 samples, 0.17%)</title><rect x="985.7" y="1909" width="2.0" height="15.0" fill="rgb(237,160,54)" rx="2" ry="2" />
<text  x="988.73" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc (66 samples, 1.12%)</title><rect x="395.5" y="1957" width="13.2" height="15.0" fill="rgb(213,227,53)" rx="2" ry="2" />
<text  x="398.53" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="1168.2" y="2053" width="0.2" height="15.0" fill="rgb(225,9,54)" rx="2" ry="2" />
<text  x="1171.19" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="712.8" y="2037" width="0.2" height="15.0" fill="rgb(239,207,5)" rx="2" ry="2" />
<text  x="715.84" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (4 samples, 0.07%)</title><rect x="394.7" y="1941" width="0.8" height="15.0" fill="rgb(229,203,43)" rx="2" ry="2" />
<text  x="397.73" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (6 samples, 0.10%)</title><rect x="588.6" y="1973" width="1.2" height="15.0" fill="rgb(228,0,43)" rx="2" ry="2" />
<text  x="591.60" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="189.9" y="1749" width="0.2" height="15.0" fill="rgb(219,76,13)" rx="2" ry="2" />
<text  x="192.86" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (8 samples, 0.14%)</title><rect x="710.4" y="2021" width="1.6" height="15.0" fill="rgb(244,104,46)" rx="2" ry="2" />
<text  x="713.44" y="2031.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (11 samples, 0.19%)</title><rect x="270.3" y="1861" width="2.2" height="15.0" fill="rgb(212,99,25)" rx="2" ry="2" />
<text  x="273.29" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (120 samples, 2.03%)</title><rect x="200.1" y="1973" width="24.0" height="15.0" fill="rgb(246,169,43)" rx="2" ry="2" />
<text  x="203.06" y="1983.5" >f..</text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="588.2" y="1749" width="0.2" height="15.0" fill="rgb(210,90,45)" rx="2" ry="2" />
<text  x="591.20" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1142.0" y="1925" width="0.4" height="15.0" fill="rgb(240,157,21)" rx="2" ry="2" />
<text  x="1144.98" y="1935.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="551.0" y="2005" width="0.4" height="15.0" fill="rgb(225,49,6)" rx="2" ry="2" />
<text  x="553.98" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (2 samples, 0.03%)</title><rect x="1148.4" y="1989" width="0.4" height="15.0" fill="rgb(210,53,4)" rx="2" ry="2" />
<text  x="1151.39" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="758.7" y="1749" width="0.2" height="15.0" fill="rgb(254,32,15)" rx="2" ry="2" />
<text  x="761.65" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.4" y="1861" width="0.3" height="15.0" fill="rgb(207,105,38)" rx="2" ry="2" />
<text  x="160.45" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="936.3" y="1749" width="0.2" height="15.0" fill="rgb(217,43,45)" rx="2" ry="2" />
<text  x="939.31" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="590.4" y="1557" width="0.2" height="15.0" fill="rgb(216,161,40)" rx="2" ry="2" />
<text  x="593.40" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="865.7" y="1989" width="0.2" height="15.0" fill="rgb(229,148,37)" rx="2" ry="2" />
<text  x="868.69" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="121.6" y="1797" width="0.2" height="15.0" fill="rgb(219,185,35)" rx="2" ry="2" />
<text  x="124.64" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="454.0" y="1893" width="0.2" height="15.0" fill="rgb(244,209,8)" rx="2" ry="2" />
<text  x="456.95" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="229.5" y="1989" width="0.2" height="15.0" fill="rgb(238,205,5)" rx="2" ry="2" />
<text  x="232.47" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="85.2" y="1845" width="0.2" height="15.0" fill="rgb(251,100,41)" rx="2" ry="2" />
<text  x="88.23" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="18.6" y="2037" width="0.2" height="15.0" fill="rgb(246,76,30)" rx="2" ry="2" />
<text  x="21.60" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="273.1" y="1813" width="0.2" height="15.0" fill="rgb(238,23,16)" rx="2" ry="2" />
<text  x="276.09" y="1823.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_cpu (1 samples, 0.02%)</title><rect x="758.9" y="1653" width="0.2" height="15.0" fill="rgb(234,183,43)" rx="2" ry="2" />
<text  x="761.85" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="903.7" y="1973" width="0.2" height="15.0" fill="rgb(211,15,14)" rx="2" ry="2" />
<text  x="906.70" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="421.1" y="1797" width="0.8" height="15.0" fill="rgb(219,63,44)" rx="2" ry="2" />
<text  x="424.14" y="1807.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="190.1" y="1813" width="0.2" height="15.0" fill="rgb(214,168,42)" rx="2" ry="2" />
<text  x="193.06" y="1823.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="970.1" y="1957" width="0.2" height="15.0" fill="rgb(224,118,7)" rx="2" ry="2" />
<text  x="973.13" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="415.1" y="1829" width="0.8" height="15.0" fill="rgb(214,74,18)" rx="2" ry="2" />
<text  x="418.14" y="1839.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="790.1" y="1525" width="0.6" height="15.0" fill="rgb(242,104,54)" rx="2" ry="2" />
<text  x="793.06" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="324.1" y="1733" width="0.4" height="15.0" fill="rgb(231,75,37)" rx="2" ry="2" />
<text  x="327.11" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="408.1" y="1749" width="0.2" height="15.0" fill="rgb(233,80,5)" rx="2" ry="2" />
<text  x="411.13" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6 samples, 0.10%)</title><rect x="1175.2" y="1989" width="1.2" height="15.0" fill="rgb(250,26,46)" rx="2" ry="2" />
<text  x="1178.19" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.4" y="245" width="0.2" height="15.0" fill="rgb(240,41,52)" rx="2" ry="2" />
<text  x="121.44" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="172.5" y="1941" width="0.6" height="15.0" fill="rgb(242,229,20)" rx="2" ry="2" />
<text  x="175.46" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="83.2" y="1925" width="0.2" height="15.0" fill="rgb(249,135,27)" rx="2" ry="2" />
<text  x="86.22" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="1130.2" y="2005" width="0.8" height="15.0" fill="rgb(231,78,29)" rx="2" ry="2" />
<text  x="1133.18" y="2015.5" ></text>
</g>
<g >
<title>free (32 samples, 0.54%)</title><rect x="1009.9" y="2037" width="6.4" height="15.0" fill="rgb(245,173,20)" rx="2" ry="2" />
<text  x="1012.94" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="485.0" y="1957" width="0.4" height="15.0" fill="rgb(235,83,1)" rx="2" ry="2" />
<text  x="487.96" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="890.7" y="1877" width="0.2" height="15.0" fill="rgb(248,202,21)" rx="2" ry="2" />
<text  x="893.70" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="321.5" y="1637" width="0.2" height="15.0" fill="rgb(231,85,43)" rx="2" ry="2" />
<text  x="324.51" y="1647.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="853.3" y="1573" width="0.2" height="15.0" fill="rgb(205,75,7)" rx="2" ry="2" />
<text  x="856.29" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="80.0" y="1701" width="0.2" height="15.0" fill="rgb(224,147,5)" rx="2" ry="2" />
<text  x="83.02" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (28 samples, 0.47%)</title><rect x="299.5" y="1653" width="5.6" height="15.0" fill="rgb(214,137,11)" rx="2" ry="2" />
<text  x="302.50" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="914.9" y="1909" width="0.2" height="15.0" fill="rgb(224,148,25)" rx="2" ry="2" />
<text  x="917.91" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (10 samples, 0.17%)</title><rect x="43.2" y="1973" width="2.0" height="15.0" fill="rgb(208,124,11)" rx="2" ry="2" />
<text  x="46.21" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="889.3" y="1861" width="0.8" height="15.0" fill="rgb(235,70,21)" rx="2" ry="2" />
<text  x="892.30" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1091.4" y="1701" width="0.4" height="15.0" fill="rgb(248,55,14)" rx="2" ry="2" />
<text  x="1094.37" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="611.6" y="1749" width="0.2" height="15.0" fill="rgb(227,42,31)" rx="2" ry="2" />
<text  x="614.60" y="1759.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="504.4" y="1941" width="0.2" height="15.0" fill="rgb(252,58,25)" rx="2" ry="2" />
<text  x="507.37" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="560.6" y="1845" width="0.2" height="15.0" fill="rgb(210,126,15)" rx="2" ry="2" />
<text  x="563.59" y="1855.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="336.7" y="1669" width="0.2" height="15.0" fill="rgb(246,65,19)" rx="2" ry="2" />
<text  x="339.71" y="1679.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="1068.0" y="1621" width="0.2" height="15.0" fill="rgb(212,64,26)" rx="2" ry="2" />
<text  x="1070.96" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="402.1" y="1845" width="0.2" height="15.0" fill="rgb(224,10,8)" rx="2" ry="2" />
<text  x="405.13" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="610.6" y="1653" width="0.2" height="15.0" fill="rgb(211,62,36)" rx="2" ry="2" />
<text  x="613.60" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="565.8" y="1797" width="0.2" height="15.0" fill="rgb(236,149,10)" rx="2" ry="2" />
<text  x="568.79" y="1807.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="158.7" y="1909" width="0.2" height="15.0" fill="rgb(210,109,22)" rx="2" ry="2" />
<text  x="161.65" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="969.1" y="1973" width="0.4" height="15.0" fill="rgb(232,2,41)" rx="2" ry="2" />
<text  x="972.13" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="111.6" y="53" width="0.4" height="15.0" fill="rgb(207,97,47)" rx="2" ry="2" />
<text  x="114.63" y="63.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="804.9" y="1605" width="0.2" height="15.0" fill="rgb(223,214,37)" rx="2" ry="2" />
<text  x="807.87" y="1615.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="333.1" y="1909" width="0.2" height="15.0" fill="rgb(214,45,5)" rx="2" ry="2" />
<text  x="336.11" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="102.8" y="1829" width="19.4" height="15.0" fill="rgb(219,23,26)" rx="2" ry="2" />
<text  x="105.83" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="189.9" y="1765" width="0.2" height="15.0" fill="rgb(230,99,24)" rx="2" ry="2" />
<text  x="192.86" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1091.4" y="1717" width="0.4" height="15.0" fill="rgb(247,66,13)" rx="2" ry="2" />
<text  x="1094.37" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="126.2" y="1829" width="0.4" height="15.0" fill="rgb(214,185,42)" rx="2" ry="2" />
<text  x="129.24" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="640.6" y="1973" width="0.6" height="15.0" fill="rgb(222,20,52)" rx="2" ry="2" />
<text  x="643.61" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="868.1" y="1989" width="0.4" height="15.0" fill="rgb(239,40,46)" rx="2" ry="2" />
<text  x="871.09" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="218.7" y="1877" width="0.2" height="15.0" fill="rgb(207,176,42)" rx="2" ry="2" />
<text  x="221.67" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="623.4" y="1621" width="0.2" height="15.0" fill="rgb(219,156,38)" rx="2" ry="2" />
<text  x="626.41" y="1631.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="532.0" y="1973" width="0.6" height="15.0" fill="rgb(235,183,44)" rx="2" ry="2" />
<text  x="534.98" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.0" y="1941" width="0.2" height="15.0" fill="rgb(251,115,40)" rx="2" ry="2" />
<text  x="160.05" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="827.3" y="1557" width="0.2" height="15.0" fill="rgb(249,85,32)" rx="2" ry="2" />
<text  x="830.28" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1081.8" y="1829" width="0.2" height="15.0" fill="rgb(207,223,47)" rx="2" ry="2" />
<text  x="1084.76" y="1839.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="678.4" y="1861" width="2.0" height="15.0" fill="rgb(234,225,45)" rx="2" ry="2" />
<text  x="681.43" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="357.3" y="1717" width="0.2" height="15.0" fill="rgb(215,34,1)" rx="2" ry="2" />
<text  x="360.32" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1054.4" y="1909" width="0.2" height="15.0" fill="rgb(215,167,2)" rx="2" ry="2" />
<text  x="1057.35" y="1919.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (2 samples, 0.03%)</title><rect x="801.5" y="1509" width="0.4" height="15.0" fill="rgb(210,88,23)" rx="2" ry="2" />
<text  x="804.47" y="1519.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="969.1" y="1557" width="0.2" height="15.0" fill="rgb(209,14,39)" rx="2" ry="2" />
<text  x="972.13" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="603.4" y="1829" width="0.2" height="15.0" fill="rgb(224,34,1)" rx="2" ry="2" />
<text  x="606.40" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="924.3" y="1925" width="0.2" height="15.0" fill="rgb(212,100,39)" rx="2" ry="2" />
<text  x="927.31" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="542.0" y="1957" width="0.2" height="15.0" fill="rgb(241,165,27)" rx="2" ry="2" />
<text  x="544.98" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.7" y="1749" width="0.2" height="15.0" fill="rgb(223,58,10)" rx="2" ry="2" />
<text  x="281.69" y="1759.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="712.4" y="1573" width="0.2" height="15.0" fill="rgb(225,94,12)" rx="2" ry="2" />
<text  x="715.44" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="66.6" y="1941" width="0.2" height="15.0" fill="rgb(205,42,43)" rx="2" ry="2" />
<text  x="69.62" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1145.4" y="1957" width="0.2" height="15.0" fill="rgb(251,146,33)" rx="2" ry="2" />
<text  x="1148.38" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (14 samples, 0.24%)</title><rect x="59.4" y="1941" width="2.8" height="15.0" fill="rgb(225,10,52)" rx="2" ry="2" />
<text  x="62.42" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (19 samples, 0.32%)</title><rect x="396.7" y="1925" width="3.8" height="15.0" fill="rgb(215,66,24)" rx="2" ry="2" />
<text  x="399.73" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (1 samples, 0.02%)</title><rect x="969.5" y="2037" width="0.2" height="15.0" fill="rgb(222,219,51)" rx="2" ry="2" />
<text  x="972.53" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_active_ (3 samples, 0.05%)</title><rect x="526.4" y="2037" width="0.6" height="15.0" fill="rgb(251,40,34)" rx="2" ry="2" />
<text  x="529.38" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="529.2" y="1909" width="0.2" height="15.0" fill="rgb(214,133,49)" rx="2" ry="2" />
<text  x="532.18" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="875.3" y="1861" width="0.2" height="15.0" fill="rgb(206,204,50)" rx="2" ry="2" />
<text  x="878.29" y="1871.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (15 samples, 0.25%)</title><rect x="285.3" y="1717" width="3.0" height="15.0" fill="rgb(218,37,8)" rx="2" ry="2" />
<text  x="288.29" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="421" width="15.2" height="15.0" fill="rgb(234,28,45)" rx="2" ry="2" />
<text  x="106.43" y="431.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="879.5" y="1813" width="0.2" height="15.0" fill="rgb(206,136,52)" rx="2" ry="2" />
<text  x="882.49" y="1823.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="565.8" y="1685" width="0.2" height="15.0" fill="rgb(239,213,13)" rx="2" ry="2" />
<text  x="568.79" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="890.9" y="1797" width="0.2" height="15.0" fill="rgb(228,45,44)" rx="2" ry="2" />
<text  x="893.90" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="590.4" y="1861" width="0.2" height="15.0" fill="rgb(238,88,48)" rx="2" ry="2" />
<text  x="593.40" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="523.0" y="1797" width="0.2" height="15.0" fill="rgb(235,218,22)" rx="2" ry="2" />
<text  x="525.97" y="1807.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1131.4" y="1909" width="0.8" height="15.0" fill="rgb(222,61,32)" rx="2" ry="2" />
<text  x="1134.38" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="998.3" y="1973" width="0.2" height="15.0" fill="rgb(245,0,28)" rx="2" ry="2" />
<text  x="1001.34" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="71.4" y="1589" width="0.2" height="15.0" fill="rgb(228,21,38)" rx="2" ry="2" />
<text  x="74.42" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="903.5" y="1973" width="0.2" height="15.0" fill="rgb(224,135,33)" rx="2" ry="2" />
<text  x="906.50" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="842.1" y="1717" width="0.2" height="15.0" fill="rgb(245,22,28)" rx="2" ry="2" />
<text  x="845.08" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="935.3" y="1845" width="0.2" height="15.0" fill="rgb(224,76,34)" rx="2" ry="2" />
<text  x="938.31" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="936.3" y="1941" width="0.2" height="15.0" fill="rgb(245,44,7)" rx="2" ry="2" />
<text  x="939.31" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.8" y="1925" width="0.2" height="15.0" fill="rgb(218,92,5)" rx="2" ry="2" />
<text  x="538.78" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="984.7" y="1765" width="0.2" height="15.0" fill="rgb(205,52,13)" rx="2" ry="2" />
<text  x="987.73" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="622.0" y="1909" width="0.2" height="15.0" fill="rgb(210,55,34)" rx="2" ry="2" />
<text  x="625.01" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.0" y="1877" width="0.2" height="15.0" fill="rgb(238,82,13)" rx="2" ry="2" />
<text  x="145.04" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="470.6" y="1669" width="0.2" height="15.0" fill="rgb(224,174,33)" rx="2" ry="2" />
<text  x="473.56" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="965.5" y="1973" width="0.2" height="15.0" fill="rgb(213,49,31)" rx="2" ry="2" />
<text  x="968.52" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="111.0" y="37" width="0.4" height="15.0" fill="rgb(218,166,32)" rx="2" ry="2" />
<text  x="114.03" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="85.2" y="1861" width="0.2" height="15.0" fill="rgb(232,40,35)" rx="2" ry="2" />
<text  x="88.23" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="137.6" y="1957" width="0.2" height="15.0" fill="rgb(228,163,13)" rx="2" ry="2" />
<text  x="140.64" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="118.0" y="213" width="0.2" height="15.0" fill="rgb(251,206,52)" rx="2" ry="2" />
<text  x="121.04" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="141.8" y="1893" width="0.2" height="15.0" fill="rgb(228,189,49)" rx="2" ry="2" />
<text  x="144.84" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (91 samples, 1.54%)</title><rect x="666.0" y="2021" width="18.2" height="15.0" fill="rgb(206,29,10)" rx="2" ry="2" />
<text  x="669.02" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="583.0" y="1909" width="0.2" height="15.0" fill="rgb(248,87,34)" rx="2" ry="2" />
<text  x="585.99" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="12.6" y="1845" width="0.8" height="15.0" fill="rgb(238,49,37)" rx="2" ry="2" />
<text  x="15.60" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (2 samples, 0.03%)</title><rect x="539.0" y="1941" width="0.4" height="15.0" fill="rgb(209,74,10)" rx="2" ry="2" />
<text  x="541.98" y="1951.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="853.3" y="1637" width="0.2" height="15.0" fill="rgb(213,169,23)" rx="2" ry="2" />
<text  x="856.29" y="1647.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="761.7" y="1749" width="0.2" height="15.0" fill="rgb(248,8,53)" rx="2" ry="2" />
<text  x="764.65" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (19 samples, 0.32%)</title><rect x="939.3" y="1989" width="3.8" height="15.0" fill="rgb(232,94,27)" rx="2" ry="2" />
<text  x="942.32" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="503.8" y="1925" width="0.4" height="15.0" fill="rgb(249,130,11)" rx="2" ry="2" />
<text  x="506.77" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="149.6" y="1893" width="1.0" height="15.0" fill="rgb(235,115,5)" rx="2" ry="2" />
<text  x="152.65" y="1903.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="625.2" y="1845" width="0.2" height="15.0" fill="rgb(238,167,8)" rx="2" ry="2" />
<text  x="628.21" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="787.3" y="1445" width="1.2" height="15.0" fill="rgb(223,202,21)" rx="2" ry="2" />
<text  x="790.26" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="901.9" y="2037" width="0.4" height="15.0" fill="rgb(227,221,19)" rx="2" ry="2" />
<text  x="904.90" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.14%)</title><rect x="1066.8" y="1877" width="1.6" height="15.0" fill="rgb(221,195,1)" rx="2" ry="2" />
<text  x="1069.76" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="662.6" y="2005" width="0.4" height="15.0" fill="rgb(237,42,35)" rx="2" ry="2" />
<text  x="665.62" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="648.4" y="1669" width="0.2" height="15.0" fill="rgb(241,180,6)" rx="2" ry="2" />
<text  x="651.42" y="1679.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (40 samples, 0.68%)</title><rect x="992.3" y="2037" width="8.0" height="15.0" fill="rgb(219,2,41)" rx="2" ry="2" />
<text  x="995.33" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="546.8" y="1861" width="0.2" height="15.0" fill="rgb(223,216,38)" rx="2" ry="2" />
<text  x="549.78" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="809.7" y="1285" width="0.2" height="15.0" fill="rgb(227,61,26)" rx="2" ry="2" />
<text  x="812.67" y="1295.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="182.7" y="1973" width="0.2" height="15.0" fill="rgb(221,214,29)" rx="2" ry="2" />
<text  x="185.66" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1146.8" y="2005" width="0.2" height="15.0" fill="rgb(229,34,37)" rx="2" ry="2" />
<text  x="1149.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="244.5" y="1733" width="0.2" height="15.0" fill="rgb(222,190,16)" rx="2" ry="2" />
<text  x="247.48" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="933.7" y="1733" width="0.2" height="15.0" fill="rgb(232,3,28)" rx="2" ry="2" />
<text  x="936.71" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1125.6" y="1653" width="0.2" height="15.0" fill="rgb(224,126,45)" rx="2" ry="2" />
<text  x="1128.58" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="267.1" y="1669" width="0.2" height="15.0" fill="rgb(215,142,39)" rx="2" ry="2" />
<text  x="270.09" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="359.5" y="1749" width="0.2" height="15.0" fill="rgb(246,107,45)" rx="2" ry="2" />
<text  x="362.52" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="117.8" y="133" width="0.2" height="15.0" fill="rgb(253,101,25)" rx="2" ry="2" />
<text  x="120.84" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="842.1" y="1765" width="0.8" height="15.0" fill="rgb(254,179,11)" rx="2" ry="2" />
<text  x="845.08" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="503.8" y="1797" width="0.4" height="15.0" fill="rgb(244,218,3)" rx="2" ry="2" />
<text  x="506.77" y="1807.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.1" y="1893" width="0.2" height="15.0" fill="rgb(220,147,41)" rx="2" ry="2" />
<text  x="884.10" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (8 samples, 0.14%)</title><rect x="786.9" y="1525" width="1.6" height="15.0" fill="rgb(230,142,7)" rx="2" ry="2" />
<text  x="789.86" y="1535.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="157.9" y="2005" width="0.2" height="15.0" fill="rgb(237,50,38)" rx="2" ry="2" />
<text  x="160.85" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="336.7" y="1845" width="0.2" height="15.0" fill="rgb(235,81,37)" rx="2" ry="2" />
<text  x="339.71" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1184.4" y="2037" width="0.4" height="15.0" fill="rgb(252,112,51)" rx="2" ry="2" />
<text  x="1187.40" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="943.1" y="1989" width="0.4" height="15.0" fill="rgb(216,137,40)" rx="2" ry="2" />
<text  x="946.12" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="863.7" y="1893" width="0.2" height="15.0" fill="rgb(243,2,47)" rx="2" ry="2" />
<text  x="866.69" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1142.0" y="1765" width="0.2" height="15.0" fill="rgb(227,47,34)" rx="2" ry="2" />
<text  x="1144.98" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="357.3" y="1685" width="0.2" height="15.0" fill="rgb(205,211,37)" rx="2" ry="2" />
<text  x="360.32" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="890.9" y="1893" width="0.2" height="15.0" fill="rgb(251,74,50)" rx="2" ry="2" />
<text  x="893.90" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="831.7" y="1765" width="0.2" height="15.0" fill="rgb(254,198,22)" rx="2" ry="2" />
<text  x="834.68" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="554.2" y="1957" width="0.2" height="15.0" fill="rgb(208,102,30)" rx="2" ry="2" />
<text  x="557.18" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="126.2" y="1765" width="0.4" height="15.0" fill="rgb(205,92,21)" rx="2" ry="2" />
<text  x="129.24" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1090.6" y="1909" width="0.4" height="15.0" fill="rgb(227,183,36)" rx="2" ry="2" />
<text  x="1093.57" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="149.2" y="1877" width="0.2" height="15.0" fill="rgb(217,92,34)" rx="2" ry="2" />
<text  x="152.25" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (11 samples, 0.19%)</title><rect x="555.8" y="1973" width="2.2" height="15.0" fill="rgb(209,56,35)" rx="2" ry="2" />
<text  x="558.79" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="848.5" y="1861" width="0.2" height="15.0" fill="rgb(242,125,15)" rx="2" ry="2" />
<text  x="851.48" y="1871.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="267.5" y="1525" width="0.2" height="15.0" fill="rgb(222,229,12)" rx="2" ry="2" />
<text  x="270.49" y="1535.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="943.5" y="1989" width="0.2" height="15.0" fill="rgb(217,19,46)" rx="2" ry="2" />
<text  x="946.52" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="120.4" y="1173" width="0.2" height="15.0" fill="rgb(254,60,31)" rx="2" ry="2" />
<text  x="123.44" y="1183.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="922.5" y="1925" width="0.8" height="15.0" fill="rgb(208,191,8)" rx="2" ry="2" />
<text  x="925.51" y="1935.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="1051.6" y="1973" width="0.4" height="15.0" fill="rgb(234,85,20)" rx="2" ry="2" />
<text  x="1054.55" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="825.1" y="1493" width="0.2" height="15.0" fill="rgb(221,117,26)" rx="2" ry="2" />
<text  x="828.08" y="1503.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (4 samples, 0.07%)</title><rect x="529.8" y="1941" width="0.8" height="15.0" fill="rgb(244,192,29)" rx="2" ry="2" />
<text  x="532.78" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="645" width="15.4" height="15.0" fill="rgb(239,15,17)" rx="2" ry="2" />
<text  x="106.43" y="655.5" ></text>
</g>
<g >
<title>rb_erase_cached (1 samples, 0.02%)</title><rect x="502.8" y="1973" width="0.2" height="15.0" fill="rgb(237,229,50)" rx="2" ry="2" />
<text  x="505.77" y="1983.5" ></text>
</g>
<g >
<title>process_backlog (10 samples, 0.17%)</title><rect x="286.1" y="1653" width="2.0" height="15.0" fill="rgb(226,3,19)" rx="2" ry="2" />
<text  x="289.09" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.0" y="181" width="0.2" height="15.0" fill="rgb(244,175,23)" rx="2" ry="2" />
<text  x="121.04" y="191.5" ></text>
</g>
<g >
<title>[mcrouter] (34 samples, 0.58%)</title><rect x="982.1" y="1941" width="6.8" height="15.0" fill="rgb(213,69,4)" rx="2" ry="2" />
<text  x="985.13" y="1951.5" ></text>
</g>
<g >
<title>tcp_setsockopt (34 samples, 0.58%)</title><rect x="697.8" y="1909" width="6.8" height="15.0" fill="rgb(210,186,15)" rx="2" ry="2" />
<text  x="700.83" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="883.5" y="1877" width="0.4" height="15.0" fill="rgb(206,167,26)" rx="2" ry="2" />
<text  x="886.50" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_accept (3 samples, 0.05%)</title><rect x="391.9" y="1957" width="0.6" height="15.0" fill="rgb(231,7,49)" rx="2" ry="2" />
<text  x="394.93" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="704.4" y="1877" width="0.2" height="15.0" fill="rgb(205,145,33)" rx="2" ry="2" />
<text  x="707.44" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="635.4" y="1909" width="0.2" height="15.0" fill="rgb(238,13,2)" rx="2" ry="2" />
<text  x="638.41" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1557" width="16.8" height="15.0" fill="rgb(233,18,37)" rx="2" ry="2" />
<text  x="106.03" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (3 samples, 0.05%)</title><rect x="90.4" y="2005" width="0.6" height="15.0" fill="rgb(239,36,27)" rx="2" ry="2" />
<text  x="93.43" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.14%)</title><rect x="128.6" y="1973" width="1.6" height="15.0" fill="rgb(221,151,19)" rx="2" ry="2" />
<text  x="131.64" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="157.4" y="1813" width="0.3" height="15.0" fill="rgb(238,6,29)" rx="2" ry="2" />
<text  x="160.45" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="531.8" y="1733" width="0.2" height="15.0" fill="rgb(209,71,54)" rx="2" ry="2" />
<text  x="534.78" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1149.8" y="1829" width="0.2" height="15.0" fill="rgb(225,23,39)" rx="2" ry="2" />
<text  x="1152.79" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="634.2" y="1973" width="0.2" height="15.0" fill="rgb(226,29,41)" rx="2" ry="2" />
<text  x="637.21" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="829.9" y="1557" width="0.2" height="15.0" fill="rgb(250,141,51)" rx="2" ry="2" />
<text  x="832.88" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="890.5" y="1989" width="0.2" height="15.0" fill="rgb(242,207,0)" rx="2" ry="2" />
<text  x="893.50" y="1999.5" ></text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.08%)</title><rect x="281.1" y="1781" width="1.0" height="15.0" fill="rgb(249,203,16)" rx="2" ry="2" />
<text  x="284.09" y="1791.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="156.6" y="1909" width="0.2" height="15.0" fill="rgb(219,12,35)" rx="2" ry="2" />
<text  x="159.65" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="664.0" y="1797" width="0.2" height="15.0" fill="rgb(248,69,6)" rx="2" ry="2" />
<text  x="667.02" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="953.9" y="2005" width="0.4" height="15.0" fill="rgb(241,173,42)" rx="2" ry="2" />
<text  x="956.92" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="942.9" y="1941" width="0.2" height="15.0" fill="rgb(215,99,4)" rx="2" ry="2" />
<text  x="945.92" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="908.7" y="1989" width="0.2" height="15.0" fill="rgb(231,98,14)" rx="2" ry="2" />
<text  x="911.70" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="855.1" y="1909" width="1.2" height="15.0" fill="rgb(211,122,20)" rx="2" ry="2" />
<text  x="858.09" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="51.4" y="1925" width="0.2" height="15.0" fill="rgb(252,223,19)" rx="2" ry="2" />
<text  x="54.41" y="1935.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="843.7" y="1781" width="0.2" height="15.0" fill="rgb(253,12,15)" rx="2" ry="2" />
<text  x="846.68" y="1791.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.14%)</title><rect x="490.2" y="1925" width="1.6" height="15.0" fill="rgb(218,128,1)" rx="2" ry="2" />
<text  x="493.16" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="707.2" y="1845" width="0.6" height="15.0" fill="rgb(253,4,32)" rx="2" ry="2" />
<text  x="710.24" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="482.8" y="1669" width="0.6" height="15.0" fill="rgb(211,182,25)" rx="2" ry="2" />
<text  x="485.76" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="760.1" y="1749" width="0.2" height="15.0" fill="rgb(244,213,45)" rx="2" ry="2" />
<text  x="763.05" y="1759.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="503.6" y="1909" width="0.2" height="15.0" fill="rgb(213,43,37)" rx="2" ry="2" />
<text  x="506.57" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="307.9" y="1749" width="0.4" height="15.0" fill="rgb(232,173,20)" rx="2" ry="2" />
<text  x="310.90" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="52.6" y="1957" width="1.0" height="15.0" fill="rgb(245,118,44)" rx="2" ry="2" />
<text  x="55.61" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="175.5" y="2005" width="0.2" height="15.0" fill="rgb(244,3,44)" rx="2" ry="2" />
<text  x="178.46" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="541.0" y="1989" width="0.4" height="15.0" fill="rgb(225,156,35)" rx="2" ry="2" />
<text  x="543.98" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.1" y="1909" width="0.2" height="15.0" fill="rgb(250,4,53)" rx="2" ry="2" />
<text  x="844.08" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1098.4" y="1829" width="0.2" height="15.0" fill="rgb(248,71,44)" rx="2" ry="2" />
<text  x="1101.37" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="32.0" y="1957" width="0.2" height="15.0" fill="rgb(216,7,35)" rx="2" ry="2" />
<text  x="35.01" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="247.7" y="1893" width="0.2" height="15.0" fill="rgb(207,171,10)" rx="2" ry="2" />
<text  x="250.68" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="102.8" y="1813" width="19.0" height="15.0" fill="rgb(250,91,30)" rx="2" ry="2" />
<text  x="105.83" y="1823.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="974.1" y="1989" width="0.4" height="15.0" fill="rgb(221,117,33)" rx="2" ry="2" />
<text  x="977.13" y="1999.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="648.4" y="1461" width="0.2" height="15.0" fill="rgb(227,126,6)" rx="2" ry="2" />
<text  x="651.42" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="485.4" y="1957" width="0.2" height="15.0" fill="rgb(238,222,36)" rx="2" ry="2" />
<text  x="488.36" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="244.5" y="1781" width="0.2" height="15.0" fill="rgb(220,169,29)" rx="2" ry="2" />
<text  x="247.48" y="1791.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="118.6" y="197" width="0.2" height="15.0" fill="rgb(236,122,16)" rx="2" ry="2" />
<text  x="121.64" y="207.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="102.8" y="1861" width="19.4" height="15.0" fill="rgb(250,2,22)" rx="2" ry="2" />
<text  x="105.83" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="980.3" y="1877" width="0.4" height="15.0" fill="rgb(209,152,4)" rx="2" ry="2" />
<text  x="983.33" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="114.6" y="37" width="0.2" height="15.0" fill="rgb(214,170,40)" rx="2" ry="2" />
<text  x="117.64" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="663.0" y="2021" width="0.2" height="15.0" fill="rgb(248,159,30)" rx="2" ry="2" />
<text  x="666.02" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="920.5" y="1909" width="0.2" height="15.0" fill="rgb(233,181,52)" rx="2" ry="2" />
<text  x="923.51" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="78.2" y="1813" width="0.8" height="15.0" fill="rgb(234,178,15)" rx="2" ry="2" />
<text  x="81.22" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="512.0" y="1653" width="0.2" height="15.0" fill="rgb(210,65,18)" rx="2" ry="2" />
<text  x="514.97" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="664.0" y="1765" width="0.2" height="15.0" fill="rgb(245,29,8)" rx="2" ry="2" />
<text  x="667.02" y="1775.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="70.2" y="1877" width="0.4" height="15.0" fill="rgb(243,160,39)" rx="2" ry="2" />
<text  x="73.22" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="394.1" y="1957" width="0.2" height="15.0" fill="rgb(226,110,50)" rx="2" ry="2" />
<text  x="397.13" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (42 samples, 0.71%)</title><rect x="1111.8" y="1573" width="8.4" height="15.0" fill="rgb(227,0,11)" rx="2" ry="2" />
<text  x="1114.77" y="1583.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="384.3" y="1925" width="0.4" height="15.0" fill="rgb(209,22,18)" rx="2" ry="2" />
<text  x="387.33" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="114.8" y="69" width="0.6" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="117.84" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="827.3" y="1525" width="0.2" height="15.0" fill="rgb(215,209,14)" rx="2" ry="2" />
<text  x="830.28" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="428.5" y="1637" width="0.2" height="15.0" fill="rgb(232,118,7)" rx="2" ry="2" />
<text  x="431.54" y="1647.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.2" y="1765" width="0.2" height="15.0" fill="rgb(224,7,18)" rx="2" ry="2" />
<text  x="124.24" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="150.6" y="1669" width="0.2" height="15.0" fill="rgb(228,92,24)" rx="2" ry="2" />
<text  x="153.65" y="1679.5" ></text>
</g>
<g >
<title>sock_alloc_inode (29 samples, 0.49%)</title><rect x="402.9" y="1909" width="5.8" height="15.0" fill="rgb(230,173,13)" rx="2" ry="2" />
<text  x="405.93" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="357.1" y="1733" width="0.2" height="15.0" fill="rgb(253,47,18)" rx="2" ry="2" />
<text  x="360.12" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="535.6" y="1941" width="0.2" height="15.0" fill="rgb(237,217,7)" rx="2" ry="2" />
<text  x="538.58" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="933.7" y="1861" width="0.2" height="15.0" fill="rgb(254,27,28)" rx="2" ry="2" />
<text  x="936.71" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (5 samples, 0.08%)</title><rect x="630.6" y="2037" width="1.0" height="15.0" fill="rgb(211,89,11)" rx="2" ry="2" />
<text  x="633.61" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="434.1" y="2021" width="3.8" height="15.0" fill="rgb(234,133,30)" rx="2" ry="2" />
<text  x="437.14" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.2" y="1845" width="0.2" height="15.0" fill="rgb(223,71,11)" rx="2" ry="2" />
<text  x="64.22" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="321.5" y="1717" width="0.2" height="15.0" fill="rgb(248,27,3)" rx="2" ry="2" />
<text  x="324.51" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="890.5" y="1877" width="0.2" height="15.0" fill="rgb(214,53,53)" rx="2" ry="2" />
<text  x="893.50" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="850.9" y="1909" width="0.2" height="15.0" fill="rgb(207,59,33)" rx="2" ry="2" />
<text  x="853.89" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="565.8" y="1973" width="0.2" height="15.0" fill="rgb(248,70,49)" rx="2" ry="2" />
<text  x="568.79" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="471.2" y="1973" width="0.8" height="15.0" fill="rgb(205,60,27)" rx="2" ry="2" />
<text  x="474.16" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="847.7" y="1797" width="0.2" height="15.0" fill="rgb(244,212,43)" rx="2" ry="2" />
<text  x="850.68" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="860.1" y="1749" width="0.2" height="15.0" fill="rgb(238,154,13)" rx="2" ry="2" />
<text  x="863.09" y="1759.5" ></text>
</g>
<g >
<title>__libc_recv (7 samples, 0.12%)</title><rect x="50.2" y="1941" width="1.4" height="15.0" fill="rgb(240,177,45)" rx="2" ry="2" />
<text  x="53.21" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="139.2" y="1877" width="0.2" height="15.0" fill="rgb(213,155,33)" rx="2" ry="2" />
<text  x="142.24" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="933.7" y="1909" width="0.2" height="15.0" fill="rgb(246,58,51)" rx="2" ry="2" />
<text  x="936.71" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1091.4" y="1573" width="0.2" height="15.0" fill="rgb(250,63,48)" rx="2" ry="2" />
<text  x="1094.37" y="1583.5" ></text>
</g>
<g >
<title>all (5,898 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(225,140,48)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>ip_rcv_finish (44 samples, 0.75%)</title><rect x="1111.4" y="1637" width="8.8" height="15.0" fill="rgb(244,154,25)" rx="2" ry="2" />
<text  x="1114.37" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="483.6" y="1733" width="0.2" height="15.0" fill="rgb(239,209,19)" rx="2" ry="2" />
<text  x="486.56" y="1743.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1119.8" y="1509" width="0.2" height="15.0" fill="rgb(241,151,4)" rx="2" ry="2" />
<text  x="1122.78" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="120.4" y="1525" width="0.2" height="15.0" fill="rgb(208,141,23)" rx="2" ry="2" />
<text  x="123.44" y="1535.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (32 samples, 0.54%)</title><rect x="534.6" y="1989" width="6.4" height="15.0" fill="rgb(205,168,39)" rx="2" ry="2" />
<text  x="537.58" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="960.3" y="1957" width="0.4" height="15.0" fill="rgb(206,188,21)" rx="2" ry="2" />
<text  x="963.32" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="916.1" y="2005" width="0.6" height="15.0" fill="rgb(235,82,4)" rx="2" ry="2" />
<text  x="919.11" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1269" width="16.0" height="15.0" fill="rgb(220,193,41)" rx="2" ry="2" />
<text  x="106.23" y="1279.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="565.6" y="1797" width="0.2" height="15.0" fill="rgb(210,13,51)" rx="2" ry="2" />
<text  x="568.59" y="1807.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="651.8" y="1957" width="0.2" height="15.0" fill="rgb(253,187,5)" rx="2" ry="2" />
<text  x="654.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="916.5" y="1829" width="0.2" height="15.0" fill="rgb(241,208,10)" rx="2" ry="2" />
<text  x="919.51" y="1839.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="328.7" y="1557" width="0.2" height="15.0" fill="rgb(220,33,31)" rx="2" ry="2" />
<text  x="331.71" y="1567.5" ></text>
</g>
<g >
<title>secure_tcp_ts_off (1 samples, 0.02%)</title><rect x="1188.8" y="1717" width="0.2" height="15.0" fill="rgb(215,18,34)" rx="2" ry="2" />
<text  x="1191.80" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1397" width="16.8" height="15.0" fill="rgb(227,193,43)" rx="2" ry="2" />
<text  x="106.03" y="1407.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="332.5" y="1749" width="0.2" height="15.0" fill="rgb(209,111,14)" rx="2" ry="2" />
<text  x="335.51" y="1759.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="170.7" y="1957" width="0.4" height="15.0" fill="rgb(231,3,1)" rx="2" ry="2" />
<text  x="173.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="935.3" y="1653" width="0.2" height="15.0" fill="rgb(205,150,32)" rx="2" ry="2" />
<text  x="938.31" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="340.9" y="2005" width="0.4" height="15.0" fill="rgb(227,151,16)" rx="2" ry="2" />
<text  x="343.91" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="54.2" y="1877" width="0.2" height="15.0" fill="rgb(236,10,45)" rx="2" ry="2" />
<text  x="57.21" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="416.1" y="1749" width="0.2" height="15.0" fill="rgb(215,50,30)" rx="2" ry="2" />
<text  x="419.14" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="382.9" y="1909" width="0.2" height="15.0" fill="rgb(232,210,39)" rx="2" ry="2" />
<text  x="385.93" y="1919.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="780.9" y="1669" width="0.4" height="15.0" fill="rgb(254,226,3)" rx="2" ry="2" />
<text  x="783.86" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="209.1" y="1877" width="1.4" height="15.0" fill="rgb(218,159,41)" rx="2" ry="2" />
<text  x="212.07" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (3 samples, 0.05%)</title><rect x="28.6" y="1989" width="0.6" height="15.0" fill="rgb(246,142,49)" rx="2" ry="2" />
<text  x="31.61" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (10 samples, 0.17%)</title><rect x="954.3" y="2037" width="2.0" height="15.0" fill="rgb(236,70,40)" rx="2" ry="2" />
<text  x="957.32" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="946.1" y="1989" width="0.2" height="15.0" fill="rgb(232,25,53)" rx="2" ry="2" />
<text  x="949.12" y="1999.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.03%)</title><rect x="1137.4" y="2053" width="0.4" height="15.0" fill="rgb(225,106,25)" rx="2" ry="2" />
<text  x="1140.38" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="306.5" y="1669" width="0.2" height="15.0" fill="rgb(251,11,34)" rx="2" ry="2" />
<text  x="309.50" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="306.5" y="1701" width="0.2" height="15.0" fill="rgb(220,17,9)" rx="2" ry="2" />
<text  x="309.50" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="670.4" y="1909" width="0.2" height="15.0" fill="rgb(251,84,32)" rx="2" ry="2" />
<text  x="673.42" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1053.6" y="1957" width="0.2" height="15.0" fill="rgb(242,156,10)" rx="2" ry="2" />
<text  x="1056.55" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1049.6" y="1909" width="0.2" height="15.0" fill="rgb(226,110,8)" rx="2" ry="2" />
<text  x="1052.55" y="1919.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="879.5" y="1557" width="0.2" height="15.0" fill="rgb(230,138,44)" rx="2" ry="2" />
<text  x="882.49" y="1567.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="749.5" y="1653" width="0.2" height="15.0" fill="rgb(231,52,6)" rx="2" ry="2" />
<text  x="752.45" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="261" width="14.8" height="15.0" fill="rgb(225,26,45)" rx="2" ry="2" />
<text  x="106.43" y="271.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1086.8" y="1925" width="0.2" height="15.0" fill="rgb(217,207,10)" rx="2" ry="2" />
<text  x="1089.77" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1142.0" y="2037" width="0.4" height="15.0" fill="rgb(246,139,20)" rx="2" ry="2" />
<text  x="1144.98" y="2047.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="825.1" y="1365" width="0.2" height="15.0" fill="rgb(250,213,8)" rx="2" ry="2" />
<text  x="828.08" y="1375.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="119.0" y="1173" width="0.2" height="15.0" fill="rgb(225,203,41)" rx="2" ry="2" />
<text  x="122.04" y="1183.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(219,222,0)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="483.6" y="1445" width="0.2" height="15.0" fill="rgb(242,177,31)" rx="2" ry="2" />
<text  x="486.56" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="879.5" y="1845" width="0.2" height="15.0" fill="rgb(205,81,53)" rx="2" ry="2" />
<text  x="882.49" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (34 samples, 0.58%)</title><rect x="982.1" y="1957" width="6.8" height="15.0" fill="rgb(241,210,38)" rx="2" ry="2" />
<text  x="985.13" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="12.6" y="1877" width="0.8" height="15.0" fill="rgb(245,43,21)" rx="2" ry="2" />
<text  x="15.60" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="575.8" y="1717" width="0.4" height="15.0" fill="rgb(253,26,2)" rx="2" ry="2" />
<text  x="578.79" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="886.1" y="1829" width="0.2" height="15.0" fill="rgb(240,186,45)" rx="2" ry="2" />
<text  x="889.10" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="1175.0" y="1989" width="0.2" height="15.0" fill="rgb(220,111,25)" rx="2" ry="2" />
<text  x="1177.99" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="875.3" y="1717" width="0.2" height="15.0" fill="rgb(254,59,19)" rx="2" ry="2" />
<text  x="878.29" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="935.3" y="1925" width="0.2" height="15.0" fill="rgb(210,97,13)" rx="2" ry="2" />
<text  x="938.31" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.4" y="1893" width="0.3" height="15.0" fill="rgb(253,196,28)" rx="2" ry="2" />
<text  x="160.45" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (5 samples, 0.08%)</title><rect x="149.6" y="1877" width="1.0" height="15.0" fill="rgb(239,1,33)" rx="2" ry="2" />
<text  x="152.65" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="211.5" y="1749" width="0.2" height="15.0" fill="rgb(247,180,3)" rx="2" ry="2" />
<text  x="214.47" y="1759.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="884.7" y="1909" width="0.2" height="15.0" fill="rgb(217,174,3)" rx="2" ry="2" />
<text  x="887.70" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="183.1" y="2021" width="0.6" height="15.0" fill="rgb(225,93,26)" rx="2" ry="2" />
<text  x="186.06" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1174.8" y="1989" width="0.2" height="15.0" fill="rgb(237,31,29)" rx="2" ry="2" />
<text  x="1177.79" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="969.1" y="1541" width="0.2" height="15.0" fill="rgb(236,34,34)" rx="2" ry="2" />
<text  x="972.13" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="942.9" y="1829" width="0.2" height="15.0" fill="rgb(253,143,34)" rx="2" ry="2" />
<text  x="945.92" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="908.5" y="1957" width="0.2" height="15.0" fill="rgb(213,150,36)" rx="2" ry="2" />
<text  x="911.50" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="916.5" y="1941" width="0.2" height="15.0" fill="rgb(219,96,47)" rx="2" ry="2" />
<text  x="919.51" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="532.4" y="1941" width="0.2" height="15.0" fill="rgb(254,84,43)" rx="2" ry="2" />
<text  x="535.38" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="60.6" y="1877" width="0.8" height="15.0" fill="rgb(242,161,34)" rx="2" ry="2" />
<text  x="63.62" y="1887.5" ></text>
</g>
<g >
<title>evict (39 samples, 0.66%)</title><rect x="746.4" y="1717" width="7.9" height="15.0" fill="rgb(211,189,46)" rx="2" ry="2" />
<text  x="749.45" y="1727.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (2 samples, 0.03%)</title><rect x="74.2" y="1957" width="0.4" height="15.0" fill="rgb(210,29,13)" rx="2" ry="2" />
<text  x="77.22" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="854.9" y="1749" width="0.2" height="15.0" fill="rgb(233,181,45)" rx="2" ry="2" />
<text  x="857.89" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="969.1" y="1941" width="0.4" height="15.0" fill="rgb(217,205,34)" rx="2" ry="2" />
<text  x="972.13" y="1951.5" ></text>
</g>
<g >
<title>sock_rfree (14 samples, 0.24%)</title><rect x="1082.0" y="1877" width="2.8" height="15.0" fill="rgb(211,64,37)" rx="2" ry="2" />
<text  x="1084.96" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="889.1" y="1733" width="0.2" height="15.0" fill="rgb(247,22,0)" rx="2" ry="2" />
<text  x="892.10" y="1743.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="943.5" y="1845" width="0.2" height="15.0" fill="rgb(250,22,9)" rx="2" ry="2" />
<text  x="946.52" y="1855.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="608.0" y="1845" width="0.4" height="15.0" fill="rgb(247,64,32)" rx="2" ry="2" />
<text  x="611.00" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="102.8" y="1893" width="20.2" height="15.0" fill="rgb(224,130,14)" rx="2" ry="2" />
<text  x="105.83" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="256.5" y="1797" width="0.2" height="15.0" fill="rgb(253,76,39)" rx="2" ry="2" />
<text  x="259.48" y="1807.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="658.4" y="1957" width="0.2" height="15.0" fill="rgb(209,169,13)" rx="2" ry="2" />
<text  x="661.42" y="1967.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="628.2" y="1925" width="0.2" height="15.0" fill="rgb(250,55,10)" rx="2" ry="2" />
<text  x="631.21" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="210.3" y="1829" width="0.2" height="15.0" fill="rgb(251,19,6)" rx="2" ry="2" />
<text  x="213.27" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="333.3" y="1749" width="0.2" height="15.0" fill="rgb(213,196,9)" rx="2" ry="2" />
<text  x="336.31" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="120.4" y="1477" width="0.2" height="15.0" fill="rgb(221,80,46)" rx="2" ry="2" />
<text  x="123.44" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="844.3" y="1925" width="0.2" height="15.0" fill="rgb(246,213,38)" rx="2" ry="2" />
<text  x="847.28" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="264.9" y="1829" width="0.2" height="15.0" fill="rgb(233,30,24)" rx="2" ry="2" />
<text  x="267.89" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="961.7" y="2037" width="0.2" height="15.0" fill="rgb(248,171,25)" rx="2" ry="2" />
<text  x="964.72" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1142.0" y="1861" width="0.2" height="15.0" fill="rgb(229,191,39)" rx="2" ry="2" />
<text  x="1144.98" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="635.4" y="1973" width="0.2" height="15.0" fill="rgb(239,68,43)" rx="2" ry="2" />
<text  x="638.41" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="811.1" y="1685" width="0.2" height="15.0" fill="rgb(237,207,23)" rx="2" ry="2" />
<text  x="814.07" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="454.0" y="1829" width="0.2" height="15.0" fill="rgb(228,199,21)" rx="2" ry="2" />
<text  x="456.95" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="954.5" y="1925" width="0.2" height="15.0" fill="rgb(218,126,14)" rx="2" ry="2" />
<text  x="957.52" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="221.7" y="1909" width="0.2" height="15.0" fill="rgb(206,78,27)" rx="2" ry="2" />
<text  x="224.67" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="118.2" y="37" width="0.2" height="15.0" fill="rgb(250,169,3)" rx="2" ry="2" />
<text  x="121.24" y="47.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="102.8" y="1909" width="20.2" height="15.0" fill="rgb(214,127,4)" rx="2" ry="2" />
<text  x="105.83" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="711.4" y="1941" width="0.2" height="15.0" fill="rgb(229,114,33)" rx="2" ry="2" />
<text  x="714.44" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (4 samples, 0.07%)</title><rect x="584.0" y="2005" width="0.8" height="15.0" fill="rgb(205,24,30)" rx="2" ry="2" />
<text  x="586.99" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="357.1" y="1893" width="0.4" height="15.0" fill="rgb(212,191,46)" rx="2" ry="2" />
<text  x="360.12" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="357" width="15.2" height="15.0" fill="rgb(214,42,7)" rx="2" ry="2" />
<text  x="106.43" y="367.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="540.2" y="1877" width="0.2" height="15.0" fill="rgb(238,9,8)" rx="2" ry="2" />
<text  x="543.18" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="563.4" y="1989" width="0.2" height="15.0" fill="rgb(254,24,20)" rx="2" ry="2" />
<text  x="566.39" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="935.3" y="1781" width="0.2" height="15.0" fill="rgb(208,39,46)" rx="2" ry="2" />
<text  x="938.31" y="1791.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="624.6" y="1813" width="0.4" height="15.0" fill="rgb(223,84,5)" rx="2" ry="2" />
<text  x="627.61" y="1823.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="430.3" y="1653" width="0.2" height="15.0" fill="rgb(230,94,40)" rx="2" ry="2" />
<text  x="433.34" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="75.2" y="1893" width="0.2" height="15.0" fill="rgb(250,226,27)" rx="2" ry="2" />
<text  x="78.22" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="954.9" y="1973" width="0.4" height="15.0" fill="rgb(245,55,7)" rx="2" ry="2" />
<text  x="957.92" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="158.7" y="1989" width="0.2" height="15.0" fill="rgb(229,62,22)" rx="2" ry="2" />
<text  x="161.65" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="242.9" y="1925" width="0.2" height="15.0" fill="rgb(243,74,48)" rx="2" ry="2" />
<text  x="245.88" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="78.2" y="1765" width="0.8" height="15.0" fill="rgb(235,59,50)" rx="2" ry="2" />
<text  x="81.22" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (58 samples, 0.98%)</title><rect x="20.6" y="2021" width="11.6" height="15.0" fill="rgb(205,195,54)" rx="2" ry="2" />
<text  x="23.60" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="588.2" y="1797" width="0.2" height="15.0" fill="rgb(223,228,11)" rx="2" ry="2" />
<text  x="591.20" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="825.1" y="1221" width="0.2" height="15.0" fill="rgb(246,199,26)" rx="2" ry="2" />
<text  x="828.08" y="1231.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1525" width="0.2" height="15.0" fill="rgb(234,74,3)" rx="2" ry="2" />
<text  x="828.08" y="1535.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="567.6" y="1861" width="0.2" height="15.0" fill="rgb(224,58,35)" rx="2" ry="2" />
<text  x="570.59" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="993.3" y="1941" width="0.2" height="15.0" fill="rgb(222,213,37)" rx="2" ry="2" />
<text  x="996.33" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="706.4" y="1909" width="0.6" height="15.0" fill="rgb(226,10,44)" rx="2" ry="2" />
<text  x="709.44" y="1919.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="829.9" y="1461" width="0.2" height="15.0" fill="rgb(245,47,38)" rx="2" ry="2" />
<text  x="832.88" y="1471.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="735.4" y="1829" width="0.8" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="738.45" y="1839.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (10 samples, 0.17%)</title><rect x="771.9" y="1701" width="2.0" height="15.0" fill="rgb(216,56,23)" rx="2" ry="2" />
<text  x="774.86" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (79 samples, 1.34%)</title><rect x="668.0" y="1973" width="15.8" height="15.0" fill="rgb(240,129,43)" rx="2" ry="2" />
<text  x="671.02" y="1983.5" ></text>
</g>
<g >
<title>SYSC_getpeername (1 samples, 0.02%)</title><rect x="719.8" y="1829" width="0.2" height="15.0" fill="rgb(222,229,30)" rx="2" ry="2" />
<text  x="722.84" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="341.7" y="2021" width="2.8" height="15.0" fill="rgb(212,211,49)" rx="2" ry="2" />
<text  x="344.71" y="2031.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="555.2" y="1957" width="0.2" height="15.0" fill="rgb(220,222,43)" rx="2" ry="2" />
<text  x="558.18" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="504.0" y="1701" width="0.2" height="15.0" fill="rgb(216,183,9)" rx="2" ry="2" />
<text  x="506.97" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="588.2" y="1845" width="0.2" height="15.0" fill="rgb(213,60,47)" rx="2" ry="2" />
<text  x="591.20" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="1091.2" y="1765" width="0.6" height="15.0" fill="rgb(240,55,39)" rx="2" ry="2" />
<text  x="1094.17" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="53.2" y="1909" width="0.4" height="15.0" fill="rgb(254,84,3)" rx="2" ry="2" />
<text  x="56.21" y="1919.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="677.8" y="1813" width="0.6" height="15.0" fill="rgb(212,28,16)" rx="2" ry="2" />
<text  x="680.83" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="834.1" y="1685" width="0.2" height="15.0" fill="rgb(233,95,54)" rx="2" ry="2" />
<text  x="837.08" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="128.8" y="1957" width="0.2" height="15.0" fill="rgb(230,50,40)" rx="2" ry="2" />
<text  x="131.84" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="885.5" y="1941" width="0.6" height="15.0" fill="rgb(231,137,18)" rx="2" ry="2" />
<text  x="888.50" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="212.5" y="1877" width="0.2" height="15.0" fill="rgb(232,210,43)" rx="2" ry="2" />
<text  x="215.47" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="105.4" y="37" width="0.2" height="15.0" fill="rgb(207,43,41)" rx="2" ry="2" />
<text  x="108.43" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1130.8" y="1845" width="0.2" height="15.0" fill="rgb(245,82,14)" rx="2" ry="2" />
<text  x="1133.78" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="875.9" y="1925" width="0.2" height="15.0" fill="rgb(215,60,47)" rx="2" ry="2" />
<text  x="878.89" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="647.4" y="1749" width="0.2" height="15.0" fill="rgb(242,81,28)" rx="2" ry="2" />
<text  x="650.42" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1126.2" y="1877" width="0.2" height="15.0" fill="rgb(206,5,9)" rx="2" ry="2" />
<text  x="1129.18" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="590.6" y="1989" width="0.2" height="15.0" fill="rgb(245,169,41)" rx="2" ry="2" />
<text  x="593.60" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1168.6" y="2021" width="0.6" height="15.0" fill="rgb(242,24,53)" rx="2" ry="2" />
<text  x="1171.59" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.1" y="1877" width="0.2" height="15.0" fill="rgb(208,98,8)" rx="2" ry="2" />
<text  x="884.10" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="512.0" y="1637" width="0.2" height="15.0" fill="rgb(230,207,53)" rx="2" ry="2" />
<text  x="514.97" y="1647.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (1 samples, 0.02%)</title><rect x="961.9" y="2005" width="0.2" height="15.0" fill="rgb(216,219,23)" rx="2" ry="2" />
<text  x="964.92" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="126.2" y="1877" width="0.4" height="15.0" fill="rgb(233,75,31)" rx="2" ry="2" />
<text  x="129.24" y="1887.5" ></text>
</g>
<g >
<title>ksize (7 samples, 0.12%)</title><rect x="265.9" y="1845" width="1.4" height="15.0" fill="rgb(210,199,8)" rx="2" ry="2" />
<text  x="268.89" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="535.8" y="1845" width="0.2" height="15.0" fill="rgb(207,82,37)" rx="2" ry="2" />
<text  x="538.78" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (6 samples, 0.10%)</title><rect x="894.3" y="2005" width="1.2" height="15.0" fill="rgb(233,75,30)" rx="2" ry="2" />
<text  x="897.30" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="704.4" y="1669" width="0.2" height="15.0" fill="rgb(243,110,48)" rx="2" ry="2" />
<text  x="707.44" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1137.8" y="2053" width="0.2" height="15.0" fill="rgb(248,133,53)" rx="2" ry="2" />
<text  x="1140.78" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="916.1" y="1989" width="0.6" height="15.0" fill="rgb(253,96,51)" rx="2" ry="2" />
<text  x="919.11" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="648.4" y="1797" width="0.2" height="15.0" fill="rgb(215,57,19)" rx="2" ry="2" />
<text  x="651.42" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="118.6" y="133" width="0.2" height="15.0" fill="rgb(238,120,19)" rx="2" ry="2" />
<text  x="121.64" y="143.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="305.9" y="1637" width="0.2" height="15.0" fill="rgb(220,166,40)" rx="2" ry="2" />
<text  x="308.90" y="1647.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="933.7" y="1637" width="0.2" height="15.0" fill="rgb(208,85,47)" rx="2" ry="2" />
<text  x="936.71" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="578.6" y="1861" width="0.2" height="15.0" fill="rgb(246,131,52)" rx="2" ry="2" />
<text  x="581.59" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="103.0" y="1717" width="17.8" height="15.0" fill="rgb(240,102,11)" rx="2" ry="2" />
<text  x="106.03" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="153.0" y="1861" width="0.2" height="15.0" fill="rgb(211,107,2)" rx="2" ry="2" />
<text  x="156.05" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (11 samples, 0.19%)</title><rect x="1006.9" y="2005" width="2.2" height="15.0" fill="rgb(239,215,6)" rx="2" ry="2" />
<text  x="1009.94" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="995.9" y="1941" width="0.2" height="15.0" fill="rgb(223,193,15)" rx="2" ry="2" />
<text  x="998.93" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="220.7" y="1829" width="0.2" height="15.0" fill="rgb(239,132,40)" rx="2" ry="2" />
<text  x="223.67" y="1839.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="739.4" y="1541" width="0.2" height="15.0" fill="rgb(218,99,22)" rx="2" ry="2" />
<text  x="742.45" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="735.2" y="1829" width="0.2" height="15.0" fill="rgb(225,36,9)" rx="2" ry="2" />
<text  x="738.25" y="1839.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="575.8" y="1701" width="0.2" height="15.0" fill="rgb(238,227,48)" rx="2" ry="2" />
<text  x="578.79" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (3 samples, 0.05%)</title><rect x="888.3" y="1941" width="0.6" height="15.0" fill="rgb(242,39,50)" rx="2" ry="2" />
<text  x="891.30" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="630.0" y="1925" width="0.2" height="15.0" fill="rgb(249,193,8)" rx="2" ry="2" />
<text  x="633.01" y="1935.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="429.9" y="1877" width="0.2" height="15.0" fill="rgb(224,185,22)" rx="2" ry="2" />
<text  x="432.94" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="536.8" y="1941" width="0.6" height="15.0" fill="rgb(240,46,41)" rx="2" ry="2" />
<text  x="539.78" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="71.4" y="1685" width="0.2" height="15.0" fill="rgb(213,94,32)" rx="2" ry="2" />
<text  x="74.42" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="328.9" y="1861" width="0.2" height="15.0" fill="rgb(228,224,51)" rx="2" ry="2" />
<text  x="331.91" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (7 samples, 0.12%)</title><rect x="645.8" y="1925" width="1.4" height="15.0" fill="rgb(233,156,27)" rx="2" ry="2" />
<text  x="648.82" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1120.2" y="1845" width="0.2" height="15.0" fill="rgb(222,24,33)" rx="2" ry="2" />
<text  x="1123.18" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="962.1" y="2005" width="0.2" height="15.0" fill="rgb(247,225,41)" rx="2" ry="2" />
<text  x="965.12" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="483.6" y="1909" width="0.2" height="15.0" fill="rgb(229,100,0)" rx="2" ry="2" />
<text  x="486.56" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="960.7" y="1957" width="0.4" height="15.0" fill="rgb(247,196,29)" rx="2" ry="2" />
<text  x="963.72" y="1967.5" ></text>
</g>
<g >
<title>sys_getsockname (2 samples, 0.03%)</title><rect x="611.2" y="1909" width="0.4" height="15.0" fill="rgb(213,6,29)" rx="2" ry="2" />
<text  x="614.20" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="712.4" y="1637" width="0.2" height="15.0" fill="rgb(206,116,13)" rx="2" ry="2" />
<text  x="715.44" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.0" y="1861" width="0.2" height="15.0" fill="rgb(237,62,15)" rx="2" ry="2" />
<text  x="160.05" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1669" width="0.2" height="15.0" fill="rgb(238,69,3)" rx="2" ry="2" />
<text  x="844.08" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="428.5" y="1557" width="0.2" height="15.0" fill="rgb(230,87,4)" rx="2" ry="2" />
<text  x="431.54" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1188.8" y="1941" width="0.4" height="15.0" fill="rgb(220,147,20)" rx="2" ry="2" />
<text  x="1191.80" y="1951.5" ></text>
</g>
<g >
<title>mntget (1 samples, 0.02%)</title><rect x="392.7" y="1957" width="0.2" height="15.0" fill="rgb(246,195,52)" rx="2" ry="2" />
<text  x="395.73" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="421.1" y="1813" width="0.8" height="15.0" fill="rgb(244,77,40)" rx="2" ry="2" />
<text  x="424.14" y="1823.5" ></text>
</g>
<g >
<title>check_stack_object (3 samples, 0.05%)</title><rect x="393.3" y="1925" width="0.6" height="15.0" fill="rgb(218,48,29)" rx="2" ry="2" />
<text  x="396.33" y="1935.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (4 samples, 0.07%)</title><rect x="360.7" y="1957" width="0.8" height="15.0" fill="rgb(220,155,6)" rx="2" ry="2" />
<text  x="363.72" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="256.5" y="1653" width="0.2" height="15.0" fill="rgb(209,25,20)" rx="2" ry="2" />
<text  x="259.48" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="157.9" y="1797" width="0.2" height="15.0" fill="rgb(243,137,12)" rx="2" ry="2" />
<text  x="160.85" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="244.5" y="1909" width="0.2" height="15.0" fill="rgb(225,155,7)" rx="2" ry="2" />
<text  x="247.48" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1077" width="15.6" height="15.0" fill="rgb(231,103,15)" rx="2" ry="2" />
<text  x="106.43" y="1087.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="483.6" y="1685" width="0.2" height="15.0" fill="rgb(228,113,12)" rx="2" ry="2" />
<text  x="486.56" y="1695.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="74.2" y="1941" width="0.2" height="15.0" fill="rgb(247,105,14)" rx="2" ry="2" />
<text  x="77.22" y="1951.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="755.5" y="1653" width="0.2" height="15.0" fill="rgb(248,147,35)" rx="2" ry="2" />
<text  x="758.45" y="1663.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="587.6" y="1893" width="0.2" height="15.0" fill="rgb(218,155,14)" rx="2" ry="2" />
<text  x="590.60" y="1903.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1098.0" y="1893" width="0.4" height="15.0" fill="rgb(252,119,52)" rx="2" ry="2" />
<text  x="1100.97" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="278.7" y="1605" width="0.2" height="15.0" fill="rgb(205,206,28)" rx="2" ry="2" />
<text  x="281.69" y="1615.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="987.7" y="1909" width="0.2" height="15.0" fill="rgb(247,179,38)" rx="2" ry="2" />
<text  x="990.73" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (102 samples, 1.73%)</title><rect x="594.8" y="1989" width="20.4" height="15.0" fill="rgb(208,188,44)" rx="2" ry="2" />
<text  x="597.80" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="565.6" y="1749" width="0.2" height="15.0" fill="rgb(224,229,10)" rx="2" ry="2" />
<text  x="568.59" y="1759.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="324.3" y="1717" width="0.2" height="15.0" fill="rgb(229,24,36)" rx="2" ry="2" />
<text  x="327.31" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="453.2" y="1941" width="0.8" height="15.0" fill="rgb(211,27,44)" rx="2" ry="2" />
<text  x="456.15" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (4 samples, 0.07%)</title><rect x="677.6" y="1829" width="0.8" height="15.0" fill="rgb(218,86,11)" rx="2" ry="2" />
<text  x="680.63" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (17 samples, 0.29%)</title><rect x="387.7" y="1925" width="3.4" height="15.0" fill="rgb(233,56,35)" rx="2" ry="2" />
<text  x="390.73" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.2" y="1925" width="0.8" height="15.0" fill="rgb(210,144,19)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.2" y="1925" width="0.8" height="15.0" fill="rgb(252,158,21)" rx="2" ry="2" />
<text  x="14.20" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="321.5" y="1669" width="0.2" height="15.0" fill="rgb(212,73,17)" rx="2" ry="2" />
<text  x="324.51" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (4 samples, 0.07%)</title><rect x="584.8" y="2005" width="0.8" height="15.0" fill="rgb(220,39,20)" rx="2" ry="2" />
<text  x="587.79" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="610.8" y="1845" width="0.2" height="15.0" fill="rgb(231,32,54)" rx="2" ry="2" />
<text  x="613.80" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (5 samples, 0.08%)</title><rect x="845.5" y="1925" width="1.0" height="15.0" fill="rgb(223,167,7)" rx="2" ry="2" />
<text  x="848.48" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1120.2" y="1477" width="0.2" height="15.0" fill="rgb(240,112,53)" rx="2" ry="2" />
<text  x="1123.18" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (10 samples, 0.17%)</title><rect x="716.6" y="1973" width="2.0" height="15.0" fill="rgb(251,52,7)" rx="2" ry="2" />
<text  x="719.64" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.2" y="1925" width="0.2" height="15.0" fill="rgb(213,105,32)" rx="2" ry="2" />
<text  x="65.22" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (107 samples, 1.81%)</title><rect x="594.8" y="2021" width="21.4" height="15.0" fill="rgb(208,191,50)" rx="2" ry="2" />
<text  x="597.80" y="2031.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb_core (46 samples, 0.78%)</title><rect x="1111.0" y="1669" width="9.2" height="15.0" fill="rgb(234,218,1)" rx="2" ry="2" />
<text  x="1113.97" y="1679.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="664.0" y="1653" width="0.2" height="15.0" fill="rgb(227,145,12)" rx="2" ry="2" />
<text  x="667.02" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="590.2" y="1973" width="0.4" height="15.0" fill="rgb(254,18,7)" rx="2" ry="2" />
<text  x="593.20" y="1983.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="336.7" y="1653" width="0.2" height="15.0" fill="rgb(229,164,17)" rx="2" ry="2" />
<text  x="339.71" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="167.7" y="1989" width="0.8" height="15.0" fill="rgb(231,162,19)" rx="2" ry="2" />
<text  x="170.65" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (5 samples, 0.08%)</title><rect x="846.9" y="1909" width="1.0" height="15.0" fill="rgb(228,191,23)" rx="2" ry="2" />
<text  x="849.88" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (3 samples, 0.05%)</title><rect x="80.4" y="1909" width="0.6" height="15.0" fill="rgb(245,196,22)" rx="2" ry="2" />
<text  x="83.42" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="626.2" y="1717" width="0.2" height="15.0" fill="rgb(215,112,26)" rx="2" ry="2" />
<text  x="629.21" y="1727.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="774.7" y="1685" width="0.2" height="15.0" fill="rgb(217,30,39)" rx="2" ry="2" />
<text  x="777.66" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.61%)</title><rect x="902.7" y="2005" width="7.2" height="15.0" fill="rgb(251,20,36)" rx="2" ry="2" />
<text  x="905.70" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="357.1" y="1669" width="0.2" height="15.0" fill="rgb(205,180,34)" rx="2" ry="2" />
<text  x="360.12" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="998.5" y="1989" width="0.8" height="15.0" fill="rgb(242,200,32)" rx="2" ry="2" />
<text  x="1001.54" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="933.7" y="1765" width="0.2" height="15.0" fill="rgb(254,172,9)" rx="2" ry="2" />
<text  x="936.71" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (173 samples, 2.93%)</title><rect x="594.4" y="2037" width="34.6" height="15.0" fill="rgb(233,228,13)" rx="2" ry="2" />
<text  x="597.40" y="2047.5" >fa..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (1 samples, 0.02%)</title><rect x="719.0" y="1989" width="0.2" height="15.0" fill="rgb(248,107,13)" rx="2" ry="2" />
<text  x="722.04" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="271.9" y="1813" width="0.4" height="15.0" fill="rgb(243,154,16)" rx="2" ry="2" />
<text  x="274.89" y="1823.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="312.7" y="1781" width="0.2" height="15.0" fill="rgb(225,47,19)" rx="2" ry="2" />
<text  x="315.70" y="1791.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="158.7" y="1925" width="0.2" height="15.0" fill="rgb(253,118,40)" rx="2" ry="2" />
<text  x="161.65" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1120.2" y="1445" width="0.2" height="15.0" fill="rgb(243,32,10)" rx="2" ry="2" />
<text  x="1123.18" y="1455.5" ></text>
</g>
<g >
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="1125.6" y="1589" width="0.2" height="15.0" fill="rgb(250,152,49)" rx="2" ry="2" />
<text  x="1128.58" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="120.4" y="1461" width="0.2" height="15.0" fill="rgb(250,12,27)" rx="2" ry="2" />
<text  x="123.44" y="1471.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.2" y="1893" width="0.8" height="15.0" fill="rgb(247,106,53)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (8 samples, 0.14%)</title><rect x="786.9" y="1573" width="1.6" height="15.0" fill="rgb(240,63,3)" rx="2" ry="2" />
<text  x="789.86" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="935.1" y="1941" width="0.2" height="15.0" fill="rgb(220,121,28)" rx="2" ry="2" />
<text  x="938.11" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="831.9" y="1717" width="0.2" height="15.0" fill="rgb(217,74,13)" rx="2" ry="2" />
<text  x="834.88" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (2 samples, 0.03%)</title><rect x="627.2" y="1989" width="0.4" height="15.0" fill="rgb(254,134,12)" rx="2" ry="2" />
<text  x="630.21" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="578.6" y="1845" width="0.2" height="15.0" fill="rgb(211,90,23)" rx="2" ry="2" />
<text  x="581.59" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="625.0" y="1813" width="0.2" height="15.0" fill="rgb(238,212,27)" rx="2" ry="2" />
<text  x="628.01" y="1823.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="352.1" y="2005" width="0.2" height="15.0" fill="rgb(239,19,42)" rx="2" ry="2" />
<text  x="355.12" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="430.5" y="2021" width="2.6" height="15.0" fill="rgb(249,224,26)" rx="2" ry="2" />
<text  x="433.54" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="175.5" y="1989" width="0.2" height="15.0" fill="rgb(219,68,42)" rx="2" ry="2" />
<text  x="178.46" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="649.0" y="1925" width="0.2" height="15.0" fill="rgb(244,8,50)" rx="2" ry="2" />
<text  x="652.02" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="391.1" y="1925" width="0.4" height="15.0" fill="rgb(215,78,39)" rx="2" ry="2" />
<text  x="394.13" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="113.8" y="37" width="0.6" height="15.0" fill="rgb(223,216,7)" rx="2" ry="2" />
<text  x="116.84" y="47.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="286.5" y="1461" width="0.2" height="15.0" fill="rgb(224,41,19)" rx="2" ry="2" />
<text  x="289.49" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="278.7" y="1669" width="0.2" height="15.0" fill="rgb(252,9,18)" rx="2" ry="2" />
<text  x="281.69" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="655.0" y="1989" width="0.2" height="15.0" fill="rgb(249,179,15)" rx="2" ry="2" />
<text  x="658.02" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="400.1" y="1765" width="0.2" height="15.0" fill="rgb(233,85,32)" rx="2" ry="2" />
<text  x="403.13" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="631.6" y="2005" width="1.4" height="15.0" fill="rgb(209,218,34)" rx="2" ry="2" />
<text  x="634.61" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="917" width="15.4" height="15.0" fill="rgb(208,57,45)" rx="2" ry="2" />
<text  x="106.43" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1049.6" y="1829" width="0.2" height="15.0" fill="rgb(243,214,44)" rx="2" ry="2" />
<text  x="1052.55" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="126.4" y="1717" width="0.2" height="15.0" fill="rgb(252,107,25)" rx="2" ry="2" />
<text  x="129.44" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="843.7" y="1861" width="0.2" height="15.0" fill="rgb(230,205,11)" rx="2" ry="2" />
<text  x="846.68" y="1871.5" ></text>
</g>
<g >
<title>skb_release_data (46 samples, 0.78%)</title><rect x="1069.2" y="1893" width="9.2" height="15.0" fill="rgb(243,172,39)" rx="2" ry="2" />
<text  x="1072.16" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="565.6" y="1957" width="0.2" height="15.0" fill="rgb(244,79,12)" rx="2" ry="2" />
<text  x="568.59" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="641.4" y="1957" width="0.2" height="15.0" fill="rgb(247,111,26)" rx="2" ry="2" />
<text  x="644.41" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="27.8" y="1957" width="0.2" height="15.0" fill="rgb(232,30,32)" rx="2" ry="2" />
<text  x="30.81" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="890.5" y="1941" width="0.2" height="15.0" fill="rgb(214,172,46)" rx="2" ry="2" />
<text  x="893.50" y="1951.5" ></text>
</g>
<g >
<title>SYSC_accept4 (1 samples, 0.02%)</title><rect x="356.9" y="1989" width="0.2" height="15.0" fill="rgb(236,67,11)" rx="2" ry="2" />
<text  x="359.92" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (554 samples, 9.39%)</title><rect x="229.7" y="2021" width="110.8" height="15.0" fill="rgb(228,214,13)" rx="2" ry="2" />
<text  x="232.67" y="2031.5" >entry_SYSCALL..</text>
</g>
<g >
<title>tcp_v4_do_rcv (8 samples, 0.14%)</title><rect x="286.5" y="1525" width="1.6" height="15.0" fill="rgb(222,62,30)" rx="2" ry="2" />
<text  x="289.49" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="647.4" y="1893" width="0.2" height="15.0" fill="rgb(223,76,52)" rx="2" ry="2" />
<text  x="650.42" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="244.5" y="1765" width="0.2" height="15.0" fill="rgb(244,146,9)" rx="2" ry="2" />
<text  x="247.48" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="875.7" y="1957" width="0.4" height="15.0" fill="rgb(228,7,0)" rx="2" ry="2" />
<text  x="878.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.48%)</title><rect x="103.0" y="1605" width="17.4" height="15.0" fill="rgb(253,41,2)" rx="2" ry="2" />
<text  x="106.03" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="835.7" y="1797" width="0.2" height="15.0" fill="rgb(219,21,24)" rx="2" ry="2" />
<text  x="838.68" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="306.5" y="1653" width="0.2" height="15.0" fill="rgb(228,165,3)" rx="2" ry="2" />
<text  x="309.50" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="829.9" y="1541" width="0.2" height="15.0" fill="rgb(206,55,28)" rx="2" ry="2" />
<text  x="832.88" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="117.6" y="101" width="0.2" height="15.0" fill="rgb(220,170,1)" rx="2" ry="2" />
<text  x="120.64" y="111.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="847.7" y="1861" width="0.2" height="15.0" fill="rgb(213,17,33)" rx="2" ry="2" />
<text  x="850.68" y="1871.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="212.5" y="1861" width="0.2" height="15.0" fill="rgb(217,112,6)" rx="2" ry="2" />
<text  x="215.47" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="611.4" y="1813" width="0.2" height="15.0" fill="rgb(231,164,17)" rx="2" ry="2" />
<text  x="614.40" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1016.1" y="1845" width="0.2" height="15.0" fill="rgb(237,193,20)" rx="2" ry="2" />
<text  x="1019.14" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="641.4" y="1941" width="0.2" height="15.0" fill="rgb(220,48,34)" rx="2" ry="2" />
<text  x="644.41" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="264.7" y="1749" width="0.2" height="15.0" fill="rgb(249,24,48)" rx="2" ry="2" />
<text  x="267.69" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="995.9" y="1973" width="0.4" height="15.0" fill="rgb(242,215,45)" rx="2" ry="2" />
<text  x="998.93" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1139.8" y="2037" width="0.4" height="15.0" fill="rgb(224,42,45)" rx="2" ry="2" />
<text  x="1142.78" y="2047.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="765.9" y="1717" width="0.2" height="15.0" fill="rgb(221,35,33)" rx="2" ry="2" />
<text  x="768.86" y="1727.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="758.5" y="1765" width="0.6" height="15.0" fill="rgb(214,177,7)" rx="2" ry="2" />
<text  x="761.45" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="218.3" y="1877" width="0.4" height="15.0" fill="rgb(231,90,34)" rx="2" ry="2" />
<text  x="221.27" y="1887.5" ></text>
</g>
<g >
<title>__ip_local_out (9 samples, 0.15%)</title><rect x="783.1" y="1637" width="1.8" height="15.0" fill="rgb(207,95,50)" rx="2" ry="2" />
<text  x="786.06" y="1647.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (8 samples, 0.14%)</title><rect x="99.8" y="2037" width="1.6" height="15.0" fill="rgb(249,99,49)" rx="2" ry="2" />
<text  x="102.83" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="525.6" y="1637" width="0.2" height="15.0" fill="rgb(224,159,13)" rx="2" ry="2" />
<text  x="528.57" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (11 samples, 0.19%)</title><rect x="1147.4" y="2053" width="2.2" height="15.0" fill="rgb(211,120,7)" rx="2" ry="2" />
<text  x="1150.39" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="546.4" y="1941" width="0.6" height="15.0" fill="rgb(248,61,25)" rx="2" ry="2" />
<text  x="549.38" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1067.8" y="1765" width="0.4" height="15.0" fill="rgb(242,164,13)" rx="2" ry="2" />
<text  x="1070.76" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="853.3" y="1845" width="0.2" height="15.0" fill="rgb(238,131,19)" rx="2" ry="2" />
<text  x="856.29" y="1855.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="916.5" y="1733" width="0.2" height="15.0" fill="rgb(225,54,17)" rx="2" ry="2" />
<text  x="919.51" y="1743.5" ></text>
</g>
<g >
<title>accept4@plt (1 samples, 0.02%)</title><rect x="21.2" y="2005" width="0.2" height="15.0" fill="rgb(215,23,16)" rx="2" ry="2" />
<text  x="24.20" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="633.8" y="2037" width="1.8" height="15.0" fill="rgb(233,178,11)" rx="2" ry="2" />
<text  x="636.81" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="697.6" y="1701" width="0.2" height="15.0" fill="rgb(242,125,53)" rx="2" ry="2" />
<text  x="700.63" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1054.4" y="1861" width="0.2" height="15.0" fill="rgb(224,216,40)" rx="2" ry="2" />
<text  x="1057.35" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="752.5" y="1605" width="0.2" height="15.0" fill="rgb(207,186,8)" rx="2" ry="2" />
<text  x="755.45" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="583.0" y="1813" width="0.2" height="15.0" fill="rgb(210,36,13)" rx="2" ry="2" />
<text  x="585.99" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="954.7" y="1861" width="0.2" height="15.0" fill="rgb(250,159,8)" rx="2" ry="2" />
<text  x="957.72" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="855.3" y="1893" width="1.0" height="15.0" fill="rgb(221,158,37)" rx="2" ry="2" />
<text  x="858.29" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (6 samples, 0.10%)</title><rect x="60.4" y="1909" width="1.2" height="15.0" fill="rgb(254,152,49)" rx="2" ry="2" />
<text  x="63.42" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="271.9" y="1717" width="0.4" height="15.0" fill="rgb(238,103,25)" rx="2" ry="2" />
<text  x="274.89" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="133.4" y="1941" width="0.4" height="15.0" fill="rgb(205,13,22)" rx="2" ry="2" />
<text  x="136.44" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1188.8" y="1925" width="0.4" height="15.0" fill="rgb(218,126,29)" rx="2" ry="2" />
<text  x="1191.80" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="914.9" y="1669" width="0.2" height="15.0" fill="rgb(243,191,14)" rx="2" ry="2" />
<text  x="917.91" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="198.5" y="2005" width="0.2" height="15.0" fill="rgb(209,176,11)" rx="2" ry="2" />
<text  x="201.46" y="2015.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.2" y="1877" width="0.8" height="15.0" fill="rgb(235,186,48)" rx="2" ry="2" />
<text  x="14.20" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="180.5" y="1861" width="0.2" height="15.0" fill="rgb(242,77,19)" rx="2" ry="2" />
<text  x="183.46" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="336.7" y="1829" width="0.2" height="15.0" fill="rgb(211,31,34)" rx="2" ry="2" />
<text  x="339.71" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="590.4" y="1621" width="0.2" height="15.0" fill="rgb(247,46,12)" rx="2" ry="2" />
<text  x="593.40" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="79.4" y="1845" width="0.2" height="15.0" fill="rgb(239,58,35)" rx="2" ry="2" />
<text  x="82.42" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="1091.2" y="1781" width="0.6" height="15.0" fill="rgb(221,210,16)" rx="2" ry="2" />
<text  x="1094.17" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1005.1" y="1861" width="0.2" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="1008.14" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="71.4" y="1701" width="0.2" height="15.0" fill="rgb(225,170,0)" rx="2" ry="2" />
<text  x="74.42" y="1711.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.2" y="1909" width="0.8" height="15.0" fill="rgb(215,170,44)" rx="2" ry="2" />
<text  x="14.20" y="1919.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="858.5" y="1621" width="0.2" height="15.0" fill="rgb(220,188,11)" rx="2" ry="2" />
<text  x="861.49" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="54.2" y="1797" width="0.2" height="15.0" fill="rgb(218,119,22)" rx="2" ry="2" />
<text  x="57.21" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="223.1" y="1765" width="0.2" height="15.0" fill="rgb(240,48,34)" rx="2" ry="2" />
<text  x="226.07" y="1775.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="560.4" y="1797" width="0.2" height="15.0" fill="rgb(218,8,43)" rx="2" ry="2" />
<text  x="563.39" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1145.4" y="1973" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1148.38" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="428.5" y="1765" width="0.2" height="15.0" fill="rgb(207,72,13)" rx="2" ry="2" />
<text  x="431.54" y="1775.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="841.1" y="1637" width="0.2" height="15.0" fill="rgb(246,144,51)" rx="2" ry="2" />
<text  x="844.08" y="1647.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="339.5" y="1813" width="0.2" height="15.0" fill="rgb(239,212,45)" rx="2" ry="2" />
<text  x="342.51" y="1823.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="357.3" y="1701" width="0.2" height="15.0" fill="rgb(215,81,9)" rx="2" ry="2" />
<text  x="360.32" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="956.3" y="2037" width="0.2" height="15.0" fill="rgb(245,195,47)" rx="2" ry="2" />
<text  x="959.32" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1189.0" y="1637" width="0.2" height="15.0" fill="rgb(236,105,0)" rx="2" ry="2" />
<text  x="1192.00" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="827.3" y="1749" width="0.2" height="15.0" fill="rgb(237,81,4)" rx="2" ry="2" />
<text  x="830.28" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (5 samples, 0.08%)</title><rect x="286.9" y="1477" width="1.0" height="15.0" fill="rgb(228,228,43)" rx="2" ry="2" />
<text  x="289.89" y="1487.5" ></text>
</g>
<g >
<title>__close_fd (12 samples, 0.20%)</title><rect x="832.5" y="1845" width="2.4" height="15.0" fill="rgb(217,106,4)" rx="2" ry="2" />
<text  x="835.48" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="139.4" y="1925" width="0.2" height="15.0" fill="rgb(229,140,25)" rx="2" ry="2" />
<text  x="142.44" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="363.5" y="1621" width="0.2" height="15.0" fill="rgb(206,196,43)" rx="2" ry="2" />
<text  x="366.52" y="1631.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1149.8" y="1717" width="0.2" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="1152.79" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="150.6" y="1813" width="0.2" height="15.0" fill="rgb(220,34,31)" rx="2" ry="2" />
<text  x="153.65" y="1823.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="707.2" y="1685" width="0.2" height="15.0" fill="rgb(243,95,20)" rx="2" ry="2" />
<text  x="710.24" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="914.9" y="1781" width="0.2" height="15.0" fill="rgb(238,22,27)" rx="2" ry="2" />
<text  x="917.91" y="1791.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="170.9" y="1941" width="0.2" height="15.0" fill="rgb(225,31,4)" rx="2" ry="2" />
<text  x="173.85" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="357.1" y="1573" width="0.2" height="15.0" fill="rgb(234,110,13)" rx="2" ry="2" />
<text  x="360.12" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="867.1" y="1989" width="0.2" height="15.0" fill="rgb(208,201,30)" rx="2" ry="2" />
<text  x="870.09" y="1999.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="868.7" y="1989" width="0.2" height="15.0" fill="rgb(247,22,18)" rx="2" ry="2" />
<text  x="871.69" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (53 samples, 0.90%)</title><rect x="210.7" y="1925" width="10.6" height="15.0" fill="rgb(207,124,38)" rx="2" ry="2" />
<text  x="213.67" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="843.5" y="1669" width="0.2" height="15.0" fill="rgb(233,71,37)" rx="2" ry="2" />
<text  x="846.48" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="49.4" y="1877" width="0.4" height="15.0" fill="rgb(208,147,19)" rx="2" ry="2" />
<text  x="52.41" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="308.1" y="1573" width="0.2" height="15.0" fill="rgb(210,188,37)" rx="2" ry="2" />
<text  x="311.10" y="1583.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="220.9" y="1829" width="0.4" height="15.0" fill="rgb(244,196,14)" rx="2" ry="2" />
<text  x="223.87" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="858.5" y="1701" width="0.2" height="15.0" fill="rgb(215,46,14)" rx="2" ry="2" />
<text  x="861.49" y="1711.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="711.6" y="1973" width="0.2" height="15.0" fill="rgb(211,71,38)" rx="2" ry="2" />
<text  x="714.64" y="1983.5" ></text>
</g>
<g >
<title>tcp_close (319 samples, 5.41%)</title><rect x="761.9" y="1749" width="63.8" height="15.0" fill="rgb(236,167,52)" rx="2" ry="2" />
<text  x="764.85" y="1759.5" >tcp_close</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.5" y="1973" width="0.2" height="15.0" fill="rgb(249,145,0)" rx="2" ry="2" />
<text  x="893.50" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.2" y="1941" width="0.2" height="15.0" fill="rgb(248,185,41)" rx="2" ry="2" />
<text  x="65.22" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="825.1" y="1429" width="0.2" height="15.0" fill="rgb(237,152,15)" rx="2" ry="2" />
<text  x="828.08" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="336.7" y="1717" width="0.2" height="15.0" fill="rgb(205,132,6)" rx="2" ry="2" />
<text  x="339.71" y="1727.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="393.1" y="1941" width="0.8" height="15.0" fill="rgb(216,51,38)" rx="2" ry="2" />
<text  x="396.13" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="117.6" y="85" width="0.2" height="15.0" fill="rgb(250,39,54)" rx="2" ry="2" />
<text  x="120.64" y="95.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="963.9" y="1941" width="0.2" height="15.0" fill="rgb(254,76,37)" rx="2" ry="2" />
<text  x="966.92" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="712.4" y="1669" width="0.2" height="15.0" fill="rgb(248,86,36)" rx="2" ry="2" />
<text  x="715.44" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (3 samples, 0.05%)</title><rect x="885.5" y="1957" width="0.6" height="15.0" fill="rgb(246,37,16)" rx="2" ry="2" />
<text  x="888.50" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="332.5" y="1845" width="0.2" height="15.0" fill="rgb(250,176,40)" rx="2" ry="2" />
<text  x="335.51" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="256.5" y="1717" width="0.2" height="15.0" fill="rgb(254,185,8)" rx="2" ry="2" />
<text  x="259.48" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="916.5" y="1845" width="0.2" height="15.0" fill="rgb(243,16,10)" rx="2" ry="2" />
<text  x="919.51" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="222.7" y="1941" width="0.2" height="15.0" fill="rgb(231,37,7)" rx="2" ry="2" />
<text  x="225.67" y="1951.5" ></text>
</g>
<g >
<title>sock_poll (51 samples, 0.86%)</title><rect x="473.8" y="1957" width="10.2" height="15.0" fill="rgb(253,4,15)" rx="2" ry="2" />
<text  x="476.76" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="244.9" y="1925" width="0.4" height="15.0" fill="rgb(241,56,13)" rx="2" ry="2" />
<text  x="247.88" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="123.8" y="1957" width="0.4" height="15.0" fill="rgb(246,144,20)" rx="2" ry="2" />
<text  x="126.84" y="1967.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="776.5" y="1701" width="0.2" height="15.0" fill="rgb(245,227,28)" rx="2" ry="2" />
<text  x="779.46" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1130.8" y="1877" width="0.2" height="15.0" fill="rgb(244,165,11)" rx="2" ry="2" />
<text  x="1133.78" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="922.5" y="1909" width="0.8" height="15.0" fill="rgb(207,36,50)" rx="2" ry="2" />
<text  x="925.51" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="146.0" y="1893" width="0.2" height="15.0" fill="rgb(217,159,43)" rx="2" ry="2" />
<text  x="149.05" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="137.8" y="2005" width="0.2" height="15.0" fill="rgb(205,216,53)" rx="2" ry="2" />
<text  x="140.84" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (22 samples, 0.37%)</title><rect x="1114.0" y="1477" width="4.4" height="15.0" fill="rgb(248,114,49)" rx="2" ry="2" />
<text  x="1116.97" y="1487.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="587.6" y="1909" width="0.2" height="15.0" fill="rgb(205,214,39)" rx="2" ry="2" />
<text  x="590.60" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.6" y="533" width="0.2" height="15.0" fill="rgb(243,76,8)" rx="2" ry="2" />
<text  x="121.64" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="540.2" y="1861" width="0.2" height="15.0" fill="rgb(224,189,27)" rx="2" ry="2" />
<text  x="543.18" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="500.0" y="1941" width="0.4" height="15.0" fill="rgb(246,164,15)" rx="2" ry="2" />
<text  x="502.97" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (551 samples, 9.34%)</title><rect x="725.2" y="1893" width="110.3" height="15.0" fill="rgb(206,204,19)" rx="2" ry="2" />
<text  x="728.24" y="1903.5" >entry_SYSCALL..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1189.0" y="1653" width="0.2" height="15.0" fill="rgb(208,128,33)" rx="2" ry="2" />
<text  x="1192.00" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="168.1" y="1957" width="0.2" height="15.0" fill="rgb(222,6,10)" rx="2" ry="2" />
<text  x="171.05" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="155.8" y="1909" width="0.2" height="15.0" fill="rgb(222,196,39)" rx="2" ry="2" />
<text  x="158.85" y="1919.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="1026.1" y="2053" width="0.6" height="15.0" fill="rgb(248,187,46)" rx="2" ry="2" />
<text  x="1029.14" y="2063.5" ></text>
</g>
<g >
<title>ip_queue_xmit (145 samples, 2.46%)</title><rect x="278.9" y="1813" width="29.0" height="15.0" fill="rgb(232,102,16)" rx="2" ry="2" />
<text  x="281.89" y="1823.5" >ip..</text>
</g>
<g >
<title>__GI___getsockname (92 samples, 1.56%)</title><rect x="596.6" y="1941" width="18.4" height="15.0" fill="rgb(248,224,12)" rx="2" ry="2" />
<text  x="599.60" y="1951.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="416.1" y="1685" width="0.2" height="15.0" fill="rgb(236,117,37)" rx="2" ry="2" />
<text  x="419.14" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="860.1" y="1845" width="0.2" height="15.0" fill="rgb(210,44,44)" rx="2" ry="2" />
<text  x="863.09" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8 samples, 0.14%)</title><rect x="786.9" y="1589" width="1.6" height="15.0" fill="rgb(247,96,33)" rx="2" ry="2" />
<text  x="789.86" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1177.6" y="1973" width="0.2" height="15.0" fill="rgb(221,49,1)" rx="2" ry="2" />
<text  x="1180.60" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="956.3" y="2005" width="0.2" height="15.0" fill="rgb(250,88,14)" rx="2" ry="2" />
<text  x="959.32" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="865.9" y="1973" width="1.2" height="15.0" fill="rgb(248,35,22)" rx="2" ry="2" />
<text  x="868.89" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="359.5" y="1829" width="0.2" height="15.0" fill="rgb(243,44,21)" rx="2" ry="2" />
<text  x="362.52" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="504.8" y="1925" width="0.4" height="15.0" fill="rgb(225,51,36)" rx="2" ry="2" />
<text  x="507.77" y="1935.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="809.9" y="1365" width="0.2" height="15.0" fill="rgb(209,153,26)" rx="2" ry="2" />
<text  x="812.87" y="1375.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="1000.3" y="2037" width="0.2" height="15.0" fill="rgb(244,21,36)" rx="2" ry="2" />
<text  x="1003.34" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="889.1" y="1605" width="0.2" height="15.0" fill="rgb(212,65,43)" rx="2" ry="2" />
<text  x="892.10" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="588.2" y="1765" width="0.2" height="15.0" fill="rgb(246,203,3)" rx="2" ry="2" />
<text  x="591.20" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="332.5" y="1781" width="0.2" height="15.0" fill="rgb(249,186,37)" rx="2" ry="2" />
<text  x="335.51" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1120.2" y="1605" width="0.2" height="15.0" fill="rgb(247,155,51)" rx="2" ry="2" />
<text  x="1123.18" y="1615.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="171.1" y="1973" width="0.2" height="15.0" fill="rgb(237,187,25)" rx="2" ry="2" />
<text  x="174.05" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="972.3" y="1957" width="0.2" height="15.0" fill="rgb(219,35,9)" rx="2" ry="2" />
<text  x="975.33" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="668.0" y="1957" width="1.4" height="15.0" fill="rgb(242,76,49)" rx="2" ry="2" />
<text  x="671.02" y="1967.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="247.9" y="1893" width="1.2" height="15.0" fill="rgb(229,192,0)" rx="2" ry="2" />
<text  x="250.88" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="453.2" y="1893" width="0.8" height="15.0" fill="rgb(220,178,4)" rx="2" ry="2" />
<text  x="456.15" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1005.1" y="1797" width="0.2" height="15.0" fill="rgb(240,108,30)" rx="2" ry="2" />
<text  x="1008.14" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="565.6" y="1781" width="0.2" height="15.0" fill="rgb(209,34,20)" rx="2" ry="2" />
<text  x="568.59" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="857.9" y="1925" width="0.2" height="15.0" fill="rgb(231,32,50)" rx="2" ry="2" />
<text  x="860.89" y="1935.5" ></text>
</g>
<g >
<title>alloc_inode (41 samples, 0.70%)</title><rect x="400.5" y="1925" width="8.2" height="15.0" fill="rgb(253,216,20)" rx="2" ry="2" />
<text  x="403.53" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="285.9" y="1589" width="0.2" height="15.0" fill="rgb(250,198,41)" rx="2" ry="2" />
<text  x="288.89" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1178.0" y="1925" width="0.2" height="15.0" fill="rgb(208,148,30)" rx="2" ry="2" />
<text  x="1181.00" y="1935.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.2" y="1941" width="0.8" height="15.0" fill="rgb(235,86,21)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="603.4" y="1701" width="0.2" height="15.0" fill="rgb(208,141,13)" rx="2" ry="2" />
<text  x="606.40" y="1711.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="243.7" y="1877" width="0.2" height="15.0" fill="rgb(232,46,7)" rx="2" ry="2" />
<text  x="246.68" y="1887.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="272.1" y="1637" width="0.2" height="15.0" fill="rgb(229,111,49)" rx="2" ry="2" />
<text  x="275.09" y="1647.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="965.5" y="1989" width="0.2" height="15.0" fill="rgb(232,68,7)" rx="2" ry="2" />
<text  x="968.52" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (8 samples, 0.14%)</title><rect x="841.5" y="1925" width="1.6" height="15.0" fill="rgb(211,71,25)" rx="2" ry="2" />
<text  x="844.48" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="151.0" y="1909" width="0.2" height="15.0" fill="rgb(231,219,34)" rx="2" ry="2" />
<text  x="154.05" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="306.5" y="1605" width="0.2" height="15.0" fill="rgb(250,114,21)" rx="2" ry="2" />
<text  x="309.50" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="256.5" y="1845" width="0.2" height="15.0" fill="rgb(254,156,1)" rx="2" ry="2" />
<text  x="259.48" y="1855.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (2 samples, 0.03%)</title><rect x="101.4" y="2021" width="0.4" height="15.0" fill="rgb(248,103,11)" rx="2" ry="2" />
<text  x="104.43" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="757" width="15.4" height="15.0" fill="rgb(235,118,45)" rx="2" ry="2" />
<text  x="106.43" y="767.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="650.4" y="1973" width="0.2" height="15.0" fill="rgb(250,4,20)" rx="2" ry="2" />
<text  x="653.42" y="1983.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.02%)</title><rect x="396.1" y="1941" width="0.2" height="15.0" fill="rgb(252,185,32)" rx="2" ry="2" />
<text  x="399.13" y="1951.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="224.5" y="2037" width="0.6" height="15.0" fill="rgb(250,221,40)" rx="2" ry="2" />
<text  x="227.47" y="2047.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1160.4" y="1941" width="0.2" height="15.0" fill="rgb(229,98,42)" rx="2" ry="2" />
<text  x="1163.39" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="483.6" y="1925" width="0.2" height="15.0" fill="rgb(208,135,54)" rx="2" ry="2" />
<text  x="486.56" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1144.2" y="1957" width="0.2" height="15.0" fill="rgb(219,212,50)" rx="2" ry="2" />
<text  x="1147.18" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1016.1" y="1941" width="0.2" height="15.0" fill="rgb(231,167,31)" rx="2" ry="2" />
<text  x="1019.14" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (1 samples, 0.02%)</title><rect x="64.0" y="1973" width="0.2" height="15.0" fill="rgb(250,223,28)" rx="2" ry="2" />
<text  x="67.02" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="165.3" y="1781" width="0.2" height="15.0" fill="rgb(229,106,33)" rx="2" ry="2" />
<text  x="168.25" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="647.2" y="1909" width="0.4" height="15.0" fill="rgb(211,65,49)" rx="2" ry="2" />
<text  x="650.22" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="357.1" y="1557" width="0.2" height="15.0" fill="rgb(205,13,37)" rx="2" ry="2" />
<text  x="360.12" y="1567.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (20 samples, 0.34%)</title><rect x="363.7" y="1941" width="4.0" height="15.0" fill="rgb(249,107,54)" rx="2" ry="2" />
<text  x="366.72" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="851.7" y="1909" width="0.4" height="15.0" fill="rgb(235,67,4)" rx="2" ry="2" />
<text  x="854.69" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="843.5" y="1877" width="0.2" height="15.0" fill="rgb(247,140,34)" rx="2" ry="2" />
<text  x="846.48" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="535.8" y="1957" width="0.6" height="15.0" fill="rgb(241,194,43)" rx="2" ry="2" />
<text  x="538.78" y="1967.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (14 samples, 0.24%)</title><rect x="962.5" y="2037" width="2.8" height="15.0" fill="rgb(251,184,25)" rx="2" ry="2" />
<text  x="965.52" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (11 samples, 0.19%)</title><rect x="1147.4" y="2037" width="2.2" height="15.0" fill="rgb(232,169,10)" rx="2" ry="2" />
<text  x="1150.39" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.2" y="1909" width="0.8" height="15.0" fill="rgb(205,121,8)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="831.9" y="1813" width="0.2" height="15.0" fill="rgb(235,61,11)" rx="2" ry="2" />
<text  x="834.88" y="1823.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="567.0" y="1957" width="0.4" height="15.0" fill="rgb(207,176,0)" rx="2" ry="2" />
<text  x="569.99" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="1145.0" y="2021" width="0.2" height="15.0" fill="rgb(244,30,54)" rx="2" ry="2" />
<text  x="1147.98" y="2031.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.10%)</title><rect x="181.7" y="2021" width="1.2" height="15.0" fill="rgb(251,175,52)" rx="2" ry="2" />
<text  x="184.66" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1125.6" y="1797" width="0.2" height="15.0" fill="rgb(208,136,18)" rx="2" ry="2" />
<text  x="1128.58" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_init_ts_off (1 samples, 0.02%)</title><rect x="936.3" y="1637" width="0.2" height="15.0" fill="rgb(216,198,40)" rx="2" ry="2" />
<text  x="939.31" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="854.9" y="1733" width="0.2" height="15.0" fill="rgb(245,142,25)" rx="2" ry="2" />
<text  x="857.89" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="141.8" y="1909" width="0.2" height="15.0" fill="rgb(243,25,37)" rx="2" ry="2" />
<text  x="144.84" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.05%)</title><rect x="1175.6" y="1957" width="0.6" height="15.0" fill="rgb(249,78,49)" rx="2" ry="2" />
<text  x="1178.60" y="1967.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="751.9" y="1573" width="0.2" height="15.0" fill="rgb(215,167,53)" rx="2" ry="2" />
<text  x="754.85" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="71.4" y="1829" width="0.2" height="15.0" fill="rgb(213,30,19)" rx="2" ry="2" />
<text  x="74.42" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1139.0" y="1909" width="0.2" height="15.0" fill="rgb(218,191,53)" rx="2" ry="2" />
<text  x="1141.98" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1102.0" y="1877" width="0.8" height="15.0" fill="rgb(248,215,14)" rx="2" ry="2" />
<text  x="1104.97" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.46%)</title><rect x="636.2" y="2021" width="5.4" height="15.0" fill="rgb(240,82,10)" rx="2" ry="2" />
<text  x="639.21" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="85.4" y="1973" width="0.2" height="15.0" fill="rgb(213,146,27)" rx="2" ry="2" />
<text  x="88.43" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="787.9" y="1157" width="0.2" height="15.0" fill="rgb(208,45,0)" rx="2" ry="2" />
<text  x="790.86" y="1167.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1081.8" y="1845" width="0.2" height="15.0" fill="rgb(245,94,49)" rx="2" ry="2" />
<text  x="1084.76" y="1855.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="567.6" y="1813" width="0.2" height="15.0" fill="rgb(234,181,53)" rx="2" ry="2" />
<text  x="570.59" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="267.1" y="1813" width="0.2" height="15.0" fill="rgb(214,109,21)" rx="2" ry="2" />
<text  x="270.09" y="1823.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1126.2" y="1653" width="0.2" height="15.0" fill="rgb(230,201,19)" rx="2" ry="2" />
<text  x="1129.18" y="1663.5" ></text>
</g>
<g >
<title>tcp_poll (48 samples, 0.81%)</title><rect x="474.2" y="1941" width="9.6" height="15.0" fill="rgb(248,86,42)" rx="2" ry="2" />
<text  x="477.16" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="71.4" y="1621" width="0.2" height="15.0" fill="rgb(253,105,52)" rx="2" ry="2" />
<text  x="74.42" y="1631.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="679.0" y="1829" width="1.2" height="15.0" fill="rgb(212,90,6)" rx="2" ry="2" />
<text  x="682.03" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1005.1" y="1973" width="0.2" height="15.0" fill="rgb(224,65,41)" rx="2" ry="2" />
<text  x="1008.14" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1033.5" y="2037" width="0.4" height="15.0" fill="rgb(232,220,13)" rx="2" ry="2" />
<text  x="1036.55" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="429.9" y="1989" width="0.6" height="15.0" fill="rgb(208,185,18)" rx="2" ry="2" />
<text  x="432.94" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="357.1" y="1621" width="0.2" height="15.0" fill="rgb(207,94,0)" rx="2" ry="2" />
<text  x="360.12" y="1631.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="120.4" y="1237" width="0.2" height="15.0" fill="rgb(251,168,36)" rx="2" ry="2" />
<text  x="123.44" y="1247.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="483.6" y="1525" width="0.2" height="15.0" fill="rgb(242,126,32)" rx="2" ry="2" />
<text  x="486.56" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="74.6" y="1813" width="0.2" height="15.0" fill="rgb(244,161,9)" rx="2" ry="2" />
<text  x="77.62" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1110.0" y="1701" width="0.2" height="15.0" fill="rgb(230,200,40)" rx="2" ry="2" />
<text  x="1112.97" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="576.0" y="1685" width="0.2" height="15.0" fill="rgb(209,180,50)" rx="2" ry="2" />
<text  x="578.99" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="118.6" y="149" width="0.2" height="15.0" fill="rgb(232,128,6)" rx="2" ry="2" />
<text  x="121.64" y="159.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1009.1" y="1973" width="0.2" height="15.0" fill="rgb(211,159,19)" rx="2" ry="2" />
<text  x="1012.14" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="454.0" y="1941" width="0.2" height="15.0" fill="rgb(240,77,45)" rx="2" ry="2" />
<text  x="456.95" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.08%)</title><rect x="286.9" y="1461" width="1.0" height="15.0" fill="rgb(220,107,19)" rx="2" ry="2" />
<text  x="289.89" y="1471.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="483.8" y="1941" width="0.2" height="15.0" fill="rgb(228,125,1)" rx="2" ry="2" />
<text  x="486.76" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="357.3" y="1733" width="0.2" height="15.0" fill="rgb(247,10,3)" rx="2" ry="2" />
<text  x="360.32" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="578.6" y="1765" width="0.2" height="15.0" fill="rgb(216,46,48)" rx="2" ry="2" />
<text  x="581.59" y="1775.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="969.1" y="1525" width="0.2" height="15.0" fill="rgb(241,26,39)" rx="2" ry="2" />
<text  x="972.13" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="523.0" y="1573" width="0.2" height="15.0" fill="rgb(218,98,29)" rx="2" ry="2" />
<text  x="525.97" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="914.1" y="1925" width="0.2" height="15.0" fill="rgb(213,81,40)" rx="2" ry="2" />
<text  x="917.11" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="933.7" y="1573" width="0.2" height="15.0" fill="rgb(224,133,45)" rx="2" ry="2" />
<text  x="936.71" y="1583.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="617.4" y="1973" width="0.2" height="15.0" fill="rgb(223,65,8)" rx="2" ry="2" />
<text  x="620.41" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="879.5" y="1893" width="0.2" height="15.0" fill="rgb(217,217,29)" rx="2" ry="2" />
<text  x="882.49" y="1903.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="804.3" y="1493" width="0.2" height="15.0" fill="rgb(233,100,37)" rx="2" ry="2" />
<text  x="807.27" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1126.2" y="1829" width="0.2" height="15.0" fill="rgb(234,155,40)" rx="2" ry="2" />
<text  x="1129.18" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="627.6" y="2005" width="0.2" height="15.0" fill="rgb(212,150,13)" rx="2" ry="2" />
<text  x="630.61" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="578.6" y="1589" width="0.2" height="15.0" fill="rgb(209,96,39)" rx="2" ry="2" />
<text  x="581.59" y="1599.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="855.7" y="1845" width="0.4" height="15.0" fill="rgb(233,67,53)" rx="2" ry="2" />
<text  x="858.69" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="669.2" y="1893" width="0.2" height="15.0" fill="rgb(247,34,9)" rx="2" ry="2" />
<text  x="672.22" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (56 samples, 0.95%)</title><rect x="641.6" y="2037" width="11.2" height="15.0" fill="rgb(248,61,28)" rx="2" ry="2" />
<text  x="644.61" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (2 samples, 0.03%)</title><rect x="646.0" y="1909" width="0.4" height="15.0" fill="rgb(246,48,17)" rx="2" ry="2" />
<text  x="649.02" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="890.5" y="1829" width="0.2" height="15.0" fill="rgb(231,177,50)" rx="2" ry="2" />
<text  x="893.50" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1139.0" y="1861" width="0.2" height="15.0" fill="rgb(227,134,42)" rx="2" ry="2" />
<text  x="1141.98" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="362.1" y="1941" width="0.2" height="15.0" fill="rgb(247,113,22)" rx="2" ry="2" />
<text  x="365.12" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="482.4" y="1893" width="0.2" height="15.0" fill="rgb(250,82,47)" rx="2" ry="2" />
<text  x="485.36" y="1903.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="285.9" y="1541" width="0.2" height="15.0" fill="rgb(231,106,11)" rx="2" ry="2" />
<text  x="288.89" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="831.7" y="1701" width="0.2" height="15.0" fill="rgb(243,84,46)" rx="2" ry="2" />
<text  x="834.68" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (1 samples, 0.02%)</title><rect x="175.7" y="2021" width="0.2" height="15.0" fill="rgb(231,6,16)" rx="2" ry="2" />
<text  x="178.66" y="2031.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="245.5" y="1909" width="0.4" height="15.0" fill="rgb(236,184,8)" rx="2" ry="2" />
<text  x="248.48" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="416.1" y="1797" width="0.2" height="15.0" fill="rgb(229,115,8)" rx="2" ry="2" />
<text  x="419.14" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="848.5" y="1877" width="0.2" height="15.0" fill="rgb(233,191,16)" rx="2" ry="2" />
<text  x="851.48" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="211.5" y="1685" width="0.2" height="15.0" fill="rgb(249,59,20)" rx="2" ry="2" />
<text  x="214.47" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (3 samples, 0.05%)</title><rect x="884.3" y="1925" width="0.6" height="15.0" fill="rgb(214,207,23)" rx="2" ry="2" />
<text  x="887.30" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="955.9" y="1989" width="0.4" height="15.0" fill="rgb(235,88,6)" rx="2" ry="2" />
<text  x="958.92" y="1999.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="658.4" y="1989" width="0.2" height="15.0" fill="rgb(228,4,10)" rx="2" ry="2" />
<text  x="661.42" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="647.4" y="1781" width="0.2" height="15.0" fill="rgb(216,4,23)" rx="2" ry="2" />
<text  x="650.42" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="120.4" y="1365" width="0.2" height="15.0" fill="rgb(253,89,52)" rx="2" ry="2" />
<text  x="123.44" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="914.1" y="1941" width="0.2" height="15.0" fill="rgb(247,51,31)" rx="2" ry="2" />
<text  x="917.11" y="1951.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="416.1" y="1669" width="0.2" height="15.0" fill="rgb(242,192,51)" rx="2" ry="2" />
<text  x="419.14" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="661.2" y="2021" width="0.6" height="15.0" fill="rgb(218,106,35)" rx="2" ry="2" />
<text  x="664.22" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="886.1" y="1797" width="0.2" height="15.0" fill="rgb(235,109,16)" rx="2" ry="2" />
<text  x="889.10" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="165.1" y="1925" width="0.2" height="15.0" fill="rgb(248,199,31)" rx="2" ry="2" />
<text  x="168.05" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="332.5" y="1557" width="0.2" height="15.0" fill="rgb(208,29,40)" rx="2" ry="2" />
<text  x="335.51" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1139.0" y="1765" width="0.2" height="15.0" fill="rgb(253,206,54)" rx="2" ry="2" />
<text  x="1141.98" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="969.7" y="1989" width="0.6" height="15.0" fill="rgb(229,4,4)" rx="2" ry="2" />
<text  x="972.73" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="312.9" y="1765" width="0.2" height="15.0" fill="rgb(232,33,52)" rx="2" ry="2" />
<text  x="315.90" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1142.0" y="2005" width="0.4" height="15.0" fill="rgb(252,164,42)" rx="2" ry="2" />
<text  x="1144.98" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="817.1" y="1669" width="0.2" height="15.0" fill="rgb(222,9,17)" rx="2" ry="2" />
<text  x="820.07" y="1679.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="971.1" y="2005" width="0.2" height="15.0" fill="rgb(251,180,16)" rx="2" ry="2" />
<text  x="974.13" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (46 samples, 0.78%)</title><rect x="21.6" y="2005" width="9.2" height="15.0" fill="rgb(243,99,42)" rx="2" ry="2" />
<text  x="24.60" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="914.7" y="1989" width="0.2" height="15.0" fill="rgb(217,30,54)" rx="2" ry="2" />
<text  x="917.71" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (62 samples, 1.05%)</title><rect x="616.2" y="2021" width="12.4" height="15.0" fill="rgb(243,115,21)" rx="2" ry="2" />
<text  x="619.21" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (128 samples, 2.17%)</title><rect x="37.4" y="1989" width="25.6" height="15.0" fill="rgb(239,45,7)" rx="2" ry="2" />
<text  x="40.41" y="1999.5" >f..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="914.1" y="1973" width="0.2" height="15.0" fill="rgb(248,160,20)" rx="2" ry="2" />
<text  x="917.11" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1130.8" y="1765" width="0.2" height="15.0" fill="rgb(220,31,9)" rx="2" ry="2" />
<text  x="1133.78" y="1775.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1130.6" y="1941" width="0.2" height="15.0" fill="rgb(246,102,3)" rx="2" ry="2" />
<text  x="1133.58" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="1054.4" y="1829" width="0.2" height="15.0" fill="rgb(250,49,30)" rx="2" ry="2" />
<text  x="1057.35" y="1839.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="273.1" y="1557" width="0.2" height="15.0" fill="rgb(206,220,42)" rx="2" ry="2" />
<text  x="276.09" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="954.7" y="1957" width="0.2" height="15.0" fill="rgb(227,181,34)" rx="2" ry="2" />
<text  x="957.72" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="180.5" y="1957" width="0.2" height="15.0" fill="rgb(225,88,23)" rx="2" ry="2" />
<text  x="183.46" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="215.5" y="1813" width="0.4" height="15.0" fill="rgb(245,211,27)" rx="2" ry="2" />
<text  x="218.47" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="880.5" y="1925" width="0.2" height="15.0" fill="rgb(251,31,32)" rx="2" ry="2" />
<text  x="883.50" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="1165.2" y="2053" width="0.2" height="15.0" fill="rgb(236,141,33)" rx="2" ry="2" />
<text  x="1168.19" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (18 samples, 0.31%)</title><rect x="881.3" y="1941" width="3.6" height="15.0" fill="rgb(239,134,18)" rx="2" ry="2" />
<text  x="884.30" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="383.1" y="1909" width="0.4" height="15.0" fill="rgb(237,159,24)" rx="2" ry="2" />
<text  x="386.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1429" width="16.8" height="15.0" fill="rgb(247,6,53)" rx="2" ry="2" />
<text  x="106.03" y="1439.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="972.3" y="1989" width="0.2" height="15.0" fill="rgb(222,132,50)" rx="2" ry="2" />
<text  x="975.33" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (1 samples, 0.02%)</title><rect x="18.4" y="2037" width="0.2" height="15.0" fill="rgb(241,179,15)" rx="2" ry="2" />
<text  x="21.40" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (1 samples, 0.02%)</title><rect x="859.9" y="1957" width="0.2" height="15.0" fill="rgb(229,64,6)" rx="2" ry="2" />
<text  x="862.89" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="328.7" y="1589" width="0.2" height="15.0" fill="rgb(226,169,52)" rx="2" ry="2" />
<text  x="331.71" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="664.0" y="1877" width="0.2" height="15.0" fill="rgb(222,118,47)" rx="2" ry="2" />
<text  x="667.02" y="1887.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="812.7" y="1669" width="0.2" height="15.0" fill="rgb(237,90,50)" rx="2" ry="2" />
<text  x="815.67" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.1" y="1701" width="0.2" height="15.0" fill="rgb(228,199,26)" rx="2" ry="2" />
<text  x="844.08" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="189.9" y="1813" width="0.2" height="15.0" fill="rgb(234,27,44)" rx="2" ry="2" />
<text  x="192.86" y="1823.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(212,203,19)" rx="2" ry="2" />
<text  x="14.20" y="2079.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="60.6" y="1845" width="0.6" height="15.0" fill="rgb(239,186,1)" rx="2" ry="2" />
<text  x="63.62" y="1855.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1126.2" y="1621" width="0.2" height="15.0" fill="rgb(244,162,17)" rx="2" ry="2" />
<text  x="1129.18" y="1631.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (91 samples, 1.54%)</title><rect x="288.3" y="1717" width="18.2" height="15.0" fill="rgb(245,183,41)" rx="2" ry="2" />
<text  x="291.29" y="1727.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="787.3" y="1269" width="0.2" height="15.0" fill="rgb(233,39,24)" rx="2" ry="2" />
<text  x="790.26" y="1279.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="305.9" y="1653" width="0.2" height="15.0" fill="rgb(228,77,4)" rx="2" ry="2" />
<text  x="308.90" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="875.3" y="1893" width="0.2" height="15.0" fill="rgb(243,54,40)" rx="2" ry="2" />
<text  x="878.29" y="1903.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1006.1" y="1989" width="0.6" height="15.0" fill="rgb(251,192,40)" rx="2" ry="2" />
<text  x="1009.14" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="158.7" y="1973" width="0.2" height="15.0" fill="rgb(254,184,38)" rx="2" ry="2" />
<text  x="161.65" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="416.1" y="1781" width="0.2" height="15.0" fill="rgb(220,117,24)" rx="2" ry="2" />
<text  x="419.14" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (548 samples, 9.29%)</title><rect x="230.7" y="2005" width="109.6" height="15.0" fill="rgb(218,202,54)" rx="2" ry="2" />
<text  x="233.67" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="403.5" y="1893" width="0.2" height="15.0" fill="rgb(233,155,43)" rx="2" ry="2" />
<text  x="406.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="860.1" y="1685" width="0.2" height="15.0" fill="rgb(227,17,52)" rx="2" ry="2" />
<text  x="863.09" y="1695.5" ></text>
</g>
<g >
<title>task_work_add (2 samples, 0.03%)</title><rect x="833.9" y="1797" width="0.4" height="15.0" fill="rgb(252,62,43)" rx="2" ry="2" />
<text  x="836.88" y="1807.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="518.2" y="1893" width="0.4" height="15.0" fill="rgb(243,133,36)" rx="2" ry="2" />
<text  x="521.17" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="626.2" y="1621" width="0.2" height="15.0" fill="rgb(254,68,45)" rx="2" ry="2" />
<text  x="629.21" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="996.3" y="1973" width="0.2" height="15.0" fill="rgb(230,124,1)" rx="2" ry="2" />
<text  x="999.33" y="1983.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1008.5" y="1973" width="0.4" height="15.0" fill="rgb(212,167,28)" rx="2" ry="2" />
<text  x="1011.54" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="267.5" y="1717" width="0.2" height="15.0" fill="rgb(246,85,14)" rx="2" ry="2" />
<text  x="270.49" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1221" width="16.0" height="15.0" fill="rgb(245,198,41)" rx="2" ry="2" />
<text  x="106.23" y="1231.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="120.8" y="1717" width="0.2" height="15.0" fill="rgb(209,29,54)" rx="2" ry="2" />
<text  x="123.84" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="428.5" y="1877" width="0.2" height="15.0" fill="rgb(213,120,49)" rx="2" ry="2" />
<text  x="431.54" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="189.9" y="1941" width="0.4" height="15.0" fill="rgb(235,15,0)" rx="2" ry="2" />
<text  x="192.86" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="363.5" y="1845" width="0.2" height="15.0" fill="rgb(218,10,45)" rx="2" ry="2" />
<text  x="366.52" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="583.0" y="1925" width="0.2" height="15.0" fill="rgb(237,41,10)" rx="2" ry="2" />
<text  x="585.99" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="208.9" y="1893" width="0.2" height="15.0" fill="rgb(249,114,23)" rx="2" ry="2" />
<text  x="211.87" y="1903.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="276.1" y="1829" width="0.2" height="15.0" fill="rgb(248,85,11)" rx="2" ry="2" />
<text  x="279.09" y="1839.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.6" y="1941" width="0.2" height="15.0" fill="rgb(223,72,54)" rx="2" ry="2" />
<text  x="126.64" y="1951.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1139.2" y="2053" width="1.0" height="15.0" fill="rgb(245,88,26)" rx="2" ry="2" />
<text  x="1142.18" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="649.6" y="1957" width="0.2" height="15.0" fill="rgb(233,131,14)" rx="2" ry="2" />
<text  x="652.62" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="914.9" y="1813" width="0.2" height="15.0" fill="rgb(230,193,3)" rx="2" ry="2" />
<text  x="917.91" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="85.2" y="1829" width="0.2" height="15.0" fill="rgb(232,203,37)" rx="2" ry="2" />
<text  x="88.23" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="809.7" y="1621" width="0.4" height="15.0" fill="rgb(227,120,18)" rx="2" ry="2" />
<text  x="812.67" y="1631.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (12 samples, 0.20%)</title><rect x="218.9" y="1845" width="2.4" height="15.0" fill="rgb(216,158,21)" rx="2" ry="2" />
<text  x="221.87" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="523.0" y="1621" width="0.2" height="15.0" fill="rgb(211,77,49)" rx="2" ry="2" />
<text  x="525.97" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="12.6" y="2021" width="1.0" height="15.0" fill="rgb(238,57,12)" rx="2" ry="2" />
<text  x="15.60" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (25 samples, 0.42%)</title><rect x="796.3" y="1509" width="5.0" height="15.0" fill="rgb(252,189,51)" rx="2" ry="2" />
<text  x="799.27" y="1519.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="242.5" y="1925" width="0.2" height="15.0" fill="rgb(243,9,46)" rx="2" ry="2" />
<text  x="245.48" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="945.9" y="2005" width="0.4" height="15.0" fill="rgb(220,41,4)" rx="2" ry="2" />
<text  x="948.92" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="80.0" y="1669" width="0.2" height="15.0" fill="rgb(253,124,4)" rx="2" ry="2" />
<text  x="83.02" y="1679.5" ></text>
</g>
<g >
<title>iput (52 samples, 0.88%)</title><rect x="744.0" y="1733" width="10.5" height="15.0" fill="rgb(206,85,54)" rx="2" ry="2" />
<text  x="747.05" y="1743.5" ></text>
</g>
<g >
<title>sys_recvfrom (402 samples, 6.82%)</title><rect x="1049.8" y="2005" width="80.4" height="15.0" fill="rgb(246,187,37)" rx="2" ry="2" />
<text  x="1052.75" y="2015.5" >sys_recvf..</text>
</g>
<g >
<title>sockfd_lookup_light (17 samples, 0.29%)</title><rect x="336.9" y="1957" width="3.4" height="15.0" fill="rgb(218,45,34)" rx="2" ry="2" />
<text  x="339.91" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="943.5" y="1925" width="0.2" height="15.0" fill="rgb(248,211,51)" rx="2" ry="2" />
<text  x="946.52" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.2" y="1893" width="0.8" height="15.0" fill="rgb(233,214,38)" rx="2" ry="2" />
<text  x="14.20" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="156.6" y="1925" width="0.2" height="15.0" fill="rgb(219,196,13)" rx="2" ry="2" />
<text  x="159.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1120.2" y="1573" width="0.2" height="15.0" fill="rgb(232,42,52)" rx="2" ry="2" />
<text  x="1123.18" y="1583.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1102.0" y="1861" width="0.8" height="15.0" fill="rgb(235,63,39)" rx="2" ry="2" />
<text  x="1104.97" y="1871.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1149.8" y="1669" width="0.2" height="15.0" fill="rgb(213,158,1)" rx="2" ry="2" />
<text  x="1152.79" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="739.4" y="1653" width="0.2" height="15.0" fill="rgb(243,213,37)" rx="2" ry="2" />
<text  x="742.45" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="936.3" y="1861" width="0.2" height="15.0" fill="rgb(232,120,32)" rx="2" ry="2" />
<text  x="939.31" y="1871.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="287.7" y="1381" width="0.2" height="15.0" fill="rgb(250,46,54)" rx="2" ry="2" />
<text  x="290.69" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="834.1" y="1733" width="0.2" height="15.0" fill="rgb(242,225,41)" rx="2" ry="2" />
<text  x="837.08" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="936.3" y="1813" width="0.2" height="15.0" fill="rgb(218,92,50)" rx="2" ry="2" />
<text  x="939.31" y="1823.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1160.6" y="1957" width="0.2" height="15.0" fill="rgb(231,187,25)" rx="2" ry="2" />
<text  x="1163.59" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="307.7" y="1797" width="0.2" height="15.0" fill="rgb(217,54,52)" rx="2" ry="2" />
<text  x="310.70" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="933.3" y="1941" width="0.6" height="15.0" fill="rgb(210,111,35)" rx="2" ry="2" />
<text  x="936.31" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="324.1" y="1781" width="0.4" height="15.0" fill="rgb(244,50,39)" rx="2" ry="2" />
<text  x="327.11" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="102.8" y="1845" width="19.4" height="15.0" fill="rgb(246,117,43)" rx="2" ry="2" />
<text  x="105.83" y="1855.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (5 samples, 0.08%)</title><rect x="753.1" y="1701" width="1.0" height="15.0" fill="rgb(217,40,24)" rx="2" ry="2" />
<text  x="756.05" y="1711.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1125.4" y="1909" width="0.2" height="15.0" fill="rgb(213,6,8)" rx="2" ry="2" />
<text  x="1128.38" y="1919.5" ></text>
</g>
<g >
<title>__fdget (15 samples, 0.25%)</title><rect x="1126.4" y="1957" width="3.0" height="15.0" fill="rgb(241,102,34)" rx="2" ry="2" />
<text  x="1129.38" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="357.1" y="1973" width="0.4" height="15.0" fill="rgb(232,47,31)" rx="2" ry="2" />
<text  x="360.12" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.78%)</title><rect x="102.6" y="1941" width="21.0" height="15.0" fill="rgb(219,164,46)" rx="2" ry="2" />
<text  x="105.63" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="929.1" y="1845" width="0.2" height="15.0" fill="rgb(210,89,27)" rx="2" ry="2" />
<text  x="932.11" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="980.7" y="1877" width="0.2" height="15.0" fill="rgb(213,159,7)" rx="2" ry="2" />
<text  x="983.73" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1182.2" y="2021" width="0.4" height="15.0" fill="rgb(235,150,2)" rx="2" ry="2" />
<text  x="1185.20" y="2031.5" ></text>
</g>
<g >
<title>__d_instantiate (1 samples, 0.02%)</title><rect x="409.7" y="1941" width="0.2" height="15.0" fill="rgb(205,113,38)" rx="2" ry="2" />
<text  x="412.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.05%)</title><rect x="1021.9" y="2037" width="0.6" height="15.0" fill="rgb(237,185,44)" rx="2" ry="2" />
<text  x="1024.94" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="12.4" y="1957" width="0.2" height="15.0" fill="rgb(251,17,30)" rx="2" ry="2" />
<text  x="15.40" y="1967.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.02%)</title><rect x="360.1" y="1957" width="0.2" height="15.0" fill="rgb(238,152,32)" rx="2" ry="2" />
<text  x="363.12" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="890.1" y="1717" width="0.2" height="15.0" fill="rgb(226,91,36)" rx="2" ry="2" />
<text  x="893.10" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (2 samples, 0.03%)</title><rect x="140.4" y="1941" width="0.4" height="15.0" fill="rgb(235,47,19)" rx="2" ry="2" />
<text  x="143.44" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="115.4" y="37" width="0.2" height="15.0" fill="rgb(239,151,18)" rx="2" ry="2" />
<text  x="118.44" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.7" y="1861" width="0.2" height="15.0" fill="rgb(230,218,26)" rx="2" ry="2" />
<text  x="886.70" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="715.4" y="1973" width="0.2" height="15.0" fill="rgb(217,192,21)" rx="2" ry="2" />
<text  x="718.44" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="712.4" y="1589" width="0.2" height="15.0" fill="rgb(254,141,3)" rx="2" ry="2" />
<text  x="715.44" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="704.4" y="1765" width="0.2" height="15.0" fill="rgb(247,181,50)" rx="2" ry="2" />
<text  x="707.44" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="590.4" y="1845" width="0.2" height="15.0" fill="rgb(238,44,43)" rx="2" ry="2" />
<text  x="593.40" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="167.7" y="1973" width="0.2" height="15.0" fill="rgb(249,60,6)" rx="2" ry="2" />
<text  x="170.65" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (6 samples, 0.10%)</title><rect x="994.5" y="1973" width="1.2" height="15.0" fill="rgb(209,165,14)" rx="2" ry="2" />
<text  x="997.53" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1110.0" y="1685" width="0.2" height="15.0" fill="rgb(221,52,54)" rx="2" ry="2" />
<text  x="1112.97" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="62.8" y="1973" width="0.2" height="15.0" fill="rgb(218,222,1)" rx="2" ry="2" />
<text  x="65.82" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.4" y="1589" width="0.2" height="15.0" fill="rgb(250,123,15)" rx="2" ry="2" />
<text  x="123.44" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="752.5" y="1637" width="0.2" height="15.0" fill="rgb(244,109,22)" rx="2" ry="2" />
<text  x="755.45" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="53.0" y="1669" width="0.2" height="15.0" fill="rgb(239,178,54)" rx="2" ry="2" />
<text  x="56.01" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="71.4" y="1909" width="0.2" height="15.0" fill="rgb(233,72,14)" rx="2" ry="2" />
<text  x="74.42" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="483.6" y="1765" width="0.2" height="15.0" fill="rgb(225,184,2)" rx="2" ry="2" />
<text  x="486.56" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1110.6" y="1701" width="0.2" height="15.0" fill="rgb(208,96,21)" rx="2" ry="2" />
<text  x="1113.57" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1110.0" y="1909" width="0.2" height="15.0" fill="rgb(228,12,42)" rx="2" ry="2" />
<text  x="1112.97" y="1919.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="126.2" y="1733" width="0.2" height="15.0" fill="rgb(224,86,0)" rx="2" ry="2" />
<text  x="129.24" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="980.7" y="1701" width="0.2" height="15.0" fill="rgb(239,32,50)" rx="2" ry="2" />
<text  x="983.73" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="54.2" y="1781" width="0.2" height="15.0" fill="rgb(219,177,38)" rx="2" ry="2" />
<text  x="57.21" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="503.8" y="1765" width="0.4" height="15.0" fill="rgb(242,35,36)" rx="2" ry="2" />
<text  x="506.77" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="936.3" y="1957" width="0.2" height="15.0" fill="rgb(213,212,12)" rx="2" ry="2" />
<text  x="939.31" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="71.4" y="1573" width="0.2" height="15.0" fill="rgb(241,7,18)" rx="2" ry="2" />
<text  x="74.42" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="430.1" y="1829" width="0.4" height="15.0" fill="rgb(227,149,0)" rx="2" ry="2" />
<text  x="433.14" y="1839.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="66.6" y="1669" width="0.2" height="15.0" fill="rgb(223,161,40)" rx="2" ry="2" />
<text  x="69.62" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="879.5" y="1877" width="0.2" height="15.0" fill="rgb(215,158,17)" rx="2" ry="2" />
<text  x="882.49" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="993.3" y="1957" width="0.2" height="15.0" fill="rgb(206,154,39)" rx="2" ry="2" />
<text  x="996.33" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="505.0" y="1877" width="0.2" height="15.0" fill="rgb(223,102,37)" rx="2" ry="2" />
<text  x="507.97" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="611.4" y="1861" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="614.40" y="1871.5" ></text>
</g>
<g >
<title>__GI___getpeername (6 samples, 0.10%)</title><rect x="200.7" y="1957" width="1.2" height="15.0" fill="rgb(207,27,7)" rx="2" ry="2" />
<text  x="203.66" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="482.8" y="1637" width="0.2" height="15.0" fill="rgb(246,21,1)" rx="2" ry="2" />
<text  x="485.76" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="981.7" y="1861" width="0.2" height="15.0" fill="rgb(220,223,32)" rx="2" ry="2" />
<text  x="984.73" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="834.1" y="1765" width="0.2" height="15.0" fill="rgb(241,173,50)" rx="2" ry="2" />
<text  x="837.08" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="875.3" y="1781" width="0.2" height="15.0" fill="rgb(247,107,33)" rx="2" ry="2" />
<text  x="878.29" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="483.6" y="1749" width="0.2" height="15.0" fill="rgb(236,61,47)" rx="2" ry="2" />
<text  x="486.56" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="590.4" y="1909" width="0.2" height="15.0" fill="rgb(248,0,51)" rx="2" ry="2" />
<text  x="593.40" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.1" y="1845" width="0.2" height="15.0" fill="rgb(211,138,26)" rx="2" ry="2" />
<text  x="893.10" y="1855.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="118.6" y="213" width="0.2" height="15.0" fill="rgb(234,110,19)" rx="2" ry="2" />
<text  x="121.64" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="85.2" y="1973" width="0.2" height="15.0" fill="rgb(207,228,16)" rx="2" ry="2" />
<text  x="88.23" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="969.1" y="1621" width="0.2" height="15.0" fill="rgb(225,100,17)" rx="2" ry="2" />
<text  x="972.13" y="1631.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="221.9" y="1909" width="0.2" height="15.0" fill="rgb(222,135,1)" rx="2" ry="2" />
<text  x="224.87" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="546.0" y="2021" width="1.2" height="15.0" fill="rgb(215,200,49)" rx="2" ry="2" />
<text  x="548.98" y="2031.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="312.9" y="1717" width="0.2" height="15.0" fill="rgb(221,214,25)" rx="2" ry="2" />
<text  x="315.90" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="623.4" y="1765" width="0.2" height="15.0" fill="rgb(227,50,8)" rx="2" ry="2" />
<text  x="626.41" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1098.4" y="1893" width="0.2" height="15.0" fill="rgb(239,156,17)" rx="2" ry="2" />
<text  x="1101.37" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1168.4" y="2053" width="0.2" height="15.0" fill="rgb(245,210,44)" rx="2" ry="2" />
<text  x="1171.39" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1110.6" y="1605" width="0.2" height="15.0" fill="rgb(231,168,18)" rx="2" ry="2" />
<text  x="1113.57" y="1615.5" ></text>
</g>
<g >
<title>tcp_current_mss (7 samples, 0.12%)</title><rect x="824.3" y="1717" width="1.4" height="15.0" fill="rgb(234,134,28)" rx="2" ry="2" />
<text  x="827.28" y="1727.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (5 samples, 0.08%)</title><rect x="543.6" y="1941" width="1.0" height="15.0" fill="rgb(223,58,12)" rx="2" ry="2" />
<text  x="546.58" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="583.0" y="1893" width="0.2" height="15.0" fill="rgb(248,120,3)" rx="2" ry="2" />
<text  x="585.99" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (5 samples, 0.08%)</title><rect x="148.6" y="1893" width="1.0" height="15.0" fill="rgb(209,86,35)" rx="2" ry="2" />
<text  x="151.65" y="1903.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="889.1" y="1525" width="0.2" height="15.0" fill="rgb(247,111,0)" rx="2" ry="2" />
<text  x="892.10" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="916.5" y="1973" width="0.2" height="15.0" fill="rgb(238,109,50)" rx="2" ry="2" />
<text  x="919.51" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="454.0" y="1845" width="0.2" height="15.0" fill="rgb(238,11,29)" rx="2" ry="2" />
<text  x="456.95" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="306.5" y="1685" width="0.2" height="15.0" fill="rgb(219,229,51)" rx="2" ry="2" />
<text  x="309.50" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="680.0" y="1733" width="0.2" height="15.0" fill="rgb(253,194,16)" rx="2" ry="2" />
<text  x="683.03" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (94 samples, 1.59%)</title><rect x="204.5" y="1957" width="18.8" height="15.0" fill="rgb(215,50,17)" rx="2" ry="2" />
<text  x="207.47" y="1967.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (31 samples, 0.53%)</title><rect x="316.9" y="1813" width="6.2" height="15.0" fill="rgb(240,114,2)" rx="2" ry="2" />
<text  x="319.90" y="1823.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (2 samples, 0.03%)</title><rect x="585.2" y="1973" width="0.4" height="15.0" fill="rgb(240,13,28)" rx="2" ry="2" />
<text  x="588.19" y="1983.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="594.6" y="2021" width="0.2" height="15.0" fill="rgb(216,115,46)" rx="2" ry="2" />
<text  x="597.60" y="2031.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="596.2" y="1893" width="0.2" height="15.0" fill="rgb(229,205,9)" rx="2" ry="2" />
<text  x="599.20" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="223.1" y="1685" width="0.2" height="15.0" fill="rgb(224,68,42)" rx="2" ry="2" />
<text  x="226.07" y="1695.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="843.7" y="1717" width="0.2" height="15.0" fill="rgb(237,69,38)" rx="2" ry="2" />
<text  x="846.68" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="416.1" y="1733" width="0.2" height="15.0" fill="rgb(218,28,30)" rx="2" ry="2" />
<text  x="419.14" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="635.4" y="1925" width="0.2" height="15.0" fill="rgb(210,26,33)" rx="2" ry="2" />
<text  x="638.41" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="416.1" y="1845" width="0.2" height="15.0" fill="rgb(243,209,13)" rx="2" ry="2" />
<text  x="419.14" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (1 samples, 0.02%)</title><rect x="873.1" y="1973" width="0.2" height="15.0" fill="rgb(253,11,10)" rx="2" ry="2" />
<text  x="876.09" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="565.8" y="1861" width="0.2" height="15.0" fill="rgb(251,200,54)" rx="2" ry="2" />
<text  x="568.79" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.0" y="133" width="0.2" height="15.0" fill="rgb(210,181,40)" rx="2" ry="2" />
<text  x="121.04" y="143.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1160.4" y="1957" width="0.2" height="15.0" fill="rgb(238,25,8)" rx="2" ry="2" />
<text  x="1163.39" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (94 samples, 1.59%)</title><rect x="138.8" y="1989" width="18.9" height="15.0" fill="rgb(243,198,17)" rx="2" ry="2" />
<text  x="141.84" y="1999.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="961.1" y="2005" width="0.4" height="15.0" fill="rgb(223,15,38)" rx="2" ry="2" />
<text  x="964.12" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="855.3" y="1877" width="0.8" height="15.0" fill="rgb(213,130,48)" rx="2" ry="2" />
<text  x="858.29" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="76.2" y="1941" width="0.6" height="15.0" fill="rgb(237,213,46)" rx="2" ry="2" />
<text  x="79.22" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="680.2" y="1845" width="0.2" height="15.0" fill="rgb(208,143,54)" rx="2" ry="2" />
<text  x="683.23" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="53.0" y="1829" width="0.2" height="15.0" fill="rgb(207,198,53)" rx="2" ry="2" />
<text  x="56.01" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="914.1" y="1989" width="0.2" height="15.0" fill="rgb(243,28,5)" rx="2" ry="2" />
<text  x="917.11" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="912.5" y="2037" width="0.2" height="15.0" fill="rgb(218,78,3)" rx="2" ry="2" />
<text  x="915.51" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (236 samples, 4.00%)</title><rect x="547.2" y="2037" width="47.2" height="15.0" fill="rgb(248,30,44)" rx="2" ry="2" />
<text  x="550.18" y="2047.5" >face..</text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="858.5" y="1653" width="0.2" height="15.0" fill="rgb(222,156,28)" rx="2" ry="2" />
<text  x="861.49" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="827.3" y="1605" width="0.2" height="15.0" fill="rgb(243,42,25)" rx="2" ry="2" />
<text  x="830.28" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="525.6" y="1701" width="0.2" height="15.0" fill="rgb(220,202,13)" rx="2" ry="2" />
<text  x="528.57" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.1" y="1877" width="0.2" height="15.0" fill="rgb(216,35,21)" rx="2" ry="2" />
<text  x="892.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (5 samples, 0.08%)</title><rect x="81.8" y="1941" width="1.0" height="15.0" fill="rgb(229,100,47)" rx="2" ry="2" />
<text  x="84.82" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="285.7" y="1589" width="0.2" height="15.0" fill="rgb(242,68,13)" rx="2" ry="2" />
<text  x="288.69" y="1599.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="711.8" y="1989" width="0.2" height="15.0" fill="rgb(226,123,2)" rx="2" ry="2" />
<text  x="714.84" y="1999.5" ></text>
</g>
<g >
<title>memchr@plt (2 samples, 0.03%)</title><rect x="1017.1" y="2037" width="0.4" height="15.0" fill="rgb(241,141,7)" rx="2" ry="2" />
<text  x="1020.14" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="430.1" y="1877" width="0.4" height="15.0" fill="rgb(232,95,17)" rx="2" ry="2" />
<text  x="433.14" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="953.5" y="2037" width="0.8" height="15.0" fill="rgb(208,120,21)" rx="2" ry="2" />
<text  x="956.52" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="357.1" y="1749" width="0.4" height="15.0" fill="rgb(212,33,15)" rx="2" ry="2" />
<text  x="360.12" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="563.6" y="1989" width="1.8" height="15.0" fill="rgb(242,103,42)" rx="2" ry="2" />
<text  x="566.59" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="308.1" y="1621" width="0.2" height="15.0" fill="rgb(208,74,24)" rx="2" ry="2" />
<text  x="311.10" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="402.1" y="1877" width="0.2" height="15.0" fill="rgb(235,11,8)" rx="2" ry="2" />
<text  x="405.13" y="1887.5" ></text>
</g>
<g >
<title>ip_output (101 samples, 1.71%)</title><rect x="784.9" y="1637" width="20.2" height="15.0" fill="rgb(229,227,42)" rx="2" ry="2" />
<text  x="787.86" y="1647.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.5" y="1861" width="0.2" height="15.0" fill="rgb(221,112,52)" rx="2" ry="2" />
<text  x="886.50" y="1871.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="421.1" y="1781" width="0.8" height="15.0" fill="rgb(231,44,41)" rx="2" ry="2" />
<text  x="424.14" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (7 samples, 0.12%)</title><rect x="154.4" y="1893" width="1.4" height="15.0" fill="rgb(248,117,0)" rx="2" ry="2" />
<text  x="157.45" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="93.4" y="2021" width="0.2" height="15.0" fill="rgb(232,186,27)" rx="2" ry="2" />
<text  x="96.43" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="565.8" y="1781" width="0.2" height="15.0" fill="rgb(226,93,8)" rx="2" ry="2" />
<text  x="568.79" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="683.8" y="1877" width="0.2" height="15.0" fill="rgb(246,122,53)" rx="2" ry="2" />
<text  x="686.83" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="500.6" y="1957" width="0.2" height="15.0" fill="rgb(254,25,33)" rx="2" ry="2" />
<text  x="503.57" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (124 samples, 2.10%)</title><rect x="685.6" y="2005" width="24.8" height="15.0" fill="rgb(214,86,17)" rx="2" ry="2" />
<text  x="688.63" y="2015.5" >f..</text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="843.7" y="1893" width="0.2" height="15.0" fill="rgb(206,56,30)" rx="2" ry="2" />
<text  x="846.68" y="1903.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="71.4" y="1557" width="0.2" height="15.0" fill="rgb(220,19,41)" rx="2" ry="2" />
<text  x="74.42" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="307.7" y="1765" width="0.2" height="15.0" fill="rgb(213,28,10)" rx="2" ry="2" />
<text  x="310.70" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1189" width="16.0" height="15.0" fill="rgb(236,68,43)" rx="2" ry="2" />
<text  x="106.23" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8 samples, 0.14%)</title><rect x="1182.8" y="2037" width="1.6" height="15.0" fill="rgb(208,165,26)" rx="2" ry="2" />
<text  x="1185.80" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="831.9" y="1701" width="0.2" height="15.0" fill="rgb(225,120,9)" rx="2" ry="2" />
<text  x="834.88" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="116.8" y="69" width="0.2" height="15.0" fill="rgb(240,37,50)" rx="2" ry="2" />
<text  x="119.84" y="79.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="629.8" y="2005" width="0.4" height="15.0" fill="rgb(209,126,18)" rx="2" ry="2" />
<text  x="632.81" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="117.2" y="37" width="0.2" height="15.0" fill="rgb(218,192,30)" rx="2" ry="2" />
<text  x="120.24" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="531.8" y="1749" width="0.2" height="15.0" fill="rgb(228,128,6)" rx="2" ry="2" />
<text  x="534.78" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="555.2" y="1973" width="0.2" height="15.0" fill="rgb(247,142,7)" rx="2" ry="2" />
<text  x="558.18" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="84.8" y="1781" width="0.2" height="15.0" fill="rgb(213,25,39)" rx="2" ry="2" />
<text  x="87.83" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="363.5" y="1813" width="0.2" height="15.0" fill="rgb(227,50,8)" rx="2" ry="2" />
<text  x="366.52" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="898.5" y="1973" width="0.2" height="15.0" fill="rgb(223,153,11)" rx="2" ry="2" />
<text  x="901.50" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="707.2" y="1813" width="0.6" height="15.0" fill="rgb(241,29,19)" rx="2" ry="2" />
<text  x="710.24" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.14%)</title><rect x="640.0" y="1989" width="1.6" height="15.0" fill="rgb(231,99,37)" rx="2" ry="2" />
<text  x="643.01" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (13 samples, 0.22%)</title><rect x="623.0" y="1877" width="2.6" height="15.0" fill="rgb(216,140,6)" rx="2" ry="2" />
<text  x="626.01" y="1887.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="641.4" y="1829" width="0.2" height="15.0" fill="rgb(207,156,38)" rx="2" ry="2" />
<text  x="644.41" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="271.9" y="1797" width="0.4" height="15.0" fill="rgb(246,127,2)" rx="2" ry="2" />
<text  x="274.89" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (703 samples, 11.92%)</title><rect x="720.0" y="1989" width="140.7" height="15.0" fill="rgb(228,120,7)" rx="2" ry="2" />
<text  x="723.04" y="1999.5" >facebook::memcach..</text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="90.0" y="1973" width="0.2" height="15.0" fill="rgb(222,117,48)" rx="2" ry="2" />
<text  x="93.03" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="249.1" y="1861" width="0.2" height="15.0" fill="rgb(213,85,28)" rx="2" ry="2" />
<text  x="252.08" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1477" width="16.8" height="15.0" fill="rgb(219,203,46)" rx="2" ry="2" />
<text  x="106.03" y="1487.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="12.4" y="1989" width="0.2" height="15.0" fill="rgb(219,215,31)" rx="2" ry="2" />
<text  x="15.40" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (4 samples, 0.07%)</title><rect x="719.2" y="1957" width="0.8" height="15.0" fill="rgb(241,185,36)" rx="2" ry="2" />
<text  x="722.24" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="641.4" y="1893" width="0.2" height="15.0" fill="rgb(222,106,45)" rx="2" ry="2" />
<text  x="644.41" y="1903.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="249.3" y="1893" width="0.4" height="15.0" fill="rgb(233,226,28)" rx="2" ry="2" />
<text  x="252.28" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="173.5" y="1925" width="0.2" height="15.0" fill="rgb(232,49,43)" rx="2" ry="2" />
<text  x="176.46" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1142.0" y="1941" width="0.4" height="15.0" fill="rgb(245,141,44)" rx="2" ry="2" />
<text  x="1144.98" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="339.5" y="1797" width="0.2" height="15.0" fill="rgb(206,176,24)" rx="2" ry="2" />
<text  x="342.51" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="742.6" y="1717" width="0.6" height="15.0" fill="rgb(240,156,41)" rx="2" ry="2" />
<text  x="745.65" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="586.8" y="1989" width="0.2" height="15.0" fill="rgb(222,218,19)" rx="2" ry="2" />
<text  x="589.80" y="1999.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="12.6" y="1941" width="1.0" height="15.0" fill="rgb(238,66,15)" rx="2" ry="2" />
<text  x="15.60" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="755.5" y="1781" width="0.2" height="15.0" fill="rgb(224,50,20)" rx="2" ry="2" />
<text  x="758.45" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (5 samples, 0.08%)</title><rect x="70.0" y="1925" width="1.0" height="15.0" fill="rgb(242,210,35)" rx="2" ry="2" />
<text  x="73.02" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="264.7" y="1717" width="0.2" height="15.0" fill="rgb(220,29,51)" rx="2" ry="2" />
<text  x="267.69" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="854.9" y="1893" width="0.2" height="15.0" fill="rgb(231,130,31)" rx="2" ry="2" />
<text  x="857.89" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="647.4" y="1829" width="0.2" height="15.0" fill="rgb(238,73,28)" rx="2" ry="2" />
<text  x="650.42" y="1839.5" ></text>
</g>
<g >
<title>trigger_dyntick_cpu.isra.35 (1 samples, 0.02%)</title><rect x="322.9" y="1765" width="0.2" height="15.0" fill="rgb(219,44,24)" rx="2" ry="2" />
<text  x="325.91" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="454.0" y="1781" width="0.2" height="15.0" fill="rgb(233,145,41)" rx="2" ry="2" />
<text  x="456.95" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="920.3" y="1909" width="0.2" height="15.0" fill="rgb(225,226,46)" rx="2" ry="2" />
<text  x="923.31" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="249.1" y="1845" width="0.2" height="15.0" fill="rgb(211,84,9)" rx="2" ry="2" />
<text  x="252.08" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (6 samples, 0.10%)</title><rect x="67.6" y="1941" width="1.2" height="15.0" fill="rgb(234,203,6)" rx="2" ry="2" />
<text  x="70.62" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="264.7" y="1781" width="0.2" height="15.0" fill="rgb(245,114,47)" rx="2" ry="2" />
<text  x="267.69" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="664.0" y="1893" width="0.2" height="15.0" fill="rgb(245,43,4)" rx="2" ry="2" />
<text  x="667.02" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="112.6" y="37" width="0.6" height="15.0" fill="rgb(254,75,39)" rx="2" ry="2" />
<text  x="115.63" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="363.5" y="1557" width="0.2" height="15.0" fill="rgb(235,30,19)" rx="2" ry="2" />
<text  x="366.52" y="1567.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="936.3" y="1653" width="0.2" height="15.0" fill="rgb(210,203,6)" rx="2" ry="2" />
<text  x="939.31" y="1663.5" ></text>
</g>
<g >
<title>ip_copy_addrs (6 samples, 0.10%)</title><rect x="277.7" y="1813" width="1.2" height="15.0" fill="rgb(250,124,40)" rx="2" ry="2" />
<text  x="280.69" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="264.7" y="1621" width="0.2" height="15.0" fill="rgb(205,182,3)" rx="2" ry="2" />
<text  x="267.69" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="897.1" y="2005" width="1.6" height="15.0" fill="rgb(241,226,33)" rx="2" ry="2" />
<text  x="900.10" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="853.3" y="1685" width="0.2" height="15.0" fill="rgb(233,105,51)" rx="2" ry="2" />
<text  x="856.29" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (3 samples, 0.05%)</title><rect x="863.9" y="1989" width="0.6" height="15.0" fill="rgb(218,133,18)" rx="2" ry="2" />
<text  x="866.89" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (5 samples, 0.08%)</title><rect x="879.1" y="1941" width="1.0" height="15.0" fill="rgb(247,152,39)" rx="2" ry="2" />
<text  x="882.09" y="1951.5" ></text>
</g>
<g >
<title>SYSC_accept4 (356 samples, 6.04%)</title><rect x="357.5" y="1973" width="71.2" height="15.0" fill="rgb(236,149,50)" rx="2" ry="2" />
<text  x="360.52" y="1983.5" >SYSC_acc..</text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="596.2" y="1877" width="0.2" height="15.0" fill="rgb(231,121,9)" rx="2" ry="2" />
<text  x="599.20" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="76.6" y="1893" width="0.2" height="15.0" fill="rgb(244,147,40)" rx="2" ry="2" />
<text  x="79.62" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="402.7" y="1845" width="0.2" height="15.0" fill="rgb(248,97,54)" rx="2" ry="2" />
<text  x="405.73" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="931.5" y="1893" width="0.2" height="15.0" fill="rgb(254,228,39)" rx="2" ry="2" />
<text  x="934.51" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="705.2" y="1893" width="1.2" height="15.0" fill="rgb(235,13,18)" rx="2" ry="2" />
<text  x="708.24" y="1903.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="755.5" y="1669" width="0.2" height="15.0" fill="rgb(240,121,53)" rx="2" ry="2" />
<text  x="758.45" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="400.1" y="1909" width="0.4" height="15.0" fill="rgb(211,123,27)" rx="2" ry="2" />
<text  x="403.13" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="824.9" y="1637" width="0.4" height="15.0" fill="rgb(208,79,11)" rx="2" ry="2" />
<text  x="827.88" y="1647.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="428.5" y="1957" width="0.2" height="15.0" fill="rgb(240,158,37)" rx="2" ry="2" />
<text  x="431.54" y="1967.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="895.7" y="2005" width="0.2" height="15.0" fill="rgb(227,164,33)" rx="2" ry="2" />
<text  x="898.70" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (10 samples, 0.17%)</title><rect x="333.9" y="1893" width="2.0" height="15.0" fill="rgb(225,46,24)" rx="2" ry="2" />
<text  x="336.91" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="963.7" y="1989" width="0.2" height="15.0" fill="rgb(225,128,27)" rx="2" ry="2" />
<text  x="966.72" y="1999.5" ></text>
</g>
<g >
<title>__GI___setsockopt (13 samples, 0.22%)</title><rect x="201.9" y="1957" width="2.6" height="15.0" fill="rgb(241,35,20)" rx="2" ry="2" />
<text  x="204.87" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="648.4" y="1813" width="0.2" height="15.0" fill="rgb(216,76,42)" rx="2" ry="2" />
<text  x="651.42" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="890.1" y="1813" width="0.2" height="15.0" fill="rgb(237,128,40)" rx="2" ry="2" />
<text  x="893.10" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="633.6" y="2005" width="0.2" height="15.0" fill="rgb(226,200,14)" rx="2" ry="2" />
<text  x="636.61" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="611.4" y="1701" width="0.2" height="15.0" fill="rgb(231,28,3)" rx="2" ry="2" />
<text  x="614.40" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="518.8" y="1685" width="0.4" height="15.0" fill="rgb(207,213,41)" rx="2" ry="2" />
<text  x="521.77" y="1695.5" ></text>
</g>
<g >
<title>get_next_ino (1 samples, 0.02%)</title><rect x="396.3" y="1941" width="0.2" height="15.0" fill="rgb(214,50,45)" rx="2" ry="2" />
<text  x="399.33" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="501.0" y="1957" width="0.4" height="15.0" fill="rgb(219,81,24)" rx="2" ry="2" />
<text  x="503.97" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="156.8" y="1941" width="0.2" height="15.0" fill="rgb(210,149,22)" rx="2" ry="2" />
<text  x="159.85" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="881.1" y="1861" width="0.2" height="15.0" fill="rgb(233,119,9)" rx="2" ry="2" />
<text  x="884.10" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="583.0" y="1957" width="0.2" height="15.0" fill="rgb(226,142,49)" rx="2" ry="2" />
<text  x="585.99" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="272.9" y="1765" width="0.2" height="15.0" fill="rgb(250,53,20)" rx="2" ry="2" />
<text  x="275.89" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1120.2" y="1797" width="0.2" height="15.0" fill="rgb(238,127,51)" rx="2" ry="2" />
<text  x="1123.18" y="1807.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="286.5" y="1445" width="0.2" height="15.0" fill="rgb(243,156,17)" rx="2" ry="2" />
<text  x="289.49" y="1455.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (2 samples, 0.03%)</title><rect x="66.4" y="1957" width="0.4" height="15.0" fill="rgb(232,29,17)" rx="2" ry="2" />
<text  x="69.42" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="847.7" y="1845" width="0.2" height="15.0" fill="rgb(207,9,3)" rx="2" ry="2" />
<text  x="850.68" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (3 samples, 0.05%)</title><rect x="142.2" y="1941" width="0.6" height="15.0" fill="rgb(235,141,31)" rx="2" ry="2" />
<text  x="145.24" y="1951.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1137.4" y="1973" width="0.2" height="15.0" fill="rgb(243,89,45)" rx="2" ry="2" />
<text  x="1140.38" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="66.6" y="1829" width="0.2" height="15.0" fill="rgb(236,134,51)" rx="2" ry="2" />
<text  x="69.62" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="809.7" y="1493" width="0.4" height="15.0" fill="rgb(207,180,23)" rx="2" ry="2" />
<text  x="812.67" y="1503.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="1091.4" y="1637" width="0.2" height="15.0" fill="rgb(231,158,35)" rx="2" ry="2" />
<text  x="1094.37" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="256.5" y="1589" width="0.2" height="15.0" fill="rgb(229,67,22)" rx="2" ry="2" />
<text  x="259.48" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1098.4" y="1797" width="0.2" height="15.0" fill="rgb(234,135,29)" rx="2" ry="2" />
<text  x="1101.37" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="964.9" y="1925" width="0.2" height="15.0" fill="rgb(247,145,30)" rx="2" ry="2" />
<text  x="967.92" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="144.4" y="1845" width="0.2" height="15.0" fill="rgb(242,44,22)" rx="2" ry="2" />
<text  x="147.45" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="834.1" y="1717" width="0.2" height="15.0" fill="rgb(206,93,50)" rx="2" ry="2" />
<text  x="837.08" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="697.6" y="1909" width="0.2" height="15.0" fill="rgb(251,218,37)" rx="2" ry="2" />
<text  x="700.63" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="170.1" y="1957" width="0.2" height="15.0" fill="rgb(231,194,40)" rx="2" ry="2" />
<text  x="173.05" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="244.5" y="1797" width="0.2" height="15.0" fill="rgb(227,117,27)" rx="2" ry="2" />
<text  x="247.48" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="1091.2" y="1829" width="0.6" height="15.0" fill="rgb(208,37,18)" rx="2" ry="2" />
<text  x="1094.17" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="211.5" y="1637" width="0.2" height="15.0" fill="rgb(231,162,8)" rx="2" ry="2" />
<text  x="214.47" y="1647.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="81.6" y="1893" width="0.2" height="15.0" fill="rgb(231,87,43)" rx="2" ry="2" />
<text  x="84.62" y="1903.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="267.3" y="1845" width="0.2" height="15.0" fill="rgb(227,181,38)" rx="2" ry="2" />
<text  x="270.29" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="341.1" y="1957" width="0.2" height="15.0" fill="rgb(228,61,31)" rx="2" ry="2" />
<text  x="344.11" y="1967.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="765.1" y="1733" width="0.2" height="15.0" fill="rgb(230,18,40)" rx="2" ry="2" />
<text  x="768.06" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.6" y="1941" width="0.2" height="15.0" fill="rgb(213,49,53)" rx="2" ry="2" />
<text  x="77.62" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="142.2" y="1925" width="0.2" height="15.0" fill="rgb(219,89,2)" rx="2" ry="2" />
<text  x="145.24" y="1935.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="775.1" y="1701" width="1.2" height="15.0" fill="rgb(221,8,15)" rx="2" ry="2" />
<text  x="778.06" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="180.5" y="1797" width="0.2" height="15.0" fill="rgb(225,229,40)" rx="2" ry="2" />
<text  x="183.46" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="482.8" y="1685" width="0.6" height="15.0" fill="rgb(254,180,27)" rx="2" ry="2" />
<text  x="485.76" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="904.9" y="1973" width="0.4" height="15.0" fill="rgb(242,164,4)" rx="2" ry="2" />
<text  x="907.90" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="264.7" y="1733" width="0.2" height="15.0" fill="rgb(249,135,7)" rx="2" ry="2" />
<text  x="267.69" y="1743.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="921.7" y="1765" width="0.8" height="15.0" fill="rgb(233,158,20)" rx="2" ry="2" />
<text  x="924.71" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="789.3" y="1557" width="0.2" height="15.0" fill="rgb(207,160,21)" rx="2" ry="2" />
<text  x="792.26" y="1567.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="75.2" y="1861" width="0.2" height="15.0" fill="rgb(213,201,34)" rx="2" ry="2" />
<text  x="78.22" y="1871.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="328.7" y="1525" width="0.2" height="15.0" fill="rgb(211,29,25)" rx="2" ry="2" />
<text  x="331.71" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="166.1" y="2021" width="0.2" height="15.0" fill="rgb(241,143,8)" rx="2" ry="2" />
<text  x="169.05" y="2031.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1005.1" y="1685" width="0.2" height="15.0" fill="rgb(215,126,35)" rx="2" ry="2" />
<text  x="1008.14" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="126.2" y="1893" width="0.4" height="15.0" fill="rgb(244,162,37)" rx="2" ry="2" />
<text  x="129.24" y="1903.5" ></text>
</g>
<g >
<title>sock_alloc_file (95 samples, 1.61%)</title><rect x="408.7" y="1957" width="19.0" height="15.0" fill="rgb(252,53,14)" rx="2" ry="2" />
<text  x="411.74" y="1967.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="761.5" y="1749" width="0.2" height="15.0" fill="rgb(210,141,25)" rx="2" ry="2" />
<text  x="764.45" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1061" width="15.6" height="15.0" fill="rgb(247,154,53)" rx="2" ry="2" />
<text  x="106.43" y="1071.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="27.4" y="1957" width="0.2" height="15.0" fill="rgb(223,125,51)" rx="2" ry="2" />
<text  x="30.41" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (19 samples, 0.32%)</title><rect x="1126.4" y="1973" width="3.8" height="15.0" fill="rgb(210,64,22)" rx="2" ry="2" />
<text  x="1129.38" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="829.9" y="1685" width="0.2" height="15.0" fill="rgb(221,29,4)" rx="2" ry="2" />
<text  x="832.88" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="523.0" y="1733" width="0.2" height="15.0" fill="rgb(223,110,30)" rx="2" ry="2" />
<text  x="525.97" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="623.4" y="1685" width="0.2" height="15.0" fill="rgb(209,137,35)" rx="2" ry="2" />
<text  x="626.41" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="215.9" y="1861" width="2.0" height="15.0" fill="rgb(248,125,19)" rx="2" ry="2" />
<text  x="218.87" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.1" y="1973" width="0.2" height="15.0" fill="rgb(251,229,49)" rx="2" ry="2" />
<text  x="1002.14" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="759.9" y="1733" width="0.2" height="15.0" fill="rgb(243,58,1)" rx="2" ry="2" />
<text  x="762.85" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="987.9" y="1909" width="0.2" height="15.0" fill="rgb(207,208,27)" rx="2" ry="2" />
<text  x="990.93" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="825.1" y="1253" width="0.2" height="15.0" fill="rgb(226,109,15)" rx="2" ry="2" />
<text  x="828.08" y="1263.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="259.5" y="1845" width="0.2" height="15.0" fill="rgb(213,225,10)" rx="2" ry="2" />
<text  x="262.48" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (22 samples, 0.37%)</title><rect x="993.5" y="1989" width="4.4" height="15.0" fill="rgb(211,29,17)" rx="2" ry="2" />
<text  x="996.53" y="1999.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="834.1" y="1541" width="0.2" height="15.0" fill="rgb(223,70,6)" rx="2" ry="2" />
<text  x="837.08" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="402.7" y="1813" width="0.2" height="15.0" fill="rgb(209,35,22)" rx="2" ry="2" />
<text  x="405.73" y="1823.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="879.5" y="1573" width="0.2" height="15.0" fill="rgb(251,53,54)" rx="2" ry="2" />
<text  x="882.49" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="312.9" y="1781" width="0.2" height="15.0" fill="rgb(247,79,25)" rx="2" ry="2" />
<text  x="315.90" y="1791.5" ></text>
</g>
<g >
<title>sk_reset_timer (30 samples, 0.51%)</title><rect x="317.1" y="1781" width="6.0" height="15.0" fill="rgb(207,97,14)" rx="2" ry="2" />
<text  x="320.10" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="909.9" y="2005" width="1.0" height="15.0" fill="rgb(213,197,3)" rx="2" ry="2" />
<text  x="912.91" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="849.3" y="1909" width="0.4" height="15.0" fill="rgb(252,167,38)" rx="2" ry="2" />
<text  x="852.28" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="634.4" y="2005" width="1.0" height="15.0" fill="rgb(233,3,7)" rx="2" ry="2" />
<text  x="637.41" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="623.8" y="1845" width="0.8" height="15.0" fill="rgb(247,111,4)" rx="2" ry="2" />
<text  x="626.81" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="129.0" y="1957" width="1.2" height="15.0" fill="rgb(242,64,4)" rx="2" ry="2" />
<text  x="132.04" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="827.3" y="1701" width="0.2" height="15.0" fill="rgb(205,16,37)" rx="2" ry="2" />
<text  x="830.28" y="1711.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="576.0" y="1605" width="0.2" height="15.0" fill="rgb(240,188,51)" rx="2" ry="2" />
<text  x="578.99" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="118.2" y="197" width="0.2" height="15.0" fill="rgb(216,157,20)" rx="2" ry="2" />
<text  x="121.24" y="207.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.4" y="1573" width="0.2" height="15.0" fill="rgb(215,166,41)" rx="2" ry="2" />
<text  x="123.44" y="1583.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1131.4" y="1941" width="0.8" height="15.0" fill="rgb(248,142,23)" rx="2" ry="2" />
<text  x="1134.38" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="256.5" y="1813" width="0.2" height="15.0" fill="rgb(242,160,17)" rx="2" ry="2" />
<text  x="259.48" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1005.1" y="1941" width="0.2" height="15.0" fill="rgb(218,117,10)" rx="2" ry="2" />
<text  x="1008.14" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="51.4" y="1909" width="0.2" height="15.0" fill="rgb(243,19,33)" rx="2" ry="2" />
<text  x="54.41" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (3 samples, 0.05%)</title><rect x="407.7" y="1893" width="0.6" height="15.0" fill="rgb(227,101,7)" rx="2" ry="2" />
<text  x="410.73" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="719.2" y="1941" width="0.2" height="15.0" fill="rgb(236,172,34)" rx="2" ry="2" />
<text  x="722.24" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="394.1" y="1909" width="0.2" height="15.0" fill="rgb(220,70,39)" rx="2" ry="2" />
<text  x="397.13" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="610.6" y="1573" width="0.2" height="15.0" fill="rgb(246,173,48)" rx="2" ry="2" />
<text  x="613.60" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="578.6" y="1909" width="0.2" height="15.0" fill="rgb(249,195,52)" rx="2" ry="2" />
<text  x="581.59" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="267.5" y="1781" width="0.4" height="15.0" fill="rgb(206,114,43)" rx="2" ry="2" />
<text  x="270.49" y="1791.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="122.2" y="1861" width="0.2" height="15.0" fill="rgb(247,58,6)" rx="2" ry="2" />
<text  x="125.24" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (2 samples, 0.03%)</title><rect x="1188.8" y="1765" width="0.4" height="15.0" fill="rgb(209,55,34)" rx="2" ry="2" />
<text  x="1191.80" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="66.6" y="1893" width="0.2" height="15.0" fill="rgb(220,130,39)" rx="2" ry="2" />
<text  x="69.62" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="712.4" y="1653" width="0.2" height="15.0" fill="rgb(249,50,42)" rx="2" ry="2" />
<text  x="715.44" y="1663.5" ></text>
</g>
<g >
<title>__d_alloc (14 samples, 0.24%)</title><rect x="422.3" y="1925" width="2.8" height="15.0" fill="rgb(249,129,3)" rx="2" ry="2" />
<text  x="425.34" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (48 samples, 0.81%)</title><rect x="902.7" y="2037" width="9.6" height="15.0" fill="rgb(207,122,23)" rx="2" ry="2" />
<text  x="905.70" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="71.4" y="1797" width="0.2" height="15.0" fill="rgb(235,160,35)" rx="2" ry="2" />
<text  x="74.42" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (4 samples, 0.07%)</title><rect x="1145.8" y="2005" width="0.8" height="15.0" fill="rgb(223,31,13)" rx="2" ry="2" />
<text  x="1148.79" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="470.6" y="1765" width="0.2" height="15.0" fill="rgb(231,131,35)" rx="2" ry="2" />
<text  x="473.56" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (8 samples, 0.14%)</title><rect x="532.6" y="1989" width="1.6" height="15.0" fill="rgb(211,107,6)" rx="2" ry="2" />
<text  x="535.58" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="707.2" y="1973" width="0.6" height="15.0" fill="rgb(237,229,48)" rx="2" ry="2" />
<text  x="710.24" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="535.4" y="1957" width="0.4" height="15.0" fill="rgb(214,93,23)" rx="2" ry="2" />
<text  x="538.38" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="854.1" y="1893" width="0.6" height="15.0" fill="rgb(250,158,20)" rx="2" ry="2" />
<text  x="857.09" y="1903.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (56 samples, 0.95%)</title><rect x="473.4" y="1973" width="11.2" height="15.0" fill="rgb(230,47,38)" rx="2" ry="2" />
<text  x="476.36" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="216.7" y="1797" width="0.4" height="15.0" fill="rgb(215,5,16)" rx="2" ry="2" />
<text  x="219.67" y="1807.5" ></text>
</g>
<g >
<title>__get_user_4 (4 samples, 0.07%)</title><rect x="697.8" y="1893" width="0.8" height="15.0" fill="rgb(233,115,19)" rx="2" ry="2" />
<text  x="700.83" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="583.0" y="1861" width="0.2" height="15.0" fill="rgb(213,206,53)" rx="2" ry="2" />
<text  x="585.99" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="357.1" y="1909" width="0.4" height="15.0" fill="rgb(208,151,19)" rx="2" ry="2" />
<text  x="360.12" y="1919.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="427.7" y="1941" width="0.8" height="15.0" fill="rgb(253,34,25)" rx="2" ry="2" />
<text  x="430.74" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="482.8" y="1749" width="0.6" height="15.0" fill="rgb(209,17,6)" rx="2" ry="2" />
<text  x="485.76" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="860.1" y="1701" width="0.2" height="15.0" fill="rgb(250,162,50)" rx="2" ry="2" />
<text  x="863.09" y="1711.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="715.4" y="1957" width="0.2" height="15.0" fill="rgb(229,33,16)" rx="2" ry="2" />
<text  x="718.44" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="103.4" y="133" width="14.4" height="15.0" fill="rgb(220,137,42)" rx="2" ry="2" />
<text  x="106.43" y="143.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="321.5" y="1429" width="0.2" height="15.0" fill="rgb(238,228,21)" rx="2" ry="2" />
<text  x="324.51" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="663.4" y="2021" width="0.8" height="15.0" fill="rgb(234,40,26)" rx="2" ry="2" />
<text  x="666.42" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="357.1" y="1941" width="0.4" height="15.0" fill="rgb(239,36,39)" rx="2" ry="2" />
<text  x="360.12" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="562.2" y="1989" width="0.2" height="15.0" fill="rgb(240,224,52)" rx="2" ry="2" />
<text  x="565.19" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="250.1" y="1893" width="0.2" height="15.0" fill="rgb(217,137,11)" rx="2" ry="2" />
<text  x="253.08" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (7 samples, 0.12%)</title><rect x="77.8" y="1909" width="1.4" height="15.0" fill="rgb(227,205,45)" rx="2" ry="2" />
<text  x="80.82" y="1919.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (3 samples, 0.05%)</title><rect x="101.8" y="1989" width="0.6" height="15.0" fill="rgb(224,131,54)" rx="2" ry="2" />
<text  x="104.83" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="886.1" y="1845" width="0.2" height="15.0" fill="rgb(215,229,17)" rx="2" ry="2" />
<text  x="889.10" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="137.6" y="1973" width="0.2" height="15.0" fill="rgb(214,132,49)" rx="2" ry="2" />
<text  x="140.64" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="552.8" y="1925" width="0.2" height="15.0" fill="rgb(244,46,28)" rx="2" ry="2" />
<text  x="555.78" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="32.0" y="1941" width="0.2" height="15.0" fill="rgb(215,132,6)" rx="2" ry="2" />
<text  x="35.01" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="980.7" y="1861" width="0.2" height="15.0" fill="rgb(239,51,24)" rx="2" ry="2" />
<text  x="983.73" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="527.2" y="2037" width="0.2" height="15.0" fill="rgb(225,108,28)" rx="2" ry="2" />
<text  x="530.18" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="884.5" y="1909" width="0.2" height="15.0" fill="rgb(215,133,4)" rx="2" ry="2" />
<text  x="887.50" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="712.4" y="1941" width="0.2" height="15.0" fill="rgb(235,21,37)" rx="2" ry="2" />
<text  x="715.44" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="848.1" y="1909" width="0.2" height="15.0" fill="rgb(248,122,43)" rx="2" ry="2" />
<text  x="851.08" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="256.5" y="1765" width="0.2" height="15.0" fill="rgb(213,116,48)" rx="2" ry="2" />
<text  x="259.48" y="1775.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="358.9" y="1957" width="0.4" height="15.0" fill="rgb(217,185,43)" rx="2" ry="2" />
<text  x="361.92" y="1967.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="159.9" y="2021" width="0.2" height="15.0" fill="rgb(229,159,4)" rx="2" ry="2" />
<text  x="162.85" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="306.5" y="1621" width="0.2" height="15.0" fill="rgb(229,171,1)" rx="2" ry="2" />
<text  x="309.50" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="384.3" y="1861" width="0.4" height="15.0" fill="rgb(239,26,54)" rx="2" ry="2" />
<text  x="387.33" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="916.5" y="1717" width="0.2" height="15.0" fill="rgb(224,95,48)" rx="2" ry="2" />
<text  x="919.51" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="556.8" y="1909" width="0.6" height="15.0" fill="rgb(245,130,20)" rx="2" ry="2" />
<text  x="559.79" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="134.6" y="1957" width="0.2" height="15.0" fill="rgb(206,24,42)" rx="2" ry="2" />
<text  x="137.64" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="565.8" y="1909" width="0.2" height="15.0" fill="rgb(248,45,30)" rx="2" ry="2" />
<text  x="568.79" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="636.4" y="2005" width="1.0" height="15.0" fill="rgb(233,124,34)" rx="2" ry="2" />
<text  x="639.41" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="623.4" y="1781" width="0.2" height="15.0" fill="rgb(207,54,9)" rx="2" ry="2" />
<text  x="626.41" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="890.1" y="1701" width="0.2" height="15.0" fill="rgb(242,28,50)" rx="2" ry="2" />
<text  x="893.10" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="611.4" y="1637" width="0.2" height="15.0" fill="rgb(205,85,25)" rx="2" ry="2" />
<text  x="614.40" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (5 samples, 0.08%)</title><rect x="911.1" y="2005" width="1.0" height="15.0" fill="rgb(243,90,47)" rx="2" ry="2" />
<text  x="914.11" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="402.1" y="1653" width="0.2" height="15.0" fill="rgb(215,191,23)" rx="2" ry="2" />
<text  x="405.13" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="897.5" y="1941" width="0.8" height="15.0" fill="rgb(219,98,8)" rx="2" ry="2" />
<text  x="900.50" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="267.1" y="1829" width="0.2" height="15.0" fill="rgb(236,1,2)" rx="2" ry="2" />
<text  x="270.09" y="1839.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="697.6" y="1605" width="0.2" height="15.0" fill="rgb(221,78,54)" rx="2" ry="2" />
<text  x="700.63" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1126.2" y="1909" width="0.2" height="15.0" fill="rgb(251,91,43)" rx="2" ry="2" />
<text  x="1129.18" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="52.2" y="1941" width="0.4" height="15.0" fill="rgb(233,169,44)" rx="2" ry="2" />
<text  x="55.21" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="635.6" y="2037" width="0.4" height="15.0" fill="rgb(208,88,0)" rx="2" ry="2" />
<text  x="638.61" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1445" width="16.8" height="15.0" fill="rgb(234,184,25)" rx="2" ry="2" />
<text  x="106.03" y="1455.5" ></text>
</g>
<g >
<title>close@plt (2 samples, 0.03%)</title><rect x="840.3" y="1909" width="0.4" height="15.0" fill="rgb(225,109,34)" rx="2" ry="2" />
<text  x="843.28" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1053.6" y="1877" width="0.2" height="15.0" fill="rgb(223,88,25)" rx="2" ry="2" />
<text  x="1056.55" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="834.1" y="1605" width="0.2" height="15.0" fill="rgb(247,31,44)" rx="2" ry="2" />
<text  x="837.08" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="638.2" y="2005" width="0.2" height="15.0" fill="rgb(229,65,52)" rx="2" ry="2" />
<text  x="641.21" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="328.5" y="1685" width="0.4" height="15.0" fill="rgb(243,109,53)" rx="2" ry="2" />
<text  x="331.51" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="561.0" y="1877" width="0.2" height="15.0" fill="rgb(214,58,40)" rx="2" ry="2" />
<text  x="563.99" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="54.2" y="1829" width="0.2" height="15.0" fill="rgb(239,27,23)" rx="2" ry="2" />
<text  x="57.21" y="1839.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="635.4" y="1893" width="0.2" height="15.0" fill="rgb(254,191,16)" rx="2" ry="2" />
<text  x="638.41" y="1903.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.6" y="1365" width="0.2" height="15.0" fill="rgb(239,22,21)" rx="2" ry="2" />
<text  x="122.64" y="1375.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::AsyncWriter (1 samples, 0.02%)</title><rect x="582.0" y="1989" width="0.2" height="15.0" fill="rgb(223,210,32)" rx="2" ry="2" />
<text  x="584.99" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="103.0" y="1493" width="16.8" height="15.0" fill="rgb(227,167,35)" rx="2" ry="2" />
<text  x="106.03" y="1503.5" ></text>
</g>
<g >
<title>sch_direct_xmit (71 samples, 1.20%)</title><rect x="790.7" y="1557" width="14.2" height="15.0" fill="rgb(252,211,17)" rx="2" ry="2" />
<text  x="793.66" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="483.6" y="1621" width="0.2" height="15.0" fill="rgb(220,86,47)" rx="2" ry="2" />
<text  x="486.56" y="1631.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="20.6" y="2005" width="0.4" height="15.0" fill="rgb(239,40,36)" rx="2" ry="2" />
<text  x="23.60" y="2015.5" ></text>
</g>
<g >
<title>mutex_lock (5 samples, 0.08%)</title><rect x="501.6" y="1973" width="1.0" height="15.0" fill="rgb(246,123,41)" rx="2" ry="2" />
<text  x="504.57" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1110.0" y="1893" width="0.2" height="15.0" fill="rgb(224,206,20)" rx="2" ry="2" />
<text  x="1112.97" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="290.7" y="1685" width="0.2" height="15.0" fill="rgb(230,99,22)" rx="2" ry="2" />
<text  x="293.70" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="889.1" y="1749" width="0.2" height="15.0" fill="rgb(224,219,6)" rx="2" ry="2" />
<text  x="892.10" y="1759.5" ></text>
</g>
<g >
<title>__libc_fcntl (1 samples, 0.02%)</title><rect x="225.3" y="2037" width="0.2" height="15.0" fill="rgb(208,65,29)" rx="2" ry="2" />
<text  x="228.27" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="85.2" y="1925" width="0.2" height="15.0" fill="rgb(216,116,15)" rx="2" ry="2" />
<text  x="88.23" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1148.4" y="1957" width="0.2" height="15.0" fill="rgb(242,62,25)" rx="2" ry="2" />
<text  x="1151.39" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="831.9" y="1861" width="0.2" height="15.0" fill="rgb(215,2,39)" rx="2" ry="2" />
<text  x="834.88" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (4 samples, 0.07%)</title><rect x="138.0" y="2005" width="0.8" height="15.0" fill="rgb(213,180,8)" rx="2" ry="2" />
<text  x="141.04" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (68 samples, 1.15%)</title><rect x="567.8" y="2005" width="13.6" height="15.0" fill="rgb(229,152,17)" rx="2" ry="2" />
<text  x="570.79" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="211.3" y="1909" width="1.4" height="15.0" fill="rgb(223,26,0)" rx="2" ry="2" />
<text  x="214.27" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="339.5" y="1893" width="0.6" height="15.0" fill="rgb(216,124,34)" rx="2" ry="2" />
<text  x="342.51" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="97.8" y="1861" width="0.2" height="15.0" fill="rgb(238,63,1)" rx="2" ry="2" />
<text  x="100.83" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="587.2" y="1957" width="0.6" height="15.0" fill="rgb(212,122,25)" rx="2" ry="2" />
<text  x="590.20" y="1967.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="625.2" y="1829" width="0.2" height="15.0" fill="rgb(209,94,1)" rx="2" ry="2" />
<text  x="628.21" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="525.6" y="1717" width="0.2" height="15.0" fill="rgb(209,39,34)" rx="2" ry="2" />
<text  x="528.57" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="648.4" y="1781" width="0.2" height="15.0" fill="rgb(228,57,52)" rx="2" ry="2" />
<text  x="651.42" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="244.3" y="1861" width="0.2" height="15.0" fill="rgb(234,162,0)" rx="2" ry="2" />
<text  x="247.28" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="470.6" y="1781" width="0.2" height="15.0" fill="rgb(233,211,28)" rx="2" ry="2" />
<text  x="473.56" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="860.1" y="1893" width="0.2" height="15.0" fill="rgb(245,86,44)" rx="2" ry="2" />
<text  x="863.09" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (125 samples, 2.12%)</title><rect x="685.4" y="2021" width="25.0" height="15.0" fill="rgb(216,86,28)" rx="2" ry="2" />
<text  x="688.43" y="2031.5" >f..</text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (3 samples, 0.05%)</title><rect x="547.8" y="2021" width="0.6" height="15.0" fill="rgb(220,13,0)" rx="2" ry="2" />
<text  x="550.78" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="209.7" y="1861" width="0.8" height="15.0" fill="rgb(220,151,51)" rx="2" ry="2" />
<text  x="212.67" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="157.4" y="1829" width="0.3" height="15.0" fill="rgb(215,110,48)" rx="2" ry="2" />
<text  x="160.45" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.03%)</title><rect x="847.5" y="1893" width="0.4" height="15.0" fill="rgb(224,59,41)" rx="2" ry="2" />
<text  x="850.48" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="981.7" y="1797" width="0.2" height="15.0" fill="rgb(213,214,22)" rx="2" ry="2" />
<text  x="984.73" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="135.0" y="1957" width="0.2" height="15.0" fill="rgb(240,4,18)" rx="2" ry="2" />
<text  x="138.04" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="402.1" y="1733" width="0.2" height="15.0" fill="rgb(239,115,14)" rx="2" ry="2" />
<text  x="405.13" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1144.2" y="1989" width="0.4" height="15.0" fill="rgb(226,62,22)" rx="2" ry="2" />
<text  x="1147.18" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (6 samples, 0.10%)</title><rect x="661.8" y="2021" width="1.2" height="15.0" fill="rgb(225,201,28)" rx="2" ry="2" />
<text  x="664.82" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="753.9" y="1653" width="0.2" height="15.0" fill="rgb(221,75,36)" rx="2" ry="2" />
<text  x="756.85" y="1663.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (82 samples, 1.39%)</title><rect x="788.5" y="1573" width="16.4" height="15.0" fill="rgb(249,194,54)" rx="2" ry="2" />
<text  x="791.46" y="1583.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="471.0" y="1973" width="0.2" height="15.0" fill="rgb(233,99,40)" rx="2" ry="2" />
<text  x="473.96" y="1983.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1149.8" y="1701" width="0.2" height="15.0" fill="rgb(241,63,11)" rx="2" ry="2" />
<text  x="1152.79" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="80.0" y="1733" width="0.2" height="15.0" fill="rgb(222,227,3)" rx="2" ry="2" />
<text  x="83.02" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="103.2" y="1173" width="15.8" height="15.0" fill="rgb(217,219,21)" rx="2" ry="2" />
<text  x="106.23" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10 samples, 0.17%)</title><rect x="286.1" y="1589" width="2.0" height="15.0" fill="rgb(230,59,7)" rx="2" ry="2" />
<text  x="289.09" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="402.1" y="1861" width="0.2" height="15.0" fill="rgb(252,47,46)" rx="2" ry="2" />
<text  x="405.13" y="1871.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (1 samples, 0.02%)</title><rect x="142.6" y="1909" width="0.2" height="15.0" fill="rgb(254,149,28)" rx="2" ry="2" />
<text  x="145.64" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="53.0" y="1861" width="0.2" height="15.0" fill="rgb(249,40,17)" rx="2" ry="2" />
<text  x="56.01" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1120.2" y="1429" width="0.2" height="15.0" fill="rgb(210,81,54)" rx="2" ry="2" />
<text  x="1123.18" y="1439.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (7 samples, 0.12%)</title><rect x="962.7" y="2021" width="1.4" height="15.0" fill="rgb(231,220,53)" rx="2" ry="2" />
<text  x="965.72" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="533.0" y="1957" width="0.4" height="15.0" fill="rgb(209,23,53)" rx="2" ry="2" />
<text  x="535.98" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="533.6" y="1957" width="0.2" height="15.0" fill="rgb(252,128,52)" rx="2" ry="2" />
<text  x="536.58" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="936.3" y="1669" width="0.2" height="15.0" fill="rgb(231,219,7)" rx="2" ry="2" />
<text  x="939.31" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="611.4" y="1589" width="0.2" height="15.0" fill="rgb(209,90,37)" rx="2" ry="2" />
<text  x="614.40" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="143.8" y="1909" width="1.0" height="15.0" fill="rgb(244,82,40)" rx="2" ry="2" />
<text  x="146.85" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.08%)</title><rect x="426.5" y="1925" width="1.0" height="15.0" fill="rgb(242,76,28)" rx="2" ry="2" />
<text  x="429.54" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (2 samples, 0.03%)</title><rect x="935.5" y="1941" width="0.4" height="15.0" fill="rgb(240,16,18)" rx="2" ry="2" />
<text  x="938.51" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (73 samples, 1.24%)</title><rect x="291.7" y="1701" width="14.6" height="15.0" fill="rgb(240,68,44)" rx="2" ry="2" />
<text  x="294.70" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="603.4" y="1765" width="0.2" height="15.0" fill="rgb(227,229,28)" rx="2" ry="2" />
<text  x="606.40" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="611.4" y="1749" width="0.2" height="15.0" fill="rgb(241,38,3)" rx="2" ry="2" />
<text  x="614.40" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output2 (48 samples, 0.81%)</title><rect x="1110.6" y="1797" width="9.6" height="15.0" fill="rgb(235,126,36)" rx="2" ry="2" />
<text  x="1113.57" y="1807.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="31.4" y="2005" width="0.2" height="15.0" fill="rgb(211,82,21)" rx="2" ry="2" />
<text  x="34.41" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="831.7" y="1685" width="0.2" height="15.0" fill="rgb(233,191,37)" rx="2" ry="2" />
<text  x="834.68" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="610.6" y="1797" width="0.2" height="15.0" fill="rgb(238,85,38)" rx="2" ry="2" />
<text  x="613.60" y="1807.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="314.1" y="1797" width="0.2" height="15.0" fill="rgb(224,70,13)" rx="2" ry="2" />
<text  x="317.10" y="1807.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(248,64,30)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (3 samples, 0.05%)</title><rect x="988.9" y="1989" width="0.6" height="15.0" fill="rgb(246,160,37)" rx="2" ry="2" />
<text  x="991.93" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="914.9" y="1941" width="0.2" height="15.0" fill="rgb(217,198,17)" rx="2" ry="2" />
<text  x="917.91" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="623.4" y="1717" width="0.2" height="15.0" fill="rgb(238,157,5)" rx="2" ry="2" />
<text  x="626.41" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="936.3" y="1829" width="0.2" height="15.0" fill="rgb(250,144,29)" rx="2" ry="2" />
<text  x="939.31" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="711.4" y="1877" width="0.2" height="15.0" fill="rgb(252,125,7)" rx="2" ry="2" />
<text  x="714.44" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="956.5" y="2005" width="4.6" height="15.0" fill="rgb(216,205,24)" rx="2" ry="2" />
<text  x="959.52" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (70 samples, 1.19%)</title><rect x="142.8" y="1941" width="14.0" height="15.0" fill="rgb(236,190,45)" rx="2" ry="2" />
<text  x="145.85" y="1951.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(220,74,38)" rx="2" ry="2" />
<text  x="15.40" y="2079.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="647.4" y="1797" width="0.2" height="15.0" fill="rgb(209,158,0)" rx="2" ry="2" />
<text  x="650.42" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="118.6" y="181" width="0.2" height="15.0" fill="rgb(251,165,5)" rx="2" ry="2" />
<text  x="121.64" y="191.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (2 samples, 0.03%)</title><rect x="1184.8" y="2053" width="0.4" height="15.0" fill="rgb(218,196,19)" rx="2" ry="2" />
<text  x="1187.80" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1142.0" y="1989" width="0.4" height="15.0" fill="rgb(217,140,21)" rx="2" ry="2" />
<text  x="1144.98" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="864.1" y="1973" width="0.4" height="15.0" fill="rgb(213,189,40)" rx="2" ry="2" />
<text  x="867.09" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="546.8" y="1877" width="0.2" height="15.0" fill="rgb(208,191,31)" rx="2" ry="2" />
<text  x="549.78" y="1887.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="1137.4" y="1941" width="0.2" height="15.0" fill="rgb(221,94,45)" rx="2" ry="2" />
<text  x="1140.38" y="1951.5" ></text>
</g>
<g >
<title>netif_skb_features (7 samples, 0.12%)</title><rect x="803.1" y="1509" width="1.4" height="15.0" fill="rgb(242,47,13)" rx="2" ry="2" />
<text  x="806.07" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="152.4" y="1877" width="0.8" height="15.0" fill="rgb(232,198,31)" rx="2" ry="2" />
<text  x="155.45" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="286.5" y="1413" width="0.2" height="15.0" fill="rgb(231,209,32)" rx="2" ry="2" />
<text  x="289.49" y="1423.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="590.4" y="1893" width="0.2" height="15.0" fill="rgb(237,162,2)" rx="2" ry="2" />
<text  x="593.40" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="635.2" y="1973" width="0.2" height="15.0" fill="rgb(220,45,39)" rx="2" ry="2" />
<text  x="638.21" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="333.3" y="1797" width="0.2" height="15.0" fill="rgb(230,61,37)" rx="2" ry="2" />
<text  x="336.31" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="480.6" y="1909" width="2.8" height="15.0" fill="rgb(235,107,25)" rx="2" ry="2" />
<text  x="483.56" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="985.3" y="1909" width="0.4" height="15.0" fill="rgb(210,41,44)" rx="2" ry="2" />
<text  x="988.33" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.81%)</title><rect x="569.0" y="1973" width="9.6" height="15.0" fill="rgb(228,198,16)" rx="2" ry="2" />
<text  x="571.99" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="560.4" y="1781" width="0.2" height="15.0" fill="rgb(226,10,22)" rx="2" ry="2" />
<text  x="563.39" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="156.0" y="1909" width="0.4" height="15.0" fill="rgb(224,214,7)" rx="2" ry="2" />
<text  x="159.05" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="423.5" y="1893" width="0.8" height="15.0" fill="rgb(246,209,5)" rx="2" ry="2" />
<text  x="426.54" y="1903.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="751.9" y="1557" width="0.2" height="15.0" fill="rgb(233,20,40)" rx="2" ry="2" />
<text  x="754.85" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="712.4" y="1925" width="0.2" height="15.0" fill="rgb(228,170,50)" rx="2" ry="2" />
<text  x="715.44" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="223.1" y="1861" width="0.2" height="15.0" fill="rgb(249,199,7)" rx="2" ry="2" />
<text  x="226.07" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="707.2" y="1717" width="0.2" height="15.0" fill="rgb(228,161,25)" rx="2" ry="2" />
<text  x="710.24" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="648.6" y="1925" width="0.2" height="15.0" fill="rgb(251,176,38)" rx="2" ry="2" />
<text  x="651.62" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="965.3" y="2037" width="0.2" height="15.0" fill="rgb(221,41,17)" rx="2" ry="2" />
<text  x="968.32" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="630.0" y="1973" width="0.2" height="15.0" fill="rgb(208,198,37)" rx="2" ry="2" />
<text  x="633.01" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (10 samples, 0.17%)</title><rect x="56.4" y="1925" width="2.0" height="15.0" fill="rgb(216,140,22)" rx="2" ry="2" />
<text  x="59.42" y="1935.5" ></text>
</g>
<g >
<title>__close (19 samples, 0.32%)</title><rect x="956.5" y="1973" width="3.8" height="15.0" fill="rgb(235,22,11)" rx="2" ry="2" />
<text  x="959.52" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="321.5" y="1525" width="0.2" height="15.0" fill="rgb(223,73,5)" rx="2" ry="2" />
<text  x="324.51" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="118.2" y="53" width="0.2" height="15.0" fill="rgb(217,85,15)" rx="2" ry="2" />
<text  x="121.24" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="890.5" y="1925" width="0.2" height="15.0" fill="rgb(217,54,10)" rx="2" ry="2" />
<text  x="893.50" y="1935.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="781.3" y="1669" width="0.2" height="15.0" fill="rgb(226,158,41)" rx="2" ry="2" />
<text  x="784.26" y="1679.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="271.9" y="1573" width="0.2" height="15.0" fill="rgb(248,47,17)" rx="2" ry="2" />
<text  x="274.89" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="1013" width="15.6" height="15.0" fill="rgb(242,98,51)" rx="2" ry="2" />
<text  x="106.43" y="1023.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="996.3" y="1957" width="0.2" height="15.0" fill="rgb(242,74,23)" rx="2" ry="2" />
<text  x="999.33" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="849.7" y="1941" width="0.2" height="15.0" fill="rgb(241,94,32)" rx="2" ry="2" />
<text  x="852.68" y="1951.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="28.0" y="1973" width="0.4" height="15.0" fill="rgb(242,76,16)" rx="2" ry="2" />
<text  x="31.01" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="752.5" y="1573" width="0.2" height="15.0" fill="rgb(225,29,45)" rx="2" ry="2" />
<text  x="755.45" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="914.9" y="1765" width="0.2" height="15.0" fill="rgb(212,217,34)" rx="2" ry="2" />
<text  x="917.91" y="1775.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="84.8" y="1701" width="0.2" height="15.0" fill="rgb(241,22,10)" rx="2" ry="2" />
<text  x="87.83" y="1711.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="53.0" y="1605" width="0.2" height="15.0" fill="rgb(207,68,37)" rx="2" ry="2" />
<text  x="56.01" y="1615.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="314.9" y="1813" width="0.2" height="15.0" fill="rgb(252,200,18)" rx="2" ry="2" />
<text  x="317.90" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.81%)</title><rect x="970.9" y="2021" width="21.4" height="15.0" fill="rgb(248,64,41)" rx="2" ry="2" />
<text  x="973.93" y="2031.5" >[..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="66.6" y="1909" width="0.2" height="15.0" fill="rgb(206,34,40)" rx="2" ry="2" />
<text  x="69.62" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="936.3" y="1781" width="0.2" height="15.0" fill="rgb(217,66,4)" rx="2" ry="2" />
<text  x="939.31" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="647.4" y="1765" width="0.2" height="15.0" fill="rgb(236,1,53)" rx="2" ry="2" />
<text  x="650.42" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (3 samples, 0.05%)</title><rect x="860.7" y="1989" width="0.6" height="15.0" fill="rgb(231,107,7)" rx="2" ry="2" />
<text  x="863.69" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="359.5" y="1733" width="0.2" height="15.0" fill="rgb(234,25,19)" rx="2" ry="2" />
<text  x="362.52" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="848.5" y="1893" width="0.2" height="15.0" fill="rgb(252,73,39)" rx="2" ry="2" />
<text  x="851.48" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (31 samples, 0.53%)</title><rect x="130.4" y="1989" width="6.2" height="15.0" fill="rgb(245,67,8)" rx="2" ry="2" />
<text  x="133.44" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="974.3" y="1893" width="0.2" height="15.0" fill="rgb(215,164,10)" rx="2" ry="2" />
<text  x="977.33" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="44.4" y="1925" width="0.8" height="15.0" fill="rgb(215,147,6)" rx="2" ry="2" />
<text  x="47.41" y="1935.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="855.7" y="1861" width="0.4" height="15.0" fill="rgb(220,118,15)" rx="2" ry="2" />
<text  x="858.69" y="1871.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="889.3" y="1797" width="0.2" height="15.0" fill="rgb(246,122,15)" rx="2" ry="2" />
<text  x="892.30" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="760.1" y="1669" width="0.2" height="15.0" fill="rgb(237,72,30)" rx="2" ry="2" />
<text  x="763.05" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="575.8" y="1941" width="0.4" height="15.0" fill="rgb(219,133,10)" rx="2" ry="2" />
<text  x="578.79" y="1951.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (7 samples, 0.12%)</title><rect x="756.3" y="1781" width="1.4" height="15.0" fill="rgb(246,13,9)" rx="2" ry="2" />
<text  x="759.25" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="680.0" y="1637" width="0.2" height="15.0" fill="rgb(223,59,29)" rx="2" ry="2" />
<text  x="683.03" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="846.5" y="1909" width="0.2" height="15.0" fill="rgb(219,77,4)" rx="2" ry="2" />
<text  x="849.48" y="1919.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="453.2" y="1973" width="0.8" height="15.0" fill="rgb(240,160,53)" rx="2" ry="2" />
<text  x="456.15" y="1983.5" ></text>
</g>
<g >
<title>security_socket_getsockname (2 samples, 0.03%)</title><rect x="608.4" y="1861" width="0.4" height="15.0" fill="rgb(214,3,26)" rx="2" ry="2" />
<text  x="611.40" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1179.4" y="2005" width="0.2" height="15.0" fill="rgb(242,172,35)" rx="2" ry="2" />
<text  x="1182.40" y="2015.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="425.1" y="1925" width="0.2" height="15.0" fill="rgb(231,4,9)" rx="2" ry="2" />
<text  x="428.14" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1049.6" y="1957" width="0.2" height="15.0" fill="rgb(216,34,1)" rx="2" ry="2" />
<text  x="1052.55" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="428.5" y="1813" width="0.2" height="15.0" fill="rgb(251,57,4)" rx="2" ry="2" />
<text  x="431.54" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="725" width="15.4" height="15.0" fill="rgb(211,62,32)" rx="2" ry="2" />
<text  x="106.43" y="735.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="430.3" y="1685" width="0.2" height="15.0" fill="rgb(209,125,8)" rx="2" ry="2" />
<text  x="433.34" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="664.0" y="1941" width="0.2" height="15.0" fill="rgb(254,140,37)" rx="2" ry="2" />
<text  x="667.02" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="648.4" y="1877" width="0.2" height="15.0" fill="rgb(231,84,48)" rx="2" ry="2" />
<text  x="651.42" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="135.2" y="1973" width="0.2" height="15.0" fill="rgb(240,48,11)" rx="2" ry="2" />
<text  x="138.24" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="244.5" y="1813" width="0.2" height="15.0" fill="rgb(242,114,8)" rx="2" ry="2" />
<text  x="247.48" y="1823.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="190.1" y="1797" width="0.2" height="15.0" fill="rgb(215,65,21)" rx="2" ry="2" />
<text  x="193.06" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="739.4" y="1589" width="0.2" height="15.0" fill="rgb(243,74,50)" rx="2" ry="2" />
<text  x="742.45" y="1599.5" ></text>
</g>
<g >
<title>security_socket_getpeername (5 samples, 0.08%)</title><rect x="677.4" y="1861" width="1.0" height="15.0" fill="rgb(228,133,28)" rx="2" ry="2" />
<text  x="680.43" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="357.1" y="1925" width="0.4" height="15.0" fill="rgb(231,79,28)" rx="2" ry="2" />
<text  x="360.12" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="636.2" y="2005" width="0.2" height="15.0" fill="rgb(205,2,21)" rx="2" ry="2" />
<text  x="639.21" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="503.8" y="1877" width="0.4" height="15.0" fill="rgb(239,97,30)" rx="2" ry="2" />
<text  x="506.77" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="78.2" y="1749" width="0.8" height="15.0" fill="rgb(216,100,17)" rx="2" ry="2" />
<text  x="81.22" y="1759.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="216.5" y="1797" width="0.2" height="15.0" fill="rgb(216,84,54)" rx="2" ry="2" />
<text  x="219.47" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output2 (98 samples, 1.66%)</title><rect x="785.3" y="1605" width="19.6" height="15.0" fill="rgb(221,165,42)" rx="2" ry="2" />
<text  x="788.26" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="556.8" y="1925" width="0.6" height="15.0" fill="rgb(205,79,6)" rx="2" ry="2" />
<text  x="559.79" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::close (580 samples, 9.83%)</title><rect x="724.6" y="1925" width="116.1" height="15.0" fill="rgb(220,136,13)" rx="2" ry="2" />
<text  x="727.64" y="1935.5" >folly::netops:..</text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="272.9" y="1733" width="0.2" height="15.0" fill="rgb(206,190,12)" rx="2" ry="2" />
<text  x="275.89" y="1743.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (40 samples, 0.68%)</title><rect x="618.6" y="1941" width="8.0" height="15.0" fill="rgb(218,117,38)" rx="2" ry="2" />
<text  x="621.61" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.9" y="1989" width="0.2" height="15.0" fill="rgb(233,199,3)" rx="2" ry="2" />
<text  x="160.85" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="118.0" y="53" width="0.2" height="15.0" fill="rgb(214,100,19)" rx="2" ry="2" />
<text  x="121.04" y="63.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (17 samples, 0.29%)</title><rect x="284.9" y="1733" width="3.4" height="15.0" fill="rgb(220,41,25)" rx="2" ry="2" />
<text  x="287.89" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="902.3" y="2037" width="0.2" height="15.0" fill="rgb(250,134,20)" rx="2" ry="2" />
<text  x="905.30" y="2047.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="223.7" y="1957" width="0.4" height="15.0" fill="rgb(253,193,46)" rx="2" ry="2" />
<text  x="226.67" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="413.9" y="1877" width="1.2" height="15.0" fill="rgb(220,1,53)" rx="2" ry="2" />
<text  x="416.94" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="827.3" y="1493" width="0.2" height="15.0" fill="rgb(211,63,8)" rx="2" ry="2" />
<text  x="830.28" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="825.1" y="1237" width="0.2" height="15.0" fill="rgb(214,208,11)" rx="2" ry="2" />
<text  x="828.08" y="1247.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="428.5" y="1797" width="0.2" height="15.0" fill="rgb(222,15,20)" rx="2" ry="2" />
<text  x="431.54" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="972.3" y="1909" width="0.2" height="15.0" fill="rgb(237,9,12)" rx="2" ry="2" />
<text  x="975.33" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="340.5" y="2021" width="0.4" height="15.0" fill="rgb(220,95,2)" rx="2" ry="2" />
<text  x="343.51" y="2031.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="842.9" y="1909" width="0.2" height="15.0" fill="rgb(253,83,23)" rx="2" ry="2" />
<text  x="845.88" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="165.3" y="1797" width="0.2" height="15.0" fill="rgb(208,186,23)" rx="2" ry="2" />
<text  x="168.25" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1175.4" y="1957" width="0.2" height="15.0" fill="rgb(253,111,44)" rx="2" ry="2" />
<text  x="1178.40" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="835.7" y="1861" width="0.2" height="15.0" fill="rgb(217,120,14)" rx="2" ry="2" />
<text  x="838.68" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="542.2" y="1957" width="0.2" height="15.0" fill="rgb(246,7,9)" rx="2" ry="2" />
<text  x="545.18" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1073.8" y="1829" width="0.2" height="15.0" fill="rgb(228,214,14)" rx="2" ry="2" />
<text  x="1076.76" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="278.7" y="1781" width="0.2" height="15.0" fill="rgb(213,188,33)" rx="2" ry="2" />
<text  x="281.69" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="986.7" y="1893" width="0.4" height="15.0" fill="rgb(245,19,10)" rx="2" ry="2" />
<text  x="989.73" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (67 samples, 1.14%)</title><rect x="597.8" y="1909" width="13.4" height="15.0" fill="rgb(218,204,20)" rx="2" ry="2" />
<text  x="600.80" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.6" y="1909" width="0.2" height="15.0" fill="rgb(243,178,44)" rx="2" ry="2" />
<text  x="77.62" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="97.8" y="1989" width="0.2" height="15.0" fill="rgb(242,114,45)" rx="2" ry="2" />
<text  x="100.83" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="963.7" y="2005" width="0.2" height="15.0" fill="rgb(230,5,14)" rx="2" ry="2" />
<text  x="966.72" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (31 samples, 0.53%)</title><rect x="298.9" y="1685" width="6.2" height="15.0" fill="rgb(207,121,31)" rx="2" ry="2" />
<text  x="301.90" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="483.6" y="1877" width="0.2" height="15.0" fill="rgb(209,29,44)" rx="2" ry="2" />
<text  x="486.56" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="408.1" y="1765" width="0.2" height="15.0" fill="rgb(251,128,37)" rx="2" ry="2" />
<text  x="411.13" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (26 samples, 0.44%)</title><rect x="926.5" y="1909" width="5.2" height="15.0" fill="rgb(250,75,33)" rx="2" ry="2" />
<text  x="929.51" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.1" y="1941" width="0.2" height="15.0" fill="rgb(205,29,5)" rx="2" ry="2" />
<text  x="984.13" y="1951.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (258 samples, 4.37%)</title><rect x="272.9" y="1861" width="51.6" height="15.0" fill="rgb(206,85,47)" rx="2" ry="2" />
<text  x="275.89" y="1871.5" >__tcp..</text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="84.8" y="1669" width="0.2" height="15.0" fill="rgb(224,124,27)" rx="2" ry="2" />
<text  x="87.83" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.9" y="1829" width="0.2" height="15.0" fill="rgb(226,97,28)" rx="2" ry="2" />
<text  x="834.88" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="593.6" y="2021" width="0.2" height="15.0" fill="rgb(217,134,54)" rx="2" ry="2" />
<text  x="596.60" y="2031.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="841.3" y="1925" width="0.2" height="15.0" fill="rgb(210,127,20)" rx="2" ry="2" />
<text  x="844.28" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1130.8" y="1733" width="0.2" height="15.0" fill="rgb(243,75,51)" rx="2" ry="2" />
<text  x="1133.78" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="933" width="15.4" height="15.0" fill="rgb(248,5,18)" rx="2" ry="2" />
<text  x="106.43" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1110.6" y="1445" width="0.2" height="15.0" fill="rgb(228,206,24)" rx="2" ry="2" />
<text  x="1113.57" y="1455.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="951.9" y="1973" width="1.0" height="15.0" fill="rgb(249,177,16)" rx="2" ry="2" />
<text  x="954.92" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1149.8" y="2005" width="0.2" height="15.0" fill="rgb(237,172,22)" rx="2" ry="2" />
<text  x="1152.79" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="402.7" y="1877" width="0.2" height="15.0" fill="rgb(235,213,38)" rx="2" ry="2" />
<text  x="405.73" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.19%)</title><rect x="103.4" y="85" width="14.0" height="15.0" fill="rgb(207,93,46)" rx="2" ry="2" />
<text  x="106.43" y="95.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="115.8" y="37" width="0.6" height="15.0" fill="rgb(227,152,12)" rx="2" ry="2" />
<text  x="118.84" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="936.3" y="1717" width="0.2" height="15.0" fill="rgb(236,19,22)" rx="2" ry="2" />
<text  x="939.31" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (12 samples, 0.20%)</title><rect x="218.9" y="1877" width="2.4" height="15.0" fill="rgb(239,171,17)" rx="2" ry="2" />
<text  x="221.87" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="512.0" y="1749" width="0.2" height="15.0" fill="rgb(223,132,17)" rx="2" ry="2" />
<text  x="514.97" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="103.4" y="293" width="14.8" height="15.0" fill="rgb(228,48,14)" rx="2" ry="2" />
<text  x="106.43" y="303.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="428.5" y="1701" width="0.2" height="15.0" fill="rgb(224,101,30)" rx="2" ry="2" />
<text  x="431.54" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="707.4" y="1525" width="0.2" height="15.0" fill="rgb(253,155,6)" rx="2" ry="2" />
<text  x="710.44" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="742.0" y="1733" width="1.2" height="15.0" fill="rgb(217,59,4)" rx="2" ry="2" />
<text  x="745.05" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="157.4" y="1797" width="0.3" height="15.0" fill="rgb(229,7,5)" rx="2" ry="2" />
<text  x="160.45" y="1807.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="567.6" y="1973" width="0.2" height="15.0" fill="rgb(239,203,35)" rx="2" ry="2" />
<text  x="570.59" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="875.3" y="1845" width="0.2" height="15.0" fill="rgb(229,156,13)" rx="2" ry="2" />
<text  x="878.29" y="1855.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="935.3" y="1589" width="0.2" height="15.0" fill="rgb(224,208,19)" rx="2" ry="2" />
<text  x="938.31" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="885.1" y="1941" width="0.2" height="15.0" fill="rgb(227,133,42)" rx="2" ry="2" />
<text  x="888.10" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="126.2" y="1957" width="0.4" height="15.0" fill="rgb(237,193,24)" rx="2" ry="2" />
<text  x="129.24" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="60.6" y="1893" width="1.0" height="15.0" fill="rgb(234,150,32)" rx="2" ry="2" />
<text  x="63.62" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="886.1" y="1941" width="0.2" height="15.0" fill="rgb(211,28,53)" rx="2" ry="2" />
<text  x="889.10" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="933.7" y="1893" width="0.2" height="15.0" fill="rgb(230,100,22)" rx="2" ry="2" />
<text  x="936.71" y="1903.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="711.2" y="1973" width="0.2" height="15.0" fill="rgb(219,154,45)" rx="2" ry="2" />
<text  x="714.24" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="518.8" y="1797" width="0.4" height="15.0" fill="rgb(216,25,34)" rx="2" ry="2" />
<text  x="521.77" y="1807.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="969.1" y="1573" width="0.2" height="15.0" fill="rgb(248,18,32)" rx="2" ry="2" />
<text  x="972.13" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="71.4" y="1765" width="0.2" height="15.0" fill="rgb(252,104,45)" rx="2" ry="2" />
<text  x="74.42" y="1775.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="88.4" y="1957" width="1.4" height="15.0" fill="rgb(231,157,30)" rx="2" ry="2" />
<text  x="91.43" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="936.3" y="1925" width="0.2" height="15.0" fill="rgb(254,72,28)" rx="2" ry="2" />
<text  x="939.31" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="825.1" y="1205" width="0.2" height="15.0" fill="rgb(252,140,21)" rx="2" ry="2" />
<text  x="828.08" y="1215.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="585.2" y="1957" width="0.4" height="15.0" fill="rgb(254,158,21)" rx="2" ry="2" />
<text  x="588.19" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_xmit (254 samples, 4.31%)</title><rect x="273.7" y="1845" width="50.8" height="15.0" fill="rgb(230,130,10)" rx="2" ry="2" />
<text  x="276.69" y="1855.5" >tcp_w..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="890.5" y="1765" width="0.2" height="15.0" fill="rgb(220,9,14)" rx="2" ry="2" />
<text  x="893.50" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="189.9" y="1877" width="0.4" height="15.0" fill="rgb(230,223,5)" rx="2" ry="2" />
<text  x="192.86" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1148.6" y="1957" width="0.2" height="15.0" fill="rgb(220,166,49)" rx="2" ry="2" />
<text  x="1151.59" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1188.8" y="1877" width="0.4" height="15.0" fill="rgb(225,15,3)" rx="2" ry="2" />
<text  x="1191.80" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (3 samples, 0.05%)</title><rect x="1180.4" y="2053" width="0.6" height="15.0" fill="rgb(245,189,34)" rx="2" ry="2" />
<text  x="1183.40" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (11 samples, 0.19%)</title><rect x="555.8" y="1957" width="2.2" height="15.0" fill="rgb(212,59,9)" rx="2" ry="2" />
<text  x="558.79" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="787.3" y="1381" width="0.8" height="15.0" fill="rgb(219,137,52)" rx="2" ry="2" />
<text  x="790.26" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="363.5" y="1877" width="0.2" height="15.0" fill="rgb(245,107,44)" rx="2" ry="2" />
<text  x="366.52" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="707.2" y="1781" width="0.4" height="15.0" fill="rgb(254,58,49)" rx="2" ry="2" />
<text  x="710.24" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="752.5" y="1429" width="0.2" height="15.0" fill="rgb(215,195,49)" rx="2" ry="2" />
<text  x="755.45" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="126.2" y="1909" width="0.4" height="15.0" fill="rgb(216,136,23)" rx="2" ry="2" />
<text  x="129.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (3 samples, 0.05%)</title><rect x="1122.4" y="1925" width="0.6" height="15.0" fill="rgb(251,83,29)" rx="2" ry="2" />
<text  x="1125.38" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="359.5" y="1781" width="0.2" height="15.0" fill="rgb(222,117,13)" rx="2" ry="2" />
<text  x="362.52" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="914.3" y="1989" width="0.2" height="15.0" fill="rgb(228,112,2)" rx="2" ry="2" />
<text  x="917.31" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="429.9" y="1957" width="0.6" height="15.0" fill="rgb(244,108,22)" rx="2" ry="2" />
<text  x="432.94" y="1967.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="78.2" y="1717" width="0.2" height="15.0" fill="rgb(241,158,24)" rx="2" ry="2" />
<text  x="81.22" y="1727.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="890.7" y="1925" width="0.2" height="15.0" fill="rgb(207,161,6)" rx="2" ry="2" />
<text  x="893.70" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (11 samples, 0.19%)</title><rect x="587.8" y="2005" width="2.2" height="15.0" fill="rgb(236,221,19)" rx="2" ry="2" />
<text  x="590.80" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1053.6" y="1941" width="0.2" height="15.0" fill="rgb(222,155,8)" rx="2" ry="2" />
<text  x="1056.55" y="1951.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="453.2" y="1861" width="0.2" height="15.0" fill="rgb(250,106,10)" rx="2" ry="2" />
<text  x="456.15" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="664.0" y="1749" width="0.2" height="15.0" fill="rgb(240,66,15)" rx="2" ry="2" />
<text  x="667.02" y="1759.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="99.6" y="2021" width="0.2" height="15.0" fill="rgb(239,100,51)" rx="2" ry="2" />
<text  x="102.63" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1139.0" y="1781" width="0.2" height="15.0" fill="rgb(252,224,9)" rx="2" ry="2" />
<text  x="1141.98" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="118.4" y="69" width="0.2" height="15.0" fill="rgb(251,29,46)" rx="2" ry="2" />
<text  x="121.44" y="79.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="842.1" y="1829" width="0.8" height="15.0" fill="rgb(228,125,31)" rx="2" ry="2" />
<text  x="845.08" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="118.4" y="213" width="0.2" height="15.0" fill="rgb(211,88,22)" rx="2" ry="2" />
<text  x="121.44" y="223.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="747.0" y="1669" width="0.2" height="15.0" fill="rgb(233,159,28)" rx="2" ry="2" />
<text  x="750.05" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="182.7" y="1989" width="0.2" height="15.0" fill="rgb(218,37,27)" rx="2" ry="2" />
<text  x="185.66" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="314.3" y="1829" width="0.2" height="15.0" fill="rgb(229,72,44)" rx="2" ry="2" />
<text  x="317.30" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="897.3" y="1925" width="0.2" height="15.0" fill="rgb(231,78,13)" rx="2" ry="2" />
<text  x="900.30" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="565.8" y="1893" width="0.2" height="15.0" fill="rgb(231,88,5)" rx="2" ry="2" />
<text  x="568.79" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (188 samples, 3.19%)</title><rect x="915.9" y="2037" width="37.6" height="15.0" fill="rgb(211,75,20)" rx="2" ry="2" />
<text  x="918.91" y="2047.5" >fac..</text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(215,112,28)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="504.0" y="1621" width="0.2" height="15.0" fill="rgb(228,204,39)" rx="2" ry="2" />
<text  x="506.97" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="400.1" y="1845" width="0.2" height="15.0" fill="rgb(222,122,22)" rx="2" ry="2" />
<text  x="403.13" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="610.6" y="1701" width="0.2" height="15.0" fill="rgb(226,199,45)" rx="2" ry="2" />
<text  x="613.60" y="1711.5" ></text>
</g>
<g >
<title>tcp_write_queue_purge (1 samples, 0.02%)</title><rect x="843.5" y="1573" width="0.2" height="15.0" fill="rgb(216,215,0)" rx="2" ry="2" />
<text  x="846.48" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="711.4" y="1861" width="0.2" height="15.0" fill="rgb(241,147,54)" rx="2" ry="2" />
<text  x="714.44" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="384.5" y="1829" width="0.2" height="15.0" fill="rgb(251,195,28)" rx="2" ry="2" />
<text  x="387.53" y="1839.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="243.5" y="1893" width="0.4" height="15.0" fill="rgb(225,139,30)" rx="2" ry="2" />
<text  x="246.48" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="590.4" y="1877" width="0.2" height="15.0" fill="rgb(225,30,51)" rx="2" ry="2" />
<text  x="593.40" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="567.6" y="1941" width="0.2" height="15.0" fill="rgb(227,57,21)" rx="2" ry="2" />
<text  x="570.59" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="265.1" y="1845" width="0.8" height="15.0" fill="rgb(215,59,28)" rx="2" ry="2" />
<text  x="268.09" y="1855.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="503.6" y="1877" width="0.2" height="15.0" fill="rgb(254,13,41)" rx="2" ry="2" />
<text  x="506.57" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1091.4" y="1541" width="0.2" height="15.0" fill="rgb(225,33,23)" rx="2" ry="2" />
<text  x="1094.37" y="1551.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (3 samples, 0.05%)</title><rect x="696.6" y="1925" width="0.6" height="15.0" fill="rgb(244,196,44)" rx="2" ry="2" />
<text  x="699.63" y="1935.5" ></text>
</g>
<g >
<title>make_kgid (2 samples, 0.03%)</title><rect x="401.7" y="1893" width="0.4" height="15.0" fill="rgb(252,156,23)" rx="2" ry="2" />
<text  x="404.73" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="603.4" y="1781" width="0.2" height="15.0" fill="rgb(214,0,17)" rx="2" ry="2" />
<text  x="606.40" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="115.6" y="37" width="0.2" height="15.0" fill="rgb(231,15,38)" rx="2" ry="2" />
<text  x="118.64" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1176.2" y="1973" width="0.2" height="15.0" fill="rgb(219,217,27)" rx="2" ry="2" />
<text  x="1179.20" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="935.3" y="1813" width="0.2" height="15.0" fill="rgb(235,40,51)" rx="2" ry="2" />
<text  x="938.31" y="1823.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="363.5" y="1909" width="0.2" height="15.0" fill="rgb(219,154,42)" rx="2" ry="2" />
<text  x="366.52" y="1919.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.6" y="1989" width="0.2" height="15.0" fill="rgb(236,90,12)" rx="2" ry="2" />
<text  x="127.64" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_fin (294 samples, 4.98%)</title><rect x="766.9" y="1733" width="58.8" height="15.0" fill="rgb(221,31,52)" rx="2" ry="2" />
<text  x="769.86" y="1743.5" >tcp_se..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (4 samples, 0.07%)</title><rect x="867.3" y="1989" width="0.8" height="15.0" fill="rgb(246,96,37)" rx="2" ry="2" />
<text  x="870.29" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="924.1" y="1925" width="0.2" height="15.0" fill="rgb(241,177,14)" rx="2" ry="2" />
<text  x="927.11" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.90%)</title><rect x="670.2" y="1925" width="10.6" height="15.0" fill="rgb(242,45,32)" rx="2" ry="2" />
<text  x="673.22" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="664.0" y="1909" width="0.2" height="15.0" fill="rgb(226,97,6)" rx="2" ry="2" />
<text  x="667.02" y="1919.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="809.7" y="1333" width="0.2" height="15.0" fill="rgb(220,14,37)" rx="2" ry="2" />
<text  x="812.67" y="1343.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="51.4" y="1829" width="0.2" height="15.0" fill="rgb(219,87,18)" rx="2" ry="2" />
<text  x="54.41" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="428.5" y="1925" width="0.2" height="15.0" fill="rgb(237,65,54)" rx="2" ry="2" />
<text  x="431.54" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (2 samples, 0.03%)</title><rect x="915.3" y="2037" width="0.4" height="15.0" fill="rgb(205,192,10)" rx="2" ry="2" />
<text  x="918.31" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="103.4" y="997" width="15.6" height="15.0" fill="rgb(206,37,51)" rx="2" ry="2" />
<text  x="106.43" y="1007.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="858.5" y="1717" width="0.2" height="15.0" fill="rgb(212,135,16)" rx="2" ry="2" />
<text  x="861.49" y="1727.5" ></text>
</g>
<g >
<title>__GI___setsockopt (121 samples, 2.05%)</title><rect x="686.0" y="1989" width="24.2" height="15.0" fill="rgb(239,127,47)" rx="2" ry="2" />
<text  x="689.03" y="1999.5" >_..</text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="746.6" y="1701" width="0.2" height="15.0" fill="rgb(205,49,9)" rx="2" ry="2" />
<text  x="749.65" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="1000.1" y="2005" width="0.2" height="15.0" fill="rgb(245,85,19)" rx="2" ry="2" />
<text  x="1003.14" y="2015.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (6 samples, 0.10%)</title><rect x="263.7" y="1829" width="1.2" height="15.0" fill="rgb(213,119,21)" rx="2" ry="2" />
<text  x="266.69" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1130.8" y="1909" width="0.2" height="15.0" fill="rgb(218,14,24)" rx="2" ry="2" />
<text  x="1133.78" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4,647 samples, 78.79%)</title><rect x="95.4" y="2053" width="929.7" height="15.0" fill="rgb(222,143,7)" rx="2" ry="2" />
<text  x="98.43" y="2063.5" >[unknown]</text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (1 samples, 0.02%)</title><rect x="139.6" y="1957" width="0.2" height="15.0" fill="rgb(252,74,12)" rx="2" ry="2" />
<text  x="142.64" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (3 samples, 0.05%)</title><rect x="24.6" y="1973" width="0.6" height="15.0" fill="rgb(208,102,40)" rx="2" ry="2" />
<text  x="27.60" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="512.0" y="1813" width="0.2" height="15.0" fill="rgb(214,41,16)" rx="2" ry="2" />
<text  x="514.97" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="560.2" y="1925" width="0.6" height="15.0" fill="rgb(252,128,16)" rx="2" ry="2" />
<text  x="563.19" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="126.2" y="1941" width="0.4" height="15.0" fill="rgb(238,90,4)" rx="2" ry="2" />
<text  x="129.24" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="75.2" y="1941" width="0.2" height="15.0" fill="rgb(241,71,17)" rx="2" ry="2" />
<text  x="78.22" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="712.4" y="2005" width="0.2" height="15.0" fill="rgb(254,38,25)" rx="2" ry="2" />
<text  x="715.44" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="264.7" y="1493" width="0.2" height="15.0" fill="rgb(235,140,38)" rx="2" ry="2" />
<text  x="267.69" y="1503.5" ></text>
</g>
<g >
<title>__libc_fcntl (66 samples, 1.12%)</title><rect x="568.2" y="1989" width="13.2" height="15.0" fill="rgb(243,29,54)" rx="2" ry="2" />
<text  x="571.19" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="483.6" y="1717" width="0.2" height="15.0" fill="rgb(254,172,16)" rx="2" ry="2" />
<text  x="486.56" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="647.4" y="1845" width="0.2" height="15.0" fill="rgb(222,56,37)" rx="2" ry="2" />
<text  x="650.42" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="271.9" y="1653" width="0.2" height="15.0" fill="rgb(206,222,53)" rx="2" ry="2" />
<text  x="274.89" y="1663.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="893.5" y="1989" width="0.6" height="15.0" fill="rgb(224,74,43)" rx="2" ry="2" />
<text  x="896.50" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (129 samples, 2.19%)</title><rect x="198.5" y="2021" width="25.8" height="15.0" fill="rgb(249,130,52)" rx="2" ry="2" />
<text  x="201.46" y="2031.5" >[..</text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="120.4" y="1141" width="0.2" height="15.0" fill="rgb(226,65,4)" rx="2" ry="2" />
<text  x="123.44" y="1151.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="1142.2" y="1909" width="0.2" height="15.0" fill="rgb(246,122,38)" rx="2" ry="2" />
<text  x="1145.18" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="859.1" y="1941" width="0.4" height="15.0" fill="rgb(221,213,15)" rx="2" ry="2" />
<text  x="862.09" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (6 samples, 0.10%)</title><rect x="787.3" y="1429" width="1.2" height="15.0" fill="rgb(217,186,20)" rx="2" ry="2" />
<text  x="790.26" y="1439.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="118.2" y="229" width="0.2" height="15.0" fill="rgb(218,96,49)" rx="2" ry="2" />
<text  x="121.24" y="239.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="117.8" y="117" width="0.2" height="15.0" fill="rgb(222,211,12)" rx="2" ry="2" />
<text  x="120.84" y="127.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="987.1" y="1893" width="0.4" height="15.0" fill="rgb(209,94,51)" rx="2" ry="2" />
<text  x="990.13" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="259.5" y="1749" width="0.2" height="15.0" fill="rgb(235,212,39)" rx="2" ry="2" />
<text  x="262.48" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="903.9" y="1957" width="0.6" height="15.0" fill="rgb(247,44,21)" rx="2" ry="2" />
<text  x="906.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (771 samples, 13.07%)</title><rect x="715.4" y="2005" width="154.3" height="15.0" fill="rgb(241,106,1)" rx="2" ry="2" />
<text  x="718.44" y="2015.5" >[unknown]</text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="860.3" y="1957" width="0.2" height="15.0" fill="rgb(249,166,0)" rx="2" ry="2" />
<text  x="863.29" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="556.0" y="1893" width="0.6" height="15.0" fill="rgb(238,80,8)" rx="2" ry="2" />
<text  x="558.99" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="244.3" y="1877" width="0.2" height="15.0" fill="rgb(242,229,26)" rx="2" ry="2" />
<text  x="247.28" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1102.0" y="1813" width="0.8" height="15.0" fill="rgb(229,221,7)" rx="2" ry="2" />
<text  x="1104.97" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="610.6" y="1541" width="0.2" height="15.0" fill="rgb(226,143,21)" rx="2" ry="2" />
<text  x="613.60" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1285" width="16.0" height="15.0" fill="rgb(209,47,48)" rx="2" ry="2" />
<text  x="106.23" y="1295.5" ></text>
</g>
<g >
<title>destroy_inode (25 samples, 0.42%)</title><rect x="747.4" y="1701" width="5.1" height="15.0" fill="rgb(216,154,44)" rx="2" ry="2" />
<text  x="750.45" y="1711.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="641.4" y="1877" width="0.2" height="15.0" fill="rgb(235,116,3)" rx="2" ry="2" />
<text  x="644.41" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="855.9" y="1829" width="0.2" height="15.0" fill="rgb(215,68,26)" rx="2" ry="2" />
<text  x="858.89" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="588.2" y="1893" width="0.2" height="15.0" fill="rgb(228,74,40)" rx="2" ry="2" />
<text  x="591.20" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="26.8" y="1941" width="0.2" height="15.0" fill="rgb(223,150,40)" rx="2" ry="2" />
<text  x="29.81" y="1951.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="817.3" y="1685" width="0.2" height="15.0" fill="rgb(242,211,35)" rx="2" ry="2" />
<text  x="820.27" y="1695.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="278.7" y="1525" width="0.2" height="15.0" fill="rgb(212,156,34)" rx="2" ry="2" />
<text  x="281.69" y="1535.5" ></text>
</g>
<g >
<title>process_backlog (47 samples, 0.80%)</title><rect x="1110.8" y="1701" width="9.4" height="15.0" fill="rgb(218,67,23)" rx="2" ry="2" />
<text  x="1113.77" y="1711.5" ></text>
</g>
<g >
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="526.0" y="2037" width="0.2" height="15.0" fill="rgb(251,77,30)" rx="2" ry="2" />
<text  x="528.97" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="829.9" y="1717" width="0.2" height="15.0" fill="rgb(216,181,22)" rx="2" ry="2" />
<text  x="832.88" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="336.7" y="1893" width="0.2" height="15.0" fill="rgb(249,185,21)" rx="2" ry="2" />
<text  x="339.71" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (6 samples, 0.10%)</title><rect x="968.3" y="2005" width="1.2" height="15.0" fill="rgb(226,163,37)" rx="2" ry="2" />
<text  x="971.32" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="84.8" y="1829" width="0.2" height="15.0" fill="rgb(252,202,29)" rx="2" ry="2" />
<text  x="87.83" y="1839.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="930.7" y="1877" width="0.2" height="15.0" fill="rgb(216,53,50)" rx="2" ry="2" />
<text  x="933.71" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="1147.2" y="2053" width="0.2" height="15.0" fill="rgb(214,149,32)" rx="2" ry="2" />
<text  x="1150.19" y="2063.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="25.2" y="1989" width="0.2" height="15.0" fill="rgb(241,57,1)" rx="2" ry="2" />
<text  x="28.21" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="217.7" y="1781" width="0.2" height="15.0" fill="rgb(224,180,10)" rx="2" ry="2" />
<text  x="220.67" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="646.4" y="1909" width="0.8" height="15.0" fill="rgb(226,117,30)" rx="2" ry="2" />
<text  x="649.42" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1188.8" y="1909" width="0.4" height="15.0" fill="rgb(252,224,25)" rx="2" ry="2" />
<text  x="1191.80" y="1919.5" ></text>
</g>
<g >
<title>dput (78 samples, 1.32%)</title><rect x="739.6" y="1797" width="15.7" height="15.0" fill="rgb(220,123,45)" rx="2" ry="2" />
<text  x="742.65" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="648.4" y="1733" width="0.2" height="15.0" fill="rgb(210,77,22)" rx="2" ry="2" />
<text  x="651.42" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1125.6" y="1861" width="0.2" height="15.0" fill="rgb(227,89,12)" rx="2" ry="2" />
<text  x="1128.58" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="561.0" y="1909" width="0.2" height="15.0" fill="rgb(235,8,1)" rx="2" ry="2" />
<text  x="563.99" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="211.5" y="1893" width="1.2" height="15.0" fill="rgb(206,84,19)" rx="2" ry="2" />
<text  x="214.47" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="854.3" y="1861" width="0.4" height="15.0" fill="rgb(242,190,44)" rx="2" ry="2" />
<text  x="857.29" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="103.4" y="469" width="15.2" height="15.0" fill="rgb(214,14,50)" rx="2" ry="2" />
<text  x="106.43" y="479.5" ></text>
</g>
<g >
<title>sock_destroy_inode (1 samples, 0.02%)</title><rect x="752.9" y="1701" width="0.2" height="15.0" fill="rgb(218,120,12)" rx="2" ry="2" />
<text  x="755.85" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="49.0" y="1877" width="0.4" height="15.0" fill="rgb(234,153,8)" rx="2" ry="2" />
<text  x="52.01" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="381.5" y="1829" width="0.2" height="15.0" fill="rgb(241,25,50)" rx="2" ry="2" />
<text  x="384.53" y="1839.5" ></text>
</g>
<g >
<title>swiotlb_unmap_page (1 samples, 0.02%)</title><rect x="267.7" y="1749" width="0.2" height="15.0" fill="rgb(231,48,8)" rx="2" ry="2" />
<text  x="270.69" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="787.7" y="1349" width="0.4" height="15.0" fill="rgb(226,173,3)" rx="2" ry="2" />
<text  x="790.66" y="1359.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="809.7" y="1365" width="0.2" height="15.0" fill="rgb(232,221,26)" rx="2" ry="2" />
<text  x="812.67" y="1375.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="595.6" y="1925" width="0.8" height="15.0" fill="rgb(223,174,14)" rx="2" ry="2" />
<text  x="598.60" y="1935.5" ></text>
</g>
<g >
<title>__libc_sendmsg (595 samples, 10.09%)</title><rect x="225.5" y="2037" width="119.0" height="15.0" fill="rgb(214,42,1)" rx="2" ry="2" />
<text  x="228.47" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="157.4" y="1701" width="0.3" height="15.0" fill="rgb(243,12,21)" rx="2" ry="2" />
<text  x="160.45" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (3 samples, 0.05%)</title><rect x="961.9" y="2037" width="0.6" height="15.0" fill="rgb(229,109,39)" rx="2" ry="2" />
<text  x="964.92" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="626.2" y="1845" width="0.2" height="15.0" fill="rgb(253,171,53)" rx="2" ry="2" />
<text  x="629.21" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="969.1" y="1893" width="0.4" height="15.0" fill="rgb(236,11,4)" rx="2" ry="2" />
<text  x="972.13" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="668.6" y="1925" width="0.8" height="15.0" fill="rgb(215,62,50)" rx="2" ry="2" />
<text  x="671.62" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="715.4" y="1941" width="0.2" height="15.0" fill="rgb(219,133,33)" rx="2" ry="2" />
<text  x="718.44" y="1951.5" ></text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="756.1" y="1781" width="0.2" height="15.0" fill="rgb(232,147,24)" rx="2" ry="2" />
<text  x="759.05" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="535.8" y="1941" width="0.2" height="15.0" fill="rgb(239,175,45)" rx="2" ry="2" />
<text  x="538.78" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="578.6" y="1621" width="0.2" height="15.0" fill="rgb(251,60,40)" rx="2" ry="2" />
<text  x="581.59" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="853.3" y="1829" width="0.2" height="15.0" fill="rgb(225,169,9)" rx="2" ry="2" />
<text  x="856.29" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (41 samples, 0.70%)</title><rect x="213.1" y="1893" width="8.2" height="15.0" fill="rgb(208,98,21)" rx="2" ry="2" />
<text  x="216.07" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="538.2" y="1925" width="0.2" height="15.0" fill="rgb(247,55,7)" rx="2" ry="2" />
<text  x="541.18" y="1935.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="157.0" y="1829" width="0.2" height="15.0" fill="rgb(217,212,12)" rx="2" ry="2" />
<text  x="160.05" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="53.0" y="1781" width="0.2" height="15.0" fill="rgb(223,127,2)" rx="2" ry="2" />
<text  x="56.01" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (33 samples, 0.56%)</title><rect x="982.3" y="1925" width="6.6" height="15.0" fill="rgb(245,135,14)" rx="2" ry="2" />
<text  x="985.33" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="76.4" y="1925" width="0.4" height="15.0" fill="rgb(231,56,38)" rx="2" ry="2" />
<text  x="79.42" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="1148.8" y="1989" width="0.6" height="15.0" fill="rgb(210,33,30)" rx="2" ry="2" />
<text  x="1151.79" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="305.9" y="1669" width="0.4" height="15.0" fill="rgb(244,112,21)" rx="2" ry="2" />
<text  x="308.90" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="180.5" y="1941" width="0.2" height="15.0" fill="rgb(213,52,3)" rx="2" ry="2" />
<text  x="183.46" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="943.5" y="1829" width="0.2" height="15.0" fill="rgb(221,204,29)" rx="2" ry="2" />
<text  x="946.52" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="453.2" y="1909" width="0.8" height="15.0" fill="rgb(250,101,53)" rx="2" ry="2" />
<text  x="456.15" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="648.4" y="1493" width="0.2" height="15.0" fill="rgb(227,91,31)" rx="2" ry="2" />
<text  x="651.42" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="886.9" y="1941" width="0.2" height="15.0" fill="rgb(215,135,52)" rx="2" ry="2" />
<text  x="889.90" y="1951.5" ></text>
</g>
<g >
<title>sys_close (14 samples, 0.24%)</title><rect x="832.1" y="1861" width="2.8" height="15.0" fill="rgb(205,185,4)" rx="2" ry="2" />
<text  x="835.08" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="312.7" y="1701" width="0.2" height="15.0" fill="rgb(206,148,1)" rx="2" ry="2" />
<text  x="315.70" y="1711.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="18.4" y="1909" width="0.2" height="15.0" fill="rgb(216,214,34)" rx="2" ry="2" />
<text  x="21.40" y="1919.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (2 samples, 0.03%)</title><rect x="1004.9" y="1989" width="0.4" height="15.0" fill="rgb(252,94,39)" rx="2" ry="2" />
<text  x="1007.94" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="162.7" y="1957" width="0.4" height="15.0" fill="rgb(240,179,8)" rx="2" ry="2" />
<text  x="165.65" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.4" y="261" width="0.2" height="15.0" fill="rgb(211,154,28)" rx="2" ry="2" />
<text  x="121.44" y="271.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="408.1" y="1653" width="0.2" height="15.0" fill="rgb(209,209,41)" rx="2" ry="2" />
<text  x="411.13" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="634.2" y="1957" width="0.2" height="15.0" fill="rgb(245,25,28)" rx="2" ry="2" />
<text  x="637.21" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="825.1" y="1349" width="0.2" height="15.0" fill="rgb(243,28,7)" rx="2" ry="2" />
<text  x="828.08" y="1359.5" ></text>
</g>
<g >
<title>task_work_run (478 samples, 8.10%)</title><rect x="736.2" y="1845" width="95.7" height="15.0" fill="rgb(220,48,38)" rx="2" ry="2" />
<text  x="739.25" y="1855.5" >task_work_run</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="249.1" y="1701" width="0.2" height="15.0" fill="rgb(239,157,48)" rx="2" ry="2" />
<text  x="252.08" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="980.7" y="1781" width="0.2" height="15.0" fill="rgb(207,54,9)" rx="2" ry="2" />
<text  x="983.73" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="914.1" y="2021" width="1.2" height="15.0" fill="rgb(234,80,6)" rx="2" ry="2" />
<text  x="917.11" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="75.6" y="1957" width="0.2" height="15.0" fill="rgb(224,151,1)" rx="2" ry="2" />
<text  x="78.62" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="273.1" y="1621" width="0.2" height="15.0" fill="rgb(206,62,1)" rx="2" ry="2" />
<text  x="276.09" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="76.0" y="1941" width="0.2" height="15.0" fill="rgb(212,48,50)" rx="2" ry="2" />
<text  x="79.02" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="611.6" y="1893" width="0.2" height="15.0" fill="rgb(231,55,6)" rx="2" ry="2" />
<text  x="614.60" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="953.5" y="2021" width="0.8" height="15.0" fill="rgb(239,163,44)" rx="2" ry="2" />
<text  x="956.52" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="984.7" y="1813" width="0.2" height="15.0" fill="rgb(225,221,13)" rx="2" ry="2" />
<text  x="987.73" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="844.9" y="1925" width="0.6" height="15.0" fill="rgb(228,78,9)" rx="2" ry="2" />
<text  x="847.88" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1088.0" y="1909" width="0.6" height="15.0" fill="rgb(243,197,41)" rx="2" ry="2" />
<text  x="1090.97" y="1919.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="981.7" y="1669" width="0.2" height="15.0" fill="rgb(228,79,4)" rx="2" ry="2" />
<text  x="984.73" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="932.7" y="1973" width="0.4" height="15.0" fill="rgb(215,163,29)" rx="2" ry="2" />
<text  x="935.71" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.4" y="1877" width="0.3" height="15.0" fill="rgb(212,205,18)" rx="2" ry="2" />
<text  x="160.45" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (40 samples, 0.68%)</title><rect x="54.4" y="1973" width="8.0" height="15.0" fill="rgb(241,48,44)" rx="2" ry="2" />
<text  x="57.42" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="272.9" y="1813" width="0.2" height="15.0" fill="rgb(252,87,43)" rx="2" ry="2" />
<text  x="275.89" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="512.0" y="1781" width="0.2" height="15.0" fill="rgb(225,104,8)" rx="2" ry="2" />
<text  x="514.97" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="217.7" y="1765" width="0.2" height="15.0" fill="rgb(237,189,23)" rx="2" ry="2" />
<text  x="220.67" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="879.5" y="1637" width="0.2" height="15.0" fill="rgb(213,110,51)" rx="2" ry="2" />
<text  x="882.49" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (86 samples, 1.46%)</title><rect x="972.5" y="2005" width="17.2" height="15.0" fill="rgb(209,161,0)" rx="2" ry="2" />
<text  x="975.53" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="587.6" y="1925" width="0.2" height="15.0" fill="rgb(234,173,38)" rx="2" ry="2" />
<text  x="590.60" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="704.4" y="1781" width="0.2" height="15.0" fill="rgb(247,199,4)" rx="2" ry="2" />
<text  x="707.44" y="1791.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="284.7" y="1733" width="0.2" height="15.0" fill="rgb(211,41,41)" rx="2" ry="2" />
<text  x="287.69" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="103.2" y="1205" width="16.0" height="15.0" fill="rgb(228,118,53)" rx="2" ry="2" />
<text  x="106.23" y="1215.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1033.3" y="2021" width="0.2" height="15.0" fill="rgb(253,209,53)" rx="2" ry="2" />
<text  x="1036.35" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="157.4" y="1765" width="0.3" height="15.0" fill="rgb(229,155,2)" rx="2" ry="2" />
<text  x="160.45" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (8 samples, 0.14%)</title><rect x="897.1" y="2037" width="1.6" height="15.0" fill="rgb(231,133,39)" rx="2" ry="2" />
<text  x="900.10" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="118.6" y="453" width="0.2" height="15.0" fill="rgb(242,31,28)" rx="2" ry="2" />
<text  x="121.64" y="463.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="704.4" y="1813" width="0.2" height="15.0" fill="rgb(219,54,49)" rx="2" ry="2" />
<text  x="707.44" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="707.2" y="1797" width="0.6" height="15.0" fill="rgb(225,142,18)" rx="2" ry="2" />
<text  x="710.24" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="707.4" y="1669" width="0.2" height="15.0" fill="rgb(217,67,10)" rx="2" ry="2" />
<text  x="710.44" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="555.0" y="1989" width="0.2" height="15.0" fill="rgb(247,53,31)" rx="2" ry="2" />
<text  x="557.98" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="167.5" y="1989" width="0.2" height="15.0" fill="rgb(220,130,2)" rx="2" ry="2" />
<text  x="170.45" y="1999.5" ></text>
</g>
<g >
<title>irq_may_run (1 samples, 0.02%)</title><rect x="1178.8" y="1925" width="0.2" height="15.0" fill="rgb(205,191,22)" rx="2" ry="2" />
<text  x="1181.80" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="989.5" y="1989" width="0.2" height="15.0" fill="rgb(222,132,10)" rx="2" ry="2" />
<text  x="992.53" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (22 samples, 0.37%)</title><rect x="654.2" y="2021" width="4.4" height="15.0" fill="rgb(206,205,40)" rx="2" ry="2" />
<text  x="657.22" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="546.4" y="1909" width="0.6" height="15.0" fill="rgb(226,149,7)" rx="2" ry="2" />
<text  x="549.38" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="583.0" y="1829" width="0.2" height="15.0" fill="rgb(212,129,21)" rx="2" ry="2" />
<text  x="585.99" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="155.4" y="1861" width="0.4" height="15.0" fill="rgb(233,45,45)" rx="2" ry="2" />
<text  x="158.45" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1049.6" y="1861" width="0.2" height="15.0" fill="rgb(235,164,19)" rx="2" ry="2" />
<text  x="1052.55" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="341.1" y="1989" width="0.2" height="15.0" fill="rgb(218,132,6)" rx="2" ry="2" />
<text  x="344.11" y="1999.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="429.9" y="1861" width="0.2" height="15.0" fill="rgb(205,60,35)" rx="2" ry="2" />
<text  x="432.94" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="103.4" y="693" width="15.4" height="15.0" fill="rgb(217,176,23)" rx="2" ry="2" />
<text  x="106.43" y="703.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (5 samples, 0.08%)</title><rect x="615.2" y="2005" width="1.0" height="15.0" fill="rgb(243,109,35)" rx="2" ry="2" />
<text  x="618.21" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="244.1" y="1893" width="0.4" height="15.0" fill="rgb(229,108,44)" rx="2" ry="2" />
<text  x="247.08" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (12 samples, 0.20%)</title><rect x="384.9" y="1925" width="2.4" height="15.0" fill="rgb(205,156,30)" rx="2" ry="2" />
<text  x="387.93" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.10%)</title><rect x="413.9" y="1893" width="1.2" height="15.0" fill="rgb(210,8,3)" rx="2" ry="2" />
<text  x="416.94" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="324.1" y="1797" width="0.4" height="15.0" fill="rgb(206,32,40)" rx="2" ry="2" />
<text  x="327.11" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.15%)</title><rect x="623.6" y="1861" width="1.8" height="15.0" fill="rgb(206,212,39)" rx="2" ry="2" />
<text  x="626.61" y="1871.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="30.8" y="2005" width="0.2" height="15.0" fill="rgb(232,0,50)" rx="2" ry="2" />
<text  x="33.81" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="992.1" y="2005" width="0.2" height="15.0" fill="rgb(222,208,1)" rx="2" ry="2" />
<text  x="995.13" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="595.6" y="1941" width="1.0" height="15.0" fill="rgb(231,216,16)" rx="2" ry="2" />
<text  x="598.60" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="889.3" y="1893" width="1.0" height="15.0" fill="rgb(233,120,22)" rx="2" ry="2" />
<text  x="892.30" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="84.8" y="1877" width="0.2" height="15.0" fill="rgb(251,126,7)" rx="2" ry="2" />
<text  x="87.83" y="1887.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="1087.4" y="1925" width="1.4" height="15.0" fill="rgb(216,166,41)" rx="2" ry="2" />
<text  x="1090.37" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="626.2" y="1701" width="0.2" height="15.0" fill="rgb(212,213,47)" rx="2" ry="2" />
<text  x="629.21" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="482.8" y="1877" width="0.6" height="15.0" fill="rgb(244,21,54)" rx="2" ry="2" />
<text  x="485.76" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="921.7" y="1861" width="0.8" height="15.0" fill="rgb(220,166,50)" rx="2" ry="2" />
<text  x="924.71" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="312.9" y="1733" width="0.2" height="15.0" fill="rgb(217,3,39)" rx="2" ry="2" />
<text  x="315.90" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="306.5" y="1541" width="0.2" height="15.0" fill="rgb(223,140,33)" rx="2" ry="2" />
<text  x="309.50" y="1551.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="658.4" y="1941" width="0.2" height="15.0" fill="rgb(211,79,36)" rx="2" ry="2" />
<text  x="661.42" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="935.3" y="1861" width="0.2" height="15.0" fill="rgb(214,227,21)" rx="2" ry="2" />
<text  x="938.31" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="244.5" y="1829" width="0.2" height="15.0" fill="rgb(248,171,18)" rx="2" ry="2" />
<text  x="247.48" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="531.4" y="1973" width="0.2" height="15.0" fill="rgb(243,150,45)" rx="2" ry="2" />
<text  x="534.38" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="76.2" y="1957" width="0.6" height="15.0" fill="rgb(235,229,47)" rx="2" ry="2" />
<text  x="79.22" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (11 samples, 0.19%)</title><rect x="947.3" y="2005" width="2.2" height="15.0" fill="rgb(235,140,35)" rx="2" ry="2" />
<text  x="950.32" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.6" y="1909" width="0.2" height="15.0" fill="rgb(249,109,42)" rx="2" ry="2" />
<text  x="146.65" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.1" y="1893" width="0.2" height="15.0" fill="rgb(216,172,41)" rx="2" ry="2" />
<text  x="844.08" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="858.5" y="1765" width="0.2" height="15.0" fill="rgb(209,218,18)" rx="2" ry="2" />
<text  x="861.49" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="648.4" y="1749" width="0.2" height="15.0" fill="rgb(209,159,34)" rx="2" ry="2" />
<text  x="651.42" y="1759.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="860.1" y="1637" width="0.2" height="15.0" fill="rgb(230,44,18)" rx="2" ry="2" />
<text  x="863.09" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="753.9" y="1589" width="0.2" height="15.0" fill="rgb(231,209,50)" rx="2" ry="2" />
<text  x="756.85" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="328.5" y="1733" width="0.4" height="15.0" fill="rgb(246,131,40)" rx="2" ry="2" />
<text  x="331.51" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1110.0" y="1717" width="0.2" height="15.0" fill="rgb(216,183,40)" rx="2" ry="2" />
<text  x="1112.97" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="908.5" y="1973" width="0.2" height="15.0" fill="rgb(212,172,45)" rx="2" ry="2" />
<text  x="911.50" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="887.5" y="1909" width="0.4" height="15.0" fill="rgb(246,106,44)" rx="2" ry="2" />
<text  x="890.50" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="402.1" y="1813" width="0.2" height="15.0" fill="rgb(254,42,39)" rx="2" ry="2" />
<text  x="405.13" y="1823.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1067.2" y="1861" width="0.2" height="15.0" fill="rgb(235,67,3)" rx="2" ry="2" />
<text  x="1070.16" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="900.1" y="2037" width="0.2" height="15.0" fill="rgb(250,138,53)" rx="2" ry="2" />
<text  x="903.10" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.70%)</title><rect x="1152.2" y="1957" width="8.2" height="15.0" fill="rgb(227,9,5)" rx="2" ry="2" />
<text  x="1155.19" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="711.4" y="1973" width="0.2" height="15.0" fill="rgb(241,91,53)" rx="2" ry="2" />
<text  x="714.44" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="142.0" y="1909" width="0.2" height="15.0" fill="rgb(241,99,16)" rx="2" ry="2" />
<text  x="145.04" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="848.5" y="1813" width="0.2" height="15.0" fill="rgb(232,14,8)" rx="2" ry="2" />
<text  x="851.48" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="103.0" y="1669" width="17.6" height="15.0" fill="rgb(212,106,24)" rx="2" ry="2" />
<text  x="106.03" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="157.9" y="1845" width="0.2" height="15.0" fill="rgb(241,57,0)" rx="2" ry="2" />
<text  x="160.85" y="1855.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1131.4" y="1989" width="0.8" height="15.0" fill="rgb(251,22,6)" rx="2" ry="2" />
<text  x="1134.38" y="1999.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="405.9" y="1877" width="0.2" height="15.0" fill="rgb(221,200,14)" rx="2" ry="2" />
<text  x="408.93" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="171.5" y="1989" width="0.2" height="15.0" fill="rgb(233,198,50)" rx="2" ry="2" />
<text  x="174.45" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="483.2" y="1573" width="0.2" height="15.0" fill="rgb(253,174,4)" rx="2" ry="2" />
<text  x="486.16" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="525.6" y="1829" width="0.2" height="15.0" fill="rgb(225,112,28)" rx="2" ry="2" />
<text  x="528.57" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="875.3" y="1749" width="0.2" height="15.0" fill="rgb(219,11,45)" rx="2" ry="2" />
<text  x="878.29" y="1759.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="753.9" y="1445" width="0.2" height="15.0" fill="rgb(212,41,24)" rx="2" ry="2" />
<text  x="756.85" y="1455.5" ></text>
</g>
<g >
<title>inet_getname (16 samples, 0.27%)</title><rect x="604.8" y="1861" width="3.2" height="15.0" fill="rgb(241,168,19)" rx="2" ry="2" />
<text  x="607.80" y="1871.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="421.1" y="1861" width="0.8" height="15.0" fill="rgb(213,113,14)" rx="2" ry="2" />
<text  x="424.14" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="963.9" y="1925" width="0.2" height="15.0" fill="rgb(229,40,19)" rx="2" ry="2" />
<text  x="966.92" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="929.1" y="1813" width="0.2" height="15.0" fill="rgb(217,106,0)" rx="2" ry="2" />
<text  x="932.11" y="1823.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="504.8" y="1893" width="0.2" height="15.0" fill="rgb(238,52,21)" rx="2" ry="2" />
<text  x="507.77" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="267.5" y="1845" width="0.4" height="15.0" fill="rgb(231,38,30)" rx="2" ry="2" />
<text  x="270.49" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="211.5" y="1845" width="0.2" height="15.0" fill="rgb(208,202,25)" rx="2" ry="2" />
<text  x="214.47" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1139.0" y="1829" width="0.2" height="15.0" fill="rgb(243,39,9)" rx="2" ry="2" />
<text  x="1141.98" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="339.7" y="1733" width="0.4" height="15.0" fill="rgb(205,162,2)" rx="2" ry="2" />
<text  x="342.71" y="1743.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="482.4" y="1877" width="0.2" height="15.0" fill="rgb(213,125,34)" rx="2" ry="2" />
<text  x="485.36" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="829.9" y="1605" width="0.2" height="15.0" fill="rgb(240,156,16)" rx="2" ry="2" />
<text  x="832.88" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="846.7" y="1909" width="0.2" height="15.0" fill="rgb(232,77,9)" rx="2" ry="2" />
<text  x="849.68" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1125.6" y="1781" width="0.2" height="15.0" fill="rgb(218,11,34)" rx="2" ry="2" />
<text  x="1128.58" y="1791.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="860.1" y="1605" width="0.2" height="15.0" fill="rgb(223,67,37)" rx="2" ry="2" />
<text  x="863.09" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="936.3" y="1797" width="0.2" height="15.0" fill="rgb(211,84,31)" rx="2" ry="2" />
<text  x="939.31" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="578.6" y="1925" width="0.2" height="15.0" fill="rgb(211,220,24)" rx="2" ry="2" />
<text  x="581.59" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="74.6" y="1797" width="0.2" height="15.0" fill="rgb(236,76,13)" rx="2" ry="2" />
<text  x="77.62" y="1807.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1120.0" y="1525" width="0.2" height="15.0" fill="rgb(210,161,52)" rx="2" ry="2" />
<text  x="1122.98" y="1535.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (16 samples, 0.27%)</title><rect x="950.1" y="2005" width="3.2" height="15.0" fill="rgb(231,220,28)" rx="2" ry="2" />
<text  x="953.12" y="2015.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="931.9" y="1925" width="0.2" height="15.0" fill="rgb(236,87,52)" rx="2" ry="2" />
<text  x="934.91" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="103.4" y="341" width="15.0" height="15.0" fill="rgb(228,25,42)" rx="2" ry="2" />
<text  x="106.43" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="415.1" y="1813" width="0.8" height="15.0" fill="rgb(213,130,45)" rx="2" ry="2" />
<text  x="418.14" y="1823.5" ></text>
</g>
<g >
<title>syscall@plt (1 samples, 0.02%)</title><rect x="1164.2" y="1973" width="0.2" height="15.0" fill="rgb(247,147,10)" rx="2" ry="2" />
<text  x="1167.19" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="332.5" y="1637" width="0.2" height="15.0" fill="rgb(216,2,48)" rx="2" ry="2" />
<text  x="335.51" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(231,90,39)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="935.3" y="1749" width="0.2" height="15.0" fill="rgb(228,166,11)" rx="2" ry="2" />
<text  x="938.31" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="611.6" y="1829" width="0.2" height="15.0" fill="rgb(231,115,10)" rx="2" ry="2" />
<text  x="614.60" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="912.1" y="2005" width="0.2" height="15.0" fill="rgb(253,151,21)" rx="2" ry="2" />
<text  x="915.11" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1120.2" y="1669" width="0.2" height="15.0" fill="rgb(249,78,44)" rx="2" ry="2" />
<text  x="1123.18" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="285.7" y="1637" width="0.4" height="15.0" fill="rgb(221,206,5)" rx="2" ry="2" />
<text  x="288.69" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="863.1" y="1989" width="0.8" height="15.0" fill="rgb(219,82,19)" rx="2" ry="2" />
<text  x="866.09" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="512.0" y="1669" width="0.2" height="15.0" fill="rgb(227,213,18)" rx="2" ry="2" />
<text  x="514.97" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="565.6" y="1733" width="0.2" height="15.0" fill="rgb(240,15,11)" rx="2" ry="2" />
<text  x="568.59" y="1743.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (3 samples, 0.05%)</title><rect x="585.0" y="1989" width="0.6" height="15.0" fill="rgb(232,31,49)" rx="2" ry="2" />
<text  x="587.99" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="504.6" y="1893" width="0.2" height="15.0" fill="rgb(250,17,53)" rx="2" ry="2" />
<text  x="507.57" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="525.6" y="1877" width="0.2" height="15.0" fill="rgb(208,44,36)" rx="2" ry="2" />
<text  x="528.57" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1149.8" y="1989" width="0.2" height="15.0" fill="rgb(238,15,21)" rx="2" ry="2" />
<text  x="1152.79" y="1999.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (4 samples, 0.07%)</title><rect x="113.8" y="53" width="0.8" height="15.0" fill="rgb(236,210,49)" rx="2" ry="2" />
<text  x="116.84" y="63.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="264.7" y="1701" width="0.2" height="15.0" fill="rgb(208,193,54)" rx="2" ry="2" />
<text  x="267.69" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="712.4" y="2021" width="0.2" height="15.0" fill="rgb(215,158,41)" rx="2" ry="2" />
<text  x="715.44" y="2031.5" ></text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.05%)</title><rect x="97.4" y="2005" width="0.6" height="15.0" fill="rgb(217,43,40)" rx="2" ry="2" />
<text  x="100.43" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1110.6" y="1477" width="0.2" height="15.0" fill="rgb(248,65,36)" rx="2" ry="2" />
<text  x="1113.57" y="1487.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="648.4" y="1589" width="0.2" height="15.0" fill="rgb(237,153,23)" rx="2" ry="2" />
<text  x="651.42" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="71.4" y="1717" width="0.2" height="15.0" fill="rgb(213,180,38)" rx="2" ry="2" />
<text  x="74.42" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="552.2" y="1941" width="1.0" height="15.0" fill="rgb(223,119,31)" rx="2" ry="2" />
<text  x="555.18" y="1951.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (43 samples, 0.73%)</title><rect x="1171.2" y="2053" width="8.6" height="15.0" fill="rgb(242,30,32)" rx="2" ry="2" />
<text  x="1174.19" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="735.2" y="1781" width="0.2" height="15.0" fill="rgb(239,110,19)" rx="2" ry="2" />
<text  x="738.25" y="1791.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="414.9" y="1829" width="0.2" height="15.0" fill="rgb(238,80,22)" rx="2" ry="2" />
<text  x="417.94" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (3 samples, 0.05%)</title><rect x="584.2" y="1989" width="0.6" height="15.0" fill="rgb(233,7,15)" rx="2" ry="2" />
<text  x="587.19" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="429.9" y="1925" width="0.6" height="15.0" fill="rgb(211,224,5)" rx="2" ry="2" />
<text  x="432.94" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="336.7" y="1813" width="0.2" height="15.0" fill="rgb(249,134,54)" rx="2" ry="2" />
<text  x="339.71" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="997.9" y="1989" width="0.6" height="15.0" fill="rgb(238,40,4)" rx="2" ry="2" />
<text  x="1000.93" y="1999.5" ></text>
</g>
<g >
<title>syscall (12 samples, 0.20%)</title><rect x="1022.7" y="2037" width="2.4" height="15.0" fill="rgb(230,142,10)" rx="2" ry="2" />
<text  x="1025.74" y="2047.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="321.5" y="1365" width="0.2" height="15.0" fill="rgb(234,140,37)" rx="2" ry="2" />
<text  x="324.51" y="1375.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.2" y="309" width="0.2" height="15.0" fill="rgb(226,132,50)" rx="2" ry="2" />
<text  x="121.24" y="319.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="739.4" y="1781" width="0.2" height="15.0" fill="rgb(214,142,48)" rx="2" ry="2" />
<text  x="742.45" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="221.3" y="1925" width="0.8" height="15.0" fill="rgb(238,137,41)" rx="2" ry="2" />
<text  x="224.27" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="321.5" y="1413" width="0.2" height="15.0" fill="rgb(249,42,41)" rx="2" ry="2" />
<text  x="324.51" y="1423.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="59.0" y="1877" width="0.2" height="15.0" fill="rgb(214,155,43)" rx="2" ry="2" />
<text  x="62.02" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1110.4" y="1861" width="0.2" height="15.0" fill="rgb(250,223,4)" rx="2" ry="2" />
<text  x="1113.37" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="216.7" y="1781" width="0.2" height="15.0" fill="rgb(241,134,21)" rx="2" ry="2" />
<text  x="219.67" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="430.3" y="1749" width="0.2" height="15.0" fill="rgb(235,0,0)" rx="2" ry="2" />
<text  x="433.34" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="890.7" y="1989" width="0.2" height="15.0" fill="rgb(244,21,54)" rx="2" ry="2" />
<text  x="893.70" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (9 samples, 0.15%)</title><rect x="43.4" y="1957" width="1.8" height="15.0" fill="rgb(228,75,48)" rx="2" ry="2" />
<text  x="46.41" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="888.7" y="1909" width="0.2" height="15.0" fill="rgb(250,224,8)" rx="2" ry="2" />
<text  x="891.70" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="363.5" y="1781" width="0.2" height="15.0" fill="rgb(212,192,5)" rx="2" ry="2" />
<text  x="366.52" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="565.8" y="1813" width="0.2" height="15.0" fill="rgb(224,209,38)" rx="2" ry="2" />
<text  x="568.79" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="984.7" y="1877" width="0.2" height="15.0" fill="rgb(235,53,40)" rx="2" ry="2" />
<text  x="987.73" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="588.2" y="1877" width="0.2" height="15.0" fill="rgb(228,180,45)" rx="2" ry="2" />
<text  x="591.20" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="146.0" y="1909" width="0.2" height="15.0" fill="rgb(224,6,46)" rx="2" ry="2" />
<text  x="149.05" y="1919.5" ></text>
</g>
<g >
<title>fd_install (1 samples, 0.02%)</title><rect x="428.9" y="1973" width="0.2" height="15.0" fill="rgb(213,48,14)" rx="2" ry="2" />
<text  x="431.94" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="764.5" y="1733" width="0.2" height="15.0" fill="rgb(246,35,33)" rx="2" ry="2" />
<text  x="767.46" y="1743.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="328.7" y="1509" width="0.2" height="15.0" fill="rgb(230,90,20)" rx="2" ry="2" />
<text  x="331.71" y="1519.5" ></text>
</g>
<g >
<title>jump_fcontext (12 samples, 0.20%)</title><rect x="989.7" y="2005" width="2.4" height="15.0" fill="rgb(252,217,20)" rx="2" ry="2" />
<text  x="992.73" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1009.1" y="1989" width="0.2" height="15.0" fill="rgb(237,83,8)" rx="2" ry="2" />
<text  x="1012.14" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="482.8" y="1733" width="0.6" height="15.0" fill="rgb(240,175,13)" rx="2" ry="2" />
<text  x="485.76" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="66.6" y="1733" width="0.2" height="15.0" fill="rgb(225,170,11)" rx="2" ry="2" />
<text  x="69.62" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="217.1" y="1829" width="0.8" height="15.0" fill="rgb(245,28,39)" rx="2" ry="2" />
<text  x="220.07" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="635.2" y="1957" width="0.2" height="15.0" fill="rgb(214,33,31)" rx="2" ry="2" />
<text  x="638.21" y="1967.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="393.9" y="1957" width="0.2" height="15.0" fill="rgb(245,167,3)" rx="2" ry="2" />
<text  x="396.93" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(219,226,22)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="623.4" y="1797" width="0.2" height="15.0" fill="rgb(229,118,8)" rx="2" ry="2" />
<text  x="626.41" y="1807.5" ></text>
</g>
<g >
<title>event_del_nolock_ (4 samples, 0.07%)</title><rect x="98.4" y="2005" width="0.8" height="15.0" fill="rgb(206,87,10)" rx="2" ry="2" />
<text  x="101.43" y="2015.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1067.8" y="1541" width="0.2" height="15.0" fill="rgb(223,17,5)" rx="2" ry="2" />
<text  x="1070.76" y="1551.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="28.4" y="1989" width="0.2" height="15.0" fill="rgb(225,195,40)" rx="2" ry="2" />
<text  x="31.41" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="831.9" y="1605" width="0.2" height="15.0" fill="rgb(222,194,0)" rx="2" ry="2" />
<text  x="834.88" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.0" y="1925" width="0.2" height="15.0" fill="rgb(214,154,20)" rx="2" ry="2" />
<text  x="160.05" y="1935.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.03%)</title><rect x="184.1" y="2021" width="0.4" height="15.0" fill="rgb(205,151,36)" rx="2" ry="2" />
<text  x="187.06" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="886.1" y="1813" width="0.2" height="15.0" fill="rgb(207,69,32)" rx="2" ry="2" />
<text  x="889.10" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="610.6" y="1781" width="0.2" height="15.0" fill="rgb(215,149,12)" rx="2" ry="2" />
<text  x="613.60" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1110.0" y="1797" width="0.2" height="15.0" fill="rgb(205,4,47)" rx="2" ry="2" />
<text  x="1112.97" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (24 samples, 0.41%)</title><rect x="644.8" y="1957" width="4.8" height="15.0" fill="rgb(210,17,29)" rx="2" ry="2" />
<text  x="647.82" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.2" y="245" width="0.2" height="15.0" fill="rgb(223,209,29)" rx="2" ry="2" />
<text  x="121.24" y="255.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="611.6" y="1781" width="0.2" height="15.0" fill="rgb(241,213,9)" rx="2" ry="2" />
<text  x="614.60" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1005.1" y="1877" width="0.2" height="15.0" fill="rgb(236,179,43)" rx="2" ry="2" />
<text  x="1008.14" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="578.6" y="1957" width="0.2" height="15.0" fill="rgb(239,35,48)" rx="2" ry="2" />
<text  x="581.59" y="1967.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1140.2" y="2053" width="0.2" height="15.0" fill="rgb(242,5,45)" rx="2" ry="2" />
<text  x="1143.18" y="2063.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="813.5" y="1621" width="0.2" height="15.0" fill="rgb(228,14,28)" rx="2" ry="2" />
<text  x="816.47" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="970.5" y="2037" width="0.4" height="15.0" fill="rgb(209,199,39)" rx="2" ry="2" />
<text  x="973.53" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="933.7" y="1781" width="0.2" height="15.0" fill="rgb(225,174,9)" rx="2" ry="2" />
<text  x="936.71" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (7 samples, 0.12%)</title><rect x="1148.0" y="2005" width="1.4" height="15.0" fill="rgb(244,25,11)" rx="2" ry="2" />
<text  x="1150.99" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1091.2" y="1877" width="0.6" height="15.0" fill="rgb(230,128,37)" rx="2" ry="2" />
<text  x="1094.17" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="596.2" y="1909" width="0.2" height="15.0" fill="rgb(213,53,19)" rx="2" ry="2" />
<text  x="599.20" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="778.1" y="1685" width="0.4" height="15.0" fill="rgb(240,89,24)" rx="2" ry="2" />
<text  x="781.06" y="1695.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1091.6" y="1653" width="0.2" height="15.0" fill="rgb(224,34,45)" rx="2" ry="2" />
<text  x="1094.57" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1142.0" y="1797" width="0.2" height="15.0" fill="rgb(231,213,10)" rx="2" ry="2" />
<text  x="1144.98" y="1807.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (18 samples, 0.31%)</title><rect x="812.9" y="1669" width="3.6" height="15.0" fill="rgb(216,49,44)" rx="2" ry="2" />
<text  x="815.87" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="430.1" y="1893" width="0.4" height="15.0" fill="rgb(245,111,27)" rx="2" ry="2" />
<text  x="433.14" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="590.4" y="1653" width="0.2" height="15.0" fill="rgb(209,124,29)" rx="2" ry="2" />
<text  x="593.40" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="875.3" y="1829" width="0.2" height="15.0" fill="rgb(216,84,9)" rx="2" ry="2" />
<text  x="878.29" y="1839.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="280.9" y="1797" width="0.2" height="15.0" fill="rgb(235,82,6)" rx="2" ry="2" />
<text  x="283.89" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="610.6" y="1685" width="0.2" height="15.0" fill="rgb(241,15,8)" rx="2" ry="2" />
<text  x="613.60" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="267.1" y="1797" width="0.2" height="15.0" fill="rgb(215,88,45)" rx="2" ry="2" />
<text  x="270.09" y="1807.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="332.5" y="1605" width="0.2" height="15.0" fill="rgb(205,109,26)" rx="2" ry="2" />
<text  x="335.51" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="525.6" y="1845" width="0.2" height="15.0" fill="rgb(212,4,21)" rx="2" ry="2" />
<text  x="528.57" y="1855.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="925.1" y="1925" width="0.8" height="15.0" fill="rgb(238,173,29)" rx="2" ry="2" />
<text  x="928.11" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1189.0" y="1621" width="0.2" height="15.0" fill="rgb(247,217,4)" rx="2" ry="2" />
<text  x="1192.00" y="1631.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (3 samples, 0.05%)</title><rect x="84.2" y="1957" width="0.6" height="15.0" fill="rgb(241,205,12)" rx="2" ry="2" />
<text  x="87.23" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="400.1" y="1797" width="0.2" height="15.0" fill="rgb(254,3,32)" rx="2" ry="2" />
<text  x="403.13" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (22 samples, 0.37%)</title><rect x="377.3" y="1909" width="4.4" height="15.0" fill="rgb(234,101,50)" rx="2" ry="2" />
<text  x="380.32" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (40 samples, 0.68%)</title><rect x="641.8" y="1989" width="8.0" height="15.0" fill="rgb(214,48,48)" rx="2" ry="2" />
<text  x="644.81" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="84.8" y="1797" width="0.2" height="15.0" fill="rgb(236,42,3)" rx="2" ry="2" />
<text  x="87.83" y="1807.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="363.5" y="1573" width="0.2" height="15.0" fill="rgb(233,69,5)" rx="2" ry="2" />
<text  x="366.52" y="1583.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (4 samples, 0.07%)</title><rect x="162.5" y="1989" width="0.8" height="15.0" fill="rgb(248,215,3)" rx="2" ry="2" />
<text  x="165.45" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="843.5" y="1685" width="0.2" height="15.0" fill="rgb(214,140,7)" rx="2" ry="2" />
<text  x="846.48" y="1695.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="593.2" y="1989" width="0.4" height="15.0" fill="rgb(254,18,44)" rx="2" ry="2" />
<text  x="596.20" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="735.2" y="1749" width="0.2" height="15.0" fill="rgb(247,184,2)" rx="2" ry="2" />
<text  x="738.25" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="857.9" y="1877" width="0.2" height="15.0" fill="rgb(242,89,21)" rx="2" ry="2" />
<text  x="860.89" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (9 samples, 0.15%)</title><rect x="59.8" y="1925" width="1.8" height="15.0" fill="rgb(250,101,48)" rx="2" ry="2" />
<text  x="62.82" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="989.3" y="1957" width="0.2" height="15.0" fill="rgb(250,100,37)" rx="2" ry="2" />
<text  x="992.33" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1053.6" y="1909" width="0.2" height="15.0" fill="rgb(238,144,14)" rx="2" ry="2" />
<text  x="1056.55" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="588.2" y="1829" width="0.2" height="15.0" fill="rgb(249,216,21)" rx="2" ry="2" />
<text  x="591.20" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1067.8" y="1829" width="0.4" height="15.0" fill="rgb(235,205,7)" rx="2" ry="2" />
<text  x="1070.76" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="531.8" y="1765" width="0.2" height="15.0" fill="rgb(225,51,28)" rx="2" ry="2" />
<text  x="534.78" y="1775.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="285.9" y="1525" width="0.2" height="15.0" fill="rgb(214,143,23)" rx="2" ry="2" />
<text  x="288.89" y="1535.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="57.4" y="1909" width="1.0" height="15.0" fill="rgb(250,43,20)" rx="2" ry="2" />
<text  x="60.42" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (6 samples, 0.10%)</title><rect x="787.3" y="1493" width="1.2" height="15.0" fill="rgb(243,179,39)" rx="2" ry="2" />
<text  x="790.26" y="1503.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="305.3" y="1685" width="0.2" height="15.0" fill="rgb(241,191,34)" rx="2" ry="2" />
<text  x="308.30" y="1695.5" ></text>
</g>
<g >
<title>swiotlb_sync_single (1 samples, 0.02%)</title><rect x="758.9" y="1637" width="0.2" height="15.0" fill="rgb(241,203,35)" rx="2" ry="2" />
<text  x="761.85" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="560.8" y="1925" width="0.4" height="15.0" fill="rgb(224,105,24)" rx="2" ry="2" />
<text  x="563.79" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="849.1" y="1941" width="0.2" height="15.0" fill="rgb(254,50,10)" rx="2" ry="2" />
<text  x="852.08" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="512.0" y="1861" width="0.2" height="15.0" fill="rgb(250,42,21)" rx="2" ry="2" />
<text  x="514.97" y="1871.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="885.7" y="1925" width="0.2" height="15.0" fill="rgb(226,42,41)" rx="2" ry="2" />
<text  x="888.70" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="853.3" y="1749" width="0.2" height="15.0" fill="rgb(210,53,4)" rx="2" ry="2" />
<text  x="856.29" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="890.1" y="1685" width="0.2" height="15.0" fill="rgb(216,62,12)" rx="2" ry="2" />
<text  x="893.10" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="482.8" y="1701" width="0.6" height="15.0" fill="rgb(222,217,5)" rx="2" ry="2" />
<text  x="485.76" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="632.6" y="1989" width="0.4" height="15.0" fill="rgb(250,11,29)" rx="2" ry="2" />
<text  x="635.61" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="141.0" y="1909" width="0.2" height="15.0" fill="rgb(253,56,29)" rx="2" ry="2" />
<text  x="144.04" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.70%)</title><rect x="103.4" y="53" width="8.2" height="15.0" fill="rgb(250,140,46)" rx="2" ry="2" />
<text  x="106.43" y="63.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="825.1" y="1317" width="0.2" height="15.0" fill="rgb(224,88,2)" rx="2" ry="2" />
<text  x="828.08" y="1327.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="704.0" y="1877" width="0.4" height="15.0" fill="rgb(245,136,19)" rx="2" ry="2" />
<text  x="707.04" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="889.1" y="1653" width="0.2" height="15.0" fill="rgb(239,1,30)" rx="2" ry="2" />
<text  x="892.10" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::tryGetVirtualEventBase (2 samples, 0.03%)</title><rect x="142.4" y="1925" width="0.4" height="15.0" fill="rgb(229,9,32)" rx="2" ry="2" />
<text  x="145.44" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="157.4" y="1957" width="0.3" height="15.0" fill="rgb(232,73,14)" rx="2" ry="2" />
<text  x="160.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.24%)</title><rect x="103.4" y="181" width="14.6" height="15.0" fill="rgb(246,158,12)" rx="2" ry="2" />
<text  x="106.43" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="955.1" y="1957" width="0.2" height="15.0" fill="rgb(246,153,17)" rx="2" ry="2" />
<text  x="958.12" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="422.7" y="1909" width="0.2" height="15.0" fill="rgb(211,60,24)" rx="2" ry="2" />
<text  x="425.74" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="523.0" y="1717" width="0.2" height="15.0" fill="rgb(245,37,34)" rx="2" ry="2" />
<text  x="525.97" y="1727.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="341.1" y="1925" width="0.2" height="15.0" fill="rgb(225,6,32)" rx="2" ry="2" />
<text  x="344.11" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(221,139,45)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="889.1" y="1813" width="0.2" height="15.0" fill="rgb(238,229,37)" rx="2" ry="2" />
<text  x="892.10" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (51 samples, 0.86%)</title><rect x="127.4" y="2005" width="10.2" height="15.0" fill="rgb(229,188,31)" rx="2" ry="2" />
<text  x="130.44" y="2015.5" ></text>
</g>
<g >
<title>isspace (1 samples, 0.02%)</title><rect x="1009.3" y="2021" width="0.2" height="15.0" fill="rgb(254,169,7)" rx="2" ry="2" />
<text  x="1012.34" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="787.9" y="1109" width="0.2" height="15.0" fill="rgb(233,178,7)" rx="2" ry="2" />
<text  x="790.86" y="1119.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="735.2" y="1845" width="0.2" height="15.0" fill="rgb(213,209,31)" rx="2" ry="2" />
<text  x="738.25" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="933.7" y="1701" width="0.2" height="15.0" fill="rgb(249,74,30)" rx="2" ry="2" />
<text  x="936.71" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="74.0" y="1957" width="0.2" height="15.0" fill="rgb(214,141,38)" rx="2" ry="2" />
<text  x="77.02" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="831.9" y="1797" width="0.2" height="15.0" fill="rgb(231,50,20)" rx="2" ry="2" />
<text  x="834.88" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1113.4" y="1477" width="0.4" height="15.0" fill="rgb(246,199,10)" rx="2" ry="2" />
<text  x="1116.37" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="256.5" y="1669" width="0.2" height="15.0" fill="rgb(211,32,6)" rx="2" ry="2" />
<text  x="259.48" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="680.0" y="1701" width="0.2" height="15.0" fill="rgb(234,150,11)" rx="2" ry="2" />
<text  x="683.03" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="610.6" y="1669" width="0.2" height="15.0" fill="rgb(226,26,49)" rx="2" ry="2" />
<text  x="613.60" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="587.6" y="1845" width="0.2" height="15.0" fill="rgb(211,208,43)" rx="2" ry="2" />
<text  x="590.60" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="321.5" y="1701" width="0.2" height="15.0" fill="rgb(254,131,54)" rx="2" ry="2" />
<text  x="324.51" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="12.4" y="2021" width="0.2" height="15.0" fill="rgb(209,168,33)" rx="2" ry="2" />
<text  x="15.40" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="307.9" y="1685" width="0.4" height="15.0" fill="rgb(229,38,37)" rx="2" ry="2" />
<text  x="310.90" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1188.8" y="1845" width="0.4" height="15.0" fill="rgb(245,203,46)" rx="2" ry="2" />
<text  x="1191.80" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1049.6" y="1797" width="0.2" height="15.0" fill="rgb(214,69,42)" rx="2" ry="2" />
<text  x="1052.55" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="429.9" y="1941" width="0.6" height="15.0" fill="rgb(211,80,17)" rx="2" ry="2" />
<text  x="432.94" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="623.4" y="1845" width="0.2" height="15.0" fill="rgb(242,158,42)" rx="2" ry="2" />
<text  x="626.41" y="1855.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1174.4" y="1957" width="0.2" height="15.0" fill="rgb(221,58,41)" rx="2" ry="2" />
<text  x="1177.39" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="575.8" y="1925" width="0.4" height="15.0" fill="rgb(224,124,36)" rx="2" ry="2" />
<text  x="578.79" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="890.3" y="1973" width="0.2" height="15.0" fill="rgb(228,151,27)" rx="2" ry="2" />
<text  x="893.30" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="278.7" y="1589" width="0.2" height="15.0" fill="rgb(251,116,46)" rx="2" ry="2" />
<text  x="281.69" y="1599.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="868.5" y="1989" width="0.2" height="15.0" fill="rgb(243,32,41)" rx="2" ry="2" />
<text  x="871.49" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="430.3" y="1717" width="0.2" height="15.0" fill="rgb(209,50,10)" rx="2" ry="2" />
<text  x="433.34" y="1727.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="321.5" y="1445" width="0.2" height="15.0" fill="rgb(215,37,8)" rx="2" ry="2" />
<text  x="324.51" y="1455.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="78.2" y="1781" width="0.8" height="15.0" fill="rgb(229,169,45)" rx="2" ry="2" />
<text  x="81.22" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="906.3" y="1973" width="0.2" height="15.0" fill="rgb(232,224,53)" rx="2" ry="2" />
<text  x="909.30" y="1983.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="1137.6" y="1973" width="0.2" height="15.0" fill="rgb(252,104,6)" rx="2" ry="2" />
<text  x="1140.58" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="518.6" y="1861" width="0.6" height="15.0" fill="rgb(224,6,47)" rx="2" ry="2" />
<text  x="521.57" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="914.9" y="1733" width="0.2" height="15.0" fill="rgb(218,95,29)" rx="2" ry="2" />
<text  x="917.91" y="1743.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="247.1" y="1893" width="0.6" height="15.0" fill="rgb(231,147,13)" rx="2" ry="2" />
<text  x="250.08" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="635.4" y="1941" width="0.2" height="15.0" fill="rgb(249,83,7)" rx="2" ry="2" />
<text  x="638.41" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (4 samples, 0.07%)</title><rect x="1008.3" y="1989" width="0.8" height="15.0" fill="rgb(251,221,34)" rx="2" ry="2" />
<text  x="1011.34" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="271.9" y="1829" width="0.4" height="15.0" fill="rgb(228,33,12)" rx="2" ry="2" />
<text  x="274.89" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="642.0" y="1973" width="0.4" height="15.0" fill="rgb(221,73,23)" rx="2" ry="2" />
<text  x="645.01" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1685" width="0.2" height="15.0" fill="rgb(252,78,3)" rx="2" ry="2" />
<text  x="844.08" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.39%)</title><rect x="509.4" y="2021" width="16.4" height="15.0" fill="rgb(243,119,19)" rx="2" ry="2" />
<text  x="512.37" y="2031.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1052.0" y="1973" width="0.2" height="15.0" fill="rgb(251,66,4)" rx="2" ry="2" />
<text  x="1054.95" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="31.0" y="2005" width="0.2" height="15.0" fill="rgb(207,136,9)" rx="2" ry="2" />
<text  x="34.01" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1142.0" y="1749" width="0.2" height="15.0" fill="rgb(254,59,25)" rx="2" ry="2" />
<text  x="1144.98" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="875.1" y="1957" width="0.2" height="15.0" fill="rgb(252,170,44)" rx="2" ry="2" />
<text  x="878.09" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="588.2" y="1989" width="0.2" height="15.0" fill="rgb(232,1,1)" rx="2" ry="2" />
<text  x="591.20" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1049.6" y="1989" width="0.2" height="15.0" fill="rgb(206,111,47)" rx="2" ry="2" />
<text  x="1052.55" y="1999.5" ></text>
</g>
<g >
<title>kfree (15 samples, 0.25%)</title><rect x="1115.4" y="1445" width="3.0" height="15.0" fill="rgb(239,164,23)" rx="2" ry="2" />
<text  x="1118.37" y="1455.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="578.6" y="1685" width="0.2" height="15.0" fill="rgb(243,112,13)" rx="2" ry="2" />
<text  x="581.59" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="875.3" y="1813" width="0.2" height="15.0" fill="rgb(238,207,22)" rx="2" ry="2" />
<text  x="878.29" y="1823.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="120.4" y="1125" width="0.2" height="15.0" fill="rgb(252,93,23)" rx="2" ry="2" />
<text  x="123.44" y="1135.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="336.7" y="1621" width="0.2" height="15.0" fill="rgb(221,77,49)" rx="2" ry="2" />
<text  x="339.71" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (1 samples, 0.02%)</title><rect x="141.2" y="1941" width="0.2" height="15.0" fill="rgb(239,77,27)" rx="2" ry="2" />
<text  x="144.24" y="1951.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (11 samples, 0.19%)</title><rect x="417.9" y="1893" width="2.2" height="15.0" fill="rgb(207,12,47)" rx="2" ry="2" />
<text  x="420.94" y="1903.5" ></text>
</g>
<g >
<title>kfree_call_rcu (1 samples, 0.02%)</title><rect x="748.7" y="1685" width="0.2" height="15.0" fill="rgb(208,140,1)" rx="2" ry="2" />
<text  x="751.65" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock (31 samples, 0.53%)</title><rect x="292.7" y="1685" width="6.2" height="15.0" fill="rgb(215,37,40)" rx="2" ry="2" />
<text  x="295.70" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="752.5" y="1557" width="0.2" height="15.0" fill="rgb(227,81,1)" rx="2" ry="2" />
<text  x="755.45" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="518.6" y="1829" width="0.6" height="15.0" fill="rgb(219,170,36)" rx="2" ry="2" />
<text  x="521.57" y="1839.5" ></text>
</g>
<g >
<title>__fget_light (14 samples, 0.24%)</title><rect x="1126.6" y="1941" width="2.8" height="15.0" fill="rgb(242,100,34)" rx="2" ry="2" />
<text  x="1129.58" y="1951.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="272.3" y="1845" width="0.2" height="15.0" fill="rgb(211,224,47)" rx="2" ry="2" />
<text  x="275.29" y="1855.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1087.2" y="1925" width="0.2" height="15.0" fill="rgb(225,145,45)" rx="2" ry="2" />
<text  x="1090.17" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.6" y="485" width="0.2" height="15.0" fill="rgb(245,120,4)" rx="2" ry="2" />
<text  x="121.64" y="495.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="853.3" y="1605" width="0.2" height="15.0" fill="rgb(224,192,46)" rx="2" ry="2" />
<text  x="856.29" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="969.1" y="1989" width="0.4" height="15.0" fill="rgb(217,205,27)" rx="2" ry="2" />
<text  x="972.13" y="1999.5" ></text>
</g>
<g >
<title>tcp_sendmsg (435 samples, 7.38%)</title><rect x="246.1" y="1909" width="87.0" height="15.0" fill="rgb(205,92,15)" rx="2" ry="2" />
<text  x="249.08" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="1188.8" y="1781" width="0.4" height="15.0" fill="rgb(242,81,9)" rx="2" ry="2" />
<text  x="1191.80" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1145.4" y="2021" width="0.2" height="15.0" fill="rgb(232,72,32)" rx="2" ry="2" />
<text  x="1148.38" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="200.7" y="1941" width="0.4" height="15.0" fill="rgb(250,10,24)" rx="2" ry="2" />
<text  x="203.66" y="1951.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="565.6" y="1717" width="0.2" height="15.0" fill="rgb(207,61,28)" rx="2" ry="2" />
<text  x="568.59" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="969.1" y="1957" width="0.4" height="15.0" fill="rgb(209,126,35)" rx="2" ry="2" />
<text  x="972.13" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (45 samples, 0.76%)</title><rect x="617.8" y="1973" width="9.0" height="15.0" fill="rgb(221,53,45)" rx="2" ry="2" />
<text  x="620.81" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="835.7" y="1845" width="0.2" height="15.0" fill="rgb(223,161,5)" rx="2" ry="2" />
<text  x="838.68" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="71.4" y="1781" width="0.2" height="15.0" fill="rgb(243,62,19)" rx="2" ry="2" />
<text  x="74.42" y="1791.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="975.1" y="1957" width="0.2" height="15.0" fill="rgb(250,116,21)" rx="2" ry="2" />
<text  x="978.13" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="916.5" y="1877" width="0.2" height="15.0" fill="rgb(205,33,27)" rx="2" ry="2" />
<text  x="919.51" y="1887.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (2 samples, 0.03%)</title><rect x="766.5" y="1733" width="0.4" height="15.0" fill="rgb(213,87,54)" rx="2" ry="2" />
<text  x="769.46" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="886.1" y="1893" width="0.2" height="15.0" fill="rgb(243,15,9)" rx="2" ry="2" />
<text  x="889.10" y="1903.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="88.0" y="1957" width="0.4" height="15.0" fill="rgb(212,24,42)" rx="2" ry="2" />
<text  x="91.03" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="827.3" y="1717" width="0.2" height="15.0" fill="rgb(243,115,1)" rx="2" ry="2" />
<text  x="830.28" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="126.2" y="1813" width="0.4" height="15.0" fill="rgb(218,229,52)" rx="2" ry="2" />
<text  x="129.24" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="704.0" y="1861" width="0.2" height="15.0" fill="rgb(231,126,42)" rx="2" ry="2" />
<text  x="707.04" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="588.2" y="1973" width="0.2" height="15.0" fill="rgb(252,173,49)" rx="2" ry="2" />
<text  x="591.20" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="925.5" y="1893" width="0.4" height="15.0" fill="rgb(245,167,31)" rx="2" ry="2" />
<text  x="928.51" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="201.1" y="1941" width="0.8" height="15.0" fill="rgb(211,130,35)" rx="2" ry="2" />
<text  x="204.06" y="1951.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="564.0" y="1957" width="0.2" height="15.0" fill="rgb(205,117,50)" rx="2" ry="2" />
<text  x="566.99" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="140.6" y="1893" width="0.2" height="15.0" fill="rgb(220,64,1)" rx="2" ry="2" />
<text  x="143.64" y="1903.5" ></text>
</g>
</g>
</svg>
