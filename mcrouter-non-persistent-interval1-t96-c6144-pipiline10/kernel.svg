<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (5 samples, 0.08%)</title><rect x="148.4" y="1925" width="1.0" height="15.0" fill="rgb(207,184,27)" rx="2" ry="2" />
<text  x="151.38" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="620.1" y="2005" width="0.2" height="15.0" fill="rgb(230,125,1)" rx="2" ry="2" />
<text  x="623.05" y="2015.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="617.4" y="1925" width="0.2" height="15.0" fill="rgb(243,114,27)" rx="2" ry="2" />
<text  x="620.45" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (39 samples, 0.66%)</title><rect x="45.5" y="1973" width="7.8" height="15.0" fill="rgb(214,188,37)" rx="2" ry="2" />
<text  x="48.50" y="1983.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="210.9" y="1381" width="0.2" height="15.0" fill="rgb(250,108,54)" rx="2" ry="2" />
<text  x="213.94" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="513.0" y="1957" width="0.4" height="15.0" fill="rgb(227,179,28)" rx="2" ry="2" />
<text  x="515.96" y="1967.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="381.2" y="1909" width="0.2" height="15.0" fill="rgb(212,109,26)" rx="2" ry="2" />
<text  x="384.21" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (3 samples, 0.05%)</title><rect x="680.4" y="2005" width="0.6" height="15.0" fill="rgb(214,104,47)" rx="2" ry="2" />
<text  x="683.42" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="306.4" y="1557" width="0.2" height="15.0" fill="rgb(211,187,25)" rx="2" ry="2" />
<text  x="309.40" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="994.3" y="1717" width="0.2" height="15.0" fill="rgb(221,137,32)" rx="2" ry="2" />
<text  x="997.27" y="1727.5" ></text>
</g>
<g >
<title>__fget (29 samples, 0.49%)</title><rect x="436.4" y="1941" width="5.8" height="15.0" fill="rgb(240,171,6)" rx="2" ry="2" />
<text  x="439.36" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1054.2" y="1957" width="0.2" height="15.0" fill="rgb(233,51,37)" rx="2" ry="2" />
<text  x="1057.23" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="905.4" y="2037" width="0.2" height="15.0" fill="rgb(248,50,52)" rx="2" ry="2" />
<text  x="908.43" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="542.4" y="1909" width="1.2" height="15.0" fill="rgb(207,160,22)" rx="2" ry="2" />
<text  x="545.44" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="563.1" y="1653" width="0.2" height="15.0" fill="rgb(219,115,9)" rx="2" ry="2" />
<text  x="566.10" y="1663.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="69.4" y="1861" width="0.4" height="15.0" fill="rgb(208,5,38)" rx="2" ry="2" />
<text  x="72.36" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="126.9" y="1701" width="0.2" height="15.0" fill="rgb(246,59,6)" rx="2" ry="2" />
<text  x="129.92" y="1711.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (254 samples, 4.32%)</title><rect x="426.9" y="1989" width="51.0" height="15.0" fill="rgb(247,186,11)" rx="2" ry="2" />
<text  x="429.93" y="1999.5" >sys_e..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="536.4" y="1925" width="0.8" height="15.0" fill="rgb(250,48,21)" rx="2" ry="2" />
<text  x="539.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="981" width="16.3" height="15.0" fill="rgb(239,57,50)" rx="2" ry="2" />
<text  x="101.44" y="991.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="30.3" y="1957" width="0.2" height="15.0" fill="rgb(248,39,1)" rx="2" ry="2" />
<text  x="33.25" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="514.4" y="1973" width="0.2" height="15.0" fill="rgb(240,145,43)" rx="2" ry="2" />
<text  x="517.37" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (2 samples, 0.03%)</title><rect x="159.6" y="1973" width="0.4" height="15.0" fill="rgb(228,20,35)" rx="2" ry="2" />
<text  x="162.61" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="49.5" y="1877" width="0.4" height="15.0" fill="rgb(253,193,22)" rx="2" ry="2" />
<text  x="52.51" y="1887.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="744.0" y="1653" width="1.2" height="15.0" fill="rgb(224,77,16)" rx="2" ry="2" />
<text  x="746.99" y="1663.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (57 samples, 0.97%)</title><rect x="1094.7" y="1925" width="11.5" height="15.0" fill="rgb(250,137,52)" rx="2" ry="2" />
<text  x="1097.74" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="206.5" y="1877" width="0.2" height="15.0" fill="rgb(233,208,39)" rx="2" ry="2" />
<text  x="209.53" y="1887.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="634.7" y="1973" width="0.2" height="15.0" fill="rgb(231,6,39)" rx="2" ry="2" />
<text  x="637.69" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1083.3" y="1685" width="0.2" height="15.0" fill="rgb(234,162,27)" rx="2" ry="2" />
<text  x="1086.31" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="246.4" y="1669" width="0.2" height="15.0" fill="rgb(252,102,16)" rx="2" ry="2" />
<text  x="249.44" y="1679.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.03%)</title><rect x="849.1" y="1909" width="0.4" height="15.0" fill="rgb(214,107,30)" rx="2" ry="2" />
<text  x="852.08" y="1919.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="649.5" y="1717" width="0.2" height="15.0" fill="rgb(242,79,7)" rx="2" ry="2" />
<text  x="652.53" y="1727.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (23 samples, 0.39%)</title><rect x="143.4" y="1925" width="4.6" height="15.0" fill="rgb(244,114,24)" rx="2" ry="2" />
<text  x="146.36" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="368.8" y="1893" width="0.2" height="15.0" fill="rgb(222,84,27)" rx="2" ry="2" />
<text  x="371.77" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="221.4" y="1957" width="0.2" height="15.0" fill="rgb(252,191,36)" rx="2" ry="2" />
<text  x="224.37" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1093.7" y="1845" width="0.2" height="15.0" fill="rgb(242,181,20)" rx="2" ry="2" />
<text  x="1096.74" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="369.6" y="1813" width="0.2" height="15.0" fill="rgb(235,33,32)" rx="2" ry="2" />
<text  x="372.58" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1605" width="0.2" height="15.0" fill="rgb(243,201,3)" rx="2" ry="2" />
<text  x="844.05" y="1615.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="521.8" y="1909" width="0.8" height="15.0" fill="rgb(230,106,38)" rx="2" ry="2" />
<text  x="524.79" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="127.7" y="1925" width="0.2" height="15.0" fill="rgb(251,220,29)" rx="2" ry="2" />
<text  x="130.72" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="579.7" y="1733" width="0.2" height="15.0" fill="rgb(212,96,18)" rx="2" ry="2" />
<text  x="582.75" y="1743.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="245.8" y="1893" width="1.0" height="15.0" fill="rgb(245,94,4)" rx="2" ry="2" />
<text  x="248.84" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="579.7" y="1573" width="0.2" height="15.0" fill="rgb(252,128,37)" rx="2" ry="2" />
<text  x="582.75" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="918.5" y="1909" width="0.2" height="15.0" fill="rgb(233,170,13)" rx="2" ry="2" />
<text  x="921.46" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1573" width="17.1" height="15.0" fill="rgb(217,114,44)" rx="2" ry="2" />
<text  x="101.44" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="678.0" y="1733" width="0.2" height="15.0" fill="rgb(223,44,14)" rx="2" ry="2" />
<text  x="681.01" y="1743.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="76.8" y="1925" width="0.6" height="15.0" fill="rgb(212,191,9)" rx="2" ry="2" />
<text  x="79.78" y="1935.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.02%)</title><rect x="614.0" y="1717" width="0.2" height="15.0" fill="rgb(245,91,36)" rx="2" ry="2" />
<text  x="617.04" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="518.4" y="1973" width="0.2" height="15.0" fill="rgb(214,216,33)" rx="2" ry="2" />
<text  x="521.38" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="126.9" y="1845" width="0.2" height="15.0" fill="rgb(219,123,38)" rx="2" ry="2" />
<text  x="129.92" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="76.2" y="1957" width="1.2" height="15.0" fill="rgb(240,179,44)" rx="2" ry="2" />
<text  x="79.18" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="160.8" y="1749" width="0.2" height="15.0" fill="rgb(223,62,19)" rx="2" ry="2" />
<text  x="163.81" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (4 samples, 0.07%)</title><rect x="71.2" y="1957" width="0.8" height="15.0" fill="rgb(224,160,22)" rx="2" ry="2" />
<text  x="74.17" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="947.9" y="2005" width="2.5" height="15.0" fill="rgb(247,157,43)" rx="2" ry="2" />
<text  x="950.94" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 1.07%)</title><rect x="98.4" y="69" width="12.7" height="15.0" fill="rgb(220,112,16)" rx="2" ry="2" />
<text  x="101.44" y="79.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23 samples, 0.39%)</title><rect x="1130.0" y="2037" width="4.6" height="15.0" fill="rgb(247,29,32)" rx="2" ry="2" />
<text  x="1133.04" y="2047.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="932.9" y="1605" width="0.2" height="15.0" fill="rgb(253,128,33)" rx="2" ry="2" />
<text  x="935.90" y="1615.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="210.9" y="1557" width="0.2" height="15.0" fill="rgb(209,50,33)" rx="2" ry="2" />
<text  x="213.94" y="1567.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (74 samples, 1.26%)</title><rect x="485.9" y="1957" width="14.8" height="15.0" fill="rgb(236,31,25)" rx="2" ry="2" />
<text  x="488.89" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="266.5" y="1845" width="0.2" height="15.0" fill="rgb(247,225,28)" rx="2" ry="2" />
<text  x="269.50" y="1855.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="12.6" y="2053" width="1.0" height="15.0" fill="rgb(242,219,16)" rx="2" ry="2" />
<text  x="15.61" y="2063.5" ></text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1124.0" y="1957" width="0.4" height="15.0" fill="rgb(245,128,31)" rx="2" ry="2" />
<text  x="1127.02" y="1967.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="579.7" y="1541" width="0.2" height="15.0" fill="rgb(211,70,35)" rx="2" ry="2" />
<text  x="582.75" y="1551.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="813.0" y="1653" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="815.98" y="1663.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="957.0" y="2005" width="0.2" height="15.0" fill="rgb(227,215,0)" rx="2" ry="2" />
<text  x="959.97" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="856.1" y="1669" width="0.2" height="15.0" fill="rgb(252,24,32)" rx="2" ry="2" />
<text  x="859.09" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="757.8" y="1525" width="0.2" height="15.0" fill="rgb(212,196,18)" rx="2" ry="2" />
<text  x="760.83" y="1535.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="819.8" y="1573" width="0.4" height="15.0" fill="rgb(205,14,22)" rx="2" ry="2" />
<text  x="822.80" y="1583.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (243 samples, 4.13%)</title><rect x="267.5" y="1861" width="48.7" height="15.0" fill="rgb(206,15,37)" rx="2" ry="2" />
<text  x="270.50" y="1871.5" >__tc..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="544.0" y="1861" width="0.2" height="15.0" fill="rgb(215,172,9)" rx="2" ry="2" />
<text  x="547.05" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="327.3" y="1941" width="0.2" height="15.0" fill="rgb(210,38,18)" rx="2" ry="2" />
<text  x="330.26" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (3 samples, 0.05%)</title><rect x="869.1" y="1989" width="0.6" height="15.0" fill="rgb(225,224,0)" rx="2" ry="2" />
<text  x="872.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="37.7" y="1989" width="0.4" height="15.0" fill="rgb(220,197,33)" rx="2" ry="2" />
<text  x="40.68" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (199 samples, 3.38%)</title><rect x="268.7" y="1829" width="39.9" height="15.0" fill="rgb(233,75,28)" rx="2" ry="2" />
<text  x="271.70" y="1839.5" >__t..</text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="677.2" y="1829" width="0.4" height="15.0" fill="rgb(230,159,31)" rx="2" ry="2" />
<text  x="680.21" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="405.5" y="1605" width="0.2" height="15.0" fill="rgb(212,201,35)" rx="2" ry="2" />
<text  x="408.47" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="276.7" y="1381" width="0.2" height="15.0" fill="rgb(222,128,23)" rx="2" ry="2" />
<text  x="279.72" y="1391.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="547.9" y="1989" width="0.2" height="15.0" fill="rgb(253,199,13)" rx="2" ry="2" />
<text  x="550.86" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="661" width="16.1" height="15.0" fill="rgb(232,204,16)" rx="2" ry="2" />
<text  x="101.44" y="671.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (51 samples, 0.87%)</title><rect x="605.6" y="1957" width="10.2" height="15.0" fill="rgb(232,13,40)" rx="2" ry="2" />
<text  x="608.62" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="509.6" y="1973" width="1.0" height="15.0" fill="rgb(224,84,39)" rx="2" ry="2" />
<text  x="512.55" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (9 samples, 0.15%)</title><rect x="711.3" y="1925" width="1.8" height="15.0" fill="rgb(235,136,42)" rx="2" ry="2" />
<text  x="714.30" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="856.3" y="1829" width="0.4" height="15.0" fill="rgb(236,7,8)" rx="2" ry="2" />
<text  x="859.30" y="1839.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="772.7" y="1685" width="0.2" height="15.0" fill="rgb(229,16,19)" rx="2" ry="2" />
<text  x="775.67" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1144.5" y="1925" width="0.2" height="15.0" fill="rgb(245,51,29)" rx="2" ry="2" />
<text  x="1147.48" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1100.8" y="1797" width="0.2" height="15.0" fill="rgb(241,148,35)" rx="2" ry="2" />
<text  x="1103.76" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="690.0" y="1861" width="0.2" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="693.04" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (6 samples, 0.10%)</title><rect x="100.4" y="37" width="1.2" height="15.0" fill="rgb(246,198,30)" rx="2" ry="2" />
<text  x="103.45" y="47.5" ></text>
</g>
<g >
<title>sys_recvfrom (1 samples, 0.02%)</title><rect x="1129.2" y="2021" width="0.2" height="15.0" fill="rgb(220,46,51)" rx="2" ry="2" />
<text  x="1132.24" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="623.5" y="2005" width="0.2" height="15.0" fill="rgb(229,156,3)" rx="2" ry="2" />
<text  x="626.46" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="649.5" y="1797" width="0.2" height="15.0" fill="rgb(244,154,28)" rx="2" ry="2" />
<text  x="652.53" y="1807.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="269.5" y="1813" width="0.2" height="15.0" fill="rgb(252,129,10)" rx="2" ry="2" />
<text  x="272.50" y="1823.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="402.1" y="1877" width="0.2" height="15.0" fill="rgb(244,25,5)" rx="2" ry="2" />
<text  x="405.06" y="1887.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="965.4" y="1893" width="0.2" height="15.0" fill="rgb(241,35,23)" rx="2" ry="2" />
<text  x="968.39" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="747.8" y="1637" width="0.4" height="15.0" fill="rgb(206,78,40)" rx="2" ry="2" />
<text  x="750.80" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="678.0" y="1781" width="0.2" height="15.0" fill="rgb(254,187,31)" rx="2" ry="2" />
<text  x="681.01" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="950.4" y="1957" width="0.2" height="15.0" fill="rgb(252,91,12)" rx="2" ry="2" />
<text  x="953.35" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="994.3" y="1781" width="0.2" height="15.0" fill="rgb(244,153,11)" rx="2" ry="2" />
<text  x="997.27" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="990.5" y="1877" width="0.2" height="15.0" fill="rgb(231,36,5)" rx="2" ry="2" />
<text  x="993.46" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="548.3" y="1973" width="2.6" height="15.0" fill="rgb(249,34,40)" rx="2" ry="2" />
<text  x="551.26" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="542.8" y="1877" width="0.4" height="15.0" fill="rgb(241,31,45)" rx="2" ry="2" />
<text  x="545.85" y="1887.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="150.4" y="1845" width="0.2" height="15.0" fill="rgb(220,90,21)" rx="2" ry="2" />
<text  x="153.38" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="644.5" y="1909" width="0.2" height="15.0" fill="rgb(228,38,5)" rx="2" ry="2" />
<text  x="647.52" y="1919.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="309.4" y="1829" width="0.2" height="15.0" fill="rgb(242,208,42)" rx="2" ry="2" />
<text  x="312.41" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="579.7" y="1829" width="0.2" height="15.0" fill="rgb(228,174,23)" rx="2" ry="2" />
<text  x="582.75" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="832.6" y="1461" width="0.2" height="15.0" fill="rgb(241,33,42)" rx="2" ry="2" />
<text  x="835.63" y="1471.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (24 samples, 0.41%)</title><rect x="91.2" y="2037" width="4.8" height="15.0" fill="rgb(236,77,4)" rx="2" ry="2" />
<text  x="94.22" y="2047.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (2 samples, 0.03%)</title><rect x="563.7" y="1765" width="0.4" height="15.0" fill="rgb(218,206,21)" rx="2" ry="2" />
<text  x="566.70" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="876.1" y="1957" width="0.2" height="15.0" fill="rgb(234,98,54)" rx="2" ry="2" />
<text  x="879.15" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (6 samples, 0.10%)</title><rect x="979.6" y="1909" width="1.2" height="15.0" fill="rgb(235,219,24)" rx="2" ry="2" />
<text  x="982.63" y="1919.5" ></text>
</g>
<g >
<title>folly::operator== (3 samples, 0.05%)</title><rect x="31.1" y="1989" width="0.6" height="15.0" fill="rgb(210,195,16)" rx="2" ry="2" />
<text  x="34.06" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="545.3" y="1861" width="0.2" height="15.0" fill="rgb(221,164,49)" rx="2" ry="2" />
<text  x="548.25" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="996.1" y="1973" width="0.2" height="15.0" fill="rgb(232,16,17)" rx="2" ry="2" />
<text  x="999.07" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="56.5" y="1925" width="1.2" height="15.0" fill="rgb(220,114,26)" rx="2" ry="2" />
<text  x="59.53" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (52 samples, 0.88%)</title><rect x="1108.6" y="1813" width="10.4" height="15.0" fill="rgb(217,182,53)" rx="2" ry="2" />
<text  x="1111.58" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="646.3" y="1989" width="0.2" height="15.0" fill="rgb(236,161,16)" rx="2" ry="2" />
<text  x="649.33" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="153.8" y="1877" width="0.2" height="15.0" fill="rgb(233,229,53)" rx="2" ry="2" />
<text  x="156.79" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="518.6" y="1989" width="1.0" height="15.0" fill="rgb(207,218,53)" rx="2" ry="2" />
<text  x="521.58" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="850.1" y="1813" width="0.2" height="15.0" fill="rgb(206,45,2)" rx="2" ry="2" />
<text  x="853.08" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="966.6" y="2021" width="0.2" height="15.0" fill="rgb(227,227,46)" rx="2" ry="2" />
<text  x="969.59" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="600.8" y="1829" width="0.2" height="15.0" fill="rgb(218,39,47)" rx="2" ry="2" />
<text  x="603.80" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="261.1" y="1781" width="0.2" height="15.0" fill="rgb(223,97,38)" rx="2" ry="2" />
<text  x="264.08" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1177.4" y="1957" width="0.2" height="15.0" fill="rgb(245,163,36)" rx="2" ry="2" />
<text  x="1180.37" y="1967.5" ></text>
</g>
<g >
<title>sys_setsockopt (47 samples, 0.80%)</title><rect x="690.2" y="1941" width="9.5" height="15.0" fill="rgb(230,117,29)" rx="2" ry="2" />
<text  x="693.24" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="575.1" y="1989" width="0.4" height="15.0" fill="rgb(218,184,14)" rx="2" ry="2" />
<text  x="578.13" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (14 samples, 0.24%)</title><rect x="190.9" y="2021" width="2.8" height="15.0" fill="rgb(250,173,49)" rx="2" ry="2" />
<text  x="193.89" y="2031.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (11 samples, 0.19%)</title><rect x="1121.8" y="1957" width="2.2" height="15.0" fill="rgb(251,9,38)" rx="2" ry="2" />
<text  x="1124.82" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="160.6" y="2005" width="0.2" height="15.0" fill="rgb(250,74,8)" rx="2" ry="2" />
<text  x="163.61" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (26 samples, 0.44%)</title><rect x="981.0" y="1957" width="5.2" height="15.0" fill="rgb(233,162,34)" rx="2" ry="2" />
<text  x="984.03" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="708.1" y="1973" width="0.2" height="15.0" fill="rgb(228,227,8)" rx="2" ry="2" />
<text  x="711.09" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (39 samples, 0.66%)</title><rect x="1000.7" y="2021" width="7.8" height="15.0" fill="rgb(246,169,38)" rx="2" ry="2" />
<text  x="1003.69" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="149.2" y="1685" width="0.2" height="15.0" fill="rgb(250,149,16)" rx="2" ry="2" />
<text  x="152.18" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1093.7" y="1765" width="0.2" height="15.0" fill="rgb(243,42,23)" rx="2" ry="2" />
<text  x="1096.74" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="143.2" y="1685" width="0.2" height="15.0" fill="rgb(220,155,45)" rx="2" ry="2" />
<text  x="146.16" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1253" width="16.3" height="15.0" fill="rgb(219,206,22)" rx="2" ry="2" />
<text  x="101.44" y="1263.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.6" y="1893" width="0.8" height="15.0" fill="rgb(215,103,13)" rx="2" ry="2" />
<text  x="14.60" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (17 samples, 0.29%)</title><rect x="1125.2" y="1941" width="3.4" height="15.0" fill="rgb(225,217,40)" rx="2" ry="2" />
<text  x="1128.22" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="579.7" y="1509" width="0.2" height="15.0" fill="rgb(239,152,27)" rx="2" ry="2" />
<text  x="582.75" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (14 samples, 0.24%)</title><rect x="277.1" y="1637" width="2.8" height="15.0" fill="rgb(245,10,28)" rx="2" ry="2" />
<text  x="280.12" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1165.1" y="1845" width="0.4" height="15.0" fill="rgb(238,77,39)" rx="2" ry="2" />
<text  x="1168.13" y="1855.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.02%)</title><rect x="236.6" y="1989" width="0.2" height="15.0" fill="rgb(223,104,7)" rx="2" ry="2" />
<text  x="239.61" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="444.4" y="1973" width="0.6" height="15.0" fill="rgb(217,73,0)" rx="2" ry="2" />
<text  x="447.38" y="1983.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="618.2" y="1957" width="1.1" height="15.0" fill="rgb(247,165,15)" rx="2" ry="2" />
<text  x="621.25" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="131.1" y="1989" width="0.2" height="15.0" fill="rgb(245,87,11)" rx="2" ry="2" />
<text  x="134.13" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="114.3" y="197" width="0.2" height="15.0" fill="rgb(207,59,8)" rx="2" ry="2" />
<text  x="117.28" y="207.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="391.0" y="1701" width="0.2" height="15.0" fill="rgb(207,33,2)" rx="2" ry="2" />
<text  x="394.03" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="478.3" y="1957" width="0.6" height="15.0" fill="rgb(205,196,32)" rx="2" ry="2" />
<text  x="481.27" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1005.5" y="1989" width="0.2" height="15.0" fill="rgb(213,53,43)" rx="2" ry="2" />
<text  x="1008.50" y="1999.5" ></text>
</g>
<g >
<title>syscall (61 samples, 1.04%)</title><rect x="1155.9" y="1973" width="12.2" height="15.0" fill="rgb(250,210,3)" rx="2" ry="2" />
<text  x="1158.91" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="381.2" y="1813" width="0.2" height="15.0" fill="rgb(241,24,47)" rx="2" ry="2" />
<text  x="384.21" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="315.4" y="1733" width="0.2" height="15.0" fill="rgb(246,135,49)" rx="2" ry="2" />
<text  x="318.43" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1093.7" y="1813" width="0.2" height="15.0" fill="rgb(250,105,10)" rx="2" ry="2" />
<text  x="1096.74" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="25.4" y="1717" width="0.2" height="15.0" fill="rgb(245,201,32)" rx="2" ry="2" />
<text  x="28.44" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="649.5" y="1877" width="0.2" height="15.0" fill="rgb(208,42,6)" rx="2" ry="2" />
<text  x="652.53" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (40 samples, 0.68%)</title><rect x="54.3" y="1973" width="8.0" height="15.0" fill="rgb(242,62,45)" rx="2" ry="2" />
<text  x="57.32" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (1 samples, 0.02%)</title><rect x="534.0" y="1973" width="0.2" height="15.0" fill="rgb(244,55,7)" rx="2" ry="2" />
<text  x="537.02" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="131.7" y="1813" width="0.6" height="15.0" fill="rgb(238,159,39)" rx="2" ry="2" />
<text  x="134.73" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="181" width="15.9" height="15.0" fill="rgb(223,62,39)" rx="2" ry="2" />
<text  x="101.44" y="191.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="327.3" y="1893" width="0.2" height="15.0" fill="rgb(250,223,17)" rx="2" ry="2" />
<text  x="330.26" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="205.7" y="1893" width="0.2" height="15.0" fill="rgb(244,155,17)" rx="2" ry="2" />
<text  x="208.73" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="60.7" y="1925" width="1.2" height="15.0" fill="rgb(206,16,33)" rx="2" ry="2" />
<text  x="63.74" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="664.8" y="1957" width="0.2" height="15.0" fill="rgb(253,7,50)" rx="2" ry="2" />
<text  x="667.78" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1074.9" y="1845" width="0.2" height="15.0" fill="rgb(212,53,44)" rx="2" ry="2" />
<text  x="1077.89" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="138.3" y="1893" width="0.2" height="15.0" fill="rgb(233,25,24)" rx="2" ry="2" />
<text  x="141.35" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="131.1" y="1973" width="0.2" height="15.0" fill="rgb(236,195,37)" rx="2" ry="2" />
<text  x="134.13" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="144.6" y="1877" width="0.2" height="15.0" fill="rgb(244,121,42)" rx="2" ry="2" />
<text  x="147.56" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="947.5" y="2005" width="0.2" height="15.0" fill="rgb(232,166,1)" rx="2" ry="2" />
<text  x="950.54" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (10 samples, 0.17%)</title><rect x="324.7" y="1925" width="2.0" height="15.0" fill="rgb(225,47,14)" rx="2" ry="2" />
<text  x="327.65" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (1 samples, 0.02%)</title><rect x="620.5" y="2005" width="0.2" height="15.0" fill="rgb(212,131,5)" rx="2" ry="2" />
<text  x="623.46" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (43 samples, 0.73%)</title><rect x="122.5" y="2005" width="8.6" height="15.0" fill="rgb(207,201,44)" rx="2" ry="2" />
<text  x="125.51" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (13 samples, 0.22%)</title><rect x="1005.9" y="2005" width="2.6" height="15.0" fill="rgb(220,211,54)" rx="2" ry="2" />
<text  x="1008.90" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (2 samples, 0.03%)</title><rect x="576.5" y="1989" width="0.4" height="15.0" fill="rgb(237,102,32)" rx="2" ry="2" />
<text  x="579.54" y="1999.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (20 samples, 0.34%)</title><rect x="156.6" y="2005" width="4.0" height="15.0" fill="rgb(243,141,23)" rx="2" ry="2" />
<text  x="159.60" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_mss (29 samples, 0.49%)</title><rect x="317.0" y="1877" width="5.8" height="15.0" fill="rgb(223,146,21)" rx="2" ry="2" />
<text  x="320.03" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="494.1" y="1557" width="0.2" height="15.0" fill="rgb(229,141,10)" rx="2" ry="2" />
<text  x="497.11" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="691.2" y="1829" width="0.2" height="15.0" fill="rgb(223,219,54)" rx="2" ry="2" />
<text  x="694.25" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1176.2" y="1957" width="0.2" height="15.0" fill="rgb(230,169,29)" rx="2" ry="2" />
<text  x="1179.16" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="321.8" y="1845" width="0.4" height="15.0" fill="rgb(216,18,7)" rx="2" ry="2" />
<text  x="324.85" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="399.7" y="1765" width="0.4" height="15.0" fill="rgb(228,196,32)" rx="2" ry="2" />
<text  x="402.66" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1143.3" y="2021" width="0.2" height="15.0" fill="rgb(221,197,28)" rx="2" ry="2" />
<text  x="1146.27" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (75 samples, 1.27%)</title><rect x="552.7" y="2005" width="15.0" height="15.0" fill="rgb(206,43,18)" rx="2" ry="2" />
<text  x="555.67" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="143.2" y="1893" width="0.2" height="15.0" fill="rgb(250,45,9)" rx="2" ry="2" />
<text  x="146.16" y="1903.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="612.6" y="1829" width="0.4" height="15.0" fill="rgb(213,185,54)" rx="2" ry="2" />
<text  x="615.63" y="1839.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (6 samples, 0.10%)</title><rect x="264.1" y="1861" width="1.2" height="15.0" fill="rgb(219,94,20)" rx="2" ry="2" />
<text  x="267.09" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="987.9" y="1989" width="0.2" height="15.0" fill="rgb(242,81,20)" rx="2" ry="2" />
<text  x="990.85" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="153.8" y="1765" width="0.2" height="15.0" fill="rgb(244,29,10)" rx="2" ry="2" />
<text  x="156.79" y="1775.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="259.7" y="1781" width="0.4" height="15.0" fill="rgb(245,94,31)" rx="2" ry="2" />
<text  x="262.68" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (80 samples, 1.36%)</title><rect x="484.9" y="2005" width="16.0" height="15.0" fill="rgb(241,172,36)" rx="2" ry="2" />
<text  x="487.89" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_fin (2 samples, 0.03%)</title><rect x="833.2" y="1749" width="0.4" height="15.0" fill="rgb(212,107,53)" rx="2" ry="2" />
<text  x="836.23" y="1759.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="485.7" y="1957" width="0.2" height="15.0" fill="rgb(241,49,14)" rx="2" ry="2" />
<text  x="488.69" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="445.2" y="1941" width="0.2" height="15.0" fill="rgb(221,8,51)" rx="2" ry="2" />
<text  x="448.18" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="721.9" y="1893" width="0.4" height="15.0" fill="rgb(235,99,16)" rx="2" ry="2" />
<text  x="724.93" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="153.2" y="1829" width="0.2" height="15.0" fill="rgb(209,215,33)" rx="2" ry="2" />
<text  x="156.19" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="570.7" y="2005" width="0.2" height="15.0" fill="rgb(252,156,16)" rx="2" ry="2" />
<text  x="573.72" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1164.7" y="1957" width="0.8" height="15.0" fill="rgb(231,61,38)" rx="2" ry="2" />
<text  x="1167.73" y="1967.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="666.6" y="1829" width="0.8" height="15.0" fill="rgb(234,182,31)" rx="2" ry="2" />
<text  x="669.58" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="306.4" y="1701" width="0.2" height="15.0" fill="rgb(247,204,0)" rx="2" ry="2" />
<text  x="309.40" y="1711.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="153.2" y="1797" width="0.2" height="15.0" fill="rgb(228,45,33)" rx="2" ry="2" />
<text  x="156.19" y="1807.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="391.0" y="1573" width="0.2" height="15.0" fill="rgb(241,8,52)" rx="2" ry="2" />
<text  x="394.03" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="915.3" y="2037" width="0.2" height="15.0" fill="rgb(245,189,3)" rx="2" ry="2" />
<text  x="918.25" y="2047.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="148.4" y="1749" width="0.2" height="15.0" fill="rgb(254,32,47)" rx="2" ry="2" />
<text  x="151.38" y="1759.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="160.8" y="1685" width="0.2" height="15.0" fill="rgb(229,102,22)" rx="2" ry="2" />
<text  x="163.81" y="1695.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="510.8" y="1957" width="0.2" height="15.0" fill="rgb(246,179,43)" rx="2" ry="2" />
<text  x="513.76" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="130.1" y="1973" width="0.2" height="15.0" fill="rgb(216,206,5)" rx="2" ry="2" />
<text  x="133.13" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="25.4" y="1637" width="0.2" height="15.0" fill="rgb(209,15,24)" rx="2" ry="2" />
<text  x="28.44" y="1647.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="216.4" y="1813" width="0.2" height="15.0" fill="rgb(241,5,40)" rx="2" ry="2" />
<text  x="219.36" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="893.0" y="1941" width="0.2" height="15.0" fill="rgb(226,208,43)" rx="2" ry="2" />
<text  x="895.99" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (7 samples, 0.12%)</title><rect x="161.2" y="2005" width="1.4" height="15.0" fill="rgb(241,172,26)" rx="2" ry="2" />
<text  x="164.21" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="932.9" y="1845" width="0.2" height="15.0" fill="rgb(212,125,17)" rx="2" ry="2" />
<text  x="935.90" y="1855.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="926.5" y="1909" width="0.8" height="15.0" fill="rgb(242,84,41)" rx="2" ry="2" />
<text  x="929.49" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="405.5" y="1861" width="0.2" height="15.0" fill="rgb(252,220,6)" rx="2" ry="2" />
<text  x="408.47" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1164.5" y="1717" width="0.2" height="15.0" fill="rgb(210,150,33)" rx="2" ry="2" />
<text  x="1167.53" y="1727.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (11 samples, 0.19%)</title><rect x="508.4" y="1989" width="2.2" height="15.0" fill="rgb(209,38,12)" rx="2" ry="2" />
<text  x="511.35" y="1999.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="300.4" y="1749" width="0.2" height="15.0" fill="rgb(246,59,48)" rx="2" ry="2" />
<text  x="303.39" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="523.8" y="1877" width="0.2" height="15.0" fill="rgb(233,174,46)" rx="2" ry="2" />
<text  x="526.79" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="363.8" y="1877" width="0.2" height="15.0" fill="rgb(234,150,4)" rx="2" ry="2" />
<text  x="366.76" y="1887.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="150.6" y="1957" width="0.2" height="15.0" fill="rgb(245,11,26)" rx="2" ry="2" />
<text  x="153.58" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="133.7" y="1861" width="0.2" height="15.0" fill="rgb(241,2,23)" rx="2" ry="2" />
<text  x="136.74" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="649.5" y="1893" width="0.2" height="15.0" fill="rgb(208,42,31)" rx="2" ry="2" />
<text  x="652.53" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.76%)</title><rect x="668.8" y="1925" width="9.0" height="15.0" fill="rgb(229,107,3)" rx="2" ry="2" />
<text  x="671.79" y="1935.5" ></text>
</g>
<g >
<title>fib_select_path (1 samples, 0.02%)</title><rect x="757.8" y="1413" width="0.2" height="15.0" fill="rgb(229,197,53)" rx="2" ry="2" />
<text  x="760.83" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="994.3" y="1669" width="0.2" height="15.0" fill="rgb(217,28,17)" rx="2" ry="2" />
<text  x="997.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="576.1" y="1973" width="0.2" height="15.0" fill="rgb(236,88,13)" rx="2" ry="2" />
<text  x="579.14" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (31 samples, 0.53%)</title><rect x="82.2" y="1989" width="6.2" height="15.0" fill="rgb(209,109,51)" rx="2" ry="2" />
<text  x="85.20" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="697.7" y="1605" width="0.2" height="15.0" fill="rgb(240,67,17)" rx="2" ry="2" />
<text  x="700.66" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="545.3" y="1909" width="0.2" height="15.0" fill="rgb(210,226,26)" rx="2" ry="2" />
<text  x="548.25" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="153.8" y="1781" width="0.2" height="15.0" fill="rgb(235,88,15)" rx="2" ry="2" />
<text  x="156.79" y="1791.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (51 samples, 0.87%)</title><rect x="445.0" y="1973" width="10.2" height="15.0" fill="rgb(247,169,35)" rx="2" ry="2" />
<text  x="447.98" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="932.9" y="1749" width="0.2" height="15.0" fill="rgb(249,85,16)" rx="2" ry="2" />
<text  x="935.90" y="1759.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="666.6" y="1749" width="0.8" height="15.0" fill="rgb(217,18,26)" rx="2" ry="2" />
<text  x="669.58" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1083.3" y="1573" width="0.2" height="15.0" fill="rgb(228,204,46)" rx="2" ry="2" />
<text  x="1086.31" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="957.0" y="2021" width="0.4" height="15.0" fill="rgb(247,41,1)" rx="2" ry="2" />
<text  x="959.97" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="369.6" y="1877" width="0.2" height="15.0" fill="rgb(233,200,37)" rx="2" ry="2" />
<text  x="372.58" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="965.6" y="2037" width="0.2" height="15.0" fill="rgb(235,212,11)" rx="2" ry="2" />
<text  x="968.59" y="2047.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="376.4" y="1957" width="0.4" height="15.0" fill="rgb(224,179,20)" rx="2" ry="2" />
<text  x="379.39" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="877.0" y="1925" width="0.2" height="15.0" fill="rgb(217,43,27)" rx="2" ry="2" />
<text  x="879.95" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="27.2" y="1957" width="0.2" height="15.0" fill="rgb(211,122,21)" rx="2" ry="2" />
<text  x="30.25" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (75 samples, 1.27%)</title><rect x="665.0" y="1989" width="15.0" height="15.0" fill="rgb(250,143,46)" rx="2" ry="2" />
<text  x="667.98" y="1999.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.14%)</title><rect x="402.5" y="1941" width="1.6" height="15.0" fill="rgb(225,170,33)" rx="2" ry="2" />
<text  x="405.46" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.2" y="1861" width="0.2" height="15.0" fill="rgb(231,89,1)" rx="2" ry="2" />
<text  x="886.17" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="520.4" y="1973" width="1.0" height="15.0" fill="rgb(217,191,46)" rx="2" ry="2" />
<text  x="523.38" y="1983.5" ></text>
</g>
<g >
<title>security_socket_getsockname (4 samples, 0.07%)</title><rect x="597.6" y="1861" width="0.8" height="15.0" fill="rgb(209,145,6)" rx="2" ry="2" />
<text  x="600.59" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="763.0" y="1717" width="0.2" height="15.0" fill="rgb(207,207,2)" rx="2" ry="2" />
<text  x="766.04" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="143.2" y="1637" width="0.2" height="15.0" fill="rgb(226,80,23)" rx="2" ry="2" />
<text  x="146.16" y="1647.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.08%)</title><rect x="958.2" y="2005" width="1.0" height="15.0" fill="rgb(245,191,19)" rx="2" ry="2" />
<text  x="961.17" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="244.0" y="1861" width="1.0" height="15.0" fill="rgb(240,214,48)" rx="2" ry="2" />
<text  x="247.03" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="949" width="16.3" height="15.0" fill="rgb(231,224,0)" rx="2" ry="2" />
<text  x="101.44" y="959.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="236.8" y="1973" width="0.4" height="15.0" fill="rgb(227,208,22)" rx="2" ry="2" />
<text  x="239.82" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="511.6" y="1973" width="0.2" height="15.0" fill="rgb(238,147,47)" rx="2" ry="2" />
<text  x="514.56" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (3 samples, 0.05%)</title><rect x="75.4" y="1957" width="0.6" height="15.0" fill="rgb(212,193,19)" rx="2" ry="2" />
<text  x="78.38" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1149.7" y="1909" width="0.2" height="15.0" fill="rgb(215,186,31)" rx="2" ry="2" />
<text  x="1152.69" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="890.2" y="1877" width="0.4" height="15.0" fill="rgb(229,135,25)" rx="2" ry="2" />
<text  x="893.19" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="166.6" y="1957" width="0.2" height="15.0" fill="rgb(249,60,31)" rx="2" ry="2" />
<text  x="169.62" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="69.2" y="1893" width="0.8" height="15.0" fill="rgb(216,152,7)" rx="2" ry="2" />
<text  x="72.16" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="284.5" y="1685" width="0.2" height="15.0" fill="rgb(224,111,47)" rx="2" ry="2" />
<text  x="287.54" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="45.1" y="1909" width="0.4" height="15.0" fill="rgb(233,53,4)" rx="2" ry="2" />
<text  x="48.10" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="369.6" y="1637" width="0.2" height="15.0" fill="rgb(242,226,49)" rx="2" ry="2" />
<text  x="372.58" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1150.9" y="1909" width="0.2" height="15.0" fill="rgb(237,76,34)" rx="2" ry="2" />
<text  x="1153.89" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (2 samples, 0.03%)</title><rect x="655.4" y="2005" width="0.4" height="15.0" fill="rgb(242,9,10)" rx="2" ry="2" />
<text  x="658.35" y="2015.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.6" y="1941" width="0.8" height="15.0" fill="rgb(207,166,17)" rx="2" ry="2" />
<text  x="14.60" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="583.2" y="1653" width="0.2" height="15.0" fill="rgb(239,83,30)" rx="2" ry="2" />
<text  x="586.15" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="823.6" y="1669" width="0.2" height="15.0" fill="rgb(232,138,7)" rx="2" ry="2" />
<text  x="826.61" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="626.7" y="2037" width="0.4" height="15.0" fill="rgb(225,136,39)" rx="2" ry="2" />
<text  x="629.67" y="2047.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="855.3" y="1925" width="0.2" height="15.0" fill="rgb(219,15,39)" rx="2" ry="2" />
<text  x="858.29" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (36 samples, 0.61%)</title><rect x="1109.8" y="1509" width="7.2" height="15.0" fill="rgb(238,210,16)" rx="2" ry="2" />
<text  x="1112.78" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="143.2" y="1781" width="0.2" height="15.0" fill="rgb(231,52,16)" rx="2" ry="2" />
<text  x="146.16" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="541.4" y="1765" width="0.2" height="15.0" fill="rgb(238,226,42)" rx="2" ry="2" />
<text  x="544.44" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1157" width="16.3" height="15.0" fill="rgb(243,64,33)" rx="2" ry="2" />
<text  x="101.44" y="1167.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="210.9" y="1509" width="0.2" height="15.0" fill="rgb(220,227,16)" rx="2" ry="2" />
<text  x="213.94" y="1519.5" ></text>
</g>
<g >
<title>pgd_free (1 samples, 0.02%)</title><rect x="614.0" y="1733" width="0.2" height="15.0" fill="rgb(209,142,16)" rx="2" ry="2" />
<text  x="617.04" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (8 samples, 0.14%)</title><rect x="888.2" y="1909" width="1.6" height="15.0" fill="rgb(248,116,29)" rx="2" ry="2" />
<text  x="891.18" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="363.8" y="1861" width="0.2" height="15.0" fill="rgb(241,148,34)" rx="2" ry="2" />
<text  x="366.76" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="876.8" y="1941" width="0.4" height="15.0" fill="rgb(213,109,29)" rx="2" ry="2" />
<text  x="879.75" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="208.7" y="1877" width="0.2" height="15.0" fill="rgb(233,157,7)" rx="2" ry="2" />
<text  x="211.74" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="357.7" y="1925" width="0.6" height="15.0" fill="rgb(226,193,15)" rx="2" ry="2" />
<text  x="360.74" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (2 samples, 0.03%)</title><rect x="705.7" y="2037" width="0.4" height="15.0" fill="rgb(254,184,25)" rx="2" ry="2" />
<text  x="708.69" y="2047.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="67.0" y="1845" width="0.6" height="15.0" fill="rgb(247,108,49)" rx="2" ry="2" />
<text  x="69.95" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_fin (340 samples, 5.78%)</title><rect x="764.6" y="1733" width="68.2" height="15.0" fill="rgb(227,219,44)" rx="2" ry="2" />
<text  x="767.65" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="221.8" y="1861" width="0.2" height="15.0" fill="rgb(238,17,13)" rx="2" ry="2" />
<text  x="224.77" y="1871.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="624.7" y="1941" width="0.2" height="15.0" fill="rgb(227,75,26)" rx="2" ry="2" />
<text  x="627.67" y="1951.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1121.6" y="1925" width="0.2" height="15.0" fill="rgb(225,122,20)" rx="2" ry="2" />
<text  x="1124.61" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (20 samples, 0.34%)</title><rect x="606.6" y="1893" width="4.0" height="15.0" fill="rgb(245,121,12)" rx="2" ry="2" />
<text  x="609.62" y="1903.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="551.7" y="1973" width="1.0" height="15.0" fill="rgb(222,119,31)" rx="2" ry="2" />
<text  x="554.67" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="919.5" y="1989" width="0.4" height="15.0" fill="rgb(230,90,48)" rx="2" ry="2" />
<text  x="922.47" y="1999.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="190.1" y="2021" width="0.2" height="15.0" fill="rgb(210,81,53)" rx="2" ry="2" />
<text  x="193.09" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="770.3" y="1701" width="0.2" height="15.0" fill="rgb(239,211,23)" rx="2" ry="2" />
<text  x="773.26" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="990.5" y="1861" width="0.2" height="15.0" fill="rgb(212,183,2)" rx="2" ry="2" />
<text  x="993.46" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="656.0" y="2037" width="0.2" height="15.0" fill="rgb(207,111,50)" rx="2" ry="2" />
<text  x="658.95" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="163.0" y="1989" width="0.4" height="15.0" fill="rgb(253,119,7)" rx="2" ry="2" />
<text  x="166.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (45 samples, 0.76%)</title><rect x="1109.2" y="1541" width="9.0" height="15.0" fill="rgb(233,217,0)" rx="2" ry="2" />
<text  x="1112.18" y="1551.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="494.1" y="1637" width="0.2" height="15.0" fill="rgb(229,46,13)" rx="2" ry="2" />
<text  x="497.11" y="1647.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1151.5" y="2005" width="0.2" height="15.0" fill="rgb(215,122,33)" rx="2" ry="2" />
<text  x="1154.50" y="2015.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="397.7" y="1909" width="0.2" height="15.0" fill="rgb(226,109,32)" rx="2" ry="2" />
<text  x="400.65" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="314.0" y="1749" width="0.2" height="15.0" fill="rgb(244,155,29)" rx="2" ry="2" />
<text  x="317.02" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (2 samples, 0.03%)</title><rect x="201.9" y="1957" width="0.4" height="15.0" fill="rgb(229,214,3)" rx="2" ry="2" />
<text  x="204.92" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="600.8" y="1813" width="0.2" height="15.0" fill="rgb(216,220,44)" rx="2" ry="2" />
<text  x="603.80" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1091.5" y="1685" width="0.2" height="15.0" fill="rgb(210,219,45)" rx="2" ry="2" />
<text  x="1094.53" y="1695.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="823.6" y="1621" width="0.2" height="15.0" fill="rgb(233,195,17)" rx="2" ry="2" />
<text  x="826.61" y="1631.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.02%)</title><rect x="742.8" y="1669" width="0.2" height="15.0" fill="rgb(218,87,41)" rx="2" ry="2" />
<text  x="745.79" y="1679.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1164.5" y="1653" width="0.2" height="15.0" fill="rgb(223,212,54)" rx="2" ry="2" />
<text  x="1167.53" y="1663.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="324.1" y="1877" width="0.4" height="15.0" fill="rgb(245,30,34)" rx="2" ry="2" />
<text  x="327.05" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="477.7" y="1781" width="0.2" height="15.0" fill="rgb(250,38,9)" rx="2" ry="2" />
<text  x="480.67" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="30.3" y="1877" width="0.2" height="15.0" fill="rgb(250,152,11)" rx="2" ry="2" />
<text  x="33.25" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="237.0" y="1797" width="0.2" height="15.0" fill="rgb(242,156,54)" rx="2" ry="2" />
<text  x="240.02" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="525.0" y="2005" width="0.2" height="15.0" fill="rgb(219,217,17)" rx="2" ry="2" />
<text  x="528.00" y="2015.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="841.1" y="1541" width="0.2" height="15.0" fill="rgb(211,69,49)" rx="2" ry="2" />
<text  x="844.05" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="575.5" y="1861" width="0.2" height="15.0" fill="rgb(233,121,45)" rx="2" ry="2" />
<text  x="578.53" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="654.3" y="1909" width="0.2" height="15.0" fill="rgb(227,112,5)" rx="2" ry="2" />
<text  x="657.35" y="1919.5" ></text>
</g>
<g >
<title>free (7 samples, 0.12%)</title><rect x="119.5" y="1989" width="1.4" height="15.0" fill="rgb(247,9,47)" rx="2" ry="2" />
<text  x="122.50" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1093.9" y="1829" width="0.2" height="15.0" fill="rgb(238,222,17)" rx="2" ry="2" />
<text  x="1096.94" y="1839.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="24.4" y="1669" width="0.2" height="15.0" fill="rgb(207,106,9)" rx="2" ry="2" />
<text  x="27.44" y="1679.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (45 samples, 0.76%)</title><rect x="1109.2" y="1525" width="9.0" height="15.0" fill="rgb(212,200,23)" rx="2" ry="2" />
<text  x="1112.18" y="1535.5" ></text>
</g>
<g >
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="478.3" y="1781" width="0.2" height="15.0" fill="rgb(240,101,24)" rx="2" ry="2" />
<text  x="481.27" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1083.3" y="1621" width="0.2" height="15.0" fill="rgb(221,13,43)" rx="2" ry="2" />
<text  x="1086.31" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (596 samples, 10.13%)</title><rect x="722.3" y="1893" width="119.6" height="15.0" fill="rgb(236,144,25)" rx="2" ry="2" />
<text  x="725.33" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="563.1" y="1669" width="0.2" height="15.0" fill="rgb(240,229,35)" rx="2" ry="2" />
<text  x="566.10" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="575.5" y="1925" width="0.2" height="15.0" fill="rgb(226,70,46)" rx="2" ry="2" />
<text  x="578.53" y="1935.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1170.3" y="2037" width="0.6" height="15.0" fill="rgb(234,94,38)" rx="2" ry="2" />
<text  x="1173.35" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="803.6" y="1493" width="0.2" height="15.0" fill="rgb(216,148,19)" rx="2" ry="2" />
<text  x="806.55" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="437" width="16.1" height="15.0" fill="rgb(209,91,48)" rx="2" ry="2" />
<text  x="101.44" y="447.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="315.4" y="1621" width="0.2" height="15.0" fill="rgb(253,197,26)" rx="2" ry="2" />
<text  x="318.43" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="757.8" y="1621" width="0.2" height="15.0" fill="rgb(217,67,43)" rx="2" ry="2" />
<text  x="760.83" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="610.6" y="1909" width="0.2" height="15.0" fill="rgb(226,1,45)" rx="2" ry="2" />
<text  x="613.63" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="168.2" y="1941" width="0.2" height="15.0" fill="rgb(247,20,18)" rx="2" ry="2" />
<text  x="171.23" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="886.8" y="1941" width="0.2" height="15.0" fill="rgb(253,204,52)" rx="2" ry="2" />
<text  x="889.78" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="851.5" y="1877" width="0.2" height="15.0" fill="rgb(209,54,38)" rx="2" ry="2" />
<text  x="854.48" y="1887.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (22 samples, 0.37%)</title><rect x="311.2" y="1813" width="4.4" height="15.0" fill="rgb(218,64,16)" rx="2" ry="2" />
<text  x="314.22" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="75.6" y="1845" width="0.2" height="15.0" fill="rgb(222,64,20)" rx="2" ry="2" />
<text  x="78.58" y="1855.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="160.4" y="1989" width="0.2" height="15.0" fill="rgb(221,155,10)" rx="2" ry="2" />
<text  x="163.41" y="1999.5" ></text>
</g>
<g >
<title>__internal_add_timer (2 samples, 0.03%)</title><rect x="313.4" y="1749" width="0.4" height="15.0" fill="rgb(242,80,19)" rx="2" ry="2" />
<text  x="316.42" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="848.3" y="1893" width="0.4" height="15.0" fill="rgb(228,203,20)" rx="2" ry="2" />
<text  x="851.27" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="69.8" y="1445" width="0.2" height="15.0" fill="rgb(251,65,14)" rx="2" ry="2" />
<text  x="72.76" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="301.0" y="1797" width="0.2" height="15.0" fill="rgb(212,36,32)" rx="2" ry="2" />
<text  x="303.99" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (21 samples, 0.36%)</title><rect x="359.5" y="1909" width="4.3" height="15.0" fill="rgb(227,192,47)" rx="2" ry="2" />
<text  x="362.55" y="1919.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.02%)</title><rect x="244.0" y="1765" width="0.2" height="15.0" fill="rgb(254,104,4)" rx="2" ry="2" />
<text  x="247.03" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="368.8" y="1845" width="0.2" height="15.0" fill="rgb(228,40,53)" rx="2" ry="2" />
<text  x="371.77" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85 samples, 1.44%)</title><rect x="682.8" y="1973" width="17.1" height="15.0" fill="rgb(235,206,26)" rx="2" ry="2" />
<text  x="685.82" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (1 samples, 0.02%)</title><rect x="504.1" y="1989" width="0.2" height="15.0" fill="rgb(207,144,42)" rx="2" ry="2" />
<text  x="507.14" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (1 samples, 0.02%)</title><rect x="62.7" y="1989" width="0.2" height="15.0" fill="rgb(248,84,46)" rx="2" ry="2" />
<text  x="65.74" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="142.0" y="1877" width="0.4" height="15.0" fill="rgb(217,144,17)" rx="2" ry="2" />
<text  x="144.96" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="59.1" y="1893" width="1.2" height="15.0" fill="rgb(213,156,12)" rx="2" ry="2" />
<text  x="62.13" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(215,28,18)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="934.7" y="1909" width="0.4" height="15.0" fill="rgb(231,198,41)" rx="2" ry="2" />
<text  x="937.71" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="648.9" y="1957" width="0.6" height="15.0" fill="rgb(205,199,44)" rx="2" ry="2" />
<text  x="651.93" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="146.0" y="1765" width="0.2" height="15.0" fill="rgb(235,138,39)" rx="2" ry="2" />
<text  x="148.97" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.10%)</title><rect x="278.5" y="1477" width="1.2" height="15.0" fill="rgb(208,153,19)" rx="2" ry="2" />
<text  x="281.53" y="1487.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (91 samples, 1.55%)</title><rect x="585.2" y="1957" width="18.2" height="15.0" fill="rgb(209,76,38)" rx="2" ry="2" />
<text  x="588.16" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="581.8" y="1989" width="0.2" height="15.0" fill="rgb(221,32,38)" rx="2" ry="2" />
<text  x="584.75" y="1999.5" ></text>
</g>
<g >
<title>__fput (516 samples, 8.77%)</title><rect x="733.2" y="1813" width="103.4" height="15.0" fill="rgb(252,0,11)" rx="2" ry="2" />
<text  x="736.16" y="1823.5" >__fput</text>
</g>
<g >
<title>__check_object_size (11 samples, 0.19%)</title><rect x="1098.8" y="1909" width="2.2" height="15.0" fill="rgb(213,54,26)" rx="2" ry="2" />
<text  x="1101.75" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="501.3" y="2037" width="0.2" height="15.0" fill="rgb(224,154,24)" rx="2" ry="2" />
<text  x="504.33" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="246.4" y="1621" width="0.2" height="15.0" fill="rgb(206,41,19)" rx="2" ry="2" />
<text  x="249.44" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (8 samples, 0.14%)</title><rect x="215.0" y="1861" width="1.6" height="15.0" fill="rgb(215,156,16)" rx="2" ry="2" />
<text  x="217.96" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1061" width="16.3" height="15.0" fill="rgb(248,200,16)" rx="2" ry="2" />
<text  x="101.44" y="1071.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="221.8" y="1845" width="0.2" height="15.0" fill="rgb(222,3,46)" rx="2" ry="2" />
<text  x="224.77" y="1855.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (2 samples, 0.03%)</title><rect x="1008.1" y="1957" width="0.4" height="15.0" fill="rgb(205,214,9)" rx="2" ry="2" />
<text  x="1011.11" y="1967.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="776.3" y="1653" width="0.4" height="15.0" fill="rgb(236,61,50)" rx="2" ry="2" />
<text  x="779.28" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="153.2" y="1973" width="0.2" height="15.0" fill="rgb(219,72,18)" rx="2" ry="2" />
<text  x="156.19" y="1983.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="996.7" y="1973" width="0.2" height="15.0" fill="rgb(252,77,36)" rx="2" ry="2" />
<text  x="999.68" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="123.9" y="1973" width="0.4" height="15.0" fill="rgb(245,166,49)" rx="2" ry="2" />
<text  x="126.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="575.5" y="1733" width="0.2" height="15.0" fill="rgb(208,130,6)" rx="2" ry="2" />
<text  x="578.53" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="165.0" y="1989" width="2.0" height="15.0" fill="rgb(217,134,10)" rx="2" ry="2" />
<text  x="168.02" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (75 samples, 1.27%)</title><rect x="585.8" y="1925" width="15.0" height="15.0" fill="rgb(208,179,17)" rx="2" ry="2" />
<text  x="588.76" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1074.9" y="1477" width="0.2" height="15.0" fill="rgb(210,43,18)" rx="2" ry="2" />
<text  x="1077.89" y="1487.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="1118.8" y="1685" width="0.2" height="15.0" fill="rgb(210,83,44)" rx="2" ry="2" />
<text  x="1121.81" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="918.5" y="1813" width="0.2" height="15.0" fill="rgb(217,211,27)" rx="2" ry="2" />
<text  x="921.46" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="126.9" y="1925" width="0.2" height="15.0" fill="rgb(220,7,22)" rx="2" ry="2" />
<text  x="129.92" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="963.2" y="1813" width="0.2" height="15.0" fill="rgb(213,211,37)" rx="2" ry="2" />
<text  x="966.18" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="926.7" y="1893" width="0.6" height="15.0" fill="rgb(214,227,35)" rx="2" ry="2" />
<text  x="929.69" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="571.9" y="2005" width="0.4" height="15.0" fill="rgb(224,164,24)" rx="2" ry="2" />
<text  x="574.92" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (5 samples, 0.08%)</title><rect x="1177.0" y="1973" width="1.0" height="15.0" fill="rgb(230,171,43)" rx="2" ry="2" />
<text  x="1179.96" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="75.6" y="1893" width="0.2" height="15.0" fill="rgb(248,90,3)" rx="2" ry="2" />
<text  x="78.58" y="1903.5" ></text>
</g>
<g >
<title>chacha20_block (1 samples, 0.02%)</title><rect x="394.0" y="1797" width="0.2" height="15.0" fill="rgb(228,210,52)" rx="2" ry="2" />
<text  x="397.04" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::operator== (1 samples, 0.02%)</title><rect x="132.9" y="1877" width="0.2" height="15.0" fill="rgb(210,7,49)" rx="2" ry="2" />
<text  x="135.93" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="150.2" y="1941" width="0.2" height="15.0" fill="rgb(212,16,9)" rx="2" ry="2" />
<text  x="153.18" y="1951.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="69.8" y="1349" width="0.2" height="15.0" fill="rgb(232,100,15)" rx="2" ry="2" />
<text  x="72.76" y="1359.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="69.8" y="1701" width="0.2" height="15.0" fill="rgb(208,15,44)" rx="2" ry="2" />
<text  x="72.76" y="1711.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="377.4" y="1941" width="0.2" height="15.0" fill="rgb(240,114,44)" rx="2" ry="2" />
<text  x="380.40" y="1951.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="578.3" y="1973" width="0.4" height="15.0" fill="rgb(215,153,40)" rx="2" ry="2" />
<text  x="581.34" y="1983.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (13 samples, 0.22%)</title><rect x="239.8" y="1941" width="2.6" height="15.0" fill="rgb(227,84,27)" rx="2" ry="2" />
<text  x="242.82" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="624.3" y="1957" width="0.2" height="15.0" fill="rgb(243,196,11)" rx="2" ry="2" />
<text  x="627.27" y="1967.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="768.5" y="1669" width="0.4" height="15.0" fill="rgb(242,227,46)" rx="2" ry="2" />
<text  x="771.46" y="1679.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="408.7" y="2037" width="0.4" height="15.0" fill="rgb(230,114,32)" rx="2" ry="2" />
<text  x="411.68" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="242.6" y="1925" width="0.4" height="15.0" fill="rgb(208,209,1)" rx="2" ry="2" />
<text  x="245.63" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1165.3" y="1685" width="0.2" height="15.0" fill="rgb(246,153,43)" rx="2" ry="2" />
<text  x="1168.33" y="1695.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="583.2" y="1589" width="0.2" height="15.0" fill="rgb(254,197,45)" rx="2" ry="2" />
<text  x="586.15" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (2 samples, 0.03%)</title><rect x="866.1" y="1989" width="0.4" height="15.0" fill="rgb(247,127,20)" rx="2" ry="2" />
<text  x="869.12" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="994.3" y="1653" width="0.2" height="15.0" fill="rgb(247,128,14)" rx="2" ry="2" />
<text  x="997.27" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="121.1" y="1989" width="0.4" height="15.0" fill="rgb(228,25,40)" rx="2" ry="2" />
<text  x="124.10" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="951.0" y="1941" width="0.2" height="15.0" fill="rgb(254,44,34)" rx="2" ry="2" />
<text  x="953.95" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="53.1" y="1861" width="0.2" height="15.0" fill="rgb(220,188,24)" rx="2" ry="2" />
<text  x="56.12" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="59.5" y="1845" width="0.4" height="15.0" fill="rgb(221,23,41)" rx="2" ry="2" />
<text  x="62.53" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1129.8" y="2037" width="0.2" height="15.0" fill="rgb(241,142,15)" rx="2" ry="2" />
<text  x="1132.84" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="945.5" y="1989" width="0.2" height="15.0" fill="rgb(237,47,1)" rx="2" ry="2" />
<text  x="948.54" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1156.3" y="1941" width="0.4" height="15.0" fill="rgb(234,23,27)" rx="2" ry="2" />
<text  x="1159.31" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (10 samples, 0.17%)</title><rect x="861.9" y="1989" width="2.0" height="15.0" fill="rgb(221,159,50)" rx="2" ry="2" />
<text  x="864.91" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="521.2" y="1941" width="0.2" height="15.0" fill="rgb(205,227,39)" rx="2" ry="2" />
<text  x="524.19" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="891.2" y="1925" width="0.4" height="15.0" fill="rgb(230,49,33)" rx="2" ry="2" />
<text  x="894.19" y="1935.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1118.8" y="1701" width="0.2" height="15.0" fill="rgb(247,113,42)" rx="2" ry="2" />
<text  x="1121.81" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="637.1" y="1989" width="0.2" height="15.0" fill="rgb(252,56,39)" rx="2" ry="2" />
<text  x="640.10" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="521.8" y="1893" width="0.8" height="15.0" fill="rgb(218,109,7)" rx="2" ry="2" />
<text  x="524.79" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (4 samples, 0.07%)</title><rect x="697.1" y="1861" width="0.8" height="15.0" fill="rgb(216,153,35)" rx="2" ry="2" />
<text  x="700.06" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="902.2" y="2005" width="0.2" height="15.0" fill="rgb(248,49,10)" rx="2" ry="2" />
<text  x="905.22" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="421" width="16.1" height="15.0" fill="rgb(240,167,50)" rx="2" ry="2" />
<text  x="101.44" y="431.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (50 samples, 0.85%)</title><rect x="605.8" y="1941" width="10.0" height="15.0" fill="rgb(238,11,1)" rx="2" ry="2" />
<text  x="608.82" y="1951.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="454.0" y="1941" width="0.8" height="15.0" fill="rgb(215,116,46)" rx="2" ry="2" />
<text  x="457.00" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="618.5" y="1877" width="0.8" height="15.0" fill="rgb(230,112,26)" rx="2" ry="2" />
<text  x="621.45" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="171.6" y="1989" width="0.2" height="15.0" fill="rgb(246,35,27)" rx="2" ry="2" />
<text  x="174.64" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="757.8" y="1509" width="0.2" height="15.0" fill="rgb(254,149,5)" rx="2" ry="2" />
<text  x="760.83" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="633.9" y="2005" width="2.4" height="15.0" fill="rgb(225,68,10)" rx="2" ry="2" />
<text  x="636.89" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="762.0" y="1717" width="0.2" height="15.0" fill="rgb(241,51,14)" rx="2" ry="2" />
<text  x="765.04" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="374.6" y="1621" width="0.2" height="15.0" fill="rgb(235,61,51)" rx="2" ry="2" />
<text  x="377.59" y="1631.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1032.0" y="2021" width="0.4" height="15.0" fill="rgb(221,146,32)" rx="2" ry="2" />
<text  x="1034.97" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="24.4" y="1717" width="0.2" height="15.0" fill="rgb(249,180,47)" rx="2" ry="2" />
<text  x="27.44" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="381.2" y="1637" width="0.2" height="15.0" fill="rgb(210,225,31)" rx="2" ry="2" />
<text  x="384.21" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="142.4" y="1893" width="0.4" height="15.0" fill="rgb(234,1,0)" rx="2" ry="2" />
<text  x="145.36" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="149.2" y="1765" width="0.2" height="15.0" fill="rgb(247,53,10)" rx="2" ry="2" />
<text  x="152.18" y="1775.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (5 samples, 0.08%)</title><rect x="569.1" y="1973" width="1.0" height="15.0" fill="rgb(209,35,51)" rx="2" ry="2" />
<text  x="572.12" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="69.8" y="1413" width="0.2" height="15.0" fill="rgb(213,142,4)" rx="2" ry="2" />
<text  x="72.76" y="1423.5" ></text>
</g>
<g >
<title>ip_route_input_noref (2 samples, 0.03%)</title><rect x="563.7" y="1781" width="0.4" height="15.0" fill="rgb(217,15,31)" rx="2" ry="2" />
<text  x="566.70" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (1 samples, 0.02%)</title><rect x="209.3" y="1893" width="0.2" height="15.0" fill="rgb(250,8,53)" rx="2" ry="2" />
<text  x="212.34" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="79.0" y="1941" width="0.2" height="15.0" fill="rgb(211,30,41)" rx="2" ry="2" />
<text  x="81.99" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1164.5" y="1829" width="0.2" height="15.0" fill="rgb(215,165,36)" rx="2" ry="2" />
<text  x="1167.53" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="854.9" y="1941" width="0.2" height="15.0" fill="rgb(207,52,21)" rx="2" ry="2" />
<text  x="857.89" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="987.7" y="1957" width="0.2" height="15.0" fill="rgb(247,83,1)" rx="2" ry="2" />
<text  x="990.65" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="935.7" y="1973" width="0.4" height="15.0" fill="rgb(220,203,29)" rx="2" ry="2" />
<text  x="938.71" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="545.7" y="1973" width="0.8" height="15.0" fill="rgb(231,122,30)" rx="2" ry="2" />
<text  x="548.65" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="903.4" y="1973" width="0.2" height="15.0" fill="rgb(235,68,32)" rx="2" ry="2" />
<text  x="906.42" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="857.1" y="1829" width="0.2" height="15.0" fill="rgb(212,217,13)" rx="2" ry="2" />
<text  x="860.10" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="133.7" y="1925" width="0.2" height="15.0" fill="rgb(215,176,7)" rx="2" ry="2" />
<text  x="136.74" y="1935.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.02%)</title><rect x="470.4" y="1973" width="0.2" height="15.0" fill="rgb(208,60,29)" rx="2" ry="2" />
<text  x="473.45" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="817.2" y="1509" width="0.2" height="15.0" fill="rgb(225,214,10)" rx="2" ry="2" />
<text  x="820.19" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="78.0" y="1925" width="0.4" height="15.0" fill="rgb(220,1,13)" rx="2" ry="2" />
<text  x="80.98" y="1935.5" ></text>
</g>
<g >
<title>make_kuid (3 samples, 0.05%)</title><rect x="382.2" y="1893" width="0.6" height="15.0" fill="rgb(237,218,46)" rx="2" ry="2" />
<text  x="385.21" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (72 samples, 1.22%)</title><rect x="586.4" y="1909" width="14.4" height="15.0" fill="rgb(234,10,39)" rx="2" ry="2" />
<text  x="589.36" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="661.4" y="2021" width="0.4" height="15.0" fill="rgb(212,59,11)" rx="2" ry="2" />
<text  x="664.37" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="583.2" y="1573" width="0.2" height="15.0" fill="rgb(211,48,17)" rx="2" ry="2" />
<text  x="586.15" y="1583.5" ></text>
</g>
<g >
<title>ip_local_out (138 samples, 2.35%)</title><rect x="272.9" y="1797" width="27.7" height="15.0" fill="rgb(249,142,4)" rx="2" ry="2" />
<text  x="275.91" y="1807.5" >i..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="75.6" y="1781" width="0.2" height="15.0" fill="rgb(225,215,49)" rx="2" ry="2" />
<text  x="78.58" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (7 samples, 0.12%)</title><rect x="167.0" y="1989" width="1.4" height="15.0" fill="rgb(254,120,37)" rx="2" ry="2" />
<text  x="170.03" y="1999.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="62.3" y="1701" width="0.2" height="15.0" fill="rgb(207,221,41)" rx="2" ry="2" />
<text  x="65.34" y="1711.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="259.9" y="1765" width="0.2" height="15.0" fill="rgb(246,134,54)" rx="2" ry="2" />
<text  x="262.88" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (592 samples, 10.06%)</title><rect x="722.9" y="1877" width="118.8" height="15.0" fill="rgb(218,5,9)" rx="2" ry="2" />
<text  x="725.93" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1054.6" y="1973" width="0.2" height="15.0" fill="rgb(212,23,35)" rx="2" ry="2" />
<text  x="1057.63" y="1983.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="678.0" y="1621" width="0.2" height="15.0" fill="rgb(248,204,0)" rx="2" ry="2" />
<text  x="681.01" y="1631.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="399.7" y="1557" width="0.2" height="15.0" fill="rgb(251,9,19)" rx="2" ry="2" />
<text  x="402.66" y="1567.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="573.1" y="1941" width="0.4" height="15.0" fill="rgb(250,149,10)" rx="2" ry="2" />
<text  x="576.13" y="1951.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="600.8" y="1621" width="0.2" height="15.0" fill="rgb(220,205,29)" rx="2" ry="2" />
<text  x="603.80" y="1631.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1128.6" y="1861" width="0.2" height="15.0" fill="rgb(206,63,32)" rx="2" ry="2" />
<text  x="1131.63" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="563.1" y="1781" width="0.2" height="15.0" fill="rgb(213,69,31)" rx="2" ry="2" />
<text  x="566.10" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="852.3" y="1909" width="0.2" height="15.0" fill="rgb(238,204,14)" rx="2" ry="2" />
<text  x="855.28" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1093.7" y="1797" width="0.2" height="15.0" fill="rgb(252,162,45)" rx="2" ry="2" />
<text  x="1096.74" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="579.7" y="1525" width="0.2" height="15.0" fill="rgb(209,112,5)" rx="2" ry="2" />
<text  x="582.75" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (38 samples, 0.65%)</title><rect x="291.8" y="1669" width="7.6" height="15.0" fill="rgb(227,39,43)" rx="2" ry="2" />
<text  x="294.76" y="1679.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="855.1" y="1925" width="0.2" height="15.0" fill="rgb(213,120,50)" rx="2" ry="2" />
<text  x="858.09" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="160.8" y="1621" width="0.2" height="15.0" fill="rgb(226,78,51)" rx="2" ry="2" />
<text  x="163.81" y="1631.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="734.2" y="1797" width="0.2" height="15.0" fill="rgb(216,179,4)" rx="2" ry="2" />
<text  x="737.16" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="171.4" y="1973" width="0.2" height="15.0" fill="rgb(222,189,27)" rx="2" ry="2" />
<text  x="174.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (25 samples, 0.42%)</title><rect x="656.2" y="2037" width="5.0" height="15.0" fill="rgb(212,39,32)" rx="2" ry="2" />
<text  x="659.15" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="994.3" y="1525" width="0.2" height="15.0" fill="rgb(244,97,21)" rx="2" ry="2" />
<text  x="997.27" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="475.5" y="1717" width="0.2" height="15.0" fill="rgb(247,176,20)" rx="2" ry="2" />
<text  x="478.46" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="373" width="16.1" height="15.0" fill="rgb(238,2,46)" rx="2" ry="2" />
<text  x="101.44" y="383.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.2" y="1717" width="0.2" height="15.0" fill="rgb(218,98,53)" rx="2" ry="2" />
<text  x="101.24" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="314.2" y="1733" width="1.2" height="15.0" fill="rgb(241,225,51)" rx="2" ry="2" />
<text  x="317.23" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="951.8" y="2005" width="0.4" height="15.0" fill="rgb(234,41,10)" rx="2" ry="2" />
<text  x="954.75" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="667.6" y="1893" width="0.2" height="15.0" fill="rgb(236,67,27)" rx="2" ry="2" />
<text  x="670.58" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="666.0" y="1925" width="0.2" height="15.0" fill="rgb(213,120,48)" rx="2" ry="2" />
<text  x="668.98" y="1935.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="804.0" y="1509" width="0.4" height="15.0" fill="rgb(234,182,24)" rx="2" ry="2" />
<text  x="806.95" y="1519.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="500.7" y="1957" width="0.2" height="15.0" fill="rgb(252,132,21)" rx="2" ry="2" />
<text  x="503.73" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (4 samples, 0.07%)</title><rect x="1143.9" y="2005" width="0.8" height="15.0" fill="rgb(238,139,47)" rx="2" ry="2" />
<text  x="1146.87" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (126 samples, 2.14%)</title><rect x="275.1" y="1749" width="25.3" height="15.0" fill="rgb(214,51,34)" rx="2" ry="2" />
<text  x="278.12" y="1759.5" >i..</text>
</g>
<g >
<title>accept4 (373 samples, 6.34%)</title><rect x="333.7" y="2037" width="74.8" height="15.0" fill="rgb(250,169,1)" rx="2" ry="2" />
<text  x="336.68" y="2047.5" >accept4</text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="315.4" y="1477" width="0.2" height="15.0" fill="rgb(253,15,39)" rx="2" ry="2" />
<text  x="318.43" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="693" width="16.1" height="15.0" fill="rgb(230,193,1)" rx="2" ry="2" />
<text  x="101.44" y="703.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="619.3" y="2021" width="0.4" height="15.0" fill="rgb(205,33,34)" rx="2" ry="2" />
<text  x="622.25" y="2031.5" ></text>
</g>
<g >
<title>security_sock_graft (3 samples, 0.05%)</title><rect x="375.2" y="1941" width="0.6" height="15.0" fill="rgb(240,110,32)" rx="2" ry="2" />
<text  x="378.19" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (47 samples, 0.80%)</title><rect x="1109.0" y="1685" width="9.4" height="15.0" fill="rgb(252,79,54)" rx="2" ry="2" />
<text  x="1111.98" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="148.0" y="1829" width="0.2" height="15.0" fill="rgb(237,93,33)" rx="2" ry="2" />
<text  x="150.97" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="221.8" y="1877" width="0.2" height="15.0" fill="rgb(211,173,8)" rx="2" ry="2" />
<text  x="224.77" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1176.4" y="1973" width="0.2" height="15.0" fill="rgb(247,69,30)" rx="2" ry="2" />
<text  x="1179.36" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.3" y="1973" width="0.2" height="15.0" fill="rgb(207,95,9)" rx="2" ry="2" />
<text  x="65.34" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1557" width="17.1" height="15.0" fill="rgb(224,177,17)" rx="2" ry="2" />
<text  x="101.44" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="584.2" y="1877" width="0.2" height="15.0" fill="rgb(215,64,28)" rx="2" ry="2" />
<text  x="587.16" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (268 samples, 4.55%)</title><rect x="35.1" y="2005" width="53.7" height="15.0" fill="rgb(231,168,13)" rx="2" ry="2" />
<text  x="38.07" y="2015.5" >folly..</text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="853.7" y="1909" width="0.2" height="15.0" fill="rgb(221,85,1)" rx="2" ry="2" />
<text  x="856.69" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1149.1" y="1973" width="0.2" height="15.0" fill="rgb(225,105,11)" rx="2" ry="2" />
<text  x="1152.09" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (39 samples, 0.66%)</title><rect x="1075.7" y="1893" width="7.8" height="15.0" fill="rgb(234,4,52)" rx="2" ry="2" />
<text  x="1078.69" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="917.5" y="2037" width="0.4" height="15.0" fill="rgb(206,127,31)" rx="2" ry="2" />
<text  x="920.46" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.8" y="1941" width="0.2" height="15.0" fill="rgb(218,134,5)" rx="2" ry="2" />
<text  x="74.77" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="75.6" y="1701" width="0.2" height="15.0" fill="rgb(252,228,38)" rx="2" ry="2" />
<text  x="78.58" y="1711.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="1136.5" y="2037" width="0.2" height="15.0" fill="rgb(211,192,44)" rx="2" ry="2" />
<text  x="1139.45" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="323.5" y="1909" width="1.0" height="15.0" fill="rgb(234,140,4)" rx="2" ry="2" />
<text  x="326.45" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="399.7" y="1669" width="0.2" height="15.0" fill="rgb(235,93,44)" rx="2" ry="2" />
<text  x="402.66" y="1679.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="614.2" y="1717" width="0.8" height="15.0" fill="rgb(243,206,7)" rx="2" ry="2" />
<text  x="617.24" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="994.3" y="1541" width="0.2" height="15.0" fill="rgb(240,93,8)" rx="2" ry="2" />
<text  x="997.27" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1053.8" y="1861" width="0.2" height="15.0" fill="rgb(249,186,22)" rx="2" ry="2" />
<text  x="1056.83" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (37 samples, 0.63%)</title><rect x="54.5" y="1957" width="7.4" height="15.0" fill="rgb(247,73,40)" rx="2" ry="2" />
<text  x="57.52" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="575.3" y="1861" width="0.2" height="15.0" fill="rgb(231,170,20)" rx="2" ry="2" />
<text  x="578.33" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (120 samples, 2.04%)</title><rect x="681.4" y="2037" width="24.1" height="15.0" fill="rgb(221,159,53)" rx="2" ry="2" />
<text  x="684.42" y="2047.5" >f..</text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="101" width="15.9" height="15.0" fill="rgb(231,216,12)" rx="2" ry="2" />
<text  x="101.44" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (21 samples, 0.36%)</title><rect x="1174.6" y="2005" width="4.2" height="15.0" fill="rgb(229,63,7)" rx="2" ry="2" />
<text  x="1177.56" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="926.1" y="1925" width="1.2" height="15.0" fill="rgb(252,13,22)" rx="2" ry="2" />
<text  x="929.08" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="918.5" y="1893" width="0.2" height="15.0" fill="rgb(229,2,21)" rx="2" ry="2" />
<text  x="921.46" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="282.9" y="1685" width="0.4" height="15.0" fill="rgb(223,42,53)" rx="2" ry="2" />
<text  x="285.94" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="655.1" y="2005" width="0.3" height="15.0" fill="rgb(240,55,49)" rx="2" ry="2" />
<text  x="658.15" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="857.7" y="1829" width="0.2" height="15.0" fill="rgb(218,45,6)" rx="2" ry="2" />
<text  x="860.70" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="146.0" y="1749" width="0.2" height="15.0" fill="rgb(222,121,30)" rx="2" ry="2" />
<text  x="148.97" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="276.5" y="1493" width="0.6" height="15.0" fill="rgb(217,103,49)" rx="2" ry="2" />
<text  x="279.52" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="276.5" y="1509" width="0.6" height="15.0" fill="rgb(251,218,53)" rx="2" ry="2" />
<text  x="279.52" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="563.1" y="1717" width="0.2" height="15.0" fill="rgb(239,97,17)" rx="2" ry="2" />
<text  x="566.10" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="1181.0" y="2053" width="0.8" height="15.0" fill="rgb(253,112,35)" rx="2" ry="2" />
<text  x="1183.98" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (48 samples, 0.82%)</title><rect x="925.9" y="1957" width="9.6" height="15.0" fill="rgb(251,168,47)" rx="2" ry="2" />
<text  x="928.88" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="523.8" y="1925" width="0.4" height="15.0" fill="rgb(225,46,51)" rx="2" ry="2" />
<text  x="526.79" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="784.5" y="1493" width="0.2" height="15.0" fill="rgb(244,33,31)" rx="2" ry="2" />
<text  x="787.50" y="1503.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="647.5" y="1973" width="0.4" height="15.0" fill="rgb(227,145,20)" rx="2" ry="2" />
<text  x="650.53" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1150.9" y="1877" width="0.2" height="15.0" fill="rgb(217,27,30)" rx="2" ry="2" />
<text  x="1153.89" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.1" y="1701" width="0.2" height="15.0" fill="rgb(220,19,8)" rx="2" ry="2" />
<text  x="844.05" y="1711.5" ></text>
</g>
<g >
<title>inet_release (388 samples, 6.59%)</title><rect x="755.8" y="1765" width="77.8" height="15.0" fill="rgb(215,156,32)" rx="2" ry="2" />
<text  x="758.82" y="1775.5" >inet_rel..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="59.1" y="1861" width="0.2" height="15.0" fill="rgb(243,17,15)" rx="2" ry="2" />
<text  x="62.13" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="990.5" y="1989" width="0.2" height="15.0" fill="rgb(218,196,17)" rx="2" ry="2" />
<text  x="993.46" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1349" width="16.3" height="15.0" fill="rgb(247,81,2)" rx="2" ry="2" />
<text  x="101.44" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="75.6" y="1749" width="0.2" height="15.0" fill="rgb(211,148,20)" rx="2" ry="2" />
<text  x="78.58" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1829" width="0.2" height="15.0" fill="rgb(248,67,23)" rx="2" ry="2" />
<text  x="408.47" y="1839.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="649.5" y="1733" width="0.2" height="15.0" fill="rgb(209,212,34)" rx="2" ry="2" />
<text  x="652.53" y="1743.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="246.4" y="1589" width="0.2" height="15.0" fill="rgb(240,72,35)" rx="2" ry="2" />
<text  x="249.44" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="346.9" y="1941" width="0.2" height="15.0" fill="rgb(237,96,8)" rx="2" ry="2" />
<text  x="349.91" y="1951.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (4 samples, 0.07%)</title><rect x="957.4" y="2005" width="0.8" height="15.0" fill="rgb(220,131,32)" rx="2" ry="2" />
<text  x="960.37" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.8" y="1989" width="0.2" height="15.0" fill="rgb(229,89,42)" rx="2" ry="2" />
<text  x="163.81" y="1999.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="1120.4" y="1893" width="0.4" height="15.0" fill="rgb(224,2,35)" rx="2" ry="2" />
<text  x="1123.41" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (6 samples, 0.10%)</title><rect x="603.4" y="2005" width="1.2" height="15.0" fill="rgb(231,78,22)" rx="2" ry="2" />
<text  x="606.41" y="2015.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="393.4" y="1861" width="0.2" height="15.0" fill="rgb(244,189,34)" rx="2" ry="2" />
<text  x="396.44" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="693.3" y="1861" width="0.2" height="15.0" fill="rgb(234,69,24)" rx="2" ry="2" />
<text  x="696.25" y="1871.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1108.2" y="1861" width="0.2" height="15.0" fill="rgb(216,115,29)" rx="2" ry="2" />
<text  x="1111.18" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="475.5" y="1685" width="0.2" height="15.0" fill="rgb(232,215,40)" rx="2" ry="2" />
<text  x="478.46" y="1695.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(245,89,31)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="369.8" y="1925" width="0.2" height="15.0" fill="rgb(208,69,19)" rx="2" ry="2" />
<text  x="372.78" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="545.3" y="1797" width="0.2" height="15.0" fill="rgb(205,83,20)" rx="2" ry="2" />
<text  x="548.25" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="946.5" y="2005" width="0.2" height="15.0" fill="rgb(251,29,21)" rx="2" ry="2" />
<text  x="949.54" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="132.7" y="1845" width="0.2" height="15.0" fill="rgb(234,112,13)" rx="2" ry="2" />
<text  x="135.73" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="569.1" y="1925" width="0.2" height="15.0" fill="rgb(223,137,47)" rx="2" ry="2" />
<text  x="572.12" y="1935.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="563.1" y="1589" width="0.2" height="15.0" fill="rgb(243,206,41)" rx="2" ry="2" />
<text  x="566.10" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (32 samples, 0.54%)</title><rect x="134.9" y="1925" width="6.5" height="15.0" fill="rgb(245,75,30)" rx="2" ry="2" />
<text  x="137.94" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="402.1" y="1909" width="0.2" height="15.0" fill="rgb(240,193,7)" rx="2" ry="2" />
<text  x="405.06" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="1093.9" y="1877" width="0.4" height="15.0" fill="rgb(209,133,5)" rx="2" ry="2" />
<text  x="1096.94" y="1887.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="477.7" y="1733" width="0.2" height="15.0" fill="rgb(239,189,45)" rx="2" ry="2" />
<text  x="480.67" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1074.9" y="1621" width="0.2" height="15.0" fill="rgb(248,153,3)" rx="2" ry="2" />
<text  x="1077.89" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="126.9" y="1685" width="0.2" height="15.0" fill="rgb(253,216,10)" rx="2" ry="2" />
<text  x="129.92" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="617.0" y="1957" width="0.4" height="15.0" fill="rgb(223,147,9)" rx="2" ry="2" />
<text  x="620.05" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1129.8" y="1957" width="0.2" height="15.0" fill="rgb(233,122,12)" rx="2" ry="2" />
<text  x="1132.84" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="214.2" y="1829" width="0.6" height="15.0" fill="rgb(213,16,14)" rx="2" ry="2" />
<text  x="217.15" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="918.5" y="1829" width="0.2" height="15.0" fill="rgb(244,219,22)" rx="2" ry="2" />
<text  x="921.46" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1140.5" y="2005" width="0.2" height="15.0" fill="rgb(208,27,31)" rx="2" ry="2" />
<text  x="1143.47" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="575.3" y="1765" width="0.2" height="15.0" fill="rgb(223,5,20)" rx="2" ry="2" />
<text  x="578.33" y="1775.5" ></text>
</g>
<g >
<title>tcp_write_xmit (255 samples, 4.33%)</title><rect x="770.9" y="1701" width="51.1" height="15.0" fill="rgb(241,130,53)" rx="2" ry="2" />
<text  x="773.86" y="1711.5" >tcp_w..</text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (1 samples, 0.02%)</title><rect x="1152.1" y="2021" width="0.2" height="15.0" fill="rgb(235,211,19)" rx="2" ry="2" />
<text  x="1155.10" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="696.1" y="1861" width="0.2" height="15.0" fill="rgb(209,19,26)" rx="2" ry="2" />
<text  x="699.06" y="1871.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="267.5" y="1845" width="0.2" height="15.0" fill="rgb(205,75,8)" rx="2" ry="2" />
<text  x="270.50" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1164.5" y="1765" width="0.2" height="15.0" fill="rgb(217,25,15)" rx="2" ry="2" />
<text  x="1167.53" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="401.7" y="1925" width="0.4" height="15.0" fill="rgb(209,51,38)" rx="2" ry="2" />
<text  x="404.66" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="544.0" y="1765" width="0.2" height="15.0" fill="rgb(230,165,43)" rx="2" ry="2" />
<text  x="547.05" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="678.0" y="1669" width="0.2" height="15.0" fill="rgb(217,194,38)" rx="2" ry="2" />
<text  x="681.01" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1143.3" y="1973" width="0.2" height="15.0" fill="rgb(245,213,34)" rx="2" ry="2" />
<text  x="1146.27" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="593.4" y="1829" width="0.2" height="15.0" fill="rgb(249,65,33)" rx="2" ry="2" />
<text  x="596.38" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(232,175,0)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="399.7" y="1861" width="0.4" height="15.0" fill="rgb(236,52,53)" rx="2" ry="2" />
<text  x="402.66" y="1871.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (6 samples, 0.10%)</title><rect x="568.9" y="1989" width="1.2" height="15.0" fill="rgb(222,207,40)" rx="2" ry="2" />
<text  x="571.92" y="1999.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="980.6" y="1893" width="0.2" height="15.0" fill="rgb(218,186,52)" rx="2" ry="2" />
<text  x="983.63" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.6" y="1845" width="0.8" height="15.0" fill="rgb(254,35,8)" rx="2" ry="2" />
<text  x="14.60" y="1855.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="579.7" y="1653" width="0.2" height="15.0" fill="rgb(247,94,39)" rx="2" ry="2" />
<text  x="582.75" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="133.7" y="1877" width="0.2" height="15.0" fill="rgb(251,147,13)" rx="2" ry="2" />
<text  x="136.74" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="575.3" y="1701" width="0.2" height="15.0" fill="rgb(227,106,37)" rx="2" ry="2" />
<text  x="578.33" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1165.3" y="1765" width="0.2" height="15.0" fill="rgb(205,137,25)" rx="2" ry="2" />
<text  x="1168.33" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="620.7" y="2005" width="0.2" height="15.0" fill="rgb(239,51,3)" rx="2" ry="2" />
<text  x="623.66" y="2015.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="697.7" y="1829" width="0.2" height="15.0" fill="rgb(207,139,48)" rx="2" ry="2" />
<text  x="700.66" y="1839.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="505.5" y="1925" width="0.8" height="15.0" fill="rgb(208,135,0)" rx="2" ry="2" />
<text  x="508.54" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="174.0" y="2005" width="0.2" height="15.0" fill="rgb(209,96,10)" rx="2" ry="2" />
<text  x="177.04" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="593.4" y="1893" width="0.2" height="15.0" fill="rgb(228,184,25)" rx="2" ry="2" />
<text  x="596.38" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="536.0" y="1893" width="0.2" height="15.0" fill="rgb(230,155,54)" rx="2" ry="2" />
<text  x="539.03" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="57.3" y="1845" width="0.2" height="15.0" fill="rgb(215,157,11)" rx="2" ry="2" />
<text  x="60.33" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="513.4" y="1957" width="0.2" height="15.0" fill="rgb(229,177,28)" rx="2" ry="2" />
<text  x="516.37" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (4 samples, 0.07%)</title><rect x="851.3" y="1925" width="0.8" height="15.0" fill="rgb(235,118,31)" rx="2" ry="2" />
<text  x="854.28" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1148.3" y="1829" width="0.2" height="15.0" fill="rgb(207,99,51)" rx="2" ry="2" />
<text  x="1151.29" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="174.2" y="2021" width="0.2" height="15.0" fill="rgb(216,144,14)" rx="2" ry="2" />
<text  x="177.25" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (2 samples, 0.03%)</title><rect x="715.1" y="1973" width="0.4" height="15.0" fill="rgb(233,157,0)" rx="2" ry="2" />
<text  x="718.11" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="153.4" y="2005" width="0.4" height="15.0" fill="rgb(231,62,11)" rx="2" ry="2" />
<text  x="156.39" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="190.3" y="2021" width="0.2" height="15.0" fill="rgb(212,134,29)" rx="2" ry="2" />
<text  x="193.29" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.8" y="1877" width="0.2" height="15.0" fill="rgb(210,84,17)" rx="2" ry="2" />
<text  x="145.76" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (47 samples, 0.80%)</title><rect x="1109.0" y="1557" width="9.4" height="15.0" fill="rgb(246,191,12)" rx="2" ry="2" />
<text  x="1111.98" y="1567.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1108.2" y="1845" width="0.2" height="15.0" fill="rgb(221,199,21)" rx="2" ry="2" />
<text  x="1111.18" y="1855.5" ></text>
</g>
<g >
<title>sys_close (14 samples, 0.24%)</title><rect x="838.4" y="1861" width="2.9" height="15.0" fill="rgb(211,226,53)" rx="2" ry="2" />
<text  x="841.45" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1008.9" y="1989" width="0.2" height="15.0" fill="rgb(216,109,45)" rx="2" ry="2" />
<text  x="1011.91" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="363.6" y="1765" width="0.2" height="15.0" fill="rgb(245,65,45)" rx="2" ry="2" />
<text  x="366.56" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (47 samples, 0.80%)</title><rect x="1109.0" y="1621" width="9.4" height="15.0" fill="rgb(245,219,34)" rx="2" ry="2" />
<text  x="1111.98" y="1631.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="899.0" y="2005" width="0.2" height="15.0" fill="rgb(228,134,34)" rx="2" ry="2" />
<text  x="902.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (1 samples, 0.02%)</title><rect x="162.6" y="2021" width="0.2" height="15.0" fill="rgb(231,48,17)" rx="2" ry="2" />
<text  x="165.61" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="25.4" y="1493" width="0.2" height="15.0" fill="rgb(225,95,48)" rx="2" ry="2" />
<text  x="28.44" y="1503.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="885.4" y="1925" width="0.8" height="15.0" fill="rgb(222,38,48)" rx="2" ry="2" />
<text  x="888.37" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="143.2" y="1669" width="0.2" height="15.0" fill="rgb(241,108,27)" rx="2" ry="2" />
<text  x="146.16" y="1679.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="179.1" y="2021" width="0.4" height="15.0" fill="rgb(215,162,7)" rx="2" ry="2" />
<text  x="182.06" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="276.5" y="1589" width="0.6" height="15.0" fill="rgb(251,79,26)" rx="2" ry="2" />
<text  x="279.52" y="1599.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (75 samples, 1.27%)</title><rect x="19.0" y="2021" width="15.1" height="15.0" fill="rgb(220,129,27)" rx="2" ry="2" />
<text  x="22.02" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="855.9" y="1877" width="0.2" height="15.0" fill="rgb(226,114,53)" rx="2" ry="2" />
<text  x="858.89" y="1887.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.02%)</title><rect x="742.6" y="1637" width="0.2" height="15.0" fill="rgb(248,96,37)" rx="2" ry="2" />
<text  x="745.59" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="965.4" y="1925" width="0.2" height="15.0" fill="rgb(236,173,47)" rx="2" ry="2" />
<text  x="968.39" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="569.3" y="1941" width="0.2" height="15.0" fill="rgb(205,108,34)" rx="2" ry="2" />
<text  x="572.32" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (6 samples, 0.10%)</title><rect x="864.9" y="1989" width="1.2" height="15.0" fill="rgb(238,154,32)" rx="2" ry="2" />
<text  x="867.92" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="1149.3" y="1893" width="0.2" height="15.0" fill="rgb(215,219,22)" rx="2" ry="2" />
<text  x="1152.29" y="1903.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1134.6" y="2053" width="0.5" height="15.0" fill="rgb(237,223,50)" rx="2" ry="2" />
<text  x="1137.65" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="507.3" y="1973" width="0.2" height="15.0" fill="rgb(236,39,13)" rx="2" ry="2" />
<text  x="510.35" y="1983.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="831.2" y="1701" width="0.4" height="15.0" fill="rgb(233,93,38)" rx="2" ry="2" />
<text  x="834.23" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="159.2" y="1957" width="0.4" height="15.0" fill="rgb(226,168,45)" rx="2" ry="2" />
<text  x="162.20" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="994.3" y="1637" width="0.2" height="15.0" fill="rgb(231,215,18)" rx="2" ry="2" />
<text  x="997.27" y="1647.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="477.7" y="1653" width="0.2" height="15.0" fill="rgb(214,15,19)" rx="2" ry="2" />
<text  x="480.67" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="544.0" y="1701" width="0.2" height="15.0" fill="rgb(207,177,16)" rx="2" ry="2" />
<text  x="547.05" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (4 samples, 0.07%)</title><rect x="845.9" y="1925" width="0.8" height="15.0" fill="rgb(229,153,10)" rx="2" ry="2" />
<text  x="848.87" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (23 samples, 0.39%)</title><rect x="893.4" y="2005" width="4.6" height="15.0" fill="rgb(233,216,17)" rx="2" ry="2" />
<text  x="896.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1074.9" y="1589" width="0.2" height="15.0" fill="rgb(212,48,5)" rx="2" ry="2" />
<text  x="1077.89" y="1599.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="207.5" y="1877" width="0.4" height="15.0" fill="rgb(215,194,10)" rx="2" ry="2" />
<text  x="210.54" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="149.2" y="1797" width="0.2" height="15.0" fill="rgb(228,152,34)" rx="2" ry="2" />
<text  x="152.18" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1093.9" y="1909" width="0.8" height="15.0" fill="rgb(231,3,43)" rx="2" ry="2" />
<text  x="1096.94" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="149.2" y="1733" width="0.2" height="15.0" fill="rgb(247,205,8)" rx="2" ry="2" />
<text  x="152.18" y="1743.5" ></text>
</g>
<g >
<title>netif_skb_features (6 samples, 0.10%)</title><rect x="805.8" y="1509" width="1.2" height="15.0" fill="rgb(215,89,5)" rx="2" ry="2" />
<text  x="808.76" y="1519.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="52.7" y="1909" width="0.6" height="15.0" fill="rgb(247,124,17)" rx="2" ry="2" />
<text  x="55.72" y="1919.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (4 samples, 0.07%)</title><rect x="307.8" y="1797" width="0.8" height="15.0" fill="rgb(232,207,31)" rx="2" ry="2" />
<text  x="310.81" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="493.9" y="1877" width="0.4" height="15.0" fill="rgb(235,164,32)" rx="2" ry="2" />
<text  x="496.91" y="1887.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="870.7" y="1989" width="0.2" height="15.0" fill="rgb(216,39,2)" rx="2" ry="2" />
<text  x="873.73" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="299.4" y="1669" width="0.6" height="15.0" fill="rgb(210,119,27)" rx="2" ry="2" />
<text  x="302.38" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="518.0" y="1989" width="0.2" height="15.0" fill="rgb(227,124,28)" rx="2" ry="2" />
<text  x="520.98" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="69.8" y="1733" width="0.2" height="15.0" fill="rgb(233,85,53)" rx="2" ry="2" />
<text  x="72.76" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::recv (9 samples, 0.15%)</title><rect x="50.1" y="1957" width="1.8" height="15.0" fill="rgb(219,110,47)" rx="2" ry="2" />
<text  x="53.11" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="243.2" y="1861" width="0.2" height="15.0" fill="rgb(213,97,30)" rx="2" ry="2" />
<text  x="246.23" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (26 samples, 0.44%)</title><rect x="82.4" y="1973" width="5.2" height="15.0" fill="rgb(219,157,53)" rx="2" ry="2" />
<text  x="85.40" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="143.2" y="1573" width="0.2" height="15.0" fill="rgb(217,95,42)" rx="2" ry="2" />
<text  x="146.16" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="625.3" y="1973" width="0.2" height="15.0" fill="rgb(219,206,6)" rx="2" ry="2" />
<text  x="628.27" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="236.8" y="1813" width="0.4" height="15.0" fill="rgb(225,117,43)" rx="2" ry="2" />
<text  x="239.82" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.9" y="1957" width="0.2" height="15.0" fill="rgb(234,1,22)" rx="2" ry="2" />
<text  x="577.93" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="475.5" y="1861" width="0.2" height="15.0" fill="rgb(211,201,18)" rx="2" ry="2" />
<text  x="478.46" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="113.9" y="85" width="0.2" height="15.0" fill="rgb(252,67,5)" rx="2" ry="2" />
<text  x="116.88" y="95.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (53 samples, 0.90%)</title><rect x="605.2" y="1989" width="10.6" height="15.0" fill="rgb(247,84,45)" rx="2" ry="2" />
<text  x="608.21" y="1999.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="207.9" y="1877" width="0.2" height="15.0" fill="rgb(206,39,38)" rx="2" ry="2" />
<text  x="210.94" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="678.0" y="1701" width="0.2" height="15.0" fill="rgb(220,152,52)" rx="2" ry="2" />
<text  x="681.01" y="1711.5" ></text>
</g>
<g >
<title>free_unref_page_commit (11 samples, 0.19%)</title><rect x="1080.7" y="1829" width="2.2" height="15.0" fill="rgb(249,160,51)" rx="2" ry="2" />
<text  x="1083.70" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="181.5" y="2021" width="0.2" height="15.0" fill="rgb(219,76,3)" rx="2" ry="2" />
<text  x="184.46" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="193.7" y="1989" width="0.2" height="15.0" fill="rgb(229,147,25)" rx="2" ry="2" />
<text  x="196.70" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.2" y="2021" width="0.2" height="15.0" fill="rgb(225,49,12)" rx="2" ry="2" />
<text  x="14.20" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1148.7" y="1957" width="0.2" height="15.0" fill="rgb(227,226,36)" rx="2" ry="2" />
<text  x="1151.69" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="732.6" y="1845" width="0.2" height="15.0" fill="rgb(215,18,5)" rx="2" ry="2" />
<text  x="735.56" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="850.1" y="1861" width="0.2" height="15.0" fill="rgb(215,105,16)" rx="2" ry="2" />
<text  x="853.08" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="210.9" y="1813" width="0.2" height="15.0" fill="rgb(239,3,52)" rx="2" ry="2" />
<text  x="213.94" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (5 samples, 0.08%)</title><rect x="26.6" y="1989" width="1.0" height="15.0" fill="rgb(230,73,23)" rx="2" ry="2" />
<text  x="29.65" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="707.9" y="1925" width="0.2" height="15.0" fill="rgb(210,58,22)" rx="2" ry="2" />
<text  x="710.89" y="1935.5" ></text>
</g>
<g >
<title>import_iovec (9 samples, 0.15%)</title><rect x="240.6" y="1925" width="1.8" height="15.0" fill="rgb(231,200,9)" rx="2" ry="2" />
<text  x="243.63" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="541.4" y="1829" width="0.2" height="15.0" fill="rgb(215,54,37)" rx="2" ry="2" />
<text  x="544.44" y="1839.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (3 samples, 0.05%)</title><rect x="516.2" y="1973" width="0.6" height="15.0" fill="rgb(245,73,18)" rx="2" ry="2" />
<text  x="519.17" y="1983.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="886.8" y="1845" width="0.2" height="15.0" fill="rgb(231,205,3)" rx="2" ry="2" />
<text  x="889.78" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="517" width="16.1" height="15.0" fill="rgb(216,102,0)" rx="2" ry="2" />
<text  x="101.44" y="527.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1148.3" y="1813" width="0.2" height="15.0" fill="rgb(227,55,27)" rx="2" ry="2" />
<text  x="1151.29" y="1823.5" ></text>
</g>
<g >
<title>jump_fcontext (11 samples, 0.19%)</title><rect x="988.1" y="2005" width="2.2" height="15.0" fill="rgb(205,128,37)" rx="2" ry="2" />
<text  x="991.05" y="2015.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1147.9" y="1957" width="0.2" height="15.0" fill="rgb(236,174,28)" rx="2" ry="2" />
<text  x="1150.89" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="583.2" y="1877" width="0.2" height="15.0" fill="rgb(220,46,37)" rx="2" ry="2" />
<text  x="586.15" y="1887.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(241,6,27)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="261.1" y="1797" width="0.2" height="15.0" fill="rgb(212,85,6)" rx="2" ry="2" />
<text  x="264.08" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="697.7" y="1717" width="0.2" height="15.0" fill="rgb(236,213,5)" rx="2" ry="2" />
<text  x="700.66" y="1727.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="311.2" y="1797" width="0.2" height="15.0" fill="rgb(249,33,19)" rx="2" ry="2" />
<text  x="314.22" y="1807.5" ></text>
</g>
<g >
<title>__fput (2 samples, 0.03%)</title><rect x="837.4" y="1829" width="0.4" height="15.0" fill="rgb(233,189,35)" rx="2" ry="2" />
<text  x="840.44" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1155.5" y="1749" width="0.2" height="15.0" fill="rgb(228,44,24)" rx="2" ry="2" />
<text  x="1158.51" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="990.5" y="1973" width="0.2" height="15.0" fill="rgb(210,98,7)" rx="2" ry="2" />
<text  x="993.46" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="405.5" y="1781" width="0.2" height="15.0" fill="rgb(209,204,42)" rx="2" ry="2" />
<text  x="408.47" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output2 (129 samples, 2.19%)</title><rect x="782.1" y="1605" width="25.9" height="15.0" fill="rgb(227,141,48)" rx="2" ry="2" />
<text  x="785.09" y="1615.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="381.2" y="1893" width="0.2" height="15.0" fill="rgb(253,42,16)" rx="2" ry="2" />
<text  x="384.21" y="1903.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1148.3" y="1701" width="0.2" height="15.0" fill="rgb(211,214,51)" rx="2" ry="2" />
<text  x="1151.29" y="1711.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="117.3" y="1797" width="0.2" height="15.0" fill="rgb(252,224,29)" rx="2" ry="2" />
<text  x="120.29" y="1807.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="271.5" y="1813" width="0.2" height="15.0" fill="rgb(216,79,43)" rx="2" ry="2" />
<text  x="274.51" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (1 samples, 0.02%)</title><rect x="901.0" y="2005" width="0.2" height="15.0" fill="rgb(251,12,29)" rx="2" ry="2" />
<text  x="904.02" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="741" width="16.3" height="15.0" fill="rgb(234,158,12)" rx="2" ry="2" />
<text  x="101.44" y="751.5" ></text>
</g>
<g >
<title>__wake_up_common (6 samples, 0.10%)</title><rect x="278.5" y="1445" width="1.2" height="15.0" fill="rgb(251,209,20)" rx="2" ry="2" />
<text  x="281.53" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="563.7" y="1861" width="0.4" height="15.0" fill="rgb(252,154,40)" rx="2" ry="2" />
<text  x="566.70" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="763.2" y="1717" width="0.2" height="15.0" fill="rgb(210,28,27)" rx="2" ry="2" />
<text  x="766.24" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1151.3" y="2005" width="0.2" height="15.0" fill="rgb(211,164,16)" rx="2" ry="2" />
<text  x="1154.30" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="850.1" y="1701" width="0.2" height="15.0" fill="rgb(215,35,39)" rx="2" ry="2" />
<text  x="853.08" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="678.0" y="1829" width="0.2" height="15.0" fill="rgb(248,195,32)" rx="2" ry="2" />
<text  x="681.01" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="916.3" y="1989" width="0.4" height="15.0" fill="rgb(215,20,25)" rx="2" ry="2" />
<text  x="919.26" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.3" y="1925" width="0.2" height="15.0" fill="rgb(207,120,32)" rx="2" ry="2" />
<text  x="65.34" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1083.3" y="1845" width="0.2" height="15.0" fill="rgb(253,18,39)" rx="2" ry="2" />
<text  x="1086.31" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="357.1" y="1925" width="0.4" height="15.0" fill="rgb(227,147,34)" rx="2" ry="2" />
<text  x="360.14" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="994.3" y="1893" width="0.2" height="15.0" fill="rgb(231,160,18)" rx="2" ry="2" />
<text  x="997.27" y="1903.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1074.9" y="1509" width="0.2" height="15.0" fill="rgb(217,192,1)" rx="2" ry="2" />
<text  x="1077.89" y="1519.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="69.8" y="1845" width="0.2" height="15.0" fill="rgb(247,5,0)" rx="2" ry="2" />
<text  x="72.76" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.10%)</title><rect x="278.5" y="1461" width="1.2" height="15.0" fill="rgb(238,24,54)" rx="2" ry="2" />
<text  x="281.53" y="1471.5" ></text>
</g>
<g >
<title>kfree_call_rcu (6 samples, 0.10%)</title><rect x="744.0" y="1669" width="1.2" height="15.0" fill="rgb(215,207,30)" rx="2" ry="2" />
<text  x="746.99" y="1679.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (6 samples, 0.10%)</title><rect x="85.0" y="1957" width="1.2" height="15.0" fill="rgb(247,60,53)" rx="2" ry="2" />
<text  x="88.00" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="624.5" y="2005" width="1.0" height="15.0" fill="rgb(207,216,41)" rx="2" ry="2" />
<text  x="627.47" y="2015.5" ></text>
</g>
<g >
<title>event_add@plt (1 samples, 0.02%)</title><rect x="212.3" y="1861" width="0.2" height="15.0" fill="rgb(209,207,23)" rx="2" ry="2" />
<text  x="215.35" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (26 samples, 0.44%)</title><rect x="981.0" y="1989" width="5.2" height="15.0" fill="rgb(236,180,11)" rx="2" ry="2" />
<text  x="984.03" y="1999.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="519.8" y="1989" width="0.4" height="15.0" fill="rgb(252,172,24)" rx="2" ry="2" />
<text  x="522.78" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="892.0" y="1877" width="0.2" height="15.0" fill="rgb(215,143,30)" rx="2" ry="2" />
<text  x="894.99" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (3 samples, 0.05%)</title><rect x="99.8" y="37" width="0.6" height="15.0" fill="rgb(211,196,9)" rx="2" ry="2" />
<text  x="102.84" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="374.6" y="1669" width="0.2" height="15.0" fill="rgb(216,23,37)" rx="2" ry="2" />
<text  x="377.59" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (74 samples, 1.26%)</title><rect x="665.2" y="1973" width="14.8" height="15.0" fill="rgb(243,217,50)" rx="2" ry="2" />
<text  x="668.18" y="1983.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="1091.3" y="1925" width="1.0" height="15.0" fill="rgb(224,0,20)" rx="2" ry="2" />
<text  x="1094.33" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (52 samples, 0.88%)</title><rect x="552.9" y="1957" width="10.4" height="15.0" fill="rgb(227,144,22)" rx="2" ry="2" />
<text  x="555.87" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="932.9" y="1637" width="0.2" height="15.0" fill="rgb(252,68,14)" rx="2" ry="2" />
<text  x="935.90" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="25.4" y="1861" width="0.2" height="15.0" fill="rgb(236,226,15)" rx="2" ry="2" />
<text  x="28.44" y="1871.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="696.1" y="1845" width="0.2" height="15.0" fill="rgb(215,61,15)" rx="2" ry="2" />
<text  x="699.06" y="1855.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="930.9" y="1877" width="0.2" height="15.0" fill="rgb(241,66,1)" rx="2" ry="2" />
<text  x="933.90" y="1887.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="676.0" y="1845" width="0.2" height="15.0" fill="rgb(245,134,51)" rx="2" ry="2" />
<text  x="679.01" y="1855.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="69.8" y="1461" width="0.2" height="15.0" fill="rgb(231,139,39)" rx="2" ry="2" />
<text  x="72.76" y="1471.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="579.7" y="1749" width="0.2" height="15.0" fill="rgb(215,135,9)" rx="2" ry="2" />
<text  x="582.75" y="1759.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="404.7" y="1973" width="0.4" height="15.0" fill="rgb(208,213,20)" rx="2" ry="2" />
<text  x="407.67" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="575.5" y="1813" width="0.2" height="15.0" fill="rgb(233,157,5)" rx="2" ry="2" />
<text  x="578.53" y="1823.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="649.5" y="1653" width="0.2" height="15.0" fill="rgb(215,152,18)" rx="2" ry="2" />
<text  x="652.53" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (10 samples, 0.17%)</title><rect x="788.1" y="1541" width="2.0" height="15.0" fill="rgb(228,0,29)" rx="2" ry="2" />
<text  x="791.11" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="677.8" y="1861" width="0.4" height="15.0" fill="rgb(253,159,8)" rx="2" ry="2" />
<text  x="680.81" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="477.7" y="1845" width="0.2" height="15.0" fill="rgb(219,197,20)" rx="2" ry="2" />
<text  x="480.67" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="405.5" y="1845" width="0.2" height="15.0" fill="rgb(231,62,12)" rx="2" ry="2" />
<text  x="408.47" y="1855.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1110.4" y="1477" width="0.2" height="15.0" fill="rgb(211,229,47)" rx="2" ry="2" />
<text  x="1113.38" y="1487.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="10.2" y="1893" width="0.2" height="15.0" fill="rgb(247,45,42)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="157.8" y="1973" width="0.2" height="15.0" fill="rgb(234,6,46)" rx="2" ry="2" />
<text  x="160.80" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="823.6" y="1685" width="0.2" height="15.0" fill="rgb(224,226,13)" rx="2" ry="2" />
<text  x="826.61" y="1695.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.05%)</title><rect x="393.6" y="1861" width="0.6" height="15.0" fill="rgb(230,8,15)" rx="2" ry="2" />
<text  x="396.64" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="649.5" y="1829" width="0.2" height="15.0" fill="rgb(248,182,9)" rx="2" ry="2" />
<text  x="652.53" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (13 samples, 0.22%)</title><rect x="277.3" y="1605" width="2.6" height="15.0" fill="rgb(243,146,35)" rx="2" ry="2" />
<text  x="280.32" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="38.7" y="1989" width="0.4" height="15.0" fill="rgb(239,44,53)" rx="2" ry="2" />
<text  x="41.68" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="772.5" y="1685" width="0.2" height="15.0" fill="rgb(212,11,15)" rx="2" ry="2" />
<text  x="775.47" y="1695.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="261.3" y="1829" width="0.2" height="15.0" fill="rgb(252,227,31)" rx="2" ry="2" />
<text  x="264.28" y="1839.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="279.1" y="1365" width="0.4" height="15.0" fill="rgb(228,223,43)" rx="2" ry="2" />
<text  x="282.13" y="1375.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="301.0" y="1605" width="0.2" height="15.0" fill="rgb(216,167,51)" rx="2" ry="2" />
<text  x="303.99" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="266.5" y="1765" width="0.2" height="15.0" fill="rgb(230,218,52)" rx="2" ry="2" />
<text  x="269.50" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1094.3" y="1845" width="0.4" height="15.0" fill="rgb(213,76,54)" rx="2" ry="2" />
<text  x="1097.34" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1128.4" y="1829" width="0.2" height="15.0" fill="rgb(205,215,44)" rx="2" ry="2" />
<text  x="1131.43" y="1839.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="696.1" y="1797" width="0.2" height="15.0" fill="rgb(244,42,53)" rx="2" ry="2" />
<text  x="699.06" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="326.9" y="2021" width="0.2" height="15.0" fill="rgb(222,98,5)" rx="2" ry="2" />
<text  x="329.86" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="568.7" y="2005" width="0.2" height="15.0" fill="rgb(252,103,41)" rx="2" ry="2" />
<text  x="571.72" y="2015.5" ></text>
</g>
<g >
<title>ipv4_mtu (9 samples, 0.15%)</title><rect x="822.0" y="1717" width="1.8" height="15.0" fill="rgb(244,64,41)" rx="2" ry="2" />
<text  x="825.00" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="261.1" y="1813" width="0.2" height="15.0" fill="rgb(211,69,0)" rx="2" ry="2" />
<text  x="264.08" y="1823.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="118.5" y="1941" width="0.2" height="15.0" fill="rgb(247,100,51)" rx="2" ry="2" />
<text  x="121.49" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="493.7" y="1893" width="0.2" height="15.0" fill="rgb(208,156,49)" rx="2" ry="2" />
<text  x="496.71" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="583.2" y="1893" width="0.2" height="15.0" fill="rgb(213,77,46)" rx="2" ry="2" />
<text  x="586.15" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="213.6" y="1861" width="1.2" height="15.0" fill="rgb(214,168,3)" rx="2" ry="2" />
<text  x="216.55" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="210.9" y="1429" width="0.2" height="15.0" fill="rgb(230,3,30)" rx="2" ry="2" />
<text  x="213.94" y="1439.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="12.8" y="1845" width="0.8" height="15.0" fill="rgb(238,70,19)" rx="2" ry="2" />
<text  x="15.81" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1091.5" y="1701" width="0.2" height="15.0" fill="rgb(250,120,3)" rx="2" ry="2" />
<text  x="1094.53" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (1 samples, 0.02%)</title><rect x="905.0" y="2037" width="0.2" height="15.0" fill="rgb(207,46,27)" rx="2" ry="2" />
<text  x="908.03" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1150.9" y="1973" width="0.2" height="15.0" fill="rgb(216,174,0)" rx="2" ry="2" />
<text  x="1153.89" y="1983.5" ></text>
</g>
<g >
<title>skb_free_head (25 samples, 0.42%)</title><rect x="1111.8" y="1461" width="5.0" height="15.0" fill="rgb(221,120,27)" rx="2" ry="2" />
<text  x="1114.79" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="640.9" y="1941" width="0.4" height="15.0" fill="rgb(208,57,16)" rx="2" ry="2" />
<text  x="643.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1155.5" y="1717" width="0.2" height="15.0" fill="rgb(235,146,31)" rx="2" ry="2" />
<text  x="1158.51" y="1727.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="333.1" y="2037" width="0.2" height="15.0" fill="rgb(232,143,22)" rx="2" ry="2" />
<text  x="336.08" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="536.4" y="1909" width="0.8" height="15.0" fill="rgb(235,115,11)" rx="2" ry="2" />
<text  x="539.43" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="535.6" y="1925" width="0.8" height="15.0" fill="rgb(245,15,30)" rx="2" ry="2" />
<text  x="538.63" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="987.7" y="1989" width="0.2" height="15.0" fill="rgb(206,20,0)" rx="2" ry="2" />
<text  x="990.65" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="246.4" y="1733" width="0.2" height="15.0" fill="rgb(215,154,50)" rx="2" ry="2" />
<text  x="249.44" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="709" width="16.1" height="15.0" fill="rgb(240,86,2)" rx="2" ry="2" />
<text  x="101.44" y="719.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="95.8" y="1877" width="0.2" height="15.0" fill="rgb(208,119,30)" rx="2" ry="2" />
<text  x="98.83" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="709.7" y="1973" width="0.2" height="15.0" fill="rgb(232,192,26)" rx="2" ry="2" />
<text  x="712.70" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="301.0" y="1749" width="0.2" height="15.0" fill="rgb(241,228,3)" rx="2" ry="2" />
<text  x="303.99" y="1759.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1178.4" y="1989" width="0.2" height="15.0" fill="rgb(238,186,25)" rx="2" ry="2" />
<text  x="1181.37" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (2 samples, 0.03%)</title><rect x="661.4" y="2037" width="0.4" height="15.0" fill="rgb(227,123,51)" rx="2" ry="2" />
<text  x="664.37" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="357" width="16.1" height="15.0" fill="rgb(228,1,6)" rx="2" ry="2" />
<text  x="101.44" y="367.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="240.0" y="1925" width="0.2" height="15.0" fill="rgb(231,167,4)" rx="2" ry="2" />
<text  x="243.02" y="1935.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="30.1" y="1957" width="0.2" height="15.0" fill="rgb(244,120,20)" rx="2" ry="2" />
<text  x="33.05" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="399.7" y="1589" width="0.2" height="15.0" fill="rgb(247,68,6)" rx="2" ry="2" />
<text  x="402.66" y="1599.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="402.1" y="1925" width="0.2" height="15.0" fill="rgb(234,21,43)" rx="2" ry="2" />
<text  x="405.06" y="1935.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="269.9" y="1813" width="0.2" height="15.0" fill="rgb(234,141,20)" rx="2" ry="2" />
<text  x="272.90" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="1093.9" y="1893" width="0.4" height="15.0" fill="rgb(215,141,41)" rx="2" ry="2" />
<text  x="1096.94" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="654.3" y="1893" width="0.2" height="15.0" fill="rgb(209,155,11)" rx="2" ry="2" />
<text  x="657.35" y="1903.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1120.4" y="1909" width="0.4" height="15.0" fill="rgb(222,115,34)" rx="2" ry="2" />
<text  x="1123.41" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (35 samples, 0.59%)</title><rect x="209.5" y="1893" width="7.1" height="15.0" fill="rgb(246,36,22)" rx="2" ry="2" />
<text  x="212.54" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="522.8" y="1957" width="0.2" height="15.0" fill="rgb(234,226,13)" rx="2" ry="2" />
<text  x="525.79" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (12 samples, 0.20%)</title><rect x="710.9" y="1989" width="2.4" height="15.0" fill="rgb(212,117,44)" rx="2" ry="2" />
<text  x="713.90" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="510.8" y="1941" width="0.2" height="15.0" fill="rgb(234,202,9)" rx="2" ry="2" />
<text  x="513.76" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="405.5" y="1685" width="0.2" height="15.0" fill="rgb(238,110,1)" rx="2" ry="2" />
<text  x="408.47" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="990.5" y="1717" width="0.2" height="15.0" fill="rgb(218,98,47)" rx="2" ry="2" />
<text  x="993.46" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="221.8" y="1941" width="0.2" height="15.0" fill="rgb(227,182,52)" rx="2" ry="2" />
<text  x="224.77" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="542.2" y="1861" width="0.2" height="15.0" fill="rgb(227,168,35)" rx="2" ry="2" />
<text  x="545.24" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1093.7" y="1733" width="0.2" height="15.0" fill="rgb(230,55,4)" rx="2" ry="2" />
<text  x="1096.74" y="1743.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="187.1" y="2037" width="0.4" height="15.0" fill="rgb(220,80,18)" rx="2" ry="2" />
<text  x="190.08" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="1181.0" y="2037" width="0.8" height="15.0" fill="rgb(218,74,20)" rx="2" ry="2" />
<text  x="1183.98" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1074.9" y="1653" width="0.2" height="15.0" fill="rgb(220,225,33)" rx="2" ry="2" />
<text  x="1077.89" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="475.5" y="1877" width="0.2" height="15.0" fill="rgb(230,187,18)" rx="2" ry="2" />
<text  x="478.46" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="519.4" y="1957" width="0.2" height="15.0" fill="rgb(215,35,3)" rx="2" ry="2" />
<text  x="522.38" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1128.4" y="1861" width="0.2" height="15.0" fill="rgb(213,205,53)" rx="2" ry="2" />
<text  x="1131.43" y="1871.5" ></text>
</g>
<g >
<title>lock_sock_nested (12 samples, 0.20%)</title><rect x="369.4" y="1941" width="2.4" height="15.0" fill="rgb(216,186,14)" rx="2" ry="2" />
<text  x="372.37" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (4 samples, 0.07%)</title><rect x="572.3" y="2005" width="0.8" height="15.0" fill="rgb(212,62,4)" rx="2" ry="2" />
<text  x="575.32" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="150.4" y="1941" width="0.2" height="15.0" fill="rgb(215,221,38)" rx="2" ry="2" />
<text  x="153.38" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (3 samples, 0.05%)</title><rect x="171.0" y="1989" width="0.6" height="15.0" fill="rgb(235,85,44)" rx="2" ry="2" />
<text  x="174.04" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="52.7" y="1877" width="0.6" height="15.0" fill="rgb(252,188,31)" rx="2" ry="2" />
<text  x="55.72" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="847.9" y="1909" width="0.8" height="15.0" fill="rgb(228,79,31)" rx="2" ry="2" />
<text  x="850.87" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1074.9" y="1557" width="0.2" height="15.0" fill="rgb(216,213,20)" rx="2" ry="2" />
<text  x="1077.89" y="1567.5" ></text>
</g>
<g >
<title>page_frag_free (25 samples, 0.42%)</title><rect x="1078.5" y="1861" width="5.0" height="15.0" fill="rgb(239,224,38)" rx="2" ry="2" />
<text  x="1081.50" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="415.7" y="2005" width="0.2" height="15.0" fill="rgb(225,185,50)" rx="2" ry="2" />
<text  x="418.70" y="2015.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="148.4" y="1829" width="1.0" height="15.0" fill="rgb(253,97,33)" rx="2" ry="2" />
<text  x="151.38" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="583.2" y="1701" width="0.2" height="15.0" fill="rgb(226,97,11)" rx="2" ry="2" />
<text  x="586.15" y="1711.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (2 samples, 0.03%)</title><rect x="692.3" y="1909" width="0.4" height="15.0" fill="rgb(233,188,48)" rx="2" ry="2" />
<text  x="695.25" y="1919.5" ></text>
</g>
<g >
<title>fd_install (1 samples, 0.02%)</title><rect x="404.3" y="1973" width="0.2" height="15.0" fill="rgb(215,139,42)" rx="2" ry="2" />
<text  x="407.27" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="544.0" y="1893" width="0.2" height="15.0" fill="rgb(238,62,15)" rx="2" ry="2" />
<text  x="547.05" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (54 samples, 0.92%)</title><rect x="163.4" y="2021" width="10.8" height="15.0" fill="rgb(222,28,53)" rx="2" ry="2" />
<text  x="166.42" y="2031.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (2 samples, 0.03%)</title><rect x="964.0" y="2037" width="0.4" height="15.0" fill="rgb(228,58,28)" rx="2" ry="2" />
<text  x="966.99" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="140.8" y="1893" width="0.2" height="15.0" fill="rgb(236,5,43)" rx="2" ry="2" />
<text  x="143.75" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="735.2" y="1781" width="0.2" height="15.0" fill="rgb(220,174,5)" rx="2" ry="2" />
<text  x="738.17" y="1791.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="759.6" y="1733" width="0.2" height="15.0" fill="rgb(253,116,18)" rx="2" ry="2" />
<text  x="762.63" y="1743.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="912.2" y="2005" width="0.2" height="15.0" fill="rgb(221,5,8)" rx="2" ry="2" />
<text  x="915.25" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="30.3" y="1765" width="0.2" height="15.0" fill="rgb(243,210,39)" rx="2" ry="2" />
<text  x="33.25" y="1775.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="72.4" y="1957" width="0.4" height="15.0" fill="rgb(233,24,4)" rx="2" ry="2" />
<text  x="75.37" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="865.7" y="1973" width="0.4" height="15.0" fill="rgb(207,132,16)" rx="2" ry="2" />
<text  x="868.72" y="1983.5" ></text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.03%)</title><rect x="1137.3" y="2053" width="0.4" height="15.0" fill="rgb(248,107,39)" rx="2" ry="2" />
<text  x="1140.26" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1140.5" y="1781" width="0.2" height="15.0" fill="rgb(241,58,16)" rx="2" ry="2" />
<text  x="1143.47" y="1791.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="676.6" y="1813" width="0.4" height="15.0" fill="rgb(212,146,28)" rx="2" ry="2" />
<text  x="679.61" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="932.9" y="1685" width="0.2" height="15.0" fill="rgb(236,145,11)" rx="2" ry="2" />
<text  x="935.90" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="990.1" y="1957" width="0.2" height="15.0" fill="rgb(221,202,46)" rx="2" ry="2" />
<text  x="993.06" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1091.5" y="1861" width="0.2" height="15.0" fill="rgb(240,53,10)" rx="2" ry="2" />
<text  x="1094.53" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1153.3" y="2053" width="0.2" height="15.0" fill="rgb(224,40,10)" rx="2" ry="2" />
<text  x="1156.30" y="2063.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="808.0" y="1605" width="0.4" height="15.0" fill="rgb(247,13,36)" rx="2" ry="2" />
<text  x="810.96" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="575.1" y="2005" width="0.6" height="15.0" fill="rgb(254,209,54)" rx="2" ry="2" />
<text  x="578.13" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="315.4" y="1749" width="0.2" height="15.0" fill="rgb(242,197,15)" rx="2" ry="2" />
<text  x="318.43" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="150.4" y="1893" width="0.2" height="15.0" fill="rgb(208,37,33)" rx="2" ry="2" />
<text  x="153.38" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="624.7" y="1957" width="0.4" height="15.0" fill="rgb(253,85,10)" rx="2" ry="2" />
<text  x="627.67" y="1967.5" ></text>
</g>
<g >
<title>fcntl@plt (1 samples, 0.02%)</title><rect x="567.5" y="1989" width="0.2" height="15.0" fill="rgb(225,201,8)" rx="2" ry="2" />
<text  x="570.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1205" width="16.3" height="15.0" fill="rgb(208,131,34)" rx="2" ry="2" />
<text  x="101.44" y="1215.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (3 samples, 0.05%)</title><rect x="757.2" y="1749" width="0.6" height="15.0" fill="rgb(246,212,39)" rx="2" ry="2" />
<text  x="760.23" y="1759.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="363.6" y="1621" width="0.2" height="15.0" fill="rgb(241,16,0)" rx="2" ry="2" />
<text  x="366.56" y="1631.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="399.7" y="1605" width="0.2" height="15.0" fill="rgb(206,125,12)" rx="2" ry="2" />
<text  x="402.66" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="546.5" y="1989" width="0.4" height="15.0" fill="rgb(248,108,21)" rx="2" ry="2" />
<text  x="549.45" y="1999.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="524.4" y="1861" width="0.2" height="15.0" fill="rgb(234,56,39)" rx="2" ry="2" />
<text  x="527.39" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="697.7" y="1653" width="0.2" height="15.0" fill="rgb(240,34,8)" rx="2" ry="2" />
<text  x="700.66" y="1663.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1120.4" y="1877" width="0.4" height="15.0" fill="rgb(236,90,44)" rx="2" ry="2" />
<text  x="1123.41" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="901" width="16.3" height="15.0" fill="rgb(245,9,46)" rx="2" ry="2" />
<text  x="101.44" y="911.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="691.2" y="1893" width="0.2" height="15.0" fill="rgb(207,154,9)" rx="2" ry="2" />
<text  x="694.25" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="583.2" y="1909" width="0.2" height="15.0" fill="rgb(239,101,33)" rx="2" ry="2" />
<text  x="586.15" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="661.2" y="2037" width="0.2" height="15.0" fill="rgb(212,21,6)" rx="2" ry="2" />
<text  x="664.17" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="524.2" y="1845" width="0.2" height="15.0" fill="rgb(231,68,51)" rx="2" ry="2" />
<text  x="527.19" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="150.8" y="2005" width="0.4" height="15.0" fill="rgb(232,190,12)" rx="2" ry="2" />
<text  x="153.78" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="892.8" y="1973" width="0.2" height="15.0" fill="rgb(228,10,22)" rx="2" ry="2" />
<text  x="895.79" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (2 samples, 0.03%)</title><rect x="846.3" y="1893" width="0.4" height="15.0" fill="rgb(244,229,31)" rx="2" ry="2" />
<text  x="849.27" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.14%)</title><rect x="818.6" y="1589" width="1.6" height="15.0" fill="rgb(237,172,41)" rx="2" ry="2" />
<text  x="821.59" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (8 samples, 0.14%)</title><rect x="983.0" y="1909" width="1.6" height="15.0" fill="rgb(229,121,47)" rx="2" ry="2" />
<text  x="986.04" y="1919.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="666.6" y="1909" width="0.8" height="15.0" fill="rgb(235,123,40)" rx="2" ry="2" />
<text  x="669.58" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.1" y="1781" width="0.2" height="15.0" fill="rgb(229,211,20)" rx="2" ry="2" />
<text  x="844.05" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="600.8" y="1893" width="0.2" height="15.0" fill="rgb(239,196,11)" rx="2" ry="2" />
<text  x="603.80" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="700.1" y="1973" width="3.0" height="15.0" fill="rgb(211,77,35)" rx="2" ry="2" />
<text  x="703.07" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="622.5" y="2005" width="0.2" height="15.0" fill="rgb(213,124,21)" rx="2" ry="2" />
<text  x="625.46" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="642.3" y="1925" width="1.0" height="15.0" fill="rgb(226,0,49)" rx="2" ry="2" />
<text  x="645.31" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (23 samples, 0.39%)</title><rect x="952.4" y="2037" width="4.6" height="15.0" fill="rgb(234,43,41)" rx="2" ry="2" />
<text  x="955.36" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.6" y="1925" width="0.2" height="15.0" fill="rgb(228,49,44)" rx="2" ry="2" />
<text  x="77.58" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="377.8" y="1941" width="0.2" height="15.0" fill="rgb(227,1,26)" rx="2" ry="2" />
<text  x="380.80" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.56%)</title><rect x="98.2" y="1781" width="18.5" height="15.0" fill="rgb(238,76,29)" rx="2" ry="2" />
<text  x="101.24" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="997.1" y="1957" width="0.2" height="15.0" fill="rgb(235,7,37)" rx="2" ry="2" />
<text  x="1000.08" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="757.8" y="1573" width="0.2" height="15.0" fill="rgb(216,77,32)" rx="2" ry="2" />
<text  x="760.83" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="70.0" y="1925" width="0.2" height="15.0" fill="rgb(213,117,7)" rx="2" ry="2" />
<text  x="72.96" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="917" width="16.3" height="15.0" fill="rgb(217,16,25)" rx="2" ry="2" />
<text  x="101.44" y="927.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="478.3" y="1877" width="0.6" height="15.0" fill="rgb(237,158,24)" rx="2" ry="2" />
<text  x="481.27" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="30.3" y="1797" width="0.2" height="15.0" fill="rgb(254,95,3)" rx="2" ry="2" />
<text  x="33.25" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="963.2" y="2005" width="0.2" height="15.0" fill="rgb(224,119,16)" rx="2" ry="2" />
<text  x="966.18" y="2015.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="804.8" y="1525" width="0.2" height="15.0" fill="rgb(221,218,48)" rx="2" ry="2" />
<text  x="807.76" y="1535.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="550.9" y="1973" width="0.4" height="15.0" fill="rgb(238,62,13)" rx="2" ry="2" />
<text  x="553.87" y="1983.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="157.6" y="1989" width="0.2" height="15.0" fill="rgb(206,78,38)" rx="2" ry="2" />
<text  x="160.60" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="600.8" y="1765" width="0.2" height="15.0" fill="rgb(217,222,39)" rx="2" ry="2" />
<text  x="603.80" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="851.5" y="1861" width="0.2" height="15.0" fill="rgb(230,90,54)" rx="2" ry="2" />
<text  x="854.48" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="654.3" y="1861" width="0.2" height="15.0" fill="rgb(219,41,21)" rx="2" ry="2" />
<text  x="657.35" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="133.1" y="1909" width="0.2" height="15.0" fill="rgb(206,0,24)" rx="2" ry="2" />
<text  x="136.13" y="1919.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="960.6" y="2021" width="0.4" height="15.0" fill="rgb(222,125,43)" rx="2" ry="2" />
<text  x="963.58" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="166.8" y="1973" width="0.2" height="15.0" fill="rgb(207,185,3)" rx="2" ry="2" />
<text  x="169.83" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1155.5" y="1941" width="0.2" height="15.0" fill="rgb(221,124,8)" rx="2" ry="2" />
<text  x="1158.51" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_active_ (6 samples, 0.10%)</title><rect x="1139.5" y="2053" width="1.2" height="15.0" fill="rgb(214,92,41)" rx="2" ry="2" />
<text  x="1142.46" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="565" width="16.1" height="15.0" fill="rgb(215,215,27)" rx="2" ry="2" />
<text  x="101.44" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.6" y="1877" width="0.2" height="15.0" fill="rgb(212,132,3)" rx="2" ry="2" />
<text  x="77.58" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1164.5" y="1797" width="0.2" height="15.0" fill="rgb(248,205,29)" rx="2" ry="2" />
<text  x="1167.53" y="1807.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (4 samples, 0.07%)</title><rect x="577.9" y="1989" width="0.8" height="15.0" fill="rgb(211,215,26)" rx="2" ry="2" />
<text  x="580.94" y="1999.5" ></text>
</g>
<g >
<title>sys_recvfrom (396 samples, 6.73%)</title><rect x="1049.8" y="2005" width="79.4" height="15.0" fill="rgb(254,74,26)" rx="2" ry="2" />
<text  x="1052.82" y="2015.5" >sys_recvf..</text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="28.9" y="1941" width="0.2" height="15.0" fill="rgb(246,19,21)" rx="2" ry="2" />
<text  x="31.85" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="160.0" y="1973" width="0.4" height="15.0" fill="rgb(230,160,17)" rx="2" ry="2" />
<text  x="163.01" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="246.4" y="1605" width="0.2" height="15.0" fill="rgb(233,188,29)" rx="2" ry="2" />
<text  x="249.44" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (3 samples, 0.05%)</title><rect x="915.5" y="2037" width="0.6" height="15.0" fill="rgb(206,136,28)" rx="2" ry="2" />
<text  x="918.46" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="315.4" y="1573" width="0.2" height="15.0" fill="rgb(230,77,29)" rx="2" ry="2" />
<text  x="318.43" y="1583.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="750.8" y="1781" width="0.2" height="15.0" fill="rgb(252,60,31)" rx="2" ry="2" />
<text  x="753.81" y="1791.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::bitsPerBlock (1 samples, 0.02%)</title><rect x="516.0" y="1941" width="0.2" height="15.0" fill="rgb(231,48,43)" rx="2" ry="2" />
<text  x="518.97" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (6 samples, 0.10%)</title><rect x="891.0" y="1941" width="1.2" height="15.0" fill="rgb(240,17,13)" rx="2" ry="2" />
<text  x="893.99" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="69.8" y="1813" width="0.2" height="15.0" fill="rgb(212,130,40)" rx="2" ry="2" />
<text  x="72.76" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="699.9" y="1765" width="0.2" height="15.0" fill="rgb(217,148,28)" rx="2" ry="2" />
<text  x="702.87" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1181.8" y="1973" width="0.2" height="15.0" fill="rgb(223,135,48)" rx="2" ry="2" />
<text  x="1184.78" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="541.4" y="1685" width="0.2" height="15.0" fill="rgb(214,13,5)" rx="2" ry="2" />
<text  x="544.44" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="494.1" y="1653" width="0.2" height="15.0" fill="rgb(240,216,33)" rx="2" ry="2" />
<text  x="497.11" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="534.2" y="1973" width="0.2" height="15.0" fill="rgb(241,135,22)" rx="2" ry="2" />
<text  x="537.22" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="246.0" y="1861" width="0.6" height="15.0" fill="rgb(210,47,30)" rx="2" ry="2" />
<text  x="249.04" y="1871.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="990.1" y="1893" width="0.2" height="15.0" fill="rgb(220,17,0)" rx="2" ry="2" />
<text  x="993.06" y="1903.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="966.6" y="2037" width="0.2" height="15.0" fill="rgb(249,72,43)" rx="2" ry="2" />
<text  x="969.59" y="2047.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.6" y="1989" width="0.8" height="15.0" fill="rgb(206,111,44)" rx="2" ry="2" />
<text  x="14.60" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="893.0" y="1957" width="0.2" height="15.0" fill="rgb(218,168,53)" rx="2" ry="2" />
<text  x="895.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="725" width="16.1" height="15.0" fill="rgb(240,93,44)" rx="2" ry="2" />
<text  x="101.44" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1083.3" y="1557" width="0.2" height="15.0" fill="rgb(251,98,41)" rx="2" ry="2" />
<text  x="1086.31" y="1567.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.1" y="1957" width="0.4" height="15.0" fill="rgb(239,132,26)" rx="2" ry="2" />
<text  x="576.13" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="374.4" y="1797" width="0.4" height="15.0" fill="rgb(223,27,32)" rx="2" ry="2" />
<text  x="377.39" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="210.9" y="1461" width="0.2" height="15.0" fill="rgb(237,123,53)" rx="2" ry="2" />
<text  x="213.94" y="1471.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="148.6" y="1749" width="0.6" height="15.0" fill="rgb(207,109,21)" rx="2" ry="2" />
<text  x="151.58" y="1759.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (1 samples, 0.02%)</title><rect x="690.0" y="1941" width="0.2" height="15.0" fill="rgb(233,161,47)" rx="2" ry="2" />
<text  x="693.04" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="405.5" y="1733" width="0.2" height="15.0" fill="rgb(225,90,2)" rx="2" ry="2" />
<text  x="408.47" y="1743.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17 samples, 0.29%)</title><rect x="383.4" y="1893" width="3.4" height="15.0" fill="rgb(229,36,52)" rx="2" ry="2" />
<text  x="386.41" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="661.4" y="2005" width="0.4" height="15.0" fill="rgb(241,153,42)" rx="2" ry="2" />
<text  x="664.37" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="699.9" y="1813" width="0.2" height="15.0" fill="rgb(219,27,23)" rx="2" ry="2" />
<text  x="702.87" y="1823.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.02%)</title><rect x="114.3" y="37" width="0.2" height="15.0" fill="rgb(223,219,2)" rx="2" ry="2" />
<text  x="117.28" y="47.5" ></text>
</g>
<g >
<title>skb_free_head (26 samples, 0.44%)</title><rect x="1078.3" y="1877" width="5.2" height="15.0" fill="rgb(222,79,51)" rx="2" ry="2" />
<text  x="1081.30" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1140.5" y="1765" width="0.2" height="15.0" fill="rgb(215,153,18)" rx="2" ry="2" />
<text  x="1143.47" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1150.9" y="1957" width="0.2" height="15.0" fill="rgb(228,20,1)" rx="2" ry="2" />
<text  x="1153.89" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="386.4" y="1877" width="0.2" height="15.0" fill="rgb(246,13,47)" rx="2" ry="2" />
<text  x="389.42" y="1887.5" ></text>
</g>
<g >
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="812.4" y="1669" width="0.6" height="15.0" fill="rgb(210,34,13)" rx="2" ry="2" />
<text  x="815.38" y="1679.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="712.5" y="1797" width="0.2" height="15.0" fill="rgb(210,151,12)" rx="2" ry="2" />
<text  x="715.51" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="524.2" y="1829" width="0.2" height="15.0" fill="rgb(211,49,31)" rx="2" ry="2" />
<text  x="527.19" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.50%)</title><rect x="98.4" y="1717" width="17.7" height="15.0" fill="rgb(248,65,17)" rx="2" ry="2" />
<text  x="101.44" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="649.5" y="1781" width="0.2" height="15.0" fill="rgb(248,74,1)" rx="2" ry="2" />
<text  x="652.53" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="426.7" y="1909" width="0.2" height="15.0" fill="rgb(241,17,24)" rx="2" ry="2" />
<text  x="429.73" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="618.5" y="1845" width="0.8" height="15.0" fill="rgb(222,200,45)" rx="2" ry="2" />
<text  x="621.45" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="963.8" y="1973" width="0.2" height="15.0" fill="rgb(222,126,31)" rx="2" ry="2" />
<text  x="966.79" y="1983.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(215,188,33)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="277.7" y="1541" width="0.2" height="15.0" fill="rgb(253,144,54)" rx="2" ry="2" />
<text  x="280.73" y="1551.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (8 samples, 0.14%)</title><rect x="215.0" y="1877" width="1.6" height="15.0" fill="rgb(243,3,19)" rx="2" ry="2" />
<text  x="217.96" y="1887.5" ></text>
</g>
<g >
<title>fput (4 samples, 0.07%)</title><rect x="470.6" y="1973" width="0.9" height="15.0" fill="rgb(216,162,16)" rx="2" ry="2" />
<text  x="473.65" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="405.5" y="1893" width="0.2" height="15.0" fill="rgb(205,65,15)" rx="2" ry="2" />
<text  x="408.47" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::fibers::LoopController*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="522.8" y="1909" width="0.2" height="15.0" fill="rgb(234,8,23)" rx="2" ry="2" />
<text  x="525.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="69.8" y="1541" width="0.2" height="15.0" fill="rgb(237,58,40)" rx="2" ry="2" />
<text  x="72.76" y="1551.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="614.2" y="1701" width="0.8" height="15.0" fill="rgb(252,128,22)" rx="2" ry="2" />
<text  x="617.24" y="1711.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="391.0" y="1605" width="0.2" height="15.0" fill="rgb(252,1,50)" rx="2" ry="2" />
<text  x="394.03" y="1615.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (3 samples, 0.05%)</title><rect x="627.1" y="2005" width="0.6" height="15.0" fill="rgb(233,13,53)" rx="2" ry="2" />
<text  x="630.07" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="923.5" y="1925" width="0.2" height="15.0" fill="rgb(243,125,23)" rx="2" ry="2" />
<text  x="926.48" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="374.4" y="1845" width="0.4" height="15.0" fill="rgb(213,78,27)" rx="2" ry="2" />
<text  x="377.39" y="1855.5" ></text>
</g>
<g >
<title>__d_alloc (18 samples, 0.31%)</title><rect x="397.3" y="1925" width="3.6" height="15.0" fill="rgb(252,71,52)" rx="2" ry="2" />
<text  x="400.25" y="1935.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="734.0" y="1797" width="0.2" height="15.0" fill="rgb(242,181,16)" rx="2" ry="2" />
<text  x="736.96" y="1807.5" ></text>
</g>
<g >
<title>__memchr_avx2 (8 samples, 0.14%)</title><rect x="331.1" y="2037" width="1.6" height="15.0" fill="rgb(217,13,36)" rx="2" ry="2" />
<text  x="334.07" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="193.7" y="2021" width="0.2" height="15.0" fill="rgb(219,139,20)" rx="2" ry="2" />
<text  x="196.70" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="477.7" y="1893" width="0.2" height="15.0" fill="rgb(209,204,6)" rx="2" ry="2" />
<text  x="480.67" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="623.9" y="1973" width="0.4" height="15.0" fill="rgb(232,8,54)" rx="2" ry="2" />
<text  x="626.86" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="237.0" y="1781" width="0.2" height="15.0" fill="rgb(235,153,11)" rx="2" ry="2" />
<text  x="240.02" y="1791.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1164.5" y="1461" width="0.2" height="15.0" fill="rgb(244,206,17)" rx="2" ry="2" />
<text  x="1167.53" y="1471.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (6 samples, 0.10%)</title><rect x="1143.5" y="2021" width="1.2" height="15.0" fill="rgb(249,117,23)" rx="2" ry="2" />
<text  x="1146.47" y="2031.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (14 samples, 0.24%)</title><rect x="257.5" y="1829" width="2.8" height="15.0" fill="rgb(250,213,13)" rx="2" ry="2" />
<text  x="260.47" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (4 samples, 0.07%)</title><rect x="548.7" y="1957" width="0.8" height="15.0" fill="rgb(221,225,49)" rx="2" ry="2" />
<text  x="551.66" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="306.4" y="1589" width="0.2" height="15.0" fill="rgb(225,225,24)" rx="2" ry="2" />
<text  x="309.40" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="301.0" y="1621" width="0.2" height="15.0" fill="rgb(208,63,30)" rx="2" ry="2" />
<text  x="303.99" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="563.1" y="1893" width="0.2" height="15.0" fill="rgb(218,39,42)" rx="2" ry="2" />
<text  x="566.10" y="1903.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="399.1" y="1893" width="0.2" height="15.0" fill="rgb(247,69,44)" rx="2" ry="2" />
<text  x="402.06" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="363.8" y="1749" width="0.2" height="15.0" fill="rgb(215,47,35)" rx="2" ry="2" />
<text  x="366.76" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="69.8" y="1765" width="0.2" height="15.0" fill="rgb(223,63,22)" rx="2" ry="2" />
<text  x="72.76" y="1775.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="252.1" y="1861" width="0.2" height="15.0" fill="rgb(243,32,4)" rx="2" ry="2" />
<text  x="255.06" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="846.7" y="1925" width="0.4" height="15.0" fill="rgb(224,106,11)" rx="2" ry="2" />
<text  x="849.67" y="1935.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1083.3" y="1605" width="0.2" height="15.0" fill="rgb(241,25,21)" rx="2" ry="2" />
<text  x="1086.31" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="916.3" y="2005" width="1.0" height="15.0" fill="rgb(224,83,52)" rx="2" ry="2" />
<text  x="919.26" y="2015.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (2 samples, 0.03%)</title><rect x="748.8" y="1701" width="0.4" height="15.0" fill="rgb(219,183,1)" rx="2" ry="2" />
<text  x="751.80" y="1711.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="738.4" y="1701" width="0.2" height="15.0" fill="rgb(237,198,39)" rx="2" ry="2" />
<text  x="741.38" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (14 samples, 0.24%)</title><rect x="65.4" y="1957" width="2.8" height="15.0" fill="rgb(234,199,10)" rx="2" ry="2" />
<text  x="68.35" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="901.4" y="1989" width="0.2" height="15.0" fill="rgb(237,67,54)" rx="2" ry="2" />
<text  x="904.42" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (91 samples, 1.55%)</title><rect x="873.9" y="1973" width="18.3" height="15.0" fill="rgb(220,201,36)" rx="2" ry="2" />
<text  x="876.94" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="849.9" y="1893" width="0.2" height="15.0" fill="rgb(212,161,17)" rx="2" ry="2" />
<text  x="852.88" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="645" width="16.1" height="15.0" fill="rgb(209,28,1)" rx="2" ry="2" />
<text  x="101.44" y="655.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="952.4" y="2021" width="4.6" height="15.0" fill="rgb(222,39,41)" rx="2" ry="2" />
<text  x="955.36" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="301.0" y="1733" width="0.2" height="15.0" fill="rgb(234,13,11)" rx="2" ry="2" />
<text  x="303.99" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="691.2" y="1813" width="0.2" height="15.0" fill="rgb(228,89,35)" rx="2" ry="2" />
<text  x="694.25" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.72%)</title><rect x="98.2" y="1925" width="20.3" height="15.0" fill="rgb(213,146,10)" rx="2" ry="2" />
<text  x="101.24" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="153.8" y="1989" width="0.2" height="15.0" fill="rgb(215,170,42)" rx="2" ry="2" />
<text  x="156.79" y="1999.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (3 samples, 0.05%)</title><rect x="1003.9" y="2005" width="0.6" height="15.0" fill="rgb(230,197,47)" rx="2" ry="2" />
<text  x="1006.90" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (32 samples, 0.54%)</title><rect x="927.9" y="1909" width="6.4" height="15.0" fill="rgb(223,212,54)" rx="2" ry="2" />
<text  x="930.89" y="1919.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="978.8" y="1925" width="2.0" height="15.0" fill="rgb(210,221,48)" rx="2" ry="2" />
<text  x="981.83" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (30 samples, 0.51%)</title><rect x="436.2" y="1957" width="6.0" height="15.0" fill="rgb(231,15,47)" rx="2" ry="2" />
<text  x="439.16" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="112.3" y="37" width="0.6" height="15.0" fill="rgb(236,62,0)" rx="2" ry="2" />
<text  x="115.28" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="707.7" y="1957" width="0.2" height="15.0" fill="rgb(232,133,17)" rx="2" ry="2" />
<text  x="710.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (964 samples, 16.38%)</title><rect x="707.7" y="2021" width="193.3" height="15.0" fill="rgb(205,191,48)" rx="2" ry="2" />
<text  x="710.69" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.8" y="1957" width="0.2" height="15.0" fill="rgb(231,166,23)" rx="2" ry="2" />
<text  x="163.81" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.1" y="1685" width="0.2" height="15.0" fill="rgb(211,125,12)" rx="2" ry="2" />
<text  x="844.05" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="214.6" y="1765" width="0.2" height="15.0" fill="rgb(237,131,38)" rx="2" ry="2" />
<text  x="217.55" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="541.8" y="1877" width="0.6" height="15.0" fill="rgb(253,100,3)" rx="2" ry="2" />
<text  x="544.84" y="1887.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (15 samples, 0.25%)</title><rect x="257.3" y="1845" width="3.0" height="15.0" fill="rgb(233,105,1)" rx="2" ry="2" />
<text  x="260.27" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="918.5" y="1861" width="0.2" height="15.0" fill="rgb(212,15,39)" rx="2" ry="2" />
<text  x="921.46" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="214.2" y="1845" width="0.6" height="15.0" fill="rgb(243,95,16)" rx="2" ry="2" />
<text  x="217.15" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (7 samples, 0.12%)</title><rect x="77.4" y="1957" width="1.4" height="15.0" fill="rgb(252,102,48)" rx="2" ry="2" />
<text  x="80.38" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="444.0" y="1973" width="0.4" height="15.0" fill="rgb(217,167,33)" rx="2" ry="2" />
<text  x="446.98" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="300.0" y="1701" width="0.4" height="15.0" fill="rgb(239,24,43)" rx="2" ry="2" />
<text  x="302.99" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1142.7" y="1989" width="0.2" height="15.0" fill="rgb(247,82,50)" rx="2" ry="2" />
<text  x="1145.67" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.05%)</title><rect x="1183.2" y="1973" width="0.6" height="15.0" fill="rgb(205,181,11)" rx="2" ry="2" />
<text  x="1186.18" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="146.8" y="1861" width="0.4" height="15.0" fill="rgb(251,87,36)" rx="2" ry="2" />
<text  x="149.77" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="583.4" y="1925" width="1.4" height="15.0" fill="rgb(234,139,12)" rx="2" ry="2" />
<text  x="586.35" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="583.0" y="1925" width="0.4" height="15.0" fill="rgb(253,195,15)" rx="2" ry="2" />
<text  x="585.95" y="1935.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="763.8" y="1733" width="0.2" height="15.0" fill="rgb(228,50,25)" rx="2" ry="2" />
<text  x="766.84" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="968.4" y="2037" width="1.0" height="15.0" fill="rgb(244,205,16)" rx="2" ry="2" />
<text  x="971.40" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="910.0" y="1973" width="0.4" height="15.0" fill="rgb(254,212,46)" rx="2" ry="2" />
<text  x="913.04" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="886.8" y="1925" width="0.2" height="15.0" fill="rgb(221,185,24)" rx="2" ry="2" />
<text  x="889.78" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="621.9" y="2037" width="0.2" height="15.0" fill="rgb(249,41,49)" rx="2" ry="2" />
<text  x="624.86" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="47.5" y="1925" width="0.2" height="15.0" fill="rgb(220,144,45)" rx="2" ry="2" />
<text  x="50.50" y="1935.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (4 samples, 0.07%)</title><rect x="513.6" y="1941" width="0.8" height="15.0" fill="rgb(238,149,24)" rx="2" ry="2" />
<text  x="516.57" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="159.0" y="1957" width="0.2" height="15.0" fill="rgb(226,71,45)" rx="2" ry="2" />
<text  x="162.00" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (2 samples, 0.03%)</title><rect x="584.8" y="1957" width="0.4" height="15.0" fill="rgb(218,201,26)" rx="2" ry="2" />
<text  x="587.76" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="618.5" y="1861" width="0.8" height="15.0" fill="rgb(252,218,13)" rx="2" ry="2" />
<text  x="621.45" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (2 samples, 0.03%)</title><rect x="898.0" y="2005" width="0.4" height="15.0" fill="rgb(245,49,20)" rx="2" ry="2" />
<text  x="901.01" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1155.5" y="1957" width="0.2" height="15.0" fill="rgb(248,14,54)" rx="2" ry="2" />
<text  x="1158.51" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (6 samples, 0.10%)</title><rect x="568.9" y="2005" width="1.2" height="15.0" fill="rgb(246,84,27)" rx="2" ry="2" />
<text  x="571.92" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="963.2" y="1893" width="0.2" height="15.0" fill="rgb(233,94,9)" rx="2" ry="2" />
<text  x="966.18" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="369.6" y="1669" width="0.2" height="15.0" fill="rgb(209,39,20)" rx="2" ry="2" />
<text  x="372.58" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="711.1" y="1941" width="0.2" height="15.0" fill="rgb(220,129,28)" rx="2" ry="2" />
<text  x="714.10" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1181.8" y="2037" width="0.2" height="15.0" fill="rgb(236,4,11)" rx="2" ry="2" />
<text  x="1184.78" y="2047.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="377.6" y="1941" width="0.2" height="15.0" fill="rgb(232,78,33)" rx="2" ry="2" />
<text  x="380.60" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="213.8" y="1797" width="0.4" height="15.0" fill="rgb(233,2,45)" rx="2" ry="2" />
<text  x="216.75" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="399.7" y="1829" width="0.4" height="15.0" fill="rgb(246,85,49)" rx="2" ry="2" />
<text  x="402.66" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="47.5" y="1941" width="0.2" height="15.0" fill="rgb(211,51,13)" rx="2" ry="2" />
<text  x="50.50" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="654.3" y="1941" width="0.2" height="15.0" fill="rgb(206,162,53)" rx="2" ry="2" />
<text  x="657.35" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="575.3" y="1717" width="0.2" height="15.0" fill="rgb(241,192,2)" rx="2" ry="2" />
<text  x="578.33" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="160.8" y="1877" width="0.2" height="15.0" fill="rgb(254,152,39)" rx="2" ry="2" />
<text  x="163.81" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="820.8" y="1669" width="0.4" height="15.0" fill="rgb(222,206,32)" rx="2" ry="2" />
<text  x="823.80" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (5 samples, 0.08%)</title><rect x="616.8" y="1973" width="1.0" height="15.0" fill="rgb(231,80,43)" rx="2" ry="2" />
<text  x="619.85" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="377.4" y="1925" width="0.2" height="15.0" fill="rgb(252,126,7)" rx="2" ry="2" />
<text  x="380.40" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="131.1" y="1957" width="0.2" height="15.0" fill="rgb(206,162,52)" rx="2" ry="2" />
<text  x="134.13" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1093" width="16.3" height="15.0" fill="rgb(249,111,12)" rx="2" ry="2" />
<text  x="101.44" y="1103.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (10 samples, 0.17%)</title><rect x="141.4" y="1925" width="2.0" height="15.0" fill="rgb(251,63,44)" rx="2" ry="2" />
<text  x="144.36" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="150.2" y="1893" width="0.2" height="15.0" fill="rgb(222,189,18)" rx="2" ry="2" />
<text  x="153.18" y="1903.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="712.7" y="1797" width="0.2" height="15.0" fill="rgb(220,115,7)" rx="2" ry="2" />
<text  x="715.71" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="114.1" y="85" width="0.2" height="15.0" fill="rgb(233,11,7)" rx="2" ry="2" />
<text  x="117.08" y="95.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="153.8" y="1701" width="0.2" height="15.0" fill="rgb(218,53,37)" rx="2" ry="2" />
<text  x="156.79" y="1711.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.12%)</title><rect x="678.4" y="1925" width="1.4" height="15.0" fill="rgb(252,201,14)" rx="2" ry="2" />
<text  x="681.41" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="148.0" y="1685" width="0.2" height="15.0" fill="rgb(238,133,6)" rx="2" ry="2" />
<text  x="150.97" y="1695.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="391.0" y="1541" width="0.2" height="15.0" fill="rgb(242,13,33)" rx="2" ry="2" />
<text  x="394.03" y="1551.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="889.2" y="1893" width="0.4" height="15.0" fill="rgb(242,4,8)" rx="2" ry="2" />
<text  x="892.18" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="919.3" y="1989" width="0.2" height="15.0" fill="rgb(248,62,29)" rx="2" ry="2" />
<text  x="922.27" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1 samples, 0.02%)</title><rect x="616.6" y="1989" width="0.2" height="15.0" fill="rgb(225,123,28)" rx="2" ry="2" />
<text  x="619.65" y="1999.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="475.5" y="1669" width="0.2" height="15.0" fill="rgb(240,105,16)" rx="2" ry="2" />
<text  x="478.46" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="52.5" y="1925" width="0.8" height="15.0" fill="rgb(205,28,27)" rx="2" ry="2" />
<text  x="55.52" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (6 samples, 0.10%)</title><rect x="106.7" y="53" width="1.2" height="15.0" fill="rgb(206,121,15)" rx="2" ry="2" />
<text  x="109.66" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="478.3" y="1925" width="0.6" height="15.0" fill="rgb(209,42,9)" rx="2" ry="2" />
<text  x="481.27" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="644.9" y="1925" width="0.6" height="15.0" fill="rgb(229,168,21)" rx="2" ry="2" />
<text  x="647.92" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.48%)</title><rect x="98.4" y="1685" width="17.5" height="15.0" fill="rgb(227,109,35)" rx="2" ry="2" />
<text  x="101.44" y="1695.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="854.1" y="1909" width="0.6" height="15.0" fill="rgb(226,219,39)" rx="2" ry="2" />
<text  x="857.09" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="30.3" y="1925" width="0.2" height="15.0" fill="rgb(224,229,31)" rx="2" ry="2" />
<text  x="33.25" y="1935.5" ></text>
</g>
<g >
<title>[[vdso]] (3 samples, 0.05%)</title><rect x="1184.8" y="2005" width="0.6" height="15.0" fill="rgb(215,46,5)" rx="2" ry="2" />
<text  x="1187.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="62.3" y="1781" width="0.2" height="15.0" fill="rgb(221,8,25)" rx="2" ry="2" />
<text  x="65.34" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="918.5" y="1877" width="0.2" height="15.0" fill="rgb(254,30,36)" rx="2" ry="2" />
<text  x="921.46" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (5 samples, 0.08%)</title><rect x="77.8" y="1941" width="1.0" height="15.0" fill="rgb(206,73,20)" rx="2" ry="2" />
<text  x="80.78" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1094.5" y="1685" width="0.2" height="15.0" fill="rgb(221,147,16)" rx="2" ry="2" />
<text  x="1097.54" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1149.3" y="1941" width="0.2" height="15.0" fill="rgb(246,109,17)" rx="2" ry="2" />
<text  x="1152.29" y="1951.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="475.3" y="1941" width="0.2" height="15.0" fill="rgb(222,192,30)" rx="2" ry="2" />
<text  x="478.26" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="620.3" y="1957" width="0.2" height="15.0" fill="rgb(214,212,17)" rx="2" ry="2" />
<text  x="623.25" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1083.3" y="1637" width="0.2" height="15.0" fill="rgb(207,202,33)" rx="2" ry="2" />
<text  x="1086.31" y="1647.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="117.9" y="1877" width="0.2" height="15.0" fill="rgb(215,128,8)" rx="2" ry="2" />
<text  x="120.89" y="1887.5" ></text>
</g>
<g >
<title>inet_accept (143 samples, 2.43%)</title><rect x="347.1" y="1957" width="28.7" height="15.0" fill="rgb(211,199,53)" rx="2" ry="2" />
<text  x="350.11" y="1967.5" >in..</text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="699.9" y="1733" width="0.2" height="15.0" fill="rgb(241,176,34)" rx="2" ry="2" />
<text  x="702.87" y="1743.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="56.9" y="1877" width="0.6" height="15.0" fill="rgb(210,33,22)" rx="2" ry="2" />
<text  x="59.93" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="530.6" y="1957" width="1.8" height="15.0" fill="rgb(245,118,46)" rx="2" ry="2" />
<text  x="533.61" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="306.4" y="1717" width="0.2" height="15.0" fill="rgb(245,130,0)" rx="2" ry="2" />
<text  x="309.40" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (20 samples, 0.34%)</title><rect x="611.0" y="1877" width="4.0" height="15.0" fill="rgb(242,229,19)" rx="2" ry="2" />
<text  x="614.03" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="570.9" y="2005" width="0.2" height="15.0" fill="rgb(249,41,17)" rx="2" ry="2" />
<text  x="573.92" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="732.2" y="1845" width="0.2" height="15.0" fill="rgb(215,164,18)" rx="2" ry="2" />
<text  x="735.16" y="1855.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1016.1" y="2037" width="0.2" height="15.0" fill="rgb(254,18,42)" rx="2" ry="2" />
<text  x="1019.13" y="2047.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="253.1" y="1877" width="0.2" height="15.0" fill="rgb(236,227,40)" rx="2" ry="2" />
<text  x="256.06" y="1887.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="143.2" y="1605" width="0.2" height="15.0" fill="rgb(229,6,38)" rx="2" ry="2" />
<text  x="146.16" y="1615.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="131.5" y="1957" width="0.8" height="15.0" fill="rgb(254,22,2)" rx="2" ry="2" />
<text  x="134.53" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="817.2" y="1525" width="0.2" height="15.0" fill="rgb(251,71,15)" rx="2" ry="2" />
<text  x="820.19" y="1535.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="814.4" y="1653" width="0.2" height="15.0" fill="rgb(245,35,45)" rx="2" ry="2" />
<text  x="817.38" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="856.1" y="1701" width="0.2" height="15.0" fill="rgb(225,1,54)" rx="2" ry="2" />
<text  x="859.09" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="1019.7" y="2021" width="2.4" height="15.0" fill="rgb(240,81,0)" rx="2" ry="2" />
<text  x="1022.74" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="612.4" y="1845" width="0.6" height="15.0" fill="rgb(231,114,42)" rx="2" ry="2" />
<text  x="615.43" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1150.9" y="1941" width="0.2" height="15.0" fill="rgb(232,28,17)" rx="2" ry="2" />
<text  x="1153.89" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="301.0" y="1493" width="0.2" height="15.0" fill="rgb(250,154,12)" rx="2" ry="2" />
<text  x="303.99" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="62.3" y="1845" width="0.2" height="15.0" fill="rgb(224,39,0)" rx="2" ry="2" />
<text  x="65.34" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="851.3" y="1845" width="0.2" height="15.0" fill="rgb(245,202,6)" rx="2" ry="2" />
<text  x="854.28" y="1855.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (2 samples, 0.03%)</title><rect x="97.2" y="2021" width="0.4" height="15.0" fill="rgb(239,106,15)" rx="2" ry="2" />
<text  x="100.24" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;int, void&gt; (1 samples, 0.02%)</title><rect x="571.7" y="2005" width="0.2" height="15.0" fill="rgb(232,50,54)" rx="2" ry="2" />
<text  x="574.72" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (3 samples, 0.05%)</title><rect x="967.8" y="2037" width="0.6" height="15.0" fill="rgb(251,139,39)" rx="2" ry="2" />
<text  x="970.80" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (263 samples, 4.47%)</title><rect x="526.0" y="2021" width="52.7" height="15.0" fill="rgb(206,17,36)" rx="2" ry="2" />
<text  x="529.00" y="2031.5" >folly..</text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="315.6" y="1829" width="0.4" height="15.0" fill="rgb(240,92,42)" rx="2" ry="2" />
<text  x="318.63" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1155.5" y="1861" width="0.2" height="15.0" fill="rgb(229,15,9)" rx="2" ry="2" />
<text  x="1158.51" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="812.0" y="1669" width="0.4" height="15.0" fill="rgb(235,1,22)" rx="2" ry="2" />
<text  x="814.97" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="327.3" y="1909" width="0.2" height="15.0" fill="rgb(210,137,15)" rx="2" ry="2" />
<text  x="330.26" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="30.3" y="1717" width="0.2" height="15.0" fill="rgb(228,189,43)" rx="2" ry="2" />
<text  x="33.25" y="1727.5" ></text>
</g>
<g >
<title>inet_unhash (1 samples, 0.02%)</title><rect x="832.6" y="1381" width="0.2" height="15.0" fill="rgb(226,186,37)" rx="2" ry="2" />
<text  x="835.63" y="1391.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1144.5" y="1877" width="0.2" height="15.0" fill="rgb(227,55,20)" rx="2" ry="2" />
<text  x="1147.48" y="1887.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="751.8" y="1797" width="0.2" height="15.0" fill="rgb(211,196,43)" rx="2" ry="2" />
<text  x="754.81" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="475.5" y="1813" width="0.2" height="15.0" fill="rgb(220,50,8)" rx="2" ry="2" />
<text  x="478.46" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (4 samples, 0.07%)</title><rect x="83.2" y="1957" width="0.8" height="15.0" fill="rgb(222,198,36)" rx="2" ry="2" />
<text  x="86.20" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="1023.5" y="2053" width="0.2" height="15.0" fill="rgb(248,43,22)" rx="2" ry="2" />
<text  x="1026.55" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="575.5" y="1941" width="0.2" height="15.0" fill="rgb(226,36,27)" rx="2" ry="2" />
<text  x="578.53" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="522.6" y="2005" width="0.4" height="15.0" fill="rgb(222,71,47)" rx="2" ry="2" />
<text  x="525.59" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="963.2" y="1781" width="0.2" height="15.0" fill="rgb(254,186,23)" rx="2" ry="2" />
<text  x="966.18" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1140.5" y="1813" width="0.2" height="15.0" fill="rgb(219,133,3)" rx="2" ry="2" />
<text  x="1143.47" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="381.2" y="1749" width="0.2" height="15.0" fill="rgb(237,219,36)" rx="2" ry="2" />
<text  x="384.21" y="1759.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.8" y="1829" width="0.8" height="15.0" fill="rgb(224,34,46)" rx="2" ry="2" />
<text  x="15.81" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1179.6" y="2021" width="0.2" height="15.0" fill="rgb(242,108,48)" rx="2" ry="2" />
<text  x="1182.57" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="494.1" y="1669" width="0.2" height="15.0" fill="rgb(231,2,0)" rx="2" ry="2" />
<text  x="497.11" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="306.4" y="1605" width="0.2" height="15.0" fill="rgb(233,89,16)" rx="2" ry="2" />
<text  x="309.40" y="1615.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="81.2" y="1973" width="0.2" height="15.0" fill="rgb(206,31,37)" rx="2" ry="2" />
<text  x="84.19" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1155.5" y="1701" width="0.2" height="15.0" fill="rgb(243,105,6)" rx="2" ry="2" />
<text  x="1158.51" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (275 samples, 4.67%)</title><rect x="34.3" y="2021" width="55.1" height="15.0" fill="rgb(238,17,45)" rx="2" ry="2" />
<text  x="37.27" y="2031.5" >folly..</text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="737.0" y="1733" width="0.2" height="15.0" fill="rgb(208,95,51)" rx="2" ry="2" />
<text  x="739.97" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1184.6" y="2021" width="0.2" height="15.0" fill="rgb(215,33,9)" rx="2" ry="2" />
<text  x="1187.59" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="98.4" y="1653" width="17.3" height="15.0" fill="rgb(214,79,1)" rx="2" ry="2" />
<text  x="101.44" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (10 samples, 0.17%)</title><rect x="711.1" y="1957" width="2.0" height="15.0" fill="rgb(249,55,31)" rx="2" ry="2" />
<text  x="714.10" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1083.3" y="1749" width="0.2" height="15.0" fill="rgb(222,175,6)" rx="2" ry="2" />
<text  x="1086.31" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="210.9" y="1733" width="0.2" height="15.0" fill="rgb(216,90,25)" rx="2" ry="2" />
<text  x="213.94" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="983.4" y="1893" width="0.6" height="15.0" fill="rgb(217,108,42)" rx="2" ry="2" />
<text  x="986.44" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="369.6" y="1685" width="0.2" height="15.0" fill="rgb(236,37,7)" rx="2" ry="2" />
<text  x="372.58" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1155.5" y="1797" width="0.2" height="15.0" fill="rgb(220,110,37)" rx="2" ry="2" />
<text  x="1158.51" y="1807.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (2 samples, 0.03%)</title><rect x="1173.0" y="2037" width="0.4" height="15.0" fill="rgb(221,67,50)" rx="2" ry="2" />
<text  x="1175.95" y="2047.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="569.1" y="1957" width="0.4" height="15.0" fill="rgb(247,23,36)" rx="2" ry="2" />
<text  x="572.12" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="832.6" y="1669" width="0.2" height="15.0" fill="rgb(224,111,39)" rx="2" ry="2" />
<text  x="835.63" y="1679.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="583.2" y="1621" width="0.2" height="15.0" fill="rgb(218,97,41)" rx="2" ry="2" />
<text  x="586.15" y="1631.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="666.6" y="1733" width="0.8" height="15.0" fill="rgb(206,161,15)" rx="2" ry="2" />
<text  x="669.58" y="1743.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="673.6" y="1781" width="0.8" height="15.0" fill="rgb(228,34,14)" rx="2" ry="2" />
<text  x="676.60" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="633.5" y="1973" width="0.2" height="15.0" fill="rgb(207,170,45)" rx="2" ry="2" />
<text  x="636.49" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="148.0" y="1909" width="0.2" height="15.0" fill="rgb(232,155,18)" rx="2" ry="2" />
<text  x="150.97" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="276.3" y="1653" width="0.8" height="15.0" fill="rgb(241,80,42)" rx="2" ry="2" />
<text  x="279.32" y="1663.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(240,196,8)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="326.7" y="1973" width="0.2" height="15.0" fill="rgb(212,80,31)" rx="2" ry="2" />
<text  x="329.66" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="478.3" y="1941" width="0.6" height="15.0" fill="rgb(237,148,0)" rx="2" ry="2" />
<text  x="481.27" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="776.5" y="1605" width="0.2" height="15.0" fill="rgb(251,47,52)" rx="2" ry="2" />
<text  x="779.48" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="563.7" y="1797" width="0.4" height="15.0" fill="rgb(206,228,20)" rx="2" ry="2" />
<text  x="566.70" y="1807.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="690.6" y="1925" width="0.6" height="15.0" fill="rgb(221,144,23)" rx="2" ry="2" />
<text  x="693.65" y="1935.5" ></text>
</g>
<g >
<title>sys_getsockname (36 samples, 0.61%)</title><rect x="593.6" y="1893" width="7.2" height="15.0" fill="rgb(214,44,45)" rx="2" ry="2" />
<text  x="596.58" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="115.5" y="1589" width="0.2" height="15.0" fill="rgb(213,66,34)" rx="2" ry="2" />
<text  x="118.49" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="531.6" y="1925" width="0.2" height="15.0" fill="rgb(235,77,10)" rx="2" ry="2" />
<text  x="534.61" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (658 samples, 11.18%)</title><rect x="718.5" y="1941" width="132.0" height="15.0" fill="rgb(210,56,41)" rx="2" ry="2" />
<text  x="721.52" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="126.9" y="1829" width="0.2" height="15.0" fill="rgb(205,139,19)" rx="2" ry="2" />
<text  x="129.92" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="494.1" y="1781" width="0.2" height="15.0" fill="rgb(205,27,7)" rx="2" ry="2" />
<text  x="497.11" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="405.5" y="1973" width="0.2" height="15.0" fill="rgb(242,40,11)" rx="2" ry="2" />
<text  x="408.47" y="1983.5" ></text>
</g>
<g >
<title>mntput_no_expire (2 samples, 0.03%)</title><rect x="751.2" y="1781" width="0.4" height="15.0" fill="rgb(216,115,4)" rx="2" ry="2" />
<text  x="754.21" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="426.7" y="1797" width="0.2" height="15.0" fill="rgb(234,223,33)" rx="2" ry="2" />
<text  x="429.73" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (12 samples, 0.20%)</title><rect x="881.6" y="1925" width="2.4" height="15.0" fill="rgb(215,207,14)" rx="2" ry="2" />
<text  x="884.56" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="891.8" y="1877" width="0.2" height="15.0" fill="rgb(228,223,50)" rx="2" ry="2" />
<text  x="894.79" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="893.0" y="1861" width="0.2" height="15.0" fill="rgb(218,65,40)" rx="2" ry="2" />
<text  x="895.99" y="1871.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="563.1" y="1605" width="0.2" height="15.0" fill="rgb(224,187,7)" rx="2" ry="2" />
<text  x="566.10" y="1615.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="1165.5" y="1957" width="2.6" height="15.0" fill="rgb(251,67,25)" rx="2" ry="2" />
<text  x="1168.53" y="1967.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (536 samples, 9.11%)</title><rect x="731.0" y="1861" width="107.4" height="15.0" fill="rgb(235,178,15)" rx="2" ry="2" />
<text  x="733.96" y="1871.5" >exit_to_userm..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2 samples, 0.03%)</title><rect x="996.3" y="1973" width="0.4" height="15.0" fill="rgb(229,71,20)" rx="2" ry="2" />
<text  x="999.27" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="115.1" y="1477" width="0.2" height="15.0" fill="rgb(241,33,45)" rx="2" ry="2" />
<text  x="118.08" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="261.1" y="1765" width="0.2" height="15.0" fill="rgb(220,122,51)" rx="2" ry="2" />
<text  x="264.08" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="950.4" y="1909" width="0.2" height="15.0" fill="rgb(224,164,29)" rx="2" ry="2" />
<text  x="953.35" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="666.2" y="1925" width="1.6" height="15.0" fill="rgb(240,134,9)" rx="2" ry="2" />
<text  x="669.18" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="153.8" y="1797" width="0.2" height="15.0" fill="rgb(231,159,16)" rx="2" ry="2" />
<text  x="156.79" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="205.5" y="1909" width="0.2" height="15.0" fill="rgb(231,6,22)" rx="2" ry="2" />
<text  x="208.53" y="1919.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.02%)</title><rect x="212.1" y="1861" width="0.2" height="15.0" fill="rgb(223,7,16)" rx="2" ry="2" />
<text  x="215.15" y="1871.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="1142.7" y="1957" width="0.2" height="15.0" fill="rgb(224,152,53)" rx="2" ry="2" />
<text  x="1145.67" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (131 samples, 2.23%)</title><rect x="274.3" y="1765" width="26.3" height="15.0" fill="rgb(251,187,40)" rx="2" ry="2" />
<text  x="277.32" y="1775.5" >i..</text>
</g>
<g >
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="808.4" y="1653" width="0.6" height="15.0" fill="rgb(208,150,45)" rx="2" ry="2" />
<text  x="811.37" y="1663.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (257 samples, 4.37%)</title><rect x="770.5" y="1717" width="51.5" height="15.0" fill="rgb(216,195,20)" rx="2" ry="2" />
<text  x="773.46" y="1727.5" >__tcp..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="611.8" y="1845" width="0.2" height="15.0" fill="rgb(230,120,4)" rx="2" ry="2" />
<text  x="614.83" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (7 samples, 0.12%)</title><rect x="68.6" y="1909" width="1.4" height="15.0" fill="rgb(253,92,52)" rx="2" ry="2" />
<text  x="71.56" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="426.7" y="1765" width="0.2" height="15.0" fill="rgb(240,131,3)" rx="2" ry="2" />
<text  x="429.73" y="1775.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="279.1" y="1381" width="0.4" height="15.0" fill="rgb(251,43,22)" rx="2" ry="2" />
<text  x="282.13" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="994.3" y="1685" width="0.2" height="15.0" fill="rgb(248,151,30)" rx="2" ry="2" />
<text  x="997.27" y="1695.5" ></text>
</g>
<g >
<title>__slab_free (20 samples, 0.34%)</title><rect x="1112.8" y="1429" width="4.0" height="15.0" fill="rgb(243,70,6)" rx="2" ry="2" />
<text  x="1115.79" y="1439.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="541.4" y="1717" width="0.2" height="15.0" fill="rgb(253,227,51)" rx="2" ry="2" />
<text  x="544.44" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="44.1" y="1941" width="1.4" height="15.0" fill="rgb(223,87,41)" rx="2" ry="2" />
<text  x="47.09" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="935.5" y="1973" width="0.2" height="15.0" fill="rgb(253,151,18)" rx="2" ry="2" />
<text  x="938.51" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.1" y="1621" width="0.2" height="15.0" fill="rgb(232,71,36)" rx="2" ry="2" />
<text  x="844.05" y="1631.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="268.5" y="1829" width="0.2" height="15.0" fill="rgb(232,74,17)" rx="2" ry="2" />
<text  x="271.50" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (103 samples, 1.75%)</title><rect x="502.3" y="2021" width="20.7" height="15.0" fill="rgb(235,117,10)" rx="2" ry="2" />
<text  x="505.34" y="2031.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="459.4" y="1925" width="0.2" height="15.0" fill="rgb(225,151,43)" rx="2" ry="2" />
<text  x="462.42" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="513.6" y="1957" width="0.8" height="15.0" fill="rgb(225,159,36)" rx="2" ry="2" />
<text  x="516.57" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="598.0" y="1813" width="0.4" height="15.0" fill="rgb(247,123,37)" rx="2" ry="2" />
<text  x="600.99" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1100.8" y="1653" width="0.2" height="15.0" fill="rgb(238,114,20)" rx="2" ry="2" />
<text  x="1103.76" y="1663.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="324.5" y="1957" width="0.2" height="15.0" fill="rgb(205,170,15)" rx="2" ry="2" />
<text  x="327.45" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (21 samples, 0.36%)</title><rect x="57.7" y="1941" width="4.2" height="15.0" fill="rgb(206,98,32)" rx="2" ry="2" />
<text  x="60.73" y="1951.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="276.7" y="1429" width="0.2" height="15.0" fill="rgb(253,8,30)" rx="2" ry="2" />
<text  x="279.72" y="1439.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="691.6" y="1877" width="0.7" height="15.0" fill="rgb(230,1,22)" rx="2" ry="2" />
<text  x="694.65" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="541.4" y="1797" width="0.2" height="15.0" fill="rgb(243,162,6)" rx="2" ry="2" />
<text  x="544.44" y="1807.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="394.4" y="1893" width="0.2" height="15.0" fill="rgb(254,177,53)" rx="2" ry="2" />
<text  x="397.44" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="325" width="16.1" height="15.0" fill="rgb(226,160,22)" rx="2" ry="2" />
<text  x="101.44" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="600.8" y="1589" width="0.2" height="15.0" fill="rgb(236,214,45)" rx="2" ry="2" />
<text  x="603.80" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1094.3" y="1893" width="0.4" height="15.0" fill="rgb(227,202,35)" rx="2" ry="2" />
<text  x="1097.34" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="697.7" y="1765" width="0.2" height="15.0" fill="rgb(212,107,9)" rx="2" ry="2" />
<text  x="700.66" y="1775.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="698.7" y="1909" width="0.8" height="15.0" fill="rgb(211,176,23)" rx="2" ry="2" />
<text  x="701.67" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="976.0" y="1973" width="0.2" height="15.0" fill="rgb(235,29,0)" rx="2" ry="2" />
<text  x="979.02" y="1983.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.14%)</title><rect x="402.5" y="1909" width="1.6" height="15.0" fill="rgb(236,222,39)" rx="2" ry="2" />
<text  x="405.46" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1074.9" y="1637" width="0.2" height="15.0" fill="rgb(226,99,45)" rx="2" ry="2" />
<text  x="1077.89" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="997" width="16.3" height="15.0" fill="rgb(245,70,18)" rx="2" ry="2" />
<text  x="101.44" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="576.3" y="1957" width="0.2" height="15.0" fill="rgb(208,102,18)" rx="2" ry="2" />
<text  x="579.34" y="1967.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="377.2" y="1957" width="0.6" height="15.0" fill="rgb(213,9,7)" rx="2" ry="2" />
<text  x="380.20" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (4 samples, 0.07%)</title><rect x="1168.7" y="2053" width="0.8" height="15.0" fill="rgb(217,91,47)" rx="2" ry="2" />
<text  x="1171.74" y="2063.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (3 samples, 0.05%)</title><rect x="552.1" y="1957" width="0.6" height="15.0" fill="rgb(221,128,6)" rx="2" ry="2" />
<text  x="555.07" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="374.4" y="1829" width="0.4" height="15.0" fill="rgb(227,94,13)" rx="2" ry="2" />
<text  x="377.39" y="1839.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(210,14,2)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="71.8" y="1893" width="0.2" height="15.0" fill="rgb(228,216,48)" rx="2" ry="2" />
<text  x="74.77" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="391.0" y="1637" width="0.2" height="15.0" fill="rgb(215,45,8)" rx="2" ry="2" />
<text  x="394.03" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="677.8" y="1909" width="0.4" height="15.0" fill="rgb(229,158,33)" rx="2" ry="2" />
<text  x="680.81" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="75.6" y="1765" width="0.2" height="15.0" fill="rgb(207,23,11)" rx="2" ry="2" />
<text  x="78.58" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="705.5" y="2037" width="0.2" height="15.0" fill="rgb(233,203,28)" rx="2" ry="2" />
<text  x="708.49" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (2 samples, 0.03%)</title><rect x="615.8" y="1989" width="0.4" height="15.0" fill="rgb(244,52,16)" rx="2" ry="2" />
<text  x="618.84" y="1999.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="1118.2" y="1541" width="0.2" height="15.0" fill="rgb(234,75,40)" rx="2" ry="2" />
<text  x="1121.21" y="1551.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="127.9" y="1941" width="0.2" height="15.0" fill="rgb(227,97,51)" rx="2" ry="2" />
<text  x="130.92" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(234,144,11)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="69.8" y="1381" width="0.2" height="15.0" fill="rgb(218,100,47)" rx="2" ry="2" />
<text  x="72.76" y="1391.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="784.5" y="1285" width="0.2" height="15.0" fill="rgb(221,211,17)" rx="2" ry="2" />
<text  x="787.50" y="1295.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (8 samples, 0.14%)</title><rect x="1141.9" y="2037" width="1.6" height="15.0" fill="rgb(223,77,50)" rx="2" ry="2" />
<text  x="1144.87" y="2047.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="306.4" y="1477" width="0.2" height="15.0" fill="rgb(224,65,20)" rx="2" ry="2" />
<text  x="309.40" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="923.7" y="1909" width="0.2" height="15.0" fill="rgb(222,172,39)" rx="2" ry="2" />
<text  x="926.68" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="911.6" y="1989" width="0.2" height="15.0" fill="rgb(249,25,1)" rx="2" ry="2" />
<text  x="914.65" y="1999.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="1183.2" y="1957" width="0.6" height="15.0" fill="rgb(231,127,6)" rx="2" ry="2" />
<text  x="1186.18" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="97.8" y="2005" width="0.2" height="15.0" fill="rgb(219,68,2)" rx="2" ry="2" />
<text  x="100.84" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="475.7" y="1957" width="0.2" height="15.0" fill="rgb(225,26,17)" rx="2" ry="2" />
<text  x="478.66" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="478.3" y="1845" width="0.6" height="15.0" fill="rgb(253,131,4)" rx="2" ry="2" />
<text  x="481.27" y="1855.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="246.6" y="1877" width="0.2" height="15.0" fill="rgb(242,137,3)" rx="2" ry="2" />
<text  x="249.64" y="1887.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="486.1" y="1925" width="0.2" height="15.0" fill="rgb(213,182,37)" rx="2" ry="2" />
<text  x="489.09" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="246.4" y="1797" width="0.2" height="15.0" fill="rgb(228,46,17)" rx="2" ry="2" />
<text  x="249.44" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="381.2" y="1797" width="0.2" height="15.0" fill="rgb(249,56,34)" rx="2" ry="2" />
<text  x="384.21" y="1807.5" ></text>
</g>
<g >
<title>__clock_gettime (17 samples, 0.29%)</title><rect x="190.5" y="2037" width="3.4" height="15.0" fill="rgb(214,200,48)" rx="2" ry="2" />
<text  x="193.49" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="543.2" y="1877" width="0.4" height="15.0" fill="rgb(218,162,51)" rx="2" ry="2" />
<text  x="546.25" y="1887.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (5 samples, 0.08%)</title><rect x="1018.1" y="2037" width="1.0" height="15.0" fill="rgb(240,13,37)" rx="2" ry="2" />
<text  x="1021.13" y="2047.5" ></text>
</g>
<g >
<title>skb_clone (27 samples, 0.46%)</title><rect x="301.2" y="1813" width="5.4" height="15.0" fill="rgb(232,177,35)" rx="2" ry="2" />
<text  x="304.19" y="1823.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="376.8" y="1957" width="0.2" height="15.0" fill="rgb(213,125,54)" rx="2" ry="2" />
<text  x="379.79" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="861.7" y="1973" width="0.2" height="15.0" fill="rgb(221,132,18)" rx="2" ry="2" />
<text  x="864.71" y="1983.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="1176.2" y="1941" width="0.2" height="15.0" fill="rgb(246,20,13)" rx="2" ry="2" />
<text  x="1179.16" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="814.0" y="1461" width="0.2" height="15.0" fill="rgb(224,115,37)" rx="2" ry="2" />
<text  x="816.98" y="1471.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (107 samples, 1.82%)</title><rect x="582.0" y="1989" width="21.4" height="15.0" fill="rgb(254,22,31)" rx="2" ry="2" />
<text  x="584.95" y="1999.5" >f..</text>
</g>
<g >
<title>module_put (1 samples, 0.02%)</title><rect x="837.0" y="1813" width="0.2" height="15.0" fill="rgb(224,128,48)" rx="2" ry="2" />
<text  x="840.04" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="146.0" y="1861" width="0.2" height="15.0" fill="rgb(226,112,16)" rx="2" ry="2" />
<text  x="148.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="967.8" y="2021" width="0.6" height="15.0" fill="rgb(246,227,14)" rx="2" ry="2" />
<text  x="970.80" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="853.1" y="1941" width="1.8" height="15.0" fill="rgb(232,49,38)" rx="2" ry="2" />
<text  x="856.09" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="945.3" y="1973" width="0.2" height="15.0" fill="rgb(220,227,54)" rx="2" ry="2" />
<text  x="948.34" y="1983.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="984.4" y="1893" width="0.2" height="15.0" fill="rgb(233,101,40)" rx="2" ry="2" />
<text  x="987.44" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="867.9" y="1989" width="0.6" height="15.0" fill="rgb(225,12,5)" rx="2" ry="2" />
<text  x="870.93" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="711.3" y="1877" width="0.2" height="15.0" fill="rgb(205,39,48)" rx="2" ry="2" />
<text  x="714.30" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (3 samples, 0.05%)</title><rect x="516.8" y="1989" width="0.6" height="15.0" fill="rgb(250,154,1)" rx="2" ry="2" />
<text  x="519.77" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="24.4" y="1685" width="0.2" height="15.0" fill="rgb(218,22,22)" rx="2" ry="2" />
<text  x="27.44" y="1695.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="887.0" y="1957" width="0.2" height="15.0" fill="rgb(226,181,45)" rx="2" ry="2" />
<text  x="889.98" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1005.7" y="2005" width="0.2" height="15.0" fill="rgb(239,132,27)" rx="2" ry="2" />
<text  x="1008.70" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (2 samples, 0.03%)</title><rect x="378.0" y="1925" width="0.4" height="15.0" fill="rgb(209,88,7)" rx="2" ry="2" />
<text  x="381.00" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="369.6" y="1765" width="0.2" height="15.0" fill="rgb(205,183,25)" rx="2" ry="2" />
<text  x="372.58" y="1775.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="995.7" y="1957" width="0.4" height="15.0" fill="rgb(216,1,14)" rx="2" ry="2" />
<text  x="998.67" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="759.4" y="1701" width="0.2" height="15.0" fill="rgb(243,120,43)" rx="2" ry="2" />
<text  x="762.43" y="1711.5" ></text>
</g>
<g >
<title>sk_reset_timer (20 samples, 0.34%)</title><rect x="311.6" y="1781" width="4.0" height="15.0" fill="rgb(221,56,30)" rx="2" ry="2" />
<text  x="314.62" y="1791.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="71.8" y="1845" width="0.2" height="15.0" fill="rgb(245,130,47)" rx="2" ry="2" />
<text  x="74.77" y="1855.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="143.2" y="1525" width="0.2" height="15.0" fill="rgb(215,119,47)" rx="2" ry="2" />
<text  x="146.16" y="1535.5" ></text>
</g>
<g >
<title>inode_has_buffers (1 samples, 0.02%)</title><rect x="743.0" y="1685" width="0.2" height="15.0" fill="rgb(238,56,24)" rx="2" ry="2" />
<text  x="745.99" y="1695.5" ></text>
</g>
<g >
<title>skb_release_data (2 samples, 0.03%)</title><rect x="1090.1" y="1909" width="0.4" height="15.0" fill="rgb(215,73,6)" rx="2" ry="2" />
<text  x="1093.13" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="814.0" y="1477" width="0.2" height="15.0" fill="rgb(209,168,10)" rx="2" ry="2" />
<text  x="816.98" y="1487.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="544.0" y="1877" width="0.2" height="15.0" fill="rgb(225,30,21)" rx="2" ry="2" />
<text  x="547.05" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="1019.1" y="2037" width="0.2" height="15.0" fill="rgb(240,14,33)" rx="2" ry="2" />
<text  x="1022.14" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="545.3" y="1765" width="0.2" height="15.0" fill="rgb(229,129,2)" rx="2" ry="2" />
<text  x="548.25" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="44.7" y="1925" width="0.8" height="15.0" fill="rgb(228,228,36)" rx="2" ry="2" />
<text  x="47.69" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="426.7" y="1893" width="0.2" height="15.0" fill="rgb(254,40,30)" rx="2" ry="2" />
<text  x="429.73" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="673.6" y="1861" width="0.8" height="15.0" fill="rgb(232,59,9)" rx="2" ry="2" />
<text  x="676.60" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="901.0" y="2021" width="0.2" height="15.0" fill="rgb(249,199,26)" rx="2" ry="2" />
<text  x="904.02" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="998.7" y="2005" width="0.4" height="15.0" fill="rgb(242,37,4)" rx="2" ry="2" />
<text  x="1001.68" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="965.4" y="1957" width="0.2" height="15.0" fill="rgb(237,222,21)" rx="2" ry="2" />
<text  x="968.39" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="98.4" y="1605" width="17.3" height="15.0" fill="rgb(235,75,36)" rx="2" ry="2" />
<text  x="101.44" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="990.5" y="2005" width="0.2" height="15.0" fill="rgb(234,210,17)" rx="2" ry="2" />
<text  x="993.46" y="2015.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="541.4" y="1653" width="0.2" height="15.0" fill="rgb(206,27,15)" rx="2" ry="2" />
<text  x="544.44" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="584.2" y="1813" width="0.2" height="15.0" fill="rgb(251,54,3)" rx="2" ry="2" />
<text  x="587.16" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="856.1" y="1749" width="0.2" height="15.0" fill="rgb(231,176,11)" rx="2" ry="2" />
<text  x="859.09" y="1759.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="298.8" y="1637" width="0.2" height="15.0" fill="rgb(213,203,48)" rx="2" ry="2" />
<text  x="301.78" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.6" y="1861" width="0.2" height="15.0" fill="rgb(249,61,20)" rx="2" ry="2" />
<text  x="77.58" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (2 samples, 0.03%)</title><rect x="903.6" y="2037" width="0.4" height="15.0" fill="rgb(247,141,3)" rx="2" ry="2" />
<text  x="906.62" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (92 samples, 1.56%)</title><rect x="663.0" y="2037" width="18.4" height="15.0" fill="rgb(244,92,1)" rx="2" ry="2" />
<text  x="665.97" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="86.4" y="1957" width="1.0" height="15.0" fill="rgb(249,30,53)" rx="2" ry="2" />
<text  x="89.41" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (1 samples, 0.02%)</title><rect x="157.8" y="1989" width="0.2" height="15.0" fill="rgb(246,156,48)" rx="2" ry="2" />
<text  x="160.80" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="614.2" y="1749" width="0.8" height="15.0" fill="rgb(228,78,39)" rx="2" ry="2" />
<text  x="617.24" y="1759.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="116.7" y="1765" width="0.2" height="15.0" fill="rgb(209,153,25)" rx="2" ry="2" />
<text  x="119.69" y="1775.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1105.8" y="1893" width="0.4" height="15.0" fill="rgb(245,94,45)" rx="2" ry="2" />
<text  x="1108.77" y="1903.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.05%)</title><rect x="476.5" y="1973" width="0.6" height="15.0" fill="rgb(207,68,0)" rx="2" ry="2" />
<text  x="479.46" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="95.8" y="1909" width="0.2" height="15.0" fill="rgb(226,172,37)" rx="2" ry="2" />
<text  x="98.83" y="1919.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="148.4" y="1813" width="0.8" height="15.0" fill="rgb(205,142,26)" rx="2" ry="2" />
<text  x="151.38" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (8 samples, 0.14%)</title><rect x="43.9" y="1957" width="1.6" height="15.0" fill="rgb(231,161,48)" rx="2" ry="2" />
<text  x="46.89" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1149.7" y="1957" width="0.2" height="15.0" fill="rgb(222,127,10)" rx="2" ry="2" />
<text  x="1152.69" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="737.2" y="1733" width="1.4" height="15.0" fill="rgb(254,229,10)" rx="2" ry="2" />
<text  x="740.17" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="850.1" y="1893" width="0.2" height="15.0" fill="rgb(251,141,39)" rx="2" ry="2" />
<text  x="853.08" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="75.6" y="1685" width="0.2" height="15.0" fill="rgb(235,146,44)" rx="2" ry="2" />
<text  x="78.58" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="114.3" y="229" width="0.2" height="15.0" fill="rgb(248,20,21)" rx="2" ry="2" />
<text  x="117.28" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="114.3" y="117" width="0.2" height="15.0" fill="rgb(206,2,9)" rx="2" ry="2" />
<text  x="117.28" y="127.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="217.6" y="1893" width="0.2" height="15.0" fill="rgb(211,157,48)" rx="2" ry="2" />
<text  x="220.56" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="575.5" y="1989" width="0.2" height="15.0" fill="rgb(240,90,12)" rx="2" ry="2" />
<text  x="578.53" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="118.7" y="1957" width="0.2" height="15.0" fill="rgb(205,164,32)" rx="2" ry="2" />
<text  x="121.69" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="128.9" y="1957" width="0.8" height="15.0" fill="rgb(228,52,53)" rx="2" ry="2" />
<text  x="131.92" y="1967.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (1 samples, 0.02%)</title><rect x="484.5" y="2037" width="0.2" height="15.0" fill="rgb(220,114,31)" rx="2" ry="2" />
<text  x="487.49" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="679.8" y="1941" width="0.2" height="15.0" fill="rgb(242,75,25)" rx="2" ry="2" />
<text  x="682.82" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="918.9" y="2037" width="0.2" height="15.0" fill="rgb(222,117,9)" rx="2" ry="2" />
<text  x="921.86" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="128.5" y="1957" width="0.2" height="15.0" fill="rgb(225,212,24)" rx="2" ry="2" />
<text  x="131.52" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="1182.8" y="2005" width="0.4" height="15.0" fill="rgb(231,174,7)" rx="2" ry="2" />
<text  x="1185.78" y="2015.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="969.4" y="1989" width="0.2" height="15.0" fill="rgb(212,194,12)" rx="2" ry="2" />
<text  x="972.40" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="220.8" y="1941" width="0.4" height="15.0" fill="rgb(211,78,10)" rx="2" ry="2" />
<text  x="223.77" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="583.2" y="1637" width="0.2" height="15.0" fill="rgb(241,0,22)" rx="2" ry="2" />
<text  x="586.15" y="1647.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="583.2" y="1605" width="0.2" height="15.0" fill="rgb(236,38,51)" rx="2" ry="2" />
<text  x="586.15" y="1615.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="1094.5" y="1621" width="0.2" height="15.0" fill="rgb(250,39,40)" rx="2" ry="2" />
<text  x="1097.54" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="600.8" y="1717" width="0.2" height="15.0" fill="rgb(213,115,12)" rx="2" ry="2" />
<text  x="603.80" y="1727.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="784.3" y="1573" width="0.4" height="15.0" fill="rgb(246,217,19)" rx="2" ry="2" />
<text  x="787.30" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="642.7" y="1909" width="0.2" height="15.0" fill="rgb(253,226,38)" rx="2" ry="2" />
<text  x="645.72" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1129.4" y="2037" width="0.4" height="15.0" fill="rgb(227,214,39)" rx="2" ry="2" />
<text  x="1132.44" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="363.8" y="1733" width="0.2" height="15.0" fill="rgb(242,158,31)" rx="2" ry="2" />
<text  x="366.76" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (84 samples, 1.43%)</title><rect x="920.9" y="1989" width="16.8" height="15.0" fill="rgb(226,190,27)" rx="2" ry="2" />
<text  x="923.87" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="108.7" y="37" width="0.2" height="15.0" fill="rgb(246,107,2)" rx="2" ry="2" />
<text  x="111.67" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (12 samples, 0.20%)</title><rect x="168.4" y="1973" width="2.4" height="15.0" fill="rgb(239,5,7)" rx="2" ry="2" />
<text  x="171.43" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="693.3" y="1845" width="0.2" height="15.0" fill="rgb(236,179,28)" rx="2" ry="2" />
<text  x="696.25" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="963.2" y="1989" width="0.2" height="15.0" fill="rgb(245,146,51)" rx="2" ry="2" />
<text  x="966.18" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="1164.7" y="1925" width="0.8" height="15.0" fill="rgb(229,99,24)" rx="2" ry="2" />
<text  x="1167.73" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (3 samples, 0.05%)</title><rect x="193.9" y="2005" width="0.6" height="15.0" fill="rgb(219,75,36)" rx="2" ry="2" />
<text  x="196.90" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="405.5" y="1621" width="0.2" height="15.0" fill="rgb(218,126,4)" rx="2" ry="2" />
<text  x="408.47" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="579.7" y="1877" width="0.2" height="15.0" fill="rgb(206,101,12)" rx="2" ry="2" />
<text  x="582.75" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="890.6" y="1925" width="0.4" height="15.0" fill="rgb(217,146,33)" rx="2" ry="2" />
<text  x="893.59" y="1935.5" ></text>
</g>
<g >
<title>ktime_get_real_seconds (1 samples, 0.02%)</title><rect x="276.5" y="1477" width="0.2" height="15.0" fill="rgb(206,197,48)" rx="2" ry="2" />
<text  x="279.52" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="381.2" y="1733" width="0.2" height="15.0" fill="rgb(205,128,4)" rx="2" ry="2" />
<text  x="384.21" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.3" y="1941" width="0.2" height="15.0" fill="rgb(250,75,31)" rx="2" ry="2" />
<text  x="65.34" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (18 samples, 0.31%)</title><rect x="276.3" y="1701" width="3.6" height="15.0" fill="rgb(221,150,2)" rx="2" ry="2" />
<text  x="279.32" y="1711.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="333.5" y="2037" width="0.2" height="15.0" fill="rgb(208,43,27)" rx="2" ry="2" />
<text  x="336.48" y="2047.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1098.6" y="1909" width="0.2" height="15.0" fill="rgb(225,90,53)" rx="2" ry="2" />
<text  x="1101.55" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="530.0" y="1973" width="0.2" height="15.0" fill="rgb(217,159,24)" rx="2" ry="2" />
<text  x="533.01" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="134.3" y="1877" width="0.6" height="15.0" fill="rgb(208,207,5)" rx="2" ry="2" />
<text  x="137.34" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="12.4" y="2037" width="0.2" height="15.0" fill="rgb(215,210,32)" rx="2" ry="2" />
<text  x="15.41" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="391.0" y="1813" width="0.2" height="15.0" fill="rgb(208,17,15)" rx="2" ry="2" />
<text  x="394.03" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1221" width="16.3" height="15.0" fill="rgb(218,151,49)" rx="2" ry="2" />
<text  x="101.44" y="1231.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1074.9" y="1701" width="0.2" height="15.0" fill="rgb(242,31,35)" rx="2" ry="2" />
<text  x="1077.89" y="1711.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="243.2" y="1813" width="0.2" height="15.0" fill="rgb(253,202,47)" rx="2" ry="2" />
<text  x="246.23" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="402.1" y="1861" width="0.2" height="15.0" fill="rgb(224,111,45)" rx="2" ry="2" />
<text  x="405.06" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1175.4" y="1973" width="0.4" height="15.0" fill="rgb(207,29,48)" rx="2" ry="2" />
<text  x="1178.36" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="306.4" y="1765" width="0.2" height="15.0" fill="rgb(206,127,7)" rx="2" ry="2" />
<text  x="309.40" y="1775.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (2 samples, 0.03%)</title><rect x="477.3" y="1973" width="0.4" height="15.0" fill="rgb(215,140,13)" rx="2" ry="2" />
<text  x="480.27" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="363.8" y="1653" width="0.2" height="15.0" fill="rgb(240,207,45)" rx="2" ry="2" />
<text  x="366.76" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="165" width="15.9" height="15.0" fill="rgb(246,85,3)" rx="2" ry="2" />
<text  x="101.44" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1143.3" y="2005" width="0.2" height="15.0" fill="rgb(251,97,26)" rx="2" ry="2" />
<text  x="1146.27" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.0" y="1989" width="0.2" height="15.0" fill="rgb(236,15,19)" rx="2" ry="2" />
<text  x="959.97" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1429" width="16.3" height="15.0" fill="rgb(208,65,20)" rx="2" ry="2" />
<text  x="101.44" y="1439.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="399.3" y="1877" width="0.2" height="15.0" fill="rgb(245,108,28)" rx="2" ry="2" />
<text  x="402.26" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="25.6" y="1989" width="0.2" height="15.0" fill="rgb(207,209,39)" rx="2" ry="2" />
<text  x="28.64" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="963.2" y="1765" width="0.2" height="15.0" fill="rgb(253,114,3)" rx="2" ry="2" />
<text  x="966.18" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="776.5" y="1621" width="0.2" height="15.0" fill="rgb(251,89,32)" rx="2" ry="2" />
<text  x="779.48" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="133.7" y="1893" width="0.2" height="15.0" fill="rgb(229,134,13)" rx="2" ry="2" />
<text  x="136.74" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="509.2" y="1957" width="0.4" height="15.0" fill="rgb(226,82,23)" rx="2" ry="2" />
<text  x="512.15" y="1967.5" ></text>
</g>
<g >
<title>alloc_inode (34 samples, 0.58%)</title><rect x="381.0" y="1925" width="6.8" height="15.0" fill="rgb(245,210,9)" rx="2" ry="2" />
<text  x="384.01" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="575.3" y="1829" width="0.2" height="15.0" fill="rgb(222,176,15)" rx="2" ry="2" />
<text  x="578.33" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="143.2" y="1749" width="0.2" height="15.0" fill="rgb(230,74,41)" rx="2" ry="2" />
<text  x="146.16" y="1759.5" ></text>
</g>
<g >
<title>inet_recvmsg (328 samples, 5.57%)</title><rect x="1056.0" y="1957" width="65.8" height="15.0" fill="rgb(254,135,52)" rx="2" ry="2" />
<text  x="1059.04" y="1967.5" >inet_re..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1074.9" y="1765" width="0.2" height="15.0" fill="rgb(225,226,8)" rx="2" ry="2" />
<text  x="1077.89" y="1775.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="893.0" y="1845" width="0.2" height="15.0" fill="rgb(250,143,29)" rx="2" ry="2" />
<text  x="895.99" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="113.7" y="53" width="0.2" height="15.0" fill="rgb(248,60,35)" rx="2" ry="2" />
<text  x="116.68" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="151.2" y="1989" width="0.6" height="15.0" fill="rgb(253,175,20)" rx="2" ry="2" />
<text  x="154.18" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (6 samples, 0.10%)</title><rect x="96.0" y="2037" width="1.2" height="15.0" fill="rgb(211,143,8)" rx="2" ry="2" />
<text  x="99.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="905.6" y="1989" width="1.8" height="15.0" fill="rgb(232,55,5)" rx="2" ry="2" />
<text  x="908.63" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="635.5" y="1973" width="0.8" height="15.0" fill="rgb(211,203,53)" rx="2" ry="2" />
<text  x="638.50" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="126.9" y="1797" width="0.2" height="15.0" fill="rgb(242,213,13)" rx="2" ry="2" />
<text  x="129.92" y="1807.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="118.7" y="1973" width="0.2" height="15.0" fill="rgb(249,88,26)" rx="2" ry="2" />
<text  x="121.69" y="1983.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="299.2" y="1653" width="0.2" height="15.0" fill="rgb(247,191,39)" rx="2" ry="2" />
<text  x="302.18" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="918.5" y="1925" width="0.2" height="15.0" fill="rgb(221,60,1)" rx="2" ry="2" />
<text  x="921.46" y="1935.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="374.4" y="1637" width="0.2" height="15.0" fill="rgb(226,210,52)" rx="2" ry="2" />
<text  x="377.39" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1091.5" y="1733" width="0.2" height="15.0" fill="rgb(252,37,39)" rx="2" ry="2" />
<text  x="1094.53" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1164.5" y="1877" width="0.2" height="15.0" fill="rgb(252,70,17)" rx="2" ry="2" />
<text  x="1167.53" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1074.9" y="1461" width="0.2" height="15.0" fill="rgb(244,43,3)" rx="2" ry="2" />
<text  x="1077.89" y="1471.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="614.0" y="1829" width="1.0" height="15.0" fill="rgb(226,229,9)" rx="2" ry="2" />
<text  x="617.04" y="1839.5" ></text>
</g>
<g >
<title>__d_instantiate (3 samples, 0.05%)</title><rect x="401.1" y="1925" width="0.6" height="15.0" fill="rgb(214,88,27)" rx="2" ry="2" />
<text  x="404.06" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="986.0" y="1925" width="0.2" height="15.0" fill="rgb(205,206,0)" rx="2" ry="2" />
<text  x="989.05" y="1935.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="857.9" y="1941" width="0.2" height="15.0" fill="rgb(244,125,35)" rx="2" ry="2" />
<text  x="860.90" y="1951.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="193.7" y="1925" width="0.2" height="15.0" fill="rgb(250,149,33)" rx="2" ry="2" />
<text  x="196.70" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="148.4" y="1861" width="1.0" height="15.0" fill="rgb(206,158,16)" rx="2" ry="2" />
<text  x="151.38" y="1871.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="674.6" y="1861" width="0.2" height="15.0" fill="rgb(234,171,28)" rx="2" ry="2" />
<text  x="677.60" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="705.3" y="2021" width="0.2" height="15.0" fill="rgb(249,137,17)" rx="2" ry="2" />
<text  x="708.29" y="2031.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="858.9" y="1941" width="0.2" height="15.0" fill="rgb(209,96,10)" rx="2" ry="2" />
<text  x="861.90" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (12 samples, 0.20%)</title><rect x="884.4" y="1957" width="2.4" height="15.0" fill="rgb(233,53,24)" rx="2" ry="2" />
<text  x="887.37" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="69.8" y="1429" width="0.2" height="15.0" fill="rgb(240,37,49)" rx="2" ry="2" />
<text  x="72.76" y="1439.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="900.2" y="2005" width="0.2" height="15.0" fill="rgb(253,91,13)" rx="2" ry="2" />
<text  x="903.21" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.1" y="1637" width="0.2" height="15.0" fill="rgb(220,49,49)" rx="2" ry="2" />
<text  x="844.05" y="1647.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="1181.8" y="1893" width="0.2" height="15.0" fill="rgb(245,14,39)" rx="2" ry="2" />
<text  x="1184.78" y="1903.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="575.3" y="1653" width="0.2" height="15.0" fill="rgb(247,227,0)" rx="2" ry="2" />
<text  x="578.33" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="886.8" y="1893" width="0.2" height="15.0" fill="rgb(215,137,6)" rx="2" ry="2" />
<text  x="889.78" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (9 samples, 0.15%)</title><rect x="79.2" y="1941" width="1.8" height="15.0" fill="rgb(213,44,22)" rx="2" ry="2" />
<text  x="82.19" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="531.8" y="1941" width="0.6" height="15.0" fill="rgb(223,118,41)" rx="2" ry="2" />
<text  x="534.82" y="1951.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="57.5" y="1909" width="0.2" height="15.0" fill="rgb(233,132,41)" rx="2" ry="2" />
<text  x="60.53" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="841.7" y="1877" width="0.2" height="15.0" fill="rgb(216,89,50)" rx="2" ry="2" />
<text  x="844.66" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.6" y="1909" width="0.2" height="15.0" fill="rgb(237,15,36)" rx="2" ry="2" />
<text  x="77.58" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (4 samples, 0.07%)</title><rect x="31.9" y="1989" width="0.8" height="15.0" fill="rgb(206,135,7)" rx="2" ry="2" />
<text  x="34.86" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="984.0" y="1893" width="0.4" height="15.0" fill="rgb(225,194,7)" rx="2" ry="2" />
<text  x="987.04" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1164.5" y="1813" width="0.2" height="15.0" fill="rgb(230,216,2)" rx="2" ry="2" />
<text  x="1167.53" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="832.6" y="1541" width="0.2" height="15.0" fill="rgb(233,16,5)" rx="2" ry="2" />
<text  x="835.63" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="866.1" y="1973" width="0.4" height="15.0" fill="rgb(241,187,37)" rx="2" ry="2" />
<text  x="869.12" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (12 samples, 0.20%)</title><rect x="43.1" y="1973" width="2.4" height="15.0" fill="rgb(245,103,22)" rx="2" ry="2" />
<text  x="46.09" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="963.2" y="1909" width="0.2" height="15.0" fill="rgb(227,202,41)" rx="2" ry="2" />
<text  x="966.18" y="1919.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1074.9" y="1381" width="0.2" height="15.0" fill="rgb(212,97,18)" rx="2" ry="2" />
<text  x="1077.89" y="1391.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="24.6" y="1893" width="1.0" height="15.0" fill="rgb(237,48,18)" rx="2" ry="2" />
<text  x="27.64" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="218.6" y="1845" width="0.2" height="15.0" fill="rgb(221,27,44)" rx="2" ry="2" />
<text  x="221.57" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="950.4" y="1941" width="0.2" height="15.0" fill="rgb(249,50,17)" rx="2" ry="2" />
<text  x="953.35" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="475.5" y="1925" width="0.2" height="15.0" fill="rgb(221,81,51)" rx="2" ry="2" />
<text  x="478.46" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (29 samples, 0.49%)</title><rect x="284.7" y="1685" width="5.9" height="15.0" fill="rgb(220,97,47)" rx="2" ry="2" />
<text  x="287.75" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="138.7" y="1877" width="0.5" height="15.0" fill="rgb(209,226,40)" rx="2" ry="2" />
<text  x="141.75" y="1887.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="67.8" y="1861" width="0.2" height="15.0" fill="rgb(212,72,45)" rx="2" ry="2" />
<text  x="70.76" y="1871.5" ></text>
</g>
<g >
<title>detach_if_pending (2 samples, 0.03%)</title><rect x="817.4" y="1605" width="0.4" height="15.0" fill="rgb(248,210,50)" rx="2" ry="2" />
<text  x="820.39" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (139 samples, 2.36%)</title><rect x="194.5" y="2005" width="27.9" height="15.0" fill="rgb(209,101,12)" rx="2" ry="2" />
<text  x="197.50" y="2015.5" >f..</text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (60 samples, 1.02%)</title><rect x="20.6" y="2005" width="12.1" height="15.0" fill="rgb(205,139,26)" rx="2" ry="2" />
<text  x="23.63" y="2015.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="390.8" y="1733" width="0.2" height="15.0" fill="rgb(248,99,2)" rx="2" ry="2" />
<text  x="393.83" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="153.2" y="1909" width="0.2" height="15.0" fill="rgb(221,183,51)" rx="2" ry="2" />
<text  x="156.19" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="161.2" y="1989" width="1.2" height="15.0" fill="rgb(235,159,40)" rx="2" ry="2" />
<text  x="164.21" y="1999.5" ></text>
</g>
<g >
<title>all (5,884 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(205,216,7)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="62.3" y="1685" width="0.2" height="15.0" fill="rgb(253,83,45)" rx="2" ry="2" />
<text  x="65.34" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (15 samples, 0.25%)</title><rect x="540.8" y="1957" width="3.0" height="15.0" fill="rgb(205,184,2)" rx="2" ry="2" />
<text  x="543.84" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (5 samples, 0.08%)</title><rect x="148.4" y="1941" width="1.0" height="15.0" fill="rgb(239,88,46)" rx="2" ry="2" />
<text  x="151.38" y="1951.5" ></text>
</g>
<g >
<title>__snprintf (1 samples, 0.02%)</title><rect x="333.3" y="2037" width="0.2" height="15.0" fill="rgb(210,196,3)" rx="2" ry="2" />
<text  x="336.28" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="575.5" y="1781" width="0.2" height="15.0" fill="rgb(240,24,50)" rx="2" ry="2" />
<text  x="578.53" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="62.3" y="1749" width="0.2" height="15.0" fill="rgb(206,10,24)" rx="2" ry="2" />
<text  x="65.34" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="905.2" y="2037" width="0.2" height="15.0" fill="rgb(253,180,47)" rx="2" ry="2" />
<text  x="908.23" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="575.3" y="1781" width="0.2" height="15.0" fill="rgb(209,135,51)" rx="2" ry="2" />
<text  x="578.33" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (1 samples, 0.02%)</title><rect x="32.5" y="1973" width="0.2" height="15.0" fill="rgb(232,29,9)" rx="2" ry="2" />
<text  x="35.46" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="784.5" y="1381" width="0.2" height="15.0" fill="rgb(227,28,49)" rx="2" ry="2" />
<text  x="787.50" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="114.3" y="149" width="0.2" height="15.0" fill="rgb(233,145,10)" rx="2" ry="2" />
<text  x="117.28" y="159.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="358.3" y="1909" width="0.2" height="15.0" fill="rgb(208,213,17)" rx="2" ry="2" />
<text  x="361.34" y="1919.5" ></text>
</g>
<g >
<title>sock_rfree (6 samples, 0.10%)</title><rect x="1086.7" y="1877" width="1.2" height="15.0" fill="rgb(226,118,17)" rx="2" ry="2" />
<text  x="1089.72" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (8 samples, 0.14%)</title><rect x="215.0" y="1845" width="1.6" height="15.0" fill="rgb(222,70,24)" rx="2" ry="2" />
<text  x="217.96" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="912.4" y="2005" width="0.6" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="915.45" y="2015.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="179.5" y="2021" width="0.2" height="15.0" fill="rgb(250,54,10)" rx="2" ry="2" />
<text  x="182.46" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1091.5" y="1829" width="0.2" height="15.0" fill="rgb(221,10,36)" rx="2" ry="2" />
<text  x="1094.53" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="187.1" y="2021" width="0.4" height="15.0" fill="rgb(217,157,33)" rx="2" ry="2" />
<text  x="190.08" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="245.8" y="1877" width="0.2" height="15.0" fill="rgb(220,221,43)" rx="2" ry="2" />
<text  x="248.84" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (56 samples, 0.95%)</title><rect x="605.0" y="2005" width="11.2" height="15.0" fill="rgb(234,42,18)" rx="2" ry="2" />
<text  x="608.01" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (15 samples, 0.25%)</title><rect x="534.4" y="1973" width="3.0" height="15.0" fill="rgb(243,51,15)" rx="2" ry="2" />
<text  x="537.42" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="363.6" y="1877" width="0.2" height="15.0" fill="rgb(218,41,2)" rx="2" ry="2" />
<text  x="366.56" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="279.7" y="1525" width="0.2" height="15.0" fill="rgb(212,41,26)" rx="2" ry="2" />
<text  x="282.73" y="1535.5" ></text>
</g>
<g >
<title>__skb_clone (14 samples, 0.24%)</title><rect x="809.2" y="1653" width="2.8" height="15.0" fill="rgb(248,77,30)" rx="2" ry="2" />
<text  x="812.17" y="1663.5" ></text>
</g>
<g >
<title>snprintf@plt (1 samples, 0.02%)</title><rect x="1016.7" y="2037" width="0.2" height="15.0" fill="rgb(234,14,12)" rx="2" ry="2" />
<text  x="1019.73" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="699.9" y="1781" width="0.2" height="15.0" fill="rgb(218,45,44)" rx="2" ry="2" />
<text  x="702.87" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (97 samples, 1.65%)</title><rect x="873.5" y="1989" width="19.5" height="15.0" fill="rgb(218,98,8)" rx="2" ry="2" />
<text  x="876.54" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="697.7" y="1557" width="0.2" height="15.0" fill="rgb(226,203,37)" rx="2" ry="2" />
<text  x="700.66" y="1567.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="477.7" y="1685" width="0.2" height="15.0" fill="rgb(215,9,23)" rx="2" ry="2" />
<text  x="480.67" y="1695.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="787.5" y="1541" width="0.6" height="15.0" fill="rgb(236,30,6)" rx="2" ry="2" />
<text  x="790.51" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="309" width="16.1" height="15.0" fill="rgb(215,34,32)" rx="2" ry="2" />
<text  x="101.44" y="319.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="187.5" y="2021" width="2.6" height="15.0" fill="rgb(230,69,52)" rx="2" ry="2" />
<text  x="190.48" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="568.3" y="2005" width="0.4" height="15.0" fill="rgb(230,166,14)" rx="2" ry="2" />
<text  x="571.31" y="2015.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="24.4" y="1733" width="0.2" height="15.0" fill="rgb(253,199,13)" rx="2" ry="2" />
<text  x="27.44" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.0" y="1861" width="0.2" height="15.0" fill="rgb(239,178,44)" rx="2" ry="2" />
<text  x="539.03" y="1871.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (53 samples, 0.90%)</title><rect x="1108.4" y="1877" width="10.6" height="15.0" fill="rgb(210,51,4)" rx="2" ry="2" />
<text  x="1111.38" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="67.8" y="1845" width="0.2" height="15.0" fill="rgb(230,134,0)" rx="2" ry="2" />
<text  x="70.76" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="390.8" y="1877" width="0.2" height="15.0" fill="rgb(242,214,37)" rx="2" ry="2" />
<text  x="393.83" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="720.7" y="1925" width="0.2" height="15.0" fill="rgb(208,137,9)" rx="2" ry="2" />
<text  x="723.73" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="563.1" y="1765" width="0.2" height="15.0" fill="rgb(222,171,16)" rx="2" ry="2" />
<text  x="566.10" y="1775.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="963.0" y="2021" width="0.2" height="15.0" fill="rgb(236,89,33)" rx="2" ry="2" />
<text  x="965.98" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (10 samples, 0.17%)</title><rect x="504.3" y="1989" width="2.0" height="15.0" fill="rgb(246,106,44)" rx="2" ry="2" />
<text  x="507.34" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (201 samples, 3.42%)</title><rect x="772.9" y="1685" width="40.3" height="15.0" fill="rgb(235,203,1)" rx="2" ry="2" />
<text  x="775.87" y="1695.5" >__t..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="823.6" y="1653" width="0.2" height="15.0" fill="rgb(224,227,31)" rx="2" ry="2" />
<text  x="826.61" y="1663.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="30.3" y="1685" width="0.2" height="15.0" fill="rgb(215,80,30)" rx="2" ry="2" />
<text  x="33.25" y="1695.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="95.8" y="1637" width="0.2" height="15.0" fill="rgb(209,71,7)" rx="2" ry="2" />
<text  x="98.83" y="1647.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1176.8" y="1973" width="0.2" height="15.0" fill="rgb(237,16,51)" rx="2" ry="2" />
<text  x="1179.76" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="949.5" y="1973" width="0.4" height="15.0" fill="rgb(243,227,42)" rx="2" ry="2" />
<text  x="952.55" y="1983.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="179.7" y="2021" width="0.4" height="15.0" fill="rgb(235,140,11)" rx="2" ry="2" />
<text  x="182.66" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="246.4" y="1765" width="0.2" height="15.0" fill="rgb(220,93,22)" rx="2" ry="2" />
<text  x="249.44" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="62.5" y="1973" width="0.2" height="15.0" fill="rgb(236,150,53)" rx="2" ry="2" />
<text  x="65.54" y="1983.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="374.4" y="1893" width="0.4" height="15.0" fill="rgb(214,199,47)" rx="2" ry="2" />
<text  x="377.39" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="405.5" y="1637" width="0.2" height="15.0" fill="rgb(238,2,17)" rx="2" ry="2" />
<text  x="408.47" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="521.4" y="1989" width="0.4" height="15.0" fill="rgb(223,68,31)" rx="2" ry="2" />
<text  x="524.39" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="963.2" y="1845" width="0.2" height="15.0" fill="rgb(242,99,26)" rx="2" ry="2" />
<text  x="966.18" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (2 samples, 0.03%)</title><rect x="621.5" y="2037" width="0.4" height="15.0" fill="rgb(227,29,7)" rx="2" ry="2" />
<text  x="624.46" y="2047.5" ></text>
</g>
<g >
<title>sock_poll (56 samples, 0.95%)</title><rect x="488.9" y="1909" width="11.2" height="15.0" fill="rgb(248,7,39)" rx="2" ry="2" />
<text  x="491.90" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="474.3" y="1941" width="0.2" height="15.0" fill="rgb(215,156,37)" rx="2" ry="2" />
<text  x="477.26" y="1951.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="155.2" y="2021" width="0.2" height="15.0" fill="rgb(212,100,27)" rx="2" ry="2" />
<text  x="158.19" y="2031.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="759.4" y="1717" width="0.2" height="15.0" fill="rgb(221,2,26)" rx="2" ry="2" />
<text  x="762.43" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="680.2" y="2005" width="0.2" height="15.0" fill="rgb(253,220,25)" rx="2" ry="2" />
<text  x="683.22" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="544.0" y="1909" width="0.2" height="15.0" fill="rgb(206,38,52)" rx="2" ry="2" />
<text  x="547.05" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="153.2" y="1813" width="0.2" height="15.0" fill="rgb(209,201,35)" rx="2" ry="2" />
<text  x="156.19" y="1823.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="182.1" y="2037" width="0.2" height="15.0" fill="rgb(249,22,15)" rx="2" ry="2" />
<text  x="185.07" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="115.7" y="1669" width="0.2" height="15.0" fill="rgb(217,101,17)" rx="2" ry="2" />
<text  x="118.69" y="1679.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (2 samples, 0.03%)</title><rect x="515.8" y="1957" width="0.4" height="15.0" fill="rgb(216,6,24)" rx="2" ry="2" />
<text  x="518.77" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="70.2" y="1925" width="0.4" height="15.0" fill="rgb(236,61,42)" rx="2" ry="2" />
<text  x="73.16" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="597.0" y="1845" width="0.4" height="15.0" fill="rgb(237,7,19)" rx="2" ry="2" />
<text  x="599.99" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1181.8" y="1989" width="0.2" height="15.0" fill="rgb(207,148,21)" rx="2" ry="2" />
<text  x="1184.78" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="299.8" y="1653" width="0.2" height="15.0" fill="rgb(242,116,36)" rx="2" ry="2" />
<text  x="302.79" y="1663.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1155.7" y="1973" width="0.2" height="15.0" fill="rgb(239,135,28)" rx="2" ry="2" />
<text  x="1158.71" y="1983.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="666.6" y="1893" width="0.8" height="15.0" fill="rgb(211,116,31)" rx="2" ry="2" />
<text  x="669.58" y="1903.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.02%)</title><rect x="95.8" y="1589" width="0.2" height="15.0" fill="rgb(233,212,31)" rx="2" ry="2" />
<text  x="98.83" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="832.6" y="1429" width="0.2" height="15.0" fill="rgb(243,210,41)" rx="2" ry="2" />
<text  x="835.63" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="630.5" y="2005" width="0.6" height="15.0" fill="rgb(221,208,4)" rx="2" ry="2" />
<text  x="633.48" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (8 samples, 0.14%)</title><rect x="622.3" y="2037" width="1.6" height="15.0" fill="rgb(219,76,5)" rx="2" ry="2" />
<text  x="625.26" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.8" y="1909" width="0.2" height="15.0" fill="rgb(215,67,11)" rx="2" ry="2" />
<text  x="74.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (738 samples, 12.54%)</title><rect x="713.3" y="1989" width="148.0" height="15.0" fill="rgb(240,199,39)" rx="2" ry="2" />
<text  x="716.31" y="1999.5" >facebook::memcache..</text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="675.6" y="1845" width="0.4" height="15.0" fill="rgb(239,55,43)" rx="2" ry="2" />
<text  x="678.61" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.9" y="1701" width="0.2" height="15.0" fill="rgb(230,24,46)" rx="2" ry="2" />
<text  x="118.89" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.41%)</title><rect x="98.4" y="1493" width="16.7" height="15.0" fill="rgb(215,185,27)" rx="2" ry="2" />
<text  x="101.44" y="1503.5" ></text>
</g>
<g >
<title>sock_close (407 samples, 6.92%)</title><rect x="755.0" y="1797" width="81.6" height="15.0" fill="rgb(253,160,1)" rx="2" ry="2" />
<text  x="758.02" y="1807.5" >sock_close</text>
</g>
<g >
<title>do_syscall_64 (338 samples, 5.74%)</title><rect x="337.3" y="2005" width="67.8" height="15.0" fill="rgb(235,1,28)" rx="2" ry="2" />
<text  x="340.29" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="541.8" y="1861" width="0.4" height="15.0" fill="rgb(220,19,21)" rx="2" ry="2" />
<text  x="544.84" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="113.1" y="69" width="0.2" height="15.0" fill="rgb(234,171,37)" rx="2" ry="2" />
<text  x="116.08" y="79.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="114.1" y="53" width="0.2" height="15.0" fill="rgb(252,104,13)" rx="2" ry="2" />
<text  x="117.08" y="63.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="551.3" y="1973" width="0.2" height="15.0" fill="rgb(235,139,54)" rx="2" ry="2" />
<text  x="554.27" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="600.8" y="1845" width="0.2" height="15.0" fill="rgb(224,12,10)" rx="2" ry="2" />
<text  x="603.80" y="1855.5" ></text>
</g>
<g >
<title>mntget (1 samples, 0.02%)</title><rect x="377.0" y="1957" width="0.2" height="15.0" fill="rgb(217,28,34)" rx="2" ry="2" />
<text  x="380.00" y="1967.5" ></text>
</g>
<g >
<title>get_empty_filp (41 samples, 0.70%)</title><rect x="389.0" y="1925" width="8.3" height="15.0" fill="rgb(217,173,30)" rx="2" ry="2" />
<text  x="392.03" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1122.6" y="1797" width="0.2" height="15.0" fill="rgb(209,180,33)" rx="2" ry="2" />
<text  x="1125.62" y="1807.5" ></text>
</g>
<g >
<title>extract_crng (1 samples, 0.02%)</title><rect x="394.0" y="1829" width="0.2" height="15.0" fill="rgb(245,195,42)" rx="2" ry="2" />
<text  x="397.04" y="1839.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1083.3" y="1589" width="0.2" height="15.0" fill="rgb(214,213,45)" rx="2" ry="2" />
<text  x="1086.31" y="1599.5" ></text>
</g>
<g >
<title>syscall (15 samples, 0.25%)</title><rect x="1019.7" y="2037" width="3.0" height="15.0" fill="rgb(222,153,39)" rx="2" ry="2" />
<text  x="1022.74" y="2047.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="399.7" y="1573" width="0.2" height="15.0" fill="rgb(220,41,17)" rx="2" ry="2" />
<text  x="402.66" y="1583.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="116.9" y="1781" width="0.2" height="15.0" fill="rgb(249,23,39)" rx="2" ry="2" />
<text  x="119.89" y="1791.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2 samples, 0.03%)</title><rect x="615.2" y="1861" width="0.4" height="15.0" fill="rgb(210,202,39)" rx="2" ry="2" />
<text  x="618.24" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (8 samples, 0.14%)</title><rect x="1073.5" y="1861" width="1.6" height="15.0" fill="rgb(233,18,50)" rx="2" ry="2" />
<text  x="1076.48" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="95.8" y="1861" width="0.2" height="15.0" fill="rgb(226,219,12)" rx="2" ry="2" />
<text  x="98.83" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="677" width="16.1" height="15.0" fill="rgb(232,37,52)" rx="2" ry="2" />
<text  x="101.44" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="857.1" y="1813" width="0.2" height="15.0" fill="rgb(239,78,22)" rx="2" ry="2" />
<text  x="860.10" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1150.9" y="1893" width="0.2" height="15.0" fill="rgb(223,188,47)" rx="2" ry="2" />
<text  x="1153.89" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="583.2" y="1861" width="0.2" height="15.0" fill="rgb(222,192,8)" rx="2" ry="2" />
<text  x="586.15" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="210.9" y="1829" width="0.2" height="15.0" fill="rgb(219,39,53)" rx="2" ry="2" />
<text  x="213.94" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="153.2" y="1989" width="0.2" height="15.0" fill="rgb(205,218,42)" rx="2" ry="2" />
<text  x="156.19" y="1999.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (7 samples, 0.12%)</title><rect x="158.2" y="1989" width="1.4" height="15.0" fill="rgb(221,52,15)" rx="2" ry="2" />
<text  x="161.20" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="374.6" y="1637" width="0.2" height="15.0" fill="rgb(243,223,24)" rx="2" ry="2" />
<text  x="377.59" y="1647.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="316.2" y="1877" width="0.8" height="15.0" fill="rgb(247,0,31)" rx="2" ry="2" />
<text  x="319.23" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="936.9" y="1941" width="0.2" height="15.0" fill="rgb(253,50,15)" rx="2" ry="2" />
<text  x="939.91" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (9 samples, 0.15%)</title><rect x="172.0" y="1973" width="1.8" height="15.0" fill="rgb(221,15,14)" rx="2" ry="2" />
<text  x="175.04" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (4 samples, 0.07%)</title><rect x="708.9" y="1973" width="0.8" height="15.0" fill="rgb(246,117,39)" rx="2" ry="2" />
<text  x="711.90" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="932.9" y="1813" width="0.2" height="15.0" fill="rgb(251,135,53)" rx="2" ry="2" />
<text  x="935.90" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="847.7" y="1893" width="0.2" height="15.0" fill="rgb(218,194,20)" rx="2" ry="2" />
<text  x="850.67" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="625.9" y="2005" width="0.2" height="15.0" fill="rgb(251,201,26)" rx="2" ry="2" />
<text  x="628.87" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="95.8" y="1653" width="0.2" height="15.0" fill="rgb(222,58,36)" rx="2" ry="2" />
<text  x="98.83" y="1663.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="994.3" y="1573" width="0.2" height="15.0" fill="rgb(247,110,7)" rx="2" ry="2" />
<text  x="997.27" y="1583.5" ></text>
</g>
<g >
<title>dev_queue_xmit (116 samples, 1.97%)</title><rect x="784.7" y="1589" width="23.3" height="15.0" fill="rgb(251,196,35)" rx="2" ry="2" />
<text  x="787.70" y="1599.5" >d..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="363.6" y="1669" width="0.2" height="15.0" fill="rgb(220,139,31)" rx="2" ry="2" />
<text  x="366.56" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="126.9" y="1877" width="0.2" height="15.0" fill="rgb(223,17,28)" rx="2" ry="2" />
<text  x="129.92" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1144.5" y="1861" width="0.2" height="15.0" fill="rgb(209,126,40)" rx="2" ry="2" />
<text  x="1147.48" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1030.6" y="2037" width="0.4" height="15.0" fill="rgb(209,153,36)" rx="2" ry="2" />
<text  x="1033.57" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="990.5" y="1813" width="0.2" height="15.0" fill="rgb(242,27,5)" rx="2" ry="2" />
<text  x="993.46" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="563.7" y="1813" width="0.4" height="15.0" fill="rgb(215,96,47)" rx="2" ry="2" />
<text  x="566.70" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="214.2" y="1813" width="0.6" height="15.0" fill="rgb(234,93,3)" rx="2" ry="2" />
<text  x="217.15" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="885.0" y="1925" width="0.4" height="15.0" fill="rgb(230,86,4)" rx="2" ry="2" />
<text  x="887.97" y="1935.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (5 samples, 0.08%)</title><rect x="843.7" y="1909" width="1.0" height="15.0" fill="rgb(251,64,54)" rx="2" ry="2" />
<text  x="846.66" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="153.8" y="1957" width="0.2" height="15.0" fill="rgb(208,185,38)" rx="2" ry="2" />
<text  x="156.79" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="475.9" y="1957" width="0.2" height="15.0" fill="rgb(229,42,11)" rx="2" ry="2" />
<text  x="478.86" y="1967.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="814.2" y="1653" width="0.2" height="15.0" fill="rgb(210,176,23)" rx="2" ry="2" />
<text  x="817.18" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="784.5" y="1365" width="0.2" height="15.0" fill="rgb(227,63,52)" rx="2" ry="2" />
<text  x="787.50" y="1375.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="114.3" y="85" width="0.2" height="15.0" fill="rgb(217,102,6)" rx="2" ry="2" />
<text  x="117.28" y="95.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="697.3" y="1845" width="0.6" height="15.0" fill="rgb(222,194,9)" rx="2" ry="2" />
<text  x="700.26" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.82%)</title><rect x="905.6" y="2021" width="9.7" height="15.0" fill="rgb(237,169,43)" rx="2" ry="2" />
<text  x="908.63" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (4 samples, 0.07%)</title><rect x="661.8" y="2037" width="0.8" height="15.0" fill="rgb(244,49,5)" rx="2" ry="2" />
<text  x="664.77" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="697.7" y="1669" width="0.2" height="15.0" fill="rgb(216,56,12)" rx="2" ry="2" />
<text  x="700.66" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="28.0" y="1957" width="0.2" height="15.0" fill="rgb(214,174,47)" rx="2" ry="2" />
<text  x="31.05" y="1967.5" ></text>
</g>
<g >
<title>__libc_fcntl (10 samples, 0.17%)</title><rect x="1170.9" y="2037" width="2.1" height="15.0" fill="rgb(222,101,2)" rx="2" ry="2" />
<text  x="1173.95" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="969.4" y="1973" width="0.2" height="15.0" fill="rgb(230,103,1)" rx="2" ry="2" />
<text  x="972.40" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (3 samples, 0.05%)</title><rect x="975.4" y="1973" width="0.6" height="15.0" fill="rgb(223,68,22)" rx="2" ry="2" />
<text  x="978.42" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="25.4" y="1685" width="0.2" height="15.0" fill="rgb(248,27,14)" rx="2" ry="2" />
<text  x="28.44" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="699.9" y="1797" width="0.2" height="15.0" fill="rgb(240,76,46)" rx="2" ry="2" />
<text  x="702.87" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="631.5" y="2005" width="1.0" height="15.0" fill="rgb(222,162,16)" rx="2" ry="2" />
<text  x="634.49" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="494.1" y="1749" width="0.2" height="15.0" fill="rgb(222,118,34)" rx="2" ry="2" />
<text  x="497.11" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="593.4" y="1861" width="0.2" height="15.0" fill="rgb(230,77,32)" rx="2" ry="2" />
<text  x="596.38" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="575.3" y="1893" width="0.2" height="15.0" fill="rgb(231,153,49)" rx="2" ry="2" />
<text  x="578.33" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="531.8" y="1925" width="0.6" height="15.0" fill="rgb(254,10,12)" rx="2" ry="2" />
<text  x="534.82" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="368.8" y="1861" width="0.2" height="15.0" fill="rgb(246,104,33)" rx="2" ry="2" />
<text  x="371.77" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="613" width="16.1" height="15.0" fill="rgb(243,212,2)" rx="2" ry="2" />
<text  x="101.44" y="623.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1122.6" y="1813" width="0.2" height="15.0" fill="rgb(247,155,15)" rx="2" ry="2" />
<text  x="1125.62" y="1823.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.19%)</title><rect x="1087.9" y="1893" width="2.2" height="15.0" fill="rgb(234,72,9)" rx="2" ry="2" />
<text  x="1090.92" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (3 samples, 0.05%)</title><rect x="534.8" y="1957" width="0.6" height="15.0" fill="rgb(212,222,22)" rx="2" ry="2" />
<text  x="537.82" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="76.4" y="1941" width="1.0" height="15.0" fill="rgb(254,58,40)" rx="2" ry="2" />
<text  x="79.38" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="391.0" y="1893" width="0.2" height="15.0" fill="rgb(208,146,31)" rx="2" ry="2" />
<text  x="394.03" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="770.7" y="1701" width="0.2" height="15.0" fill="rgb(250,84,39)" rx="2" ry="2" />
<text  x="773.66" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="25.4" y="1653" width="0.2" height="15.0" fill="rgb(236,152,25)" rx="2" ry="2" />
<text  x="28.44" y="1663.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="901.2" y="2005" width="0.2" height="15.0" fill="rgb(253,148,7)" rx="2" ry="2" />
<text  x="904.22" y="2015.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="712.5" y="1813" width="0.2" height="15.0" fill="rgb(232,219,17)" rx="2" ry="2" />
<text  x="715.51" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="901.6" y="1989" width="0.4" height="15.0" fill="rgb(214,84,32)" rx="2" ry="2" />
<text  x="904.62" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="153.2" y="1893" width="0.2" height="15.0" fill="rgb(227,62,21)" rx="2" ry="2" />
<text  x="156.19" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1091.5" y="1797" width="0.2" height="15.0" fill="rgb(237,142,43)" rx="2" ry="2" />
<text  x="1094.53" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="583.2" y="1797" width="0.2" height="15.0" fill="rgb(227,14,30)" rx="2" ry="2" />
<text  x="586.15" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="95.8" y="1765" width="0.2" height="15.0" fill="rgb(253,226,52)" rx="2" ry="2" />
<text  x="98.83" y="1775.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="88.6" y="1989" width="0.2" height="15.0" fill="rgb(231,100,16)" rx="2" ry="2" />
<text  x="91.61" y="1999.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (4 samples, 0.07%)</title><rect x="159.6" y="1989" width="0.8" height="15.0" fill="rgb(217,18,26)" rx="2" ry="2" />
<text  x="162.61" y="1999.5" ></text>
</g>
<g >
<title>netdev_pick_tx (17 samples, 0.29%)</title><rect x="786.7" y="1557" width="3.4" height="15.0" fill="rgb(249,6,53)" rx="2" ry="2" />
<text  x="789.71" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="699.9" y="1909" width="0.2" height="15.0" fill="rgb(234,23,17)" rx="2" ry="2" />
<text  x="702.87" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="673.6" y="1797" width="0.8" height="15.0" fill="rgb(218,38,52)" rx="2" ry="2" />
<text  x="676.60" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.56%)</title><rect x="905.6" y="2005" width="6.6" height="15.0" fill="rgb(230,200,48)" rx="2" ry="2" />
<text  x="908.63" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="705.5" y="2021" width="0.2" height="15.0" fill="rgb(226,152,33)" rx="2" ry="2" />
<text  x="708.49" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="637.3" y="1989" width="0.4" height="15.0" fill="rgb(224,151,24)" rx="2" ry="2" />
<text  x="640.30" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="218.6" y="1829" width="0.2" height="15.0" fill="rgb(236,166,4)" rx="2" ry="2" />
<text  x="221.57" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="153.8" y="1973" width="0.2" height="15.0" fill="rgb(224,16,39)" rx="2" ry="2" />
<text  x="156.79" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="1176.6" y="1989" width="0.4" height="15.0" fill="rgb(208,96,42)" rx="2" ry="2" />
<text  x="1179.56" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="93.2" y="2021" width="2.8" height="15.0" fill="rgb(223,99,14)" rx="2" ry="2" />
<text  x="96.23" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.15%)</title><rect x="530.6" y="1973" width="1.8" height="15.0" fill="rgb(206,137,2)" rx="2" ry="2" />
<text  x="533.61" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="369.0" y="1909" width="0.2" height="15.0" fill="rgb(242,64,42)" rx="2" ry="2" />
<text  x="371.97" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="213" width="15.9" height="15.0" fill="rgb(219,61,12)" rx="2" ry="2" />
<text  x="101.44" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="134.1" y="1909" width="0.8" height="15.0" fill="rgb(236,174,54)" rx="2" ry="2" />
<text  x="137.14" y="1919.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="150.4" y="1829" width="0.2" height="15.0" fill="rgb(233,143,43)" rx="2" ry="2" />
<text  x="153.38" y="1839.5" ></text>
</g>
<g >
<title>tcp_sendmsg (396 samples, 6.73%)</title><rect x="243.4" y="1909" width="79.4" height="15.0" fill="rgb(218,167,10)" rx="2" ry="2" />
<text  x="246.43" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="886.2" y="1925" width="0.2" height="15.0" fill="rgb(218,93,15)" rx="2" ry="2" />
<text  x="889.18" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="550.5" y="1941" width="0.2" height="15.0" fill="rgb(251,171,1)" rx="2" ry="2" />
<text  x="553.47" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="114.3" y="213" width="0.2" height="15.0" fill="rgb(231,0,31)" rx="2" ry="2" />
<text  x="117.28" y="223.5" ></text>
</g>
<g >
<title>ksize (4 samples, 0.07%)</title><rect x="769.5" y="1701" width="0.8" height="15.0" fill="rgb(249,30,44)" rx="2" ry="2" />
<text  x="772.46" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1074.9" y="1445" width="0.2" height="15.0" fill="rgb(231,206,40)" rx="2" ry="2" />
<text  x="1077.89" y="1455.5" ></text>
</g>
<g >
<title>sock_edemux (1 samples, 0.02%)</title><rect x="150.4" y="1813" width="0.2" height="15.0" fill="rgb(215,157,12)" rx="2" ry="2" />
<text  x="153.38" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="214.6" y="1749" width="0.2" height="15.0" fill="rgb(214,42,48)" rx="2" ry="2" />
<text  x="217.55" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="757.8" y="1685" width="0.2" height="15.0" fill="rgb(240,228,52)" rx="2" ry="2" />
<text  x="760.83" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (2 samples, 0.03%)</title><rect x="890.2" y="1893" width="0.4" height="15.0" fill="rgb(239,193,48)" rx="2" ry="2" />
<text  x="893.19" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="541.4" y="1877" width="0.2" height="15.0" fill="rgb(229,78,46)" rx="2" ry="2" />
<text  x="544.44" y="1887.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="402.3" y="1957" width="2.0" height="15.0" fill="rgb(219,116,26)" rx="2" ry="2" />
<text  x="405.26" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (53 samples, 0.90%)</title><rect x="605.2" y="1973" width="10.6" height="15.0" fill="rgb(211,219,36)" rx="2" ry="2" />
<text  x="608.21" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.6" y="1829" width="0.8" height="15.0" fill="rgb(252,30,45)" rx="2" ry="2" />
<text  x="14.60" y="1839.5" ></text>
</g>
<g >
<title>__GI___setsockopt (102 samples, 1.73%)</title><rect x="682.6" y="1989" width="20.5" height="15.0" fill="rgb(248,71,26)" rx="2" ry="2" />
<text  x="685.62" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1148.3" y="1893" width="0.2" height="15.0" fill="rgb(231,186,38)" rx="2" ry="2" />
<text  x="1151.29" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="315.4" y="1637" width="0.2" height="15.0" fill="rgb(221,130,41)" rx="2" ry="2" />
<text  x="318.43" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="512.0" y="1973" width="1.4" height="15.0" fill="rgb(248,158,17)" rx="2" ry="2" />
<text  x="514.96" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="221.6" y="1957" width="0.2" height="15.0" fill="rgb(226,15,37)" rx="2" ry="2" />
<text  x="224.57" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="456.6" y="1957" width="1.2" height="15.0" fill="rgb(215,184,50)" rx="2" ry="2" />
<text  x="459.61" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1140.5" y="1893" width="0.2" height="15.0" fill="rgb(211,229,38)" rx="2" ry="2" />
<text  x="1143.47" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="391.0" y="1733" width="0.2" height="15.0" fill="rgb(249,106,53)" rx="2" ry="2" />
<text  x="394.03" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="649.5" y="1957" width="0.2" height="15.0" fill="rgb(240,105,39)" rx="2" ry="2" />
<text  x="652.53" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (13 samples, 0.22%)</title><rect x="23.0" y="1989" width="2.6" height="15.0" fill="rgb(249,71,34)" rx="2" ry="2" />
<text  x="26.04" y="1999.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="473.3" y="1925" width="0.2" height="15.0" fill="rgb(235,36,19)" rx="2" ry="2" />
<text  x="476.26" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="676.6" y="1829" width="0.4" height="15.0" fill="rgb(215,110,14)" rx="2" ry="2" />
<text  x="679.61" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1148.3" y="1717" width="0.2" height="15.0" fill="rgb(249,32,42)" rx="2" ry="2" />
<text  x="1151.29" y="1727.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="246.4" y="1845" width="0.2" height="15.0" fill="rgb(220,164,37)" rx="2" ry="2" />
<text  x="249.44" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="374.4" y="1717" width="0.4" height="15.0" fill="rgb(229,200,3)" rx="2" ry="2" />
<text  x="377.39" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.41%)</title><rect x="98.4" y="1461" width="16.7" height="15.0" fill="rgb(245,26,52)" rx="2" ry="2" />
<text  x="101.44" y="1471.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="740.8" y="1701" width="0.4" height="15.0" fill="rgb(222,99,17)" rx="2" ry="2" />
<text  x="743.78" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1054.0" y="1973" width="0.2" height="15.0" fill="rgb(225,49,43)" rx="2" ry="2" />
<text  x="1057.03" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="148.4" y="1765" width="0.8" height="15.0" fill="rgb(215,38,26)" rx="2" ry="2" />
<text  x="151.38" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(231,188,22)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="545.3" y="1781" width="0.2" height="15.0" fill="rgb(230,180,1)" rx="2" ry="2" />
<text  x="548.25" y="1791.5" ></text>
</g>
<g >
<title>__memchr_avx2 (3 samples, 0.05%)</title><rect x="1153.7" y="1973" width="0.6" height="15.0" fill="rgb(218,182,14)" rx="2" ry="2" />
<text  x="1156.70" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="845.5" y="1925" width="0.4" height="15.0" fill="rgb(212,192,36)" rx="2" ry="2" />
<text  x="848.47" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (22 samples, 0.37%)</title><rect x="952.4" y="1957" width="4.4" height="15.0" fill="rgb(228,198,11)" rx="2" ry="2" />
<text  x="955.36" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="363.6" y="1813" width="0.2" height="15.0" fill="rgb(237,16,26)" rx="2" ry="2" />
<text  x="366.56" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="919.1" y="2005" width="0.8" height="15.0" fill="rgb(225,144,37)" rx="2" ry="2" />
<text  x="922.07" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (4 samples, 0.07%)</title><rect x="851.3" y="1941" width="0.8" height="15.0" fill="rgb(249,216,26)" rx="2" ry="2" />
<text  x="854.28" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (7 samples, 0.12%)</title><rect x="902.2" y="2037" width="1.4" height="15.0" fill="rgb(235,24,28)" rx="2" ry="2" />
<text  x="905.22" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="891.8" y="1893" width="0.4" height="15.0" fill="rgb(242,229,21)" rx="2" ry="2" />
<text  x="894.79" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="856.1" y="1861" width="0.2" height="15.0" fill="rgb(208,100,31)" rx="2" ry="2" />
<text  x="859.09" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (84 samples, 1.43%)</title><rect x="971.2" y="2005" width="16.9" height="15.0" fill="rgb(210,214,19)" rx="2" ry="2" />
<text  x="974.21" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="62.3" y="1861" width="0.2" height="15.0" fill="rgb(233,180,43)" rx="2" ry="2" />
<text  x="65.34" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1100.8" y="1669" width="0.2" height="15.0" fill="rgb(220,30,32)" rx="2" ry="2" />
<text  x="1103.76" y="1679.5" ></text>
</g>
<g >
<title>tcp_push (244 samples, 4.15%)</title><rect x="267.3" y="1877" width="48.9" height="15.0" fill="rgb(248,186,31)" rx="2" ry="2" />
<text  x="270.30" y="1887.5" >tcp_..</text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.6" y="1957" width="0.8" height="15.0" fill="rgb(205,156,50)" rx="2" ry="2" />
<text  x="14.60" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="126.9" y="1813" width="0.2" height="15.0" fill="rgb(226,37,38)" rx="2" ry="2" />
<text  x="129.92" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="25.4" y="1877" width="0.2" height="15.0" fill="rgb(223,199,51)" rx="2" ry="2" />
<text  x="28.44" y="1887.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="74.6" y="1829" width="0.2" height="15.0" fill="rgb(227,184,3)" rx="2" ry="2" />
<text  x="77.58" y="1839.5" ></text>
</g>
<g >
<title>sys_gettid (3 samples, 0.05%)</title><rect x="1163.7" y="1925" width="0.6" height="15.0" fill="rgb(224,181,13)" rx="2" ry="2" />
<text  x="1166.73" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="994.3" y="1861" width="0.2" height="15.0" fill="rgb(209,165,1)" rx="2" ry="2" />
<text  x="997.27" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1090.9" y="1925" width="0.2" height="15.0" fill="rgb(240,186,31)" rx="2" ry="2" />
<text  x="1093.93" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (4 samples, 0.07%)</title><rect x="619.7" y="2021" width="0.8" height="15.0" fill="rgb(216,95,32)" rx="2" ry="2" />
<text  x="622.65" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (2 samples, 0.03%)</title><rect x="39.7" y="1941" width="0.4" height="15.0" fill="rgb(239,19,37)" rx="2" ry="2" />
<text  x="42.68" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="674.8" y="1861" width="0.2" height="15.0" fill="rgb(216,67,21)" rx="2" ry="2" />
<text  x="677.80" y="1871.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="259.9" y="1733" width="0.2" height="15.0" fill="rgb(233,21,27)" rx="2" ry="2" />
<text  x="262.88" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="600.8" y="1861" width="0.2" height="15.0" fill="rgb(229,6,27)" rx="2" ry="2" />
<text  x="603.80" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="849.5" y="1909" width="0.6" height="15.0" fill="rgb(229,87,10)" rx="2" ry="2" />
<text  x="852.48" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="292.4" y="1653" width="0.2" height="15.0" fill="rgb(217,43,37)" rx="2" ry="2" />
<text  x="295.37" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="477.7" y="1909" width="0.2" height="15.0" fill="rgb(242,207,13)" rx="2" ry="2" />
<text  x="480.67" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (3 samples, 0.05%)</title><rect x="914.5" y="2005" width="0.6" height="15.0" fill="rgb(215,85,2)" rx="2" ry="2" />
<text  x="917.45" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (9 samples, 0.15%)</title><rect x="48.3" y="1909" width="1.8" height="15.0" fill="rgb(220,175,18)" rx="2" ry="2" />
<text  x="51.30" y="1919.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (5 samples, 0.08%)</title><rect x="761.0" y="1733" width="1.0" height="15.0" fill="rgb(254,71,54)" rx="2" ry="2" />
<text  x="764.04" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1100.8" y="1845" width="0.2" height="15.0" fill="rgb(212,181,28)" rx="2" ry="2" />
<text  x="1103.76" y="1855.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1128.6" y="1813" width="0.2" height="15.0" fill="rgb(229,42,10)" rx="2" ry="2" />
<text  x="1131.63" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1136.7" y="2037" width="0.2" height="15.0" fill="rgb(206,175,18)" rx="2" ry="2" />
<text  x="1139.66" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="600.8" y="1781" width="0.2" height="15.0" fill="rgb(233,36,53)" rx="2" ry="2" />
<text  x="603.80" y="1791.5" ></text>
</g>
<g >
<title>skb_release_data (31 samples, 0.53%)</title><rect x="1110.6" y="1477" width="6.2" height="15.0" fill="rgb(221,138,36)" rx="2" ry="2" />
<text  x="1113.58" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (47 samples, 0.80%)</title><rect x="1109.0" y="1605" width="9.4" height="15.0" fill="rgb(246,106,17)" rx="2" ry="2" />
<text  x="1111.98" y="1615.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="932.9" y="1589" width="0.2" height="15.0" fill="rgb(234,75,32)" rx="2" ry="2" />
<text  x="935.90" y="1599.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="81.0" y="1941" width="0.2" height="15.0" fill="rgb(214,186,17)" rx="2" ry="2" />
<text  x="83.99" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="363.8" y="1797" width="0.2" height="15.0" fill="rgb(216,68,20)" rx="2" ry="2" />
<text  x="366.76" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="968.0" y="1973" width="0.2" height="15.0" fill="rgb(239,209,43)" rx="2" ry="2" />
<text  x="971.00" y="1983.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="152.6" y="2005" width="0.8" height="15.0" fill="rgb(238,15,5)" rx="2" ry="2" />
<text  x="155.59" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="550.3" y="1941" width="0.2" height="15.0" fill="rgb(222,153,34)" rx="2" ry="2" />
<text  x="553.27" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="649.5" y="1941" width="0.2" height="15.0" fill="rgb(244,11,12)" rx="2" ry="2" />
<text  x="652.53" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1074.9" y="1685" width="0.2" height="15.0" fill="rgb(227,184,44)" rx="2" ry="2" />
<text  x="1077.89" y="1695.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="763.2" y="1733" width="0.6" height="15.0" fill="rgb(206,211,53)" rx="2" ry="2" />
<text  x="766.24" y="1743.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (22 samples, 0.37%)</title><rect x="974.0" y="1989" width="4.4" height="15.0" fill="rgb(218,134,40)" rx="2" ry="2" />
<text  x="977.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="363.6" y="1637" width="0.2" height="15.0" fill="rgb(227,181,20)" rx="2" ry="2" />
<text  x="366.56" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1128.6" y="1941" width="0.2" height="15.0" fill="rgb(253,160,48)" rx="2" ry="2" />
<text  x="1131.63" y="1951.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="39.5" y="1973" width="0.8" height="15.0" fill="rgb(224,177,35)" rx="2" ry="2" />
<text  x="42.48" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="903.2" y="1989" width="0.4" height="15.0" fill="rgb(246,130,7)" rx="2" ry="2" />
<text  x="906.22" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1164.5" y="1749" width="0.2" height="15.0" fill="rgb(218,144,14)" rx="2" ry="2" />
<text  x="1167.53" y="1759.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="681.2" y="2021" width="0.2" height="15.0" fill="rgb(220,154,54)" rx="2" ry="2" />
<text  x="684.22" y="2031.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (2 samples, 0.03%)</title><rect x="962.6" y="2005" width="0.4" height="15.0" fill="rgb(207,198,23)" rx="2" ry="2" />
<text  x="965.58" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="150.4" y="1925" width="0.2" height="15.0" fill="rgb(249,83,28)" rx="2" ry="2" />
<text  x="153.38" y="1935.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="494.1" y="1573" width="0.2" height="15.0" fill="rgb(238,68,0)" rx="2" ry="2" />
<text  x="497.11" y="1583.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="817.2" y="1541" width="0.2" height="15.0" fill="rgb(228,130,47)" rx="2" ry="2" />
<text  x="820.19" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="39.5" y="1957" width="0.6" height="15.0" fill="rgb(248,119,42)" rx="2" ry="2" />
<text  x="42.48" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="51.5" y="1941" width="0.4" height="15.0" fill="rgb(211,18,15)" rx="2" ry="2" />
<text  x="54.51" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="699.9" y="1861" width="0.2" height="15.0" fill="rgb(218,146,37)" rx="2" ry="2" />
<text  x="702.87" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="965" width="16.3" height="15.0" fill="rgb(226,123,13)" rx="2" ry="2" />
<text  x="101.44" y="975.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1100.8" y="1861" width="0.2" height="15.0" fill="rgb(245,190,41)" rx="2" ry="2" />
<text  x="1103.76" y="1871.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (5 samples, 0.08%)</title><rect x="1135.3" y="2053" width="1.0" height="15.0" fill="rgb(248,152,53)" rx="2" ry="2" />
<text  x="1138.25" y="2063.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="153.8" y="2021" width="0.2" height="15.0" fill="rgb(229,93,54)" rx="2" ry="2" />
<text  x="156.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (277 samples, 4.71%)</title><rect x="97.8" y="2021" width="55.6" height="15.0" fill="rgb(244,18,32)" rx="2" ry="2" />
<text  x="100.84" y="2031.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="174.8" y="2021" width="0.2" height="15.0" fill="rgb(246,73,17)" rx="2" ry="2" />
<text  x="177.85" y="2031.5" ></text>
</g>
<g >
<title>ipv4_mtu (8 samples, 0.14%)</title><rect x="317.8" y="1861" width="1.6" height="15.0" fill="rgb(207,175,26)" rx="2" ry="2" />
<text  x="320.83" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="924.5" y="1925" width="0.6" height="15.0" fill="rgb(248,59,24)" rx="2" ry="2" />
<text  x="927.48" y="1935.5" ></text>
</g>
<g >
<title>swiotlb_unmap_page (1 samples, 0.02%)</title><rect x="593.4" y="1813" width="0.2" height="15.0" fill="rgb(244,118,12)" rx="2" ry="2" />
<text  x="596.38" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="992.3" y="1957" width="0.4" height="15.0" fill="rgb(235,170,45)" rx="2" ry="2" />
<text  x="995.26" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="315.4" y="1525" width="0.2" height="15.0" fill="rgb(215,55,20)" rx="2" ry="2" />
<text  x="318.43" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="374.4" y="1925" width="0.4" height="15.0" fill="rgb(217,42,15)" rx="2" ry="2" />
<text  x="377.39" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="950.4" y="1893" width="0.2" height="15.0" fill="rgb(236,118,50)" rx="2" ry="2" />
<text  x="953.35" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="113.3" y="53" width="0.4" height="15.0" fill="rgb(210,51,26)" rx="2" ry="2" />
<text  x="116.28" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1142.9" y="1989" width="0.2" height="15.0" fill="rgb(229,112,32)" rx="2" ry="2" />
<text  x="1145.87" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (73 samples, 1.24%)</title><rect x="1075.5" y="1909" width="14.6" height="15.0" fill="rgb(249,175,53)" rx="2" ry="2" />
<text  x="1078.49" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1083.3" y="1701" width="0.2" height="15.0" fill="rgb(230,15,4)" rx="2" ry="2" />
<text  x="1086.31" y="1711.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (22 samples, 0.37%)</title><rect x="959.2" y="2037" width="4.4" height="15.0" fill="rgb(224,98,19)" rx="2" ry="2" />
<text  x="962.17" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="140.6" y="1893" width="0.2" height="15.0" fill="rgb(247,4,32)" rx="2" ry="2" />
<text  x="143.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (2 samples, 0.03%)</title><rect x="625.7" y="2037" width="0.4" height="15.0" fill="rgb(237,197,45)" rx="2" ry="2" />
<text  x="628.67" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="916.3" y="2021" width="1.2" height="15.0" fill="rgb(205,117,15)" rx="2" ry="2" />
<text  x="919.26" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="832.6" y="1621" width="0.2" height="15.0" fill="rgb(244,11,32)" rx="2" ry="2" />
<text  x="835.63" y="1631.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_device (1 samples, 0.02%)</title><rect x="266.5" y="1749" width="0.2" height="15.0" fill="rgb(227,188,14)" rx="2" ry="2" />
<text  x="269.50" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1013" width="16.3" height="15.0" fill="rgb(230,157,22)" rx="2" ry="2" />
<text  x="101.44" y="1023.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="107.9" y="53" width="0.6" height="15.0" fill="rgb(232,99,16)" rx="2" ry="2" />
<text  x="110.87" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="511.8" y="1973" width="0.2" height="15.0" fill="rgb(232,143,9)" rx="2" ry="2" />
<text  x="514.76" y="1983.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="400.1" y="1893" width="0.4" height="15.0" fill="rgb(238,186,48)" rx="2" ry="2" />
<text  x="403.06" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.1" y="1749" width="0.2" height="15.0" fill="rgb(243,135,53)" rx="2" ry="2" />
<text  x="844.05" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="950.4" y="2005" width="0.8" height="15.0" fill="rgb(233,128,13)" rx="2" ry="2" />
<text  x="953.35" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="394.2" y="1893" width="0.2" height="15.0" fill="rgb(206,213,49)" rx="2" ry="2" />
<text  x="397.24" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (24 samples, 0.41%)</title><rect x="156.4" y="2021" width="4.8" height="15.0" fill="rgb(214,169,4)" rx="2" ry="2" />
<text  x="159.40" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8 samples, 0.14%)</title><rect x="217.8" y="1893" width="1.6" height="15.0" fill="rgb(235,38,45)" rx="2" ry="2" />
<text  x="220.76" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="210.9" y="1797" width="0.2" height="15.0" fill="rgb(245,195,30)" rx="2" ry="2" />
<text  x="213.94" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (19 samples, 0.32%)</title><rect x="1147.5" y="2005" width="3.8" height="15.0" fill="rgb(239,178,8)" rx="2" ry="2" />
<text  x="1150.48" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="624.3" y="1973" width="0.2" height="15.0" fill="rgb(220,36,9)" rx="2" ry="2" />
<text  x="627.27" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1122.6" y="1765" width="0.2" height="15.0" fill="rgb(252,14,38)" rx="2" ry="2" />
<text  x="1125.62" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="600.8" y="1733" width="0.2" height="15.0" fill="rgb(245,62,44)" rx="2" ry="2" />
<text  x="603.80" y="1743.5" ></text>
</g>
<g >
<title>__fdget (10 samples, 0.17%)</title><rect x="324.7" y="1941" width="2.0" height="15.0" fill="rgb(215,206,23)" rx="2" ry="2" />
<text  x="327.65" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="133.7" y="1941" width="0.2" height="15.0" fill="rgb(225,20,24)" rx="2" ry="2" />
<text  x="136.74" y="1951.5" ></text>
</g>
<g >
<title>remove_wait_queue (21 samples, 0.36%)</title><rect x="464.2" y="1941" width="4.2" height="15.0" fill="rgb(211,186,42)" rx="2" ry="2" />
<text  x="467.23" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="174.4" y="2021" width="0.4" height="15.0" fill="rgb(220,155,40)" rx="2" ry="2" />
<text  x="177.45" y="2031.5" ></text>
</g>
<g >
<title>epoll_wait (81 samples, 1.38%)</title><rect x="484.7" y="2037" width="16.2" height="15.0" fill="rgb(206,134,17)" rx="2" ry="2" />
<text  x="487.69" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="741.6" y="1685" width="0.2" height="15.0" fill="rgb(223,179,12)" rx="2" ry="2" />
<text  x="744.58" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="542.2" y="1829" width="0.2" height="15.0" fill="rgb(208,198,0)" rx="2" ry="2" />
<text  x="545.24" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="678.0" y="1765" width="0.2" height="15.0" fill="rgb(238,175,31)" rx="2" ry="2" />
<text  x="681.01" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="205.9" y="1861" width="0.2" height="15.0" fill="rgb(212,191,8)" rx="2" ry="2" />
<text  x="208.93" y="1871.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="600.8" y="1557" width="0.2" height="15.0" fill="rgb(243,136,7)" rx="2" ry="2" />
<text  x="603.80" y="1567.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="72.6" y="1941" width="0.2" height="15.0" fill="rgb(206,93,33)" rx="2" ry="2" />
<text  x="75.57" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1091.5" y="1909" width="0.2" height="15.0" fill="rgb(249,45,7)" rx="2" ry="2" />
<text  x="1094.53" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="405.5" y="1717" width="0.2" height="15.0" fill="rgb(254,227,44)" rx="2" ry="2" />
<text  x="408.47" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="12.6" y="2021" width="1.0" height="15.0" fill="rgb(238,180,24)" rx="2" ry="2" />
<text  x="15.61" y="2031.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (3 samples, 0.05%)</title><rect x="937.1" y="1941" width="0.6" height="15.0" fill="rgb(220,94,13)" rx="2" ry="2" />
<text  x="940.11" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="520.6" y="1957" width="0.8" height="15.0" fill="rgb(243,42,32)" rx="2" ry="2" />
<text  x="523.58" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1091.5" y="1749" width="0.2" height="15.0" fill="rgb(238,96,21)" rx="2" ry="2" />
<text  x="1094.53" y="1759.5" ></text>
</g>
<g >
<title>security_socket_accept (3 samples, 0.05%)</title><rect x="377.8" y="1957" width="0.6" height="15.0" fill="rgb(245,28,2)" rx="2" ry="2" />
<text  x="380.80" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1164.5" y="1669" width="0.2" height="15.0" fill="rgb(231,82,8)" rx="2" ry="2" />
<text  x="1167.53" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="24.4" y="1797" width="0.2" height="15.0" fill="rgb(215,34,8)" rx="2" ry="2" />
<text  x="27.44" y="1807.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="381.2" y="1621" width="0.2" height="15.0" fill="rgb(210,181,6)" rx="2" ry="2" />
<text  x="384.21" y="1631.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="634.9" y="1973" width="0.6" height="15.0" fill="rgb(207,152,47)" rx="2" ry="2" />
<text  x="637.89" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="667.6" y="1877" width="0.2" height="15.0" fill="rgb(237,226,24)" rx="2" ry="2" />
<text  x="670.58" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="24.4" y="1781" width="0.2" height="15.0" fill="rgb(241,200,52)" rx="2" ry="2" />
<text  x="27.44" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="575.3" y="1941" width="0.2" height="15.0" fill="rgb(215,222,40)" rx="2" ry="2" />
<text  x="578.33" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="530.0" y="1925" width="0.2" height="15.0" fill="rgb(250,56,2)" rx="2" ry="2" />
<text  x="533.01" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1055.8" y="1957" width="0.2" height="15.0" fill="rgb(252,36,25)" rx="2" ry="2" />
<text  x="1058.84" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="274.1" y="1765" width="0.2" height="15.0" fill="rgb(253,200,25)" rx="2" ry="2" />
<text  x="277.12" y="1775.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1183.2" y="1941" width="0.2" height="15.0" fill="rgb(224,166,34)" rx="2" ry="2" />
<text  x="1186.18" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="40.1" y="1957" width="0.2" height="15.0" fill="rgb(234,101,51)" rx="2" ry="2" />
<text  x="43.08" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="549" width="16.1" height="15.0" fill="rgb(216,117,40)" rx="2" ry="2" />
<text  x="101.44" y="559.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="750.6" y="1765" width="0.2" height="15.0" fill="rgb(232,179,32)" rx="2" ry="2" />
<text  x="753.61" y="1775.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="898.8" y="2005" width="0.2" height="15.0" fill="rgb(217,13,26)" rx="2" ry="2" />
<text  x="901.81" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="889.6" y="1893" width="0.2" height="15.0" fill="rgb(254,133,48)" rx="2" ry="2" />
<text  x="892.59" y="1903.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="178.9" y="2021" width="0.2" height="15.0" fill="rgb(247,54,41)" rx="2" ry="2" />
<text  x="181.86" y="2031.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.02%)</title><rect x="839.9" y="1797" width="0.2" height="15.0" fill="rgb(237,74,21)" rx="2" ry="2" />
<text  x="842.85" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="75.6" y="1717" width="0.2" height="15.0" fill="rgb(243,63,32)" rx="2" ry="2" />
<text  x="78.58" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="918.5" y="1781" width="0.2" height="15.0" fill="rgb(209,224,42)" rx="2" ry="2" />
<text  x="921.46" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (6 samples, 0.10%)</title><rect x="39.1" y="1989" width="1.2" height="15.0" fill="rgb(232,16,39)" rx="2" ry="2" />
<text  x="42.08" y="1999.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.4" y="1861" width="0.2" height="15.0" fill="rgb(210,42,17)" rx="2" ry="2" />
<text  x="892.38" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="146.0" y="1813" width="0.2" height="15.0" fill="rgb(206,36,43)" rx="2" ry="2" />
<text  x="148.97" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.20%)</title><rect x="611.4" y="1861" width="2.4" height="15.0" fill="rgb(209,93,34)" rx="2" ry="2" />
<text  x="614.43" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1148.3" y="1765" width="0.2" height="15.0" fill="rgb(214,61,14)" rx="2" ry="2" />
<text  x="1151.29" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="220.0" y="1925" width="0.4" height="15.0" fill="rgb(234,119,54)" rx="2" ry="2" />
<text  x="222.97" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="848.7" y="1909" width="0.4" height="15.0" fill="rgb(215,18,24)" rx="2" ry="2" />
<text  x="851.67" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (357 samples, 6.07%)</title><rect x="18.2" y="2037" width="71.6" height="15.0" fill="rgb(209,56,20)" rx="2" ry="2" />
<text  x="21.22" y="2047.5" >folly::E..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="994.3" y="1509" width="0.2" height="15.0" fill="rgb(205,127,27)" rx="2" ry="2" />
<text  x="997.27" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="148.0" y="1861" width="0.2" height="15.0" fill="rgb(249,44,13)" rx="2" ry="2" />
<text  x="150.97" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="531.2" y="1925" width="0.4" height="15.0" fill="rgb(237,113,25)" rx="2" ry="2" />
<text  x="534.21" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="324.7" y="1957" width="2.0" height="15.0" fill="rgb(237,75,53)" rx="2" ry="2" />
<text  x="327.65" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="593.4" y="1845" width="0.2" height="15.0" fill="rgb(240,138,53)" rx="2" ry="2" />
<text  x="596.38" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="579.7" y="1621" width="0.2" height="15.0" fill="rgb(239,45,12)" rx="2" ry="2" />
<text  x="582.75" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="75.0" y="1957" width="0.2" height="15.0" fill="rgb(217,40,9)" rx="2" ry="2" />
<text  x="77.98" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="857.3" y="1861" width="0.4" height="15.0" fill="rgb(222,3,25)" rx="2" ry="2" />
<text  x="860.30" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="131.5" y="1813" width="0.2" height="15.0" fill="rgb(239,174,34)" rx="2" ry="2" />
<text  x="134.53" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="126.9" y="1781" width="0.2" height="15.0" fill="rgb(251,20,23)" rx="2" ry="2" />
<text  x="129.92" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="662.6" y="2037" width="0.2" height="15.0" fill="rgb(239,80,49)" rx="2" ry="2" />
<text  x="665.57" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="173.6" y="1925" width="0.2" height="15.0" fill="rgb(227,64,41)" rx="2" ry="2" />
<text  x="176.64" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="890.4" y="1861" width="0.2" height="15.0" fill="rgb(243,157,9)" rx="2" ry="2" />
<text  x="893.39" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="992.3" y="1941" width="0.2" height="15.0" fill="rgb(252,28,23)" rx="2" ry="2" />
<text  x="995.26" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="126.9" y="1717" width="0.2" height="15.0" fill="rgb(218,192,10)" rx="2" ry="2" />
<text  x="129.92" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="327.1" y="1973" width="0.4" height="15.0" fill="rgb(233,157,1)" rx="2" ry="2" />
<text  x="330.06" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="757.8" y="1653" width="0.2" height="15.0" fill="rgb(226,7,42)" rx="2" ry="2" />
<text  x="760.83" y="1663.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="918.1" y="2005" width="0.2" height="15.0" fill="rgb(220,46,2)" rx="2" ry="2" />
<text  x="921.06" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="193.7" y="1941" width="0.2" height="15.0" fill="rgb(249,92,52)" rx="2" ry="2" />
<text  x="196.70" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="306.4" y="1621" width="0.2" height="15.0" fill="rgb(231,57,27)" rx="2" ry="2" />
<text  x="309.40" y="1631.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="583.8" y="1909" width="0.2" height="15.0" fill="rgb(229,44,51)" rx="2" ry="2" />
<text  x="586.76" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1148.3" y="1877" width="0.2" height="15.0" fill="rgb(251,213,12)" rx="2" ry="2" />
<text  x="1151.29" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="661.0" y="2021" width="0.2" height="15.0" fill="rgb(253,20,30)" rx="2" ry="2" />
<text  x="663.97" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="517.4" y="1973" width="0.6" height="15.0" fill="rgb(236,57,10)" rx="2" ry="2" />
<text  x="520.38" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="206.1" y="1861" width="0.4" height="15.0" fill="rgb(212,190,42)" rx="2" ry="2" />
<text  x="209.13" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="143.2" y="1653" width="0.2" height="15.0" fill="rgb(237,174,3)" rx="2" ry="2" />
<text  x="146.16" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="210.9" y="1701" width="0.2" height="15.0" fill="rgb(227,40,16)" rx="2" ry="2" />
<text  x="213.94" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="918.5" y="1845" width="0.2" height="15.0" fill="rgb(229,44,44)" rx="2" ry="2" />
<text  x="921.46" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="24.4" y="1909" width="0.2" height="15.0" fill="rgb(235,101,19)" rx="2" ry="2" />
<text  x="27.44" y="1919.5" ></text>
</g>
<g >
<title>__alloc_skb (21 samples, 0.36%)</title><rect x="766.3" y="1717" width="4.2" height="15.0" fill="rgb(233,29,1)" rx="2" ry="2" />
<text  x="769.25" y="1727.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (5 samples, 0.08%)</title><rect x="215.4" y="1813" width="1.0" height="15.0" fill="rgb(207,95,17)" rx="2" ry="2" />
<text  x="218.36" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="77.8" y="1925" width="0.2" height="15.0" fill="rgb(232,160,54)" rx="2" ry="2" />
<text  x="80.78" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="643.3" y="1925" width="0.8" height="15.0" fill="rgb(234,217,31)" rx="2" ry="2" />
<text  x="646.32" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="118.3" y="1909" width="0.2" height="15.0" fill="rgb(208,228,40)" rx="2" ry="2" />
<text  x="121.29" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="89.6" y="2021" width="0.2" height="15.0" fill="rgb(218,50,28)" rx="2" ry="2" />
<text  x="92.62" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="112.3" y="69" width="0.8" height="15.0" fill="rgb(246,133,28)" rx="2" ry="2" />
<text  x="115.28" y="79.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (9 samples, 0.15%)</title><rect x="66.4" y="1893" width="1.8" height="15.0" fill="rgb(210,184,50)" rx="2" ry="2" />
<text  x="69.35" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="149.4" y="1941" width="0.2" height="15.0" fill="rgb(247,144,34)" rx="2" ry="2" />
<text  x="152.38" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="80.4" y="1925" width="0.4" height="15.0" fill="rgb(210,107,8)" rx="2" ry="2" />
<text  x="83.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (28 samples, 0.48%)</title><rect x="1146.1" y="2021" width="5.6" height="15.0" fill="rgb(230,156,24)" rx="2" ry="2" />
<text  x="1149.08" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="854.7" y="1909" width="0.2" height="15.0" fill="rgb(219,175,27)" rx="2" ry="2" />
<text  x="857.69" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="210.9" y="1749" width="0.2" height="15.0" fill="rgb(205,163,32)" rx="2" ry="2" />
<text  x="213.94" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="621.5" y="2021" width="0.2" height="15.0" fill="rgb(239,24,4)" rx="2" ry="2" />
<text  x="624.46" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="906.2" y="1957" width="0.6" height="15.0" fill="rgb(254,136,13)" rx="2" ry="2" />
<text  x="909.23" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1144.5" y="1973" width="0.2" height="15.0" fill="rgb(230,37,19)" rx="2" ry="2" />
<text  x="1147.48" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="707.7" y="1941" width="0.2" height="15.0" fill="rgb(246,218,13)" rx="2" ry="2" />
<text  x="710.69" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="223.2" y="2037" width="0.4" height="15.0" fill="rgb(218,222,15)" rx="2" ry="2" />
<text  x="226.18" y="2047.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="476.9" y="1957" width="0.2" height="15.0" fill="rgb(221,115,1)" rx="2" ry="2" />
<text  x="479.87" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1164.5" y="1573" width="0.2" height="15.0" fill="rgb(205,165,12)" rx="2" ry="2" />
<text  x="1167.53" y="1583.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="88.4" y="1989" width="0.2" height="15.0" fill="rgb(220,124,22)" rx="2" ry="2" />
<text  x="91.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="917.3" y="2005" width="0.2" height="15.0" fill="rgb(247,158,8)" rx="2" ry="2" />
<text  x="920.26" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="1183.2" y="2005" width="0.6" height="15.0" fill="rgb(230,159,17)" rx="2" ry="2" />
<text  x="1186.18" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="83.0" y="1957" width="0.2" height="15.0" fill="rgb(205,14,40)" rx="2" ry="2" />
<text  x="86.00" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (126 samples, 2.14%)</title><rect x="196.7" y="1973" width="25.3" height="15.0" fill="rgb(220,79,10)" rx="2" ry="2" />
<text  x="199.71" y="1983.5" >f..</text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (3 samples, 0.05%)</title><rect x="1168.1" y="2053" width="0.6" height="15.0" fill="rgb(227,37,7)" rx="2" ry="2" />
<text  x="1171.14" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="832.6" y="1413" width="0.2" height="15.0" fill="rgb(213,176,18)" rx="2" ry="2" />
<text  x="835.63" y="1423.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(234,48,30)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="315.4" y="1589" width="0.2" height="15.0" fill="rgb(237,58,12)" rx="2" ry="2" />
<text  x="318.43" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (3 samples, 0.05%)</title><rect x="210.5" y="1877" width="0.6" height="15.0" fill="rgb(218,114,6)" rx="2" ry="2" />
<text  x="213.54" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="113.1" y="37" width="0.2" height="15.0" fill="rgb(212,160,38)" rx="2" ry="2" />
<text  x="116.08" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="649.5" y="1765" width="0.2" height="15.0" fill="rgb(218,215,51)" rx="2" ry="2" />
<text  x="652.53" y="1775.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="704.9" y="1957" width="0.2" height="15.0" fill="rgb(234,218,21)" rx="2" ry="2" />
<text  x="707.88" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="363.6" y="1781" width="0.2" height="15.0" fill="rgb(222,119,17)" rx="2" ry="2" />
<text  x="366.56" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (1 samples, 0.02%)</title><rect x="17.6" y="2037" width="0.2" height="15.0" fill="rgb(209,174,30)" rx="2" ry="2" />
<text  x="20.62" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="523.4" y="1957" width="1.6" height="15.0" fill="rgb(249,110,5)" rx="2" ry="2" />
<text  x="526.39" y="1967.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="81.0" y="1957" width="0.2" height="15.0" fill="rgb(218,149,3)" rx="2" ry="2" />
<text  x="83.99" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="17.8" y="2037" width="0.4" height="15.0" fill="rgb(240,96,11)" rx="2" ry="2" />
<text  x="20.82" y="2047.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="871.1" y="2005" width="0.2" height="15.0" fill="rgb(207,152,21)" rx="2" ry="2" />
<text  x="874.14" y="2015.5" ></text>
</g>
<g >
<title>event_assign (6 samples, 0.10%)</title><rect x="154.0" y="2021" width="1.2" height="15.0" fill="rgb(225,198,33)" rx="2" ry="2" />
<text  x="156.99" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.14%)</title><rect x="711.5" y="1877" width="1.6" height="15.0" fill="rgb(228,85,22)" rx="2" ry="2" />
<text  x="714.50" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="721.9" y="1877" width="0.4" height="15.0" fill="rgb(216,136,25)" rx="2" ry="2" />
<text  x="724.93" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="946.7" y="2005" width="0.4" height="15.0" fill="rgb(234,153,47)" rx="2" ry="2" />
<text  x="949.74" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="363.6" y="1797" width="0.2" height="15.0" fill="rgb(239,111,1)" rx="2" ry="2" />
<text  x="366.56" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="243.2" y="1829" width="0.2" height="15.0" fill="rgb(236,227,39)" rx="2" ry="2" />
<text  x="246.23" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="665.6" y="1957" width="2.2" height="15.0" fill="rgb(233,87,16)" rx="2" ry="2" />
<text  x="668.58" y="1967.5" ></text>
</g>
<g >
<title>__mutex_init (1 samples, 0.02%)</title><rect x="388.8" y="1925" width="0.2" height="15.0" fill="rgb(249,27,53)" rx="2" ry="2" />
<text  x="391.83" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="24.6" y="1861" width="0.8" height="15.0" fill="rgb(243,103,23)" rx="2" ry="2" />
<text  x="27.64" y="1871.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="927.1" y="1877" width="0.2" height="15.0" fill="rgb(209,41,14)" rx="2" ry="2" />
<text  x="930.09" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="24.6" y="1845" width="0.8" height="15.0" fill="rgb(234,9,5)" rx="2" ry="2" />
<text  x="27.64" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="762.2" y="1717" width="0.8" height="15.0" fill="rgb(249,48,47)" rx="2" ry="2" />
<text  x="765.24" y="1727.5" ></text>
</g>
<g >
<title>malloc (18 samples, 0.31%)</title><rect x="1186.2" y="2053" width="3.6" height="15.0" fill="rgb(210,95,19)" rx="2" ry="2" />
<text  x="1189.19" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (11 samples, 0.19%)</title><rect x="855.5" y="1925" width="2.2" height="15.0" fill="rgb(253,17,9)" rx="2" ry="2" />
<text  x="858.49" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="301.0" y="1717" width="0.2" height="15.0" fill="rgb(206,142,29)" rx="2" ry="2" />
<text  x="303.99" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="315.4" y="1653" width="0.2" height="15.0" fill="rgb(225,21,24)" rx="2" ry="2" />
<text  x="318.43" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="951.2" y="2005" width="0.2" height="15.0" fill="rgb(251,4,17)" rx="2" ry="2" />
<text  x="954.15" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1155.5" y="1813" width="0.2" height="15.0" fill="rgb(221,65,33)" rx="2" ry="2" />
<text  x="1158.51" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="644.1" y="1909" width="0.4" height="15.0" fill="rgb(249,24,23)" rx="2" ry="2" />
<text  x="647.12" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="124.3" y="1989" width="0.2" height="15.0" fill="rgb(252,222,0)" rx="2" ry="2" />
<text  x="127.31" y="1999.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="813.4" y="1685" width="0.2" height="15.0" fill="rgb(247,131,20)" rx="2" ry="2" />
<text  x="816.38" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="832.6" y="1653" width="0.2" height="15.0" fill="rgb(206,214,11)" rx="2" ry="2" />
<text  x="835.63" y="1663.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1002.3" y="2005" width="0.2" height="15.0" fill="rgb(221,205,44)" rx="2" ry="2" />
<text  x="1005.29" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="146.0" y="1717" width="0.2" height="15.0" fill="rgb(251,21,23)" rx="2" ry="2" />
<text  x="148.97" y="1727.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="814.0" y="1429" width="0.2" height="15.0" fill="rgb(240,157,0)" rx="2" ry="2" />
<text  x="816.98" y="1439.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="113.1" y="53" width="0.2" height="15.0" fill="rgb(231,89,50)" rx="2" ry="2" />
<text  x="116.08" y="63.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="210.9" y="1653" width="0.2" height="15.0" fill="rgb(232,191,31)" rx="2" ry="2" />
<text  x="213.94" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="633.7" y="2005" width="0.2" height="15.0" fill="rgb(238,181,38)" rx="2" ry="2" />
<text  x="636.69" y="2015.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="390.8" y="1765" width="0.2" height="15.0" fill="rgb(233,74,15)" rx="2" ry="2" />
<text  x="393.83" y="1775.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1117.8" y="1509" width="0.2" height="15.0" fill="rgb(213,62,29)" rx="2" ry="2" />
<text  x="1120.80" y="1519.5" ></text>
</g>
<g >
<title>__dentry_kill (69 samples, 1.17%)</title><rect x="735.8" y="1765" width="13.8" height="15.0" fill="rgb(227,172,23)" rx="2" ry="2" />
<text  x="738.77" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="143.2" y="1701" width="0.2" height="15.0" fill="rgb(213,0,34)" rx="2" ry="2" />
<text  x="146.16" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="886.8" y="1909" width="0.2" height="15.0" fill="rgb(206,30,20)" rx="2" ry="2" />
<text  x="889.78" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="133.7" y="1909" width="0.2" height="15.0" fill="rgb(242,90,41)" rx="2" ry="2" />
<text  x="136.74" y="1919.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.02%)</title><rect x="114.3" y="53" width="0.2" height="15.0" fill="rgb(205,114,43)" rx="2" ry="2" />
<text  x="117.28" y="63.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="857.1" y="1797" width="0.2" height="15.0" fill="rgb(216,27,2)" rx="2" ry="2" />
<text  x="860.10" y="1807.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="223.6" y="2037" width="0.2" height="15.0" fill="rgb(205,75,15)" rx="2" ry="2" />
<text  x="226.58" y="2047.5" ></text>
</g>
<g >
<title>sys_getpeername (17 samples, 0.29%)</title><rect x="674.4" y="1893" width="3.4" height="15.0" fill="rgb(238,204,24)" rx="2" ry="2" />
<text  x="677.40" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="625.1" y="1925" width="0.2" height="15.0" fill="rgb(208,129,12)" rx="2" ry="2" />
<text  x="628.07" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="612.4" y="1829" width="0.2" height="15.0" fill="rgb(250,48,13)" rx="2" ry="2" />
<text  x="615.43" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="994.3" y="1765" width="0.2" height="15.0" fill="rgb(222,152,28)" rx="2" ry="2" />
<text  x="997.27" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="925.3" y="1941" width="0.4" height="15.0" fill="rgb(221,31,2)" rx="2" ry="2" />
<text  x="928.28" y="1951.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (4 samples, 0.07%)</title><rect x="691.4" y="1925" width="0.9" height="15.0" fill="rgb(226,166,30)" rx="2" ry="2" />
<text  x="694.45" y="1935.5" ></text>
</g>
<g >
<title>__GI___setsockopt (15 samples, 0.25%)</title><rect x="198.9" y="1957" width="3.0" height="15.0" fill="rgb(222,189,43)" rx="2" ry="2" />
<text  x="201.91" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="817.2" y="1589" width="0.2" height="15.0" fill="rgb(243,161,32)" rx="2" ry="2" />
<text  x="820.19" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.14%)</title><rect x="634.7" y="1989" width="1.6" height="15.0" fill="rgb(249,159,18)" rx="2" ry="2" />
<text  x="637.69" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="26.8" y="1973" width="0.4" height="15.0" fill="rgb(229,195,31)" rx="2" ry="2" />
<text  x="29.85" y="1983.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr@plt (1 samples, 0.02%)</title><rect x="935.1" y="1909" width="0.2" height="15.0" fill="rgb(246,157,19)" rx="2" ry="2" />
<text  x="938.11" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (103 samples, 1.75%)</title><rect x="502.3" y="2037" width="20.7" height="15.0" fill="rgb(216,151,32)" rx="2" ry="2" />
<text  x="505.34" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="272.5" y="1797" width="0.2" height="15.0" fill="rgb(242,120,54)" rx="2" ry="2" />
<text  x="275.51" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="935.9" y="1957" width="0.2" height="15.0" fill="rgb(213,186,16)" rx="2" ry="2" />
<text  x="938.91" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="823.8" y="1717" width="0.2" height="15.0" fill="rgb(227,61,39)" rx="2" ry="2" />
<text  x="826.81" y="1727.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="390.8" y="1797" width="0.2" height="15.0" fill="rgb(253,175,10)" rx="2" ry="2" />
<text  x="393.83" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="494.1" y="1605" width="0.2" height="15.0" fill="rgb(234,34,38)" rx="2" ry="2" />
<text  x="497.11" y="1615.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (50 samples, 0.85%)</title><rect x="1108.6" y="1765" width="10.0" height="15.0" fill="rgb(244,213,38)" rx="2" ry="2" />
<text  x="1111.58" y="1775.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1118.8" y="1749" width="0.2" height="15.0" fill="rgb(246,187,25)" rx="2" ry="2" />
<text  x="1121.81" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (48 samples, 0.82%)</title><rect x="164.4" y="2005" width="9.6" height="15.0" fill="rgb(218,223,14)" rx="2" ry="2" />
<text  x="167.42" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1083.3" y="1829" width="0.2" height="15.0" fill="rgb(241,7,27)" rx="2" ry="2" />
<text  x="1086.31" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="633.5" y="1941" width="0.2" height="15.0" fill="rgb(233,186,49)" rx="2" ry="2" />
<text  x="636.49" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="30.7" y="1957" width="0.4" height="15.0" fill="rgb(227,202,40)" rx="2" ry="2" />
<text  x="33.66" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1093.7" y="1861" width="0.2" height="15.0" fill="rgb(239,182,0)" rx="2" ry="2" />
<text  x="1096.74" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="541.4" y="1669" width="0.2" height="15.0" fill="rgb(217,152,10)" rx="2" ry="2" />
<text  x="544.44" y="1679.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="260.7" y="1829" width="0.6" height="15.0" fill="rgb(235,143,5)" rx="2" ry="2" />
<text  x="263.68" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="773" width="16.3" height="15.0" fill="rgb(218,220,51)" rx="2" ry="2" />
<text  x="101.44" y="783.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="717.7" y="1941" width="0.2" height="15.0" fill="rgb(238,145,22)" rx="2" ry="2" />
<text  x="720.72" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="963.2" y="1957" width="0.2" height="15.0" fill="rgb(208,63,14)" rx="2" ry="2" />
<text  x="966.18" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="967.6" y="2037" width="0.2" height="15.0" fill="rgb(249,187,16)" rx="2" ry="2" />
<text  x="970.60" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="475.5" y="1781" width="0.2" height="15.0" fill="rgb(243,37,52)" rx="2" ry="2" />
<text  x="478.46" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="62.3" y="1797" width="0.2" height="15.0" fill="rgb(236,151,6)" rx="2" ry="2" />
<text  x="65.34" y="1807.5" ></text>
</g>
<g >
<title>tcp_setsockopt (26 samples, 0.44%)</title><rect x="692.7" y="1909" width="5.2" height="15.0" fill="rgb(241,155,8)" rx="2" ry="2" />
<text  x="695.65" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="171.2" y="1973" width="0.2" height="15.0" fill="rgb(246,54,28)" rx="2" ry="2" />
<text  x="174.24" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (27 samples, 0.46%)</title><rect x="814.8" y="1637" width="5.4" height="15.0" fill="rgb(223,93,5)" rx="2" ry="2" />
<text  x="817.78" y="1647.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (21 samples, 0.36%)</title><rect x="182.7" y="2037" width="4.2" height="15.0" fill="rgb(252,23,30)" rx="2" ry="2" />
<text  x="185.67" y="2047.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="754.8" y="1749" width="0.2" height="15.0" fill="rgb(230,95,9)" rx="2" ry="2" />
<text  x="757.82" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1075.3" y="1829" width="0.2" height="15.0" fill="rgb(239,199,44)" rx="2" ry="2" />
<text  x="1078.29" y="1839.5" ></text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.10%)</title><rect x="473.1" y="1957" width="1.2" height="15.0" fill="rgb(249,80,38)" rx="2" ry="2" />
<text  x="476.06" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="666.6" y="1813" width="0.8" height="15.0" fill="rgb(234,132,39)" rx="2" ry="2" />
<text  x="669.58" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="131.5" y="1893" width="0.8" height="15.0" fill="rgb(221,59,46)" rx="2" ry="2" />
<text  x="134.53" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="524.6" y="1941" width="0.2" height="15.0" fill="rgb(244,161,34)" rx="2" ry="2" />
<text  x="527.60" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="509.8" y="1941" width="0.8" height="15.0" fill="rgb(230,40,11)" rx="2" ry="2" />
<text  x="512.76" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.05%)</title><rect x="399.5" y="1893" width="0.6" height="15.0" fill="rgb(236,154,37)" rx="2" ry="2" />
<text  x="402.46" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="521.8" y="1861" width="0.8" height="15.0" fill="rgb(237,55,33)" rx="2" ry="2" />
<text  x="524.79" y="1871.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (22 samples, 0.37%)</title><rect x="693.5" y="1893" width="4.4" height="15.0" fill="rgb(226,196,29)" rx="2" ry="2" />
<text  x="696.45" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="108.5" y="37" width="0.2" height="15.0" fill="rgb(242,91,25)" rx="2" ry="2" />
<text  x="111.47" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="583.2" y="1813" width="0.2" height="15.0" fill="rgb(206,199,31)" rx="2" ry="2" />
<text  x="586.15" y="1823.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.6" y="1861" width="0.8" height="15.0" fill="rgb(208,70,14)" rx="2" ry="2" />
<text  x="14.60" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="77.0" y="1893" width="0.4" height="15.0" fill="rgb(238,26,51)" rx="2" ry="2" />
<text  x="79.98" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="405.5" y="1925" width="0.2" height="15.0" fill="rgb(209,165,35)" rx="2" ry="2" />
<text  x="408.47" y="1935.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (3 samples, 0.05%)</title><rect x="515.0" y="1925" width="0.6" height="15.0" fill="rgb(249,183,31)" rx="2" ry="2" />
<text  x="517.97" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (2 samples, 0.03%)</title><rect x="844.9" y="1925" width="0.4" height="15.0" fill="rgb(239,217,4)" rx="2" ry="2" />
<text  x="847.86" y="1935.5" ></text>
</g>
<g >
<title>move_addr_to_user (5 samples, 0.08%)</title><rect x="596.6" y="1861" width="1.0" height="15.0" fill="rgb(206,130,4)" rx="2" ry="2" />
<text  x="599.59" y="1871.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (58 samples, 0.99%)</title><rect x="488.5" y="1925" width="11.6" height="15.0" fill="rgb(253,191,32)" rx="2" ry="2" />
<text  x="491.50" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="852.5" y="1893" width="0.2" height="15.0" fill="rgb(215,142,33)" rx="2" ry="2" />
<text  x="855.48" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="478.7" y="1829" width="0.2" height="15.0" fill="rgb(207,172,17)" rx="2" ry="2" />
<text  x="481.67" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (39 samples, 0.66%)</title><rect x="796.5" y="1525" width="7.9" height="15.0" fill="rgb(208,132,32)" rx="2" ry="2" />
<text  x="799.53" y="1535.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (33 samples, 0.56%)</title><rect x="813.6" y="1685" width="6.6" height="15.0" fill="rgb(219,188,44)" rx="2" ry="2" />
<text  x="816.58" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.5" y="1893" width="0.2" height="15.0" fill="rgb(210,13,54)" rx="2" ry="2" />
<text  x="478.46" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1148.3" y="1781" width="0.2" height="15.0" fill="rgb(232,170,44)" rx="2" ry="2" />
<text  x="1151.29" y="1791.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="856.1" y="1637" width="0.2" height="15.0" fill="rgb(253,209,43)" rx="2" ry="2" />
<text  x="859.09" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="575.5" y="1829" width="0.2" height="15.0" fill="rgb(218,28,12)" rx="2" ry="2" />
<text  x="578.53" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="673.6" y="1813" width="0.8" height="15.0" fill="rgb(239,17,34)" rx="2" ry="2" />
<text  x="676.60" y="1823.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="579.7" y="1701" width="0.2" height="15.0" fill="rgb(211,148,37)" rx="2" ry="2" />
<text  x="582.75" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="575.5" y="1717" width="0.2" height="15.0" fill="rgb(239,112,53)" rx="2" ry="2" />
<text  x="578.53" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (72 samples, 1.22%)</title><rect x="1153.7" y="1989" width="14.4" height="15.0" fill="rgb(227,83,29)" rx="2" ry="2" />
<text  x="1156.70" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="147.4" y="1909" width="0.6" height="15.0" fill="rgb(233,215,43)" rx="2" ry="2" />
<text  x="150.37" y="1919.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="732.0" y="1845" width="0.2" height="15.0" fill="rgb(234,6,22)" rx="2" ry="2" />
<text  x="734.96" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="374.4" y="1701" width="0.4" height="15.0" fill="rgb(249,45,19)" rx="2" ry="2" />
<text  x="377.39" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="519.2" y="1941" width="0.2" height="15.0" fill="rgb(226,202,40)" rx="2" ry="2" />
<text  x="522.18" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="645.1" y="1909" width="0.2" height="15.0" fill="rgb(216,40,27)" rx="2" ry="2" />
<text  x="648.12" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="25.4" y="1669" width="0.2" height="15.0" fill="rgb(236,109,8)" rx="2" ry="2" />
<text  x="28.44" y="1679.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="845.3" y="1925" width="0.2" height="15.0" fill="rgb(251,22,26)" rx="2" ry="2" />
<text  x="848.27" y="1935.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="762.0" y="1733" width="1.2" height="15.0" fill="rgb(213,158,35)" rx="2" ry="2" />
<text  x="765.04" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="722.1" y="1861" width="0.2" height="15.0" fill="rgb(234,22,23)" rx="2" ry="2" />
<text  x="725.13" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="405.5" y="1813" width="0.2" height="15.0" fill="rgb(253,24,30)" rx="2" ry="2" />
<text  x="408.47" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="990.1" y="1909" width="0.2" height="15.0" fill="rgb(216,18,25)" rx="2" ry="2" />
<text  x="993.06" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="160.8" y="1781" width="0.2" height="15.0" fill="rgb(245,215,47)" rx="2" ry="2" />
<text  x="163.81" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (11 samples, 0.19%)</title><rect x="66.0" y="1941" width="2.2" height="15.0" fill="rgb(249,203,12)" rx="2" ry="2" />
<text  x="68.95" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="897.6" y="1957" width="0.2" height="15.0" fill="rgb(231,163,38)" rx="2" ry="2" />
<text  x="900.61" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (716 samples, 12.17%)</title><rect x="716.1" y="1957" width="143.6" height="15.0" fill="rgb(205,47,24)" rx="2" ry="2" />
<text  x="719.11" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="478.3" y="1829" width="0.4" height="15.0" fill="rgb(212,25,38)" rx="2" ry="2" />
<text  x="481.27" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="669.0" y="1909" width="0.2" height="15.0" fill="rgb(219,159,8)" rx="2" ry="2" />
<text  x="671.99" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="394.6" y="1909" width="0.2" height="15.0" fill="rgb(244,226,51)" rx="2" ry="2" />
<text  x="397.64" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="123.7" y="1973" width="0.2" height="15.0" fill="rgb(246,117,10)" rx="2" ry="2" />
<text  x="126.71" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1054.2" y="1925" width="0.2" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="1057.23" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="838.0" y="1829" width="0.2" height="15.0" fill="rgb(225,16,33)" rx="2" ry="2" />
<text  x="841.05" y="1839.5" ></text>
</g>
<g >
<title>chacha20_block (1 samples, 0.02%)</title><rect x="95.8" y="1541" width="0.2" height="15.0" fill="rgb(254,60,41)" rx="2" ry="2" />
<text  x="98.83" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="33.5" y="2005" width="0.6" height="15.0" fill="rgb(214,145,35)" rx="2" ry="2" />
<text  x="36.46" y="2015.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="545.1" y="1973" width="0.2" height="15.0" fill="rgb(216,224,49)" rx="2" ry="2" />
<text  x="548.05" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="677.8" y="1893" width="0.4" height="15.0" fill="rgb(227,24,36)" rx="2" ry="2" />
<text  x="680.81" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="218.6" y="1813" width="0.2" height="15.0" fill="rgb(208,141,27)" rx="2" ry="2" />
<text  x="221.57" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="901.6" y="1957" width="0.4" height="15.0" fill="rgb(241,194,24)" rx="2" ry="2" />
<text  x="904.62" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="210.9" y="1621" width="0.2" height="15.0" fill="rgb(222,163,18)" rx="2" ry="2" />
<text  x="213.94" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="139.8" y="1877" width="0.6" height="15.0" fill="rgb(210,95,19)" rx="2" ry="2" />
<text  x="142.75" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="965.4" y="1941" width="0.2" height="15.0" fill="rgb(205,105,13)" rx="2" ry="2" />
<text  x="968.39" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="823.6" y="1701" width="0.2" height="15.0" fill="rgb(230,6,36)" rx="2" ry="2" />
<text  x="826.61" y="1711.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (45 samples, 0.76%)</title><rect x="990.3" y="2037" width="9.0" height="15.0" fill="rgb(220,76,2)" rx="2" ry="2" />
<text  x="993.26" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="890.0" y="1909" width="0.2" height="15.0" fill="rgb(237,226,38)" rx="2" ry="2" />
<text  x="892.99" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="925.5" y="1909" width="0.2" height="15.0" fill="rgb(239,78,50)" rx="2" ry="2" />
<text  x="928.48" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="399.7" y="1717" width="0.2" height="15.0" fill="rgb(254,187,2)" rx="2" ry="2" />
<text  x="402.66" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="212.5" y="1845" width="0.2" height="15.0" fill="rgb(247,218,9)" rx="2" ry="2" />
<text  x="215.55" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="210.9" y="1669" width="0.2" height="15.0" fill="rgb(223,36,1)" rx="2" ry="2" />
<text  x="213.94" y="1679.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="117.7" y="1861" width="0.2" height="15.0" fill="rgb(253,171,4)" rx="2" ry="2" />
<text  x="120.69" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="116.5" y="1749" width="0.2" height="15.0" fill="rgb(240,42,49)" rx="2" ry="2" />
<text  x="119.49" y="1759.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="698.1" y="1909" width="0.6" height="15.0" fill="rgb(225,142,30)" rx="2" ry="2" />
<text  x="701.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="293" width="16.1" height="15.0" fill="rgb(243,135,29)" rx="2" ry="2" />
<text  x="101.44" y="303.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="12.8" y="1925" width="0.8" height="15.0" fill="rgb(215,115,30)" rx="2" ry="2" />
<text  x="15.81" y="1935.5" ></text>
</g>
<g >
<title>accept4@plt (1 samples, 0.02%)</title><rect x="19.8" y="2005" width="0.2" height="15.0" fill="rgb(225,185,2)" rx="2" ry="2" />
<text  x="22.83" y="2015.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="95.8" y="1717" width="0.2" height="15.0" fill="rgb(254,106,18)" rx="2" ry="2" />
<text  x="98.83" y="1727.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="116.7" y="1781" width="0.2" height="15.0" fill="rgb(226,212,51)" rx="2" ry="2" />
<text  x="119.69" y="1791.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="524.8" y="1909" width="0.2" height="15.0" fill="rgb(224,180,41)" rx="2" ry="2" />
<text  x="527.80" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="814.0" y="1525" width="0.2" height="15.0" fill="rgb(206,10,21)" rx="2" ry="2" />
<text  x="816.98" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1140.5" y="1925" width="0.2" height="15.0" fill="rgb(218,18,34)" rx="2" ry="2" />
<text  x="1143.47" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="916.1" y="2005" width="0.2" height="15.0" fill="rgb(233,93,21)" rx="2" ry="2" />
<text  x="919.06" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="306.4" y="1749" width="0.2" height="15.0" fill="rgb(235,170,34)" rx="2" ry="2" />
<text  x="309.40" y="1759.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="260.1" y="1813" width="0.2" height="15.0" fill="rgb(254,125,21)" rx="2" ry="2" />
<text  x="263.08" y="1823.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="60.9" y="1893" width="1.0" height="15.0" fill="rgb(239,98,30)" rx="2" ry="2" />
<text  x="63.94" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="967.8" y="1989" width="0.4" height="15.0" fill="rgb(216,103,5)" rx="2" ry="2" />
<text  x="970.80" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (724 samples, 12.30%)</title><rect x="715.5" y="1973" width="145.2" height="15.0" fill="rgb(229,37,16)" rx="2" ry="2" />
<text  x="718.51" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="102.7" y="37" width="0.6" height="15.0" fill="rgb(230,20,54)" rx="2" ry="2" />
<text  x="105.65" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(212,203,10)" rx="2" ry="2" />
<text  x="14.20" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="166.4" y="1973" width="0.4" height="15.0" fill="rgb(231,136,33)" rx="2" ry="2" />
<text  x="169.42" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="524.8" y="1925" width="0.2" height="15.0" fill="rgb(208,172,21)" rx="2" ry="2" />
<text  x="527.80" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="879.6" y="1925" width="0.2" height="15.0" fill="rgb(253,168,27)" rx="2" ry="2" />
<text  x="882.56" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="511.0" y="1957" width="0.2" height="15.0" fill="rgb(249,130,32)" rx="2" ry="2" />
<text  x="513.96" y="1967.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="363.6" y="1573" width="0.2" height="15.0" fill="rgb(231,228,11)" rx="2" ry="2" />
<text  x="366.56" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="140.4" y="1877" width="0.2" height="15.0" fill="rgb(246,143,39)" rx="2" ry="2" />
<text  x="143.35" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="990.9" y="1989" width="0.2" height="15.0" fill="rgb(242,145,5)" rx="2" ry="2" />
<text  x="993.86" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (47 samples, 0.80%)</title><rect x="925.9" y="1941" width="9.4" height="15.0" fill="rgb(225,180,43)" rx="2" ry="2" />
<text  x="928.88" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="575.5" y="1749" width="0.2" height="15.0" fill="rgb(246,50,14)" rx="2" ry="2" />
<text  x="578.53" y="1759.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (2 samples, 0.03%)</title><rect x="573.1" y="1973" width="0.4" height="15.0" fill="rgb(244,71,49)" rx="2" ry="2" />
<text  x="576.13" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="153.2" y="1781" width="0.2" height="15.0" fill="rgb(223,207,13)" rx="2" ry="2" />
<text  x="156.19" y="1791.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (3 samples, 0.05%)</title><rect x="1003.3" y="1989" width="0.6" height="15.0" fill="rgb(210,161,47)" rx="2" ry="2" />
<text  x="1006.29" y="1999.5" ></text>
</g>
<g >
<title>security_file_free (14 samples, 0.24%)</title><rect x="752.2" y="1797" width="2.8" height="15.0" fill="rgb(226,40,31)" rx="2" ry="2" />
<text  x="755.21" y="1807.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.3" y="1493" width="0.2" height="15.0" fill="rgb(207,124,39)" rx="2" ry="2" />
<text  x="118.29" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (44 samples, 0.75%)</title><rect x="290.6" y="1685" width="8.8" height="15.0" fill="rgb(235,35,38)" rx="2" ry="2" />
<text  x="293.56" y="1695.5" ></text>
</g>
<g >
<title>sys_access (1 samples, 0.02%)</title><rect x="11.2" y="2005" width="0.2" height="15.0" fill="rgb(211,229,31)" rx="2" ry="2" />
<text  x="14.20" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="405.5" y="1653" width="0.2" height="15.0" fill="rgb(217,55,29)" rx="2" ry="2" />
<text  x="408.47" y="1663.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="299.4" y="1653" width="0.2" height="15.0" fill="rgb(242,115,11)" rx="2" ry="2" />
<text  x="302.38" y="1663.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="666.6" y="1861" width="0.8" height="15.0" fill="rgb(216,41,33)" rx="2" ry="2" />
<text  x="669.58" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="563.1" y="1749" width="0.2" height="15.0" fill="rgb(223,207,38)" rx="2" ry="2" />
<text  x="566.10" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1181.8" y="2005" width="0.2" height="15.0" fill="rgb(214,89,6)" rx="2" ry="2" />
<text  x="1184.78" y="2015.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.03%)</title><rect x="500.9" y="2037" width="0.4" height="15.0" fill="rgb(250,43,32)" rx="2" ry="2" />
<text  x="503.93" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (24 samples, 0.41%)</title><rect x="887.4" y="1957" width="4.8" height="15.0" fill="rgb(206,113,28)" rx="2" ry="2" />
<text  x="890.38" y="1967.5" ></text>
</g>
<g >
<title>sys_gettid (2 samples, 0.03%)</title><rect x="1164.3" y="1941" width="0.4" height="15.0" fill="rgb(253,167,26)" rx="2" ry="2" />
<text  x="1167.33" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17 samples, 0.29%)</title><rect x="391.2" y="1909" width="3.4" height="15.0" fill="rgb(226,14,11)" rx="2" ry="2" />
<text  x="394.23" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="153.8" y="2005" width="0.2" height="15.0" fill="rgb(252,109,17)" rx="2" ry="2" />
<text  x="156.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="697.7" y="1637" width="0.2" height="15.0" fill="rgb(241,52,6)" rx="2" ry="2" />
<text  x="700.66" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1100.8" y="1733" width="0.2" height="15.0" fill="rgb(221,185,28)" rx="2" ry="2" />
<text  x="1103.76" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="523.8" y="1893" width="0.2" height="15.0" fill="rgb(224,94,19)" rx="2" ry="2" />
<text  x="526.79" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="221.8" y="1893" width="0.2" height="15.0" fill="rgb(241,72,44)" rx="2" ry="2" />
<text  x="224.77" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="374.4" y="1781" width="0.4" height="15.0" fill="rgb(251,58,14)" rx="2" ry="2" />
<text  x="377.39" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (2 samples, 0.03%)</title><rect x="891.8" y="1925" width="0.4" height="15.0" fill="rgb(234,50,23)" rx="2" ry="2" />
<text  x="894.79" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="884.0" y="1909" width="0.2" height="15.0" fill="rgb(248,203,43)" rx="2" ry="2" />
<text  x="886.97" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="476.3" y="1973" width="0.2" height="15.0" fill="rgb(240,86,2)" rx="2" ry="2" />
<text  x="479.26" y="1983.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (15 samples, 0.25%)</title><rect x="1181.8" y="2053" width="3.0" height="15.0" fill="rgb(242,220,23)" rx="2" ry="2" />
<text  x="1184.78" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.8" y="2005" width="0.2" height="15.0" fill="rgb(219,172,15)" rx="2" ry="2" />
<text  x="163.81" y="2015.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="521.8" y="1829" width="0.2" height="15.0" fill="rgb(249,138,2)" rx="2" ry="2" />
<text  x="524.79" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1054.2" y="1909" width="0.2" height="15.0" fill="rgb(207,138,14)" rx="2" ry="2" />
<text  x="1057.23" y="1919.5" ></text>
</g>
<g >
<title>tcp_current_mss (17 samples, 0.29%)</title><rect x="319.4" y="1861" width="3.4" height="15.0" fill="rgb(225,103,6)" rx="2" ry="2" />
<text  x="322.44" y="1871.5" ></text>
</g>
<g >
<title>security_socket_getpeername (4 samples, 0.07%)</title><rect x="676.2" y="1861" width="0.8" height="15.0" fill="rgb(238,132,45)" rx="2" ry="2" />
<text  x="679.21" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.53%)</title><rect x="98.2" y="1765" width="18.1" height="15.0" fill="rgb(231,101,42)" rx="2" ry="2" />
<text  x="101.24" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="886.8" y="1957" width="0.2" height="15.0" fill="rgb(243,131,16)" rx="2" ry="2" />
<text  x="889.78" y="1967.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="390.8" y="1781" width="0.2" height="15.0" fill="rgb(241,62,8)" rx="2" ry="2" />
<text  x="393.83" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (72 samples, 1.22%)</title><rect x="1153.7" y="2053" width="14.4" height="15.0" fill="rgb(251,69,33)" rx="2" ry="2" />
<text  x="1156.70" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="130.9" y="1973" width="0.2" height="15.0" fill="rgb(250,222,3)" rx="2" ry="2" />
<text  x="133.93" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="996.9" y="1989" width="0.4" height="15.0" fill="rgb(218,179,31)" rx="2" ry="2" />
<text  x="999.88" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (13 samples, 0.22%)</title><rect x="277.3" y="1589" width="2.6" height="15.0" fill="rgb(209,187,0)" rx="2" ry="2" />
<text  x="280.32" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="75.6" y="1925" width="0.2" height="15.0" fill="rgb(219,189,16)" rx="2" ry="2" />
<text  x="78.58" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="697.7" y="1813" width="0.2" height="15.0" fill="rgb(209,112,29)" rx="2" ry="2" />
<text  x="700.66" y="1823.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="25.4" y="1605" width="0.2" height="15.0" fill="rgb(216,224,5)" rx="2" ry="2" />
<text  x="28.44" y="1615.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="682.4" y="2005" width="0.2" height="15.0" fill="rgb(253,45,49)" rx="2" ry="2" />
<text  x="685.42" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="67.8" y="1765" width="0.2" height="15.0" fill="rgb(231,118,38)" rx="2" ry="2" />
<text  x="70.76" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="976.4" y="1957" width="0.2" height="15.0" fill="rgb(235,149,35)" rx="2" ry="2" />
<text  x="979.42" y="1967.5" ></text>
</g>
<g >
<title>cpu_needs_another_gp (1 samples, 0.02%)</title><rect x="47.5" y="1877" width="0.2" height="15.0" fill="rgb(224,67,30)" rx="2" ry="2" />
<text  x="50.50" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1054.2" y="1941" width="0.2" height="15.0" fill="rgb(222,220,53)" rx="2" ry="2" />
<text  x="1057.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="95.8" y="1749" width="0.2" height="15.0" fill="rgb(211,166,3)" rx="2" ry="2" />
<text  x="98.83" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="535.6" y="1941" width="1.6" height="15.0" fill="rgb(236,51,17)" rx="2" ry="2" />
<text  x="538.63" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(237,163,37)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="691.2" y="1909" width="0.2" height="15.0" fill="rgb(254,116,42)" rx="2" ry="2" />
<text  x="694.25" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="66.2" y="1909" width="0.2" height="15.0" fill="rgb(240,176,44)" rx="2" ry="2" />
<text  x="69.15" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1100.8" y="1685" width="0.2" height="15.0" fill="rgb(234,162,40)" rx="2" ry="2" />
<text  x="1103.76" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="95.8" y="1845" width="0.2" height="15.0" fill="rgb(226,216,31)" rx="2" ry="2" />
<text  x="98.83" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="399.7" y="1845" width="0.4" height="15.0" fill="rgb(247,156,48)" rx="2" ry="2" />
<text  x="402.66" y="1855.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1164.5" y="1477" width="0.2" height="15.0" fill="rgb(243,169,15)" rx="2" ry="2" />
<text  x="1167.53" y="1487.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="27.6" y="1989" width="2.9" height="15.0" fill="rgb(240,23,24)" rx="2" ry="2" />
<text  x="30.65" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="994.5" y="1973" width="0.2" height="15.0" fill="rgb(245,86,2)" rx="2" ry="2" />
<text  x="997.47" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="485" width="16.1" height="15.0" fill="rgb(247,195,10)" rx="2" ry="2" />
<text  x="101.44" y="495.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="551.7" y="1957" width="0.4" height="15.0" fill="rgb(205,140,24)" rx="2" ry="2" />
<text  x="554.67" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="218.6" y="1877" width="0.2" height="15.0" fill="rgb(205,166,4)" rx="2" ry="2" />
<text  x="221.57" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="131.5" y="1829" width="0.8" height="15.0" fill="rgb(218,11,6)" rx="2" ry="2" />
<text  x="134.53" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="155.4" y="2021" width="0.4" height="15.0" fill="rgb(251,139,3)" rx="2" ry="2" />
<text  x="158.39" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="315.4" y="1557" width="0.2" height="15.0" fill="rgb(242,58,5)" rx="2" ry="2" />
<text  x="318.43" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="80.8" y="1925" width="0.2" height="15.0" fill="rgb(216,142,51)" rx="2" ry="2" />
<text  x="83.79" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="970.0" y="2005" width="0.2" height="15.0" fill="rgb(252,189,53)" rx="2" ry="2" />
<text  x="973.00" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="400.5" y="1893" width="0.2" height="15.0" fill="rgb(215,29,18)" rx="2" ry="2" />
<text  x="403.46" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="623.9" y="2005" width="0.6" height="15.0" fill="rgb(211,43,21)" rx="2" ry="2" />
<text  x="626.86" y="2015.5" ></text>
</g>
<g >
<title>__skb_clone (25 samples, 0.42%)</title><rect x="301.6" y="1797" width="5.0" height="15.0" fill="rgb(224,127,9)" rx="2" ry="2" />
<text  x="304.59" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (93 samples, 1.58%)</title><rect x="62.9" y="1989" width="18.7" height="15.0" fill="rgb(240,157,47)" rx="2" ry="2" />
<text  x="65.94" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="544.0" y="1781" width="0.2" height="15.0" fill="rgb(231,73,51)" rx="2" ry="2" />
<text  x="547.05" y="1791.5" ></text>
</g>
<g >
<title>sch_direct_xmit (80 samples, 1.36%)</title><rect x="283.9" y="1701" width="16.1" height="15.0" fill="rgb(213,198,14)" rx="2" ry="2" />
<text  x="286.94" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="624.7" y="1925" width="0.2" height="15.0" fill="rgb(238,122,44)" rx="2" ry="2" />
<text  x="627.67" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="442.6" y="1973" width="0.2" height="15.0" fill="rgb(232,97,12)" rx="2" ry="2" />
<text  x="445.57" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="545.3" y="1893" width="0.2" height="15.0" fill="rgb(251,190,45)" rx="2" ry="2" />
<text  x="548.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (50 samples, 0.85%)</title><rect x="627.1" y="2037" width="10.0" height="15.0" fill="rgb(251,11,2)" rx="2" ry="2" />
<text  x="630.07" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="622.3" y="2005" width="0.2" height="15.0" fill="rgb(244,156,18)" rx="2" ry="2" />
<text  x="625.26" y="2015.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="240.2" y="1925" width="0.4" height="15.0" fill="rgb(236,124,47)" rx="2" ry="2" />
<text  x="243.22" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="575.3" y="1813" width="0.2" height="15.0" fill="rgb(250,224,4)" rx="2" ry="2" />
<text  x="578.33" y="1823.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="994.3" y="1493" width="0.2" height="15.0" fill="rgb(205,161,50)" rx="2" ry="2" />
<text  x="997.27" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (12 samples, 0.20%)</title><rect x="710.9" y="1973" width="2.4" height="15.0" fill="rgb(212,91,51)" rx="2" ry="2" />
<text  x="713.90" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="414.7" y="2021" width="0.4" height="15.0" fill="rgb(209,182,9)" rx="2" ry="2" />
<text  x="417.70" y="2031.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="95.8" y="1685" width="0.2" height="15.0" fill="rgb(212,99,25)" rx="2" ry="2" />
<text  x="98.83" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="161.6" y="1941" width="0.8" height="15.0" fill="rgb(247,227,49)" rx="2" ry="2" />
<text  x="164.61" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="205.7" y="1909" width="1.0" height="15.0" fill="rgb(222,169,4)" rx="2" ry="2" />
<text  x="208.73" y="1919.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="259.5" y="1781" width="0.2" height="15.0" fill="rgb(228,66,8)" rx="2" ry="2" />
<text  x="262.48" y="1791.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="678.2" y="1909" width="0.2" height="15.0" fill="rgb(246,72,2)" rx="2" ry="2" />
<text  x="681.21" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1100.8" y="1877" width="0.2" height="15.0" fill="rgb(223,87,44)" rx="2" ry="2" />
<text  x="1103.76" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="391.0" y="1781" width="0.2" height="15.0" fill="rgb(238,148,17)" rx="2" ry="2" />
<text  x="394.03" y="1791.5" ></text>
</g>
<g >
<title>__GI___getsockname (15 samples, 0.25%)</title><rect x="187.5" y="2037" width="3.0" height="15.0" fill="rgb(222,11,15)" rx="2" ry="2" />
<text  x="190.48" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (10 samples, 0.17%)</title><rect x="535.4" y="1957" width="2.0" height="15.0" fill="rgb(205,39,52)" rx="2" ry="2" />
<text  x="538.42" y="1967.5" ></text>
</g>
<g >
<title>accept4 (3 samples, 0.05%)</title><rect x="19.2" y="2005" width="0.6" height="15.0" fill="rgb(225,138,1)" rx="2" ry="2" />
<text  x="22.23" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="646.9" y="1973" width="0.6" height="15.0" fill="rgb(233,115,49)" rx="2" ry="2" />
<text  x="649.93" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="95.8" y="1781" width="0.2" height="15.0" fill="rgb(225,154,48)" rx="2" ry="2" />
<text  x="98.83" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="143.2" y="1733" width="0.2" height="15.0" fill="rgb(221,154,24)" rx="2" ry="2" />
<text  x="146.16" y="1743.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="617.6" y="1957" width="0.2" height="15.0" fill="rgb(214,220,28)" rx="2" ry="2" />
<text  x="620.65" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (158 samples, 2.69%)</title><rect x="776.7" y="1653" width="31.7" height="15.0" fill="rgb(219,90,19)" rx="2" ry="2" />
<text  x="779.68" y="1663.5" >ip..</text>
</g>
<g >
<title>[unknown] (97 samples, 1.65%)</title><rect x="98.2" y="1861" width="19.5" height="15.0" fill="rgb(220,7,44)" rx="2" ry="2" />
<text  x="101.24" y="1871.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (26 samples, 0.44%)</title><rect x="448.8" y="1925" width="5.2" height="15.0" fill="rgb(224,146,6)" rx="2" ry="2" />
<text  x="451.79" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1189.8" y="2037" width="0.2" height="15.0" fill="rgb(246,130,21)" rx="2" ry="2" />
<text  x="1192.80" y="2047.5" ></text>
</g>
<g >
<title>sock_alloc_file (71 samples, 1.21%)</title><rect x="388.0" y="1957" width="14.3" height="15.0" fill="rgb(207,20,1)" rx="2" ry="2" />
<text  x="391.03" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="86.2" y="1957" width="0.2" height="15.0" fill="rgb(233,159,4)" rx="2" ry="2" />
<text  x="89.21" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1125" width="16.3" height="15.0" fill="rgb(230,144,23)" rx="2" ry="2" />
<text  x="101.44" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="451.0" y="1893" width="0.2" height="15.0" fill="rgb(241,99,46)" rx="2" ry="2" />
<text  x="454.00" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="906.6" y="1941" width="0.2" height="15.0" fill="rgb(233,189,4)" rx="2" ry="2" />
<text  x="909.63" y="1951.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1164.5" y="1589" width="0.2" height="15.0" fill="rgb(251,3,19)" rx="2" ry="2" />
<text  x="1167.53" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="477.7" y="1925" width="0.2" height="15.0" fill="rgb(254,190,26)" rx="2" ry="2" />
<text  x="480.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="902.0" y="1989" width="0.2" height="15.0" fill="rgb(243,129,21)" rx="2" ry="2" />
<text  x="905.02" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="477.7" y="1973" width="0.2" height="15.0" fill="rgb(242,50,39)" rx="2" ry="2" />
<text  x="480.67" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="513.2" y="1941" width="0.2" height="15.0" fill="rgb(215,41,19)" rx="2" ry="2" />
<text  x="516.16" y="1951.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1054.4" y="1973" width="0.2" height="15.0" fill="rgb(253,94,29)" rx="2" ry="2" />
<text  x="1057.43" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="892.8" y="1957" width="0.2" height="15.0" fill="rgb(246,3,21)" rx="2" ry="2" />
<text  x="895.79" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.8" y="1989" width="0.2" height="15.0" fill="rgb(230,100,12)" rx="2" ry="2" />
<text  x="98.83" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1155.5" y="1653" width="0.2" height="15.0" fill="rgb(221,20,49)" rx="2" ry="2" />
<text  x="1158.51" y="1663.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="1118.4" y="1717" width="0.2" height="15.0" fill="rgb(206,97,28)" rx="2" ry="2" />
<text  x="1121.41" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="584.2" y="1829" width="0.2" height="15.0" fill="rgb(218,145,26)" rx="2" ry="2" />
<text  x="587.16" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="126.9" y="1749" width="0.2" height="15.0" fill="rgb(209,113,20)" rx="2" ry="2" />
<text  x="129.92" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.6" y="1845" width="0.2" height="15.0" fill="rgb(231,25,31)" rx="2" ry="2" />
<text  x="77.58" y="1855.5" ></text>
</g>
<g >
<title>filp_close (7 samples, 0.12%)</title><rect x="839.4" y="1829" width="1.5" height="15.0" fill="rgb(217,27,39)" rx="2" ry="2" />
<text  x="842.45" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="902.0" y="1957" width="0.2" height="15.0" fill="rgb(250,26,41)" rx="2" ry="2" />
<text  x="905.02" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="210.9" y="1525" width="0.2" height="15.0" fill="rgb(224,124,11)" rx="2" ry="2" />
<text  x="213.94" y="1535.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="649.5" y="1669" width="0.2" height="15.0" fill="rgb(229,175,8)" rx="2" ry="2" />
<text  x="652.53" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1144.5" y="1941" width="0.2" height="15.0" fill="rgb(236,19,40)" rx="2" ry="2" />
<text  x="1147.48" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="24.4" y="1941" width="0.2" height="15.0" fill="rgb(247,109,30)" rx="2" ry="2" />
<text  x="27.44" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="678.0" y="1605" width="0.2" height="15.0" fill="rgb(219,214,18)" rx="2" ry="2" />
<text  x="681.01" y="1615.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="851.3" y="1893" width="0.4" height="15.0" fill="rgb(226,50,47)" rx="2" ry="2" />
<text  x="854.28" y="1903.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.07%)</title><rect x="79.4" y="1925" width="0.8" height="15.0" fill="rgb(217,100,2)" rx="2" ry="2" />
<text  x="82.39" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1118.6" y="1781" width="0.4" height="15.0" fill="rgb(244,88,32)" rx="2" ry="2" />
<text  x="1121.61" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.72%)</title><rect x="98.2" y="1941" width="20.3" height="15.0" fill="rgb(242,69,36)" rx="2" ry="2" />
<text  x="101.24" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="311.6" y="1765" width="0.2" height="15.0" fill="rgb(243,218,22)" rx="2" ry="2" />
<text  x="314.62" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1122.6" y="1925" width="0.2" height="15.0" fill="rgb(229,166,27)" rx="2" ry="2" />
<text  x="1125.62" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (169 samples, 2.87%)</title><rect x="775.1" y="1669" width="33.9" height="15.0" fill="rgb(209,161,43)" rx="2" ry="2" />
<text  x="778.07" y="1679.5" >ip..</text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (4 samples, 0.07%)</title><rect x="215.6" y="1797" width="0.8" height="15.0" fill="rgb(209,170,20)" rx="2" ry="2" />
<text  x="218.56" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="153.2" y="1941" width="0.2" height="15.0" fill="rgb(230,189,28)" rx="2" ry="2" />
<text  x="156.19" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="126.9" y="1893" width="0.2" height="15.0" fill="rgb(235,43,39)" rx="2" ry="2" />
<text  x="129.92" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="522.8" y="1973" width="0.2" height="15.0" fill="rgb(236,143,37)" rx="2" ry="2" />
<text  x="525.79" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1122.6" y="1909" width="0.2" height="15.0" fill="rgb(253,24,36)" rx="2" ry="2" />
<text  x="1125.62" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="992.1" y="1957" width="0.2" height="15.0" fill="rgb(237,60,34)" rx="2" ry="2" />
<text  x="995.06" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1165.3" y="1749" width="0.2" height="15.0" fill="rgb(218,151,52)" rx="2" ry="2" />
<text  x="1168.33" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="477.7" y="1813" width="0.2" height="15.0" fill="rgb(235,87,39)" rx="2" ry="2" />
<text  x="480.67" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="25.4" y="1797" width="0.2" height="15.0" fill="rgb(217,206,28)" rx="2" ry="2" />
<text  x="28.44" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1183.2" y="1989" width="0.6" height="15.0" fill="rgb(207,209,15)" rx="2" ry="2" />
<text  x="1186.18" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="426.3" y="1989" width="0.2" height="15.0" fill="rgb(221,162,27)" rx="2" ry="2" />
<text  x="429.33" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="757.8" y="1749" width="0.2" height="15.0" fill="rgb(219,78,48)" rx="2" ry="2" />
<text  x="760.83" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (2 samples, 0.03%)</title><rect x="957.0" y="2037" width="0.4" height="15.0" fill="rgb(247,89,21)" rx="2" ry="2" />
<text  x="959.97" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="75.6" y="1797" width="0.2" height="15.0" fill="rgb(214,53,51)" rx="2" ry="2" />
<text  x="78.58" y="1807.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="24.6" y="1973" width="1.0" height="15.0" fill="rgb(219,120,1)" rx="2" ry="2" />
<text  x="27.64" y="1983.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="521.8" y="1957" width="0.8" height="15.0" fill="rgb(249,129,13)" rx="2" ry="2" />
<text  x="524.79" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="243.2" y="1765" width="0.2" height="15.0" fill="rgb(238,84,34)" rx="2" ry="2" />
<text  x="246.23" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="856.1" y="1765" width="0.2" height="15.0" fill="rgb(232,74,8)" rx="2" ry="2" />
<text  x="859.09" y="1775.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="754.0" y="1781" width="1.0" height="15.0" fill="rgb(226,155,48)" rx="2" ry="2" />
<text  x="757.02" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (4 samples, 0.07%)</title><rect x="852.1" y="1941" width="0.8" height="15.0" fill="rgb(247,220,53)" rx="2" ry="2" />
<text  x="855.08" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="524.8" y="1941" width="0.2" height="15.0" fill="rgb(251,5,15)" rx="2" ry="2" />
<text  x="527.80" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="992.5" y="1941" width="0.2" height="15.0" fill="rgb(217,16,34)" rx="2" ry="2" />
<text  x="995.46" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (5 samples, 0.08%)</title><rect x="614.0" y="1861" width="1.0" height="15.0" fill="rgb(231,218,39)" rx="2" ry="2" />
<text  x="617.04" y="1871.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(219,92,8)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="167.2" y="1973" width="0.2" height="15.0" fill="rgb(230,187,49)" rx="2" ry="2" />
<text  x="170.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (1 samples, 0.02%)</title><rect x="22.8" y="1989" width="0.2" height="15.0" fill="rgb(211,25,54)" rx="2" ry="2" />
<text  x="25.83" y="1999.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="316.0" y="1829" width="0.2" height="15.0" fill="rgb(227,123,27)" rx="2" ry="2" />
<text  x="319.03" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="112.1" y="37" width="0.2" height="15.0" fill="rgb(239,91,23)" rx="2" ry="2" />
<text  x="115.08" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="541.4" y="1909" width="0.2" height="15.0" fill="rgb(230,27,39)" rx="2" ry="2" />
<text  x="544.44" y="1919.5" ></text>
</g>
<g >
<title>isspace (2 samples, 0.03%)</title><rect x="1008.5" y="2021" width="0.4" height="15.0" fill="rgb(224,102,34)" rx="2" ry="2" />
<text  x="1011.51" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="405.5" y="1877" width="0.2" height="15.0" fill="rgb(229,160,42)" rx="2" ry="2" />
<text  x="408.47" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1397" width="16.3" height="15.0" fill="rgb(231,115,30)" rx="2" ry="2" />
<text  x="101.44" y="1407.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="868.7" y="1989" width="0.4" height="15.0" fill="rgb(229,65,35)" rx="2" ry="2" />
<text  x="871.73" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1164.5" y="1525" width="0.2" height="15.0" fill="rgb(223,13,13)" rx="2" ry="2" />
<text  x="1167.53" y="1535.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="814.2" y="1669" width="0.2" height="15.0" fill="rgb(241,65,34)" rx="2" ry="2" />
<text  x="817.18" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="75.6" y="1941" width="0.2" height="15.0" fill="rgb(229,126,5)" rx="2" ry="2" />
<text  x="78.58" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base&lt;folly::IOBuf*&amp;&gt; (3 samples, 0.05%)</title><rect x="888.6" y="1893" width="0.6" height="15.0" fill="rgb(237,113,16)" rx="2" ry="2" />
<text  x="891.58" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (52 samples, 0.88%)</title><rect x="1108.6" y="1845" width="10.4" height="15.0" fill="rgb(245,218,9)" rx="2" ry="2" />
<text  x="1111.58" y="1855.5" ></text>
</g>
<g >
<title>ip_send_check (14 samples, 0.24%)</title><rect x="777.3" y="1621" width="2.8" height="15.0" fill="rgb(242,17,17)" rx="2" ry="2" />
<text  x="780.28" y="1631.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="615.4" y="1845" width="0.2" height="15.0" fill="rgb(222,172,42)" rx="2" ry="2" />
<text  x="618.44" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="704.5" y="1957" width="0.2" height="15.0" fill="rgb(207,195,18)" rx="2" ry="2" />
<text  x="707.48" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="621.7" y="2021" width="0.2" height="15.0" fill="rgb(240,195,13)" rx="2" ry="2" />
<text  x="624.66" y="2031.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="711.1" y="1909" width="0.2" height="15.0" fill="rgb(249,170,11)" rx="2" ry="2" />
<text  x="714.10" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (43 samples, 0.73%)</title><rect x="537.8" y="1989" width="8.7" height="15.0" fill="rgb(236,142,11)" rx="2" ry="2" />
<text  x="540.83" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (1 samples, 0.02%)</title><rect x="72.0" y="1957" width="0.2" height="15.0" fill="rgb(217,65,28)" rx="2" ry="2" />
<text  x="74.97" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="169.4" y="1957" width="0.2" height="15.0" fill="rgb(246,211,9)" rx="2" ry="2" />
<text  x="172.43" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="390.8" y="1893" width="0.2" height="15.0" fill="rgb(207,46,3)" rx="2" ry="2" />
<text  x="393.83" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1083.3" y="1717" width="0.2" height="15.0" fill="rgb(240,153,34)" rx="2" ry="2" />
<text  x="1086.31" y="1727.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1091.1" y="1925" width="0.2" height="15.0" fill="rgb(220,69,24)" rx="2" ry="2" />
<text  x="1094.13" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (88 samples, 1.50%)</title><rect x="63.5" y="1973" width="17.7" height="15.0" fill="rgb(209,112,26)" rx="2" ry="2" />
<text  x="66.55" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="210.9" y="1765" width="0.2" height="15.0" fill="rgb(239,44,25)" rx="2" ry="2" />
<text  x="213.94" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="853.3" y="1925" width="1.6" height="15.0" fill="rgb(213,173,38)" rx="2" ry="2" />
<text  x="856.29" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="690.0" y="1877" width="0.2" height="15.0" fill="rgb(206,0,35)" rx="2" ry="2" />
<text  x="693.04" y="1887.5" ></text>
</g>
<g >
<title>__sock_release (407 samples, 6.92%)</title><rect x="755.0" y="1781" width="81.6" height="15.0" fill="rgb(249,181,4)" rx="2" ry="2" />
<text  x="758.02" y="1791.5" >__sock_re..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="759.4" y="1733" width="0.2" height="15.0" fill="rgb(249,127,21)" rx="2" ry="2" />
<text  x="762.43" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="127.5" y="1925" width="0.2" height="15.0" fill="rgb(249,114,11)" rx="2" ry="2" />
<text  x="130.52" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="856.3" y="1845" width="0.4" height="15.0" fill="rgb(244,211,5)" rx="2" ry="2" />
<text  x="859.30" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="947.9" y="1989" width="0.2" height="15.0" fill="rgb(225,42,42)" rx="2" ry="2" />
<text  x="950.94" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="493.9" y="1893" width="0.4" height="15.0" fill="rgb(207,89,10)" rx="2" ry="2" />
<text  x="496.91" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="621.1" y="2037" width="0.2" height="15.0" fill="rgb(244,158,6)" rx="2" ry="2" />
<text  x="624.06" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="677.8" y="1925" width="0.4" height="15.0" fill="rgb(235,211,28)" rx="2" ry="2" />
<text  x="680.81" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (72 samples, 1.22%)</title><rect x="604.8" y="2021" width="14.5" height="15.0" fill="rgb(241,40,42)" rx="2" ry="2" />
<text  x="607.81" y="2031.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="369.6" y="1621" width="0.2" height="15.0" fill="rgb(225,18,36)" rx="2" ry="2" />
<text  x="372.58" y="1631.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="160.8" y="1717" width="0.2" height="15.0" fill="rgb(223,200,49)" rx="2" ry="2" />
<text  x="163.81" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11 samples, 0.19%)</title><rect x="277.7" y="1557" width="2.2" height="15.0" fill="rgb(240,169,11)" rx="2" ry="2" />
<text  x="280.73" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="632.5" y="2005" width="1.2" height="15.0" fill="rgb(250,57,0)" rx="2" ry="2" />
<text  x="635.49" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="832.6" y="1493" width="0.2" height="15.0" fill="rgb(254,143,41)" rx="2" ry="2" />
<text  x="835.63" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="544.0" y="1733" width="0.2" height="15.0" fill="rgb(234,4,7)" rx="2" ry="2" />
<text  x="547.05" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1165.3" y="1733" width="0.2" height="15.0" fill="rgb(237,25,50)" rx="2" ry="2" />
<text  x="1168.33" y="1743.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="614.2" y="1685" width="0.8" height="15.0" fill="rgb(239,162,54)" rx="2" ry="2" />
<text  x="617.24" y="1695.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="476.1" y="1973" width="0.2" height="15.0" fill="rgb(238,198,26)" rx="2" ry="2" />
<text  x="479.06" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="1017.7" y="2037" width="0.4" height="15.0" fill="rgb(251,143,49)" rx="2" ry="2" />
<text  x="1020.73" y="2047.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="242.0" y="1877" width="0.4" height="15.0" fill="rgb(242,77,4)" rx="2" ry="2" />
<text  x="245.03" y="1887.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (5 samples, 0.08%)</title><rect x="962.0" y="2021" width="1.0" height="15.0" fill="rgb(210,99,1)" rx="2" ry="2" />
<text  x="964.98" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (5 samples, 0.08%)</title><rect x="53.3" y="1973" width="1.0" height="15.0" fill="rgb(230,169,28)" rx="2" ry="2" />
<text  x="56.32" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="75.2" y="1957" width="0.2" height="15.0" fill="rgb(239,194,8)" rx="2" ry="2" />
<text  x="78.18" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="515.6" y="1957" width="0.2" height="15.0" fill="rgb(237,73,48)" rx="2" ry="2" />
<text  x="518.57" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="25.4" y="1477" width="0.2" height="15.0" fill="rgb(213,181,24)" rx="2" ry="2" />
<text  x="28.44" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="62.3" y="1733" width="0.2" height="15.0" fill="rgb(247,33,3)" rx="2" ry="2" />
<text  x="65.34" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="315.4" y="1701" width="0.2" height="15.0" fill="rgb(234,148,42)" rx="2" ry="2" />
<text  x="318.43" y="1711.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(250,191,28)" rx="2" ry="2" />
<text  x="14.20" y="2063.5" ></text>
</g>
<g >
<title>release_sock (17 samples, 0.29%)</title><rect x="371.8" y="1941" width="3.4" height="15.0" fill="rgb(239,118,1)" rx="2" ry="2" />
<text  x="374.78" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="541.6" y="1925" width="0.8" height="15.0" fill="rgb(207,119,45)" rx="2" ry="2" />
<text  x="544.64" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1142.9" y="1973" width="0.2" height="15.0" fill="rgb(241,39,9)" rx="2" ry="2" />
<text  x="1145.87" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="399.9" y="1717" width="0.2" height="15.0" fill="rgb(212,174,41)" rx="2" ry="2" />
<text  x="402.86" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="997.3" y="1989" width="0.2" height="15.0" fill="rgb(233,110,11)" rx="2" ry="2" />
<text  x="1000.28" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="508.6" y="1957" width="0.6" height="15.0" fill="rgb(224,47,18)" rx="2" ry="2" />
<text  x="511.55" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (2 samples, 0.03%)</title><rect x="846.3" y="1909" width="0.4" height="15.0" fill="rgb(218,59,15)" rx="2" ry="2" />
<text  x="849.27" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="148.0" y="1925" width="0.2" height="15.0" fill="rgb(208,205,20)" rx="2" ry="2" />
<text  x="150.97" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (1 samples, 0.02%)</title><rect x="918.5" y="1989" width="0.2" height="15.0" fill="rgb(234,15,41)" rx="2" ry="2" />
<text  x="921.46" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="894.4" y="1989" width="0.4" height="15.0" fill="rgb(210,224,44)" rx="2" ry="2" />
<text  x="897.40" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="886.0" y="1909" width="0.2" height="15.0" fill="rgb(246,18,26)" rx="2" ry="2" />
<text  x="888.98" y="1919.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="1075.1" y="1861" width="0.4" height="15.0" fill="rgb(243,71,13)" rx="2" ry="2" />
<text  x="1078.09" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="306.4" y="1573" width="0.2" height="15.0" fill="rgb(247,8,36)" rx="2" ry="2" />
<text  x="309.40" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="581" width="16.1" height="15.0" fill="rgb(234,59,18)" rx="2" ry="2" />
<text  x="101.44" y="591.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="405.5" y="1669" width="0.2" height="15.0" fill="rgb(225,87,37)" rx="2" ry="2" />
<text  x="408.47" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="146.2" y="1877" width="1.0" height="15.0" fill="rgb(241,144,34)" rx="2" ry="2" />
<text  x="149.17" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="98.8" y="37" width="0.4" height="15.0" fill="rgb(246,1,29)" rx="2" ry="2" />
<text  x="101.84" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="933.1" y="1893" width="0.8" height="15.0" fill="rgb(245,143,24)" rx="2" ry="2" />
<text  x="936.10" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="696.5" y="1861" width="0.4" height="15.0" fill="rgb(247,47,25)" rx="2" ry="2" />
<text  x="699.46" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="508.8" y="1941" width="0.4" height="15.0" fill="rgb(223,181,1)" rx="2" ry="2" />
<text  x="511.75" y="1951.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1128.8" y="1989" width="0.4" height="15.0" fill="rgb(217,184,40)" rx="2" ry="2" />
<text  x="1131.83" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="575.3" y="1973" width="0.2" height="15.0" fill="rgb(251,42,9)" rx="2" ry="2" />
<text  x="578.33" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="932.9" y="1701" width="0.2" height="15.0" fill="rgb(226,24,45)" rx="2" ry="2" />
<text  x="935.90" y="1711.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (11 samples, 0.19%)</title><rect x="344.9" y="1957" width="2.2" height="15.0" fill="rgb(211,191,30)" rx="2" ry="2" />
<text  x="347.91" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1129.8" y="2005" width="0.2" height="15.0" fill="rgb(246,152,35)" rx="2" ry="2" />
<text  x="1132.84" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="918.5" y="1941" width="0.2" height="15.0" fill="rgb(219,183,43)" rx="2" ry="2" />
<text  x="921.46" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="680.4" y="1989" width="0.6" height="15.0" fill="rgb(229,53,4)" rx="2" ry="2" />
<text  x="683.42" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="691.2" y="1877" width="0.2" height="15.0" fill="rgb(209,223,9)" rx="2" ry="2" />
<text  x="694.25" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="369.6" y="1845" width="0.2" height="15.0" fill="rgb(251,197,32)" rx="2" ry="2" />
<text  x="372.58" y="1855.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1164.5" y="1557" width="0.2" height="15.0" fill="rgb(248,138,39)" rx="2" ry="2" />
<text  x="1167.53" y="1567.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="243.2" y="1893" width="0.2" height="15.0" fill="rgb(242,202,19)" rx="2" ry="2" />
<text  x="246.23" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (2 samples, 0.03%)</title><rect x="222.0" y="1973" width="0.4" height="15.0" fill="rgb(241,108,48)" rx="2" ry="2" />
<text  x="224.97" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (2 samples, 0.03%)</title><rect x="155.8" y="2021" width="0.4" height="15.0" fill="rgb(208,24,4)" rx="2" ry="2" />
<text  x="158.80" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="167.2" y="1957" width="0.2" height="15.0" fill="rgb(243,136,49)" rx="2" ry="2" />
<text  x="170.23" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1074.9" y="1541" width="0.2" height="15.0" fill="rgb(214,93,48)" rx="2" ry="2" />
<text  x="1077.89" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="916.7" y="1989" width="0.6" height="15.0" fill="rgb(225,112,5)" rx="2" ry="2" />
<text  x="919.66" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1090.5" y="1925" width="0.2" height="15.0" fill="rgb(207,209,27)" rx="2" ry="2" />
<text  x="1093.53" y="1935.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="854.3" y="1893" width="0.2" height="15.0" fill="rgb(232,58,52)" rx="2" ry="2" />
<text  x="857.29" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (18 samples, 0.31%)</title><rect x="276.3" y="1717" width="3.6" height="15.0" fill="rgb(249,95,34)" rx="2" ry="2" />
<text  x="279.32" y="1727.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="784.5" y="1301" width="0.2" height="15.0" fill="rgb(249,100,43)" rx="2" ry="2" />
<text  x="787.50" y="1311.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="660.6" y="2021" width="0.4" height="15.0" fill="rgb(221,162,10)" rx="2" ry="2" />
<text  x="663.56" y="2031.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="299.0" y="1653" width="0.2" height="15.0" fill="rgb(221,223,5)" rx="2" ry="2" />
<text  x="301.98" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="887.2" y="1957" width="0.2" height="15.0" fill="rgb(244,204,17)" rx="2" ry="2" />
<text  x="890.18" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="994.9" y="1957" width="0.4" height="15.0" fill="rgb(210,68,4)" rx="2" ry="2" />
<text  x="997.87" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (491 samples, 8.34%)</title><rect x="1031.0" y="2037" width="98.4" height="15.0" fill="rgb(236,220,13)" rx="2" ry="2" />
<text  x="1033.97" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="574.1" y="1941" width="0.8" height="15.0" fill="rgb(205,85,31)" rx="2" ry="2" />
<text  x="577.13" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="563.7" y="1893" width="0.4" height="15.0" fill="rgb(224,155,28)" rx="2" ry="2" />
<text  x="566.70" y="1903.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="150.0" y="1941" width="0.2" height="15.0" fill="rgb(209,90,9)" rx="2" ry="2" />
<text  x="152.98" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1093.7" y="1877" width="0.2" height="15.0" fill="rgb(244,22,42)" rx="2" ry="2" />
<text  x="1096.74" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="994.7" y="1973" width="0.6" height="15.0" fill="rgb(250,210,26)" rx="2" ry="2" />
<text  x="997.67" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="493.9" y="1813" width="0.4" height="15.0" fill="rgb(223,180,52)" rx="2" ry="2" />
<text  x="496.91" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="72.6" y="1925" width="0.2" height="15.0" fill="rgb(227,69,4)" rx="2" ry="2" />
<text  x="75.57" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="408.5" y="2037" width="0.2" height="15.0" fill="rgb(216,143,43)" rx="2" ry="2" />
<text  x="411.48" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (3 samples, 0.05%)</title><rect x="706.9" y="2037" width="0.6" height="15.0" fill="rgb(232,27,42)" rx="2" ry="2" />
<text  x="709.89" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="1178.0" y="1989" width="0.2" height="15.0" fill="rgb(253,18,48)" rx="2" ry="2" />
<text  x="1180.97" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="494.1" y="1717" width="0.2" height="15.0" fill="rgb(209,25,50)" rx="2" ry="2" />
<text  x="497.11" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.14%)</title><rect x="703.7" y="2005" width="1.6" height="15.0" fill="rgb(249,54,15)" rx="2" ry="2" />
<text  x="706.68" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (50 samples, 0.85%)</title><rect x="206.7" y="1925" width="10.1" height="15.0" fill="rgb(218,106,49)" rx="2" ry="2" />
<text  x="209.73" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (1 samples, 0.02%)</title><rect x="652.1" y="1989" width="0.2" height="15.0" fill="rgb(245,40,43)" rx="2" ry="2" />
<text  x="655.14" y="1999.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1090.7" y="1925" width="0.2" height="15.0" fill="rgb(231,129,4)" rx="2" ry="2" />
<text  x="1093.73" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="845.5" y="1909" width="0.4" height="15.0" fill="rgb(237,9,22)" rx="2" ry="2" />
<text  x="848.47" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1091.5" y="1877" width="0.2" height="15.0" fill="rgb(229,167,6)" rx="2" ry="2" />
<text  x="1094.53" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="531.0" y="1941" width="0.8" height="15.0" fill="rgb(231,190,44)" rx="2" ry="2" />
<text  x="534.01" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="390.8" y="1861" width="0.2" height="15.0" fill="rgb(234,221,6)" rx="2" ry="2" />
<text  x="393.83" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="965.4" y="1973" width="0.2" height="15.0" fill="rgb(216,112,9)" rx="2" ry="2" />
<text  x="968.39" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="62.3" y="1813" width="0.2" height="15.0" fill="rgb(226,193,37)" rx="2" ry="2" />
<text  x="65.34" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="118.1" y="1893" width="0.2" height="15.0" fill="rgb(229,27,6)" rx="2" ry="2" />
<text  x="121.09" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="852.9" y="1941" width="0.2" height="15.0" fill="rgb(221,24,36)" rx="2" ry="2" />
<text  x="855.89" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="120.7" y="1893" width="0.2" height="15.0" fill="rgb(232,207,51)" rx="2" ry="2" />
<text  x="123.70" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="98.4" y="1621" width="17.3" height="15.0" fill="rgb(210,110,35)" rx="2" ry="2" />
<text  x="101.44" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="358.3" y="1925" width="0.2" height="15.0" fill="rgb(242,155,5)" rx="2" ry="2" />
<text  x="361.34" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="707.9" y="1957" width="0.2" height="15.0" fill="rgb(254,42,21)" rx="2" ry="2" />
<text  x="710.89" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (80 samples, 1.36%)</title><rect x="664.2" y="2005" width="16.0" height="15.0" fill="rgb(227,111,54)" rx="2" ry="2" />
<text  x="667.17" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (5 samples, 0.08%)</title><rect x="1142.1" y="2021" width="1.0" height="15.0" fill="rgb(239,154,14)" rx="2" ry="2" />
<text  x="1145.07" y="2031.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="160.8" y="1637" width="0.2" height="15.0" fill="rgb(205,207,48)" rx="2" ry="2" />
<text  x="163.81" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="994.3" y="1557" width="0.2" height="15.0" fill="rgb(209,90,0)" rx="2" ry="2" />
<text  x="997.27" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="126.9" y="1861" width="0.2" height="15.0" fill="rgb(244,117,5)" rx="2" ry="2" />
<text  x="129.92" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="977.2" y="1957" width="0.8" height="15.0" fill="rgb(236,229,12)" rx="2" ry="2" />
<text  x="980.22" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="161.8" y="1925" width="0.2" height="15.0" fill="rgb(230,48,51)" rx="2" ry="2" />
<text  x="164.81" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="584.4" y="1909" width="0.4" height="15.0" fill="rgb(212,85,12)" rx="2" ry="2" />
<text  x="587.36" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1143.3" y="1941" width="0.2" height="15.0" fill="rgb(241,199,30)" rx="2" ry="2" />
<text  x="1146.27" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.14%)</title><rect x="711.5" y="1861" width="1.6" height="15.0" fill="rgb(224,119,44)" rx="2" ry="2" />
<text  x="714.50" y="1871.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (2 samples, 0.03%)</title><rect x="764.0" y="1733" width="0.4" height="15.0" fill="rgb(208,12,9)" rx="2" ry="2" />
<text  x="767.04" y="1743.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="754.4" y="1765" width="0.6" height="15.0" fill="rgb(205,146,18)" rx="2" ry="2" />
<text  x="757.42" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (106 samples, 1.80%)</title><rect x="681.8" y="2021" width="21.3" height="15.0" fill="rgb(219,75,19)" rx="2" ry="2" />
<text  x="684.82" y="2031.5" >f..</text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="622.3" y="2021" width="1.6" height="15.0" fill="rgb(241,183,18)" rx="2" ry="2" />
<text  x="625.26" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="1144.9" y="2053" width="0.6" height="15.0" fill="rgb(249,112,16)" rx="2" ry="2" />
<text  x="1147.88" y="2063.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="61.9" y="1957" width="0.2" height="15.0" fill="rgb(248,190,10)" rx="2" ry="2" />
<text  x="64.94" y="1967.5" ></text>
</g>
<g >
<title>dentry_free (9 samples, 0.15%)</title><rect x="736.8" y="1749" width="1.8" height="15.0" fill="rgb(212,17,24)" rx="2" ry="2" />
<text  x="739.77" y="1759.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="963.4" y="2021" width="0.2" height="15.0" fill="rgb(219,210,25)" rx="2" ry="2" />
<text  x="966.39" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="494.1" y="1765" width="0.2" height="15.0" fill="rgb(214,139,22)" rx="2" ry="2" />
<text  x="497.11" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="784.5" y="1413" width="0.2" height="15.0" fill="rgb(207,169,47)" rx="2" ry="2" />
<text  x="787.50" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1165.1" y="1861" width="0.4" height="15.0" fill="rgb(205,45,39)" rx="2" ry="2" />
<text  x="1168.13" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (4 samples, 0.07%)</title><rect x="966.8" y="2037" width="0.8" height="15.0" fill="rgb(213,101,23)" rx="2" ry="2" />
<text  x="969.79" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (23 samples, 0.39%)</title><rect x="532.8" y="1989" width="4.6" height="15.0" fill="rgb(242,96,13)" rx="2" ry="2" />
<text  x="535.82" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="990.1" y="1989" width="0.2" height="15.0" fill="rgb(215,204,16)" rx="2" ry="2" />
<text  x="993.06" y="1999.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (380 samples, 6.46%)</title><rect x="13.6" y="2053" width="76.2" height="15.0" fill="rgb(232,200,45)" rx="2" ry="2" />
<text  x="16.61" y="2063.5" >[libeven..</text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1005.3" y="1973" width="0.2" height="15.0" fill="rgb(254,13,29)" rx="2" ry="2" />
<text  x="1008.30" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="69.8" y="1573" width="0.2" height="15.0" fill="rgb(215,23,22)" rx="2" ry="2" />
<text  x="72.76" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="117.1" y="1781" width="0.2" height="15.0" fill="rgb(227,209,34)" rx="2" ry="2" />
<text  x="120.09" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="757.8" y="1701" width="0.2" height="15.0" fill="rgb(233,46,6)" rx="2" ry="2" />
<text  x="760.83" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="501.5" y="2037" width="0.2" height="15.0" fill="rgb(248,207,6)" rx="2" ry="2" />
<text  x="504.53" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="1175.8" y="1989" width="0.8" height="15.0" fill="rgb(227,210,27)" rx="2" ry="2" />
<text  x="1178.76" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="475.5" y="1653" width="0.2" height="15.0" fill="rgb(210,190,25)" rx="2" ry="2" />
<text  x="478.46" y="1663.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="110.7" y="37" width="0.2" height="15.0" fill="rgb(227,111,0)" rx="2" ry="2" />
<text  x="113.67" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="31.9" y="1973" width="0.2" height="15.0" fill="rgb(223,61,33)" rx="2" ry="2" />
<text  x="34.86" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="520.0" y="1957" width="0.2" height="15.0" fill="rgb(235,107,50)" rx="2" ry="2" />
<text  x="522.98" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="624.9" y="1941" width="0.2" height="15.0" fill="rgb(236,78,21)" rx="2" ry="2" />
<text  x="627.87" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="236.8" y="1925" width="0.4" height="15.0" fill="rgb(209,188,32)" rx="2" ry="2" />
<text  x="239.82" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="832.6" y="1557" width="0.2" height="15.0" fill="rgb(252,16,31)" rx="2" ry="2" />
<text  x="835.63" y="1567.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="485.7" y="1941" width="0.2" height="15.0" fill="rgb(205,174,4)" rx="2" ry="2" />
<text  x="488.69" y="1951.5" ></text>
</g>
<g >
<title>d_instantiate (7 samples, 0.12%)</title><rect x="400.9" y="1941" width="1.4" height="15.0" fill="rgb(226,207,53)" rx="2" ry="2" />
<text  x="403.86" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1100.8" y="1701" width="0.2" height="15.0" fill="rgb(218,25,8)" rx="2" ry="2" />
<text  x="1103.76" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="850.1" y="1781" width="0.2" height="15.0" fill="rgb(236,62,43)" rx="2" ry="2" />
<text  x="853.08" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="814.0" y="1669" width="0.2" height="15.0" fill="rgb(207,114,22)" rx="2" ry="2" />
<text  x="816.98" y="1679.5" ></text>
</g>
<g >
<title>__libc_sendmsg (534 samples, 9.08%)</title><rect x="224.0" y="2037" width="107.1" height="15.0" fill="rgb(236,199,48)" rx="2" ry="2" />
<text  x="226.98" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1181.8" y="1925" width="0.2" height="15.0" fill="rgb(243,46,39)" rx="2" ry="2" />
<text  x="1184.78" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="600.8" y="1573" width="0.2" height="15.0" fill="rgb(215,166,24)" rx="2" ry="2" />
<text  x="603.80" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="426.7" y="1877" width="0.2" height="15.0" fill="rgb(247,171,45)" rx="2" ry="2" />
<text  x="429.73" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="24.4" y="1893" width="0.2" height="15.0" fill="rgb(212,15,29)" rx="2" ry="2" />
<text  x="27.44" y="1903.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="276.7" y="1461" width="0.2" height="15.0" fill="rgb(214,162,0)" rx="2" ry="2" />
<text  x="279.72" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1110.0" y="1477" width="0.4" height="15.0" fill="rgb(229,50,12)" rx="2" ry="2" />
<text  x="1112.98" y="1487.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1074.9" y="1573" width="0.2" height="15.0" fill="rgb(210,39,33)" rx="2" ry="2" />
<text  x="1077.89" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1152.1" y="2053" width="0.2" height="15.0" fill="rgb(234,77,15)" rx="2" ry="2" />
<text  x="1155.10" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="886.8" y="1861" width="0.2" height="15.0" fill="rgb(222,71,17)" rx="2" ry="2" />
<text  x="889.78" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="399.7" y="1781" width="0.4" height="15.0" fill="rgb(231,74,44)" rx="2" ry="2" />
<text  x="402.66" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (10 samples, 0.17%)</title><rect x="66.2" y="1925" width="2.0" height="15.0" fill="rgb(219,12,47)" rx="2" ry="2" />
<text  x="69.15" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="884.0" y="1925" width="0.2" height="15.0" fill="rgb(218,40,49)" rx="2" ry="2" />
<text  x="886.97" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="814.0" y="1573" width="0.2" height="15.0" fill="rgb(236,39,49)" rx="2" ry="2" />
<text  x="816.98" y="1583.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="12.8" y="1909" width="0.8" height="15.0" fill="rgb(224,51,47)" rx="2" ry="2" />
<text  x="15.81" y="1919.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1136.3" y="2037" width="0.2" height="15.0" fill="rgb(210,37,3)" rx="2" ry="2" />
<text  x="1139.25" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="902.4" y="2005" width="0.2" height="15.0" fill="rgb(235,108,50)" rx="2" ry="2" />
<text  x="905.42" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="397.9" y="1909" width="2.8" height="15.0" fill="rgb(207,162,40)" rx="2" ry="2" />
<text  x="400.85" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="374.4" y="1765" width="0.4" height="15.0" fill="rgb(219,101,6)" rx="2" ry="2" />
<text  x="377.39" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="636.9" y="1973" width="0.2" height="15.0" fill="rgb(237,50,25)" rx="2" ry="2" />
<text  x="639.90" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="757.8" y="1557" width="0.2" height="15.0" fill="rgb(211,228,13)" rx="2" ry="2" />
<text  x="760.83" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (9 samples, 0.15%)</title><rect x="1119.0" y="1925" width="1.8" height="15.0" fill="rgb(250,95,38)" rx="2" ry="2" />
<text  x="1122.01" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (1 samples, 0.02%)</title><rect x="898.4" y="2005" width="0.2" height="15.0" fill="rgb(243,223,48)" rx="2" ry="2" />
<text  x="901.41" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="902.2" y="2021" width="1.4" height="15.0" fill="rgb(233,32,54)" rx="2" ry="2" />
<text  x="905.22" y="2031.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="426.7" y="1749" width="0.2" height="15.0" fill="rgb(232,13,35)" rx="2" ry="2" />
<text  x="429.73" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="946.5" y="1989" width="0.2" height="15.0" fill="rgb(222,65,49)" rx="2" ry="2" />
<text  x="949.54" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="593.4" y="1877" width="0.2" height="15.0" fill="rgb(223,140,1)" rx="2" ry="2" />
<text  x="596.38" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="856.1" y="1845" width="0.2" height="15.0" fill="rgb(211,42,29)" rx="2" ry="2" />
<text  x="859.09" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (100 samples, 1.70%)</title><rect x="502.5" y="2005" width="20.1" height="15.0" fill="rgb(218,18,4)" rx="2" ry="2" />
<text  x="505.54" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="69.8" y="1781" width="0.2" height="15.0" fill="rgb(221,6,22)" rx="2" ry="2" />
<text  x="72.76" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="405.5" y="1941" width="0.2" height="15.0" fill="rgb(224,214,32)" rx="2" ry="2" />
<text  x="408.47" y="1951.5" ></text>
</g>
<g >
<title>locks_remove_posix (4 samples, 0.07%)</title><rect x="840.1" y="1813" width="0.8" height="15.0" fill="rgb(254,82,43)" rx="2" ry="2" />
<text  x="843.05" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1128.6" y="1893" width="0.2" height="15.0" fill="rgb(246,3,4)" rx="2" ry="2" />
<text  x="1131.63" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="918.5" y="1685" width="0.2" height="15.0" fill="rgb(237,53,30)" rx="2" ry="2" />
<text  x="921.46" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="153.8" y="1717" width="0.2" height="15.0" fill="rgb(219,166,11)" rx="2" ry="2" />
<text  x="156.79" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="625.7" y="2021" width="0.4" height="15.0" fill="rgb(206,195,18)" rx="2" ry="2" />
<text  x="628.67" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="52.3" y="1957" width="1.0" height="15.0" fill="rgb(219,93,50)" rx="2" ry="2" />
<text  x="55.31" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="950.8" y="1941" width="0.2" height="15.0" fill="rgb(241,9,23)" rx="2" ry="2" />
<text  x="953.75" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (40 samples, 0.68%)</title><rect x="937.7" y="2005" width="8.0" height="15.0" fill="rgb(250,38,39)" rx="2" ry="2" />
<text  x="940.72" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="785.9" y="1557" width="0.4" height="15.0" fill="rgb(229,176,39)" rx="2" ry="2" />
<text  x="788.90" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="654.3" y="1925" width="0.2" height="15.0" fill="rgb(253,58,21)" rx="2" ry="2" />
<text  x="657.35" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="870.5" y="1989" width="0.2" height="15.0" fill="rgb(227,34,0)" rx="2" ry="2" />
<text  x="873.53" y="1999.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="394.8" y="1909" width="0.2" height="15.0" fill="rgb(250,4,47)" rx="2" ry="2" />
<text  x="397.84" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (54 samples, 0.92%)</title><rect x="1108.2" y="1893" width="10.8" height="15.0" fill="rgb(224,129,2)" rx="2" ry="2" />
<text  x="1111.18" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="277" width="16.1" height="15.0" fill="rgb(232,209,23)" rx="2" ry="2" />
<text  x="101.44" y="287.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1147.3" y="2005" width="0.2" height="15.0" fill="rgb(217,114,6)" rx="2" ry="2" />
<text  x="1150.28" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="708.1" y="1957" width="0.2" height="15.0" fill="rgb(208,178,25)" rx="2" ry="2" />
<text  x="711.09" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (4 samples, 0.07%)</title><rect x="1183.8" y="2021" width="0.8" height="15.0" fill="rgb(246,162,34)" rx="2" ry="2" />
<text  x="1186.78" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="905.8" y="1973" width="0.2" height="15.0" fill="rgb(222,89,2)" rx="2" ry="2" />
<text  x="908.83" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="524.2" y="1909" width="0.4" height="15.0" fill="rgb(219,159,25)" rx="2" ry="2" />
<text  x="527.19" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1176.0" y="1957" width="0.2" height="15.0" fill="rgb(240,6,6)" rx="2" ry="2" />
<text  x="1178.96" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="25.4" y="1429" width="0.2" height="15.0" fill="rgb(235,95,41)" rx="2" ry="2" />
<text  x="28.44" y="1439.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1122.6" y="1829" width="0.2" height="15.0" fill="rgb(223,80,34)" rx="2" ry="2" />
<text  x="1125.62" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="55.5" y="1909" width="0.2" height="15.0" fill="rgb(232,135,47)" rx="2" ry="2" />
<text  x="58.52" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="968.2" y="2005" width="0.2" height="15.0" fill="rgb(230,102,40)" rx="2" ry="2" />
<text  x="971.20" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="866.5" y="1989" width="0.2" height="15.0" fill="rgb(213,111,13)" rx="2" ry="2" />
<text  x="869.52" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="850.1" y="1845" width="0.2" height="15.0" fill="rgb(251,53,38)" rx="2" ry="2" />
<text  x="853.08" y="1855.5" ></text>
</g>
<g >
<title>inode_init_always (7 samples, 0.12%)</title><rect x="381.4" y="1909" width="1.4" height="15.0" fill="rgb(233,155,30)" rx="2" ry="2" />
<text  x="384.41" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="306.8" y="1813" width="0.6" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="309.80" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="841.1" y="1573" width="0.2" height="15.0" fill="rgb(214,5,38)" rx="2" ry="2" />
<text  x="844.05" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="71.6" y="1941" width="0.2" height="15.0" fill="rgb(220,127,27)" rx="2" ry="2" />
<text  x="74.57" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="817.2" y="1573" width="0.2" height="15.0" fill="rgb(247,137,30)" rx="2" ry="2" />
<text  x="820.19" y="1583.5" ></text>
</g>
<g >
<title>__fget (7 samples, 0.12%)</title><rect x="598.8" y="1813" width="1.4" height="15.0" fill="rgb(236,114,5)" rx="2" ry="2" />
<text  x="601.80" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="633.5" y="1957" width="0.2" height="15.0" fill="rgb(218,150,47)" rx="2" ry="2" />
<text  x="636.49" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (72 samples, 1.22%)</title><rect x="1153.7" y="2005" width="14.4" height="15.0" fill="rgb(218,119,4)" rx="2" ry="2" />
<text  x="1156.70" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="150.2" y="1909" width="0.2" height="15.0" fill="rgb(250,72,25)" rx="2" ry="2" />
<text  x="153.18" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (14 samples, 0.24%)</title><rect x="1140.7" y="2053" width="2.8" height="15.0" fill="rgb(248,4,6)" rx="2" ry="2" />
<text  x="1143.67" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="681.0" y="2021" width="0.2" height="15.0" fill="rgb(227,146,52)" rx="2" ry="2" />
<text  x="684.02" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="69.8" y="1653" width="0.2" height="15.0" fill="rgb(227,217,12)" rx="2" ry="2" />
<text  x="72.76" y="1663.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="676.4" y="1845" width="0.2" height="15.0" fill="rgb(233,4,51)" rx="2" ry="2" />
<text  x="679.41" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="1118.6" y="1765" width="0.4" height="15.0" fill="rgb(239,40,53)" rx="2" ry="2" />
<text  x="1121.61" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="658.6" y="2021" width="0.6" height="15.0" fill="rgb(219,211,11)" rx="2" ry="2" />
<text  x="661.56" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="475.5" y="1797" width="0.2" height="15.0" fill="rgb(239,154,50)" rx="2" ry="2" />
<text  x="478.46" y="1807.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1184.8" y="2037" width="0.6" height="15.0" fill="rgb(228,19,29)" rx="2" ry="2" />
<text  x="1187.79" y="2047.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="11.2" y="1941" width="0.2" height="15.0" fill="rgb(252,151,10)" rx="2" ry="2" />
<text  x="14.20" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="405.5" y="1797" width="0.2" height="15.0" fill="rgb(210,175,48)" rx="2" ry="2" />
<text  x="408.47" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="910.4" y="1989" width="1.2" height="15.0" fill="rgb(241,16,0)" rx="2" ry="2" />
<text  x="913.44" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="477.7" y="1765" width="0.2" height="15.0" fill="rgb(208,199,19)" rx="2" ry="2" />
<text  x="480.67" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="381.2" y="1701" width="0.2" height="15.0" fill="rgb(253,196,22)" rx="2" ry="2" />
<text  x="384.21" y="1711.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="751.0" y="1797" width="0.2" height="15.0" fill="rgb(245,136,24)" rx="2" ry="2" />
<text  x="754.01" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="24.6" y="1957" width="1.0" height="15.0" fill="rgb(247,71,36)" rx="2" ry="2" />
<text  x="27.64" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="399.7" y="1733" width="0.4" height="15.0" fill="rgb(222,105,3)" rx="2" ry="2" />
<text  x="402.66" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1150.9" y="1925" width="0.2" height="15.0" fill="rgb(224,131,35)" rx="2" ry="2" />
<text  x="1153.89" y="1935.5" ></text>
</g>
<g >
<title>process_backlog (47 samples, 0.80%)</title><rect x="1109.0" y="1701" width="9.4" height="15.0" fill="rgb(221,98,52)" rx="2" ry="2" />
<text  x="1111.98" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="623.1" y="2005" width="0.4" height="15.0" fill="rgb(221,101,20)" rx="2" ry="2" />
<text  x="626.06" y="2015.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (4 samples, 0.07%)</title><rect x="759.8" y="1717" width="0.8" height="15.0" fill="rgb(217,141,54)" rx="2" ry="2" />
<text  x="762.83" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="978.8" y="1941" width="2.0" height="15.0" fill="rgb(240,19,54)" rx="2" ry="2" />
<text  x="981.83" y="1951.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="539.4" y="1973" width="0.2" height="15.0" fill="rgb(211,92,29)" rx="2" ry="2" />
<text  x="542.44" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1094.5" y="1749" width="0.2" height="15.0" fill="rgb(212,21,23)" rx="2" ry="2" />
<text  x="1097.54" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="545.3" y="1845" width="0.2" height="15.0" fill="rgb(245,217,49)" rx="2" ry="2" />
<text  x="548.25" y="1855.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="245.6" y="1877" width="0.2" height="15.0" fill="rgb(215,40,44)" rx="2" ry="2" />
<text  x="248.64" y="1887.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (8 samples, 0.14%)</title><rect x="708.3" y="1989" width="1.6" height="15.0" fill="rgb(240,81,14)" rx="2" ry="2" />
<text  x="711.29" y="1999.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="78.6" y="1893" width="0.2" height="15.0" fill="rgb(228,5,21)" rx="2" ry="2" />
<text  x="81.59" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (4 samples, 0.07%)</title><rect x="879.8" y="1941" width="0.8" height="15.0" fill="rgb(242,8,34)" rx="2" ry="2" />
<text  x="882.76" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="600.8" y="1685" width="0.2" height="15.0" fill="rgb(241,57,46)" rx="2" ry="2" />
<text  x="603.80" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="142.8" y="1893" width="0.2" height="15.0" fill="rgb(209,43,7)" rx="2" ry="2" />
<text  x="145.76" y="1903.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="269.7" y="1813" width="0.2" height="15.0" fill="rgb(215,162,47)" rx="2" ry="2" />
<text  x="272.70" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (14 samples, 0.24%)</title><rect x="991.7" y="1973" width="2.8" height="15.0" fill="rgb(211,163,23)" rx="2" ry="2" />
<text  x="994.66" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="217.0" y="1909" width="2.6" height="15.0" fill="rgb(225,227,3)" rx="2" ry="2" />
<text  x="219.96" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="990.5" y="1925" width="0.2" height="15.0" fill="rgb(221,159,6)" rx="2" ry="2" />
<text  x="993.46" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="149.2" y="1749" width="0.2" height="15.0" fill="rgb(250,191,44)" rx="2" ry="2" />
<text  x="152.18" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="166.2" y="1957" width="0.2" height="15.0" fill="rgb(212,148,48)" rx="2" ry="2" />
<text  x="169.22" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="77.4" y="1941" width="0.4" height="15.0" fill="rgb(223,189,31)" rx="2" ry="2" />
<text  x="80.38" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="990.5" y="1957" width="0.2" height="15.0" fill="rgb(236,119,6)" rx="2" ry="2" />
<text  x="993.46" y="1967.5" ></text>
</g>
<g >
<title>kfree (23 samples, 0.39%)</title><rect x="1112.2" y="1445" width="4.6" height="15.0" fill="rgb(240,54,17)" rx="2" ry="2" />
<text  x="1115.19" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="67.8" y="1781" width="0.2" height="15.0" fill="rgb(215,89,31)" rx="2" ry="2" />
<text  x="70.76" y="1791.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="691.2" y="1925" width="0.2" height="15.0" fill="rgb(247,185,40)" rx="2" ry="2" />
<text  x="694.25" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="110.5" y="37" width="0.2" height="15.0" fill="rgb(231,228,28)" rx="2" ry="2" />
<text  x="113.47" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="583.2" y="1717" width="0.2" height="15.0" fill="rgb(225,134,42)" rx="2" ry="2" />
<text  x="586.15" y="1727.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1140.5" y="1749" width="0.2" height="15.0" fill="rgb(224,159,50)" rx="2" ry="2" />
<text  x="1143.47" y="1759.5" ></text>
</g>
<g >
<title>rb_erase_cached (10 samples, 0.17%)</title><rect x="468.4" y="1957" width="2.0" height="15.0" fill="rgb(236,228,31)" rx="2" ry="2" />
<text  x="471.44" y="1967.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="309.0" y="1813" width="0.2" height="15.0" fill="rgb(207,152,11)" rx="2" ry="2" />
<text  x="312.01" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (28 samples, 0.48%)</title><rect x="511.2" y="1989" width="5.6" height="15.0" fill="rgb(253,175,26)" rx="2" ry="2" />
<text  x="514.16" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="934.3" y="1909" width="0.2" height="15.0" fill="rgb(211,211,3)" rx="2" ry="2" />
<text  x="937.31" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="128.1" y="1957" width="0.4" height="15.0" fill="rgb(253,75,26)" rx="2" ry="2" />
<text  x="131.12" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="396.6" y="1893" width="0.4" height="15.0" fill="rgb(241,27,40)" rx="2" ry="2" />
<text  x="399.65" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="612.0" y="1845" width="0.4" height="15.0" fill="rgb(230,180,10)" rx="2" ry="2" />
<text  x="615.03" y="1855.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="477.7" y="1669" width="0.2" height="15.0" fill="rgb(234,38,30)" rx="2" ry="2" />
<text  x="480.67" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="579.7" y="2005" width="0.2" height="15.0" fill="rgb(217,138,54)" rx="2" ry="2" />
<text  x="582.75" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (14 samples, 0.24%)</title><rect x="540.8" y="1941" width="2.8" height="15.0" fill="rgb(205,144,1)" rx="2" ry="2" />
<text  x="543.84" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="108.9" y="37" width="0.8" height="15.0" fill="rgb(234,198,48)" rx="2" ry="2" />
<text  x="111.87" y="47.5" ></text>
</g>
<g >
<title>[unknown] (815 samples, 13.85%)</title><rect x="707.7" y="2005" width="163.4" height="15.0" fill="rgb(225,106,14)" rx="2" ry="2" />
<text  x="710.69" y="2015.5" >[unknown]</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="391.0" y="1653" width="0.2" height="15.0" fill="rgb(220,177,33)" rx="2" ry="2" />
<text  x="394.03" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1144.5" y="1797" width="0.2" height="15.0" fill="rgb(254,98,16)" rx="2" ry="2" />
<text  x="1147.48" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="69.8" y="1365" width="0.2" height="15.0" fill="rgb(245,174,6)" rx="2" ry="2" />
<text  x="72.76" y="1375.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="919.9" y="2005" width="0.2" height="15.0" fill="rgb(251,158,42)" rx="2" ry="2" />
<text  x="922.87" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="477.7" y="1797" width="0.2" height="15.0" fill="rgb(211,221,35)" rx="2" ry="2" />
<text  x="480.67" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="660.8" y="2005" width="0.2" height="15.0" fill="rgb(222,4,15)" rx="2" ry="2" />
<text  x="663.76" y="2015.5" ></text>
</g>
<g >
<title>new_slab (4 samples, 0.07%)</title><rect x="473.5" y="1925" width="0.8" height="15.0" fill="rgb(205,193,19)" rx="2" ry="2" />
<text  x="476.46" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.05%)</title><rect x="615.0" y="1893" width="0.6" height="15.0" fill="rgb(241,33,34)" rx="2" ry="2" />
<text  x="618.04" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="59.9" y="1877" width="0.4" height="15.0" fill="rgb(248,6,11)" rx="2" ry="2" />
<text  x="62.94" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="963.2" y="1749" width="0.2" height="15.0" fill="rgb(226,98,0)" rx="2" ry="2" />
<text  x="966.18" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="678.0" y="1797" width="0.2" height="15.0" fill="rgb(211,180,34)" rx="2" ry="2" />
<text  x="681.01" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="276.7" y="1477" width="0.4" height="15.0" fill="rgb(230,206,49)" rx="2" ry="2" />
<text  x="279.72" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="710.1" y="1989" width="0.2" height="15.0" fill="rgb(250,92,43)" rx="2" ry="2" />
<text  x="713.10" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="545.3" y="1973" width="0.2" height="15.0" fill="rgb(247,88,47)" rx="2" ry="2" />
<text  x="548.25" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1142.9" y="2005" width="0.2" height="15.0" fill="rgb(216,154,22)" rx="2" ry="2" />
<text  x="1145.87" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="56.3" y="1941" width="1.4" height="15.0" fill="rgb(226,154,36)" rx="2" ry="2" />
<text  x="59.33" y="1951.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="774.9" y="1669" width="0.2" height="15.0" fill="rgb(232,99,4)" rx="2" ry="2" />
<text  x="777.87" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (109 samples, 1.85%)</title><rect x="871.5" y="2005" width="21.9" height="15.0" fill="rgb(206,58,43)" rx="2" ry="2" />
<text  x="874.54" y="2015.5" >f..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="563.1" y="1829" width="0.2" height="15.0" fill="rgb(235,57,5)" rx="2" ry="2" />
<text  x="566.10" y="1839.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="24.8" y="1813" width="0.6" height="15.0" fill="rgb(236,121,38)" rx="2" ry="2" />
<text  x="27.84" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="645.5" y="1941" width="0.2" height="15.0" fill="rgb(237,179,26)" rx="2" ry="2" />
<text  x="648.52" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (4 samples, 0.07%)</title><rect x="134.1" y="1925" width="0.8" height="15.0" fill="rgb(223,120,29)" rx="2" ry="2" />
<text  x="137.14" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="143.2" y="1621" width="0.2" height="15.0" fill="rgb(243,65,50)" rx="2" ry="2" />
<text  x="146.16" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="563.1" y="1685" width="0.2" height="15.0" fill="rgb(206,142,32)" rx="2" ry="2" />
<text  x="566.10" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="922.7" y="1941" width="1.4" height="15.0" fill="rgb(251,38,27)" rx="2" ry="2" />
<text  x="925.68" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="62.3" y="1829" width="0.2" height="15.0" fill="rgb(228,226,26)" rx="2" ry="2" />
<text  x="65.34" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1155.5" y="1909" width="0.2" height="15.0" fill="rgb(239,157,24)" rx="2" ry="2" />
<text  x="1158.51" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="116.1" y="1717" width="0.2" height="15.0" fill="rgb(231,88,1)" rx="2" ry="2" />
<text  x="119.09" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="306.4" y="1509" width="0.2" height="15.0" fill="rgb(216,110,36)" rx="2" ry="2" />
<text  x="309.40" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="212.5" y="1829" width="0.2" height="15.0" fill="rgb(224,179,54)" rx="2" ry="2" />
<text  x="215.55" y="1839.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="148.4" y="1877" width="1.0" height="15.0" fill="rgb(205,91,35)" rx="2" ry="2" />
<text  x="151.38" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="924.3" y="1925" width="0.2" height="15.0" fill="rgb(242,225,45)" rx="2" ry="2" />
<text  x="927.28" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="475.5" y="1765" width="0.2" height="15.0" fill="rgb(214,179,31)" rx="2" ry="2" />
<text  x="478.46" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1155.5" y="1733" width="0.2" height="15.0" fill="rgb(240,138,19)" rx="2" ry="2" />
<text  x="1158.51" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="932.9" y="1877" width="0.2" height="15.0" fill="rgb(240,185,15)" rx="2" ry="2" />
<text  x="935.90" y="1887.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="247.0" y="1893" width="0.2" height="15.0" fill="rgb(231,224,53)" rx="2" ry="2" />
<text  x="250.04" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.77%)</title><rect x="98.0" y="1989" width="20.9" height="15.0" fill="rgb(232,199,6)" rx="2" ry="2" />
<text  x="101.04" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (2 samples, 0.03%)</title><rect x="850.5" y="1941" width="0.4" height="15.0" fill="rgb(235,207,13)" rx="2" ry="2" />
<text  x="853.48" y="1951.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="906.8" y="1973" width="0.6" height="15.0" fill="rgb(243,51,3)" rx="2" ry="2" />
<text  x="909.83" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="405.5" y="1957" width="0.2" height="15.0" fill="rgb(209,36,6)" rx="2" ry="2" />
<text  x="408.47" y="1967.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1074.9" y="1525" width="0.2" height="15.0" fill="rgb(227,21,3)" rx="2" ry="2" />
<text  x="1077.89" y="1535.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="477.1" y="1973" width="0.2" height="15.0" fill="rgb(236,185,1)" rx="2" ry="2" />
<text  x="480.07" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="550.7" y="1957" width="0.2" height="15.0" fill="rgb(214,21,43)" rx="2" ry="2" />
<text  x="553.67" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="994.3" y="1589" width="0.2" height="15.0" fill="rgb(250,0,27)" rx="2" ry="2" />
<text  x="997.27" y="1599.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.03%)</title><rect x="121.9" y="2005" width="0.4" height="15.0" fill="rgb(236,24,53)" rx="2" ry="2" />
<text  x="124.90" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="893.0" y="1877" width="0.2" height="15.0" fill="rgb(209,46,53)" rx="2" ry="2" />
<text  x="895.99" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="578.7" y="2021" width="0.2" height="15.0" fill="rgb(228,67,49)" rx="2" ry="2" />
<text  x="581.74" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (964 samples, 16.38%)</title><rect x="707.7" y="2037" width="193.3" height="15.0" fill="rgb(235,190,7)" rx="2" ry="2" />
<text  x="710.69" y="2047.5" >facebook::memcache::McSer..</text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="757.8" y="1477" width="0.2" height="15.0" fill="rgb(228,87,24)" rx="2" ry="2" />
<text  x="760.83" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="544.0" y="1829" width="0.2" height="15.0" fill="rgb(224,70,40)" rx="2" ry="2" />
<text  x="547.05" y="1839.5" ></text>
</g>
<g >
<title>free_unref_page (12 samples, 0.20%)</title><rect x="1080.7" y="1845" width="2.4" height="15.0" fill="rgb(233,15,33)" rx="2" ry="2" />
<text  x="1083.70" y="1855.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="56.9" y="1893" width="0.6" height="15.0" fill="rgb(249,129,23)" rx="2" ry="2" />
<text  x="59.93" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="221.2" y="1957" width="0.2" height="15.0" fill="rgb(214,216,4)" rx="2" ry="2" />
<text  x="224.17" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="405.5" y="1589" width="0.2" height="15.0" fill="rgb(229,9,29)" rx="2" ry="2" />
<text  x="408.47" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1164.5" y="1685" width="0.2" height="15.0" fill="rgb(223,81,1)" rx="2" ry="2" />
<text  x="1167.53" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="519.6" y="1989" width="0.2" height="15.0" fill="rgb(214,169,44)" rx="2" ry="2" />
<text  x="522.58" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.8" y="2021" width="0.2" height="15.0" fill="rgb(224,55,17)" rx="2" ry="2" />
<text  x="966.79" y="2031.5" ></text>
</g>
<g >
<title>ep_poll_callback (5 samples, 0.08%)</title><rect x="278.7" y="1429" width="1.0" height="15.0" fill="rgb(240,68,25)" rx="2" ry="2" />
<text  x="281.73" y="1439.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="510.8" y="1973" width="0.4" height="15.0" fill="rgb(215,67,35)" rx="2" ry="2" />
<text  x="513.76" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="148.4" y="1845" width="1.0" height="15.0" fill="rgb(231,97,42)" rx="2" ry="2" />
<text  x="151.38" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (5 samples, 0.08%)</title><rect x="930.1" y="1893" width="1.0" height="15.0" fill="rgb(229,173,47)" rx="2" ry="2" />
<text  x="933.10" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="149.6" y="1941" width="0.2" height="15.0" fill="rgb(214,120,18)" rx="2" ry="2" />
<text  x="152.58" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="81.6" y="1989" width="0.4" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="84.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="901.4" y="2005" width="0.8" height="15.0" fill="rgb(223,221,9)" rx="2" ry="2" />
<text  x="904.42" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.63%)</title><rect x="98.2" y="1829" width="19.3" height="15.0" fill="rgb(212,37,6)" rx="2" ry="2" />
<text  x="101.24" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="25.4" y="1621" width="0.2" height="15.0" fill="rgb(242,16,10)" rx="2" ry="2" />
<text  x="28.44" y="1631.5" ></text>
</g>
<g >
<title>SYSC_getpeername (1 samples, 0.02%)</title><rect x="673.4" y="1893" width="0.2" height="15.0" fill="rgb(208,63,4)" rx="2" ry="2" />
<text  x="676.40" y="1903.5" ></text>
</g>
<g >
<title>sys_accept4 (3 samples, 0.05%)</title><rect x="405.1" y="2005" width="0.6" height="15.0" fill="rgb(222,187,35)" rx="2" ry="2" />
<text  x="408.07" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="167.4" y="1973" width="1.0" height="15.0" fill="rgb(242,181,53)" rx="2" ry="2" />
<text  x="170.43" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="583.2" y="1765" width="0.2" height="15.0" fill="rgb(237,48,48)" rx="2" ry="2" />
<text  x="586.15" y="1775.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="160.8" y="1669" width="0.2" height="15.0" fill="rgb(252,192,36)" rx="2" ry="2" />
<text  x="163.81" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (82 samples, 1.39%)</title><rect x="203.9" y="1941" width="16.5" height="15.0" fill="rgb(232,17,48)" rx="2" ry="2" />
<text  x="206.93" y="1951.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1177.8" y="1957" width="0.2" height="15.0" fill="rgb(224,83,13)" rx="2" ry="2" />
<text  x="1180.77" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.2" y="2005" width="0.2" height="15.0" fill="rgb(223,61,41)" rx="2" ry="2" />
<text  x="960.17" y="2015.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="1164.7" y="1877" width="0.2" height="15.0" fill="rgb(251,139,30)" rx="2" ry="2" />
<text  x="1167.73" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="541.6" y="1909" width="0.2" height="15.0" fill="rgb(247,144,14)" rx="2" ry="2" />
<text  x="544.64" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="478.3" y="1893" width="0.6" height="15.0" fill="rgb(250,59,5)" rx="2" ry="2" />
<text  x="481.27" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="374.4" y="1813" width="0.4" height="15.0" fill="rgb(252,62,3)" rx="2" ry="2" />
<text  x="377.39" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.14%)</title><rect x="598.6" y="1829" width="1.6" height="15.0" fill="rgb(218,227,10)" rx="2" ry="2" />
<text  x="601.60" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="917.9" y="2021" width="0.4" height="15.0" fill="rgb(243,22,6)" rx="2" ry="2" />
<text  x="920.86" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="44.1" y="1925" width="0.6" height="15.0" fill="rgb(225,205,46)" rx="2" ry="2" />
<text  x="47.09" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="614.0" y="1797" width="1.0" height="15.0" fill="rgb(205,81,20)" rx="2" ry="2" />
<text  x="617.04" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="524.0" y="1909" width="0.2" height="15.0" fill="rgb(210,84,17)" rx="2" ry="2" />
<text  x="526.99" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1169.5" y="2053" width="0.2" height="15.0" fill="rgb(221,78,30)" rx="2" ry="2" />
<text  x="1172.54" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (10 samples, 0.17%)</title><rect x="931.1" y="1893" width="2.0" height="15.0" fill="rgb(252,98,44)" rx="2" ry="2" />
<text  x="934.10" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="131.5" y="1941" width="0.8" height="15.0" fill="rgb(226,11,27)" rx="2" ry="2" />
<text  x="134.53" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="91.0" y="2037" width="0.2" height="15.0" fill="rgb(208,147,17)" rx="2" ry="2" />
<text  x="94.02" y="2047.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="241.6" y="1893" width="0.8" height="15.0" fill="rgb(219,108,20)" rx="2" ry="2" />
<text  x="244.63" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="920.5" y="1989" width="0.4" height="15.0" fill="rgb(248,122,34)" rx="2" ry="2" />
<text  x="923.47" y="1999.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1117.6" y="1509" width="0.2" height="15.0" fill="rgb(230,30,17)" rx="2" ry="2" />
<text  x="1120.60" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1144.5" y="1845" width="0.2" height="15.0" fill="rgb(250,94,34)" rx="2" ry="2" />
<text  x="1147.48" y="1855.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="306.4" y="1493" width="0.2" height="15.0" fill="rgb(240,143,29)" rx="2" ry="2" />
<text  x="309.40" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1164.5" y="1733" width="0.2" height="15.0" fill="rgb(221,132,14)" rx="2" ry="2" />
<text  x="1167.53" y="1743.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="118.5" y="1925" width="0.2" height="15.0" fill="rgb(253,72,9)" rx="2" ry="2" />
<text  x="121.49" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="236.8" y="1877" width="0.4" height="15.0" fill="rgb(241,75,12)" rx="2" ry="2" />
<text  x="239.82" y="1887.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="93.0" y="2021" width="0.2" height="15.0" fill="rgb(239,168,42)" rx="2" ry="2" />
<text  x="96.03" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="363.8" y="1717" width="0.2" height="15.0" fill="rgb(220,87,4)" rx="2" ry="2" />
<text  x="366.76" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="69.8" y="1589" width="0.2" height="15.0" fill="rgb(212,192,33)" rx="2" ry="2" />
<text  x="72.76" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="153.8" y="1941" width="0.2" height="15.0" fill="rgb(242,55,21)" rx="2" ry="2" />
<text  x="156.79" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="963.2" y="1797" width="0.2" height="15.0" fill="rgb(223,14,42)" rx="2" ry="2" />
<text  x="966.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="148.0" y="1701" width="0.2" height="15.0" fill="rgb(231,0,8)" rx="2" ry="2" />
<text  x="150.97" y="1711.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (2 samples, 0.03%)</title><rect x="676.6" y="1845" width="0.4" height="15.0" fill="rgb(211,191,39)" rx="2" ry="2" />
<text  x="679.61" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (20 samples, 0.34%)</title><rect x="921.7" y="1957" width="4.0" height="15.0" fill="rgb(211,8,17)" rx="2" ry="2" />
<text  x="924.67" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="769.1" y="1685" width="0.2" height="15.0" fill="rgb(218,51,38)" rx="2" ry="2" />
<text  x="772.06" y="1695.5" ></text>
</g>
<g >
<title>tcp_close (375 samples, 6.37%)</title><rect x="758.0" y="1749" width="75.2" height="15.0" fill="rgb(233,129,35)" rx="2" ry="2" />
<text  x="761.03" y="1759.5" >tcp_close</text>
</g>
<g >
<title>[mcrouter] (26 samples, 0.44%)</title><rect x="981.0" y="1941" width="5.2" height="15.0" fill="rgb(224,57,42)" rx="2" ry="2" />
<text  x="984.03" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="160.8" y="1861" width="0.2" height="15.0" fill="rgb(220,49,40)" rx="2" ry="2" />
<text  x="163.81" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="930.7" y="1877" width="0.2" height="15.0" fill="rgb(248,91,29)" rx="2" ry="2" />
<text  x="933.70" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="776.5" y="1557" width="0.2" height="15.0" fill="rgb(206,36,29)" rx="2" ry="2" />
<text  x="779.48" y="1567.5" ></text>
</g>
<g >
<title>inet_getname (10 samples, 0.17%)</title><rect x="594.6" y="1861" width="2.0" height="15.0" fill="rgb(232,152,51)" rx="2" ry="2" />
<text  x="597.59" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (5 samples, 0.08%)</title><rect x="127.1" y="1957" width="1.0" height="15.0" fill="rgb(241,15,15)" rx="2" ry="2" />
<text  x="130.12" y="1967.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="712.7" y="1765" width="0.2" height="15.0" fill="rgb(231,150,15)" rx="2" ry="2" />
<text  x="715.71" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="477.7" y="1877" width="0.2" height="15.0" fill="rgb(251,142,45)" rx="2" ry="2" />
<text  x="480.67" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="945.7" y="2005" width="0.2" height="15.0" fill="rgb(247,174,21)" rx="2" ry="2" />
<text  x="948.74" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1053.8" y="1877" width="0.2" height="15.0" fill="rgb(214,78,6)" rx="2" ry="2" />
<text  x="1056.83" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="901.2" y="2037" width="0.2" height="15.0" fill="rgb(232,68,16)" rx="2" ry="2" />
<text  x="904.22" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="132.5" y="1909" width="0.6" height="15.0" fill="rgb(214,216,15)" rx="2" ry="2" />
<text  x="135.53" y="1919.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="760.6" y="1733" width="0.2" height="15.0" fill="rgb(251,184,20)" rx="2" ry="2" />
<text  x="763.64" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="963.2" y="1941" width="0.2" height="15.0" fill="rgb(243,2,38)" rx="2" ry="2" />
<text  x="966.18" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="907.4" y="1989" width="3.0" height="15.0" fill="rgb(211,92,35)" rx="2" ry="2" />
<text  x="910.43" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (1 samples, 0.02%)</title><rect x="89.4" y="2021" width="0.2" height="15.0" fill="rgb(229,185,26)" rx="2" ry="2" />
<text  x="92.42" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="713.1" y="1957" width="0.2" height="15.0" fill="rgb(221,191,12)" rx="2" ry="2" />
<text  x="716.11" y="1967.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="121.5" y="2005" width="0.4" height="15.0" fill="rgb(251,117,28)" rx="2" ry="2" />
<text  x="124.50" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="60.7" y="1909" width="1.2" height="15.0" fill="rgb(234,184,4)" rx="2" ry="2" />
<text  x="63.74" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="399.7" y="1637" width="0.2" height="15.0" fill="rgb(214,40,31)" rx="2" ry="2" />
<text  x="402.66" y="1647.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="975.8" y="1957" width="0.2" height="15.0" fill="rgb(215,66,1)" rx="2" ry="2" />
<text  x="978.82" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="24.6" y="1829" width="0.8" height="15.0" fill="rgb(229,158,8)" rx="2" ry="2" />
<text  x="27.64" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="550.1" y="1893" width="0.2" height="15.0" fill="rgb(212,208,52)" rx="2" ry="2" />
<text  x="553.06" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="545.7" y="1957" width="0.8" height="15.0" fill="rgb(240,110,13)" rx="2" ry="2" />
<text  x="548.65" y="1967.5" ></text>
</g>
<g >
<title>ip_output (139 samples, 2.36%)</title><rect x="780.5" y="1637" width="27.9" height="15.0" fill="rgb(228,120,42)" rx="2" ry="2" />
<text  x="783.49" y="1647.5" >i..</text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="841.1" y="1557" width="0.2" height="15.0" fill="rgb(254,173,20)" rx="2" ry="2" />
<text  x="844.05" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="690.0" y="1909" width="0.2" height="15.0" fill="rgb(226,103,48)" rx="2" ry="2" />
<text  x="693.04" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (104 samples, 1.77%)</title><rect x="969.4" y="2037" width="20.9" height="15.0" fill="rgb(233,71,41)" rx="2" ry="2" />
<text  x="972.40" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="266.5" y="1829" width="0.2" height="15.0" fill="rgb(207,122,4)" rx="2" ry="2" />
<text  x="269.50" y="1839.5" ></text>
</g>
<g >
<title>netdev_pick_tx (6 samples, 0.10%)</title><rect x="282.7" y="1701" width="1.2" height="15.0" fill="rgb(247,184,40)" rx="2" ry="2" />
<text  x="285.74" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="78.2" y="1893" width="0.2" height="15.0" fill="rgb(247,185,25)" rx="2" ry="2" />
<text  x="81.18" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="198.5" y="1941" width="0.4" height="15.0" fill="rgb(211,92,11)" rx="2" ry="2" />
<text  x="201.51" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (9 samples, 0.15%)</title><rect x="58.5" y="1909" width="1.8" height="15.0" fill="rgb(219,213,54)" rx="2" ry="2" />
<text  x="61.53" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="214.0" y="1765" width="0.2" height="15.0" fill="rgb(238,71,49)" rx="2" ry="2" />
<text  x="216.95" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="306.4" y="1685" width="0.2" height="15.0" fill="rgb(230,79,42)" rx="2" ry="2" />
<text  x="309.40" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="221.8" y="1925" width="0.2" height="15.0" fill="rgb(227,226,51)" rx="2" ry="2" />
<text  x="224.77" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="149.8" y="1941" width="0.2" height="15.0" fill="rgb(235,32,49)" rx="2" ry="2" />
<text  x="152.78" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="301.0" y="1637" width="0.2" height="15.0" fill="rgb(245,135,52)" rx="2" ry="2" />
<text  x="303.99" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (32 samples, 0.54%)</title><rect x="1145.7" y="2053" width="6.4" height="15.0" fill="rgb(227,65,53)" rx="2" ry="2" />
<text  x="1148.68" y="2063.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="315.4" y="1509" width="0.2" height="15.0" fill="rgb(238,151,19)" rx="2" ry="2" />
<text  x="318.43" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="112.3" y="53" width="0.8" height="15.0" fill="rgb(230,63,9)" rx="2" ry="2" />
<text  x="115.28" y="63.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="617.4" y="1941" width="0.2" height="15.0" fill="rgb(207,104,37)" rx="2" ry="2" />
<text  x="620.45" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="246.4" y="1781" width="0.2" height="15.0" fill="rgb(241,112,32)" rx="2" ry="2" />
<text  x="249.44" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (72 samples, 1.22%)</title><rect x="1153.7" y="2037" width="14.4" height="15.0" fill="rgb(213,87,34)" rx="2" ry="2" />
<text  x="1156.70" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="900.4" y="2005" width="0.6" height="15.0" fill="rgb(211,145,32)" rx="2" ry="2" />
<text  x="903.41" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="107.5" y="37" width="0.4" height="15.0" fill="rgb(251,203,16)" rx="2" ry="2" />
<text  x="110.46" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="363.8" y="1829" width="0.2" height="15.0" fill="rgb(228,70,51)" rx="2" ry="2" />
<text  x="366.76" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="426.7" y="1669" width="0.2" height="15.0" fill="rgb(210,104,2)" rx="2" ry="2" />
<text  x="429.73" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="1164.7" y="1893" width="0.8" height="15.0" fill="rgb(206,80,13)" rx="2" ry="2" />
<text  x="1167.73" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1140.5" y="1861" width="0.2" height="15.0" fill="rgb(209,123,15)" rx="2" ry="2" />
<text  x="1143.47" y="1871.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1137.7" y="2053" width="0.2" height="15.0" fill="rgb(245,41,12)" rx="2" ry="2" />
<text  x="1140.66" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="158.0" y="1989" width="0.2" height="15.0" fill="rgb(236,144,18)" rx="2" ry="2" />
<text  x="161.00" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="363.6" y="1717" width="0.2" height="15.0" fill="rgb(234,153,14)" rx="2" ry="2" />
<text  x="366.56" y="1727.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="261.3" y="1813" width="0.2" height="15.0" fill="rgb(254,51,27)" rx="2" ry="2" />
<text  x="264.28" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (4 samples, 0.07%)</title><rect x="1142.1" y="2005" width="0.8" height="15.0" fill="rgb(244,151,47)" rx="2" ry="2" />
<text  x="1145.07" y="2015.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="300.0" y="1685" width="0.4" height="15.0" fill="rgb(253,220,48)" rx="2" ry="2" />
<text  x="302.99" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="62.3" y="1877" width="0.2" height="15.0" fill="rgb(205,98,42)" rx="2" ry="2" />
<text  x="65.34" y="1887.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (18 samples, 0.31%)</title><rect x="397.3" y="1941" width="3.6" height="15.0" fill="rgb(221,111,42)" rx="2" ry="2" />
<text  x="400.25" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="30.3" y="1781" width="0.2" height="15.0" fill="rgb(214,119,24)" rx="2" ry="2" />
<text  x="33.25" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="697.7" y="1621" width="0.2" height="15.0" fill="rgb(226,180,45)" rx="2" ry="2" />
<text  x="700.66" y="1631.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="400.7" y="1909" width="0.2" height="15.0" fill="rgb(210,64,18)" rx="2" ry="2" />
<text  x="403.66" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1094.5" y="1637" width="0.2" height="15.0" fill="rgb(231,8,5)" rx="2" ry="2" />
<text  x="1097.54" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="221.8" y="1909" width="0.2" height="15.0" fill="rgb(249,2,13)" rx="2" ry="2" />
<text  x="224.77" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1140.5" y="1685" width="0.2" height="15.0" fill="rgb(205,163,1)" rx="2" ry="2" />
<text  x="1143.47" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1144.5" y="1909" width="0.2" height="15.0" fill="rgb(224,133,53)" rx="2" ry="2" />
<text  x="1147.48" y="1919.5" ></text>
</g>
<g >
<title>tcp_tso_segs (3 samples, 0.05%)</title><rect x="821.2" y="1685" width="0.6" height="15.0" fill="rgb(211,175,27)" rx="2" ry="2" />
<text  x="824.20" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="381.2" y="1845" width="0.2" height="15.0" fill="rgb(216,158,12)" rx="2" ry="2" />
<text  x="384.21" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="78.0" y="1909" width="0.4" height="15.0" fill="rgb(225,67,24)" rx="2" ry="2" />
<text  x="80.98" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="614.0" y="1845" width="1.0" height="15.0" fill="rgb(211,119,5)" rx="2" ry="2" />
<text  x="617.04" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (7 samples, 0.12%)</title><rect x="628.5" y="2005" width="1.4" height="15.0" fill="rgb(251,133,49)" rx="2" ry="2" />
<text  x="631.48" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_xmit (242 samples, 4.11%)</title><rect x="267.7" y="1845" width="48.5" height="15.0" fill="rgb(235,143,49)" rx="2" ry="2" />
<text  x="270.70" y="1855.5" >tcp_..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="949.9" y="1973" width="0.5" height="15.0" fill="rgb(229,30,16)" rx="2" ry="2" />
<text  x="952.95" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="696.1" y="1781" width="0.2" height="15.0" fill="rgb(209,71,29)" rx="2" ry="2" />
<text  x="699.06" y="1791.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="74.2" y="1925" width="0.4" height="15.0" fill="rgb(233,34,42)" rx="2" ry="2" />
<text  x="77.17" y="1935.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1118.8" y="1733" width="0.2" height="15.0" fill="rgb(247,23,45)" rx="2" ry="2" />
<text  x="1121.81" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="245.0" y="1877" width="0.6" height="15.0" fill="rgb(232,188,20)" rx="2" ry="2" />
<text  x="248.04" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="134.3" y="1893" width="0.6" height="15.0" fill="rgb(211,77,34)" rx="2" ry="2" />
<text  x="137.34" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="990.1" y="1941" width="0.2" height="15.0" fill="rgb(232,83,33)" rx="2" ry="2" />
<text  x="993.06" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (17 samples, 0.29%)</title><rect x="548.1" y="1989" width="3.4" height="15.0" fill="rgb(246,201,19)" rx="2" ry="2" />
<text  x="551.06" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (2 samples, 0.03%)</title><rect x="967.8" y="2005" width="0.4" height="15.0" fill="rgb(246,170,19)" rx="2" ry="2" />
<text  x="970.80" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="950.4" y="1989" width="0.8" height="15.0" fill="rgb(253,4,22)" rx="2" ry="2" />
<text  x="953.35" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="579.7" y="1973" width="0.2" height="15.0" fill="rgb(220,206,9)" rx="2" ry="2" />
<text  x="582.75" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="87.6" y="1973" width="0.2" height="15.0" fill="rgb(229,102,5)" rx="2" ry="2" />
<text  x="90.61" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="814.0" y="1509" width="0.2" height="15.0" fill="rgb(214,214,2)" rx="2" ry="2" />
<text  x="816.98" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1093.7" y="1749" width="0.2" height="15.0" fill="rgb(223,80,5)" rx="2" ry="2" />
<text  x="1096.74" y="1759.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="50.7" y="1941" width="0.8" height="15.0" fill="rgb(222,118,14)" rx="2" ry="2" />
<text  x="53.71" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="510.2" y="1909" width="0.2" height="15.0" fill="rgb(222,73,49)" rx="2" ry="2" />
<text  x="513.16" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="236.8" y="1781" width="0.2" height="15.0" fill="rgb(224,205,37)" rx="2" ry="2" />
<text  x="239.82" y="1791.5" ></text>
</g>
<g >
<title>rb_erase (3 samples, 0.05%)</title><rect x="1117.0" y="1509" width="0.6" height="15.0" fill="rgb(233,89,29)" rx="2" ry="2" />
<text  x="1120.00" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="912.0" y="1989" width="0.2" height="15.0" fill="rgb(213,106,35)" rx="2" ry="2" />
<text  x="915.05" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="306.4" y="1669" width="0.2" height="15.0" fill="rgb(206,21,12)" rx="2" ry="2" />
<text  x="309.40" y="1679.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="62.1" y="1957" width="0.2" height="15.0" fill="rgb(220,179,45)" rx="2" ry="2" />
<text  x="65.14" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="219.6" y="1925" width="0.4" height="15.0" fill="rgb(249,17,35)" rx="2" ry="2" />
<text  x="222.57" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.14%)</title><rect x="936.1" y="1973" width="1.6" height="15.0" fill="rgb(229,91,43)" rx="2" ry="2" />
<text  x="939.11" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="327.1" y="1957" width="0.4" height="15.0" fill="rgb(223,170,47)" rx="2" ry="2" />
<text  x="330.06" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="153.8" y="1909" width="0.2" height="15.0" fill="rgb(223,153,11)" rx="2" ry="2" />
<text  x="156.79" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="935.3" y="1925" width="0.2" height="15.0" fill="rgb(224,27,33)" rx="2" ry="2" />
<text  x="938.31" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="209.1" y="1893" width="0.2" height="15.0" fill="rgb(246,193,3)" rx="2" ry="2" />
<text  x="212.14" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="24.6" y="1941" width="1.0" height="15.0" fill="rgb(226,123,29)" rx="2" ry="2" />
<text  x="27.64" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1153.1" y="2053" width="0.2" height="15.0" fill="rgb(205,132,51)" rx="2" ry="2" />
<text  x="1156.10" y="2063.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="210.9" y="1445" width="0.2" height="15.0" fill="rgb(252,181,5)" rx="2" ry="2" />
<text  x="213.94" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (43 samples, 0.73%)</title><rect x="637.7" y="1989" width="8.6" height="15.0" fill="rgb(225,163,13)" rx="2" ry="2" />
<text  x="640.70" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="986.6" y="1973" width="1.1" height="15.0" fill="rgb(218,102,7)" rx="2" ry="2" />
<text  x="989.65" y="1983.5" ></text>
</g>
<g >
<title>__fd_install (2 samples, 0.03%)</title><rect x="344.1" y="1941" width="0.4" height="15.0" fill="rgb(225,173,6)" rx="2" ry="2" />
<text  x="347.11" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.3" y="1957" width="0.2" height="15.0" fill="rgb(214,175,51)" rx="2" ry="2" />
<text  x="65.34" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="690.0" y="1829" width="0.2" height="15.0" fill="rgb(213,116,35)" rx="2" ry="2" />
<text  x="693.04" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="709.9" y="1989" width="0.2" height="15.0" fill="rgb(237,51,33)" rx="2" ry="2" />
<text  x="712.90" y="1999.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.03%)</title><rect x="279.1" y="1349" width="0.4" height="15.0" fill="rgb(226,84,41)" rx="2" ry="2" />
<text  x="282.13" y="1359.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1000.3" y="2021" width="0.2" height="15.0" fill="rgb(206,179,40)" rx="2" ry="2" />
<text  x="1003.29" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="784.5" y="1477" width="0.2" height="15.0" fill="rgb(244,150,16)" rx="2" ry="2" />
<text  x="787.50" y="1487.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1178.6" y="1989" width="0.2" height="15.0" fill="rgb(239,205,47)" rx="2" ry="2" />
<text  x="1181.57" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="12.8" y="1861" width="0.8" height="15.0" fill="rgb(229,213,36)" rx="2" ry="2" />
<text  x="15.81" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="911.2" y="1973" width="0.4" height="15.0" fill="rgb(238,56,0)" rx="2" ry="2" />
<text  x="914.24" y="1983.5" ></text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="252.3" y="1861" width="0.8" height="15.0" fill="rgb(232,49,38)" rx="2" ry="2" />
<text  x="255.26" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7 samples, 0.12%)</title><rect x="278.3" y="1509" width="1.4" height="15.0" fill="rgb(228,98,41)" rx="2" ry="2" />
<text  x="281.33" y="1519.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="850.1" y="1685" width="0.2" height="15.0" fill="rgb(238,218,42)" rx="2" ry="2" />
<text  x="853.08" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (7 samples, 0.12%)</title><rect x="68.6" y="1925" width="1.4" height="15.0" fill="rgb(231,8,46)" rx="2" ry="2" />
<text  x="71.56" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1053.8" y="1893" width="0.2" height="15.0" fill="rgb(229,50,25)" rx="2" ry="2" />
<text  x="1056.83" y="1903.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="237.4" y="1973" width="0.2" height="15.0" fill="rgb(248,174,8)" rx="2" ry="2" />
<text  x="240.42" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1164.5" y="1701" width="0.2" height="15.0" fill="rgb(246,196,27)" rx="2" ry="2" />
<text  x="1167.53" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="162.2" y="1909" width="0.2" height="15.0" fill="rgb(210,210,4)" rx="2" ry="2" />
<text  x="165.21" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4 samples, 0.07%)</title><rect x="1175.0" y="1989" width="0.8" height="15.0" fill="rgb(252,98,53)" rx="2" ry="2" />
<text  x="1177.96" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="126.9" y="1941" width="0.2" height="15.0" fill="rgb(226,158,7)" rx="2" ry="2" />
<text  x="129.92" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="75.6" y="1829" width="0.2" height="15.0" fill="rgb(206,132,12)" rx="2" ry="2" />
<text  x="78.58" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="151.2" y="2005" width="0.6" height="15.0" fill="rgb(205,164,41)" rx="2" ry="2" />
<text  x="154.18" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1136.9" y="2037" width="0.4" height="15.0" fill="rgb(254,52,37)" rx="2" ry="2" />
<text  x="1139.86" y="2047.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="363.8" y="1637" width="0.2" height="15.0" fill="rgb(250,141,8)" rx="2" ry="2" />
<text  x="366.76" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="997.5" y="1989" width="0.6" height="15.0" fill="rgb(252,159,54)" rx="2" ry="2" />
<text  x="1000.48" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="573.1" y="1989" width="0.4" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="576.13" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="847.7" y="1909" width="0.2" height="15.0" fill="rgb(228,152,18)" rx="2" ry="2" />
<text  x="850.67" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (2 samples, 0.03%)</title><rect x="750.0" y="1765" width="0.4" height="15.0" fill="rgb(228,214,22)" rx="2" ry="2" />
<text  x="753.01" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1148.3" y="1669" width="0.2" height="15.0" fill="rgb(223,103,35)" rx="2" ry="2" />
<text  x="1151.29" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1155.5" y="1877" width="0.2" height="15.0" fill="rgb(250,149,29)" rx="2" ry="2" />
<text  x="1158.51" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="966.8" y="2021" width="0.8" height="15.0" fill="rgb(251,198,4)" rx="2" ry="2" />
<text  x="969.79" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="399.7" y="1653" width="0.2" height="15.0" fill="rgb(253,130,49)" rx="2" ry="2" />
<text  x="402.66" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="24.4" y="1861" width="0.2" height="15.0" fill="rgb(212,216,7)" rx="2" ry="2" />
<text  x="27.44" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="583.2" y="1749" width="0.2" height="15.0" fill="rgb(232,195,24)" rx="2" ry="2" />
<text  x="586.15" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (2 samples, 0.03%)</title><rect x="105.7" y="37" width="0.4" height="15.0" fill="rgb(254,42,7)" rx="2" ry="2" />
<text  x="108.66" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="932.9" y="1653" width="0.2" height="15.0" fill="rgb(238,82,27)" rx="2" ry="2" />
<text  x="935.90" y="1663.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="618.5" y="1829" width="0.2" height="15.0" fill="rgb(214,124,46)" rx="2" ry="2" />
<text  x="621.45" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="644.7" y="1925" width="0.2" height="15.0" fill="rgb(241,53,33)" rx="2" ry="2" />
<text  x="647.72" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="933" width="16.3" height="15.0" fill="rgb(237,78,25)" rx="2" ry="2" />
<text  x="101.44" y="943.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="721.9" y="1861" width="0.2" height="15.0" fill="rgb(217,87,42)" rx="2" ry="2" />
<text  x="724.93" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="69.8" y="1685" width="0.2" height="15.0" fill="rgb(231,185,34)" rx="2" ry="2" />
<text  x="72.76" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1074.9" y="1605" width="0.2" height="15.0" fill="rgb(230,135,31)" rx="2" ry="2" />
<text  x="1077.89" y="1615.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="750.4" y="1765" width="0.2" height="15.0" fill="rgb(239,77,35)" rx="2" ry="2" />
<text  x="753.41" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="153.2" y="1957" width="0.2" height="15.0" fill="rgb(215,210,54)" rx="2" ry="2" />
<text  x="156.19" y="1967.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="613.6" y="1829" width="0.2" height="15.0" fill="rgb(214,152,11)" rx="2" ry="2" />
<text  x="616.64" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="654.3" y="1877" width="0.2" height="15.0" fill="rgb(220,111,34)" rx="2" ry="2" />
<text  x="657.35" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (12 samples, 0.20%)</title><rect x="978.4" y="1989" width="2.4" height="15.0" fill="rgb(234,218,27)" rx="2" ry="2" />
<text  x="981.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="764.4" y="1733" width="0.2" height="15.0" fill="rgb(237,26,19)" rx="2" ry="2" />
<text  x="767.45" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="327.3" y="1845" width="0.2" height="15.0" fill="rgb(247,20,25)" rx="2" ry="2" />
<text  x="330.26" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (2 samples, 0.03%)</title><rect x="519.0" y="1957" width="0.4" height="15.0" fill="rgb(245,29,11)" rx="2" ry="2" />
<text  x="521.98" y="1967.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (4 samples, 0.07%)</title><rect x="1154.9" y="1973" width="0.8" height="15.0" fill="rgb(210,70,26)" rx="2" ry="2" />
<text  x="1157.90" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (14 samples, 0.24%)</title><rect x="277.1" y="1621" width="2.8" height="15.0" fill="rgb(208,117,44)" rx="2" ry="2" />
<text  x="280.12" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1094.5" y="1797" width="0.2" height="15.0" fill="rgb(244,71,26)" rx="2" ry="2" />
<text  x="1097.54" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="575.3" y="1909" width="0.2" height="15.0" fill="rgb(254,11,9)" rx="2" ry="2" />
<text  x="578.33" y="1919.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="821.0" y="1653" width="0.2" height="15.0" fill="rgb(225,224,32)" rx="2" ry="2" />
<text  x="824.00" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="620.3" y="1925" width="0.2" height="15.0" fill="rgb(239,139,41)" rx="2" ry="2" />
<text  x="623.25" y="1935.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="12.8" y="1973" width="0.8" height="15.0" fill="rgb(223,113,26)" rx="2" ry="2" />
<text  x="15.81" y="1983.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="597.4" y="1845" width="0.2" height="15.0" fill="rgb(254,27,3)" rx="2" ry="2" />
<text  x="600.39" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="149.2" y="1637" width="0.2" height="15.0" fill="rgb(228,138,18)" rx="2" ry="2" />
<text  x="152.18" y="1647.5" ></text>
</g>
<g >
<title>close@plt (1 samples, 0.02%)</title><rect x="844.7" y="1909" width="0.2" height="15.0" fill="rgb(242,186,18)" rx="2" ry="2" />
<text  x="847.66" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="217.4" y="1877" width="0.2" height="15.0" fill="rgb(234,200,39)" rx="2" ry="2" />
<text  x="220.36" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (12 samples, 0.20%)</title><rect x="942.3" y="1973" width="2.4" height="15.0" fill="rgb(251,197,54)" rx="2" ry="2" />
<text  x="945.33" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="309.2" y="1829" width="0.2" height="15.0" fill="rgb(253,31,13)" rx="2" ry="2" />
<text  x="312.21" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="757.8" y="1493" width="0.2" height="15.0" fill="rgb(235,172,30)" rx="2" ry="2" />
<text  x="760.83" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="832.6" y="1637" width="0.2" height="15.0" fill="rgb(248,214,46)" rx="2" ry="2" />
<text  x="835.63" y="1647.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="277.9" y="1525" width="0.2" height="15.0" fill="rgb(254,112,3)" rx="2" ry="2" />
<text  x="280.93" y="1535.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="369.6" y="1653" width="0.2" height="15.0" fill="rgb(235,65,45)" rx="2" ry="2" />
<text  x="372.58" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.14%)</title><rect x="402.5" y="1925" width="1.6" height="15.0" fill="rgb(207,39,31)" rx="2" ry="2" />
<text  x="405.46" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="673.6" y="1845" width="0.8" height="15.0" fill="rgb(254,126,51)" rx="2" ry="2" />
<text  x="676.60" y="1855.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="963.2" y="1733" width="0.2" height="15.0" fill="rgb(216,211,9)" rx="2" ry="2" />
<text  x="966.18" y="1743.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (4 samples, 0.07%)</title><rect x="1007.7" y="1973" width="0.8" height="15.0" fill="rgb(219,203,24)" rx="2" ry="2" />
<text  x="1010.71" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="814.0" y="1493" width="0.2" height="15.0" fill="rgb(252,31,30)" rx="2" ry="2" />
<text  x="816.98" y="1503.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (20 samples, 0.34%)</title><rect x="539.8" y="1973" width="4.0" height="15.0" fill="rgb(245,27,11)" rx="2" ry="2" />
<text  x="542.84" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (2 samples, 0.03%)</title><rect x="584.0" y="1909" width="0.4" height="15.0" fill="rgb(207,174,4)" rx="2" ry="2" />
<text  x="586.96" y="1919.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="649.5" y="1701" width="0.2" height="15.0" fill="rgb(208,7,16)" rx="2" ry="2" />
<text  x="652.53" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (2 samples, 0.03%)</title><rect x="70.8" y="1957" width="0.4" height="15.0" fill="rgb(238,22,37)" rx="2" ry="2" />
<text  x="73.76" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1140.5" y="1877" width="0.2" height="15.0" fill="rgb(237,64,8)" rx="2" ry="2" />
<text  x="1143.47" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (25 samples, 0.42%)</title><rect x="409.7" y="2021" width="5.0" height="15.0" fill="rgb(219,82,23)" rx="2" ry="2" />
<text  x="412.68" y="2031.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="131.5" y="1909" width="0.8" height="15.0" fill="rgb(209,69,52)" rx="2" ry="2" />
<text  x="134.53" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="823.6" y="1637" width="0.2" height="15.0" fill="rgb(244,73,43)" rx="2" ry="2" />
<text  x="826.61" y="1647.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="1142.7" y="1973" width="0.2" height="15.0" fill="rgb(241,99,3)" rx="2" ry="2" />
<text  x="1145.67" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="549.5" y="1957" width="0.2" height="15.0" fill="rgb(214,220,12)" rx="2" ry="2" />
<text  x="552.46" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="905.6" y="1973" width="0.2" height="15.0" fill="rgb(231,70,25)" rx="2" ry="2" />
<text  x="908.63" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.05%)</title><rect x="572.5" y="1989" width="0.6" height="15.0" fill="rgb(234,87,44)" rx="2" ry="2" />
<text  x="575.53" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (33 samples, 0.56%)</title><rect x="938.9" y="1989" width="6.6" height="15.0" fill="rgb(212,125,10)" rx="2" ry="2" />
<text  x="941.92" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1164.5" y="1445" width="0.2" height="15.0" fill="rgb(222,52,35)" rx="2" ry="2" />
<text  x="1167.53" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="111.9" y="69" width="0.4" height="15.0" fill="rgb(231,162,8)" rx="2" ry="2" />
<text  x="114.88" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="563.1" y="1877" width="0.2" height="15.0" fill="rgb(234,201,36)" rx="2" ry="2" />
<text  x="566.10" y="1887.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="246.4" y="1573" width="0.2" height="15.0" fill="rgb(220,172,51)" rx="2" ry="2" />
<text  x="249.44" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1181.8" y="1957" width="0.2" height="15.0" fill="rgb(240,161,32)" rx="2" ry="2" />
<text  x="1184.78" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="75.6" y="1669" width="0.2" height="15.0" fill="rgb(235,49,30)" rx="2" ry="2" />
<text  x="78.58" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1170.1" y="2053" width="0.2" height="15.0" fill="rgb(242,68,22)" rx="2" ry="2" />
<text  x="1173.15" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (13 samples, 0.22%)</title><rect x="58.1" y="1925" width="2.6" height="15.0" fill="rgb(236,221,16)" rx="2" ry="2" />
<text  x="61.13" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="148.0" y="1893" width="0.2" height="15.0" fill="rgb(236,215,51)" rx="2" ry="2" />
<text  x="150.97" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (9 samples, 0.15%)</title><rect x="711.3" y="1941" width="1.8" height="15.0" fill="rgb(217,185,5)" rx="2" ry="2" />
<text  x="714.30" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1122.6" y="1845" width="0.2" height="15.0" fill="rgb(254,50,14)" rx="2" ry="2" />
<text  x="1125.62" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="732.8" y="1845" width="0.2" height="15.0" fill="rgb(220,98,5)" rx="2" ry="2" />
<text  x="735.76" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="814.0" y="1637" width="0.2" height="15.0" fill="rgb(253,165,46)" rx="2" ry="2" />
<text  x="816.98" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="924.1" y="1941" width="1.0" height="15.0" fill="rgb(251,123,39)" rx="2" ry="2" />
<text  x="927.08" y="1951.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="110.9" y="53" width="0.2" height="15.0" fill="rgb(225,11,50)" rx="2" ry="2" />
<text  x="113.87" y="63.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1091.5" y="1637" width="0.2" height="15.0" fill="rgb(209,19,45)" rx="2" ry="2" />
<text  x="1094.53" y="1647.5" ></text>
</g>
<g >
<title>sock_alloc_inode (25 samples, 0.42%)</title><rect x="382.8" y="1909" width="5.0" height="15.0" fill="rgb(237,68,15)" rx="2" ry="2" />
<text  x="385.81" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="544.0" y="1925" width="0.2" height="15.0" fill="rgb(217,224,11)" rx="2" ry="2" />
<text  x="547.05" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1589" width="0.2" height="15.0" fill="rgb(228,56,6)" rx="2" ry="2" />
<text  x="844.05" y="1599.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="114.3" y="69" width="0.2" height="15.0" fill="rgb(251,85,22)" rx="2" ry="2" />
<text  x="117.28" y="79.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="67.6" y="1861" width="0.2" height="15.0" fill="rgb(225,4,44)" rx="2" ry="2" />
<text  x="70.56" y="1871.5" ></text>
</g>
<g >
<title>kfree_call_rcu (1 samples, 0.02%)</title><rect x="743.2" y="1685" width="0.2" height="15.0" fill="rgb(251,228,53)" rx="2" ry="2" />
<text  x="746.19" y="1695.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="885.2" y="1909" width="0.2" height="15.0" fill="rgb(243,31,7)" rx="2" ry="2" />
<text  x="888.17" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="25.4" y="1733" width="0.2" height="15.0" fill="rgb(210,148,25)" rx="2" ry="2" />
<text  x="28.44" y="1743.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="614.0" y="1669" width="0.2" height="15.0" fill="rgb(249,35,36)" rx="2" ry="2" />
<text  x="617.04" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="521.4" y="1973" width="0.4" height="15.0" fill="rgb(234,129,36)" rx="2" ry="2" />
<text  x="524.39" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="160.8" y="1733" width="0.2" height="15.0" fill="rgb(212,218,34)" rx="2" ry="2" />
<text  x="163.81" y="1743.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1184.8" y="2021" width="0.6" height="15.0" fill="rgb(241,127,26)" rx="2" ry="2" />
<text  x="1187.79" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="994.3" y="1621" width="0.2" height="15.0" fill="rgb(229,33,20)" rx="2" ry="2" />
<text  x="997.27" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="918.7" y="2037" width="0.2" height="15.0" fill="rgb(242,21,46)" rx="2" ry="2" />
<text  x="921.66" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="618.2" y="1909" width="1.1" height="15.0" fill="rgb(209,51,38)" rx="2" ry="2" />
<text  x="621.25" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="54.9" y="1925" width="1.4" height="15.0" fill="rgb(240,19,50)" rx="2" ry="2" />
<text  x="57.92" y="1935.5" ></text>
</g>
<g >
<title>sys_fcntl (1 samples, 0.02%)</title><rect x="563.3" y="1957" width="0.2" height="15.0" fill="rgb(206,85,42)" rx="2" ry="2" />
<text  x="566.30" y="1967.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(243,38,39)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="983.4" y="1877" width="0.4" height="15.0" fill="rgb(243,77,9)" rx="2" ry="2" />
<text  x="986.44" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1122.6" y="1893" width="0.2" height="15.0" fill="rgb(243,213,25)" rx="2" ry="2" />
<text  x="1125.62" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (5 samples, 0.08%)</title><rect x="101.6" y="37" width="1.1" height="15.0" fill="rgb(240,142,50)" rx="2" ry="2" />
<text  x="104.65" y="47.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1333" width="16.3" height="15.0" fill="rgb(219,28,45)" rx="2" ry="2" />
<text  x="101.44" y="1343.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="850.1" y="1717" width="0.2" height="15.0" fill="rgb(219,212,6)" rx="2" ry="2" />
<text  x="853.08" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (9 samples, 0.15%)</title><rect x="530.6" y="1989" width="1.8" height="15.0" fill="rgb(250,212,23)" rx="2" ry="2" />
<text  x="533.61" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="678.2" y="1925" width="0.2" height="15.0" fill="rgb(208,166,49)" rx="2" ry="2" />
<text  x="681.21" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="30.3" y="1829" width="0.2" height="15.0" fill="rgb(249,152,43)" rx="2" ry="2" />
<text  x="33.25" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="536.8" y="1893" width="0.4" height="15.0" fill="rgb(222,52,54)" rx="2" ry="2" />
<text  x="539.83" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1128.6" y="1877" width="0.2" height="15.0" fill="rgb(253,56,4)" rx="2" ry="2" />
<text  x="1131.63" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="150.4" y="1957" width="0.2" height="15.0" fill="rgb(221,152,23)" rx="2" ry="2" />
<text  x="153.38" y="1967.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(242,89,7)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="374.4" y="1653" width="0.2" height="15.0" fill="rgb(225,197,6)" rx="2" ry="2" />
<text  x="377.39" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="542.4" y="1893" width="1.2" height="15.0" fill="rgb(244,4,22)" rx="2" ry="2" />
<text  x="545.44" y="1903.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="893.0" y="1893" width="0.2" height="15.0" fill="rgb(245,129,30)" rx="2" ry="2" />
<text  x="895.99" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1094.5" y="1669" width="0.2" height="15.0" fill="rgb(231,42,15)" rx="2" ry="2" />
<text  x="1097.54" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1045" width="16.3" height="15.0" fill="rgb(221,6,13)" rx="2" ry="2" />
<text  x="101.44" y="1055.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="131.3" y="2005" width="0.2" height="15.0" fill="rgb(218,130,29)" rx="2" ry="2" />
<text  x="134.33" y="2015.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1148.3" y="1685" width="0.2" height="15.0" fill="rgb(212,123,29)" rx="2" ry="2" />
<text  x="1151.29" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="532.6" y="1989" width="0.2" height="15.0" fill="rgb(223,115,44)" rx="2" ry="2" />
<text  x="535.62" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="236.8" y="1957" width="0.4" height="15.0" fill="rgb(245,82,53)" rx="2" ry="2" />
<text  x="239.82" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="80.2" y="1909" width="0.2" height="15.0" fill="rgb(226,115,23)" rx="2" ry="2" />
<text  x="83.19" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="12.8" y="1877" width="0.8" height="15.0" fill="rgb(229,171,53)" rx="2" ry="2" />
<text  x="15.81" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="381.2" y="1685" width="0.2" height="15.0" fill="rgb(214,138,21)" rx="2" ry="2" />
<text  x="384.21" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="575.3" y="1749" width="0.2" height="15.0" fill="rgb(246,204,23)" rx="2" ry="2" />
<text  x="578.33" y="1759.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="426.7" y="1685" width="0.2" height="15.0" fill="rgb(209,211,53)" rx="2" ry="2" />
<text  x="429.73" y="1695.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="506.1" y="1909" width="0.2" height="15.0" fill="rgb(213,120,17)" rx="2" ry="2" />
<text  x="509.15" y="1919.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="649.5" y="1685" width="0.2" height="15.0" fill="rgb(238,140,10)" rx="2" ry="2" />
<text  x="652.53" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1128.6" y="1925" width="0.2" height="15.0" fill="rgb(207,116,24)" rx="2" ry="2" />
<text  x="1131.63" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1100.8" y="1781" width="0.2" height="15.0" fill="rgb(209,114,46)" rx="2" ry="2" />
<text  x="1103.76" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.1" y="1797" width="0.2" height="15.0" fill="rgb(219,61,0)" rx="2" ry="2" />
<text  x="844.05" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1182.6" y="1989" width="0.2" height="15.0" fill="rgb(242,198,48)" rx="2" ry="2" />
<text  x="1185.58" y="1999.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (19 samples, 0.32%)</title><rect x="347.9" y="1941" width="3.8" height="15.0" fill="rgb(223,82,39)" rx="2" ry="2" />
<text  x="350.92" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="573.7" y="1989" width="1.4" height="15.0" fill="rgb(254,177,12)" rx="2" ry="2" />
<text  x="576.73" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (10 samples, 0.17%)</title><rect x="361.6" y="1893" width="2.0" height="15.0" fill="rgb(239,150,49)" rx="2" ry="2" />
<text  x="364.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="161.2" y="2021" width="1.4" height="15.0" fill="rgb(206,93,26)" rx="2" ry="2" />
<text  x="164.21" y="2031.5" ></text>
</g>
<g >
<title>sock_sendmsg (408 samples, 6.93%)</title><rect x="242.6" y="1941" width="81.9" height="15.0" fill="rgb(229,44,12)" rx="2" ry="2" />
<text  x="245.63" y="1951.5" >sock_send..</text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="741.6" y="1701" width="0.2" height="15.0" fill="rgb(254,118,26)" rx="2" ry="2" />
<text  x="744.58" y="1711.5" ></text>
</g>
<g >
<title>_copy_to_iter (22 samples, 0.37%)</title><rect x="1101.0" y="1909" width="4.4" height="15.0" fill="rgb(239,61,36)" rx="2" ry="2" />
<text  x="1103.96" y="1919.5" ></text>
</g>
<g >
<title>__close_fd (13 samples, 0.22%)</title><rect x="838.6" y="1845" width="2.7" height="15.0" fill="rgb(250,69,12)" rx="2" ry="2" />
<text  x="841.65" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="133.1" y="1941" width="0.2" height="15.0" fill="rgb(223,46,10)" rx="2" ry="2" />
<text  x="136.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="1018.1" y="2005" width="0.6" height="15.0" fill="rgb(206,118,12)" rx="2" ry="2" />
<text  x="1021.13" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="30.3" y="1861" width="0.2" height="15.0" fill="rgb(244,112,16)" rx="2" ry="2" />
<text  x="33.25" y="1871.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.02%)</title><rect x="563.5" y="1925" width="0.2" height="15.0" fill="rgb(226,92,7)" rx="2" ry="2" />
<text  x="566.50" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="563.7" y="1909" width="0.4" height="15.0" fill="rgb(226,105,38)" rx="2" ry="2" />
<text  x="566.70" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="891.2" y="1909" width="0.4" height="15.0" fill="rgb(220,138,51)" rx="2" ry="2" />
<text  x="894.19" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="776.5" y="1573" width="0.2" height="15.0" fill="rgb(231,195,0)" rx="2" ry="2" />
<text  x="779.48" y="1583.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1181.6" y="2021" width="0.2" height="15.0" fill="rgb(229,89,2)" rx="2" ry="2" />
<text  x="1184.58" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1509" width="17.1" height="15.0" fill="rgb(213,214,35)" rx="2" ry="2" />
<text  x="101.44" y="1519.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="510.4" y="1909" width="0.2" height="15.0" fill="rgb(240,64,31)" rx="2" ry="2" />
<text  x="513.36" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (9 samples, 0.15%)</title><rect x="213.2" y="1877" width="1.8" height="15.0" fill="rgb(218,16,14)" rx="2" ry="2" />
<text  x="216.15" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="579.7" y="1605" width="0.2" height="15.0" fill="rgb(228,94,33)" rx="2" ry="2" />
<text  x="582.75" y="1615.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="369.6" y="1605" width="0.2" height="15.0" fill="rgb(228,136,7)" rx="2" ry="2" />
<text  x="372.58" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.07%)</title><rect x="131.5" y="1989" width="0.8" height="15.0" fill="rgb(243,18,26)" rx="2" ry="2" />
<text  x="134.53" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="2005" width="0.2" height="15.0" fill="rgb(207,6,32)" rx="2" ry="2" />
<text  x="920.86" y="2015.5" ></text>
</g>
<g >
<title>dput (79 samples, 1.34%)</title><rect x="735.2" y="1797" width="15.8" height="15.0" fill="rgb(249,101,40)" rx="2" ry="2" />
<text  x="738.17" y="1807.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (7 samples, 0.12%)</title><rect x="986.2" y="1989" width="1.5" height="15.0" fill="rgb(206,72,50)" rx="2" ry="2" />
<text  x="989.25" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1164.5" y="1845" width="0.2" height="15.0" fill="rgb(232,11,23)" rx="2" ry="2" />
<text  x="1167.53" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="474.3" y="1957" width="0.2" height="15.0" fill="rgb(245,20,6)" rx="2" ry="2" />
<text  x="477.26" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (21 samples, 0.36%)</title><rect x="921.5" y="1973" width="4.2" height="15.0" fill="rgb(210,3,51)" rx="2" ry="2" />
<text  x="924.47" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="832.6" y="1605" width="0.2" height="15.0" fill="rgb(217,54,48)" rx="2" ry="2" />
<text  x="835.63" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="374.4" y="1749" width="0.4" height="15.0" fill="rgb(233,186,9)" rx="2" ry="2" />
<text  x="377.39" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (71 samples, 1.21%)</title><rect x="133.9" y="1941" width="14.3" height="15.0" fill="rgb(206,116,52)" rx="2" ry="2" />
<text  x="136.94" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="452.6" y="1893" width="0.8" height="15.0" fill="rgb(234,168,54)" rx="2" ry="2" />
<text  x="455.60" y="1903.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (28 samples, 0.48%)</title><rect x="692.3" y="1925" width="5.6" height="15.0" fill="rgb(251,46,0)" rx="2" ry="2" />
<text  x="695.25" y="1935.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="1094.1" y="1861" width="0.2" height="15.0" fill="rgb(234,207,15)" rx="2" ry="2" />
<text  x="1097.14" y="1871.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (5 samples, 0.08%)</title><rect x="739.2" y="1717" width="1.0" height="15.0" fill="rgb(207,188,44)" rx="2" ry="2" />
<text  x="742.18" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="711.3" y="1893" width="0.2" height="15.0" fill="rgb(205,222,17)" rx="2" ry="2" />
<text  x="714.30" y="1903.5" ></text>
</g>
<g >
<title>up_write (10 samples, 0.17%)</title><rect x="834.6" y="1765" width="2.0" height="15.0" fill="rgb(216,10,41)" rx="2" ry="2" />
<text  x="837.64" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1143.1" y="2021" width="0.2" height="15.0" fill="rgb(245,141,29)" rx="2" ry="2" />
<text  x="1146.07" y="2031.5" ></text>
</g>
<g >
<title>SYSC_accept4 (306 samples, 5.20%)</title><rect x="342.9" y="1973" width="61.4" height="15.0" fill="rgb(239,134,40)" rx="2" ry="2" />
<text  x="345.90" y="1983.5" >SYSC_a..</text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (2 samples, 0.03%)</title><rect x="1179.8" y="2053" width="0.4" height="15.0" fill="rgb(219,195,37)" rx="2" ry="2" />
<text  x="1182.77" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="544.0" y="1845" width="0.2" height="15.0" fill="rgb(211,215,39)" rx="2" ry="2" />
<text  x="547.05" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (65 samples, 1.10%)</title><rect x="637.1" y="2037" width="13.0" height="15.0" fill="rgb(254,195,6)" rx="2" ry="2" />
<text  x="640.10" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="994.3" y="1797" width="0.2" height="15.0" fill="rgb(233,219,24)" rx="2" ry="2" />
<text  x="997.27" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="898.6" y="2005" width="0.2" height="15.0" fill="rgb(214,133,3)" rx="2" ry="2" />
<text  x="901.61" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1053.8" y="1957" width="0.2" height="15.0" fill="rgb(208,121,13)" rx="2" ry="2" />
<text  x="1056.83" y="1967.5" ></text>
</g>
<g >
<title>__close (22 samples, 0.37%)</title><rect x="952.4" y="1973" width="4.4" height="15.0" fill="rgb(212,133,44)" rx="2" ry="2" />
<text  x="955.36" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.7" y="1973" width="0.2" height="15.0" fill="rgb(226,161,5)" rx="2" ry="2" />
<text  x="123.70" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="148.0" y="1813" width="0.2" height="15.0" fill="rgb(231,117,49)" rx="2" ry="2" />
<text  x="150.97" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="327.1" y="1989" width="0.4" height="15.0" fill="rgb(230,194,10)" rx="2" ry="2" />
<text  x="330.06" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="575.3" y="1957" width="0.2" height="15.0" fill="rgb(206,157,54)" rx="2" ry="2" />
<text  x="578.33" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="604.6" y="2021" width="0.2" height="15.0" fill="rgb(244,147,16)" rx="2" ry="2" />
<text  x="607.61" y="2031.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="870.9" y="1989" width="0.2" height="15.0" fill="rgb(240,180,3)" rx="2" ry="2" />
<text  x="873.93" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="131.5" y="1877" width="0.8" height="15.0" fill="rgb(248,31,22)" rx="2" ry="2" />
<text  x="134.53" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="478.3" y="1909" width="0.6" height="15.0" fill="rgb(235,121,37)" rx="2" ry="2" />
<text  x="481.27" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="475.5" y="1701" width="0.2" height="15.0" fill="rgb(209,33,49)" rx="2" ry="2" />
<text  x="478.46" y="1711.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="929.9" y="1893" width="0.2" height="15.0" fill="rgb(220,223,30)" rx="2" ry="2" />
<text  x="932.89" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1074.9" y="1397" width="0.2" height="15.0" fill="rgb(233,112,49)" rx="2" ry="2" />
<text  x="1077.89" y="1407.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="363.6" y="1605" width="0.2" height="15.0" fill="rgb(222,125,54)" rx="2" ry="2" />
<text  x="366.56" y="1615.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="87.4" y="1957" width="0.2" height="15.0" fill="rgb(244,79,21)" rx="2" ry="2" />
<text  x="90.41" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="327.1" y="1941" width="0.2" height="15.0" fill="rgb(247,45,29)" rx="2" ry="2" />
<text  x="330.06" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (497 samples, 8.45%)</title><rect x="227.2" y="2021" width="99.7" height="15.0" fill="rgb(206,211,27)" rx="2" ry="2" />
<text  x="230.19" y="2031.5" >entry_SYSCAL..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="89.2" y="2005" width="0.2" height="15.0" fill="rgb(209,220,30)" rx="2" ry="2" />
<text  x="92.21" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="315.4" y="1669" width="0.2" height="15.0" fill="rgb(218,135,39)" rx="2" ry="2" />
<text  x="318.43" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="617.8" y="1973" width="0.2" height="15.0" fill="rgb(237,192,9)" rx="2" ry="2" />
<text  x="620.85" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="575.5" y="1893" width="0.2" height="15.0" fill="rgb(244,143,3)" rx="2" ry="2" />
<text  x="578.53" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13 samples, 0.22%)</title><rect x="378.4" y="1925" width="2.6" height="15.0" fill="rgb(220,16,37)" rx="2" ry="2" />
<text  x="381.40" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1091.5" y="1781" width="0.2" height="15.0" fill="rgb(216,0,12)" rx="2" ry="2" />
<text  x="1094.53" y="1791.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="95.8" y="1669" width="0.2" height="15.0" fill="rgb(225,96,28)" rx="2" ry="2" />
<text  x="98.83" y="1679.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="186.9" y="2037" width="0.2" height="15.0" fill="rgb(211,155,49)" rx="2" ry="2" />
<text  x="189.88" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="218.6" y="1861" width="0.2" height="15.0" fill="rgb(214,88,5)" rx="2" ry="2" />
<text  x="221.57" y="1871.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="183.1" y="2021" width="0.4" height="15.0" fill="rgb(225,175,48)" rx="2" ry="2" />
<text  x="186.07" y="2031.5" ></text>
</g>
<g >
<title>skb_clone (15 samples, 0.25%)</title><rect x="809.0" y="1669" width="3.0" height="15.0" fill="rgb(221,135,8)" rx="2" ry="2" />
<text  x="811.97" y="1679.5" ></text>
</g>
<g >
<title>tcp_set_state (2 samples, 0.03%)</title><rect x="832.8" y="1733" width="0.4" height="15.0" fill="rgb(231,81,31)" rx="2" ry="2" />
<text  x="835.83" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="620.3" y="1989" width="0.2" height="15.0" fill="rgb(217,22,54)" rx="2" ry="2" />
<text  x="623.25" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (19 samples, 0.32%)</title><rect x="311.8" y="1765" width="3.8" height="15.0" fill="rgb(244,217,48)" rx="2" ry="2" />
<text  x="314.82" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="494.1" y="1589" width="0.2" height="15.0" fill="rgb(240,0,34)" rx="2" ry="2" />
<text  x="497.11" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="278.9" y="1397" width="0.6" height="15.0" fill="rgb(232,13,48)" rx="2" ry="2" />
<text  x="281.93" y="1407.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (3 samples, 0.05%)</title><rect x="1185.4" y="2053" width="0.6" height="15.0" fill="rgb(229,183,3)" rx="2" ry="2" />
<text  x="1188.39" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1143.3" y="1989" width="0.2" height="15.0" fill="rgb(231,51,17)" rx="2" ry="2" />
<text  x="1146.27" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="563.1" y="1637" width="0.2" height="15.0" fill="rgb(240,18,30)" rx="2" ry="2" />
<text  x="566.10" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="30.3" y="1813" width="0.2" height="15.0" fill="rgb(214,88,30)" rx="2" ry="2" />
<text  x="33.25" y="1823.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="244.0" y="1813" width="1.0" height="15.0" fill="rgb(254,213,25)" rx="2" ry="2" />
<text  x="247.03" y="1823.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="897.2" y="1925" width="0.2" height="15.0" fill="rgb(222,130,53)" rx="2" ry="2" />
<text  x="900.21" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1140.5" y="1941" width="0.2" height="15.0" fill="rgb(237,196,5)" rx="2" ry="2" />
<text  x="1143.47" y="1951.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 0.02%)</title><rect x="699.5" y="1925" width="0.2" height="15.0" fill="rgb(213,188,53)" rx="2" ry="2" />
<text  x="702.47" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1100.8" y="1637" width="0.2" height="15.0" fill="rgb(229,147,8)" rx="2" ry="2" />
<text  x="1103.76" y="1647.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (47 samples, 0.80%)</title><rect x="253.9" y="1877" width="9.4" height="15.0" fill="rgb(221,188,34)" rx="2" ry="2" />
<text  x="256.86" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="951.0" y="1957" width="0.2" height="15.0" fill="rgb(230,88,45)" rx="2" ry="2" />
<text  x="953.95" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="315.4" y="1685" width="0.2" height="15.0" fill="rgb(232,203,35)" rx="2" ry="2" />
<text  x="318.43" y="1695.5" ></text>
</g>
<g >
<title>copyin (3 samples, 0.05%)</title><rect x="253.3" y="1877" width="0.6" height="15.0" fill="rgb(247,85,51)" rx="2" ry="2" />
<text  x="256.26" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.1" y="1717" width="0.2" height="15.0" fill="rgb(239,103,0)" rx="2" ry="2" />
<text  x="844.05" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="648.3" y="1957" width="0.6" height="15.0" fill="rgb(222,100,2)" rx="2" ry="2" />
<text  x="651.33" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="612.0" y="1829" width="0.2" height="15.0" fill="rgb(228,9,15)" rx="2" ry="2" />
<text  x="615.03" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="148.0" y="1781" width="0.2" height="15.0" fill="rgb(249,93,2)" rx="2" ry="2" />
<text  x="150.97" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="197" width="15.9" height="15.0" fill="rgb(220,126,48)" rx="2" ry="2" />
<text  x="101.44" y="207.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="868.1" y="1973" width="0.4" height="15.0" fill="rgb(208,144,20)" rx="2" ry="2" />
<text  x="871.13" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="932.9" y="1781" width="0.2" height="15.0" fill="rgb(209,41,35)" rx="2" ry="2" />
<text  x="935.90" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="109.7" y="37" width="0.2" height="15.0" fill="rgb(208,138,22)" rx="2" ry="2" />
<text  x="112.67" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="475.5" y="1845" width="0.2" height="15.0" fill="rgb(206,184,28)" rx="2" ry="2" />
<text  x="478.46" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.02%)</title><rect x="611.2" y="1861" width="0.2" height="15.0" fill="rgb(207,206,36)" rx="2" ry="2" />
<text  x="614.23" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="677.8" y="1877" width="0.4" height="15.0" fill="rgb(208,62,5)" rx="2" ry="2" />
<text  x="680.81" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="575.3" y="1669" width="0.2" height="15.0" fill="rgb(243,113,51)" rx="2" ry="2" />
<text  x="578.33" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1182.4" y="2005" width="0.4" height="15.0" fill="rgb(214,200,45)" rx="2" ry="2" />
<text  x="1185.38" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="649.5" y="1861" width="0.2" height="15.0" fill="rgb(237,4,12)" rx="2" ry="2" />
<text  x="652.53" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (37 samples, 0.63%)</title><rect x="638.9" y="1973" width="7.4" height="15.0" fill="rgb(242,82,40)" rx="2" ry="2" />
<text  x="641.91" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="369.6" y="1749" width="0.2" height="15.0" fill="rgb(228,12,20)" rx="2" ry="2" />
<text  x="372.58" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="705.1" y="1989" width="0.2" height="15.0" fill="rgb(249,135,20)" rx="2" ry="2" />
<text  x="708.08" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="224.6" y="2021" width="2.6" height="15.0" fill="rgb(209,80,12)" rx="2" ry="2" />
<text  x="227.58" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="363.8" y="1685" width="0.2" height="15.0" fill="rgb(207,43,9)" rx="2" ry="2" />
<text  x="366.76" y="1695.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.5" y="1829" width="0.2" height="15.0" fill="rgb(253,172,11)" rx="2" ry="2" />
<text  x="120.49" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="633.5" y="1925" width="0.2" height="15.0" fill="rgb(216,108,10)" rx="2" ry="2" />
<text  x="636.49" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="563.1" y="1813" width="0.2" height="15.0" fill="rgb(205,11,13)" rx="2" ry="2" />
<text  x="566.10" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1189.8" y="2021" width="0.2" height="15.0" fill="rgb(226,135,13)" rx="2" ry="2" />
<text  x="1192.80" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="932.9" y="1861" width="0.2" height="15.0" fill="rgb(209,101,16)" rx="2" ry="2" />
<text  x="935.90" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1074.9" y="1749" width="0.2" height="15.0" fill="rgb(226,100,31)" rx="2" ry="2" />
<text  x="1077.89" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="146.0" y="1701" width="0.2" height="15.0" fill="rgb(250,150,34)" rx="2" ry="2" />
<text  x="148.97" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.36%)</title><rect x="484.9" y="2021" width="16.0" height="15.0" fill="rgb(208,167,30)" rx="2" ry="2" />
<text  x="487.89" y="2031.5" ></text>
</g>
<g >
<title>inet_csk_accept (87 samples, 1.48%)</title><rect x="351.7" y="1941" width="17.5" height="15.0" fill="rgb(210,111,22)" rx="2" ry="2" />
<text  x="354.73" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="832.6" y="1589" width="0.2" height="15.0" fill="rgb(243,66,11)" rx="2" ry="2" />
<text  x="835.63" y="1599.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="886.6" y="1941" width="0.2" height="15.0" fill="rgb(210,173,40)" rx="2" ry="2" />
<text  x="889.58" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1155.5" y="1845" width="0.2" height="15.0" fill="rgb(249,21,8)" rx="2" ry="2" />
<text  x="1158.51" y="1855.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (29 samples, 0.49%)</title><rect x="814.4" y="1669" width="5.8" height="15.0" fill="rgb(241,212,25)" rx="2" ry="2" />
<text  x="817.38" y="1679.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.14%)</title><rect x="1052.4" y="1973" width="1.6" height="15.0" fill="rgb(223,142,49)" rx="2" ry="2" />
<text  x="1055.43" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="133.1" y="1893" width="0.2" height="15.0" fill="rgb(211,154,18)" rx="2" ry="2" />
<text  x="136.13" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::close (618 samples, 10.50%)</title><rect x="720.9" y="1925" width="124.0" height="15.0" fill="rgb(253,125,40)" rx="2" ry="2" />
<text  x="723.93" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>release_sock (8 samples, 0.14%)</title><rect x="1092.3" y="1925" width="1.6" height="15.0" fill="rgb(223,114,6)" rx="2" ry="2" />
<text  x="1095.34" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="660.0" y="2005" width="0.2" height="15.0" fill="rgb(253,108,18)" rx="2" ry="2" />
<text  x="662.96" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="25.4" y="1413" width="0.2" height="15.0" fill="rgb(235,54,3)" rx="2" ry="2" />
<text  x="28.44" y="1423.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="162.8" y="2021" width="0.6" height="15.0" fill="rgb(251,166,26)" rx="2" ry="2" />
<text  x="165.81" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="143.2" y="1797" width="0.2" height="15.0" fill="rgb(234,91,23)" rx="2" ry="2" />
<text  x="146.16" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="925.3" y="1925" width="0.4" height="15.0" fill="rgb(208,225,7)" rx="2" ry="2" />
<text  x="928.28" y="1935.5" ></text>
</g>
<g >
<title>sys_sendmsg (447 samples, 7.60%)</title><rect x="237.2" y="1989" width="89.7" height="15.0" fill="rgb(247,101,33)" rx="2" ry="2" />
<text  x="240.22" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="236.8" y="1797" width="0.2" height="15.0" fill="rgb(217,18,9)" rx="2" ry="2" />
<text  x="239.82" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="108.5" y="53" width="0.2" height="15.0" fill="rgb(215,214,5)" rx="2" ry="2" />
<text  x="111.47" y="63.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (2 samples, 0.03%)</title><rect x="937.3" y="1925" width="0.4" height="15.0" fill="rgb(227,67,4)" rx="2" ry="2" />
<text  x="940.31" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="521.8" y="1989" width="0.8" height="15.0" fill="rgb(230,198,41)" rx="2" ry="2" />
<text  x="524.79" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="399.3" y="1893" width="0.2" height="15.0" fill="rgb(211,53,45)" rx="2" ry="2" />
<text  x="402.26" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (9 samples, 0.15%)</title><rect x="66.4" y="1877" width="1.8" height="15.0" fill="rgb(229,170,26)" rx="2" ry="2" />
<text  x="69.35" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="52.7" y="1893" width="0.6" height="15.0" fill="rgb(253,83,6)" rx="2" ry="2" />
<text  x="55.72" y="1903.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="374.8" y="1925" width="0.4" height="15.0" fill="rgb(214,182,37)" rx="2" ry="2" />
<text  x="377.79" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="399.7" y="1797" width="0.4" height="15.0" fill="rgb(253,163,24)" rx="2" ry="2" />
<text  x="402.66" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="301.0" y="1685" width="0.2" height="15.0" fill="rgb(232,131,45)" rx="2" ry="2" />
<text  x="303.99" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="604.6" y="2005" width="0.2" height="15.0" fill="rgb(219,130,3)" rx="2" ry="2" />
<text  x="607.61" y="2015.5" ></text>
</g>
<g >
<title>dst_release (11 samples, 0.19%)</title><rect x="1084.5" y="1877" width="2.2" height="15.0" fill="rgb(240,104,8)" rx="2" ry="2" />
<text  x="1087.51" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="847.7" y="1925" width="0.2" height="15.0" fill="rgb(225,133,2)" rx="2" ry="2" />
<text  x="850.67" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="997.1" y="1941" width="0.2" height="15.0" fill="rgb(251,141,36)" rx="2" ry="2" />
<text  x="1000.08" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (2 samples, 0.03%)</title><rect x="661.4" y="1989" width="0.4" height="15.0" fill="rgb(232,105,54)" rx="2" ry="2" />
<text  x="664.37" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="334.5" y="2021" width="2.0" height="15.0" fill="rgb(218,212,8)" rx="2" ry="2" />
<text  x="337.48" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1164.5" y="1861" width="0.2" height="15.0" fill="rgb(206,14,29)" rx="2" ry="2" />
<text  x="1167.53" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="1143.7" y="1989" width="0.2" height="15.0" fill="rgb(222,62,46)" rx="2" ry="2" />
<text  x="1146.67" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="363.6" y="1701" width="0.2" height="15.0" fill="rgb(217,75,36)" rx="2" ry="2" />
<text  x="366.56" y="1711.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="299.6" y="1653" width="0.2" height="15.0" fill="rgb(229,71,25)" rx="2" ry="2" />
<text  x="302.59" y="1663.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="990.5" y="1781" width="0.2" height="15.0" fill="rgb(206,23,1)" rx="2" ry="2" />
<text  x="993.46" y="1791.5" ></text>
</g>
<g >
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="306.0" y="1781" width="0.6" height="15.0" fill="rgb(234,80,52)" rx="2" ry="2" />
<text  x="309.00" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1143.7" y="1973" width="0.2" height="15.0" fill="rgb(237,83,21)" rx="2" ry="2" />
<text  x="1146.67" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="649.5" y="1813" width="0.2" height="15.0" fill="rgb(247,201,49)" rx="2" ry="2" />
<text  x="652.53" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="357.5" y="1925" width="0.2" height="15.0" fill="rgb(246,191,9)" rx="2" ry="2" />
<text  x="360.54" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (6 samples, 0.10%)</title><rect x="1004.5" y="2005" width="1.2" height="15.0" fill="rgb(243,225,19)" rx="2" ry="2" />
<text  x="1007.50" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="769.1" y="1669" width="0.2" height="15.0" fill="rgb(229,132,42)" rx="2" ry="2" />
<text  x="772.06" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (6 samples, 0.10%)</title><rect x="138.5" y="1893" width="1.3" height="15.0" fill="rgb(223,79,45)" rx="2" ry="2" />
<text  x="141.55" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="851.7" y="1893" width="0.2" height="15.0" fill="rgb(210,135,50)" rx="2" ry="2" />
<text  x="854.68" y="1903.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.12%)</title><rect x="258.7" y="1797" width="1.4" height="15.0" fill="rgb(213,38,33)" rx="2" ry="2" />
<text  x="261.67" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="24.4" y="1957" width="0.2" height="15.0" fill="rgb(213,28,25)" rx="2" ry="2" />
<text  x="27.44" y="1967.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (30 samples, 0.51%)</title><rect x="309.6" y="1829" width="6.0" height="15.0" fill="rgb(224,66,16)" rx="2" ry="2" />
<text  x="312.61" y="1839.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="768.1" y="1685" width="0.8" height="15.0" fill="rgb(244,92,15)" rx="2" ry="2" />
<text  x="771.06" y="1695.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1140.5" y="1669" width="0.2" height="15.0" fill="rgb(250,208,12)" rx="2" ry="2" />
<text  x="1143.47" y="1679.5" ></text>
</g>
<g >
<title>mntput (2 samples, 0.03%)</title><rect x="751.2" y="1797" width="0.4" height="15.0" fill="rgb(242,191,0)" rx="2" ry="2" />
<text  x="754.21" y="1807.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1164.5" y="1621" width="0.2" height="15.0" fill="rgb(237,109,2)" rx="2" ry="2" />
<text  x="1167.53" y="1631.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="509.8" y="1957" width="0.8" height="15.0" fill="rgb(254,19,2)" rx="2" ry="2" />
<text  x="512.76" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="315.4" y="1541" width="0.2" height="15.0" fill="rgb(229,152,33)" rx="2" ry="2" />
<text  x="318.43" y="1551.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1177.6" y="1925" width="0.2" height="15.0" fill="rgb(212,176,42)" rx="2" ry="2" />
<text  x="1180.57" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (5 samples, 0.08%)</title><rect x="386.8" y="1893" width="1.0" height="15.0" fill="rgb(233,168,11)" rx="2" ry="2" />
<text  x="389.82" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="205.9" y="1893" width="0.8" height="15.0" fill="rgb(205,209,31)" rx="2" ry="2" />
<text  x="208.93" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.73%)</title><rect x="1156.1" y="1957" width="8.6" height="15.0" fill="rgb(247,6,29)" rx="2" ry="2" />
<text  x="1159.11" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1164.9" y="1877" width="0.6" height="15.0" fill="rgb(253,7,2)" rx="2" ry="2" />
<text  x="1167.93" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="426.7" y="1861" width="0.2" height="15.0" fill="rgb(219,81,37)" rx="2" ry="2" />
<text  x="429.73" y="1871.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="514.6" y="1973" width="1.0" height="15.0" fill="rgb(226,151,33)" rx="2" ry="2" />
<text  x="517.57" y="1983.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="344.5" y="1957" width="0.4" height="15.0" fill="rgb(226,83,24)" rx="2" ry="2" />
<text  x="347.51" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::getEvent (2 samples, 0.03%)</title><rect x="60.3" y="1909" width="0.4" height="15.0" fill="rgb(212,177,31)" rx="2" ry="2" />
<text  x="63.34" y="1919.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="763.6" y="1717" width="0.2" height="15.0" fill="rgb(226,170,2)" rx="2" ry="2" />
<text  x="766.64" y="1727.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (3 samples, 0.05%)</title><rect x="860.7" y="1973" width="0.6" height="15.0" fill="rgb(227,136,41)" rx="2" ry="2" />
<text  x="863.71" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(241,32,43)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (309 samples, 5.25%)</title><rect x="415.9" y="2005" width="62.0" height="15.0" fill="rgb(235,201,47)" rx="2" ry="2" />
<text  x="418.90" y="2015.5" >do_sys..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="814.0" y="1621" width="0.2" height="15.0" fill="rgb(225,201,4)" rx="2" ry="2" />
<text  x="816.98" y="1631.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="367.0" y="1925" width="0.2" height="15.0" fill="rgb(217,77,17)" rx="2" ry="2" />
<text  x="369.97" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (10 samples, 0.17%)</title><rect x="523.0" y="1973" width="2.0" height="15.0" fill="rgb(220,151,48)" rx="2" ry="2" />
<text  x="525.99" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="814.0" y="1541" width="0.2" height="15.0" fill="rgb(248,217,36)" rx="2" ry="2" />
<text  x="816.98" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="95.8" y="1733" width="0.2" height="15.0" fill="rgb(251,8,16)" rx="2" ry="2" />
<text  x="98.83" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="485.9" y="1941" width="0.4" height="15.0" fill="rgb(206,169,6)" rx="2" ry="2" />
<text  x="488.89" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1053.8" y="1925" width="0.2" height="15.0" fill="rgb(208,67,5)" rx="2" ry="2" />
<text  x="1056.83" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (4 samples, 0.07%)</title><rect x="890.2" y="1941" width="0.8" height="15.0" fill="rgb(230,42,8)" rx="2" ry="2" />
<text  x="893.19" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="106.7" y="37" width="0.8" height="15.0" fill="rgb(244,20,31)" rx="2" ry="2" />
<text  x="109.66" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="918.5" y="1797" width="0.2" height="15.0" fill="rgb(251,222,23)" rx="2" ry="2" />
<text  x="921.46" y="1807.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (2 samples, 0.03%)</title><rect x="850.1" y="1925" width="0.4" height="15.0" fill="rgb(215,54,47)" rx="2" ry="2" />
<text  x="853.08" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (3 samples, 0.05%)</title><rect x="85.6" y="1941" width="0.6" height="15.0" fill="rgb(207,213,27)" rx="2" ry="2" />
<text  x="88.61" y="1951.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="614.0" y="1685" width="0.2" height="15.0" fill="rgb(227,162,45)" rx="2" ry="2" />
<text  x="617.04" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1155.5" y="1829" width="0.2" height="15.0" fill="rgb(248,211,19)" rx="2" ry="2" />
<text  x="1158.51" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="757.8" y="1605" width="0.2" height="15.0" fill="rgb(245,73,49)" rx="2" ry="2" />
<text  x="760.83" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="98.4" y="1445" width="16.5" height="15.0" fill="rgb(235,49,44)" rx="2" ry="2" />
<text  x="101.44" y="1455.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="30.3" y="1893" width="0.2" height="15.0" fill="rgb(231,40,49)" rx="2" ry="2" />
<text  x="33.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (4 samples, 0.07%)</title><rect x="966.8" y="2005" width="0.8" height="15.0" fill="rgb(254,209,40)" rx="2" ry="2" />
<text  x="969.79" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="95.8" y="1701" width="0.2" height="15.0" fill="rgb(231,141,9)" rx="2" ry="2" />
<text  x="98.83" y="1711.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="817.8" y="1605" width="0.4" height="15.0" fill="rgb(238,3,7)" rx="2" ry="2" />
<text  x="820.79" y="1615.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (7 samples, 0.12%)</title><rect x="577.3" y="2005" width="1.4" height="15.0" fill="rgb(230,209,52)" rx="2" ry="2" />
<text  x="580.34" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.48%)</title><rect x="98.4" y="1701" width="17.5" height="15.0" fill="rgb(221,19,6)" rx="2" ry="2" />
<text  x="101.44" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="25.4" y="1749" width="0.2" height="15.0" fill="rgb(227,208,44)" rx="2" ry="2" />
<text  x="28.44" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="33.3" y="2005" width="0.2" height="15.0" fill="rgb(219,196,46)" rx="2" ry="2" />
<text  x="36.26" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="31.7" y="1989" width="0.2" height="15.0" fill="rgb(226,133,48)" rx="2" ry="2" />
<text  x="34.66" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="118.1" y="1909" width="0.2" height="15.0" fill="rgb(247,76,42)" rx="2" ry="2" />
<text  x="121.09" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="514.2" y="1925" width="0.2" height="15.0" fill="rgb(226,29,5)" rx="2" ry="2" />
<text  x="517.17" y="1935.5" ></text>
</g>
<g >
<title>skb_release_head_state (22 samples, 0.37%)</title><rect x="1083.5" y="1893" width="4.4" height="15.0" fill="rgb(230,22,36)" rx="2" ry="2" />
<text  x="1086.51" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="281.7" y="1701" width="0.8" height="15.0" fill="rgb(225,91,38)" rx="2" ry="2" />
<text  x="284.74" y="1711.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1129.8" y="1941" width="0.2" height="15.0" fill="rgb(221,62,12)" rx="2" ry="2" />
<text  x="1132.84" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="868.5" y="1989" width="0.2" height="15.0" fill="rgb(228,52,52)" rx="2" ry="2" />
<text  x="871.53" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="524.2" y="1893" width="0.4" height="15.0" fill="rgb(215,173,10)" rx="2" ry="2" />
<text  x="527.19" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="313.8" y="1749" width="0.2" height="15.0" fill="rgb(233,222,3)" rx="2" ry="2" />
<text  x="316.82" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="850.1" y="1909" width="0.2" height="15.0" fill="rgb(224,10,43)" rx="2" ry="2" />
<text  x="853.08" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="541.4" y="1749" width="0.2" height="15.0" fill="rgb(242,20,23)" rx="2" ry="2" />
<text  x="544.44" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1148.3" y="1845" width="0.2" height="15.0" fill="rgb(251,159,43)" rx="2" ry="2" />
<text  x="1151.29" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="837" width="16.3" height="15.0" fill="rgb(247,62,7)" rx="2" ry="2" />
<text  x="101.44" y="847.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (5 samples, 0.08%)</title><rect x="820.2" y="1685" width="1.0" height="15.0" fill="rgb(216,3,44)" rx="2" ry="2" />
<text  x="823.20" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="563.1" y="1733" width="0.2" height="15.0" fill="rgb(231,229,34)" rx="2" ry="2" />
<text  x="566.10" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="625.5" y="1989" width="0.2" height="15.0" fill="rgb(245,52,33)" rx="2" ry="2" />
<text  x="628.47" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="982.8" y="1877" width="0.2" height="15.0" fill="rgb(229,116,38)" rx="2" ry="2" />
<text  x="985.84" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="84.6" y="1957" width="0.4" height="15.0" fill="rgb(233,222,21)" rx="2" ry="2" />
<text  x="87.60" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1144.5" y="1813" width="0.2" height="15.0" fill="rgb(252,128,2)" rx="2" ry="2" />
<text  x="1147.48" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="741.4" y="1701" width="0.2" height="15.0" fill="rgb(242,154,11)" rx="2" ry="2" />
<text  x="744.38" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1189" width="16.3" height="15.0" fill="rgb(236,181,54)" rx="2" ry="2" />
<text  x="101.44" y="1199.5" ></text>
</g>
<g >
<title>sch_direct_xmit (89 samples, 1.51%)</title><rect x="790.1" y="1557" width="17.9" height="15.0" fill="rgb(222,217,6)" rx="2" ry="2" />
<text  x="793.12" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="882.2" y="1909" width="0.2" height="15.0" fill="rgb(206,77,17)" rx="2" ry="2" />
<text  x="885.17" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.12%)</title><rect x="258.7" y="1813" width="1.4" height="15.0" fill="rgb(208,97,53)" rx="2" ry="2" />
<text  x="261.67" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20 samples, 0.34%)</title><rect x="275.9" y="1733" width="4.0" height="15.0" fill="rgb(213,5,3)" rx="2" ry="2" />
<text  x="278.92" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="246.4" y="1637" width="0.2" height="15.0" fill="rgb(228,156,15)" rx="2" ry="2" />
<text  x="249.44" y="1647.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="856.9" y="1845" width="0.2" height="15.0" fill="rgb(212,115,48)" rx="2" ry="2" />
<text  x="859.90" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="563.5" y="1973" width="0.6" height="15.0" fill="rgb(216,62,22)" rx="2" ry="2" />
<text  x="566.50" y="1983.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.02%)</title><rect x="11.2" y="1973" width="0.2" height="15.0" fill="rgb(240,89,31)" rx="2" ry="2" />
<text  x="14.20" y="1983.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1122.6" y="1733" width="0.2" height="15.0" fill="rgb(226,86,54)" rx="2" ry="2" />
<text  x="1125.62" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (3 samples, 0.05%)</title><rect x="623.9" y="1989" width="0.6" height="15.0" fill="rgb(241,94,3)" rx="2" ry="2" />
<text  x="626.86" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="213.8" y="1781" width="0.4" height="15.0" fill="rgb(227,172,42)" rx="2" ry="2" />
<text  x="216.75" y="1791.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1140.5" y="1717" width="0.2" height="15.0" fill="rgb(234,177,46)" rx="2" ry="2" />
<text  x="1143.47" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="210.9" y="1781" width="0.2" height="15.0" fill="rgb(223,186,45)" rx="2" ry="2" />
<text  x="213.94" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (31 samples, 0.53%)</title><rect x="640.1" y="1957" width="6.2" height="15.0" fill="rgb(221,165,52)" rx="2" ry="2" />
<text  x="643.11" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="381.2" y="1669" width="0.2" height="15.0" fill="rgb(209,88,23)" rx="2" ry="2" />
<text  x="384.21" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="276.5" y="1637" width="0.6" height="15.0" fill="rgb(250,1,6)" rx="2" ry="2" />
<text  x="279.52" y="1647.5" ></text>
</g>
<g >
<title>evict (46 samples, 0.78%)</title><rect x="740.4" y="1717" width="9.2" height="15.0" fill="rgb(206,106,28)" rx="2" ry="2" />
<text  x="743.38" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="622.1" y="2037" width="0.2" height="15.0" fill="rgb(215,131,18)" rx="2" ry="2" />
<text  x="625.06" y="2047.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="522.0" y="1829" width="0.6" height="15.0" fill="rgb(209,228,26)" rx="2" ry="2" />
<text  x="524.99" y="1839.5" ></text>
</g>
<g >
<title>__get_user_4 (4 samples, 0.07%)</title><rect x="692.7" y="1893" width="0.8" height="15.0" fill="rgb(236,25,7)" rx="2" ry="2" />
<text  x="695.65" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1083.3" y="1541" width="0.2" height="15.0" fill="rgb(213,115,13)" rx="2" ry="2" />
<text  x="1086.31" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="75.8" y="1941" width="0.2" height="15.0" fill="rgb(217,54,34)" rx="2" ry="2" />
<text  x="78.78" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.8" y="1941" width="0.2" height="15.0" fill="rgb(217,123,48)" rx="2" ry="2" />
<text  x="163.81" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="148.0" y="1797" width="0.2" height="15.0" fill="rgb(211,126,37)" rx="2" ry="2" />
<text  x="150.97" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (1 samples, 0.02%)</title><rect x="24.2" y="1973" width="0.2" height="15.0" fill="rgb(248,201,5)" rx="2" ry="2" />
<text  x="27.24" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="563.7" y="1925" width="0.4" height="15.0" fill="rgb(237,224,31)" rx="2" ry="2" />
<text  x="566.70" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="784.5" y="1333" width="0.2" height="15.0" fill="rgb(253,159,28)" rx="2" ry="2" />
<text  x="787.50" y="1343.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="540.6" y="1957" width="0.2" height="15.0" fill="rgb(231,13,53)" rx="2" ry="2" />
<text  x="543.64" y="1967.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="390.8" y="1749" width="0.2" height="15.0" fill="rgb(241,206,46)" rx="2" ry="2" />
<text  x="393.83" y="1759.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="618.5" y="1893" width="0.8" height="15.0" fill="rgb(240,73,4)" rx="2" ry="2" />
<text  x="621.45" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.0" y="1877" width="0.2" height="15.0" fill="rgb(229,70,33)" rx="2" ry="2" />
<text  x="539.03" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 1.10%)</title><rect x="637.1" y="2005" width="13.0" height="15.0" fill="rgb(252,173,19)" rx="2" ry="2" />
<text  x="640.10" y="2015.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="374.4" y="1669" width="0.2" height="15.0" fill="rgb(208,5,29)" rx="2" ry="2" />
<text  x="377.39" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="530.0" y="1989" width="0.2" height="15.0" fill="rgb(217,118,4)" rx="2" ry="2" />
<text  x="533.01" y="1999.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="120.9" y="1989" width="0.2" height="15.0" fill="rgb(246,83,30)" rx="2" ry="2" />
<text  x="123.90" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="932.9" y="1621" width="0.2" height="15.0" fill="rgb(217,118,35)" rx="2" ry="2" />
<text  x="935.90" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="952.2" y="2037" width="0.2" height="15.0" fill="rgb(211,3,39)" rx="2" ry="2" />
<text  x="955.15" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="805" width="16.3" height="15.0" fill="rgb(236,152,32)" rx="2" ry="2" />
<text  x="101.44" y="815.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (3 samples, 0.05%)</title><rect x="529.6" y="2005" width="0.6" height="15.0" fill="rgb(252,213,4)" rx="2" ry="2" />
<text  x="532.61" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1074.9" y="1429" width="0.2" height="15.0" fill="rgb(208,199,26)" rx="2" ry="2" />
<text  x="1077.89" y="1439.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="1170.9" y="2021" width="2.1" height="15.0" fill="rgb(210,75,23)" rx="2" ry="2" />
<text  x="1173.95" y="2031.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1123.8" y="1909" width="0.2" height="15.0" fill="rgb(232,0,26)" rx="2" ry="2" />
<text  x="1126.82" y="1919.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="148.0" y="1669" width="0.2" height="15.0" fill="rgb(221,39,31)" rx="2" ry="2" />
<text  x="150.97" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1074.9" y="1733" width="0.2" height="15.0" fill="rgb(242,53,13)" rx="2" ry="2" />
<text  x="1077.89" y="1743.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="579.7" y="1669" width="0.2" height="15.0" fill="rgb(210,89,25)" rx="2" ry="2" />
<text  x="582.75" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="109.9" y="37" width="0.6" height="15.0" fill="rgb(209,137,28)" rx="2" ry="2" />
<text  x="112.87" y="47.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1141" width="16.3" height="15.0" fill="rgb(211,179,13)" rx="2" ry="2" />
<text  x="101.44" y="1151.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.6" y="1893" width="0.2" height="15.0" fill="rgb(226,77,29)" rx="2" ry="2" />
<text  x="77.58" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="363.6" y="1829" width="0.2" height="15.0" fill="rgb(234,66,2)" rx="2" ry="2" />
<text  x="366.56" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1094.5" y="1717" width="0.2" height="15.0" fill="rgb(228,85,33)" rx="2" ry="2" />
<text  x="1097.54" y="1727.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="784.3" y="1557" width="0.4" height="15.0" fill="rgb(229,57,34)" rx="2" ry="2" />
<text  x="787.30" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="855.9" y="1893" width="0.8" height="15.0" fill="rgb(216,186,31)" rx="2" ry="2" />
<text  x="858.89" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (7 samples, 0.12%)</title><rect x="125.7" y="1957" width="1.4" height="15.0" fill="rgb(242,117,16)" rx="2" ry="2" />
<text  x="128.71" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="193.7" y="1973" width="0.2" height="15.0" fill="rgb(221,110,9)" rx="2" ry="2" />
<text  x="196.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.19%)</title><rect x="108.7" y="53" width="2.2" height="15.0" fill="rgb(209,83,39)" rx="2" ry="2" />
<text  x="111.67" y="63.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="583.8" y="1877" width="0.2" height="15.0" fill="rgb(254,115,1)" rx="2" ry="2" />
<text  x="586.76" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (16 samples, 0.27%)</title><rect x="651.9" y="2005" width="3.2" height="15.0" fill="rgb(224,214,12)" rx="2" ry="2" />
<text  x="654.94" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="141.0" y="1893" width="0.2" height="15.0" fill="rgb(239,178,39)" rx="2" ry="2" />
<text  x="143.96" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="563.1" y="1701" width="0.2" height="15.0" fill="rgb(245,125,54)" rx="2" ry="2" />
<text  x="566.10" y="1711.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="498.5" y="1877" width="0.2" height="15.0" fill="rgb(224,157,9)" rx="2" ry="2" />
<text  x="501.52" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(235,44,34)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>d_instantiate (1 samples, 0.02%)</title><rect x="343.9" y="1957" width="0.2" height="15.0" fill="rgb(231,168,45)" rx="2" ry="2" />
<text  x="346.91" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1100.8" y="1749" width="0.2" height="15.0" fill="rgb(216,177,25)" rx="2" ry="2" />
<text  x="1103.76" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (82 samples, 1.39%)</title><rect x="683.2" y="1957" width="16.5" height="15.0" fill="rgb(226,53,45)" rx="2" ry="2" />
<text  x="686.23" y="1967.5" ></text>
</g>
<g >
<title>SYSC_getpeername (16 samples, 0.27%)</title><rect x="674.4" y="1877" width="3.2" height="15.0" fill="rgb(224,94,0)" rx="2" ry="2" />
<text  x="677.40" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1022.1" y="2021" width="0.4" height="15.0" fill="rgb(209,8,11)" rx="2" ry="2" />
<text  x="1025.14" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1094.5" y="1813" width="0.2" height="15.0" fill="rgb(232,96,48)" rx="2" ry="2" />
<text  x="1097.54" y="1823.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="282.5" y="1669" width="0.2" height="15.0" fill="rgb(243,158,47)" rx="2" ry="2" />
<text  x="285.54" y="1679.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="973.8" y="1989" width="0.2" height="15.0" fill="rgb(249,206,30)" rx="2" ry="2" />
<text  x="976.81" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="869.7" y="1989" width="0.8" height="15.0" fill="rgb(213,57,14)" rx="2" ry="2" />
<text  x="872.73" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="706.3" y="2037" width="0.6" height="15.0" fill="rgb(231,88,14)" rx="2" ry="2" />
<text  x="709.29" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="103.3" y="37" width="0.8" height="15.0" fill="rgb(221,208,9)" rx="2" ry="2" />
<text  x="106.25" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="541.4" y="1845" width="0.2" height="15.0" fill="rgb(212,157,29)" rx="2" ry="2" />
<text  x="544.44" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="246.0" y="1877" width="0.6" height="15.0" fill="rgb(237,38,19)" rx="2" ry="2" />
<text  x="249.04" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1180.8" y="2053" width="0.2" height="15.0" fill="rgb(212,127,29)" rx="2" ry="2" />
<text  x="1183.77" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="1170.3" y="2021" width="0.4" height="15.0" fill="rgb(231,14,38)" rx="2" ry="2" />
<text  x="1173.35" y="2031.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="698.1" y="1877" width="0.6" height="15.0" fill="rgb(213,78,53)" rx="2" ry="2" />
<text  x="701.07" y="1887.5" ></text>
</g>
<g >
<title>fput (3 samples, 0.05%)</title><rect x="839.4" y="1813" width="0.7" height="15.0" fill="rgb(208,4,20)" rx="2" ry="2" />
<text  x="842.45" y="1823.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="113.3" y="69" width="0.4" height="15.0" fill="rgb(242,134,24)" rx="2" ry="2" />
<text  x="116.28" y="79.5" ></text>
</g>
<g >
<title>kfree_skbmem (26 samples, 0.44%)</title><rect x="1070.3" y="1909" width="5.2" height="15.0" fill="rgb(248,101,26)" rx="2" ry="2" />
<text  x="1073.28" y="1919.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="899.6" y="2005" width="0.6" height="15.0" fill="rgb(253,149,5)" rx="2" ry="2" />
<text  x="902.61" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1128.4" y="1877" width="0.2" height="15.0" fill="rgb(223,15,45)" rx="2" ry="2" />
<text  x="1131.43" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="633.5" y="1989" width="0.2" height="15.0" fill="rgb(211,188,12)" rx="2" ry="2" />
<text  x="636.49" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="399.7" y="1621" width="0.2" height="15.0" fill="rgb(225,155,43)" rx="2" ry="2" />
<text  x="402.66" y="1631.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="918.5" y="1637" width="0.2" height="15.0" fill="rgb(208,170,5)" rx="2" ry="2" />
<text  x="921.46" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1164.5" y="1893" width="0.2" height="15.0" fill="rgb(222,31,51)" rx="2" ry="2" />
<text  x="1167.53" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17 samples, 0.29%)</title><rect x="327.7" y="2021" width="3.4" height="15.0" fill="rgb(205,150,32)" rx="2" ry="2" />
<text  x="330.66" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="545.3" y="1925" width="0.2" height="15.0" fill="rgb(228,202,0)" rx="2" ry="2" />
<text  x="548.25" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="503.9" y="1989" width="0.2" height="15.0" fill="rgb(242,58,5)" rx="2" ry="2" />
<text  x="506.94" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1365" width="16.3" height="15.0" fill="rgb(231,162,53)" rx="2" ry="2" />
<text  x="101.44" y="1375.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="918.3" y="1989" width="0.2" height="15.0" fill="rgb(254,146,22)" rx="2" ry="2" />
<text  x="921.26" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="641.7" y="1909" width="0.4" height="15.0" fill="rgb(219,208,28)" rx="2" ry="2" />
<text  x="644.71" y="1919.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="811.8" y="1637" width="0.2" height="15.0" fill="rgb(216,131,11)" rx="2" ry="2" />
<text  x="814.77" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1155.5" y="1925" width="0.2" height="15.0" fill="rgb(217,100,17)" rx="2" ry="2" />
<text  x="1158.51" y="1935.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="699.7" y="1957" width="0.2" height="15.0" fill="rgb(239,207,46)" rx="2" ry="2" />
<text  x="702.67" y="1967.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1116.8" y="1477" width="0.2" height="15.0" fill="rgb(245,2,32)" rx="2" ry="2" />
<text  x="1119.80" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1148.3" y="1797" width="0.2" height="15.0" fill="rgb(241,218,51)" rx="2" ry="2" />
<text  x="1151.29" y="1807.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1140.5" y="1701" width="0.2" height="15.0" fill="rgb(219,116,18)" rx="2" ry="2" />
<text  x="1143.47" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (4 samples, 0.07%)</title><rect x="931.9" y="1861" width="0.8" height="15.0" fill="rgb(224,68,4)" rx="2" ry="2" />
<text  x="934.90" y="1871.5" ></text>
</g>
<g >
<title>security_file_fcntl (2 samples, 0.03%)</title><rect x="560.7" y="1941" width="0.4" height="15.0" fill="rgb(214,42,39)" rx="2" ry="2" />
<text  x="563.69" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (9 samples, 0.15%)</title><rect x="957.4" y="2037" width="1.8" height="15.0" fill="rgb(208,1,20)" rx="2" ry="2" />
<text  x="960.37" y="2047.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="168.8" y="1957" width="0.6" height="15.0" fill="rgb(244,16,28)" rx="2" ry="2" />
<text  x="171.83" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (49 samples, 0.83%)</title><rect x="605.8" y="1925" width="9.8" height="15.0" fill="rgb(215,209,44)" rx="2" ry="2" />
<text  x="608.82" y="1935.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(232,109,6)" rx="2" ry="2" />
<text  x="14.20" y="2079.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="693.3" y="1877" width="0.2" height="15.0" fill="rgb(214,228,1)" rx="2" ry="2" />
<text  x="696.25" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="946.3" y="2005" width="0.2" height="15.0" fill="rgb(246,157,2)" rx="2" ry="2" />
<text  x="949.34" y="2015.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (142 samples, 2.41%)</title><rect x="193.9" y="2037" width="28.5" height="15.0" fill="rgb(217,53,19)" rx="2" ry="2" />
<text  x="196.90" y="2047.5" >__..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1074.9" y="1717" width="0.2" height="15.0" fill="rgb(238,31,24)" rx="2" ry="2" />
<text  x="1077.89" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="508.4" y="1973" width="0.2" height="15.0" fill="rgb(250,163,43)" rx="2" ry="2" />
<text  x="511.35" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="576.9" y="1989" width="0.2" height="15.0" fill="rgb(229,134,52)" rx="2" ry="2" />
<text  x="579.94" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="341" width="16.1" height="15.0" fill="rgb(209,127,37)" rx="2" ry="2" />
<text  x="101.44" y="351.5" ></text>
</g>
<g >
<title>__wake_up_locked (3 samples, 0.05%)</title><rect x="278.9" y="1413" width="0.6" height="15.0" fill="rgb(223,98,47)" rx="2" ry="2" />
<text  x="281.93" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="80.6" y="1909" width="0.2" height="15.0" fill="rgb(205,69,39)" rx="2" ry="2" />
<text  x="83.59" y="1919.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="836.6" y="1813" width="0.2" height="15.0" fill="rgb(226,168,38)" rx="2" ry="2" />
<text  x="839.64" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="541.4" y="1589" width="0.2" height="15.0" fill="rgb(234,170,51)" rx="2" ry="2" />
<text  x="544.44" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.8" y="1925" width="0.2" height="15.0" fill="rgb(205,56,30)" rx="2" ry="2" />
<text  x="163.81" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="301.0" y="1557" width="0.2" height="15.0" fill="rgb(222,83,40)" rx="2" ry="2" />
<text  x="303.99" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="768.9" y="1701" width="0.6" height="15.0" fill="rgb(223,214,54)" rx="2" ry="2" />
<text  x="771.86" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="757.8" y="1717" width="0.2" height="15.0" fill="rgb(231,208,33)" rx="2" ry="2" />
<text  x="760.83" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (7 samples, 0.12%)</title><rect x="573.7" y="1973" width="1.4" height="15.0" fill="rgb(226,25,25)" rx="2" ry="2" />
<text  x="576.73" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (2 samples, 0.03%)</title><rect x="573.1" y="2005" width="0.4" height="15.0" fill="rgb(250,195,23)" rx="2" ry="2" />
<text  x="576.13" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="704.7" y="1973" width="0.4" height="15.0" fill="rgb(217,31,50)" rx="2" ry="2" />
<text  x="707.68" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="30.3" y="1701" width="0.2" height="15.0" fill="rgb(207,14,25)" rx="2" ry="2" />
<text  x="33.25" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (5 samples, 0.08%)</title><rect x="307.6" y="1813" width="1.0" height="15.0" fill="rgb(228,114,0)" rx="2" ry="2" />
<text  x="310.61" y="1823.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="173.2" y="1941" width="0.6" height="15.0" fill="rgb(213,199,4)" rx="2" ry="2" />
<text  x="176.24" y="1951.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="614.0" y="1765" width="1.0" height="15.0" fill="rgb(205,12,31)" rx="2" ry="2" />
<text  x="617.04" y="1775.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.14%)</title><rect x="325.1" y="1909" width="1.6" height="15.0" fill="rgb(206,124,10)" rx="2" ry="2" />
<text  x="328.05" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="149.2" y="1621" width="0.2" height="15.0" fill="rgb(211,186,33)" rx="2" ry="2" />
<text  x="152.18" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="544.0" y="1749" width="0.2" height="15.0" fill="rgb(210,184,50)" rx="2" ry="2" />
<text  x="547.05" y="1759.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (107 samples, 1.82%)</title><rect x="582.0" y="1973" width="21.4" height="15.0" fill="rgb(242,195,4)" rx="2" ry="2" />
<text  x="584.95" y="1983.5" >f..</text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.4" y="2053" width="1.0" height="15.0" fill="rgb(241,181,8)" rx="2" ry="2" />
<text  x="14.40" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="451.2" y="1909" width="2.8" height="15.0" fill="rgb(207,164,9)" rx="2" ry="2" />
<text  x="454.20" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="678.0" y="1813" width="0.2" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="681.01" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="600.8" y="1797" width="0.2" height="15.0" fill="rgb(254,116,15)" rx="2" ry="2" />
<text  x="603.80" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="934.1" y="1893" width="0.2" height="15.0" fill="rgb(239,229,44)" rx="2" ry="2" />
<text  x="937.11" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.34%)</title><rect x="641.5" y="1941" width="4.0" height="15.0" fill="rgb(228,89,42)" rx="2" ry="2" />
<text  x="644.51" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (3 samples, 0.05%)</title><rect x="979.0" y="1909" width="0.6" height="15.0" fill="rgb(210,90,41)" rx="2" ry="2" />
<text  x="982.03" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="25.4" y="1445" width="0.2" height="15.0" fill="rgb(244,189,18)" rx="2" ry="2" />
<text  x="28.44" y="1455.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="442.8" y="1973" width="0.4" height="15.0" fill="rgb(207,146,10)" rx="2" ry="2" />
<text  x="445.77" y="1983.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (3 samples, 0.05%)</title><rect x="515.6" y="1973" width="0.6" height="15.0" fill="rgb(244,72,44)" rx="2" ry="2" />
<text  x="518.57" y="1983.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="677.6" y="1877" width="0.2" height="15.0" fill="rgb(234,123,18)" rx="2" ry="2" />
<text  x="680.61" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (2 samples, 0.03%)</title><rect x="901.6" y="1973" width="0.4" height="15.0" fill="rgb(238,161,53)" rx="2" ry="2" />
<text  x="904.62" y="1983.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (4 samples, 0.07%)</title><rect x="1120.8" y="1925" width="0.8" height="15.0" fill="rgb(205,36,28)" rx="2" ry="2" />
<text  x="1123.81" y="1935.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (1 samples, 0.02%)</title><rect x="529.4" y="2005" width="0.2" height="15.0" fill="rgb(229,16,24)" rx="2" ry="2" />
<text  x="532.41" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="642.9" y="1909" width="0.4" height="15.0" fill="rgb(213,149,16)" rx="2" ry="2" />
<text  x="645.92" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="153.4" y="2021" width="0.4" height="15.0" fill="rgb(231,74,17)" rx="2" ry="2" />
<text  x="156.39" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (1 samples, 0.02%)</title><rect x="896.0" y="1957" width="0.2" height="15.0" fill="rgb(236,122,52)" rx="2" ry="2" />
<text  x="899.00" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="523.8" y="1909" width="0.2" height="15.0" fill="rgb(231,228,19)" rx="2" ry="2" />
<text  x="526.79" y="1919.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (3 samples, 0.05%)</title><rect x="1003.3" y="1973" width="0.6" height="15.0" fill="rgb(219,122,15)" rx="2" ry="2" />
<text  x="1006.29" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (6 samples, 0.10%)</title><rect x="551.5" y="1989" width="1.2" height="15.0" fill="rgb(246,47,16)" rx="2" ry="2" />
<text  x="554.47" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1116.2" y="1413" width="0.6" height="15.0" fill="rgb(254,73,10)" rx="2" ry="2" />
<text  x="1119.20" y="1423.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="710.5" y="1989" width="0.4" height="15.0" fill="rgb(206,108,20)" rx="2" ry="2" />
<text  x="713.50" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="261.5" y="1829" width="0.4" height="15.0" fill="rgb(241,42,16)" rx="2" ry="2" />
<text  x="264.48" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1083.3" y="1669" width="0.2" height="15.0" fill="rgb(250,111,16)" rx="2" ry="2" />
<text  x="1086.31" y="1679.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (2 samples, 0.03%)</title><rect x="1002.5" y="2005" width="0.4" height="15.0" fill="rgb(245,121,13)" rx="2" ry="2" />
<text  x="1005.49" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (2 samples, 0.03%)</title><rect x="1149.5" y="1989" width="0.4" height="15.0" fill="rgb(234,43,15)" rx="2" ry="2" />
<text  x="1152.49" y="1999.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1128.4" y="1781" width="0.2" height="15.0" fill="rgb(230,11,47)" rx="2" ry="2" />
<text  x="1131.43" y="1791.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="563.1" y="1573" width="0.2" height="15.0" fill="rgb(217,97,43)" rx="2" ry="2" />
<text  x="566.10" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="167.6" y="1957" width="0.8" height="15.0" fill="rgb(250,69,18)" rx="2" ry="2" />
<text  x="170.63" y="1967.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="677.2" y="1813" width="0.4" height="15.0" fill="rgb(227,122,30)" rx="2" ry="2" />
<text  x="680.21" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="145.4" y="1877" width="0.8" height="15.0" fill="rgb(239,137,29)" rx="2" ry="2" />
<text  x="148.37" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="623.9" y="2021" width="1.8" height="15.0" fill="rgb(228,180,35)" rx="2" ry="2" />
<text  x="626.86" y="2031.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="1100.2" y="1893" width="0.8" height="15.0" fill="rgb(222,184,43)" rx="2" ry="2" />
<text  x="1103.16" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (3 samples, 0.05%)</title><rect x="56.9" y="1861" width="0.6" height="15.0" fill="rgb(247,100,5)" rx="2" ry="2" />
<text  x="59.93" y="1871.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="976.2" y="1973" width="0.4" height="15.0" fill="rgb(231,161,5)" rx="2" ry="2" />
<text  x="979.22" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="372.6" y="1925" width="1.8" height="15.0" fill="rgb(223,210,11)" rx="2" ry="2" />
<text  x="375.58" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1175.4" y="1957" width="0.2" height="15.0" fill="rgb(208,180,44)" rx="2" ry="2" />
<text  x="1178.36" y="1967.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1118.0" y="1509" width="0.2" height="15.0" fill="rgb(249,17,11)" rx="2" ry="2" />
<text  x="1121.00" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1094.5" y="1781" width="0.2" height="15.0" fill="rgb(243,49,10)" rx="2" ry="2" />
<text  x="1097.54" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (40 samples, 0.68%)</title><rect x="927.3" y="1925" width="8.0" height="15.0" fill="rgb(241,4,37)" rx="2" ry="2" />
<text  x="930.29" y="1935.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="897.2" y="1941" width="0.2" height="15.0" fill="rgb(206,38,35)" rx="2" ry="2" />
<text  x="900.21" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="148.0" y="1845" width="0.2" height="15.0" fill="rgb(233,119,47)" rx="2" ry="2" />
<text  x="150.97" y="1855.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="757.8" y="1429" width="0.2" height="15.0" fill="rgb(253,13,25)" rx="2" ry="2" />
<text  x="760.83" y="1439.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="604.2" y="1989" width="0.2" height="15.0" fill="rgb(240,94,38)" rx="2" ry="2" />
<text  x="607.21" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="95.8" y="1797" width="0.2" height="15.0" fill="rgb(249,54,39)" rx="2" ry="2" />
<text  x="98.83" y="1807.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (25 samples, 0.42%)</title><rect x="1025.6" y="2037" width="5.0" height="15.0" fill="rgb(228,135,21)" rx="2" ry="2" />
<text  x="1028.55" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1148.3" y="1941" width="0.2" height="15.0" fill="rgb(209,130,9)" rx="2" ry="2" />
<text  x="1151.29" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1074.9" y="1365" width="0.2" height="15.0" fill="rgb(248,63,7)" rx="2" ry="2" />
<text  x="1077.89" y="1375.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="524.2" y="1941" width="0.4" height="15.0" fill="rgb(240,222,12)" rx="2" ry="2" />
<text  x="527.19" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="712.7" y="1781" width="0.2" height="15.0" fill="rgb(253,228,21)" rx="2" ry="2" />
<text  x="715.71" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="236.8" y="1941" width="0.4" height="15.0" fill="rgb(237,30,39)" rx="2" ry="2" />
<text  x="239.82" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="977.6" y="1941" width="0.4" height="15.0" fill="rgb(228,90,6)" rx="2" ry="2" />
<text  x="980.62" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1093.5" y="1909" width="0.4" height="15.0" fill="rgb(232,70,3)" rx="2" ry="2" />
<text  x="1096.54" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="504.9" y="1973" width="1.4" height="15.0" fill="rgb(253,80,15)" rx="2" ry="2" />
<text  x="507.94" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="597.2" y="1829" width="0.2" height="15.0" fill="rgb(240,45,39)" rx="2" ry="2" />
<text  x="600.19" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="475.5" y="1829" width="0.2" height="15.0" fill="rgb(211,94,12)" rx="2" ry="2" />
<text  x="478.46" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="75.6" y="1653" width="0.2" height="15.0" fill="rgb(215,33,46)" rx="2" ry="2" />
<text  x="78.58" y="1663.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="73.0" y="1941" width="0.2" height="15.0" fill="rgb(216,215,33)" rx="2" ry="2" />
<text  x="75.97" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="598.0" y="1829" width="0.4" height="15.0" fill="rgb(224,217,48)" rx="2" ry="2" />
<text  x="600.99" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (2 samples, 0.03%)</title><rect x="845.5" y="1893" width="0.4" height="15.0" fill="rgb(249,213,18)" rx="2" ry="2" />
<text  x="848.47" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1155.5" y="1765" width="0.2" height="15.0" fill="rgb(226,111,51)" rx="2" ry="2" />
<text  x="1158.51" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="139.8" y="1893" width="0.8" height="15.0" fill="rgb(233,109,14)" rx="2" ry="2" />
<text  x="142.75" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="717.9" y="1941" width="0.4" height="15.0" fill="rgb(230,91,34)" rx="2" ry="2" />
<text  x="720.92" y="1951.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1078.1" y="1877" width="0.2" height="15.0" fill="rgb(219,83,30)" rx="2" ry="2" />
<text  x="1081.10" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="994.3" y="1909" width="0.2" height="15.0" fill="rgb(239,72,36)" rx="2" ry="2" />
<text  x="997.27" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="229" width="15.9" height="15.0" fill="rgb(239,185,39)" rx="2" ry="2" />
<text  x="101.44" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="47.5" y="1909" width="0.2" height="15.0" fill="rgb(206,149,54)" rx="2" ry="2" />
<text  x="50.50" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="696.1" y="1877" width="0.2" height="15.0" fill="rgb(248,18,7)" rx="2" ry="2" />
<text  x="699.06" y="1887.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="721.9" y="1829" width="0.2" height="15.0" fill="rgb(235,229,30)" rx="2" ry="2" />
<text  x="724.93" y="1839.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="1091.5" y="1893" width="0.2" height="15.0" fill="rgb(245,58,43)" rx="2" ry="2" />
<text  x="1094.53" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (7 samples, 0.12%)</title><rect x="659.2" y="2021" width="1.4" height="15.0" fill="rgb(218,187,47)" rx="2" ry="2" />
<text  x="662.16" y="2031.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="965.4" y="1909" width="0.2" height="15.0" fill="rgb(241,107,32)" rx="2" ry="2" />
<text  x="968.39" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="391.0" y="1797" width="0.2" height="15.0" fill="rgb(251,74,48)" rx="2" ry="2" />
<text  x="394.03" y="1807.5" ></text>
</g>
<g >
<title>event_set (2 samples, 0.03%)</title><rect x="533.2" y="1973" width="0.4" height="15.0" fill="rgb(212,17,0)" rx="2" ry="2" />
<text  x="536.22" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="30.3" y="1973" width="0.2" height="15.0" fill="rgb(211,78,52)" rx="2" ry="2" />
<text  x="33.25" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.73%)</title><rect x="98.2" y="1957" width="20.5" height="15.0" fill="rgb(212,29,45)" rx="2" ry="2" />
<text  x="101.24" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="160.8" y="1605" width="0.2" height="15.0" fill="rgb(205,125,45)" rx="2" ry="2" />
<text  x="163.81" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1148.3" y="1653" width="0.2" height="15.0" fill="rgb(254,41,7)" rx="2" ry="2" />
<text  x="1151.29" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (4 samples, 0.07%)</title><rect x="575.7" y="2005" width="0.8" height="15.0" fill="rgb(252,220,34)" rx="2" ry="2" />
<text  x="578.73" y="2015.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="128.7" y="1957" width="0.2" height="15.0" fill="rgb(216,198,35)" rx="2" ry="2" />
<text  x="131.72" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (49 samples, 0.83%)</title><rect x="1108.8" y="1749" width="9.8" height="15.0" fill="rgb(211,116,33)" rx="2" ry="2" />
<text  x="1111.78" y="1759.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (5 samples, 0.08%)</title><rect x="513.4" y="1973" width="1.0" height="15.0" fill="rgb(207,177,47)" rx="2" ry="2" />
<text  x="516.37" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="391.0" y="1845" width="0.2" height="15.0" fill="rgb(220,95,31)" rx="2" ry="2" />
<text  x="394.03" y="1855.5" ></text>
</g>
<g >
<title>____fput (520 samples, 8.84%)</title><rect x="733.2" y="1829" width="104.2" height="15.0" fill="rgb(218,67,47)" rx="2" ry="2" />
<text  x="736.16" y="1839.5" >____fput</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="214.0" y="1749" width="0.2" height="15.0" fill="rgb(228,58,20)" rx="2" ry="2" />
<text  x="216.95" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="390.8" y="1829" width="0.2" height="15.0" fill="rgb(214,41,37)" rx="2" ry="2" />
<text  x="393.83" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (2 samples, 0.03%)</title><rect x="850.9" y="1941" width="0.4" height="15.0" fill="rgb(219,77,29)" rx="2" ry="2" />
<text  x="853.88" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="76.8" y="1909" width="0.2" height="15.0" fill="rgb(248,170,24)" rx="2" ry="2" />
<text  x="79.78" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="919.5" y="1973" width="0.2" height="15.0" fill="rgb(227,52,51)" rx="2" ry="2" />
<text  x="922.47" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="678.0" y="1685" width="0.2" height="15.0" fill="rgb(224,53,17)" rx="2" ry="2" />
<text  x="681.01" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1093.7" y="1893" width="0.2" height="15.0" fill="rgb(228,34,31)" rx="2" ry="2" />
<text  x="1096.74" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="113.9" y="69" width="0.2" height="15.0" fill="rgb(221,112,42)" rx="2" ry="2" />
<text  x="116.88" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="107.9" y="37" width="0.6" height="15.0" fill="rgb(219,149,54)" rx="2" ry="2" />
<text  x="110.87" y="47.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="620.5" y="2021" width="0.6" height="15.0" fill="rgb(241,17,30)" rx="2" ry="2" />
<text  x="623.46" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="363.6" y="1845" width="0.2" height="15.0" fill="rgb(206,28,3)" rx="2" ry="2" />
<text  x="366.56" y="1855.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="544.0" y="1685" width="0.2" height="15.0" fill="rgb(235,23,39)" rx="2" ry="2" />
<text  x="547.05" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="301.0" y="1669" width="0.2" height="15.0" fill="rgb(226,142,29)" rx="2" ry="2" />
<text  x="303.99" y="1679.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="120.7" y="1909" width="0.2" height="15.0" fill="rgb(207,71,52)" rx="2" ry="2" />
<text  x="123.70" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="327.5" y="2021" width="0.2" height="15.0" fill="rgb(212,20,7)" rx="2" ry="2" />
<text  x="330.46" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="626.1" y="2037" width="0.4" height="15.0" fill="rgb(251,31,6)" rx="2" ry="2" />
<text  x="629.07" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="620.9" y="2005" width="0.2" height="15.0" fill="rgb(231,213,18)" rx="2" ry="2" />
<text  x="623.86" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="523.0" y="2005" width="2.0" height="15.0" fill="rgb(229,216,27)" rx="2" ry="2" />
<text  x="525.99" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="658.8" y="2005" width="0.2" height="15.0" fill="rgb(224,32,38)" rx="2" ry="2" />
<text  x="661.76" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="172.6" y="1957" width="0.2" height="15.0" fill="rgb(250,50,3)" rx="2" ry="2" />
<text  x="175.64" y="1967.5" ></text>
</g>
<g >
<title>pthread_self@plt (2 samples, 0.03%)</title><rect x="170.4" y="1941" width="0.4" height="15.0" fill="rgb(254,122,32)" rx="2" ry="2" />
<text  x="173.44" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="708.1" y="1941" width="0.2" height="15.0" fill="rgb(250,198,39)" rx="2" ry="2" />
<text  x="711.09" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (28 samples, 0.48%)</title><rect x="478.9" y="2021" width="5.6" height="15.0" fill="rgb(215,187,37)" rx="2" ry="2" />
<text  x="481.87" y="2031.5" ></text>
</g>
<g >
<title>sock_recvmsg (347 samples, 5.90%)</title><rect x="1054.8" y="1973" width="69.6" height="15.0" fill="rgb(205,177,19)" rx="2" ry="2" />
<text  x="1057.83" y="1983.5" >sock_re..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="369.2" y="1941" width="0.2" height="15.0" fill="rgb(251,169,13)" rx="2" ry="2" />
<text  x="372.17" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="160.8" y="1765" width="0.2" height="15.0" fill="rgb(253,189,25)" rx="2" ry="2" />
<text  x="163.81" y="1775.5" ></text>
</g>
<g >
<title>SYSC_getsockname (34 samples, 0.58%)</title><rect x="593.6" y="1877" width="6.8" height="15.0" fill="rgb(229,79,13)" rx="2" ry="2" />
<text  x="596.58" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="882.6" y="1877" width="0.2" height="15.0" fill="rgb(210,224,16)" rx="2" ry="2" />
<text  x="885.57" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="712.9" y="1797" width="0.2" height="15.0" fill="rgb(237,181,51)" rx="2" ry="2" />
<text  x="715.91" y="1807.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.02%)</title><rect x="1082.9" y="1829" width="0.2" height="15.0" fill="rgb(228,189,39)" rx="2" ry="2" />
<text  x="1085.91" y="1839.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (5 samples, 0.08%)</title><rect x="961.0" y="2021" width="1.0" height="15.0" fill="rgb(245,198,6)" rx="2" ry="2" />
<text  x="963.98" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (9 samples, 0.15%)</title><rect x="950.4" y="2037" width="1.8" height="15.0" fill="rgb(222,134,44)" rx="2" ry="2" />
<text  x="953.35" y="2047.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="918.5" y="1669" width="0.2" height="15.0" fill="rgb(229,17,19)" rx="2" ry="2" />
<text  x="921.46" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="545.3" y="1813" width="0.2" height="15.0" fill="rgb(232,94,35)" rx="2" ry="2" />
<text  x="548.25" y="1823.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (4 samples, 0.07%)</title><rect x="833.6" y="1765" width="0.8" height="15.0" fill="rgb(245,14,18)" rx="2" ry="2" />
<text  x="836.63" y="1775.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="322.6" y="1829" width="0.2" height="15.0" fill="rgb(250,135,51)" rx="2" ry="2" />
<text  x="325.65" y="1839.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="25.4" y="1557" width="0.2" height="15.0" fill="rgb(230,131,52)" rx="2" ry="2" />
<text  x="28.44" y="1567.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (9 samples, 0.15%)</title><rect x="211.3" y="1877" width="1.9" height="15.0" fill="rgb(214,222,14)" rx="2" ry="2" />
<text  x="214.35" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="869" width="16.3" height="15.0" fill="rgb(221,141,8)" rx="2" ry="2" />
<text  x="101.44" y="879.5" ></text>
</g>
<g >
<title>ip_copy_addrs (7 samples, 0.12%)</title><rect x="270.1" y="1813" width="1.4" height="15.0" fill="rgb(230,164,48)" rx="2" ry="2" />
<text  x="273.11" y="1823.5" ></text>
</g>
<g >
<title>extract_crng (1 samples, 0.02%)</title><rect x="95.8" y="1573" width="0.2" height="15.0" fill="rgb(247,83,31)" rx="2" ry="2" />
<text  x="98.83" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="213.8" y="1845" width="0.4" height="15.0" fill="rgb(219,139,36)" rx="2" ry="2" />
<text  x="216.75" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="71.8" y="1877" width="0.2" height="15.0" fill="rgb(249,178,14)" rx="2" ry="2" />
<text  x="74.77" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (8 samples, 0.14%)</title><rect x="882.4" y="1893" width="1.6" height="15.0" fill="rgb(243,51,20)" rx="2" ry="2" />
<text  x="885.37" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="662.8" y="2037" width="0.2" height="15.0" fill="rgb(214,105,50)" rx="2" ry="2" />
<text  x="665.77" y="2047.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="536.8" y="1877" width="0.4" height="15.0" fill="rgb(223,144,10)" rx="2" ry="2" />
<text  x="539.83" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="161.6" y="1957" width="0.8" height="15.0" fill="rgb(209,91,51)" rx="2" ry="2" />
<text  x="164.61" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="363.8" y="1813" width="0.2" height="15.0" fill="rgb(225,131,35)" rx="2" ry="2" />
<text  x="366.76" y="1823.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="666.6" y="1845" width="0.8" height="15.0" fill="rgb(239,213,48)" rx="2" ry="2" />
<text  x="669.58" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.41%)</title><rect x="98.4" y="1477" width="16.7" height="15.0" fill="rgb(229,75,19)" rx="2" ry="2" />
<text  x="101.44" y="1487.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="114.1" y="37" width="0.2" height="15.0" fill="rgb(246,135,10)" rx="2" ry="2" />
<text  x="117.08" y="47.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="994.3" y="1605" width="0.2" height="15.0" fill="rgb(209,51,2)" rx="2" ry="2" />
<text  x="997.27" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1122.6" y="1781" width="0.2" height="15.0" fill="rgb(232,52,8)" rx="2" ry="2" />
<text  x="1125.62" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="223.8" y="2021" width="0.2" height="15.0" fill="rgb(238,177,8)" rx="2" ry="2" />
<text  x="226.78" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="95.8" y="1829" width="0.2" height="15.0" fill="rgb(225,73,44)" rx="2" ry="2" />
<text  x="98.83" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (27 samples, 0.46%)</title><rect x="358.5" y="1925" width="5.5" height="15.0" fill="rgb(243,181,50)" rx="2" ry="2" />
<text  x="361.55" y="1935.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(228,56,44)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="575.3" y="1797" width="0.2" height="15.0" fill="rgb(251,176,42)" rx="2" ry="2" />
<text  x="578.33" y="1807.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="374.4" y="1909" width="0.4" height="15.0" fill="rgb(208,37,28)" rx="2" ry="2" />
<text  x="377.39" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (43 samples, 0.73%)</title><rect x="990.7" y="2021" width="8.6" height="15.0" fill="rgb(216,155,54)" rx="2" ry="2" />
<text  x="993.66" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="697.7" y="1781" width="0.2" height="15.0" fill="rgb(237,171,51)" rx="2" ry="2" />
<text  x="700.66" y="1791.5" ></text>
</g>
<g >
<title>call_rcu_sched (9 samples, 0.15%)</title><rect x="457.8" y="1957" width="1.8" height="15.0" fill="rgb(236,70,40)" rx="2" ry="2" />
<text  x="460.81" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="636.5" y="1989" width="0.6" height="15.0" fill="rgb(222,220,32)" rx="2" ry="2" />
<text  x="639.50" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="77.2" y="1877" width="0.2" height="15.0" fill="rgb(254,26,14)" rx="2" ry="2" />
<text  x="80.18" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="160.8" y="1701" width="0.2" height="15.0" fill="rgb(227,16,8)" rx="2" ry="2" />
<text  x="163.81" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (3 samples, 0.05%)</title><rect x="135.9" y="1909" width="0.6" height="15.0" fill="rgb(238,37,17)" rx="2" ry="2" />
<text  x="138.94" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="997.1" y="1925" width="0.2" height="15.0" fill="rgb(211,88,34)" rx="2" ry="2" />
<text  x="1000.08" y="1935.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="265.3" y="1861" width="0.2" height="15.0" fill="rgb(240,38,52)" rx="2" ry="2" />
<text  x="268.29" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="315.4" y="1605" width="0.2" height="15.0" fill="rgb(212,150,9)" rx="2" ry="2" />
<text  x="318.43" y="1615.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="153.8" y="1685" width="0.2" height="15.0" fill="rgb(233,78,53)" rx="2" ry="2" />
<text  x="156.79" y="1695.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (15 samples, 0.25%)</title><rect x="198.9" y="1941" width="3.0" height="15.0" fill="rgb(233,104,18)" rx="2" ry="2" />
<text  x="201.91" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="116.3" y="1765" width="0.2" height="15.0" fill="rgb(234,160,44)" rx="2" ry="2" />
<text  x="119.29" y="1775.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1074.9" y="1413" width="0.2" height="15.0" fill="rgb(224,138,45)" rx="2" ry="2" />
<text  x="1077.89" y="1423.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="369.6" y="1925" width="0.2" height="15.0" fill="rgb(238,86,2)" rx="2" ry="2" />
<text  x="372.58" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="113.3" y="37" width="0.2" height="15.0" fill="rgb(236,20,0)" rx="2" ry="2" />
<text  x="116.28" y="47.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="59.1" y="1877" width="0.8" height="15.0" fill="rgb(233,97,38)" rx="2" ry="2" />
<text  x="62.13" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="391.0" y="1669" width="0.2" height="15.0" fill="rgb(245,106,25)" rx="2" ry="2" />
<text  x="394.03" y="1679.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (8 samples, 0.14%)</title><rect x="265.5" y="1861" width="1.6" height="15.0" fill="rgb(240,174,47)" rx="2" ry="2" />
<text  x="268.49" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="784.5" y="1429" width="0.2" height="15.0" fill="rgb(238,74,43)" rx="2" ry="2" />
<text  x="787.50" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="236.8" y="1765" width="0.2" height="15.0" fill="rgb(218,160,30)" rx="2" ry="2" />
<text  x="239.82" y="1775.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="69.8" y="1557" width="0.2" height="15.0" fill="rgb(218,0,48)" rx="2" ry="2" />
<text  x="72.76" y="1567.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="113.7" y="37" width="0.2" height="15.0" fill="rgb(230,3,19)" rx="2" ry="2" />
<text  x="116.68" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1074.9" y="1669" width="0.2" height="15.0" fill="rgb(222,136,43)" rx="2" ry="2" />
<text  x="1077.89" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="523.0" y="2021" width="2.2" height="15.0" fill="rgb(231,180,2)" rx="2" ry="2" />
<text  x="525.99" y="2031.5" ></text>
</g>
<g >
<title>lock_timer_base (10 samples, 0.17%)</title><rect x="818.2" y="1605" width="2.0" height="15.0" fill="rgb(223,139,37)" rx="2" ry="2" />
<text  x="821.19" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="952.2" y="2021" width="0.2" height="15.0" fill="rgb(206,216,1)" rx="2" ry="2" />
<text  x="955.15" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="75.6" y="1861" width="0.2" height="15.0" fill="rgb(205,5,39)" rx="2" ry="2" />
<text  x="78.58" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="832.6" y="1477" width="0.2" height="15.0" fill="rgb(246,130,11)" rx="2" ry="2" />
<text  x="835.63" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="198.3" y="1941" width="0.2" height="15.0" fill="rgb(248,130,44)" rx="2" ry="2" />
<text  x="201.31" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (1 samples, 0.02%)</title><rect x="901.0" y="2037" width="0.2" height="15.0" fill="rgb(215,72,31)" rx="2" ry="2" />
<text  x="904.02" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="817.2" y="1557" width="0.2" height="15.0" fill="rgb(214,29,37)" rx="2" ry="2" />
<text  x="820.19" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_free (15 samples, 0.25%)</title><rect x="745.2" y="1669" width="3.0" height="15.0" fill="rgb(247,22,48)" rx="2" ry="2" />
<text  x="748.19" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="477.7" y="1749" width="0.2" height="15.0" fill="rgb(242,177,3)" rx="2" ry="2" />
<text  x="480.67" y="1759.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="718.3" y="1941" width="0.2" height="15.0" fill="rgb(215,101,10)" rx="2" ry="2" />
<text  x="721.32" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (2 samples, 0.03%)</title><rect x="638.5" y="1973" width="0.4" height="15.0" fill="rgb(218,46,52)" rx="2" ry="2" />
<text  x="641.50" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 0.14%)</title><rect x="260.3" y="1845" width="1.6" height="15.0" fill="rgb(243,113,17)" rx="2" ry="2" />
<text  x="263.28" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="67.4" y="1781" width="0.2" height="15.0" fill="rgb(213,127,8)" rx="2" ry="2" />
<text  x="70.36" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="710.5" y="1973" width="0.4" height="15.0" fill="rgb(254,215,46)" rx="2" ry="2" />
<text  x="713.50" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1100.8" y="1717" width="0.2" height="15.0" fill="rgb(206,209,13)" rx="2" ry="2" />
<text  x="1103.76" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.07%)</title><rect x="180.5" y="2021" width="0.8" height="15.0" fill="rgb(244,189,17)" rx="2" ry="2" />
<text  x="183.46" y="2031.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="521.8" y="1973" width="0.8" height="15.0" fill="rgb(213,87,27)" rx="2" ry="2" />
<text  x="524.79" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (6 samples, 0.10%)</title><rect x="1122.8" y="1925" width="1.2" height="15.0" fill="rgb(208,77,34)" rx="2" ry="2" />
<text  x="1125.82" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.8" y="2005" width="0.2" height="15.0" fill="rgb(247,95,17)" rx="2" ry="2" />
<text  x="966.79" y="2015.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="259.9" y="1749" width="0.2" height="15.0" fill="rgb(252,208,0)" rx="2" ry="2" />
<text  x="262.88" y="1759.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="768.3" y="1653" width="0.2" height="15.0" fill="rgb(221,67,5)" rx="2" ry="2" />
<text  x="771.26" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="539.6" y="1973" width="0.2" height="15.0" fill="rgb(248,212,37)" rx="2" ry="2" />
<text  x="542.64" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="579.7" y="1781" width="0.2" height="15.0" fill="rgb(228,13,3)" rx="2" ry="2" />
<text  x="582.75" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="563.1" y="1797" width="0.2" height="15.0" fill="rgb(223,179,4)" rx="2" ry="2" />
<text  x="566.10" y="1807.5" ></text>
</g>
<g >
<title>ip_queue_xmit (52 samples, 0.88%)</title><rect x="1108.6" y="1861" width="10.4" height="15.0" fill="rgb(230,112,45)" rx="2" ry="2" />
<text  x="1111.58" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="536.2" y="1893" width="0.2" height="15.0" fill="rgb(215,120,33)" rx="2" ry="2" />
<text  x="539.23" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="583.8" y="1893" width="0.2" height="15.0" fill="rgb(253,58,52)" rx="2" ry="2" />
<text  x="586.76" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="814.0" y="1653" width="0.2" height="15.0" fill="rgb(215,40,53)" rx="2" ry="2" />
<text  x="816.98" y="1663.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="12.8" y="1957" width="0.8" height="15.0" fill="rgb(223,195,2)" rx="2" ry="2" />
<text  x="15.81" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (3 samples, 0.05%)</title><rect x="569.5" y="1957" width="0.6" height="15.0" fill="rgb(212,32,36)" rx="2" ry="2" />
<text  x="572.52" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (5 samples, 0.08%)</title><rect x="1007.5" y="1989" width="1.0" height="15.0" fill="rgb(245,105,43)" rx="2" ry="2" />
<text  x="1010.51" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="136.5" y="1909" width="0.2" height="15.0" fill="rgb(212,11,39)" rx="2" ry="2" />
<text  x="139.54" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="369.6" y="1909" width="0.2" height="15.0" fill="rgb(231,152,8)" rx="2" ry="2" />
<text  x="372.58" y="1919.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (28 samples, 0.48%)</title><rect x="824.0" y="1717" width="5.6" height="15.0" fill="rgb(218,77,12)" rx="2" ry="2" />
<text  x="827.01" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="30.3" y="1909" width="0.2" height="15.0" fill="rgb(231,192,53)" rx="2" ry="2" />
<text  x="33.25" y="1919.5" ></text>
</g>
<g >
<title>free (31 samples, 0.53%)</title><rect x="1009.1" y="2037" width="6.2" height="15.0" fill="rgb(241,176,42)" rx="2" ry="2" />
<text  x="1012.11" y="2047.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="323.5" y="1893" width="1.0" height="15.0" fill="rgb(218,111,20)" rx="2" ry="2" />
<text  x="326.45" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="62.3" y="1893" width="0.2" height="15.0" fill="rgb(252,66,15)" rx="2" ry="2" />
<text  x="65.34" y="1903.5" ></text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="740.2" y="1717" width="0.2" height="15.0" fill="rgb(209,60,1)" rx="2" ry="2" />
<text  x="743.18" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (1 samples, 0.02%)</title><rect x="897.8" y="1973" width="0.2" height="15.0" fill="rgb(233,42,42)" rx="2" ry="2" />
<text  x="900.81" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1164.5" y="1541" width="0.2" height="15.0" fill="rgb(252,128,16)" rx="2" ry="2" />
<text  x="1167.53" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="600.8" y="1541" width="0.2" height="15.0" fill="rgb(219,5,34)" rx="2" ry="2" />
<text  x="603.80" y="1551.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="363.6" y="1653" width="0.2" height="15.0" fill="rgb(208,225,24)" rx="2" ry="2" />
<text  x="366.56" y="1663.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="387.6" y="1877" width="0.2" height="15.0" fill="rgb(232,88,30)" rx="2" ry="2" />
<text  x="390.62" y="1887.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (11 samples, 0.19%)</title><rect x="250.9" y="1877" width="2.2" height="15.0" fill="rgb(218,172,18)" rx="2" ry="2" />
<text  x="253.85" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10 samples, 0.17%)</title><rect x="277.9" y="1541" width="2.0" height="15.0" fill="rgb(248,228,54)" rx="2" ry="2" />
<text  x="280.93" y="1551.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (17 samples, 0.29%)</title><rect x="143.8" y="1909" width="3.4" height="15.0" fill="rgb(210,195,45)" rx="2" ry="2" />
<text  x="146.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="307.4" y="1813" width="0.2" height="15.0" fill="rgb(233,180,49)" rx="2" ry="2" />
<text  x="310.41" y="1823.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="263.1" y="1861" width="0.2" height="15.0" fill="rgb(209,170,2)" rx="2" ry="2" />
<text  x="266.09" y="1871.5" ></text>
</g>
<g >
<title>iput (55 samples, 0.93%)</title><rect x="738.6" y="1733" width="11.0" height="15.0" fill="rgb(242,55,36)" rx="2" ry="2" />
<text  x="741.58" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="301.0" y="1765" width="0.2" height="15.0" fill="rgb(248,128,29)" rx="2" ry="2" />
<text  x="303.99" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1129.8" y="2021" width="0.2" height="15.0" fill="rgb(247,181,21)" rx="2" ry="2" />
<text  x="1132.84" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="219.4" y="1893" width="0.2" height="15.0" fill="rgb(237,129,20)" rx="2" ry="2" />
<text  x="222.37" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="841.9" y="1893" width="0.2" height="15.0" fill="rgb(230,156,45)" rx="2" ry="2" />
<text  x="844.86" y="1903.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="12.8" y="1989" width="0.8" height="15.0" fill="rgb(206,190,6)" rx="2" ry="2" />
<text  x="15.81" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="576.3" y="1973" width="0.2" height="15.0" fill="rgb(217,42,5)" rx="2" ry="2" />
<text  x="579.34" y="1983.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="181.7" y="2037" width="0.4" height="15.0" fill="rgb(232,57,21)" rx="2" ry="2" />
<text  x="184.67" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="655.8" y="2005" width="0.2" height="15.0" fill="rgb(242,7,9)" rx="2" ry="2" />
<text  x="658.75" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="276.5" y="1541" width="0.6" height="15.0" fill="rgb(215,8,48)" rx="2" ry="2" />
<text  x="279.52" y="1551.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.02%)</title><rect x="563.5" y="1941" width="0.2" height="15.0" fill="rgb(245,8,50)" rx="2" ry="2" />
<text  x="566.50" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="114.1" y="69" width="0.2" height="15.0" fill="rgb(225,229,44)" rx="2" ry="2" />
<text  x="117.08" y="79.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="803.8" y="1509" width="0.2" height="15.0" fill="rgb(234,188,10)" rx="2" ry="2" />
<text  x="806.75" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.6" y="2021" width="0.8" height="15.0" fill="rgb(217,228,32)" rx="2" ry="2" />
<text  x="14.60" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="167.8" y="1941" width="0.4" height="15.0" fill="rgb(235,203,33)" rx="2" ry="2" />
<text  x="170.83" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (3 samples, 0.05%)</title><rect x="867.1" y="1989" width="0.6" height="15.0" fill="rgb(207,207,31)" rx="2" ry="2" />
<text  x="870.12" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="512.8" y="1941" width="0.2" height="15.0" fill="rgb(221,17,44)" rx="2" ry="2" />
<text  x="515.76" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1000.5" y="2021" width="0.2" height="15.0" fill="rgb(250,167,46)" rx="2" ry="2" />
<text  x="1003.49" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="478.3" y="1989" width="0.6" height="15.0" fill="rgb(207,229,49)" rx="2" ry="2" />
<text  x="481.27" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="391.0" y="1557" width="0.2" height="15.0" fill="rgb(228,151,28)" rx="2" ry="2" />
<text  x="394.03" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="363.8" y="1909" width="0.2" height="15.0" fill="rgb(249,179,2)" rx="2" ry="2" />
<text  x="366.76" y="1919.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="960.4" y="2021" width="0.2" height="15.0" fill="rgb(249,15,15)" rx="2" ry="2" />
<text  x="963.38" y="2031.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="276.9" y="1461" width="0.2" height="15.0" fill="rgb(250,172,44)" rx="2" ry="2" />
<text  x="279.92" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="856.1" y="1829" width="0.2" height="15.0" fill="rgb(219,221,37)" rx="2" ry="2" />
<text  x="859.09" y="1839.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (64 samples, 1.09%)</title><rect x="1106.2" y="1925" width="12.8" height="15.0" fill="rgb(226,158,25)" rx="2" ry="2" />
<text  x="1109.17" y="1935.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="690.0" y="1797" width="0.2" height="15.0" fill="rgb(240,172,46)" rx="2" ry="2" />
<text  x="693.04" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="893.0" y="1909" width="0.2" height="15.0" fill="rgb(241,32,50)" rx="2" ry="2" />
<text  x="895.99" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="707.7" y="1989" width="0.6" height="15.0" fill="rgb(234,117,24)" rx="2" ry="2" />
<text  x="710.69" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="164.0" y="2005" width="0.4" height="15.0" fill="rgb(250,182,17)" rx="2" ry="2" />
<text  x="167.02" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="166.6" y="1941" width="0.2" height="15.0" fill="rgb(225,135,23)" rx="2" ry="2" />
<text  x="169.62" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1074.9" y="1813" width="0.2" height="15.0" fill="rgb(244,20,38)" rx="2" ry="2" />
<text  x="1077.89" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (1 samples, 0.02%)</title><rect x="132.3" y="1957" width="0.2" height="15.0" fill="rgb(220,222,20)" rx="2" ry="2" />
<text  x="135.33" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="478.3" y="1973" width="0.6" height="15.0" fill="rgb(212,158,27)" rx="2" ry="2" />
<text  x="481.27" y="1983.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1108.4" y="1861" width="0.2" height="15.0" fill="rgb(249,142,52)" rx="2" ry="2" />
<text  x="1111.38" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="210.9" y="1477" width="0.2" height="15.0" fill="rgb(207,112,16)" rx="2" ry="2" />
<text  x="213.94" y="1487.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="1173.2" y="2021" width="0.2" height="15.0" fill="rgb(214,21,45)" rx="2" ry="2" />
<text  x="1176.15" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (29 samples, 0.49%)</title><rect x="650.1" y="2037" width="5.9" height="15.0" fill="rgb(229,148,20)" rx="2" ry="2" />
<text  x="653.14" y="2047.5" ></text>
</g>
<g >
<title>folly::Try&lt;folly::Unit&gt;::hasException (2 samples, 0.03%)</title><rect x="899.2" y="2005" width="0.4" height="15.0" fill="rgb(222,106,25)" rx="2" ry="2" />
<text  x="902.21" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="478.3" y="2021" width="0.6" height="15.0" fill="rgb(254,211,10)" rx="2" ry="2" />
<text  x="481.27" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="847.5" y="1925" width="0.2" height="15.0" fill="rgb(206,193,23)" rx="2" ry="2" />
<text  x="850.47" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (7 samples, 0.12%)</title><rect x="462.8" y="1925" width="1.4" height="15.0" fill="rgb(217,123,45)" rx="2" ry="2" />
<text  x="465.83" y="1935.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="836.8" y="1813" width="0.2" height="15.0" fill="rgb(245,206,4)" rx="2" ry="2" />
<text  x="839.84" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="476.7" y="1957" width="0.2" height="15.0" fill="rgb(249,171,1)" rx="2" ry="2" />
<text  x="479.67" y="1967.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (9 samples, 0.15%)</title><rect x="240.6" y="1909" width="1.8" height="15.0" fill="rgb(245,109,27)" rx="2" ry="2" />
<text  x="243.63" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="575.3" y="1877" width="0.2" height="15.0" fill="rgb(212,116,27)" rx="2" ry="2" />
<text  x="578.33" y="1887.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="654.7" y="1989" width="0.4" height="15.0" fill="rgb(239,75,24)" rx="2" ry="2" />
<text  x="657.75" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="76.4" y="1925" width="0.4" height="15.0" fill="rgb(207,170,49)" rx="2" ry="2" />
<text  x="79.38" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7 samples, 0.12%)</title><rect x="936.3" y="1957" width="1.4" height="15.0" fill="rgb(206,67,6)" rx="2" ry="2" />
<text  x="939.31" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (2 samples, 0.03%)</title><rect x="598.0" y="1845" width="0.4" height="15.0" fill="rgb(223,25,35)" rx="2" ry="2" />
<text  x="600.99" y="1855.5" ></text>
</g>
<g >
<title>fd_install (2 samples, 0.03%)</title><rect x="344.1" y="1957" width="0.4" height="15.0" fill="rgb(251,115,7)" rx="2" ry="2" />
<text  x="347.11" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1140.5" y="1989" width="0.2" height="15.0" fill="rgb(254,105,2)" rx="2" ry="2" />
<text  x="1143.47" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1128.6" y="1909" width="0.2" height="15.0" fill="rgb(213,35,18)" rx="2" ry="2" />
<text  x="1131.63" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="994.3" y="1925" width="0.2" height="15.0" fill="rgb(241,141,6)" rx="2" ry="2" />
<text  x="997.27" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (13 samples, 0.22%)</title><rect x="68.2" y="1957" width="2.6" height="15.0" fill="rgb(242,59,31)" rx="2" ry="2" />
<text  x="71.16" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="893.2" y="1989" width="0.2" height="15.0" fill="rgb(213,87,40)" rx="2" ry="2" />
<text  x="896.20" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="391.0" y="1749" width="0.2" height="15.0" fill="rgb(252,116,50)" rx="2" ry="2" />
<text  x="394.03" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="886.8" y="1877" width="0.2" height="15.0" fill="rgb(213,65,27)" rx="2" ry="2" />
<text  x="889.78" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="25.4" y="1845" width="0.2" height="15.0" fill="rgb(238,5,32)" rx="2" ry="2" />
<text  x="28.44" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (5 samples, 0.08%)</title><rect x="73.8" y="1941" width="1.0" height="15.0" fill="rgb(225,39,34)" rx="2" ry="2" />
<text  x="76.77" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1165.3" y="1701" width="0.2" height="15.0" fill="rgb(222,68,54)" rx="2" ry="2" />
<text  x="1168.33" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="621.5" y="2005" width="0.2" height="15.0" fill="rgb(226,16,50)" rx="2" ry="2" />
<text  x="624.46" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (1 samples, 0.02%)</title><rect x="544.6" y="1973" width="0.3" height="15.0" fill="rgb(238,48,29)" rx="2" ry="2" />
<text  x="547.65" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="867.9" y="1973" width="0.2" height="15.0" fill="rgb(217,60,53)" rx="2" ry="2" />
<text  x="870.93" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (6 samples, 0.10%)</title><rect x="896.2" y="1957" width="1.2" height="15.0" fill="rgb(225,153,43)" rx="2" ry="2" />
<text  x="899.20" y="1967.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="475.5" y="1637" width="0.2" height="15.0" fill="rgb(222,185,34)" rx="2" ry="2" />
<text  x="478.46" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (2 samples, 0.03%)</title><rect x="522.6" y="1989" width="0.4" height="15.0" fill="rgb(228,130,7)" rx="2" ry="2" />
<text  x="525.59" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1151.1" y="1989" width="0.2" height="15.0" fill="rgb(228,44,35)" rx="2" ry="2" />
<text  x="1154.09" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (32 samples, 0.54%)</title><rect x="292.6" y="1653" width="6.4" height="15.0" fill="rgb(217,40,31)" rx="2" ry="2" />
<text  x="295.57" y="1663.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="95.8" y="1605" width="0.2" height="15.0" fill="rgb(250,123,24)" rx="2" ry="2" />
<text  x="98.83" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="789" width="16.3" height="15.0" fill="rgb(229,27,1)" rx="2" ry="2" />
<text  x="101.44" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1179.0" y="1989" width="0.2" height="15.0" fill="rgb(247,173,53)" rx="2" ry="2" />
<text  x="1181.97" y="1999.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="426.7" y="1717" width="0.2" height="15.0" fill="rgb(253,135,6)" rx="2" ry="2" />
<text  x="429.73" y="1727.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="530.0" y="1941" width="0.2" height="15.0" fill="rgb(220,59,37)" rx="2" ry="2" />
<text  x="533.01" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1381" width="16.3" height="15.0" fill="rgb(247,200,26)" rx="2" ry="2" />
<text  x="101.44" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1140.5" y="1797" width="0.2" height="15.0" fill="rgb(213,172,52)" rx="2" ry="2" />
<text  x="1143.47" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="575.5" y="1765" width="0.2" height="15.0" fill="rgb(215,108,15)" rx="2" ry="2" />
<text  x="578.53" y="1775.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="691.4" y="1909" width="0.9" height="15.0" fill="rgb(242,154,5)" rx="2" ry="2" />
<text  x="694.45" y="1919.5" ></text>
</g>
<g >
<title>__sys_sendmsg (444 samples, 7.55%)</title><rect x="237.6" y="1973" width="89.1" height="15.0" fill="rgb(252,127,30)" rx="2" ry="2" />
<text  x="240.62" y="1983.5" >__sys_send..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="306.4" y="1653" width="0.2" height="15.0" fill="rgb(238,227,10)" rx="2" ry="2" />
<text  x="309.40" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="173.8" y="1989" width="0.2" height="15.0" fill="rgb(232,218,16)" rx="2" ry="2" />
<text  x="176.84" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="852.1" y="1925" width="0.8" height="15.0" fill="rgb(230,153,28)" rx="2" ry="2" />
<text  x="855.08" y="1935.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="343.7" y="1957" width="0.2" height="15.0" fill="rgb(228,120,22)" rx="2" ry="2" />
<text  x="346.70" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="426.7" y="1829" width="0.2" height="15.0" fill="rgb(230,208,9)" rx="2" ry="2" />
<text  x="429.73" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="876.1" y="1941" width="0.2" height="15.0" fill="rgb(219,87,2)" rx="2" ry="2" />
<text  x="879.15" y="1951.5" ></text>
</g>
<g >
<title>tcp_poll (22 samples, 0.37%)</title><rect x="494.3" y="1893" width="4.4" height="15.0" fill="rgb(237,15,0)" rx="2" ry="2" />
<text  x="497.31" y="1903.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="893.0" y="1829" width="0.2" height="15.0" fill="rgb(234,162,22)" rx="2" ry="2" />
<text  x="895.99" y="1839.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.12%)</title><rect x="392.8" y="1877" width="1.4" height="15.0" fill="rgb(224,153,28)" rx="2" ry="2" />
<text  x="395.84" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="236.8" y="1845" width="0.4" height="15.0" fill="rgb(253,221,40)" rx="2" ry="2" />
<text  x="239.82" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="563.7" y="1877" width="0.4" height="15.0" fill="rgb(229,223,22)" rx="2" ry="2" />
<text  x="566.70" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="146.0" y="1781" width="0.2" height="15.0" fill="rgb(213,154,24)" rx="2" ry="2" />
<text  x="148.97" y="1791.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (4 samples, 0.07%)</title><rect x="759.8" y="1733" width="0.8" height="15.0" fill="rgb(242,131,22)" rx="2" ry="2" />
<text  x="762.83" y="1743.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.02%)</title><rect x="1118.8" y="1717" width="0.2" height="15.0" fill="rgb(249,217,49)" rx="2" ry="2" />
<text  x="1121.81" y="1727.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="243.2" y="1797" width="0.2" height="15.0" fill="rgb(254,11,47)" rx="2" ry="2" />
<text  x="246.23" y="1807.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (8 samples, 0.14%)</title><rect x="711.5" y="1909" width="1.6" height="15.0" fill="rgb(224,128,0)" rx="2" ry="2" />
<text  x="714.50" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="57.9" y="1925" width="0.2" height="15.0" fill="rgb(219,36,45)" rx="2" ry="2" />
<text  x="60.93" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="153.8" y="1893" width="0.2" height="15.0" fill="rgb(208,93,53)" rx="2" ry="2" />
<text  x="156.79" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="932.9" y="1797" width="0.2" height="15.0" fill="rgb(206,200,48)" rx="2" ry="2" />
<text  x="935.90" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="918.3" y="2005" width="0.2" height="15.0" fill="rgb(243,198,34)" rx="2" ry="2" />
<text  x="921.26" y="2015.5" ></text>
</g>
<g >
<title>security_socket_accept (1 samples, 0.02%)</title><rect x="404.5" y="1973" width="0.2" height="15.0" fill="rgb(238,147,52)" rx="2" ry="2" />
<text  x="407.47" y="1983.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (28 samples, 0.48%)</title><rect x="814.6" y="1653" width="5.6" height="15.0" fill="rgb(206,207,41)" rx="2" ry="2" />
<text  x="817.58" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1164.5" y="1925" width="0.2" height="15.0" fill="rgb(250,212,36)" rx="2" ry="2" />
<text  x="1167.53" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="276.5" y="1605" width="0.6" height="15.0" fill="rgb(241,11,14)" rx="2" ry="2" />
<text  x="279.52" y="1615.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="386.6" y="1877" width="0.2" height="15.0" fill="rgb(216,42,23)" rx="2" ry="2" />
<text  x="389.62" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="30.3" y="1941" width="0.2" height="15.0" fill="rgb(239,172,0)" rx="2" ry="2" />
<text  x="33.25" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="216.0" y="1781" width="0.4" height="15.0" fill="rgb(222,141,18)" rx="2" ry="2" />
<text  x="218.96" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6 samples, 0.10%)</title><rect x="616.8" y="1989" width="1.2" height="15.0" fill="rgb(226,84,10)" rx="2" ry="2" />
<text  x="619.85" y="1999.5" ></text>
</g>
<g >
<title>sock_destroy_inode (23 samples, 0.39%)</title><rect x="743.6" y="1685" width="4.6" height="15.0" fill="rgb(217,21,44)" rx="2" ry="2" />
<text  x="746.59" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="162.4" y="1989" width="0.2" height="15.0" fill="rgb(254,134,23)" rx="2" ry="2" />
<text  x="165.41" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="301.0" y="1653" width="0.2" height="15.0" fill="rgb(214,81,2)" rx="2" ry="2" />
<text  x="303.99" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="213.6" y="1845" width="0.2" height="15.0" fill="rgb(224,129,41)" rx="2" ry="2" />
<text  x="216.55" y="1855.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="387.4" y="1877" width="0.2" height="15.0" fill="rgb(252,41,25)" rx="2" ry="2" />
<text  x="390.42" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="544.0" y="1941" width="0.2" height="15.0" fill="rgb(206,4,9)" rx="2" ry="2" />
<text  x="547.05" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="126.9" y="1909" width="0.2" height="15.0" fill="rgb(250,1,46)" rx="2" ry="2" />
<text  x="129.92" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_accept (3 samples, 0.05%)</title><rect x="375.8" y="1957" width="0.6" height="15.0" fill="rgb(218,198,23)" rx="2" ry="2" />
<text  x="378.79" y="1967.5" ></text>
</g>
<g >
<title>vfprintf (14 samples, 0.24%)</title><rect x="184.1" y="2021" width="2.8" height="15.0" fill="rgb(225,128,34)" rx="2" ry="2" />
<text  x="187.07" y="2031.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="675.4" y="1861" width="0.8" height="15.0" fill="rgb(249,216,4)" rx="2" ry="2" />
<text  x="678.40" y="1871.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="880.4" y="1893" width="0.2" height="15.0" fill="rgb(210,67,20)" rx="2" ry="2" />
<text  x="883.36" y="1903.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(244,222,8)" rx="2" ry="2" />
<text  x="15.41" y="2079.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="93.2" y="2005" width="0.2" height="15.0" fill="rgb(226,60,23)" rx="2" ry="2" />
<text  x="96.23" y="2015.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="477.7" y="1701" width="0.2" height="15.0" fill="rgb(222,128,12)" rx="2" ry="2" />
<text  x="480.67" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.05%)</title><rect x="1175.8" y="1973" width="0.6" height="15.0" fill="rgb(242,105,1)" rx="2" ry="2" />
<text  x="1178.76" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (7 samples, 0.12%)</title><rect x="104.1" y="37" width="1.4" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="107.06" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (3 samples, 0.05%)</title><rect x="880.0" y="1925" width="0.6" height="15.0" fill="rgb(212,127,32)" rx="2" ry="2" />
<text  x="882.96" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1093.9" y="1925" width="0.8" height="15.0" fill="rgb(220,167,21)" rx="2" ry="2" />
<text  x="1096.94" y="1935.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (2 samples, 0.03%)</title><rect x="1075.1" y="1845" width="0.4" height="15.0" fill="rgb(214,49,6)" rx="2" ry="2" />
<text  x="1078.09" y="1855.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="932.7" y="1877" width="0.2" height="15.0" fill="rgb(219,64,20)" rx="2" ry="2" />
<text  x="935.70" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="140.8" y="1877" width="0.2" height="15.0" fill="rgb(225,120,0)" rx="2" ry="2" />
<text  x="143.75" y="1887.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="636.3" y="2005" width="0.8" height="15.0" fill="rgb(216,68,48)" rx="2" ry="2" />
<text  x="639.30" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="990.1" y="1925" width="0.2" height="15.0" fill="rgb(246,6,7)" rx="2" ry="2" />
<text  x="993.06" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1135.1" y="2053" width="0.2" height="15.0" fill="rgb(249,200,17)" rx="2" ry="2" />
<text  x="1138.05" y="2063.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="600.2" y="1845" width="0.2" height="15.0" fill="rgb(218,68,23)" rx="2" ry="2" />
<text  x="603.20" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (28 samples, 0.48%)</title><rect x="790.3" y="1541" width="5.6" height="15.0" fill="rgb(220,8,36)" rx="2" ry="2" />
<text  x="793.32" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="236.8" y="1829" width="0.4" height="15.0" fill="rgb(231,194,43)" rx="2" ry="2" />
<text  x="239.82" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="620.3" y="1973" width="0.2" height="15.0" fill="rgb(219,13,8)" rx="2" ry="2" />
<text  x="623.25" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="477.7" y="1861" width="0.2" height="15.0" fill="rgb(222,44,22)" rx="2" ry="2" />
<text  x="480.67" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="71.8" y="1925" width="0.2" height="15.0" fill="rgb(223,126,15)" rx="2" ry="2" />
<text  x="74.77" y="1935.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="840.9" y="1829" width="0.2" height="15.0" fill="rgb(215,81,30)" rx="2" ry="2" />
<text  x="843.85" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="776.5" y="1637" width="0.2" height="15.0" fill="rgb(234,56,49)" rx="2" ry="2" />
<text  x="779.48" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1237" width="16.3" height="15.0" fill="rgb(252,119,17)" rx="2" ry="2" />
<text  x="101.44" y="1247.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="994.3" y="1829" width="0.2" height="15.0" fill="rgb(224,14,25)" rx="2" ry="2" />
<text  x="997.27" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.73%)</title><rect x="98.2" y="1973" width="20.5" height="15.0" fill="rgb(231,24,48)" rx="2" ry="2" />
<text  x="101.24" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="374.4" y="1861" width="0.4" height="15.0" fill="rgb(232,157,18)" rx="2" ry="2" />
<text  x="377.39" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (61 samples, 1.04%)</title><rect x="667.8" y="1957" width="12.2" height="15.0" fill="rgb(239,179,53)" rx="2" ry="2" />
<text  x="670.78" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="478.7" y="1813" width="0.2" height="15.0" fill="rgb(224,72,29)" rx="2" ry="2" />
<text  x="481.67" y="1823.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="690.0" y="1813" width="0.2" height="15.0" fill="rgb(218,224,43)" rx="2" ry="2" />
<text  x="693.04" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="161.4" y="1973" width="1.0" height="15.0" fill="rgb(220,90,13)" rx="2" ry="2" />
<text  x="164.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="130.3" y="1989" width="0.8" height="15.0" fill="rgb(240,85,4)" rx="2" ry="2" />
<text  x="133.33" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1022.5" y="2021" width="0.2" height="15.0" fill="rgb(205,197,1)" rx="2" ry="2" />
<text  x="1025.55" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="763.4" y="1701" width="0.2" height="15.0" fill="rgb(250,3,34)" rx="2" ry="2" />
<text  x="766.44" y="1711.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (6 samples, 0.10%)</title><rect x="1149.9" y="1989" width="1.2" height="15.0" fill="rgb(231,214,37)" rx="2" ry="2" />
<text  x="1152.89" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (3 samples, 0.05%)</title><rect x="1016.9" y="2037" width="0.6" height="15.0" fill="rgb(254,62,27)" rx="2" ry="2" />
<text  x="1019.93" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.6" y="1909" width="0.8" height="15.0" fill="rgb(242,53,2)" rx="2" ry="2" />
<text  x="14.60" y="1919.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (3 samples, 0.05%)</title><rect x="1180.2" y="2053" width="0.6" height="15.0" fill="rgb(234,214,33)" rx="2" ry="2" />
<text  x="1183.17" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="963.2" y="1877" width="0.2" height="15.0" fill="rgb(225,118,14)" rx="2" ry="2" />
<text  x="966.18" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1122.6" y="1877" width="0.2" height="15.0" fill="rgb(239,23,37)" rx="2" ry="2" />
<text  x="1125.62" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="369.6" y="1733" width="0.2" height="15.0" fill="rgb(231,41,12)" rx="2" ry="2" />
<text  x="372.58" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1074.9" y="1797" width="0.2" height="15.0" fill="rgb(226,60,6)" rx="2" ry="2" />
<text  x="1077.89" y="1807.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="678.0" y="1653" width="0.2" height="15.0" fill="rgb(238,87,5)" rx="2" ry="2" />
<text  x="681.01" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (8 samples, 0.14%)</title><rect x="711.5" y="1893" width="1.6" height="15.0" fill="rgb(241,182,13)" rx="2" ry="2" />
<text  x="714.50" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="28.2" y="1957" width="1.7" height="15.0" fill="rgb(244,8,52)" rx="2" ry="2" />
<text  x="31.25" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (9 samples, 0.15%)</title><rect x="506.5" y="1989" width="1.9" height="15.0" fill="rgb(230,126,7)" rx="2" ry="2" />
<text  x="509.55" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="625.1" y="1957" width="0.2" height="15.0" fill="rgb(252,5,5)" rx="2" ry="2" />
<text  x="628.07" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (11 samples, 0.19%)</title><rect x="652.5" y="1989" width="2.2" height="15.0" fill="rgb(221,141,2)" rx="2" ry="2" />
<text  x="655.54" y="1999.5" ></text>
</g>
<g >
<title>do_fcntl (1 samples, 0.02%)</title><rect x="563.1" y="1925" width="0.2" height="15.0" fill="rgb(205,5,12)" rx="2" ry="2" />
<text  x="566.10" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1179.6" y="2005" width="0.2" height="15.0" fill="rgb(232,106,51)" rx="2" ry="2" />
<text  x="1182.57" y="2015.5" ></text>
</g>
<g >
<title>security_file_alloc (11 samples, 0.19%)</title><rect x="395.0" y="1909" width="2.3" height="15.0" fill="rgb(225,171,13)" rx="2" ry="2" />
<text  x="398.04" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="95.8" y="1941" width="0.2" height="15.0" fill="rgb(228,31,19)" rx="2" ry="2" />
<text  x="98.83" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="666.0" y="1941" width="1.8" height="15.0" fill="rgb(251,23,26)" rx="2" ry="2" />
<text  x="668.98" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="697.7" y="1749" width="0.2" height="15.0" fill="rgb(217,33,14)" rx="2" ry="2" />
<text  x="700.66" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1140.5" y="1829" width="0.2" height="15.0" fill="rgb(214,226,31)" rx="2" ry="2" />
<text  x="1143.47" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.14%)</title><rect x="746.6" y="1653" width="1.6" height="15.0" fill="rgb(243,133,5)" rx="2" ry="2" />
<text  x="749.60" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="106.1" y="37" width="0.4" height="15.0" fill="rgb(249,142,30)" rx="2" ry="2" />
<text  x="109.06" y="47.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="698.1" y="1893" width="0.6" height="15.0" fill="rgb(206,176,52)" rx="2" ry="2" />
<text  x="701.07" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="990.1" y="1973" width="0.2" height="15.0" fill="rgb(234,124,36)" rx="2" ry="2" />
<text  x="993.06" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="78.4" y="1909" width="0.4" height="15.0" fill="rgb(239,200,22)" rx="2" ry="2" />
<text  x="81.39" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="251.5" y="1861" width="0.6" height="15.0" fill="rgb(239,34,13)" rx="2" ry="2" />
<text  x="254.45" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="623.9" y="1941" width="0.2" height="15.0" fill="rgb(233,202,5)" rx="2" ry="2" />
<text  x="626.86" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (40 samples, 0.68%)</title><rect x="990.7" y="2005" width="8.0" height="15.0" fill="rgb(243,76,17)" rx="2" ry="2" />
<text  x="993.66" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (344 samples, 5.85%)</title><rect x="336.7" y="2021" width="69.0" height="15.0" fill="rgb(209,54,46)" rx="2" ry="2" />
<text  x="339.69" y="2031.5" >entry_S..</text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="69.8" y="1525" width="0.2" height="15.0" fill="rgb(222,178,33)" rx="2" ry="2" />
<text  x="72.76" y="1535.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(234,223,8)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="399.7" y="1877" width="0.4" height="15.0" fill="rgb(254,31,27)" rx="2" ry="2" />
<text  x="402.66" y="1887.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="24.6" y="1909" width="1.0" height="15.0" fill="rgb(212,113,37)" rx="2" ry="2" />
<text  x="27.64" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="69.8" y="1669" width="0.2" height="15.0" fill="rgb(235,126,28)" rx="2" ry="2" />
<text  x="72.76" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="390.8" y="1813" width="0.2" height="15.0" fill="rgb(217,43,6)" rx="2" ry="2" />
<text  x="393.83" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="1174.8" y="1989" width="0.2" height="15.0" fill="rgb(239,119,50)" rx="2" ry="2" />
<text  x="1177.76" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="494.1" y="1541" width="0.2" height="15.0" fill="rgb(231,105,34)" rx="2" ry="2" />
<text  x="497.11" y="1551.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="704.5" y="1973" width="0.2" height="15.0" fill="rgb(218,56,8)" rx="2" ry="2" />
<text  x="707.48" y="1983.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="247.2" y="1893" width="0.2" height="15.0" fill="rgb(210,134,2)" rx="2" ry="2" />
<text  x="250.24" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="148.4" y="1797" width="0.8" height="15.0" fill="rgb(219,183,18)" rx="2" ry="2" />
<text  x="151.38" y="1807.5" ></text>
</g>
<g >
<title>task_work_run (526 samples, 8.94%)</title><rect x="733.0" y="1845" width="105.4" height="15.0" fill="rgb(241,125,30)" rx="2" ry="2" />
<text  x="735.96" y="1855.5" >task_work_run</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="363.8" y="1893" width="0.2" height="15.0" fill="rgb(222,212,22)" rx="2" ry="2" />
<text  x="366.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="832.6" y="1397" width="0.2" height="15.0" fill="rgb(223,43,44)" rx="2" ry="2" />
<text  x="835.63" y="1407.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="114.9" y="1445" width="0.2" height="15.0" fill="rgb(206,27,17)" rx="2" ry="2" />
<text  x="117.88" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="132.5" y="1941" width="0.6" height="15.0" fill="rgb(236,0,35)" rx="2" ry="2" />
<text  x="135.53" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (18 samples, 0.31%)</title><rect x="276.3" y="1685" width="3.6" height="15.0" fill="rgb(209,155,29)" rx="2" ry="2" />
<text  x="279.32" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="850.1" y="1765" width="0.2" height="15.0" fill="rgb(235,29,3)" rx="2" ry="2" />
<text  x="853.08" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="522.8" y="1925" width="0.2" height="15.0" fill="rgb(220,49,43)" rx="2" ry="2" />
<text  x="525.79" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="919.7" y="1973" width="0.2" height="15.0" fill="rgb(222,48,8)" rx="2" ry="2" />
<text  x="922.67" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="918.5" y="1653" width="0.2" height="15.0" fill="rgb(211,146,10)" rx="2" ry="2" />
<text  x="921.46" y="1663.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="760.8" y="1733" width="0.2" height="15.0" fill="rgb(239,21,27)" rx="2" ry="2" />
<text  x="763.84" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="475.5" y="1749" width="0.2" height="15.0" fill="rgb(217,95,47)" rx="2" ry="2" />
<text  x="478.46" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="369.6" y="1797" width="0.2" height="15.0" fill="rgb(250,71,25)" rx="2" ry="2" />
<text  x="372.58" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.1" y="1733" width="0.2" height="15.0" fill="rgb(221,57,48)" rx="2" ry="2" />
<text  x="844.05" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="160.8" y="1797" width="0.2" height="15.0" fill="rgb(224,138,6)" rx="2" ry="2" />
<text  x="163.81" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (5 samples, 0.08%)</title><rect x="856.7" y="1877" width="1.0" height="15.0" fill="rgb(247,156,44)" rx="2" ry="2" />
<text  x="859.70" y="1887.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (4 samples, 0.07%)</title><rect x="613.0" y="1845" width="0.8" height="15.0" fill="rgb(218,65,44)" rx="2" ry="2" />
<text  x="616.04" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (24 samples, 0.41%)</title><rect x="610.8" y="1909" width="4.8" height="15.0" fill="rgb(231,205,18)" rx="2" ry="2" />
<text  x="613.83" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="1144.7" y="2021" width="0.2" height="15.0" fill="rgb(213,29,16)" rx="2" ry="2" />
<text  x="1147.68" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="897.2" y="1909" width="0.2" height="15.0" fill="rgb(236,168,17)" rx="2" ry="2" />
<text  x="900.21" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="951.8" y="1989" width="0.4" height="15.0" fill="rgb(242,125,18)" rx="2" ry="2" />
<text  x="954.75" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="630.1" y="2005" width="0.4" height="15.0" fill="rgb(241,114,32)" rx="2" ry="2" />
<text  x="633.08" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (6 samples, 0.10%)</title><rect x="169.6" y="1957" width="1.2" height="15.0" fill="rgb(251,125,27)" rx="2" ry="2" />
<text  x="172.63" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1165.1" y="1781" width="0.4" height="15.0" fill="rgb(219,39,50)" rx="2" ry="2" />
<text  x="1168.13" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="507.5" y="1973" width="0.7" height="15.0" fill="rgb(229,221,54)" rx="2" ry="2" />
<text  x="510.55" y="1983.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="748.2" y="1701" width="0.4" height="15.0" fill="rgb(248,150,34)" rx="2" ry="2" />
<text  x="751.20" y="1711.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="1128.6" y="1845" width="0.2" height="15.0" fill="rgb(247,88,4)" rx="2" ry="2" />
<text  x="1131.63" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1122.6" y="1861" width="0.2" height="15.0" fill="rgb(237,77,40)" rx="2" ry="2" />
<text  x="1125.62" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="12.6" y="2037" width="1.0" height="15.0" fill="rgb(226,188,36)" rx="2" ry="2" />
<text  x="15.61" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="930.7" y="1861" width="0.2" height="15.0" fill="rgb(237,37,52)" rx="2" ry="2" />
<text  x="933.70" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="918.5" y="1957" width="0.2" height="15.0" fill="rgb(236,221,20)" rx="2" ry="2" />
<text  x="921.46" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="208.1" y="1877" width="0.6" height="15.0" fill="rgb(254,103,28)" rx="2" ry="2" />
<text  x="211.14" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="518.4" y="1989" width="0.2" height="15.0" fill="rgb(233,47,12)" rx="2" ry="2" />
<text  x="521.38" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="114.5" y="725" width="0.2" height="15.0" fill="rgb(244,76,6)" rx="2" ry="2" />
<text  x="117.48" y="735.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (1 samples, 0.02%)</title><rect x="964.4" y="2037" width="0.2" height="15.0" fill="rgb(240,3,32)" rx="2" ry="2" />
<text  x="967.39" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="579.7" y="1989" width="0.2" height="15.0" fill="rgb(253,80,43)" rx="2" ry="2" />
<text  x="582.75" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;&amp;, char const  (1 samples, 0.02%)</title><rect x="501.7" y="2037" width="0.2" height="15.0" fill="rgb(251,205,51)" rx="2" ry="2" />
<text  x="504.73" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="24.4" y="1973" width="0.2" height="15.0" fill="rgb(215,5,43)" rx="2" ry="2" />
<text  x="27.44" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (8 samples, 0.14%)</title><rect x="882.4" y="1909" width="1.6" height="15.0" fill="rgb(248,112,11)" rx="2" ry="2" />
<text  x="885.37" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="368.8" y="1909" width="0.2" height="15.0" fill="rgb(222,139,48)" rx="2" ry="2" />
<text  x="371.77" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_reqsk_destructor (1 samples, 0.02%)</title><rect x="369.0" y="1925" width="0.2" height="15.0" fill="rgb(216,220,8)" rx="2" ry="2" />
<text  x="371.97" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (16 samples, 0.27%)</title><rect x="881.0" y="1941" width="3.2" height="15.0" fill="rgb(246,134,51)" rx="2" ry="2" />
<text  x="883.96" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1184.2" y="2005" width="0.4" height="15.0" fill="rgb(247,151,41)" rx="2" ry="2" />
<text  x="1187.18" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (6 samples, 0.10%)</title><rect x="73.8" y="1957" width="1.2" height="15.0" fill="rgb(217,114,43)" rx="2" ry="2" />
<text  x="76.77" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(220,204,28)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (12 samples, 0.20%)</title><rect x="582.4" y="1957" width="2.4" height="15.0" fill="rgb(205,138,8)" rx="2" ry="2" />
<text  x="585.35" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="301.0" y="1589" width="0.2" height="15.0" fill="rgb(229,76,35)" rx="2" ry="2" />
<text  x="303.99" y="1599.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="364.6" y="1909" width="0.2" height="15.0" fill="rgb(209,103,3)" rx="2" ry="2" />
<text  x="367.56" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="149.2" y="1653" width="0.2" height="15.0" fill="rgb(228,161,46)" rx="2" ry="2" />
<text  x="152.18" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="381.2" y="1877" width="0.2" height="15.0" fill="rgb(253,180,24)" rx="2" ry="2" />
<text  x="384.21" y="1887.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1108.2" y="1877" width="0.2" height="15.0" fill="rgb(219,46,31)" rx="2" ry="2" />
<text  x="1111.18" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="25.4" y="1589" width="0.2" height="15.0" fill="rgb(240,90,52)" rx="2" ry="2" />
<text  x="28.44" y="1599.5" ></text>
</g>
<g >
<title>event_del_nolock_ (7 samples, 0.12%)</title><rect x="94.2" y="2005" width="1.4" height="15.0" fill="rgb(207,150,50)" rx="2" ry="2" />
<text  x="97.23" y="2015.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1005.1" y="1973" width="0.2" height="15.0" fill="rgb(218,113,35)" rx="2" ry="2" />
<text  x="1008.10" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="544.0" y="1813" width="0.2" height="15.0" fill="rgb(254,40,2)" rx="2" ry="2" />
<text  x="547.05" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="623.9" y="1957" width="0.2" height="15.0" fill="rgb(221,170,45)" rx="2" ry="2" />
<text  x="626.86" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11 samples, 0.19%)</title><rect x="364.8" y="1909" width="2.2" height="15.0" fill="rgb(246,79,34)" rx="2" ry="2" />
<text  x="367.76" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1177.6" y="1957" width="0.2" height="15.0" fill="rgb(209,197,49)" rx="2" ry="2" />
<text  x="1180.57" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1083.3" y="1797" width="0.2" height="15.0" fill="rgb(215,229,46)" rx="2" ry="2" />
<text  x="1086.31" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.7" y="1957" width="0.2" height="15.0" fill="rgb(243,93,41)" rx="2" ry="2" />
<text  x="576.73" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="24.4" y="1749" width="0.2" height="15.0" fill="rgb(214,188,51)" rx="2" ry="2" />
<text  x="27.44" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="784.5" y="1445" width="0.2" height="15.0" fill="rgb(225,158,27)" rx="2" ry="2" />
<text  x="787.50" y="1455.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="28.2" y="1941" width="0.7" height="15.0" fill="rgb(244,180,27)" rx="2" ry="2" />
<text  x="31.25" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="74.2" y="1909" width="0.4" height="15.0" fill="rgb(250,72,20)" rx="2" ry="2" />
<text  x="77.17" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 1.99%)</title><rect x="98.0" y="2005" width="23.5" height="15.0" fill="rgb(241,101,45)" rx="2" ry="2" />
<text  x="101.04" y="2015.5" >[..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="710.5" y="1957" width="0.4" height="15.0" fill="rgb(243,46,26)" rx="2" ry="2" />
<text  x="713.50" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="583.2" y="1829" width="0.2" height="15.0" fill="rgb(228,82,19)" rx="2" ry="2" />
<text  x="586.15" y="1839.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (376 samples, 6.39%)</title><rect x="247.4" y="1893" width="75.4" height="15.0" fill="rgb(210,114,25)" rx="2" ry="2" />
<text  x="250.44" y="1903.5" >tcp_send..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="583.2" y="1685" width="0.2" height="15.0" fill="rgb(205,111,41)" rx="2" ry="2" />
<text  x="586.15" y="1695.5" ></text>
</g>
<g >
<title>tcp_current_mss (16 samples, 0.27%)</title><rect x="829.6" y="1717" width="3.2" height="15.0" fill="rgb(240,184,10)" rx="2" ry="2" />
<text  x="832.62" y="1727.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="951.0" y="1973" width="0.2" height="15.0" fill="rgb(214,17,49)" rx="2" ry="2" />
<text  x="953.95" y="1983.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="12.8" y="2005" width="0.8" height="15.0" fill="rgb(250,5,33)" rx="2" ry="2" />
<text  x="15.81" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="625.5" y="2005" width="0.2" height="15.0" fill="rgb(253,95,30)" rx="2" ry="2" />
<text  x="628.47" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="378.0" y="1941" width="0.4" height="15.0" fill="rgb(245,8,8)" rx="2" ry="2" />
<text  x="381.00" y="1951.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (4 samples, 0.07%)</title><rect x="445.4" y="1941" width="0.8" height="15.0" fill="rgb(218,117,11)" rx="2" ry="2" />
<text  x="448.38" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="757.8" y="1669" width="0.2" height="15.0" fill="rgb(252,166,4)" rx="2" ry="2" />
<text  x="760.83" y="1679.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1181.8" y="1941" width="0.2" height="15.0" fill="rgb(217,186,38)" rx="2" ry="2" />
<text  x="1184.78" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="922.5" y="1941" width="0.2" height="15.0" fill="rgb(245,86,7)" rx="2" ry="2" />
<text  x="925.47" y="1951.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="10.2" y="1909" width="1.0" height="15.0" fill="rgb(224,113,38)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="857.7" y="1845" width="0.2" height="15.0" fill="rgb(248,146,22)" rx="2" ry="2" />
<text  x="860.70" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1128.6" y="1829" width="0.2" height="15.0" fill="rgb(205,56,1)" rx="2" ry="2" />
<text  x="1131.63" y="1839.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="649.7" y="1989" width="0.4" height="15.0" fill="rgb(212,95,51)" rx="2" ry="2" />
<text  x="652.73" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="786.3" y="1557" width="0.4" height="15.0" fill="rgb(240,92,2)" rx="2" ry="2" />
<text  x="789.31" y="1567.5" ></text>
</g>
<g >
<title>sock_destroy_inode (1 samples, 0.02%)</title><rect x="748.6" y="1701" width="0.2" height="15.0" fill="rgb(237,165,30)" rx="2" ry="2" />
<text  x="751.60" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="909.0" y="1973" width="0.2" height="15.0" fill="rgb(241,174,48)" rx="2" ry="2" />
<text  x="912.04" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (4 samples, 0.07%)</title><rect x="576.5" y="2005" width="0.8" height="15.0" fill="rgb(238,179,10)" rx="2" ry="2" />
<text  x="579.54" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="245" width="15.9" height="15.0" fill="rgb(208,0,28)" rx="2" ry="2" />
<text  x="101.44" y="255.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="541.4" y="1861" width="0.2" height="15.0" fill="rgb(215,193,22)" rx="2" ry="2" />
<text  x="544.44" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (102 samples, 1.73%)</title><rect x="682.6" y="2005" width="20.5" height="15.0" fill="rgb(237,152,1)" rx="2" ry="2" />
<text  x="685.62" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="584.2" y="1861" width="0.2" height="15.0" fill="rgb(213,75,11)" rx="2" ry="2" />
<text  x="587.16" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="923.7" y="1925" width="0.2" height="15.0" fill="rgb(228,109,13)" rx="2" ry="2" />
<text  x="926.68" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="614.0" y="1781" width="1.0" height="15.0" fill="rgb(226,5,23)" rx="2" ry="2" />
<text  x="617.04" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="950.8" y="1973" width="0.2" height="15.0" fill="rgb(217,74,24)" rx="2" ry="2" />
<text  x="953.75" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="678.0" y="1717" width="0.2" height="15.0" fill="rgb(250,13,23)" rx="2" ry="2" />
<text  x="681.01" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="95.8" y="1957" width="0.2" height="15.0" fill="rgb(215,99,26)" rx="2" ry="2" />
<text  x="98.83" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="859.1" y="1941" width="0.2" height="15.0" fill="rgb(224,227,52)" rx="2" ry="2" />
<text  x="862.10" y="1951.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(229,173,39)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="369.6" y="1573" width="0.2" height="15.0" fill="rgb(206,218,37)" rx="2" ry="2" />
<text  x="372.58" y="1583.5" ></text>
</g>
<g >
<title>event_base_set@plt (1 samples, 0.02%)</title><rect x="534.6" y="1957" width="0.2" height="15.0" fill="rgb(236,64,14)" rx="2" ry="2" />
<text  x="537.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="113.9" y="37" width="0.2" height="15.0" fill="rgb(236,192,28)" rx="2" ry="2" />
<text  x="116.88" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1175.6" y="1957" width="0.2" height="15.0" fill="rgb(247,138,50)" rx="2" ry="2" />
<text  x="1178.56" y="1967.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="363.8" y="1669" width="0.2" height="15.0" fill="rgb(227,26,18)" rx="2" ry="2" />
<text  x="366.76" y="1679.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="12.8" y="1893" width="0.8" height="15.0" fill="rgb(251,198,18)" rx="2" ry="2" />
<text  x="15.81" y="1903.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="381.2" y="1653" width="0.2" height="15.0" fill="rgb(242,79,21)" rx="2" ry="2" />
<text  x="384.21" y="1663.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="612.2" y="1829" width="0.2" height="15.0" fill="rgb(245,68,38)" rx="2" ry="2" />
<text  x="615.23" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="95.8" y="1925" width="0.2" height="15.0" fill="rgb(224,5,26)" rx="2" ry="2" />
<text  x="98.83" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="918.5" y="1749" width="0.2" height="15.0" fill="rgb(247,192,23)" rx="2" ry="2" />
<text  x="921.46" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="990.5" y="1829" width="0.2" height="15.0" fill="rgb(209,115,45)" rx="2" ry="2" />
<text  x="993.46" y="1839.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="541.4" y="1605" width="0.2" height="15.0" fill="rgb(205,26,35)" rx="2" ry="2" />
<text  x="544.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="577.1" y="1989" width="0.2" height="15.0" fill="rgb(212,58,21)" rx="2" ry="2" />
<text  x="580.14" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1269" width="16.3" height="15.0" fill="rgb(247,159,48)" rx="2" ry="2" />
<text  x="101.44" y="1279.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="55.7" y="1909" width="0.4" height="15.0" fill="rgb(234,78,43)" rx="2" ry="2" />
<text  x="58.72" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (4 samples, 0.07%)</title><rect x="123.5" y="1989" width="0.8" height="15.0" fill="rgb(251,218,53)" rx="2" ry="2" />
<text  x="126.51" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="327.3" y="1861" width="0.2" height="15.0" fill="rgb(231,110,21)" rx="2" ry="2" />
<text  x="330.26" y="1871.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="757.0" y="1749" width="0.2" height="15.0" fill="rgb(252,214,38)" rx="2" ry="2" />
<text  x="760.03" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="62.3" y="1909" width="0.2" height="15.0" fill="rgb(207,7,34)" rx="2" ry="2" />
<text  x="65.34" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(205,149,40)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1092.9" y="1909" width="0.6" height="15.0" fill="rgb(250,169,8)" rx="2" ry="2" />
<text  x="1095.94" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="832.6" y="1509" width="0.2" height="15.0" fill="rgb(222,55,6)" rx="2" ry="2" />
<text  x="835.63" y="1519.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="851.9" y="1909" width="0.2" height="15.0" fill="rgb(238,132,31)" rx="2" ry="2" />
<text  x="854.88" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="624.1" y="1957" width="0.2" height="15.0" fill="rgb(205,193,43)" rx="2" ry="2" />
<text  x="627.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (2 samples, 0.03%)</title><rect x="631.1" y="2005" width="0.4" height="15.0" fill="rgb(229,75,23)" rx="2" ry="2" />
<text  x="634.08" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1093.9" y="1861" width="0.2" height="15.0" fill="rgb(224,8,30)" rx="2" ry="2" />
<text  x="1096.94" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="541.4" y="1701" width="0.2" height="15.0" fill="rgb(244,203,40)" rx="2" ry="2" />
<text  x="544.44" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="478.3" y="1797" width="0.4" height="15.0" fill="rgb(220,212,3)" rx="2" ry="2" />
<text  x="481.27" y="1807.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(244,57,51)" rx="2" ry="2" />
<text  x="15.41" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.53%)</title><rect x="98.2" y="1733" width="18.1" height="15.0" fill="rgb(252,58,41)" rx="2" ry="2" />
<text  x="101.24" y="1743.5" ></text>
</g>
<g >
<title>sys_getpeername (3 samples, 0.05%)</title><rect x="712.5" y="1845" width="0.6" height="15.0" fill="rgb(232,65,0)" rx="2" ry="2" />
<text  x="715.51" y="1855.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (55 samples, 0.93%)</title><rect x="738.6" y="1749" width="11.0" height="15.0" fill="rgb(227,184,45)" rx="2" ry="2" />
<text  x="741.58" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="127.5" y="1941" width="0.4" height="15.0" fill="rgb(240,89,9)" rx="2" ry="2" />
<text  x="130.52" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="584.2" y="1893" width="0.2" height="15.0" fill="rgb(213,20,19)" rx="2" ry="2" />
<text  x="587.16" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="667.4" y="1909" width="0.4" height="15.0" fill="rgb(208,50,25)" rx="2" ry="2" />
<text  x="670.38" y="1919.5" ></text>
</g>
<g >
<title>_extract_crng (1 samples, 0.02%)</title><rect x="394.0" y="1813" width="0.2" height="15.0" fill="rgb(231,52,33)" rx="2" ry="2" />
<text  x="397.04" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1164.5" y="1909" width="0.2" height="15.0" fill="rgb(250,175,29)" rx="2" ry="2" />
<text  x="1167.53" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="132.5" y="1877" width="0.4" height="15.0" fill="rgb(212,76,41)" rx="2" ry="2" />
<text  x="135.53" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (7 samples, 0.12%)</title><rect x="1143.5" y="2053" width="1.4" height="15.0" fill="rgb(251,96,11)" rx="2" ry="2" />
<text  x="1146.47" y="2063.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="306.4" y="1461" width="0.2" height="15.0" fill="rgb(214,182,46)" rx="2" ry="2" />
<text  x="309.40" y="1471.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="73.6" y="1941" width="0.2" height="15.0" fill="rgb(241,30,50)" rx="2" ry="2" />
<text  x="76.57" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="817.2" y="1605" width="0.2" height="15.0" fill="rgb(205,116,51)" rx="2" ry="2" />
<text  x="820.19" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1083.3" y="1813" width="0.2" height="15.0" fill="rgb(237,39,48)" rx="2" ry="2" />
<text  x="1086.31" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="871.3" y="2005" width="0.2" height="15.0" fill="rgb(212,23,27)" rx="2" ry="2" />
<text  x="874.34" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="45.3" y="1893" width="0.2" height="15.0" fill="rgb(249,205,46)" rx="2" ry="2" />
<text  x="48.30" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="47.9" y="1941" width="0.4" height="15.0" fill="rgb(210,43,23)" rx="2" ry="2" />
<text  x="50.90" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="549.7" y="1957" width="0.4" height="15.0" fill="rgb(242,145,33)" rx="2" ry="2" />
<text  x="552.66" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.2" y="1845" width="0.2" height="15.0" fill="rgb(213,179,41)" rx="2" ry="2" />
<text  x="886.17" y="1855.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="153.8" y="1733" width="0.2" height="15.0" fill="rgb(239,53,46)" rx="2" ry="2" />
<text  x="156.79" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="141.8" y="1893" width="0.2" height="15.0" fill="rgb(237,170,41)" rx="2" ry="2" />
<text  x="144.76" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="283.3" y="1669" width="0.6" height="15.0" fill="rgb(236,189,4)" rx="2" ry="2" />
<text  x="286.34" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="579.7" y="1941" width="0.2" height="15.0" fill="rgb(208,196,42)" rx="2" ry="2" />
<text  x="582.75" y="1951.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="261.9" y="1845" width="1.2" height="15.0" fill="rgb(211,70,38)" rx="2" ry="2" />
<text  x="264.88" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="732.4" y="1845" width="0.2" height="15.0" fill="rgb(224,181,34)" rx="2" ry="2" />
<text  x="735.36" y="1855.5" ></text>
</g>
<g >
<title>sock_def_readable (6 samples, 0.10%)</title><rect x="278.5" y="1493" width="1.2" height="15.0" fill="rgb(206,18,15)" rx="2" ry="2" />
<text  x="281.53" y="1503.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="562.1" y="1893" width="1.0" height="15.0" fill="rgb(217,139,36)" rx="2" ry="2" />
<text  x="565.10" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="153.2" y="1925" width="0.2" height="15.0" fill="rgb(236,146,54)" rx="2" ry="2" />
<text  x="156.19" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="579.7" y="1797" width="0.2" height="15.0" fill="rgb(222,34,8)" rx="2" ry="2" />
<text  x="582.75" y="1807.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="1173.0" y="2021" width="0.2" height="15.0" fill="rgb(242,209,36)" rx="2" ry="2" />
<text  x="1175.95" y="2031.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="1016.3" y="2037" width="0.4" height="15.0" fill="rgb(206,172,36)" rx="2" ry="2" />
<text  x="1019.33" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="132.7" y="1861" width="0.2" height="15.0" fill="rgb(220,12,3)" rx="2" ry="2" />
<text  x="135.73" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (102 samples, 1.73%)</title><rect x="279.9" y="1717" width="20.5" height="15.0" fill="rgb(215,156,8)" rx="2" ry="2" />
<text  x="282.93" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="129.9" y="1973" width="0.2" height="15.0" fill="rgb(232,65,18)" rx="2" ry="2" />
<text  x="132.93" y="1983.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="993.7" y="1941" width="0.8" height="15.0" fill="rgb(252,207,36)" rx="2" ry="2" />
<text  x="996.67" y="1951.5" ></text>
</g>
<g >
<title>skb_entail (19 samples, 0.32%)</title><rect x="263.3" y="1877" width="3.8" height="15.0" fill="rgb(220,23,32)" rx="2" ry="2" />
<text  x="266.29" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="149.2" y="1781" width="0.2" height="15.0" fill="rgb(237,97,48)" rx="2" ry="2" />
<text  x="152.18" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1541" width="17.1" height="15.0" fill="rgb(224,195,18)" rx="2" ry="2" />
<text  x="101.44" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="99.6" y="37" width="0.2" height="15.0" fill="rgb(217,37,8)" rx="2" ry="2" />
<text  x="102.64" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="363.8" y="1765" width="0.2" height="15.0" fill="rgb(214,166,30)" rx="2" ry="2" />
<text  x="366.76" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="699.9" y="1893" width="0.2" height="15.0" fill="rgb(224,119,30)" rx="2" ry="2" />
<text  x="702.87" y="1903.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="369.6" y="1893" width="0.2" height="15.0" fill="rgb(214,24,54)" rx="2" ry="2" />
<text  x="372.58" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (7 samples, 0.12%)</title><rect x="848.7" y="1925" width="1.4" height="15.0" fill="rgb(215,94,48)" rx="2" ry="2" />
<text  x="851.67" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="579.7" y="1909" width="0.2" height="15.0" fill="rgb(212,4,22)" rx="2" ry="2" />
<text  x="582.75" y="1919.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.02%)</title><rect x="246.8" y="1893" width="0.2" height="15.0" fill="rgb(234,172,11)" rx="2" ry="2" />
<text  x="249.84" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="30.5" y="1973" width="0.6" height="15.0" fill="rgb(210,18,21)" rx="2" ry="2" />
<text  x="33.46" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="909.2" y="1973" width="0.6" height="15.0" fill="rgb(235,16,28)" rx="2" ry="2" />
<text  x="912.24" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (11 samples, 0.19%)</title><rect x="888.0" y="1925" width="2.2" height="15.0" fill="rgb(222,91,46)" rx="2" ry="2" />
<text  x="890.98" y="1935.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="741.2" y="1701" width="0.2" height="15.0" fill="rgb(217,86,27)" rx="2" ry="2" />
<text  x="744.18" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="641.3" y="1941" width="0.2" height="15.0" fill="rgb(241,97,39)" rx="2" ry="2" />
<text  x="644.31" y="1951.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="618.2" y="1893" width="0.3" height="15.0" fill="rgb(230,125,22)" rx="2" ry="2" />
<text  x="621.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="706.1" y="2037" width="0.2" height="15.0" fill="rgb(249,34,8)" rx="2" ry="2" />
<text  x="709.09" y="2047.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="614.0" y="1749" width="0.2" height="15.0" fill="rgb(224,158,37)" rx="2" ry="2" />
<text  x="617.04" y="1759.5" ></text>
</g>
<g >
<title>SYSC_getpeername (3 samples, 0.05%)</title><rect x="712.5" y="1829" width="0.6" height="15.0" fill="rgb(235,99,30)" rx="2" ry="2" />
<text  x="715.51" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="210.9" y="1717" width="0.2" height="15.0" fill="rgb(232,163,45)" rx="2" ry="2" />
<text  x="213.94" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="856.1" y="1781" width="0.2" height="15.0" fill="rgb(209,30,53)" rx="2" ry="2" />
<text  x="859.09" y="1791.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="279.3" y="1333" width="0.2" height="15.0" fill="rgb(215,132,48)" rx="2" ry="2" />
<text  x="282.33" y="1343.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="579.7" y="1845" width="0.2" height="15.0" fill="rgb(220,23,28)" rx="2" ry="2" />
<text  x="582.75" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="134.3" y="1861" width="0.4" height="15.0" fill="rgb(206,44,20)" rx="2" ry="2" />
<text  x="137.34" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb (14 samples, 0.24%)</title><rect x="805.0" y="1525" width="2.8" height="15.0" fill="rgb(231,106,25)" rx="2" ry="2" />
<text  x="807.96" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="821" width="16.3" height="15.0" fill="rgb(254,42,9)" rx="2" ry="2" />
<text  x="101.44" y="831.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="814.0" y="1557" width="0.2" height="15.0" fill="rgb(238,212,42)" rx="2" ry="2" />
<text  x="816.98" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="579.7" y="1925" width="0.2" height="15.0" fill="rgb(238,9,22)" rx="2" ry="2" />
<text  x="582.75" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="25.4" y="1573" width="0.2" height="15.0" fill="rgb(226,91,6)" rx="2" ry="2" />
<text  x="28.44" y="1583.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (3 samples, 0.05%)</title><rect x="965.8" y="2037" width="0.6" height="15.0" fill="rgb(218,208,45)" rx="2" ry="2" />
<text  x="968.79" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1128.4" y="1845" width="0.2" height="15.0" fill="rgb(224,101,26)" rx="2" ry="2" />
<text  x="1131.43" y="1855.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="244.0" y="1845" width="1.0" height="15.0" fill="rgb(237,60,43)" rx="2" ry="2" />
<text  x="247.03" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.1" y="1669" width="0.2" height="15.0" fill="rgb(247,181,31)" rx="2" ry="2" />
<text  x="844.05" y="1679.5" ></text>
</g>
<g >
<title>__GI___getpeername (6 samples, 0.10%)</title><rect x="197.7" y="1957" width="1.2" height="15.0" fill="rgb(217,85,26)" rx="2" ry="2" />
<text  x="200.71" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7 samples, 0.12%)</title><rect x="278.3" y="1525" width="1.4" height="15.0" fill="rgb(208,62,2)" rx="2" ry="2" />
<text  x="281.33" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="148.0" y="1765" width="0.2" height="15.0" fill="rgb(205,72,25)" rx="2" ry="2" />
<text  x="150.97" y="1775.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (2 samples, 0.03%)</title><rect x="1018.7" y="2005" width="0.4" height="15.0" fill="rgb(215,65,22)" rx="2" ry="2" />
<text  x="1021.74" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="987.7" y="1973" width="0.2" height="15.0" fill="rgb(250,125,31)" rx="2" ry="2" />
<text  x="990.65" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="986.8" y="1957" width="0.5" height="15.0" fill="rgb(206,170,3)" rx="2" ry="2" />
<text  x="989.85" y="1967.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="673.6" y="1893" width="0.8" height="15.0" fill="rgb(219,101,25)" rx="2" ry="2" />
<text  x="676.60" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="111.9" y="53" width="0.4" height="15.0" fill="rgb(240,49,18)" rx="2" ry="2" />
<text  x="114.88" y="63.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1164.5" y="1605" width="0.2" height="15.0" fill="rgb(254,160,29)" rx="2" ry="2" />
<text  x="1167.53" y="1615.5" ></text>
</g>
<g >
<title>ep_send_events_proc (72 samples, 1.22%)</title><rect x="486.3" y="1941" width="14.4" height="15.0" fill="rgb(205,42,12)" rx="2" ry="2" />
<text  x="489.29" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="246.4" y="1813" width="0.2" height="15.0" fill="rgb(239,139,6)" rx="2" ry="2" />
<text  x="249.44" y="1823.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="817.2" y="1493" width="0.2" height="15.0" fill="rgb(253,203,42)" rx="2" ry="2" />
<text  x="820.19" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="945.9" y="2005" width="0.4" height="15.0" fill="rgb(241,138,1)" rx="2" ry="2" />
<text  x="948.94" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="148.0" y="1749" width="0.2" height="15.0" fill="rgb(249,33,44)" rx="2" ry="2" />
<text  x="150.97" y="1759.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="666.6" y="1765" width="0.8" height="15.0" fill="rgb(238,63,18)" rx="2" ry="2" />
<text  x="669.58" y="1775.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="69.8" y="1477" width="0.2" height="15.0" fill="rgb(210,79,18)" rx="2" ry="2" />
<text  x="72.76" y="1487.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="947.7" y="2005" width="0.2" height="15.0" fill="rgb(239,120,33)" rx="2" ry="2" />
<text  x="950.74" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="997.9" y="1973" width="0.2" height="15.0" fill="rgb(252,154,24)" rx="2" ry="2" />
<text  x="1000.88" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="130.7" y="1973" width="0.2" height="15.0" fill="rgb(222,179,17)" rx="2" ry="2" />
<text  x="133.73" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="832.6" y="1525" width="0.2" height="15.0" fill="rgb(233,19,39)" rx="2" ry="2" />
<text  x="835.63" y="1535.5" ></text>
</g>
<g >
<title>sys_fcntl (11 samples, 0.19%)</title><rect x="561.1" y="1941" width="2.2" height="15.0" fill="rgb(228,40,13)" rx="2" ry="2" />
<text  x="564.09" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="143.2" y="1877" width="0.2" height="15.0" fill="rgb(239,157,14)" rx="2" ry="2" />
<text  x="146.16" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="952.2" y="2005" width="0.2" height="15.0" fill="rgb(224,93,26)" rx="2" ry="2" />
<text  x="955.15" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="236.8" y="1749" width="0.2" height="15.0" fill="rgb(214,128,39)" rx="2" ry="2" />
<text  x="239.82" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.1" y="1813" width="0.2" height="15.0" fill="rgb(243,179,54)" rx="2" ry="2" />
<text  x="844.05" y="1823.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="550.1" y="1941" width="0.2" height="15.0" fill="rgb(227,140,12)" rx="2" ry="2" />
<text  x="553.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="523.0" y="1989" width="2.0" height="15.0" fill="rgb(205,226,8)" rx="2" ry="2" />
<text  x="525.99" y="1999.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="111.1" y="69" width="0.8" height="15.0" fill="rgb(227,105,40)" rx="2" ry="2" />
<text  x="114.07" y="79.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="563.7" y="1941" width="0.4" height="15.0" fill="rgb(230,169,23)" rx="2" ry="2" />
<text  x="566.70" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="456.4" y="1957" width="0.2" height="15.0" fill="rgb(231,38,25)" rx="2" ry="2" />
<text  x="459.41" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="546.1" y="1941" width="0.4" height="15.0" fill="rgb(247,93,28)" rx="2" ry="2" />
<text  x="549.05" y="1951.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.02%)</title><rect x="402.1" y="1829" width="0.2" height="15.0" fill="rgb(231,27,18)" rx="2" ry="2" />
<text  x="405.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1100.8" y="1621" width="0.2" height="15.0" fill="rgb(233,36,7)" rx="2" ry="2" />
<text  x="1103.76" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="221.8" y="1957" width="0.2" height="15.0" fill="rgb(206,2,45)" rx="2" ry="2" />
<text  x="224.77" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (7 samples, 0.12%)</title><rect x="1143.5" y="2037" width="1.4" height="15.0" fill="rgb(235,43,47)" rx="2" ry="2" />
<text  x="1146.47" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="530.0" y="1957" width="0.2" height="15.0" fill="rgb(246,84,27)" rx="2" ry="2" />
<text  x="533.01" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="99.2" y="37" width="0.4" height="15.0" fill="rgb(231,30,12)" rx="2" ry="2" />
<text  x="102.24" y="47.5" ></text>
</g>
<g >
<title>___sys_sendmsg (428 samples, 7.27%)</title><rect x="238.6" y="1957" width="85.9" height="15.0" fill="rgb(208,104,25)" rx="2" ry="2" />
<text  x="241.62" y="1967.5" >___sys_sen..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="832.6" y="1445" width="0.2" height="15.0" fill="rgb(216,112,7)" rx="2" ry="2" />
<text  x="835.63" y="1455.5" ></text>
</g>
<g >
<title>mod_timer (25 samples, 0.42%)</title><rect x="815.2" y="1621" width="5.0" height="15.0" fill="rgb(211,188,23)" rx="2" ry="2" />
<text  x="818.18" y="1631.5" ></text>
</g>
<g >
<title>__fget (13 samples, 0.22%)</title><rect x="1126.0" y="1925" width="2.6" height="15.0" fill="rgb(205,82,19)" rx="2" ry="2" />
<text  x="1129.03" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="494.1" y="1701" width="0.2" height="15.0" fill="rgb(240,172,28)" rx="2" ry="2" />
<text  x="497.11" y="1711.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (47 samples, 0.80%)</title><rect x="999.7" y="2037" width="9.4" height="15.0" fill="rgb(244,193,15)" rx="2" ry="2" />
<text  x="1002.68" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="24.4" y="1829" width="0.2" height="15.0" fill="rgb(216,128,16)" rx="2" ry="2" />
<text  x="27.44" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="664.4" y="1989" width="0.6" height="15.0" fill="rgb(232,197,34)" rx="2" ry="2" />
<text  x="667.37" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1128.4" y="1813" width="0.2" height="15.0" fill="rgb(215,142,14)" rx="2" ry="2" />
<text  x="1131.43" y="1823.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="268.3" y="1829" width="0.2" height="15.0" fill="rgb(246,137,51)" rx="2" ry="2" />
<text  x="271.30" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="935.9" y="1941" width="0.2" height="15.0" fill="rgb(246,45,4)" rx="2" ry="2" />
<text  x="938.91" y="1951.5" ></text>
</g>
<g >
<title>ep_poll (75 samples, 1.27%)</title><rect x="485.9" y="1973" width="15.0" height="15.0" fill="rgb(236,30,21)" rx="2" ry="2" />
<text  x="488.89" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (11 samples, 0.19%)</title><rect x="78.8" y="1957" width="2.2" height="15.0" fill="rgb(210,208,48)" rx="2" ry="2" />
<text  x="81.79" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="697.7" y="1685" width="0.2" height="15.0" fill="rgb(229,46,31)" rx="2" ry="2" />
<text  x="700.66" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (49 samples, 0.83%)</title><rect x="1108.8" y="1733" width="9.8" height="15.0" fill="rgb(229,164,48)" rx="2" ry="2" />
<text  x="1111.78" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="111.9" y="37" width="0.2" height="15.0" fill="rgb(253,24,36)" rx="2" ry="2" />
<text  x="114.88" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="665.0" y="1973" width="0.2" height="15.0" fill="rgb(212,114,5)" rx="2" ry="2" />
<text  x="667.98" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="856.1" y="1717" width="0.2" height="15.0" fill="rgb(252,110,0)" rx="2" ry="2" />
<text  x="859.09" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1285" width="16.3" height="15.0" fill="rgb(248,194,22)" rx="2" ry="2" />
<text  x="101.44" y="1295.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="405.5" y="1701" width="0.2" height="15.0" fill="rgb(252,73,44)" rx="2" ry="2" />
<text  x="408.47" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="579.1" y="2021" width="0.2" height="15.0" fill="rgb(212,70,46)" rx="2" ry="2" />
<text  x="582.14" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="699.9" y="1941" width="0.2" height="15.0" fill="rgb(253,73,53)" rx="2" ry="2" />
<text  x="702.87" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="707.9" y="1941" width="0.2" height="15.0" fill="rgb(234,20,49)" rx="2" ry="2" />
<text  x="710.89" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="301.0" y="1573" width="0.2" height="15.0" fill="rgb(233,0,12)" rx="2" ry="2" />
<text  x="303.99" y="1583.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1094.5" y="1653" width="0.2" height="15.0" fill="rgb(208,93,46)" rx="2" ry="2" />
<text  x="1097.54" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="600.8" y="1909" width="0.2" height="15.0" fill="rgb(210,73,47)" rx="2" ry="2" />
<text  x="603.80" y="1919.5" ></text>
</g>
<g >
<title>free (18 samples, 0.31%)</title><rect x="175.2" y="2021" width="3.7" height="15.0" fill="rgb(241,111,1)" rx="2" ry="2" />
<text  x="178.25" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1144.5" y="1893" width="0.2" height="15.0" fill="rgb(244,197,44)" rx="2" ry="2" />
<text  x="1147.48" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="646.1" y="1909" width="0.2" height="15.0" fill="rgb(220,100,41)" rx="2" ry="2" />
<text  x="649.13" y="1919.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="272.7" y="1797" width="0.2" height="15.0" fill="rgb(208,217,20)" rx="2" ry="2" />
<text  x="275.71" y="1807.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (6 samples, 0.10%)</title><rect x="474.5" y="1957" width="1.2" height="15.0" fill="rgb(215,104,44)" rx="2" ry="2" />
<text  x="477.46" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="134.7" y="1845" width="0.2" height="15.0" fill="rgb(252,146,38)" rx="2" ry="2" />
<text  x="137.74" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="149.2" y="1701" width="0.2" height="15.0" fill="rgb(218,200,36)" rx="2" ry="2" />
<text  x="152.18" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output2 (52 samples, 0.88%)</title><rect x="1108.6" y="1797" width="10.4" height="15.0" fill="rgb(237,128,45)" rx="2" ry="2" />
<text  x="1111.58" y="1807.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="143.2" y="1541" width="0.2" height="15.0" fill="rgb(253,117,22)" rx="2" ry="2" />
<text  x="146.16" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="363.6" y="1893" width="0.2" height="15.0" fill="rgb(251,127,28)" rx="2" ry="2" />
<text  x="366.56" y="1903.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="807.0" y="1509" width="0.4" height="15.0" fill="rgb(226,144,52)" rx="2" ry="2" />
<text  x="809.96" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="276.5" y="1525" width="0.6" height="15.0" fill="rgb(250,63,20)" rx="2" ry="2" />
<text  x="279.52" y="1535.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (2 samples, 0.03%)</title><rect x="266.7" y="1845" width="0.4" height="15.0" fill="rgb(215,187,13)" rx="2" ry="2" />
<text  x="269.70" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (47 samples, 0.80%)</title><rect x="1109.0" y="1573" width="9.4" height="15.0" fill="rgb(231,194,13)" rx="2" ry="2" />
<text  x="1111.98" y="1583.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="66.8" y="1861" width="0.8" height="15.0" fill="rgb(214,170,20)" rx="2" ry="2" />
<text  x="69.75" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="405.5" y="1989" width="0.2" height="15.0" fill="rgb(210,116,6)" rx="2" ry="2" />
<text  x="408.47" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="545.3" y="1749" width="0.2" height="15.0" fill="rgb(224,156,53)" rx="2" ry="2" />
<text  x="548.25" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="211.1" y="1877" width="0.2" height="15.0" fill="rgb(221,140,7)" rx="2" ry="2" />
<text  x="214.15" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (11 samples, 0.19%)</title><rect x="978.6" y="1957" width="2.2" height="15.0" fill="rgb(225,16,23)" rx="2" ry="2" />
<text  x="981.63" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (84 samples, 1.43%)</title><rect x="664.2" y="2021" width="16.8" height="15.0" fill="rgb(219,98,20)" rx="2" ry="2" />
<text  x="667.17" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="160.8" y="1589" width="0.2" height="15.0" fill="rgb(206,20,10)" rx="2" ry="2" />
<text  x="163.81" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1129.8" y="1973" width="0.2" height="15.0" fill="rgb(225,97,30)" rx="2" ry="2" />
<text  x="1132.84" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="266.5" y="1781" width="0.2" height="15.0" fill="rgb(233,70,38)" rx="2" ry="2" />
<text  x="269.50" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="691.2" y="1861" width="0.2" height="15.0" fill="rgb(212,73,18)" rx="2" ry="2" />
<text  x="694.25" y="1871.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="579.7" y="1685" width="0.2" height="15.0" fill="rgb(243,48,49)" rx="2" ry="2" />
<text  x="582.75" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="374.4" y="1685" width="0.4" height="15.0" fill="rgb(229,31,44)" rx="2" ry="2" />
<text  x="377.39" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (7 samples, 0.12%)</title><rect x="205.3" y="1925" width="1.4" height="15.0" fill="rgb(251,27,28)" rx="2" ry="2" />
<text  x="208.33" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="601.0" y="1925" width="2.0" height="15.0" fill="rgb(239,46,47)" rx="2" ry="2" />
<text  x="604.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (3 samples, 0.05%)</title><rect x="861.3" y="1989" width="0.6" height="15.0" fill="rgb(251,228,34)" rx="2" ry="2" />
<text  x="864.31" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="641.7" y="1925" width="0.6" height="15.0" fill="rgb(237,29,25)" rx="2" ry="2" />
<text  x="644.71" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="569.1" y="1941" width="0.2" height="15.0" fill="rgb(236,174,44)" rx="2" ry="2" />
<text  x="572.12" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="1169.7" y="2053" width="0.4" height="15.0" fill="rgb(230,180,2)" rx="2" ry="2" />
<text  x="1172.75" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="722.1" y="1845" width="0.2" height="15.0" fill="rgb(220,71,43)" rx="2" ry="2" />
<text  x="725.13" y="1855.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="477.9" y="2005" width="0.4" height="15.0" fill="rgb(241,156,7)" rx="2" ry="2" />
<text  x="480.87" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="821.8" y="1685" width="0.2" height="15.0" fill="rgb(239,72,27)" rx="2" ry="2" />
<text  x="824.80" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="143.2" y="1845" width="0.2" height="15.0" fill="rgb(232,152,38)" rx="2" ry="2" />
<text  x="146.16" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="957.4" y="2021" width="1.8" height="15.0" fill="rgb(209,173,27)" rx="2" ry="2" />
<text  x="960.37" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="956.8" y="1957" width="0.2" height="15.0" fill="rgb(236,3,52)" rx="2" ry="2" />
<text  x="959.77" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="149.2" y="1717" width="0.2" height="15.0" fill="rgb(222,157,47)" rx="2" ry="2" />
<text  x="152.18" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="618.7" y="1829" width="0.6" height="15.0" fill="rgb(247,63,17)" rx="2" ry="2" />
<text  x="621.65" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="934.5" y="1909" width="0.2" height="15.0" fill="rgb(249,100,17)" rx="2" ry="2" />
<text  x="937.51" y="1919.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="666.6" y="1797" width="0.8" height="15.0" fill="rgb(211,54,44)" rx="2" ry="2" />
<text  x="669.58" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="890.2" y="1925" width="0.4" height="15.0" fill="rgb(226,132,23)" rx="2" ry="2" />
<text  x="893.19" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1148.3" y="1637" width="0.2" height="15.0" fill="rgb(205,137,12)" rx="2" ry="2" />
<text  x="1151.29" y="1647.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1129.8" y="1909" width="0.2" height="15.0" fill="rgb(225,205,45)" rx="2" ry="2" />
<text  x="1132.84" y="1919.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="673.6" y="1877" width="0.8" height="15.0" fill="rgb(220,202,43)" rx="2" ry="2" />
<text  x="676.60" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="306.4" y="1541" width="0.2" height="15.0" fill="rgb(221,82,2)" rx="2" ry="2" />
<text  x="309.40" y="1551.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4 samples, 0.07%)</title><rect x="734.4" y="1797" width="0.8" height="15.0" fill="rgb(235,35,9)" rx="2" ry="2" />
<text  x="737.36" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="850.3" y="1893" width="0.2" height="15.0" fill="rgb(254,218,7)" rx="2" ry="2" />
<text  x="853.28" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="276.5" y="1573" width="0.6" height="15.0" fill="rgb(222,143,19)" rx="2" ry="2" />
<text  x="279.52" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="139.4" y="1877" width="0.4" height="15.0" fill="rgb(248,24,49)" rx="2" ry="2" />
<text  x="142.35" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="963.6" y="2037" width="0.2" height="15.0" fill="rgb(230,191,42)" rx="2" ry="2" />
<text  x="966.59" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="43.3" y="1957" width="0.6" height="15.0" fill="rgb(216,132,37)" rx="2" ry="2" />
<text  x="46.29" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="244.0" y="1797" width="1.0" height="15.0" fill="rgb(232,3,12)" rx="2" ry="2" />
<text  x="247.03" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="243.2" y="1845" width="0.2" height="15.0" fill="rgb(250,5,2)" rx="2" ry="2" />
<text  x="246.23" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="571.9" y="1989" width="0.4" height="15.0" fill="rgb(241,123,32)" rx="2" ry="2" />
<text  x="574.92" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="643.9" y="1909" width="0.2" height="15.0" fill="rgb(218,193,30)" rx="2" ry="2" />
<text  x="646.92" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (20 samples, 0.34%)</title><rect x="611.0" y="1893" width="4.0" height="15.0" fill="rgb(233,203,34)" rx="2" ry="2" />
<text  x="614.03" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (33 samples, 0.56%)</title><rect x="1110.4" y="1493" width="6.6" height="15.0" fill="rgb(240,191,41)" rx="2" ry="2" />
<text  x="1113.38" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="649.5" y="1749" width="0.2" height="15.0" fill="rgb(217,201,22)" rx="2" ry="2" />
<text  x="652.53" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="336.5" y="2021" width="0.2" height="15.0" fill="rgb(223,49,40)" rx="2" ry="2" />
<text  x="339.49" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="193.7" y="1957" width="0.2" height="15.0" fill="rgb(207,64,40)" rx="2" ry="2" />
<text  x="196.70" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="143.2" y="1717" width="0.2" height="15.0" fill="rgb(246,126,31)" rx="2" ry="2" />
<text  x="146.16" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1301" width="16.3" height="15.0" fill="rgb(217,99,52)" rx="2" ry="2" />
<text  x="101.44" y="1311.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="114.3" y="181" width="0.2" height="15.0" fill="rgb(228,63,41)" rx="2" ry="2" />
<text  x="117.28" y="191.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="236.8" y="1893" width="0.4" height="15.0" fill="rgb(206,69,28)" rx="2" ry="2" />
<text  x="239.82" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1083.3" y="1781" width="0.2" height="15.0" fill="rgb(210,121,54)" rx="2" ry="2" />
<text  x="1086.31" y="1791.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="160.8" y="1573" width="0.2" height="15.0" fill="rgb(234,50,30)" rx="2" ry="2" />
<text  x="163.81" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (1 samples, 0.02%)</title><rect x="65.1" y="1957" width="0.3" height="15.0" fill="rgb(216,216,23)" rx="2" ry="2" />
<text  x="68.15" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1008.9" y="2021" width="0.2" height="15.0" fill="rgb(207,79,0)" rx="2" ry="2" />
<text  x="1011.91" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1148.3" y="1861" width="0.2" height="15.0" fill="rgb(205,143,49)" rx="2" ry="2" />
<text  x="1151.29" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="69.8" y="1397" width="0.2" height="15.0" fill="rgb(244,150,12)" rx="2" ry="2" />
<text  x="72.76" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="133.1" y="1925" width="0.2" height="15.0" fill="rgb(227,95,23)" rx="2" ry="2" />
<text  x="136.13" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="807.4" y="1509" width="0.4" height="15.0" fill="rgb(215,175,30)" rx="2" ry="2" />
<text  x="810.36" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="212.5" y="1861" width="0.2" height="15.0" fill="rgb(227,31,12)" rx="2" ry="2" />
<text  x="215.55" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="721.9" y="1845" width="0.2" height="15.0" fill="rgb(210,5,43)" rx="2" ry="2" />
<text  x="724.93" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="763.4" y="1717" width="0.2" height="15.0" fill="rgb(213,127,46)" rx="2" ry="2" />
<text  x="766.44" y="1727.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="29.9" y="1957" width="0.2" height="15.0" fill="rgb(227,42,20)" rx="2" ry="2" />
<text  x="32.85" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (1 samples, 0.02%)</title><rect x="621.3" y="2037" width="0.2" height="15.0" fill="rgb(244,224,48)" rx="2" ry="2" />
<text  x="624.26" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="206.3" y="1829" width="0.2" height="15.0" fill="rgb(221,9,18)" rx="2" ry="2" />
<text  x="209.33" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="220.4" y="1941" width="0.4" height="15.0" fill="rgb(222,141,28)" rx="2" ry="2" />
<text  x="223.37" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="131.5" y="1973" width="0.8" height="15.0" fill="rgb(249,133,27)" rx="2" ry="2" />
<text  x="134.53" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="131.1" y="2005" width="0.2" height="15.0" fill="rgb(251,83,42)" rx="2" ry="2" />
<text  x="134.13" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="148.0" y="1733" width="0.2" height="15.0" fill="rgb(252,171,3)" rx="2" ry="2" />
<text  x="150.97" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="153.8" y="1845" width="0.2" height="15.0" fill="rgb(247,4,8)" rx="2" ry="2" />
<text  x="156.79" y="1855.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="20.0" y="2005" width="0.4" height="15.0" fill="rgb(218,32,17)" rx="2" ry="2" />
<text  x="23.03" y="2015.5" ></text>
</g>
<g >
<title>lock_sock_nested (15 samples, 0.25%)</title><rect x="364.0" y="1925" width="3.0" height="15.0" fill="rgb(247,217,33)" rx="2" ry="2" />
<text  x="366.96" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="655.6" y="1989" width="0.2" height="15.0" fill="rgb(217,189,23)" rx="2" ry="2" />
<text  x="658.55" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (49 samples, 0.83%)</title><rect x="925.7" y="1973" width="9.8" height="15.0" fill="rgb(233,156,22)" rx="2" ry="2" />
<text  x="928.68" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (5 samples, 0.08%)</title><rect x="1147.9" y="1989" width="1.0" height="15.0" fill="rgb(250,127,23)" rx="2" ry="2" />
<text  x="1150.89" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="150.4" y="1877" width="0.2" height="15.0" fill="rgb(206,37,38)" rx="2" ry="2" />
<text  x="153.38" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (47 samples, 0.80%)</title><rect x="1109.0" y="1669" width="9.4" height="15.0" fill="rgb(248,131,50)" rx="2" ry="2" />
<text  x="1111.98" y="1679.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="696.1" y="1813" width="0.2" height="15.0" fill="rgb(206,90,8)" rx="2" ry="2" />
<text  x="699.06" y="1823.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (394 samples, 6.70%)</title><rect x="1049.8" y="1989" width="79.0" height="15.0" fill="rgb(239,150,26)" rx="2" ry="2" />
<text  x="1052.82" y="1999.5" >SYSC_recv..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="541.4" y="1733" width="0.2" height="15.0" fill="rgb(234,104,40)" rx="2" ry="2" />
<text  x="544.44" y="1743.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="282.5" y="1685" width="0.2" height="15.0" fill="rgb(250,1,18)" rx="2" ry="2" />
<text  x="285.54" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="950.8" y="1957" width="0.2" height="15.0" fill="rgb(244,8,26)" rx="2" ry="2" />
<text  x="953.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.68%)</title><rect x="98.2" y="1893" width="19.9" height="15.0" fill="rgb(227,171,17)" rx="2" ry="2" />
<text  x="101.24" y="1903.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="95.8" y="1621" width="0.2" height="15.0" fill="rgb(251,119,26)" rx="2" ry="2" />
<text  x="98.83" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (156 samples, 2.65%)</title><rect x="919.1" y="2021" width="31.3" height="15.0" fill="rgb(248,73,28)" rx="2" ry="2" />
<text  x="922.07" y="2031.5" >[u..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="615.6" y="1925" width="0.2" height="15.0" fill="rgb(246,31,15)" rx="2" ry="2" />
<text  x="618.64" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="541.4" y="1893" width="0.2" height="15.0" fill="rgb(239,65,42)" rx="2" ry="2" />
<text  x="544.44" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="978.0" y="1957" width="0.2" height="15.0" fill="rgb(228,69,32)" rx="2" ry="2" />
<text  x="981.03" y="1967.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="541.4" y="1621" width="0.2" height="15.0" fill="rgb(247,216,40)" rx="2" ry="2" />
<text  x="544.44" y="1631.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="115.1" y="1493" width="0.2" height="15.0" fill="rgb(249,3,42)" rx="2" ry="2" />
<text  x="118.08" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (19 samples, 0.32%)</title><rect x="464.2" y="1925" width="3.8" height="15.0" fill="rgb(230,132,33)" rx="2" ry="2" />
<text  x="467.23" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (50 samples, 0.85%)</title><rect x="1108.6" y="1781" width="10.0" height="15.0" fill="rgb(225,142,34)" rx="2" ry="2" />
<text  x="1111.58" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="469" width="16.1" height="15.0" fill="rgb(220,152,52)" rx="2" ry="2" />
<text  x="101.44" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="391.0" y="1877" width="0.2" height="15.0" fill="rgb(221,68,1)" rx="2" ry="2" />
<text  x="394.03" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1181.8" y="1909" width="0.2" height="15.0" fill="rgb(210,5,35)" rx="2" ry="2" />
<text  x="1184.78" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="153.8" y="1813" width="0.2" height="15.0" fill="rgb(241,144,41)" rx="2" ry="2" />
<text  x="156.79" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1092.7" y="1909" width="0.2" height="15.0" fill="rgb(238,49,43)" rx="2" ry="2" />
<text  x="1095.74" y="1919.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1110.0" y="1493" width="0.4" height="15.0" fill="rgb(246,63,23)" rx="2" ry="2" />
<text  x="1112.98" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (11 samples, 0.19%)</title><rect x="523.0" y="2037" width="2.2" height="15.0" fill="rgb(238,22,10)" rx="2" ry="2" />
<text  x="525.99" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="25.4" y="1525" width="0.2" height="15.0" fill="rgb(225,100,35)" rx="2" ry="2" />
<text  x="28.44" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="98.4" y="1637" width="17.3" height="15.0" fill="rgb(251,83,14)" rx="2" ry="2" />
<text  x="101.44" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="136.1" y="1893" width="0.4" height="15.0" fill="rgb(233,185,38)" rx="2" ry="2" />
<text  x="139.14" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="696.9" y="1861" width="0.2" height="15.0" fill="rgb(226,167,33)" rx="2" ry="2" />
<text  x="699.86" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1148.3" y="1749" width="0.2" height="15.0" fill="rgb(235,132,7)" rx="2" ry="2" />
<text  x="1151.29" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="678.0" y="1749" width="0.2" height="15.0" fill="rgb(240,39,20)" rx="2" ry="2" />
<text  x="681.01" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="301.0" y="1701" width="0.2" height="15.0" fill="rgb(205,115,13)" rx="2" ry="2" />
<text  x="303.99" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.8" y="1973" width="0.2" height="15.0" fill="rgb(232,162,0)" rx="2" ry="2" />
<text  x="98.83" y="1983.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="131.5" y="1925" width="0.8" height="15.0" fill="rgb(233,184,0)" rx="2" ry="2" />
<text  x="134.53" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="850.3" y="1909" width="0.2" height="15.0" fill="rgb(241,45,12)" rx="2" ry="2" />
<text  x="853.28" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.14%)</title><rect x="647.9" y="1973" width="1.6" height="15.0" fill="rgb(230,69,16)" rx="2" ry="2" />
<text  x="650.93" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (1 samples, 0.02%)</title><rect x="710.3" y="1989" width="0.2" height="15.0" fill="rgb(252,79,30)" rx="2" ry="2" />
<text  x="713.30" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1091.5" y="1845" width="0.2" height="15.0" fill="rgb(244,22,10)" rx="2" ry="2" />
<text  x="1094.53" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="363.6" y="1749" width="0.2" height="15.0" fill="rgb(254,74,49)" rx="2" ry="2" />
<text  x="366.56" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="918.5" y="2005" width="0.2" height="15.0" fill="rgb(243,211,34)" rx="2" ry="2" />
<text  x="921.46" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="24.6" y="1877" width="0.8" height="15.0" fill="rgb(219,67,38)" rx="2" ry="2" />
<text  x="27.64" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="218.6" y="1797" width="0.2" height="15.0" fill="rgb(213,207,19)" rx="2" ry="2" />
<text  x="221.57" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29 samples, 0.49%)</title><rect x="991.1" y="1989" width="5.8" height="15.0" fill="rgb(222,39,21)" rx="2" ry="2" />
<text  x="994.06" y="1999.5" ></text>
</g>
<g >
<title>__libc_recv (553 samples, 9.40%)</title><rect x="1023.7" y="2053" width="110.9" height="15.0" fill="rgb(210,110,23)" rx="2" ry="2" />
<text  x="1026.75" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>kmem_cache_free (12 samples, 0.20%)</title><rect x="461.8" y="1941" width="2.4" height="15.0" fill="rgb(222,8,16)" rx="2" ry="2" />
<text  x="464.83" y="1951.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="806.8" y="1493" width="0.2" height="15.0" fill="rgb(244,93,39)" rx="2" ry="2" />
<text  x="809.76" y="1503.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="982.6" y="1893" width="0.4" height="15.0" fill="rgb(230,15,1)" rx="2" ry="2" />
<text  x="985.64" y="1903.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="175.0" y="2021" width="0.2" height="15.0" fill="rgb(220,223,26)" rx="2" ry="2" />
<text  x="178.05" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="166.2" y="1973" width="0.2" height="15.0" fill="rgb(207,191,5)" rx="2" ry="2" />
<text  x="169.22" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="673.6" y="1765" width="0.2" height="15.0" fill="rgb(219,139,12)" rx="2" ry="2" />
<text  x="676.60" y="1775.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (1 samples, 0.02%)</title><rect x="857.7" y="1925" width="0.2" height="15.0" fill="rgb(228,93,49)" rx="2" ry="2" />
<text  x="860.70" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="52.5" y="1941" width="0.8" height="15.0" fill="rgb(236,143,18)" rx="2" ry="2" />
<text  x="55.52" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="383.2" y="1893" width="0.2" height="15.0" fill="rgb(208,51,45)" rx="2" ry="2" />
<text  x="386.21" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (10 samples, 0.17%)</title><rect x="243.8" y="1893" width="2.0" height="15.0" fill="rgb(246,136,39)" rx="2" ry="2" />
<text  x="246.83" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (8 samples, 0.14%)</title><rect x="976.6" y="1973" width="1.6" height="15.0" fill="rgb(251,201,21)" rx="2" ry="2" />
<text  x="979.62" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="327.3" y="1925" width="0.2" height="15.0" fill="rgb(233,170,1)" rx="2" ry="2" />
<text  x="330.26" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (14 samples, 0.24%)</title><rect x="216.8" y="1925" width="2.8" height="15.0" fill="rgb(252,63,46)" rx="2" ry="2" />
<text  x="219.76" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="579.7" y="1893" width="0.2" height="15.0" fill="rgb(225,219,22)" rx="2" ry="2" />
<text  x="582.75" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (6 samples, 0.10%)</title><rect x="505.1" y="1957" width="1.2" height="15.0" fill="rgb(217,11,28)" rx="2" ry="2" />
<text  x="508.14" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="952.2" y="1989" width="0.2" height="15.0" fill="rgb(230,86,50)" rx="2" ry="2" />
<text  x="955.15" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="697.9" y="1925" width="1.6" height="15.0" fill="rgb(229,199,46)" rx="2" ry="2" />
<text  x="700.87" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (3 samples, 0.05%)</title><rect x="165.6" y="1973" width="0.6" height="15.0" fill="rgb(210,140,17)" rx="2" ry="2" />
<text  x="168.62" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="88.8" y="2005" width="0.4" height="15.0" fill="rgb(219,91,23)" rx="2" ry="2" />
<text  x="91.81" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="442.2" y="1973" width="0.4" height="15.0" fill="rgb(238,11,9)" rx="2" ry="2" />
<text  x="445.17" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="75.6" y="1813" width="0.2" height="15.0" fill="rgb(238,80,44)" rx="2" ry="2" />
<text  x="78.58" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="699.9" y="1829" width="0.2" height="15.0" fill="rgb(209,182,19)" rx="2" ry="2" />
<text  x="702.87" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (88 samples, 1.50%)</title><rect x="920.1" y="2005" width="17.6" height="15.0" fill="rgb(215,67,6)" rx="2" ry="2" />
<text  x="923.07" y="2015.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="24.6" y="1813" width="0.2" height="15.0" fill="rgb(239,48,8)" rx="2" ry="2" />
<text  x="27.64" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="374.6" y="1653" width="0.2" height="15.0" fill="rgb(229,87,0)" rx="2" ry="2" />
<text  x="377.59" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="426.7" y="1925" width="0.2" height="15.0" fill="rgb(254,36,41)" rx="2" ry="2" />
<text  x="429.73" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="59.5" y="1829" width="0.4" height="15.0" fill="rgb(213,104,6)" rx="2" ry="2" />
<text  x="62.53" y="1839.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="837.8" y="1813" width="0.2" height="15.0" fill="rgb(241,15,50)" rx="2" ry="2" />
<text  x="840.85" y="1823.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="521.8" y="1941" width="0.8" height="15.0" fill="rgb(241,0,16)" rx="2" ry="2" />
<text  x="524.79" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="984.6" y="1909" width="0.4" height="15.0" fill="rgb(218,178,25)" rx="2" ry="2" />
<text  x="987.64" y="1919.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="210.9" y="1413" width="0.2" height="15.0" fill="rgb(247,71,10)" rx="2" ry="2" />
<text  x="213.94" y="1423.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="537.0" y="1861" width="0.2" height="15.0" fill="rgb(250,211,23)" rx="2" ry="2" />
<text  x="540.03" y="1871.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="521.8" y="1925" width="0.8" height="15.0" fill="rgb(213,67,36)" rx="2" ry="2" />
<text  x="524.79" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="963.2" y="1925" width="0.2" height="15.0" fill="rgb(230,188,33)" rx="2" ry="2" />
<text  x="966.18" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="164.8" y="1989" width="0.2" height="15.0" fill="rgb(243,38,23)" rx="2" ry="2" />
<text  x="167.82" y="1999.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="990.5" y="1765" width="0.2" height="15.0" fill="rgb(209,102,27)" rx="2" ry="2" />
<text  x="993.46" y="1775.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="278.1" y="1525" width="0.2" height="15.0" fill="rgb(211,97,45)" rx="2" ry="2" />
<text  x="281.13" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="850.1" y="1749" width="0.2" height="15.0" fill="rgb(214,130,16)" rx="2" ry="2" />
<text  x="853.08" y="1759.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="161.0" y="2005" width="0.2" height="15.0" fill="rgb(240,188,42)" rx="2" ry="2" />
<text  x="164.01" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="301.0" y="1541" width="0.2" height="15.0" fill="rgb(214,184,32)" rx="2" ry="2" />
<text  x="303.99" y="1551.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="131.5" y="1845" width="0.8" height="15.0" fill="rgb(209,121,37)" rx="2" ry="2" />
<text  x="134.53" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="133.9" y="1909" width="0.2" height="15.0" fill="rgb(222,65,24)" rx="2" ry="2" />
<text  x="136.94" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="391.0" y="1861" width="0.2" height="15.0" fill="rgb(215,228,43)" rx="2" ry="2" />
<text  x="394.03" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="217.4" y="1893" width="0.2" height="15.0" fill="rgb(240,116,46)" rx="2" ry="2" />
<text  x="220.36" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 0.73%)</title><rect x="669.2" y="1909" width="8.6" height="15.0" fill="rgb(207,57,2)" rx="2" ry="2" />
<text  x="672.19" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="856.1" y="1733" width="0.2" height="15.0" fill="rgb(229,177,28)" rx="2" ry="2" />
<text  x="859.09" y="1743.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="391.0" y="1589" width="0.2" height="15.0" fill="rgb(252,131,1)" rx="2" ry="2" />
<text  x="394.03" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="518.2" y="1989" width="0.2" height="15.0" fill="rgb(205,145,27)" rx="2" ry="2" />
<text  x="521.18" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (4 samples, 0.07%)</title><rect x="29.1" y="1941" width="0.8" height="15.0" fill="rgb(244,25,7)" rx="2" ry="2" />
<text  x="32.05" y="1951.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="12.8" y="1941" width="0.8" height="15.0" fill="rgb(222,121,18)" rx="2" ry="2" />
<text  x="15.81" y="1951.5" ></text>
</g>
<g >
<title>do_fcntl (1 samples, 0.02%)</title><rect x="560.5" y="1941" width="0.2" height="15.0" fill="rgb(218,124,19)" rx="2" ry="2" />
<text  x="563.49" y="1951.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="568.9" y="1973" width="0.2" height="15.0" fill="rgb(237,179,18)" rx="2" ry="2" />
<text  x="571.92" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="512.6" y="1941" width="0.2" height="15.0" fill="rgb(250,4,44)" rx="2" ry="2" />
<text  x="515.56" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="545.3" y="1877" width="0.2" height="15.0" fill="rgb(248,167,49)" rx="2" ry="2" />
<text  x="548.25" y="1887.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="300.6" y="1797" width="0.4" height="15.0" fill="rgb(246,173,22)" rx="2" ry="2" />
<text  x="303.59" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1017.5" y="2037" width="0.2" height="15.0" fill="rgb(227,105,15)" rx="2" ry="2" />
<text  x="1020.53" y="2047.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="571.1" y="2005" width="0.4" height="15.0" fill="rgb(224,69,40)" rx="2" ry="2" />
<text  x="574.12" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="1018.9" y="1973" width="0.2" height="15.0" fill="rgb(225,115,21)" rx="2" ry="2" />
<text  x="1021.94" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="853" width="16.3" height="15.0" fill="rgb(245,133,51)" rx="2" ry="2" />
<text  x="101.44" y="863.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="1128.6" y="1957" width="0.2" height="15.0" fill="rgb(207,133,15)" rx="2" ry="2" />
<text  x="1131.63" y="1967.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (17 samples, 0.29%)</title><rect x="804.6" y="1541" width="3.4" height="15.0" fill="rgb(225,45,32)" rx="2" ry="2" />
<text  x="807.55" y="1551.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="210.9" y="1589" width="0.2" height="15.0" fill="rgb(213,49,10)" rx="2" ry="2" />
<text  x="213.94" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="739.8" y="1701" width="0.4" height="15.0" fill="rgb(206,11,20)" rx="2" ry="2" />
<text  x="742.78" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="95.8" y="1893" width="0.2" height="15.0" fill="rgb(222,138,23)" rx="2" ry="2" />
<text  x="98.83" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="691.2" y="1781" width="0.2" height="15.0" fill="rgb(252,160,0)" rx="2" ry="2" />
<text  x="694.25" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="210.9" y="1573" width="0.2" height="15.0" fill="rgb(249,19,3)" rx="2" ry="2" />
<text  x="213.94" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="149.2" y="1669" width="0.2" height="15.0" fill="rgb(232,154,6)" rx="2" ry="2" />
<text  x="152.18" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="784.5" y="1461" width="0.2" height="15.0" fill="rgb(233,147,12)" rx="2" ry="2" />
<text  x="787.50" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.60%)</title><rect x="98.2" y="1797" width="18.9" height="15.0" fill="rgb(254,221,16)" rx="2" ry="2" />
<text  x="101.24" y="1807.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="143.0" y="1909" width="0.2" height="15.0" fill="rgb(241,229,11)" rx="2" ry="2" />
<text  x="145.96" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="494.1" y="1509" width="0.2" height="15.0" fill="rgb(247,131,43)" rx="2" ry="2" />
<text  x="497.11" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="711.3" y="1909" width="0.2" height="15.0" fill="rgb(245,165,46)" rx="2" ry="2" />
<text  x="714.30" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="642.1" y="1909" width="0.2" height="15.0" fill="rgb(242,81,11)" rx="2" ry="2" />
<text  x="645.11" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1151.7" y="2021" width="0.2" height="15.0" fill="rgb(233,217,50)" rx="2" ry="2" />
<text  x="1154.70" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="757.8" y="1541" width="0.2" height="15.0" fill="rgb(221,74,16)" rx="2" ry="2" />
<text  x="760.83" y="1551.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1004.9" y="1989" width="0.6" height="15.0" fill="rgb(244,211,15)" rx="2" ry="2" />
<text  x="1007.90" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="213.8" y="1829" width="0.4" height="15.0" fill="rgb(252,132,5)" rx="2" ry="2" />
<text  x="216.75" y="1839.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="142.0" y="1893" width="0.4" height="15.0" fill="rgb(244,35,43)" rx="2" ry="2" />
<text  x="144.96" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="508.2" y="1973" width="0.2" height="15.0" fill="rgb(240,149,3)" rx="2" ry="2" />
<text  x="511.15" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (89 samples, 1.51%)</title><rect x="132.5" y="1957" width="17.9" height="15.0" fill="rgb(245,170,16)" rx="2" ry="2" />
<text  x="135.53" y="1967.5" ></text>
</g>
<g >
<title>ip_output (52 samples, 0.88%)</title><rect x="1108.6" y="1829" width="10.4" height="15.0" fill="rgb(243,214,7)" rx="2" ry="2" />
<text  x="1111.58" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="699.9" y="1845" width="0.2" height="15.0" fill="rgb(215,71,2)" rx="2" ry="2" />
<text  x="702.87" y="1855.5" ></text>
</g>
<g >
<title>sock_poll (49 samples, 0.83%)</title><rect x="445.0" y="1957" width="9.8" height="15.0" fill="rgb(252,128,5)" rx="2" ry="2" />
<text  x="447.98" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="600.8" y="1877" width="0.2" height="15.0" fill="rgb(242,168,17)" rx="2" ry="2" />
<text  x="603.80" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="112.9" y="37" width="0.2" height="15.0" fill="rgb(226,117,20)" rx="2" ry="2" />
<text  x="115.88" y="47.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="61.7" y="1861" width="0.2" height="15.0" fill="rgb(229,54,10)" rx="2" ry="2" />
<text  x="64.74" y="1871.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="279.3" y="1317" width="0.2" height="15.0" fill="rgb(240,190,30)" rx="2" ry="2" />
<text  x="282.33" y="1327.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (8 samples, 0.14%)</title><rect x="652.9" y="1973" width="1.6" height="15.0" fill="rgb(241,207,26)" rx="2" ry="2" />
<text  x="655.94" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1149.3" y="1957" width="0.2" height="15.0" fill="rgb(215,210,24)" rx="2" ry="2" />
<text  x="1152.29" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="541.8" y="1909" width="0.6" height="15.0" fill="rgb(250,178,12)" rx="2" ry="2" />
<text  x="544.84" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="113.7" y="69" width="0.2" height="15.0" fill="rgb(217,26,14)" rx="2" ry="2" />
<text  x="116.68" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="654.3" y="1957" width="0.2" height="15.0" fill="rgb(246,31,21)" rx="2" ry="2" />
<text  x="657.35" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="990.5" y="1893" width="0.2" height="15.0" fill="rgb(207,135,11)" rx="2" ry="2" />
<text  x="993.46" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="129.7" y="1973" width="0.2" height="15.0" fill="rgb(243,111,51)" rx="2" ry="2" />
<text  x="132.72" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.19%)</title><rect x="948.1" y="1989" width="2.3" height="15.0" fill="rgb(245,24,48)" rx="2" ry="2" />
<text  x="951.14" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="97.6" y="2021" width="0.2" height="15.0" fill="rgb(231,115,52)" rx="2" ry="2" />
<text  x="100.64" y="2031.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (17 samples, 0.29%)</title><rect x="564.1" y="1973" width="3.4" height="15.0" fill="rgb(216,59,23)" rx="2" ry="2" />
<text  x="567.10" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="572.1" y="1973" width="0.2" height="15.0" fill="rgb(241,174,3)" rx="2" ry="2" />
<text  x="575.12" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1100.8" y="1813" width="0.2" height="15.0" fill="rgb(251,117,43)" rx="2" ry="2" />
<text  x="1103.76" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1317" width="16.3" height="15.0" fill="rgb(248,59,30)" rx="2" ry="2" />
<text  x="101.44" y="1327.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="666.6" y="1877" width="0.8" height="15.0" fill="rgb(228,38,27)" rx="2" ry="2" />
<text  x="669.58" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="678.0" y="1637" width="0.2" height="15.0" fill="rgb(232,151,44)" rx="2" ry="2" />
<text  x="681.01" y="1647.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (6 samples, 0.10%)</title><rect x="752.8" y="1781" width="1.2" height="15.0" fill="rgb(230,200,30)" rx="2" ry="2" />
<text  x="755.81" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9 samples, 0.15%)</title><rect x="616.2" y="2005" width="1.8" height="15.0" fill="rgb(219,47,8)" rx="2" ry="2" />
<text  x="619.24" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (12 samples, 0.20%)</title><rect x="27.8" y="1973" width="2.5" height="15.0" fill="rgb(238,83,17)" rx="2" ry="2" />
<text  x="30.85" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (17 samples, 0.29%)</title><rect x="1072.1" y="1877" width="3.4" height="15.0" fill="rgb(238,133,46)" rx="2" ry="2" />
<text  x="1075.08" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="640.9" y="1925" width="0.4" height="15.0" fill="rgb(221,100,7)" rx="2" ry="2" />
<text  x="643.91" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (22 samples, 0.37%)</title><rect x="1124.4" y="1973" width="4.4" height="15.0" fill="rgb(220,136,9)" rx="2" ry="2" />
<text  x="1127.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="261" width="16.1" height="15.0" fill="rgb(234,206,29)" rx="2" ry="2" />
<text  x="101.44" y="271.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="776.1" y="1653" width="0.2" height="15.0" fill="rgb(223,85,23)" rx="2" ry="2" />
<text  x="779.08" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="691.2" y="1765" width="0.2" height="15.0" fill="rgb(252,113,20)" rx="2" ry="2" />
<text  x="694.25" y="1775.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.02%)</title><rect x="742.6" y="1653" width="0.2" height="15.0" fill="rgb(231,198,45)" rx="2" ry="2" />
<text  x="745.59" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="80.8" y="1909" width="0.2" height="15.0" fill="rgb(248,225,47)" rx="2" ry="2" />
<text  x="83.79" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="990.5" y="1749" width="0.2" height="15.0" fill="rgb(221,187,7)" rx="2" ry="2" />
<text  x="993.46" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="205.9" y="1877" width="0.6" height="15.0" fill="rgb(245,197,53)" rx="2" ry="2" />
<text  x="208.93" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="597" width="16.1" height="15.0" fill="rgb(244,216,41)" rx="2" ry="2" />
<text  x="101.44" y="607.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="276.7" y="1397" width="0.2" height="15.0" fill="rgb(235,182,0)" rx="2" ry="2" />
<text  x="279.72" y="1407.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.14%)</title><rect x="598.6" y="1845" width="1.6" height="15.0" fill="rgb(221,73,4)" rx="2" ry="2" />
<text  x="601.60" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="987.3" y="1957" width="0.4" height="15.0" fill="rgb(227,200,4)" rx="2" ry="2" />
<text  x="990.25" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (24 samples, 0.41%)</title><rect x="605.8" y="1909" width="4.8" height="15.0" fill="rgb(238,130,31)" rx="2" ry="2" />
<text  x="608.82" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.85%)</title><rect x="627.1" y="2021" width="10.0" height="15.0" fill="rgb(226,143,35)" rx="2" ry="2" />
<text  x="630.07" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1091.5" y="1653" width="0.2" height="15.0" fill="rgb(223,13,8)" rx="2" ry="2" />
<text  x="1094.53" y="1663.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="84.0" y="1957" width="0.6" height="15.0" fill="rgb(213,107,16)" rx="2" ry="2" />
<text  x="87.00" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(251,126,19)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="917.9" y="1989" width="0.2" height="15.0" fill="rgb(213,86,47)" rx="2" ry="2" />
<text  x="920.86" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="757" width="16.3" height="15.0" fill="rgb(235,94,25)" rx="2" ry="2" />
<text  x="101.44" y="767.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (3 samples, 0.05%)</title><rect x="38.1" y="1989" width="0.6" height="15.0" fill="rgb(220,192,21)" rx="2" ry="2" />
<text  x="41.08" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (59 samples, 1.00%)</title><rect x="668.0" y="1941" width="11.8" height="15.0" fill="rgb(225,141,42)" rx="2" ry="2" />
<text  x="670.98" y="1951.5" ></text>
</g>
<g >
<title>ep_remove (76 samples, 1.29%)</title><rect x="455.2" y="1973" width="15.2" height="15.0" fill="rgb(236,61,0)" rx="2" ry="2" />
<text  x="458.21" y="1983.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="267.1" y="1877" width="0.2" height="15.0" fill="rgb(241,35,49)" rx="2" ry="2" />
<text  x="270.10" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="70.4" y="1893" width="0.2" height="15.0" fill="rgb(215,200,35)" rx="2" ry="2" />
<text  x="73.36" y="1903.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (10 samples, 0.17%)</title><rect x="1080.9" y="1813" width="2.0" height="15.0" fill="rgb(213,67,41)" rx="2" ry="2" />
<text  x="1083.90" y="1823.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="281.5" y="1701" width="0.2" height="15.0" fill="rgb(231,40,10)" rx="2" ry="2" />
<text  x="284.54" y="1711.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::fdToSocket (1 samples, 0.02%)</title><rect x="26.2" y="1973" width="0.2" height="15.0" fill="rgb(213,84,37)" rx="2" ry="2" />
<text  x="29.24" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1074.9" y="1493" width="0.2" height="15.0" fill="rgb(253,100,0)" rx="2" ry="2" />
<text  x="1077.89" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1091.5" y="1669" width="0.2" height="15.0" fill="rgb(237,106,11)" rx="2" ry="2" />
<text  x="1094.53" y="1679.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="173.0" y="1941" width="0.2" height="15.0" fill="rgb(205,102,18)" rx="2" ry="2" />
<text  x="176.04" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="475.5" y="1733" width="0.2" height="15.0" fill="rgb(246,149,6)" rx="2" ry="2" />
<text  x="478.46" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="990.5" y="2021" width="0.2" height="15.0" fill="rgb(246,35,24)" rx="2" ry="2" />
<text  x="993.46" y="2031.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="618.2" y="1973" width="1.1" height="15.0" fill="rgb(221,121,19)" rx="2" ry="2" />
<text  x="621.25" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="512.6" y="1957" width="0.4" height="15.0" fill="rgb(205,94,44)" rx="2" ry="2" />
<text  x="515.56" y="1967.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="675.6" y="1829" width="0.4" height="15.0" fill="rgb(230,53,30)" rx="2" ry="2" />
<text  x="678.61" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="520.2" y="1989" width="1.2" height="15.0" fill="rgb(228,152,32)" rx="2" ry="2" />
<text  x="523.18" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="405.5" y="1909" width="0.2" height="15.0" fill="rgb(222,69,13)" rx="2" ry="2" />
<text  x="408.47" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="625.1" y="1941" width="0.2" height="15.0" fill="rgb(212,126,21)" rx="2" ry="2" />
<text  x="628.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="697.7" y="1589" width="0.2" height="15.0" fill="rgb(230,56,51)" rx="2" ry="2" />
<text  x="700.66" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="25.4" y="1701" width="0.2" height="15.0" fill="rgb(235,40,0)" rx="2" ry="2" />
<text  x="28.44" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="891.6" y="1925" width="0.2" height="15.0" fill="rgb(215,3,20)" rx="2" ry="2" />
<text  x="894.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="901.4" y="2021" width="0.8" height="15.0" fill="rgb(242,142,48)" rx="2" ry="2" />
<text  x="904.42" y="2031.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1165.3" y="1717" width="0.2" height="15.0" fill="rgb(216,225,8)" rx="2" ry="2" />
<text  x="1168.33" y="1727.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="925.1" y="1941" width="0.2" height="15.0" fill="rgb(241,91,23)" rx="2" ry="2" />
<text  x="928.08" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="832.6" y="1573" width="0.2" height="15.0" fill="rgb(213,32,37)" rx="2" ry="2" />
<text  x="835.63" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1749" width="0.2" height="15.0" fill="rgb(249,204,39)" rx="2" ry="2" />
<text  x="408.47" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="168.6" y="1957" width="0.2" height="15.0" fill="rgb(249,218,10)" rx="2" ry="2" />
<text  x="171.63" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (3 samples, 0.05%)</title><rect x="218.8" y="1877" width="0.6" height="15.0" fill="rgb(252,11,33)" rx="2" ry="2" />
<text  x="221.77" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="600.8" y="1749" width="0.2" height="15.0" fill="rgb(223,189,45)" rx="2" ry="2" />
<text  x="603.80" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::getEvent (2 samples, 0.03%)</title><rect x="212.7" y="1861" width="0.5" height="15.0" fill="rgb(241,219,12)" rx="2" ry="2" />
<text  x="215.75" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1164.5" y="1429" width="0.2" height="15.0" fill="rgb(207,103,32)" rx="2" ry="2" />
<text  x="1167.53" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="857.7" y="1893" width="0.2" height="15.0" fill="rgb(253,151,21)" rx="2" ry="2" />
<text  x="860.70" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.9" y="1861" width="0.2" height="15.0" fill="rgb(234,92,9)" rx="2" ry="2" />
<text  x="120.89" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="25.4" y="1765" width="0.2" height="15.0" fill="rgb(205,48,33)" rx="2" ry="2" />
<text  x="28.44" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="600.8" y="1669" width="0.2" height="15.0" fill="rgb(216,214,51)" rx="2" ry="2" />
<text  x="603.80" y="1679.5" ></text>
</g>
<g >
<title>__destroy_inode (6 samples, 0.10%)</title><rect x="741.8" y="1685" width="1.2" height="15.0" fill="rgb(248,8,22)" rx="2" ry="2" />
<text  x="744.78" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="690.0" y="1925" width="0.2" height="15.0" fill="rgb(207,163,48)" rx="2" ry="2" />
<text  x="693.04" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.8" y="1909" width="0.2" height="15.0" fill="rgb(244,66,54)" rx="2" ry="2" />
<text  x="892.79" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="193.7" y="2005" width="0.2" height="15.0" fill="rgb(246,195,35)" rx="2" ry="2" />
<text  x="196.70" y="2015.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (5 samples, 0.08%)</title><rect x="1002.9" y="2005" width="1.0" height="15.0" fill="rgb(207,106,28)" rx="2" ry="2" />
<text  x="1005.89" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="859.5" y="1941" width="0.2" height="15.0" fill="rgb(225,220,13)" rx="2" ry="2" />
<text  x="862.50" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="153.8" y="1925" width="0.2" height="15.0" fill="rgb(235,123,12)" rx="2" ry="2" />
<text  x="156.79" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="625.5" y="1973" width="0.2" height="15.0" fill="rgb(211,227,6)" rx="2" ry="2" />
<text  x="628.47" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="544.0" y="1797" width="0.2" height="15.0" fill="rgb(249,227,34)" rx="2" ry="2" />
<text  x="547.05" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="856.3" y="1861" width="0.4" height="15.0" fill="rgb(219,110,15)" rx="2" ry="2" />
<text  x="859.30" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="363.8" y="1781" width="0.2" height="15.0" fill="rgb(227,147,42)" rx="2" ry="2" />
<text  x="366.76" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="915.1" y="2005" width="0.2" height="15.0" fill="rgb(219,20,52)" rx="2" ry="2" />
<text  x="918.05" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="51.9" y="1957" width="0.4" height="15.0" fill="rgb(209,199,20)" rx="2" ry="2" />
<text  x="54.91" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="401.5" y="1909" width="0.2" height="15.0" fill="rgb(214,123,43)" rx="2" ry="2" />
<text  x="404.46" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="691.2" y="1797" width="0.2" height="15.0" fill="rgb(243,183,5)" rx="2" ry="2" />
<text  x="694.25" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="391.0" y="1765" width="0.2" height="15.0" fill="rgb(211,60,5)" rx="2" ry="2" />
<text  x="394.03" y="1775.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (44 samples, 0.75%)</title><rect x="459.6" y="1957" width="8.8" height="15.0" fill="rgb(248,64,50)" rx="2" ry="2" />
<text  x="462.62" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(226,56,25)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (7 samples, 0.12%)</title><rect x="395.2" y="1893" width="1.4" height="15.0" fill="rgb(205,63,30)" rx="2" ry="2" />
<text  x="398.24" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.65%)</title><rect x="1156.7" y="1941" width="7.6" height="15.0" fill="rgb(252,157,4)" rx="2" ry="2" />
<text  x="1159.71" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="115.7" y="1653" width="0.2" height="15.0" fill="rgb(226,197,33)" rx="2" ry="2" />
<text  x="118.69" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (1 samples, 0.02%)</title><rect x="34.1" y="2021" width="0.2" height="15.0" fill="rgb(216,169,32)" rx="2" ry="2" />
<text  x="37.07" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="623.3" y="1973" width="0.2" height="15.0" fill="rgb(226,68,2)" rx="2" ry="2" />
<text  x="626.26" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (26 samples, 0.44%)</title><rect x="124.5" y="1973" width="5.2" height="15.0" fill="rgb(234,172,19)" rx="2" ry="2" />
<text  x="127.51" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="61.5" y="1877" width="0.2" height="15.0" fill="rgb(207,0,7)" rx="2" ry="2" />
<text  x="64.54" y="1887.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="563.1" y="1909" width="0.2" height="15.0" fill="rgb(205,45,7)" rx="2" ry="2" />
<text  x="566.10" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="950.4" y="1925" width="0.2" height="15.0" fill="rgb(213,146,19)" rx="2" ry="2" />
<text  x="953.35" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="859.7" y="1957" width="0.6" height="15.0" fill="rgb(242,226,42)" rx="2" ry="2" />
<text  x="862.70" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (115 samples, 1.95%)</title><rect x="581.5" y="2021" width="23.1" height="15.0" fill="rgb(224,12,18)" rx="2" ry="2" />
<text  x="584.55" y="2031.5" >f..</text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="751.6" y="1797" width="0.2" height="15.0" fill="rgb(222,189,5)" rx="2" ry="2" />
<text  x="754.61" y="1807.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="963.2" y="2021" width="0.2" height="15.0" fill="rgb(246,35,47)" rx="2" ry="2" />
<text  x="966.18" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.77%)</title><rect x="969.4" y="2021" width="20.9" height="15.0" fill="rgb(241,25,42)" rx="2" ry="2" />
<text  x="972.40" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="985.8" y="1925" width="0.2" height="15.0" fill="rgb(226,191,45)" rx="2" ry="2" />
<text  x="988.85" y="1935.5" ></text>
</g>
<g >
<title>fib_table_lookup (2 samples, 0.03%)</title><rect x="563.7" y="1749" width="0.4" height="15.0" fill="rgb(216,98,47)" rx="2" ry="2" />
<text  x="566.70" y="1759.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (7 samples, 0.12%)</title><rect x="498.7" y="1893" width="1.4" height="15.0" fill="rgb(210,150,4)" rx="2" ry="2" />
<text  x="501.73" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="24.4" y="1925" width="0.2" height="15.0" fill="rgb(252,36,48)" rx="2" ry="2" />
<text  x="27.44" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="426.7" y="1973" width="0.2" height="15.0" fill="rgb(233,30,31)" rx="2" ry="2" />
<text  x="429.73" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="932.9" y="1829" width="0.2" height="15.0" fill="rgb(231,96,41)" rx="2" ry="2" />
<text  x="935.90" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="784.3" y="1541" width="0.4" height="15.0" fill="rgb(215,183,43)" rx="2" ry="2" />
<text  x="787.30" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="369.6" y="1701" width="0.2" height="15.0" fill="rgb(226,122,53)" rx="2" ry="2" />
<text  x="372.58" y="1711.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="114.3" y="245" width="0.2" height="15.0" fill="rgb(205,228,28)" rx="2" ry="2" />
<text  x="117.28" y="255.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="153.8" y="1829" width="0.2" height="15.0" fill="rgb(248,1,30)" rx="2" ry="2" />
<text  x="156.79" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="181.3" y="2021" width="0.2" height="15.0" fill="rgb(208,6,24)" rx="2" ry="2" />
<text  x="184.26" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="916.1" y="2021" width="0.2" height="15.0" fill="rgb(208,170,20)" rx="2" ry="2" />
<text  x="919.06" y="2031.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="550.1" y="1877" width="0.2" height="15.0" fill="rgb(229,29,6)" rx="2" ry="2" />
<text  x="553.06" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.14%)</title><rect x="207.3" y="1909" width="1.6" height="15.0" fill="rgb(207,155,36)" rx="2" ry="2" />
<text  x="210.34" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="153.2" y="1877" width="0.2" height="15.0" fill="rgb(218,41,41)" rx="2" ry="2" />
<text  x="156.19" y="1887.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="397.0" y="1893" width="0.3" height="15.0" fill="rgb(212,58,10)" rx="2" ry="2" />
<text  x="400.05" y="1903.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="1148.1" y="1957" width="0.4" height="15.0" fill="rgb(212,1,25)" rx="2" ry="2" />
<text  x="1151.09" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="901.8" y="1925" width="0.2" height="15.0" fill="rgb(227,200,43)" rx="2" ry="2" />
<text  x="904.82" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="162.0" y="1925" width="0.4" height="15.0" fill="rgb(231,8,15)" rx="2" ry="2" />
<text  x="165.01" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="306.4" y="1637" width="0.2" height="15.0" fill="rgb(245,29,33)" rx="2" ry="2" />
<text  x="309.40" y="1647.5" ></text>
</g>
<g >
<title>[[vdso]] (3 samples, 0.05%)</title><rect x="193.1" y="2005" width="0.6" height="15.0" fill="rgb(210,169,15)" rx="2" ry="2" />
<text  x="196.10" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1173" width="16.3" height="15.0" fill="rgb(206,93,49)" rx="2" ry="2" />
<text  x="101.44" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1165.1" y="1797" width="0.4" height="15.0" fill="rgb(234,169,18)" rx="2" ry="2" />
<text  x="1168.13" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="131.5" y="1861" width="0.8" height="15.0" fill="rgb(208,10,25)" rx="2" ry="2" />
<text  x="134.53" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (1 samples, 0.02%)</title><rect x="963.8" y="2037" width="0.2" height="15.0" fill="rgb(213,17,51)" rx="2" ry="2" />
<text  x="966.79" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="563.5" y="1957" width="0.6" height="15.0" fill="rgb(250,140,0)" rx="2" ry="2" />
<text  x="566.50" y="1967.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (6 samples, 0.10%)</title><rect x="618.0" y="2005" width="1.3" height="15.0" fill="rgb(214,218,15)" rx="2" ry="2" />
<text  x="621.05" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (4 samples, 0.07%)</title><rect x="876.3" y="1957" width="0.9" height="15.0" fill="rgb(226,55,0)" rx="2" ry="2" />
<text  x="879.35" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="404.1" y="1941" width="0.2" height="15.0" fill="rgb(222,183,47)" rx="2" ry="2" />
<text  x="407.07" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="24.4" y="1845" width="0.2" height="15.0" fill="rgb(230,135,51)" rx="2" ry="2" />
<text  x="27.44" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="983.8" y="1877" width="0.2" height="15.0" fill="rgb(221,30,47)" rx="2" ry="2" />
<text  x="986.84" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="111.1" y="37" width="0.8" height="15.0" fill="rgb(244,216,8)" rx="2" ry="2" />
<text  x="114.07" y="47.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="327.3" y="1813" width="0.2" height="15.0" fill="rgb(205,31,0)" rx="2" ry="2" />
<text  x="330.26" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (4 samples, 0.07%)</title><rect x="901.4" y="2037" width="0.8" height="15.0" fill="rgb(224,42,12)" rx="2" ry="2" />
<text  x="904.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1109" width="16.3" height="15.0" fill="rgb(245,79,28)" rx="2" ry="2" />
<text  x="101.44" y="1119.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="426.7" y="1957" width="0.2" height="15.0" fill="rgb(221,43,26)" rx="2" ry="2" />
<text  x="429.73" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="148.4" y="1781" width="0.8" height="15.0" fill="rgb(241,29,31)" rx="2" ry="2" />
<text  x="151.38" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="963.8" y="1989" width="0.2" height="15.0" fill="rgb(239,69,35)" rx="2" ry="2" />
<text  x="966.79" y="1999.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="477.7" y="1717" width="0.2" height="15.0" fill="rgb(222,156,43)" rx="2" ry="2" />
<text  x="480.67" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (421 samples, 7.15%)</title><rect x="97.2" y="2037" width="84.5" height="15.0" fill="rgb(253,55,41)" rx="2" ry="2" />
<text  x="100.24" y="2047.5" >[unknown]</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="583.2" y="1669" width="0.2" height="15.0" fill="rgb(226,139,48)" rx="2" ry="2" />
<text  x="586.15" y="1679.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::clear (1 samples, 0.02%)</title><rect x="925.1" y="1925" width="0.2" height="15.0" fill="rgb(211,180,34)" rx="2" ry="2" />
<text  x="928.08" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1149.3" y="1973" width="0.2" height="15.0" fill="rgb(239,177,35)" rx="2" ry="2" />
<text  x="1152.29" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="477.7" y="1941" width="0.2" height="15.0" fill="rgb(215,186,51)" rx="2" ry="2" />
<text  x="480.67" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (2 samples, 0.03%)</title><rect x="570.1" y="2005" width="0.4" height="15.0" fill="rgb(215,198,37)" rx="2" ry="2" />
<text  x="573.12" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="901.2" y="1989" width="0.2" height="15.0" fill="rgb(245,192,19)" rx="2" ry="2" />
<text  x="904.22" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (47 samples, 0.80%)</title><rect x="1109.0" y="1589" width="9.4" height="15.0" fill="rgb(222,152,13)" rx="2" ry="2" />
<text  x="1111.98" y="1599.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="67.4" y="1829" width="0.2" height="15.0" fill="rgb(211,38,41)" rx="2" ry="2" />
<text  x="70.36" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="1178.8" y="2005" width="0.6" height="15.0" fill="rgb(239,26,13)" rx="2" ry="2" />
<text  x="1181.77" y="2015.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="1022.7" y="2053" width="0.4" height="15.0" fill="rgb(217,205,36)" rx="2" ry="2" />
<text  x="1025.75" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="575.3" y="1925" width="0.2" height="15.0" fill="rgb(246,182,28)" rx="2" ry="2" />
<text  x="578.33" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="78.4" y="1925" width="0.4" height="15.0" fill="rgb(207,190,17)" rx="2" ry="2" />
<text  x="81.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="369.6" y="1781" width="0.2" height="15.0" fill="rgb(225,87,43)" rx="2" ry="2" />
<text  x="372.58" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (2 samples, 0.03%)</title><rect x="567.7" y="2005" width="0.4" height="15.0" fill="rgb(234,1,48)" rx="2" ry="2" />
<text  x="570.71" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="27.2" y="1973" width="0.4" height="15.0" fill="rgb(236,46,0)" rx="2" ry="2" />
<text  x="30.25" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1112.0" y="1445" width="0.2" height="15.0" fill="rgb(230,87,20)" rx="2" ry="2" />
<text  x="1114.99" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="381.2" y="1861" width="0.2" height="15.0" fill="rgb(244,66,39)" rx="2" ry="2" />
<text  x="384.21" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="850.1" y="1733" width="0.2" height="15.0" fill="rgb(238,47,15)" rx="2" ry="2" />
<text  x="853.08" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="69.2" y="1877" width="0.8" height="15.0" fill="rgb(247,221,48)" rx="2" ry="2" />
<text  x="72.16" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="697.7" y="1701" width="0.2" height="15.0" fill="rgb(206,111,37)" rx="2" ry="2" />
<text  x="700.66" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="49.1" y="1893" width="0.8" height="15.0" fill="rgb(231,175,48)" rx="2" ry="2" />
<text  x="52.11" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="850.1" y="1877" width="0.2" height="15.0" fill="rgb(237,5,1)" rx="2" ry="2" />
<text  x="853.08" y="1887.5" ></text>
</g>
<g >
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="831.6" y="1701" width="1.2" height="15.0" fill="rgb(251,4,8)" rx="2" ry="2" />
<text  x="834.63" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="236.8" y="1909" width="0.4" height="15.0" fill="rgb(228,27,17)" rx="2" ry="2" />
<text  x="239.82" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="963.2" y="1829" width="0.2" height="15.0" fill="rgb(206,222,15)" rx="2" ry="2" />
<text  x="966.18" y="1839.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="675.0" y="1861" width="0.4" height="15.0" fill="rgb(228,162,28)" rx="2" ry="2" />
<text  x="678.00" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.14%)</title><rect x="1182.2" y="2021" width="1.6" height="15.0" fill="rgb(222,89,14)" rx="2" ry="2" />
<text  x="1185.18" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="116.3" y="1749" width="0.2" height="15.0" fill="rgb(205,165,27)" rx="2" ry="2" />
<text  x="119.29" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1181.8" y="2021" width="0.2" height="15.0" fill="rgb(214,154,18)" rx="2" ry="2" />
<text  x="1184.78" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="169.2" y="1941" width="0.2" height="15.0" fill="rgb(208,81,6)" rx="2" ry="2" />
<text  x="172.23" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="563.1" y="1861" width="0.2" height="15.0" fill="rgb(226,75,33)" rx="2" ry="2" />
<text  x="566.10" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="391.0" y="1685" width="0.2" height="15.0" fill="rgb(214,185,33)" rx="2" ry="2" />
<text  x="394.03" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="67.8" y="1813" width="0.2" height="15.0" fill="rgb(230,216,40)" rx="2" ry="2" />
<text  x="70.76" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="25.4" y="1461" width="0.2" height="15.0" fill="rgb(231,142,23)" rx="2" ry="2" />
<text  x="28.44" y="1471.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (21 samples, 0.36%)</title><rect x="311.4" y="1797" width="4.2" height="15.0" fill="rgb(217,123,43)" rx="2" ry="2" />
<text  x="314.42" y="1807.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="50.1" y="1941" width="0.6" height="15.0" fill="rgb(248,14,8)" rx="2" ry="2" />
<text  x="53.11" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (10 samples, 0.17%)</title><rect x="171.8" y="1989" width="2.0" height="15.0" fill="rgb(205,77,37)" rx="2" ry="2" />
<text  x="174.84" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="583.2" y="1781" width="0.2" height="15.0" fill="rgb(212,211,26)" rx="2" ry="2" />
<text  x="586.15" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (1 samples, 0.02%)</title><rect x="34.9" y="2005" width="0.2" height="15.0" fill="rgb(251,28,10)" rx="2" ry="2" />
<text  x="37.87" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="509.8" y="1925" width="0.8" height="15.0" fill="rgb(243,124,34)" rx="2" ry="2" />
<text  x="512.76" y="1935.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="143.2" y="1909" width="0.2" height="15.0" fill="rgb(206,115,49)" rx="2" ry="2" />
<text  x="146.16" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="163.0" y="2005" width="0.4" height="15.0" fill="rgb(223,4,42)" rx="2" ry="2" />
<text  x="166.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (2 samples, 0.03%)</title><rect x="866.7" y="1989" width="0.4" height="15.0" fill="rgb(223,77,2)" rx="2" ry="2" />
<text  x="869.72" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (7 samples, 0.12%)</title><rect x="367.4" y="1909" width="1.4" height="15.0" fill="rgb(226,1,1)" rx="2" ry="2" />
<text  x="370.37" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (18 samples, 0.31%)</title><rect x="276.3" y="1669" width="3.6" height="15.0" fill="rgb(231,22,20)" rx="2" ry="2" />
<text  x="279.32" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="542.2" y="1845" width="0.2" height="15.0" fill="rgb(216,179,14)" rx="2" ry="2" />
<text  x="545.24" y="1855.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="854.9" y="1925" width="0.2" height="15.0" fill="rgb(228,158,33)" rx="2" ry="2" />
<text  x="857.89" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="54.9" y="1941" width="1.4" height="15.0" fill="rgb(232,87,2)" rx="2" ry="2" />
<text  x="57.92" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="133" width="15.9" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="101.44" y="143.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="327.5" y="2005" width="0.2" height="15.0" fill="rgb(230,54,2)" rx="2" ry="2" />
<text  x="330.46" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="62.3" y="1717" width="0.2" height="15.0" fill="rgb(238,39,4)" rx="2" ry="2" />
<text  x="65.34" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (9 samples, 0.15%)</title><rect x="992.7" y="1957" width="1.8" height="15.0" fill="rgb(220,190,35)" rx="2" ry="2" />
<text  x="995.66" y="1967.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="742.6" y="1669" width="0.2" height="15.0" fill="rgb(218,206,40)" rx="2" ry="2" />
<text  x="745.59" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="210.9" y="1685" width="0.2" height="15.0" fill="rgb(210,26,49)" rx="2" ry="2" />
<text  x="213.94" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="923.9" y="1925" width="0.2" height="15.0" fill="rgb(230,88,21)" rx="2" ry="2" />
<text  x="926.88" y="1935.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.6" y="1973" width="0.8" height="15.0" fill="rgb(219,222,47)" rx="2" ry="2" />
<text  x="14.60" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="210.9" y="1605" width="0.2" height="15.0" fill="rgb(228,153,50)" rx="2" ry="2" />
<text  x="213.94" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (273 samples, 4.64%)</title><rect x="525.2" y="2037" width="54.7" height="15.0" fill="rgb(206,182,12)" rx="2" ry="2" />
<text  x="528.20" y="2047.5" >faceb..</text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="393.2" y="1861" width="0.2" height="15.0" fill="rgb(226,49,48)" rx="2" ry="2" />
<text  x="396.24" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="70.4" y="1909" width="0.2" height="15.0" fill="rgb(206,121,28)" rx="2" ry="2" />
<text  x="73.36" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="697.7" y="1797" width="0.2" height="15.0" fill="rgb(210,138,37)" rx="2" ry="2" />
<text  x="700.66" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="613.8" y="1861" width="0.2" height="15.0" fill="rgb(231,151,51)" rx="2" ry="2" />
<text  x="616.84" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (6 samples, 0.10%)</title><rect x="931.5" y="1877" width="1.2" height="15.0" fill="rgb(226,197,5)" rx="2" ry="2" />
<text  x="934.50" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (92 samples, 1.56%)</title><rect x="132.3" y="1973" width="18.5" height="15.0" fill="rgb(211,142,41)" rx="2" ry="2" />
<text  x="135.33" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1129.8" y="1925" width="0.2" height="15.0" fill="rgb(234,4,47)" rx="2" ry="2" />
<text  x="1132.84" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="990.5" y="1733" width="0.2" height="15.0" fill="rgb(223,157,1)" rx="2" ry="2" />
<text  x="993.46" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="918.5" y="1717" width="0.2" height="15.0" fill="rgb(211,92,27)" rx="2" ry="2" />
<text  x="921.46" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="867.7" y="1989" width="0.2" height="15.0" fill="rgb(247,31,6)" rx="2" ry="2" />
<text  x="870.73" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="947.1" y="2005" width="0.2" height="15.0" fill="rgb(253,8,29)" rx="2" ry="2" />
<text  x="950.14" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="24.4" y="1653" width="0.2" height="15.0" fill="rgb(209,65,54)" rx="2" ry="2" />
<text  x="27.44" y="1663.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="30.3" y="1733" width="0.2" height="15.0" fill="rgb(223,123,52)" rx="2" ry="2" />
<text  x="33.25" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (2 samples, 0.03%)</title><rect x="603.0" y="1941" width="0.4" height="15.0" fill="rgb(225,27,33)" rx="2" ry="2" />
<text  x="606.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="951.4" y="2005" width="0.4" height="15.0" fill="rgb(246,48,44)" rx="2" ry="2" />
<text  x="954.35" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="210.9" y="1541" width="0.2" height="15.0" fill="rgb(222,45,3)" rx="2" ry="2" />
<text  x="213.94" y="1551.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="853.9" y="1909" width="0.2" height="15.0" fill="rgb(221,189,18)" rx="2" ry="2" />
<text  x="856.89" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (1 samples, 0.02%)</title><rect x="1151.9" y="2037" width="0.2" height="15.0" fill="rgb(232,79,9)" rx="2" ry="2" />
<text  x="1154.90" y="2047.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="146.0" y="1653" width="0.2" height="15.0" fill="rgb(243,17,25)" rx="2" ry="2" />
<text  x="148.97" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="690.0" y="1893" width="0.2" height="15.0" fill="rgb(239,65,51)" rx="2" ry="2" />
<text  x="693.04" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="95.8" y="1813" width="0.2" height="15.0" fill="rgb(205,168,23)" rx="2" ry="2" />
<text  x="98.83" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1093.9" y="1845" width="0.2" height="15.0" fill="rgb(235,210,10)" rx="2" ry="2" />
<text  x="1096.94" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="990.5" y="1797" width="0.2" height="15.0" fill="rgb(218,23,42)" rx="2" ry="2" />
<text  x="993.46" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (16 samples, 0.27%)</title><rect x="894.8" y="1989" width="3.2" height="15.0" fill="rgb(225,3,52)" rx="2" ry="2" />
<text  x="897.80" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (36 samples, 0.61%)</title><rect x="877.2" y="1957" width="7.2" height="15.0" fill="rgb(244,103,20)" rx="2" ry="2" />
<text  x="880.15" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (26 samples, 0.44%)</title><rect x="981.0" y="1973" width="5.2" height="15.0" fill="rgb(234,62,16)" rx="2" ry="2" />
<text  x="984.03" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="901.2" y="1973" width="0.2" height="15.0" fill="rgb(213,196,26)" rx="2" ry="2" />
<text  x="904.22" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="699.9" y="1973" width="0.2" height="15.0" fill="rgb(221,50,11)" rx="2" ry="2" />
<text  x="702.87" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="266.5" y="1797" width="0.2" height="15.0" fill="rgb(243,192,10)" rx="2" ry="2" />
<text  x="269.50" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.07%)</title><rect x="995.3" y="1973" width="0.8" height="15.0" fill="rgb(249,203,12)" rx="2" ry="2" />
<text  x="998.27" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="478.3" y="1813" width="0.4" height="15.0" fill="rgb(216,152,21)" rx="2" ry="2" />
<text  x="481.27" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="891.8" y="1909" width="0.4" height="15.0" fill="rgb(254,153,32)" rx="2" ry="2" />
<text  x="894.79" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="514.8" y="1941" width="0.2" height="15.0" fill="rgb(228,4,49)" rx="2" ry="2" />
<text  x="517.77" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="699.9" y="1749" width="0.2" height="15.0" fill="rgb(238,23,37)" rx="2" ry="2" />
<text  x="702.87" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1083.3" y="1733" width="0.2" height="15.0" fill="rgb(247,210,31)" rx="2" ry="2" />
<text  x="1086.31" y="1743.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="696.1" y="1829" width="0.2" height="15.0" fill="rgb(218,172,27)" rx="2" ry="2" />
<text  x="699.06" y="1839.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="24.4" y="1637" width="0.2" height="15.0" fill="rgb(238,1,4)" rx="2" ry="2" />
<text  x="27.44" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (12 samples, 0.20%)</title><rect x="277.5" y="1573" width="2.4" height="15.0" fill="rgb(205,108,28)" rx="2" ry="2" />
<text  x="280.53" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="537.2" y="1941" width="0.2" height="15.0" fill="rgb(246,110,19)" rx="2" ry="2" />
<text  x="540.23" y="1951.5" ></text>
</g>
<g >
<title>event_base_set (4 samples, 0.07%)</title><rect x="93.4" y="2005" width="0.8" height="15.0" fill="rgb(208,113,15)" rx="2" ry="2" />
<text  x="96.43" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="814.0" y="1605" width="0.2" height="15.0" fill="rgb(225,150,34)" rx="2" ry="2" />
<text  x="816.98" y="1615.5" ></text>
</g>
<g >
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="450.8" y="1909" width="0.4" height="15.0" fill="rgb(228,57,15)" rx="2" ry="2" />
<text  x="453.80" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="81.4" y="1973" width="0.2" height="15.0" fill="rgb(223,98,24)" rx="2" ry="2" />
<text  x="84.39" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="276.5" y="1621" width="0.6" height="15.0" fill="rgb(225,196,53)" rx="2" ry="2" />
<text  x="279.52" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="236.8" y="1989" width="0.4" height="15.0" fill="rgb(205,85,44)" rx="2" ry="2" />
<text  x="239.82" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1140.5" y="1653" width="0.2" height="15.0" fill="rgb(220,141,17)" rx="2" ry="2" />
<text  x="1143.47" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="118.9" y="1989" width="0.4" height="15.0" fill="rgb(236,190,13)" rx="2" ry="2" />
<text  x="121.90" y="1999.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (34 samples, 0.58%)</title><rect x="1173.0" y="2053" width="6.8" height="15.0" fill="rgb(219,52,15)" rx="2" ry="2" />
<text  x="1175.95" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="541.4" y="1813" width="0.2" height="15.0" fill="rgb(229,220,29)" rx="2" ry="2" />
<text  x="544.44" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="579.7" y="1637" width="0.2" height="15.0" fill="rgb(224,227,34)" rx="2" ry="2" />
<text  x="582.75" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (14 samples, 0.24%)</title><rect x="895.0" y="1973" width="2.8" height="15.0" fill="rgb(213,112,14)" rx="2" ry="2" />
<text  x="898.00" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="292.2" y="1653" width="0.2" height="15.0" fill="rgb(245,11,14)" rx="2" ry="2" />
<text  x="295.17" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="25.4" y="1829" width="0.2" height="15.0" fill="rgb(223,7,7)" rx="2" ry="2" />
<text  x="28.44" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="69.8" y="1717" width="0.2" height="15.0" fill="rgb(212,168,39)" rx="2" ry="2" />
<text  x="72.76" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="210.9" y="1845" width="0.2" height="15.0" fill="rgb(251,107,30)" rx="2" ry="2" />
<text  x="213.94" y="1855.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="147.2" y="1909" width="0.2" height="15.0" fill="rgb(253,62,53)" rx="2" ry="2" />
<text  x="150.17" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="105.5" y="37" width="0.2" height="15.0" fill="rgb(214,121,23)" rx="2" ry="2" />
<text  x="108.46" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (5 samples, 0.08%)</title><rect x="646.5" y="1989" width="1.0" height="15.0" fill="rgb(205,103,53)" rx="2" ry="2" />
<text  x="649.53" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="856.1" y="1877" width="0.6" height="15.0" fill="rgb(242,174,48)" rx="2" ry="2" />
<text  x="859.09" y="1887.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="30.5" y="1989" width="0.6" height="15.0" fill="rgb(252,214,16)" rx="2" ry="2" />
<text  x="33.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (94 samples, 1.60%)</title><rect x="202.3" y="1957" width="18.9" height="15.0" fill="rgb(232,83,42)" rx="2" ry="2" />
<text  x="205.32" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="952.4" y="2005" width="4.6" height="15.0" fill="rgb(251,178,45)" rx="2" ry="2" />
<text  x="955.36" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (7 samples, 0.12%)</title><rect x="913.0" y="2005" width="1.5" height="15.0" fill="rgb(216,68,28)" rx="2" ry="2" />
<text  x="916.05" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1129.8" y="1989" width="0.2" height="15.0" fill="rgb(230,58,39)" rx="2" ry="2" />
<text  x="1132.84" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="852.7" y="1909" width="0.2" height="15.0" fill="rgb(245,133,35)" rx="2" ry="2" />
<text  x="855.69" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (8 samples, 0.14%)</title><rect x="141.4" y="1909" width="1.6" height="15.0" fill="rgb(235,87,7)" rx="2" ry="2" />
<text  x="144.36" y="1919.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1164.5" y="1509" width="0.2" height="15.0" fill="rgb(229,91,33)" rx="2" ry="2" />
<text  x="1167.53" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (4 samples, 0.07%)</title><rect x="1143.9" y="1989" width="0.8" height="15.0" fill="rgb(250,57,15)" rx="2" ry="2" />
<text  x="1146.87" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="1018.9" y="1989" width="0.2" height="15.0" fill="rgb(222,145,44)" rx="2" ry="2" />
<text  x="1021.94" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="909.8" y="1973" width="0.2" height="15.0" fill="rgb(229,119,5)" rx="2" ry="2" />
<text  x="912.84" y="1983.5" ></text>
</g>
<g >
<title>sys_epoll_wait (77 samples, 1.31%)</title><rect x="485.5" y="1989" width="15.4" height="15.0" fill="rgb(232,55,15)" rx="2" ry="2" />
<text  x="488.49" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="363.6" y="1733" width="0.2" height="15.0" fill="rgb(249,18,33)" rx="2" ry="2" />
<text  x="366.56" y="1743.5" ></text>
</g>
<g >
<title>__alloc_skb (44 samples, 0.75%)</title><rect x="254.3" y="1861" width="8.8" height="15.0" fill="rgb(239,199,46)" rx="2" ry="2" />
<text  x="257.26" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="994.3" y="1701" width="0.2" height="15.0" fill="rgb(245,74,15)" rx="2" ry="2" />
<text  x="997.27" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="12.4" y="2021" width="0.2" height="15.0" fill="rgb(211,133,48)" rx="2" ry="2" />
<text  x="15.41" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="738.0" y="1717" width="0.6" height="15.0" fill="rgb(249,27,38)" rx="2" ry="2" />
<text  x="740.97" y="1727.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="769.3" y="1685" width="0.2" height="15.0" fill="rgb(254,165,20)" rx="2" ry="2" />
<text  x="772.26" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="883.2" y="1829" width="0.2" height="15.0" fill="rgb(237,22,28)" rx="2" ry="2" />
<text  x="886.17" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="884.2" y="1941" width="0.2" height="15.0" fill="rgb(209,147,48)" rx="2" ry="2" />
<text  x="887.17" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="533" width="16.1" height="15.0" fill="rgb(215,4,37)" rx="2" ry="2" />
<text  x="101.44" y="543.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (2 samples, 0.03%)</title><rect x="969.6" y="2005" width="0.4" height="15.0" fill="rgb(234,63,31)" rx="2" ry="2" />
<text  x="972.60" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="113.5" y="37" width="0.2" height="15.0" fill="rgb(230,95,27)" rx="2" ry="2" />
<text  x="116.48" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (48 samples, 0.82%)</title><rect x="905.6" y="2037" width="9.7" height="15.0" fill="rgb(205,103,11)" rx="2" ry="2" />
<text  x="908.63" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="664.6" y="1973" width="0.4" height="15.0" fill="rgb(215,128,23)" rx="2" ry="2" />
<text  x="667.58" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (492 samples, 8.36%)</title><rect x="228.2" y="2005" width="98.7" height="15.0" fill="rgb(225,160,31)" rx="2" ry="2" />
<text  x="231.19" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="215.2" y="1829" width="1.4" height="15.0" fill="rgb(219,27,34)" rx="2" ry="2" />
<text  x="218.16" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="749.6" y="1765" width="0.4" height="15.0" fill="rgb(215,159,11)" rx="2" ry="2" />
<text  x="752.61" y="1775.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="854.5" y="1893" width="0.2" height="15.0" fill="rgb(218,125,6)" rx="2" ry="2" />
<text  x="857.49" y="1903.5" ></text>
</g>
<g >
<title>wake_up_bit (2 samples, 0.03%)</title><rect x="749.2" y="1701" width="0.4" height="15.0" fill="rgb(214,122,17)" rx="2" ry="2" />
<text  x="752.20" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="904.0" y="2021" width="1.0" height="15.0" fill="rgb(208,117,5)" rx="2" ry="2" />
<text  x="907.02" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="649.5" y="1845" width="0.2" height="15.0" fill="rgb(250,138,41)" rx="2" ry="2" />
<text  x="652.53" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="132.7" y="1829" width="0.2" height="15.0" fill="rgb(219,139,33)" rx="2" ry="2" />
<text  x="135.73" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="153.2" y="1845" width="0.2" height="15.0" fill="rgb(220,35,45)" rx="2" ry="2" />
<text  x="156.19" y="1855.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="405.7" y="2021" width="2.8" height="15.0" fill="rgb(251,183,23)" rx="2" ry="2" />
<text  x="408.67" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McSetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="902.6" y="2005" width="0.4" height="15.0" fill="rgb(224,62,0)" rx="2" ry="2" />
<text  x="905.62" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="944.7" y="1973" width="0.6" height="15.0" fill="rgb(217,168,42)" rx="2" ry="2" />
<text  x="947.73" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="690.0" y="1845" width="0.2" height="15.0" fill="rgb(253,222,8)" rx="2" ry="2" />
<text  x="693.04" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="68.0" y="1845" width="0.2" height="15.0" fill="rgb(240,19,10)" rx="2" ry="2" />
<text  x="70.96" y="1855.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="1149.3" y="1909" width="0.2" height="15.0" fill="rgb(216,166,44)" rx="2" ry="2" />
<text  x="1152.29" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1094.3" y="1829" width="0.4" height="15.0" fill="rgb(253,127,1)" rx="2" ry="2" />
<text  x="1097.34" y="1839.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="69.8" y="1509" width="0.2" height="15.0" fill="rgb(213,132,5)" rx="2" ry="2" />
<text  x="72.76" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (9 samples, 0.15%)</title><rect x="48.3" y="1925" width="1.8" height="15.0" fill="rgb(211,3,29)" rx="2" ry="2" />
<text  x="51.30" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1074.9" y="1349" width="0.2" height="15.0" fill="rgb(231,140,18)" rx="2" ry="2" />
<text  x="1077.89" y="1359.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="541.4" y="1925" width="0.2" height="15.0" fill="rgb(226,206,37)" rx="2" ry="2" />
<text  x="544.44" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="856.1" y="1797" width="0.2" height="15.0" fill="rgb(209,174,41)" rx="2" ry="2" />
<text  x="859.09" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="172.8" y="1957" width="1.0" height="15.0" fill="rgb(242,15,23)" rx="2" ry="2" />
<text  x="175.84" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="575.3" y="1845" width="0.2" height="15.0" fill="rgb(253,54,3)" rx="2" ry="2" />
<text  x="578.33" y="1855.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="273.7" y="1765" width="0.2" height="15.0" fill="rgb(225,131,20)" rx="2" ry="2" />
<text  x="276.72" y="1775.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="918.5" y="1701" width="0.2" height="15.0" fill="rgb(222,161,11)" rx="2" ry="2" />
<text  x="921.46" y="1711.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="143.2" y="1589" width="0.2" height="15.0" fill="rgb(218,116,31)" rx="2" ry="2" />
<text  x="146.16" y="1599.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="813.2" y="1685" width="0.2" height="15.0" fill="rgb(244,44,43)" rx="2" ry="2" />
<text  x="816.18" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="893.0" y="1989" width="0.2" height="15.0" fill="rgb(245,201,18)" rx="2" ry="2" />
<text  x="895.99" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1149.3" y="1925" width="0.2" height="15.0" fill="rgb(234,38,49)" rx="2" ry="2" />
<text  x="1152.29" y="1935.5" ></text>
</g>
<g >
<title>__fdget (30 samples, 0.51%)</title><rect x="436.2" y="1973" width="6.0" height="15.0" fill="rgb(238,138,27)" rx="2" ry="2" />
<text  x="439.16" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1165.1" y="1813" width="0.4" height="15.0" fill="rgb(236,40,44)" rx="2" ry="2" />
<text  x="1168.13" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="624.7" y="1973" width="0.6" height="15.0" fill="rgb(220,1,27)" rx="2" ry="2" />
<text  x="627.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="1018.1" y="2021" width="1.0" height="15.0" fill="rgb(225,142,32)" rx="2" ry="2" />
<text  x="1021.13" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="69.8" y="1749" width="0.2" height="15.0" fill="rgb(221,13,50)" rx="2" ry="2" />
<text  x="72.76" y="1759.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="148.2" y="1941" width="0.2" height="15.0" fill="rgb(206,26,5)" rx="2" ry="2" />
<text  x="151.17" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="426.7" y="1941" width="0.2" height="15.0" fill="rgb(228,226,43)" rx="2" ry="2" />
<text  x="429.73" y="1951.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (3 samples, 0.05%)</title><rect x="183.5" y="2021" width="0.6" height="15.0" fill="rgb(239,20,35)" rx="2" ry="2" />
<text  x="186.47" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (23 samples, 0.39%)</title><rect x="952.4" y="1989" width="4.6" height="15.0" fill="rgb(232,173,52)" rx="2" ry="2" />
<text  x="955.36" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="110.9" y="37" width="0.2" height="15.0" fill="rgb(224,184,1)" rx="2" ry="2" />
<text  x="113.87" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="917.9" y="2037" width="0.4" height="15.0" fill="rgb(237,8,37)" rx="2" ry="2" />
<text  x="920.86" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="363.8" y="1701" width="0.2" height="15.0" fill="rgb(226,95,0)" rx="2" ry="2" />
<text  x="366.76" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="67.8" y="1829" width="0.2" height="15.0" fill="rgb(210,229,22)" rx="2" ry="2" />
<text  x="70.76" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="963.2" y="1973" width="0.2" height="15.0" fill="rgb(231,28,5)" rx="2" ry="2" />
<text  x="966.18" y="1983.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="666.6" y="1781" width="0.8" height="15.0" fill="rgb(243,1,18)" rx="2" ry="2" />
<text  x="669.58" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="625.3" y="1957" width="0.2" height="15.0" fill="rgb(244,159,13)" rx="2" ry="2" />
<text  x="628.27" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="369.6" y="1717" width="0.2" height="15.0" fill="rgb(234,25,36)" rx="2" ry="2" />
<text  x="372.58" y="1727.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="857.7" y="1877" width="0.2" height="15.0" fill="rgb(231,138,48)" rx="2" ry="2" />
<text  x="860.70" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (108 samples, 1.84%)</title><rect x="581.8" y="2005" width="21.6" height="15.0" fill="rgb(248,2,24)" rx="2" ry="2" />
<text  x="584.75" y="2015.5" >f..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="126.9" y="1733" width="0.2" height="15.0" fill="rgb(233,92,31)" rx="2" ry="2" />
<text  x="129.92" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="784.3" y="1525" width="0.4" height="15.0" fill="rgb(223,58,17)" rx="2" ry="2" />
<text  x="787.30" y="1535.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1053.8" y="1941" width="0.2" height="15.0" fill="rgb(247,82,33)" rx="2" ry="2" />
<text  x="1056.83" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(236,223,8)" rx="2" ry="2" />
<text  x="14.20" y="1967.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="600.8" y="1637" width="0.2" height="15.0" fill="rgb(243,88,28)" rx="2" ry="2" />
<text  x="603.80" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="575.5" y="1957" width="0.2" height="15.0" fill="rgb(218,111,21)" rx="2" ry="2" />
<text  x="578.53" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="246.4" y="1701" width="0.2" height="15.0" fill="rgb(218,170,52)" rx="2" ry="2" />
<text  x="249.44" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="571.5" y="2005" width="0.2" height="15.0" fill="rgb(240,229,7)" rx="2" ry="2" />
<text  x="574.52" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1094.5" y="1701" width="0.2" height="15.0" fill="rgb(225,129,41)" rx="2" ry="2" />
<text  x="1097.54" y="1711.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="363.6" y="1557" width="0.2" height="15.0" fill="rgb(225,184,17)" rx="2" ry="2" />
<text  x="366.56" y="1567.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="453.8" y="1893" width="0.2" height="15.0" fill="rgb(243,144,53)" rx="2" ry="2" />
<text  x="456.80" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (2 samples, 0.03%)</title><rect x="708.5" y="1973" width="0.4" height="15.0" fill="rgb(243,103,35)" rx="2" ry="2" />
<text  x="711.49" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="923.9" y="1909" width="0.2" height="15.0" fill="rgb(219,12,32)" rx="2" ry="2" />
<text  x="926.88" y="1919.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="363.8" y="1589" width="0.2" height="15.0" fill="rgb(248,3,11)" rx="2" ry="2" />
<text  x="366.76" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="98.4" y="37" width="0.4" height="15.0" fill="rgb(210,223,21)" rx="2" ry="2" />
<text  x="101.44" y="47.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="243.2" y="1909" width="0.2" height="15.0" fill="rgb(218,76,23)" rx="2" ry="2" />
<text  x="246.23" y="1919.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1186.0" y="2053" width="0.2" height="15.0" fill="rgb(245,100,0)" rx="2" ry="2" />
<text  x="1188.99" y="2063.5" ></text>
</g>
<g >
<title>epoll_ctl (3 samples, 0.05%)</title><rect x="1136.7" y="2053" width="0.6" height="15.0" fill="rgb(243,90,41)" rx="2" ry="2" />
<text  x="1139.66" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="624.7" y="1989" width="0.8" height="15.0" fill="rgb(240,204,53)" rx="2" ry="2" />
<text  x="627.67" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="214.6" y="1781" width="0.2" height="15.0" fill="rgb(230,38,3)" rx="2" ry="2" />
<text  x="217.55" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1164.7" y="1941" width="0.8" height="15.0" fill="rgb(245,101,18)" rx="2" ry="2" />
<text  x="1167.73" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1140.5" y="2021" width="0.2" height="15.0" fill="rgb(238,96,0)" rx="2" ry="2" />
<text  x="1143.47" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="884.8" y="1925" width="0.2" height="15.0" fill="rgb(209,93,0)" rx="2" ry="2" />
<text  x="887.77" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="426.7" y="1701" width="0.2" height="15.0" fill="rgb(248,186,54)" rx="2" ry="2" />
<text  x="429.73" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="150.2" y="1925" width="0.2" height="15.0" fill="rgb(241,150,40)" rx="2" ry="2" />
<text  x="153.18" y="1935.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1177.6" y="1941" width="0.2" height="15.0" fill="rgb(223,79,20)" rx="2" ry="2" />
<text  x="1180.57" y="1951.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="757.8" y="1445" width="0.2" height="15.0" fill="rgb(206,77,22)" rx="2" ry="2" />
<text  x="760.83" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="999.1" y="2005" width="0.2" height="15.0" fill="rgb(218,105,47)" rx="2" ry="2" />
<text  x="1002.08" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="677.8" y="1845" width="0.4" height="15.0" fill="rgb(237,182,38)" rx="2" ry="2" />
<text  x="680.81" y="1855.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="618.2" y="1941" width="1.1" height="15.0" fill="rgb(243,109,53)" rx="2" ry="2" />
<text  x="621.25" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1165.1" y="1829" width="0.4" height="15.0" fill="rgb(253,98,47)" rx="2" ry="2" />
<text  x="1168.13" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="399.7" y="1749" width="0.4" height="15.0" fill="rgb(222,47,25)" rx="2" ry="2" />
<text  x="402.66" y="1759.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="768.3" y="1669" width="0.2" height="15.0" fill="rgb(213,109,25)" rx="2" ry="2" />
<text  x="771.26" y="1679.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="394.2" y="1877" width="0.2" height="15.0" fill="rgb(247,74,10)" rx="2" ry="2" />
<text  x="397.24" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="629" width="16.1" height="15.0" fill="rgb(237,55,19)" rx="2" ry="2" />
<text  x="101.44" y="639.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="368.8" y="1877" width="0.2" height="15.0" fill="rgb(230,171,22)" rx="2" ry="2" />
<text  x="371.77" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="75.6" y="1877" width="0.2" height="15.0" fill="rgb(231,28,4)" rx="2" ry="2" />
<text  x="78.58" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="541.4" y="1781" width="0.2" height="15.0" fill="rgb(242,75,16)" rx="2" ry="2" />
<text  x="544.44" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (2 samples, 0.03%)</title><rect x="203.5" y="1941" width="0.4" height="15.0" fill="rgb(230,86,16)" rx="2" ry="2" />
<text  x="206.52" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1140.5" y="1973" width="0.2" height="15.0" fill="rgb(218,58,35)" rx="2" ry="2" />
<text  x="1143.47" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (137 samples, 2.33%)</title><rect x="780.9" y="1621" width="27.5" height="15.0" fill="rgb(217,9,16)" rx="2" ry="2" />
<text  x="783.89" y="1631.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="426.7" y="1989" width="0.2" height="15.0" fill="rgb(252,50,9)" rx="2" ry="2" />
<text  x="429.73" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (11 samples, 0.19%)</title><rect x="888.0" y="1941" width="2.2" height="15.0" fill="rgb(235,86,6)" rx="2" ry="2" />
<text  x="890.98" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (3 samples, 0.05%)</title><rect x="299.4" y="1685" width="0.6" height="15.0" fill="rgb(222,172,26)" rx="2" ry="2" />
<text  x="302.38" y="1695.5" ></text>
</g>
<g >
<title>inet_sendmsg (399 samples, 6.78%)</title><rect x="243.0" y="1925" width="80.0" height="15.0" fill="rgb(214,50,46)" rx="2" ry="2" />
<text  x="246.03" y="1935.5" >inet_send..</text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (11 samples, 0.19%)</title><rect x="530.2" y="2005" width="2.2" height="15.0" fill="rgb(250,204,48)" rx="2" ry="2" />
<text  x="533.21" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="697.7" y="1733" width="0.2" height="15.0" fill="rgb(209,101,10)" rx="2" ry="2" />
<text  x="700.66" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="563.7" y="1845" width="0.4" height="15.0" fill="rgb(230,9,39)" rx="2" ry="2" />
<text  x="566.70" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="985.0" y="1909" width="0.8" height="15.0" fill="rgb(209,144,37)" rx="2" ry="2" />
<text  x="988.04" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="160.8" y="1845" width="0.2" height="15.0" fill="rgb(215,112,44)" rx="2" ry="2" />
<text  x="163.81" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="992.9" y="1941" width="0.2" height="15.0" fill="rgb(252,132,0)" rx="2" ry="2" />
<text  x="995.87" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="652.3" y="1989" width="0.2" height="15.0" fill="rgb(223,90,29)" rx="2" ry="2" />
<text  x="655.34" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (5 samples, 0.08%)</title><rect x="970.2" y="2005" width="1.0" height="15.0" fill="rgb(225,37,21)" rx="2" ry="2" />
<text  x="973.20" y="2015.5" ></text>
</g>
<g >
<title>__libc_fcntl (74 samples, 1.26%)</title><rect x="552.7" y="1989" width="14.8" height="15.0" fill="rgb(248,39,43)" rx="2" ry="2" />
<text  x="555.67" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="24.4" y="1701" width="0.2" height="15.0" fill="rgb(225,98,25)" rx="2" ry="2" />
<text  x="27.44" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="25.4" y="1381" width="0.2" height="15.0" fill="rgb(242,183,11)" rx="2" ry="2" />
<text  x="28.44" y="1391.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1183.0" y="1989" width="0.2" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="1185.98" y="1999.5" ></text>
</g>
<g >
<title>tcp_poll (39 samples, 0.66%)</title><rect x="446.2" y="1941" width="7.8" height="15.0" fill="rgb(216,144,22)" rx="2" ry="2" />
<text  x="449.18" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="19.0" y="2005" width="0.2" height="15.0" fill="rgb(228,117,52)" rx="2" ry="2" />
<text  x="22.02" y="2015.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="153.8" y="1669" width="0.2" height="15.0" fill="rgb(232,136,19)" rx="2" ry="2" />
<text  x="156.79" y="1679.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="614.2" y="1733" width="0.8" height="15.0" fill="rgb(225,75,39)" rx="2" ry="2" />
<text  x="617.24" y="1743.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="374.4" y="1877" width="0.4" height="15.0" fill="rgb(245,78,29)" rx="2" ry="2" />
<text  x="377.39" y="1887.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (5 samples, 0.08%)</title><rect x="505.3" y="1941" width="1.0" height="15.0" fill="rgb(215,218,54)" rx="2" ry="2" />
<text  x="508.34" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (1 samples, 0.02%)</title><rect x="72.2" y="1957" width="0.2" height="15.0" fill="rgb(218,161,6)" rx="2" ry="2" />
<text  x="75.17" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1155.5" y="1781" width="0.2" height="15.0" fill="rgb(246,216,30)" rx="2" ry="2" />
<text  x="1158.51" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.0" y="1973" width="0.2" height="15.0" fill="rgb(216,17,31)" rx="2" ry="2" />
<text  x="101.04" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="543.6" y="1941" width="0.2" height="15.0" fill="rgb(226,116,1)" rx="2" ry="2" />
<text  x="546.65" y="1951.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="277.9" y="1509" width="0.2" height="15.0" fill="rgb(227,33,25)" rx="2" ry="2" />
<text  x="280.93" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1074.9" y="1829" width="0.2" height="15.0" fill="rgb(208,215,50)" rx="2" ry="2" />
<text  x="1077.89" y="1839.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="210.9" y="1493" width="0.2" height="15.0" fill="rgb(231,3,10)" rx="2" ry="2" />
<text  x="213.94" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="545.5" y="1973" width="0.2" height="15.0" fill="rgb(232,134,1)" rx="2" ry="2" />
<text  x="548.45" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1091.5" y="1813" width="0.2" height="15.0" fill="rgb(231,204,4)" rx="2" ry="2" />
<text  x="1094.53" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="918.3" y="2037" width="0.4" height="15.0" fill="rgb(246,105,20)" rx="2" ry="2" />
<text  x="921.26" y="2047.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="784.5" y="1317" width="0.2" height="15.0" fill="rgb(239,47,31)" rx="2" ry="2" />
<text  x="787.50" y="1327.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="426.7" y="1813" width="0.2" height="15.0" fill="rgb(208,161,1)" rx="2" ry="2" />
<text  x="429.73" y="1823.5" ></text>
</g>
<g >
<title>process_backlog (14 samples, 0.24%)</title><rect x="277.1" y="1653" width="2.8" height="15.0" fill="rgb(249,172,22)" rx="2" ry="2" />
<text  x="280.12" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="550.1" y="1909" width="0.2" height="15.0" fill="rgb(228,198,45)" rx="2" ry="2" />
<text  x="553.06" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (32 samples, 0.54%)</title><rect x="797.3" y="1509" width="6.5" height="15.0" fill="rgb(229,87,12)" rx="2" ry="2" />
<text  x="800.34" y="1519.5" ></text>
</g>
<g >
<title>__ip_local_out (4 samples, 0.07%)</title><rect x="273.1" y="1781" width="0.8" height="15.0" fill="rgb(229,110,21)" rx="2" ry="2" />
<text  x="276.11" y="1791.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="323.2" y="1909" width="0.3" height="15.0" fill="rgb(207,74,5)" rx="2" ry="2" />
<text  x="326.25" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.90%)</title><rect x="552.9" y="1973" width="10.6" height="15.0" fill="rgb(252,47,35)" rx="2" ry="2" />
<text  x="555.87" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="850.1" y="1829" width="0.2" height="15.0" fill="rgb(231,208,39)" rx="2" ry="2" />
<text  x="853.08" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="992.9" y="1925" width="0.2" height="15.0" fill="rgb(217,94,13)" rx="2" ry="2" />
<text  x="995.87" y="1935.5" ></text>
</g>
<g >
<title>_find_next_bit (2 samples, 0.03%)</title><rect x="345.9" y="1925" width="0.4" height="15.0" fill="rgb(234,207,12)" rx="2" ry="2" />
<text  x="348.91" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="856.1" y="1685" width="0.2" height="15.0" fill="rgb(248,206,6)" rx="2" ry="2" />
<text  x="859.09" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="306.4" y="1525" width="0.2" height="15.0" fill="rgb(228,181,35)" rx="2" ry="2" />
<text  x="309.40" y="1535.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="993.1" y="1941" width="0.6" height="15.0" fill="rgb(223,194,53)" rx="2" ry="2" />
<text  x="996.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_synack_rtt_meas (1 samples, 0.02%)</title><rect x="563.1" y="1621" width="0.2" height="15.0" fill="rgb(242,79,36)" rx="2" ry="2" />
<text  x="566.10" y="1631.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 0.05%)</title><rect x="197.7" y="1941" width="0.6" height="15.0" fill="rgb(235,212,37)" rx="2" ry="2" />
<text  x="200.71" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (1 samples, 0.02%)</title><rect x="568.1" y="2005" width="0.2" height="15.0" fill="rgb(247,169,43)" rx="2" ry="2" />
<text  x="571.11" y="2015.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="67.4" y="1765" width="0.2" height="15.0" fill="rgb(207,20,25)" rx="2" ry="2" />
<text  x="70.36" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1149.7" y="1941" width="0.2" height="15.0" fill="rgb(215,3,8)" rx="2" ry="2" />
<text  x="1152.69" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1083.3" y="1765" width="0.2" height="15.0" fill="rgb(239,186,18)" rx="2" ry="2" />
<text  x="1086.31" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (112 samples, 1.90%)</title><rect x="40.3" y="1989" width="22.4" height="15.0" fill="rgb(248,142,44)" rx="2" ry="2" />
<text  x="43.28" y="1999.5" >f..</text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="757.8" y="1461" width="0.2" height="15.0" fill="rgb(218,112,12)" rx="2" ry="2" />
<text  x="760.83" y="1471.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="26.4" y="1989" width="0.2" height="15.0" fill="rgb(251,202,4)" rx="2" ry="2" />
<text  x="29.44" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (3 samples, 0.05%)</title><rect x="1148.9" y="1989" width="0.6" height="15.0" fill="rgb(243,8,36)" rx="2" ry="2" />
<text  x="1151.89" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (7 samples, 0.12%)</title><rect x="89.8" y="2053" width="1.4" height="15.0" fill="rgb(220,197,13)" rx="2" ry="2" />
<text  x="92.82" y="2063.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="374.4" y="1621" width="0.2" height="15.0" fill="rgb(223,188,2)" rx="2" ry="2" />
<text  x="377.39" y="1631.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="506.3" y="1989" width="0.2" height="15.0" fill="rgb(214,91,30)" rx="2" ry="2" />
<text  x="509.35" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.63%)</title><rect x="98.2" y="1845" width="19.3" height="15.0" fill="rgb(212,109,10)" rx="2" ry="2" />
<text  x="101.24" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="524.2" y="1925" width="0.4" height="15.0" fill="rgb(222,103,45)" rx="2" ry="2" />
<text  x="527.19" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="75.6" y="1909" width="0.2" height="15.0" fill="rgb(226,136,47)" rx="2" ry="2" />
<text  x="78.58" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1091.5" y="1717" width="0.2" height="15.0" fill="rgb(232,48,33)" rx="2" ry="2" />
<text  x="1094.53" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="545.3" y="1941" width="0.2" height="15.0" fill="rgb(249,13,11)" rx="2" ry="2" />
<text  x="548.25" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="306.4" y="1733" width="0.2" height="15.0" fill="rgb(214,98,41)" rx="2" ry="2" />
<text  x="309.40" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="363.8" y="1845" width="0.2" height="15.0" fill="rgb(232,121,18)" rx="2" ry="2" />
<text  x="366.76" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="947.3" y="1989" width="0.2" height="15.0" fill="rgb(227,27,36)" rx="2" ry="2" />
<text  x="950.34" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="851.3" y="1909" width="0.6" height="15.0" fill="rgb(213,180,2)" rx="2" ry="2" />
<text  x="854.28" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1148.3" y="1733" width="0.2" height="15.0" fill="rgb(233,224,37)" rx="2" ry="2" />
<text  x="1151.29" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="645.9" y="1925" width="0.4" height="15.0" fill="rgb(235,129,22)" rx="2" ry="2" />
<text  x="648.92" y="1935.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(223,216,51)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="450.8" y="1893" width="0.2" height="15.0" fill="rgb(223,127,22)" rx="2" ry="2" />
<text  x="453.80" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="574.5" y="1925" width="0.4" height="15.0" fill="rgb(214,130,40)" rx="2" ry="2" />
<text  x="577.53" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="659.0" y="2005" width="0.2" height="15.0" fill="rgb(252,179,10)" rx="2" ry="2" />
<text  x="661.96" y="2015.5" ></text>
</g>
<g >
<title>map_id_range_down (3 samples, 0.05%)</title><rect x="382.2" y="1877" width="0.6" height="15.0" fill="rgb(218,146,46)" rx="2" ry="2" />
<text  x="385.21" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="561.9" y="1909" width="1.2" height="15.0" fill="rgb(239,147,34)" rx="2" ry="2" />
<text  x="564.90" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="965.4" y="1989" width="0.2" height="15.0" fill="rgb(219,124,41)" rx="2" ry="2" />
<text  x="968.39" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="579.7" y="1813" width="0.2" height="15.0" fill="rgb(250,164,51)" rx="2" ry="2" />
<text  x="582.75" y="1823.5" ></text>
</g>
<g >
<title>__fdget (17 samples, 0.29%)</title><rect x="1125.2" y="1957" width="3.4" height="15.0" fill="rgb(233,131,51)" rx="2" ry="2" />
<text  x="1128.22" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.1" y="1829" width="0.2" height="15.0" fill="rgb(246,19,42)" rx="2" ry="2" />
<text  x="844.05" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="540.4" y="1957" width="0.2" height="15.0" fill="rgb(205,188,22)" rx="2" ry="2" />
<text  x="543.44" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="1144.1" y="1973" width="0.4" height="15.0" fill="rgb(250,51,36)" rx="2" ry="2" />
<text  x="1147.08" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="141.6" y="1893" width="0.2" height="15.0" fill="rgb(208,58,45)" rx="2" ry="2" />
<text  x="144.56" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (116 samples, 1.97%)</title><rect x="784.7" y="1573" width="23.3" height="15.0" fill="rgb(239,13,17)" rx="2" ry="2" />
<text  x="787.70" y="1583.5" >_..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="32.7" y="2005" width="0.4" height="15.0" fill="rgb(216,138,35)" rx="2" ry="2" />
<text  x="35.66" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="391.0" y="1829" width="0.2" height="15.0" fill="rgb(211,29,46)" rx="2" ry="2" />
<text  x="394.03" y="1839.5" ></text>
</g>
<g >
<title>__ip_local_out (17 samples, 0.29%)</title><rect x="776.7" y="1637" width="3.4" height="15.0" fill="rgb(243,67,27)" rx="2" ry="2" />
<text  x="779.68" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.5" y="1909" width="0.2" height="15.0" fill="rgb(234,59,14)" rx="2" ry="2" />
<text  x="478.46" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (9 samples, 0.15%)</title><rect x="66.4" y="1909" width="1.8" height="15.0" fill="rgb(239,117,37)" rx="2" ry="2" />
<text  x="69.35" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="165.6" y="1957" width="0.6" height="15.0" fill="rgb(252,39,51)" rx="2" ry="2" />
<text  x="168.62" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1765" width="0.2" height="15.0" fill="rgb(221,10,12)" rx="2" ry="2" />
<text  x="408.47" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="935.3" y="1941" width="0.2" height="15.0" fill="rgb(232,98,37)" rx="2" ry="2" />
<text  x="938.31" y="1951.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="966.4" y="2037" width="0.2" height="15.0" fill="rgb(210,69,48)" rx="2" ry="2" />
<text  x="969.39" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (29 samples, 0.49%)</title><rect x="1146.1" y="2037" width="5.8" height="15.0" fill="rgb(252,214,15)" rx="2" ry="2" />
<text  x="1149.08" y="2047.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="652.3" y="1973" width="0.2" height="15.0" fill="rgb(245,58,11)" rx="2" ry="2" />
<text  x="655.34" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="994.3" y="1749" width="0.2" height="15.0" fill="rgb(236,14,29)" rx="2" ry="2" />
<text  x="997.27" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="947.3" y="2005" width="0.2" height="15.0" fill="rgb(236,100,39)" rx="2" ry="2" />
<text  x="950.34" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="47.5" y="1957" width="0.2" height="15.0" fill="rgb(246,32,42)" rx="2" ry="2" />
<text  x="50.50" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1140.5" y="1909" width="0.2" height="15.0" fill="rgb(210,119,7)" rx="2" ry="2" />
<text  x="1143.47" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1179.4" y="2005" width="0.2" height="15.0" fill="rgb(241,61,2)" rx="2" ry="2" />
<text  x="1182.37" y="2015.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="521.8" y="1877" width="0.8" height="15.0" fill="rgb(228,173,34)" rx="2" ry="2" />
<text  x="524.79" y="1887.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="363.8" y="1621" width="0.2" height="15.0" fill="rgb(248,177,11)" rx="2" ry="2" />
<text  x="366.76" y="1631.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="276.7" y="1413" width="0.2" height="15.0" fill="rgb(208,96,28)" rx="2" ry="2" />
<text  x="279.72" y="1423.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="475.5" y="1941" width="0.2" height="15.0" fill="rgb(213,188,10)" rx="2" ry="2" />
<text  x="478.46" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="814.0" y="1445" width="0.2" height="15.0" fill="rgb(242,216,35)" rx="2" ry="2" />
<text  x="816.98" y="1455.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="784.5" y="1397" width="0.2" height="15.0" fill="rgb(235,100,46)" rx="2" ry="2" />
<text  x="787.50" y="1407.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (2 samples, 0.03%)</title><rect x="1019.3" y="2037" width="0.4" height="15.0" fill="rgb(222,206,17)" rx="2" ry="2" />
<text  x="1022.34" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="426.7" y="1845" width="0.2" height="15.0" fill="rgb(227,22,29)" rx="2" ry="2" />
<text  x="429.73" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="214.8" y="1861" width="0.2" height="15.0" fill="rgb(253,168,0)" rx="2" ry="2" />
<text  x="217.76" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="149.2" y="1813" width="0.2" height="15.0" fill="rgb(241,220,52)" rx="2" ry="2" />
<text  x="152.18" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="30.3" y="1845" width="0.2" height="15.0" fill="rgb(205,85,32)" rx="2" ry="2" />
<text  x="33.25" y="1855.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="116.5" y="1765" width="0.2" height="15.0" fill="rgb(228,116,15)" rx="2" ry="2" />
<text  x="119.49" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.6" y="1877" width="0.2" height="15.0" fill="rgb(216,186,29)" rx="2" ry="2" />
<text  x="145.56" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="114.3" y="165" width="0.2" height="15.0" fill="rgb(220,37,3)" rx="2" ry="2" />
<text  x="117.28" y="175.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="757.8" y="1589" width="0.2" height="15.0" fill="rgb(254,217,13)" rx="2" ry="2" />
<text  x="760.83" y="1599.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="600.8" y="1653" width="0.2" height="15.0" fill="rgb(218,223,47)" rx="2" ry="2" />
<text  x="603.80" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1152.1" y="2037" width="0.2" height="15.0" fill="rgb(220,47,17)" rx="2" ry="2" />
<text  x="1155.10" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="153.2" y="1861" width="0.2" height="15.0" fill="rgb(238,104,35)" rx="2" ry="2" />
<text  x="156.19" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="148.0" y="1877" width="0.2" height="15.0" fill="rgb(234,4,48)" rx="2" ry="2" />
<text  x="150.97" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="622.7" y="2005" width="0.4" height="15.0" fill="rgb(207,214,39)" rx="2" ry="2" />
<text  x="625.66" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="623.3" y="1989" width="0.2" height="15.0" fill="rgb(237,21,28)" rx="2" ry="2" />
<text  x="626.26" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1094.5" y="1733" width="0.2" height="15.0" fill="rgb(250,54,20)" rx="2" ry="2" />
<text  x="1097.54" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.1" y="1653" width="0.2" height="15.0" fill="rgb(234,156,49)" rx="2" ry="2" />
<text  x="844.05" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.68%)</title><rect x="98.2" y="1909" width="19.9" height="15.0" fill="rgb(254,171,53)" rx="2" ry="2" />
<text  x="101.24" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="980.8" y="1989" width="0.2" height="15.0" fill="rgb(231,58,28)" rx="2" ry="2" />
<text  x="983.83" y="1999.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="301.0" y="1509" width="0.2" height="15.0" fill="rgb(243,80,30)" rx="2" ry="2" />
<text  x="303.99" y="1519.5" ></text>
</g>
<g >
<title>tcp_send_ack (54 samples, 0.92%)</title><rect x="1108.2" y="1909" width="10.8" height="15.0" fill="rgb(226,35,11)" rx="2" ry="2" />
<text  x="1111.18" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1122.6" y="1749" width="0.2" height="15.0" fill="rgb(215,2,27)" rx="2" ry="2" />
<text  x="1125.62" y="1759.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="544.0" y="1717" width="0.2" height="15.0" fill="rgb(215,104,33)" rx="2" ry="2" />
<text  x="547.05" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="620.3" y="1941" width="0.2" height="15.0" fill="rgb(244,47,38)" rx="2" ry="2" />
<text  x="623.25" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="545.3" y="1957" width="0.2" height="15.0" fill="rgb(243,6,8)" rx="2" ry="2" />
<text  x="548.25" y="1967.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="56.7" y="1909" width="0.8" height="15.0" fill="rgb(229,145,29)" rx="2" ry="2" />
<text  x="59.73" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="649.5" y="1909" width="0.2" height="15.0" fill="rgb(217,217,13)" rx="2" ry="2" />
<text  x="652.53" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="584.2" y="1845" width="0.2" height="15.0" fill="rgb(252,21,47)" rx="2" ry="2" />
<text  x="587.16" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (3 samples, 0.05%)</title><rect x="517.4" y="1989" width="0.6" height="15.0" fill="rgb(214,228,3)" rx="2" ry="2" />
<text  x="520.38" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (29 samples, 0.49%)</title><rect x="546.9" y="2005" width="5.8" height="15.0" fill="rgb(217,111,28)" rx="2" ry="2" />
<text  x="549.86" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (2 samples, 0.03%)</title><rect x="152.2" y="2005" width="0.4" height="15.0" fill="rgb(227,166,40)" rx="2" ry="2" />
<text  x="155.19" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="519.2" y="1925" width="0.2" height="15.0" fill="rgb(205,202,0)" rx="2" ry="2" />
<text  x="522.18" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="924.9" y="1893" width="0.2" height="15.0" fill="rgb(224,124,30)" rx="2" ry="2" />
<text  x="927.88" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="402.1" y="1845" width="0.2" height="15.0" fill="rgb(239,130,53)" rx="2" ry="2" />
<text  x="405.06" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (5 samples, 0.08%)</title><rect x="244.0" y="1877" width="1.0" height="15.0" fill="rgb(215,226,23)" rx="2" ry="2" />
<text  x="247.03" y="1887.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="485.7" y="1973" width="0.2" height="15.0" fill="rgb(230,66,46)" rx="2" ry="2" />
<text  x="488.69" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1143.7" y="1957" width="0.2" height="15.0" fill="rgb(232,126,24)" rx="2" ry="2" />
<text  x="1146.67" y="1967.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="956.8" y="1973" width="0.2" height="15.0" fill="rgb(220,197,53)" rx="2" ry="2" />
<text  x="959.77" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="246.4" y="1653" width="0.2" height="15.0" fill="rgb(248,200,18)" rx="2" ry="2" />
<text  x="249.44" y="1663.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="978.2" y="1973" width="0.2" height="15.0" fill="rgb(235,176,35)" rx="2" ry="2" />
<text  x="981.23" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="246.4" y="1749" width="0.2" height="15.0" fill="rgb(242,192,46)" rx="2" ry="2" />
<text  x="249.44" y="1759.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="453.2" y="1877" width="0.2" height="15.0" fill="rgb(245,167,40)" rx="2" ry="2" />
<text  x="456.20" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="578.9" y="2021" width="0.2" height="15.0" fill="rgb(241,55,49)" rx="2" ry="2" />
<text  x="581.94" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="80.2" y="1925" width="0.2" height="15.0" fill="rgb(247,75,23)" rx="2" ry="2" />
<text  x="83.19" y="1935.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (7 samples, 0.12%)</title><rect x="323.0" y="1925" width="1.5" height="15.0" fill="rgb(209,143,0)" rx="2" ry="2" />
<text  x="326.05" y="1935.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="363.6" y="1589" width="0.2" height="15.0" fill="rgb(250,142,30)" rx="2" ry="2" />
<text  x="366.56" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="24.4" y="1765" width="0.2" height="15.0" fill="rgb(241,205,37)" rx="2" ry="2" />
<text  x="27.44" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="150.4" y="1861" width="0.2" height="15.0" fill="rgb(218,156,21)" rx="2" ry="2" />
<text  x="153.38" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="902.0" y="1973" width="0.2" height="15.0" fill="rgb(237,215,52)" rx="2" ry="2" />
<text  x="905.02" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="780.1" y="1637" width="0.4" height="15.0" fill="rgb(236,17,23)" rx="2" ry="2" />
<text  x="783.09" y="1647.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="879.6" y="1941" width="0.2" height="15.0" fill="rgb(206,148,12)" rx="2" ry="2" />
<text  x="882.56" y="1951.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="982.4" y="1893" width="0.2" height="15.0" fill="rgb(230,138,11)" rx="2" ry="2" />
<text  x="985.44" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="363.6" y="1685" width="0.2" height="15.0" fill="rgb(243,104,52)" rx="2" ry="2" />
<text  x="366.56" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="918.3" y="2021" width="0.4" height="15.0" fill="rgb(247,177,50)" rx="2" ry="2" />
<text  x="921.26" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="126.9" y="1765" width="0.2" height="15.0" fill="rgb(234,185,20)" rx="2" ry="2" />
<text  x="129.92" y="1775.5" ></text>
</g>
<g >
<title>expand_files (1 samples, 0.02%)</title><rect x="346.7" y="1925" width="0.2" height="15.0" fill="rgb(225,142,19)" rx="2" ry="2" />
<text  x="349.71" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="488.3" y="1925" width="0.2" height="15.0" fill="rgb(228,32,18)" rx="2" ry="2" />
<text  x="491.30" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="906.0" y="1973" width="0.8" height="15.0" fill="rgb(238,224,52)" rx="2" ry="2" />
<text  x="909.03" y="1983.5" ></text>
</g>
<g >
<title>tcp_close (1 samples, 0.02%)</title><rect x="834.4" y="1765" width="0.2" height="15.0" fill="rgb(236,75,4)" rx="2" ry="2" />
<text  x="837.44" y="1775.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (5 samples, 0.08%)</title><rect x="72.8" y="1957" width="1.0" height="15.0" fill="rgb(238,115,7)" rx="2" ry="2" />
<text  x="75.77" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (202 samples, 3.43%)</title><rect x="579.9" y="2037" width="40.6" height="15.0" fill="rgb(219,201,43)" rx="2" ry="2" />
<text  x="582.95" y="2047.5" >fac..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.7" y="1957" width="0.2" height="15.0" fill="rgb(231,117,36)" rx="2" ry="2" />
<text  x="123.70" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (47 samples, 0.80%)</title><rect x="537.4" y="2005" width="9.5" height="15.0" fill="rgb(211,119,0)" rx="2" ry="2" />
<text  x="540.43" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="994.3" y="1733" width="0.2" height="15.0" fill="rgb(225,106,47)" rx="2" ry="2" />
<text  x="997.27" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="381.2" y="1717" width="0.2" height="15.0" fill="rgb(231,28,29)" rx="2" ry="2" />
<text  x="384.21" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="550.1" y="1861" width="0.2" height="15.0" fill="rgb(252,207,54)" rx="2" ry="2" />
<text  x="553.06" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="575.5" y="1797" width="0.2" height="15.0" fill="rgb(250,153,10)" rx="2" ry="2" />
<text  x="578.53" y="1807.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="550.1" y="1957" width="0.6" height="15.0" fill="rgb(235,175,3)" rx="2" ry="2" />
<text  x="553.06" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="82.0" y="1989" width="0.2" height="15.0" fill="rgb(229,148,30)" rx="2" ry="2" />
<text  x="85.00" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="990.5" y="1909" width="0.2" height="15.0" fill="rgb(229,42,44)" rx="2" ry="2" />
<text  x="993.46" y="1919.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="1184.8" y="2053" width="0.6" height="15.0" fill="rgb(213,38,40)" rx="2" ry="2" />
<text  x="1187.79" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="852.3" y="1893" width="0.2" height="15.0" fill="rgb(219,135,49)" rx="2" ry="2" />
<text  x="855.28" y="1903.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="743.4" y="1685" width="0.2" height="15.0" fill="rgb(223,37,50)" rx="2" ry="2" />
<text  x="746.39" y="1695.5" ></text>
</g>
<g >
<title>destroy_inode (32 samples, 0.54%)</title><rect x="741.8" y="1701" width="6.4" height="15.0" fill="rgb(212,217,18)" rx="2" ry="2" />
<text  x="744.78" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (14 samples, 0.24%)</title><rect x="1182.0" y="2037" width="2.8" height="15.0" fill="rgb(239,66,11)" rx="2" ry="2" />
<text  x="1184.98" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="153.8" y="1861" width="0.2" height="15.0" fill="rgb(216,29,49)" rx="2" ry="2" />
<text  x="156.79" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="524.2" y="1877" width="0.4" height="15.0" fill="rgb(206,16,54)" rx="2" ry="2" />
<text  x="527.19" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="210.9" y="1397" width="0.2" height="15.0" fill="rgb(231,202,22)" rx="2" ry="2" />
<text  x="213.94" y="1407.5" ></text>
</g>
<g >
<title>tcp_recvmsg (323 samples, 5.49%)</title><rect x="1057.0" y="1941" width="64.8" height="15.0" fill="rgb(221,38,47)" rx="2" ry="2" />
<text  x="1060.04" y="1951.5" >tcp_rec..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="114.3" y="133" width="0.2" height="15.0" fill="rgb(241,217,26)" rx="2" ry="2" />
<text  x="117.28" y="143.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (4 samples, 0.07%)</title><rect x="1152.3" y="2053" width="0.8" height="15.0" fill="rgb(233,36,26)" rx="2" ry="2" />
<text  x="1155.30" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="76.0" y="1957" width="0.2" height="15.0" fill="rgb(240,22,29)" rx="2" ry="2" />
<text  x="78.98" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="473.1" y="1941" width="1.2" height="15.0" fill="rgb(237,16,7)" rx="2" ry="2" />
<text  x="476.06" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="703.9" y="1989" width="1.2" height="15.0" fill="rgb(207,155,34)" rx="2" ry="2" />
<text  x="706.88" y="1999.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="332.7" y="2037" width="0.4" height="15.0" fill="rgb(210,176,10)" rx="2" ry="2" />
<text  x="335.68" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1128.4" y="1909" width="0.2" height="15.0" fill="rgb(252,196,34)" rx="2" ry="2" />
<text  x="1131.43" y="1919.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="56.1" y="1893" width="0.2" height="15.0" fill="rgb(244,103,33)" rx="2" ry="2" />
<text  x="59.13" y="1903.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="579.7" y="1589" width="0.2" height="15.0" fill="rgb(240,158,12)" rx="2" ry="2" />
<text  x="582.75" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="990.5" y="1941" width="0.2" height="15.0" fill="rgb(207,199,52)" rx="2" ry="2" />
<text  x="993.46" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="117.5" y="1845" width="0.2" height="15.0" fill="rgb(216,129,23)" rx="2" ry="2" />
<text  x="120.49" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (10 samples, 0.17%)</title><rect x="68.6" y="1941" width="2.0" height="15.0" fill="rgb(224,210,24)" rx="2" ry="2" />
<text  x="71.56" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="893.0" y="1925" width="0.2" height="15.0" fill="rgb(218,73,16)" rx="2" ry="2" />
<text  x="895.99" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="856.1" y="1653" width="0.2" height="15.0" fill="rgb(208,65,29)" rx="2" ry="2" />
<text  x="859.09" y="1663.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="579.7" y="1717" width="0.2" height="15.0" fill="rgb(226,138,19)" rx="2" ry="2" />
<text  x="582.75" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="493.9" y="1861" width="0.4" height="15.0" fill="rgb(205,7,27)" rx="2" ry="2" />
<text  x="496.91" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="673.8" y="1765" width="0.6" height="15.0" fill="rgb(240,163,1)" rx="2" ry="2" />
<text  x="676.80" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="618.2" y="1989" width="1.1" height="15.0" fill="rgb(211,110,34)" rx="2" ry="2" />
<text  x="621.25" y="1999.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (8 samples, 0.14%)</title><rect x="788.5" y="1525" width="1.6" height="15.0" fill="rgb(243,228,3)" rx="2" ry="2" />
<text  x="791.51" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1140.5" y="1957" width="0.2" height="15.0" fill="rgb(254,10,12)" rx="2" ry="2" />
<text  x="1143.47" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1083.3" y="1653" width="0.2" height="15.0" fill="rgb(209,115,36)" rx="2" ry="2" />
<text  x="1086.31" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1148.3" y="1909" width="0.2" height="15.0" fill="rgb(235,201,46)" rx="2" ry="2" />
<text  x="1151.29" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.12%)</title><rect x="392.8" y="1893" width="1.4" height="15.0" fill="rgb(207,137,7)" rx="2" ry="2" />
<text  x="395.84" y="1903.5" ></text>
</g>
<g >
<title>alloc_file (45 samples, 0.76%)</title><rect x="388.2" y="1941" width="9.1" height="15.0" fill="rgb(235,123,6)" rx="2" ry="2" />
<text  x="391.23" y="1951.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="995.3" y="1957" width="0.4" height="15.0" fill="rgb(233,3,0)" rx="2" ry="2" />
<text  x="998.27" y="1967.5" ></text>
</g>
<g >
<title>release_sock (9 samples, 0.15%)</title><rect x="367.2" y="1925" width="1.8" height="15.0" fill="rgb(228,201,11)" rx="2" ry="2" />
<text  x="370.17" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1144.5" y="1957" width="0.2" height="15.0" fill="rgb(222,45,11)" rx="2" ry="2" />
<text  x="1147.48" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="515.4" y="1909" width="0.2" height="15.0" fill="rgb(229,136,8)" rx="2" ry="2" />
<text  x="518.37" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="518.6" y="1957" width="0.4" height="15.0" fill="rgb(241,17,47)" rx="2" ry="2" />
<text  x="521.58" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="886.4" y="1941" width="0.2" height="15.0" fill="rgb(233,60,21)" rx="2" ry="2" />
<text  x="889.38" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="327.1" y="2005" width="0.4" height="15.0" fill="rgb(226,210,54)" rx="2" ry="2" />
<text  x="330.06" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="160.8" y="1653" width="0.2" height="15.0" fill="rgb(213,35,22)" rx="2" ry="2" />
<text  x="163.81" y="1663.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="838.2" y="1829" width="0.2" height="15.0" fill="rgb(218,222,2)" rx="2" ry="2" />
<text  x="841.25" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="266.5" y="1813" width="0.2" height="15.0" fill="rgb(252,72,15)" rx="2" ry="2" />
<text  x="269.50" y="1823.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="722.1" y="1829" width="0.2" height="15.0" fill="rgb(240,14,48)" rx="2" ry="2" />
<text  x="725.13" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1909" width="0.2" height="15.0" fill="rgb(214,104,36)" rx="2" ry="2" />
<text  x="855.48" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (3 samples, 0.05%)</title><rect x="510.6" y="1989" width="0.6" height="15.0" fill="rgb(205,196,53)" rx="2" ry="2" />
<text  x="513.56" y="1999.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.02%)</title><rect x="1083.1" y="1845" width="0.2" height="15.0" fill="rgb(253,97,41)" rx="2" ry="2" />
<text  x="1086.11" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="628.3" y="2005" width="0.2" height="15.0" fill="rgb(242,99,10)" rx="2" ry="2" />
<text  x="631.28" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="132.5" y="1925" width="0.6" height="15.0" fill="rgb(220,38,51)" rx="2" ry="2" />
<text  x="135.53" y="1935.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="141.2" y="1909" width="0.2" height="15.0" fill="rgb(251,33,11)" rx="2" ry="2" />
<text  x="144.16" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="143.2" y="1557" width="0.2" height="15.0" fill="rgb(239,104,43)" rx="2" ry="2" />
<text  x="146.16" y="1567.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.02%)</title><rect x="394.0" y="1845" width="0.2" height="15.0" fill="rgb(224,95,4)" rx="2" ry="2" />
<text  x="397.04" y="1855.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="1147.9" y="1973" width="1.0" height="15.0" fill="rgb(218,111,27)" rx="2" ry="2" />
<text  x="1150.89" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="851.3" y="1829" width="0.2" height="15.0" fill="rgb(225,70,47)" rx="2" ry="2" />
<text  x="854.28" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (5 samples, 0.08%)</title><rect x="573.9" y="1957" width="1.0" height="15.0" fill="rgb(247,175,24)" rx="2" ry="2" />
<text  x="576.93" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (3 samples, 0.05%)</title><rect x="575.9" y="1989" width="0.6" height="15.0" fill="rgb(210,20,21)" rx="2" ry="2" />
<text  x="578.93" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (1 samples, 0.02%)</title><rect x="20.4" y="2005" width="0.2" height="15.0" fill="rgb(253,59,53)" rx="2" ry="2" />
<text  x="23.43" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="32.1" y="1973" width="0.4" height="15.0" fill="rgb(233,79,35)" rx="2" ry="2" />
<text  x="35.06" y="1983.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="929.7" y="1893" width="0.2" height="15.0" fill="rgb(225,83,10)" rx="2" ry="2" />
<text  x="932.69" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="113.9" y="53" width="0.2" height="15.0" fill="rgb(253,72,6)" rx="2" ry="2" />
<text  x="116.88" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (6 samples, 0.10%)</title><rect x="916.3" y="2037" width="1.2" height="15.0" fill="rgb(220,138,28)" rx="2" ry="2" />
<text  x="919.26" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="645.7" y="1941" width="0.6" height="15.0" fill="rgb(221,9,42)" rx="2" ry="2" />
<text  x="648.72" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="171.0" y="1973" width="0.2" height="15.0" fill="rgb(225,177,36)" rx="2" ry="2" />
<text  x="174.04" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="759.4" y="1669" width="0.2" height="15.0" fill="rgb(231,118,22)" rx="2" ry="2" />
<text  x="762.43" y="1679.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(250,129,11)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="627.7" y="2005" width="0.6" height="15.0" fill="rgb(213,6,14)" rx="2" ry="2" />
<text  x="630.68" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1164.5" y="1637" width="0.2" height="15.0" fill="rgb(212,41,23)" rx="2" ry="2" />
<text  x="1167.53" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.05%)</title><rect x="998.1" y="1989" width="0.6" height="15.0" fill="rgb(235,121,22)" rx="2" ry="2" />
<text  x="1001.08" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="69.8" y="1605" width="0.2" height="15.0" fill="rgb(221,132,38)" rx="2" ry="2" />
<text  x="72.76" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1525" width="17.1" height="15.0" fill="rgb(244,3,51)" rx="2" ry="2" />
<text  x="101.44" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1140.5" y="1845" width="0.2" height="15.0" fill="rgb(223,118,19)" rx="2" ry="2" />
<text  x="1143.47" y="1855.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.6" y="2005" width="0.8" height="15.0" fill="rgb(243,130,40)" rx="2" ry="2" />
<text  x="14.60" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="27.4" y="1957" width="0.2" height="15.0" fill="rgb(240,189,32)" rx="2" ry="2" />
<text  x="30.45" y="1967.5" ></text>
</g>
<g >
<title>epoll_ctl (376 samples, 6.39%)</title><rect x="409.1" y="2037" width="75.4" height="15.0" fill="rgb(250,86,31)" rx="2" ry="2" />
<text  x="412.08" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1100.8" y="1765" width="0.2" height="15.0" fill="rgb(232,149,33)" rx="2" ry="2" />
<text  x="1103.76" y="1775.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (9 samples, 0.15%)</title><rect x="457.8" y="1941" width="1.8" height="15.0" fill="rgb(237,47,28)" rx="2" ry="2" />
<text  x="460.81" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="933.9" y="1893" width="0.2" height="15.0" fill="rgb(212,2,28)" rx="2" ry="2" />
<text  x="936.91" y="1903.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="244.0" y="1829" width="1.0" height="15.0" fill="rgb(231,56,18)" rx="2" ry="2" />
<text  x="247.03" y="1839.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="784.1" y="1589" width="0.6" height="15.0" fill="rgb(226,108,45)" rx="2" ry="2" />
<text  x="787.10" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="535.6" y="1909" width="0.8" height="15.0" fill="rgb(252,136,38)" rx="2" ry="2" />
<text  x="538.63" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="807.8" y="1525" width="0.2" height="15.0" fill="rgb(234,199,20)" rx="2" ry="2" />
<text  x="810.76" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="932.9" y="1669" width="0.2" height="15.0" fill="rgb(242,116,43)" rx="2" ry="2" />
<text  x="935.90" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1140.5" y="2037" width="0.2" height="15.0" fill="rgb(225,38,11)" rx="2" ry="2" />
<text  x="1143.47" y="2047.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="677.0" y="1861" width="0.6" height="15.0" fill="rgb(246,132,50)" rx="2" ry="2" />
<text  x="680.01" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="69.8" y="1637" width="0.2" height="15.0" fill="rgb(215,91,53)" rx="2" ry="2" />
<text  x="72.76" y="1647.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="374.4" y="1605" width="0.2" height="15.0" fill="rgb(227,12,47)" rx="2" ry="2" />
<text  x="377.39" y="1615.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="282.5" y="1701" width="0.2" height="15.0" fill="rgb(235,64,17)" rx="2" ry="2" />
<text  x="285.54" y="1711.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="541.4" y="1637" width="0.2" height="15.0" fill="rgb(219,213,38)" rx="2" ry="2" />
<text  x="544.44" y="1647.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1128.4" y="1797" width="0.2" height="15.0" fill="rgb(242,43,24)" rx="2" ry="2" />
<text  x="1131.43" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="633.5" y="1909" width="0.2" height="15.0" fill="rgb(230,113,5)" rx="2" ry="2" />
<text  x="636.49" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="146.0" y="1829" width="0.2" height="15.0" fill="rgb(248,102,23)" rx="2" ry="2" />
<text  x="148.97" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (11 samples, 0.19%)</title><rect x="978.6" y="1973" width="2.2" height="15.0" fill="rgb(243,9,26)" rx="2" ry="2" />
<text  x="981.63" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="563.1" y="1845" width="0.2" height="15.0" fill="rgb(212,13,52)" rx="2" ry="2" />
<text  x="566.10" y="1855.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="575.3" y="1685" width="0.2" height="15.0" fill="rgb(248,191,31)" rx="2" ry="2" />
<text  x="578.33" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="62.3" y="1765" width="0.2" height="15.0" fill="rgb(251,224,42)" rx="2" ry="2" />
<text  x="65.34" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="49.9" y="1893" width="0.2" height="15.0" fill="rgb(230,192,19)" rx="2" ry="2" />
<text  x="52.91" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.7" y="1941" width="0.2" height="15.0" fill="rgb(227,114,46)" rx="2" ry="2" />
<text  x="123.70" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="597.6" y="1845" width="0.4" height="15.0" fill="rgb(240,7,32)" rx="2" ry="2" />
<text  x="600.59" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="30.3" y="1749" width="0.2" height="15.0" fill="rgb(246,226,11)" rx="2" ry="2" />
<text  x="33.25" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="279.5" y="1413" width="0.2" height="15.0" fill="rgb(249,78,12)" rx="2" ry="2" />
<text  x="282.53" y="1423.5" ></text>
</g>
<g >
<title>__wake_up_bit (2 samples, 0.03%)</title><rect x="749.2" y="1685" width="0.4" height="15.0" fill="rgb(222,86,10)" rx="2" ry="2" />
<text  x="752.20" y="1695.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="117.1" y="1797" width="0.2" height="15.0" fill="rgb(242,64,27)" rx="2" ry="2" />
<text  x="120.09" y="1807.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="522.8" y="1941" width="0.2" height="15.0" fill="rgb(246,152,54)" rx="2" ry="2" />
<text  x="525.79" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="851.3" y="1861" width="0.2" height="15.0" fill="rgb(237,42,23)" rx="2" ry="2" />
<text  x="854.28" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="117" width="15.9" height="15.0" fill="rgb(225,204,26)" rx="2" ry="2" />
<text  x="101.44" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="699.9" y="1925" width="0.2" height="15.0" fill="rgb(248,140,12)" rx="2" ry="2" />
<text  x="702.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (1 samples, 0.02%)</title><rect x="576.7" y="1973" width="0.2" height="15.0" fill="rgb(241,122,19)" rx="2" ry="2" />
<text  x="579.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="899.2" y="1989" width="0.4" height="15.0" fill="rgb(249,97,6)" rx="2" ry="2" />
<text  x="902.21" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="206.1" y="1845" width="0.4" height="15.0" fill="rgb(214,159,54)" rx="2" ry="2" />
<text  x="209.13" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (8 samples, 0.14%)</title><rect x="573.5" y="2005" width="1.6" height="15.0" fill="rgb(249,29,9)" rx="2" ry="2" />
<text  x="576.53" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="856.7" y="1861" width="0.6" height="15.0" fill="rgb(206,136,27)" rx="2" ry="2" />
<text  x="859.70" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="965.4" y="2021" width="0.2" height="15.0" fill="rgb(249,79,48)" rx="2" ry="2" />
<text  x="968.39" y="2031.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1140.5" y="1637" width="0.2" height="15.0" fill="rgb(232,116,21)" rx="2" ry="2" />
<text  x="1143.47" y="1647.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (19 samples, 0.32%)</title><rect x="1101.6" y="1893" width="3.8" height="15.0" fill="rgb(240,52,8)" rx="2" ry="2" />
<text  x="1104.56" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="579.7" y="1765" width="0.2" height="15.0" fill="rgb(237,160,40)" rx="2" ry="2" />
<text  x="582.75" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="757.8" y="1637" width="0.2" height="15.0" fill="rgb(231,120,48)" rx="2" ry="2" />
<text  x="760.83" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (4,645 samples, 78.94%)</title><rect x="91.2" y="2053" width="931.5" height="15.0" fill="rgb(217,59,50)" rx="2" ry="2" />
<text  x="94.22" y="2063.5" >[unknown]</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="369.6" y="1829" width="0.2" height="15.0" fill="rgb(235,35,37)" rx="2" ry="2" />
<text  x="372.58" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="568.7" y="1989" width="0.2" height="15.0" fill="rgb(245,149,53)" rx="2" ry="2" />
<text  x="571.72" y="1999.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (6 samples, 0.10%)</title><rect x="385.2" y="1861" width="1.2" height="15.0" fill="rgb(238,68,2)" rx="2" ry="2" />
<text  x="388.22" y="1871.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="274.9" y="1749" width="0.2" height="15.0" fill="rgb(225,113,15)" rx="2" ry="2" />
<text  x="277.92" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="600.8" y="1701" width="0.2" height="15.0" fill="rgb(212,148,44)" rx="2" ry="2" />
<text  x="603.80" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="399.7" y="1813" width="0.4" height="15.0" fill="rgb(243,92,28)" rx="2" ry="2" />
<text  x="402.66" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="625.7" y="2005" width="0.2" height="15.0" fill="rgb(218,40,34)" rx="2" ry="2" />
<text  x="628.67" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="901.8" y="1941" width="0.2" height="15.0" fill="rgb(245,139,46)" rx="2" ry="2" />
<text  x="904.82" y="1951.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="86.8" y="1941" width="0.4" height="15.0" fill="rgb(245,87,40)" rx="2" ry="2" />
<text  x="89.81" y="1951.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="133.3" y="1941" width="0.2" height="15.0" fill="rgb(212,155,13)" rx="2" ry="2" />
<text  x="136.33" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="69.8" y="1797" width="0.2" height="15.0" fill="rgb(222,144,29)" rx="2" ry="2" />
<text  x="72.76" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="153.8" y="1749" width="0.2" height="15.0" fill="rgb(224,129,4)" rx="2" ry="2" />
<text  x="156.79" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (13 samples, 0.22%)</title><rect x="168.4" y="1989" width="2.6" height="15.0" fill="rgb(210,58,20)" rx="2" ry="2" />
<text  x="171.43" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="524.2" y="1861" width="0.2" height="15.0" fill="rgb(236,142,50)" rx="2" ry="2" />
<text  x="527.19" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="752.0" y="1797" width="0.2" height="15.0" fill="rgb(242,53,1)" rx="2" ry="2" />
<text  x="755.01" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="69.8" y="1861" width="0.2" height="15.0" fill="rgb(244,223,14)" rx="2" ry="2" />
<text  x="72.76" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1143.3" y="1957" width="0.2" height="15.0" fill="rgb(233,3,9)" rx="2" ry="2" />
<text  x="1146.27" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="857.1" y="1845" width="0.2" height="15.0" fill="rgb(205,26,34)" rx="2" ry="2" />
<text  x="860.10" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="814.0" y="1413" width="0.2" height="15.0" fill="rgb(223,196,29)" rx="2" ry="2" />
<text  x="816.98" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="315.4" y="1493" width="0.2" height="15.0" fill="rgb(253,133,51)" rx="2" ry="2" />
<text  x="318.43" y="1503.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="114.3" y="101" width="0.2" height="15.0" fill="rgb(245,127,10)" rx="2" ry="2" />
<text  x="117.28" y="111.5" ></text>
</g>
<g >
<title>event_del_nolock_ (4 samples, 0.07%)</title><rect x="1138.7" y="2053" width="0.8" height="15.0" fill="rgb(227,8,44)" rx="2" ry="2" />
<text  x="1141.66" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (2 samples, 0.03%)</title><rect x="151.8" y="2005" width="0.4" height="15.0" fill="rgb(212,176,21)" rx="2" ry="2" />
<text  x="154.78" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="283.3" y="1685" width="0.6" height="15.0" fill="rgb(220,128,42)" rx="2" ry="2" />
<text  x="286.34" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.8" y="1973" width="0.2" height="15.0" fill="rgb(242,172,49)" rx="2" ry="2" />
<text  x="163.81" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="890.2" y="1909" width="0.4" height="15.0" fill="rgb(244,109,2)" rx="2" ry="2" />
<text  x="893.19" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (21 samples, 0.36%)</title><rect x="136.9" y="1909" width="4.3" height="15.0" fill="rgb(243,198,21)" rx="2" ry="2" />
<text  x="139.94" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="24.4" y="1877" width="0.2" height="15.0" fill="rgb(245,38,45)" rx="2" ry="2" />
<text  x="27.44" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (38 samples, 0.65%)</title><rect x="208.9" y="1909" width="7.7" height="15.0" fill="rgb(231,56,15)" rx="2" ry="2" />
<text  x="211.94" y="1919.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (6 samples, 0.10%)</title><rect x="158.4" y="1973" width="1.2" height="15.0" fill="rgb(249,152,3)" rx="2" ry="2" />
<text  x="161.40" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (9 samples, 0.15%)</title><rect x="48.3" y="1941" width="1.8" height="15.0" fill="rgb(234,71,31)" rx="2" ry="2" />
<text  x="51.30" y="1951.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="649.5" y="1637" width="0.2" height="15.0" fill="rgb(243,202,43)" rx="2" ry="2" />
<text  x="652.53" y="1647.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (3 samples, 0.05%)</title><rect x="515.0" y="1941" width="0.6" height="15.0" fill="rgb(223,138,32)" rx="2" ry="2" />
<text  x="517.97" y="1951.5" ></text>
</g>
<g >
<title>sock_alloc (48 samples, 0.82%)</title><rect x="378.4" y="1957" width="9.6" height="15.0" fill="rgb(246,152,9)" rx="2" ry="2" />
<text  x="381.40" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1091.5" y="1765" width="0.2" height="15.0" fill="rgb(211,78,10)" rx="2" ry="2" />
<text  x="1094.53" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="59.3" y="1861" width="0.6" height="15.0" fill="rgb(251,170,3)" rx="2" ry="2" />
<text  x="62.33" y="1871.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.03%)</title><rect x="454.8" y="1957" width="0.4" height="15.0" fill="rgb(214,178,29)" rx="2" ry="2" />
<text  x="457.81" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1164.5" y="1493" width="0.2" height="15.0" fill="rgb(211,88,3)" rx="2" ry="2" />
<text  x="1167.53" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (13 samples, 0.22%)</title><rect x="1170.3" y="2053" width="2.7" height="15.0" fill="rgb(241,59,35)" rx="2" ry="2" />
<text  x="1173.35" y="2063.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="246.4" y="1829" width="0.2" height="15.0" fill="rgb(246,179,48)" rx="2" ry="2" />
<text  x="249.44" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="363.6" y="1861" width="0.2" height="15.0" fill="rgb(237,122,25)" rx="2" ry="2" />
<text  x="366.56" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (12 samples, 0.20%)</title><rect x="144.8" y="1893" width="2.4" height="15.0" fill="rgb(251,46,49)" rx="2" ry="2" />
<text  x="147.77" y="1903.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="911.8" y="1989" width="0.2" height="15.0" fill="rgb(238,182,28)" rx="2" ry="2" />
<text  x="914.85" y="1999.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="860.3" y="1957" width="0.4" height="15.0" fill="rgb(211,37,52)" rx="2" ry="2" />
<text  x="863.31" y="1967.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.07%)</title><rect x="1105.4" y="1909" width="0.8" height="15.0" fill="rgb(242,53,17)" rx="2" ry="2" />
<text  x="1108.37" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="707.5" y="2037" width="0.2" height="15.0" fill="rgb(244,109,44)" rx="2" ry="2" />
<text  x="710.49" y="2047.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.02%)</title><rect x="11.2" y="1989" width="0.2" height="15.0" fill="rgb(249,62,12)" rx="2" ry="2" />
<text  x="14.20" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="832.4" y="1685" width="0.4" height="15.0" fill="rgb(232,82,9)" rx="2" ry="2" />
<text  x="835.43" y="1695.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (5 samples, 0.08%)</title><rect x="390.2" y="1909" width="1.0" height="15.0" fill="rgb(245,129,26)" rx="2" ry="2" />
<text  x="393.23" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="387.8" y="1925" width="0.2" height="15.0" fill="rgb(246,121,17)" rx="2" ry="2" />
<text  x="390.82" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="25.4" y="1397" width="0.2" height="15.0" fill="rgb(229,109,37)" rx="2" ry="2" />
<text  x="28.44" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="936.5" y="1941" width="0.2" height="15.0" fill="rgb(225,150,23)" rx="2" ry="2" />
<text  x="939.51" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1149.7" y="1973" width="0.2" height="15.0" fill="rgb(223,16,16)" rx="2" ry="2" />
<text  x="1152.69" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="600.8" y="1925" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="603.80" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="24.6" y="1925" width="1.0" height="15.0" fill="rgb(252,49,14)" rx="2" ry="2" />
<text  x="27.64" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="114.7" y="1429" width="0.2" height="15.0" fill="rgb(222,131,53)" rx="2" ry="2" />
<text  x="117.68" y="1439.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="25.4" y="1781" width="0.2" height="15.0" fill="rgb(216,228,49)" rx="2" ry="2" />
<text  x="28.44" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="856.1" y="1813" width="0.2" height="15.0" fill="rgb(241,8,13)" rx="2" ry="2" />
<text  x="859.09" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (29 samples, 0.49%)</title><rect x="1173.8" y="2021" width="5.8" height="15.0" fill="rgb(219,107,20)" rx="2" ry="2" />
<text  x="1176.76" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="95.6" y="2005" width="0.4" height="15.0" fill="rgb(240,171,26)" rx="2" ry="2" />
<text  x="98.63" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 1.10%)</title><rect x="637.1" y="2021" width="13.0" height="15.0" fill="rgb(251,67,47)" rx="2" ry="2" />
<text  x="640.10" y="2031.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1140.5" y="1733" width="0.2" height="15.0" fill="rgb(208,157,12)" rx="2" ry="2" />
<text  x="1143.47" y="1743.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="600.4" y="1877" width="0.2" height="15.0" fill="rgb(221,186,4)" rx="2" ry="2" />
<text  x="603.40" y="1887.5" ></text>
</g>
<g >
<title>bictcp_state (1 samples, 0.02%)</title><rect x="126.9" y="1669" width="0.2" height="15.0" fill="rgb(217,13,38)" rx="2" ry="2" />
<text  x="129.92" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="969.4" y="2005" width="0.2" height="15.0" fill="rgb(240,0,54)" rx="2" ry="2" />
<text  x="972.40" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="759.4" y="1685" width="0.2" height="15.0" fill="rgb(214,133,41)" rx="2" ry="2" />
<text  x="762.43" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1074.9" y="1781" width="0.2" height="15.0" fill="rgb(224,108,0)" rx="2" ry="2" />
<text  x="1077.89" y="1791.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="384.8" y="1877" width="0.2" height="15.0" fill="rgb(254,141,5)" rx="2" ry="2" />
<text  x="387.82" y="1887.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (43 samples, 0.73%)</title><rect x="795.9" y="1541" width="8.7" height="15.0" fill="rgb(235,47,44)" rx="2" ry="2" />
<text  x="798.93" y="1551.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1122.6" y="1941" width="0.2" height="15.0" fill="rgb(210,117,38)" rx="2" ry="2" />
<text  x="1125.62" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="87.8" y="1973" width="0.6" height="15.0" fill="rgb(213,28,26)" rx="2" ry="2" />
<text  x="90.81" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="426.5" y="1989" width="0.2" height="15.0" fill="rgb(216,134,4)" rx="2" ry="2" />
<text  x="429.53" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="160.8" y="1893" width="0.2" height="15.0" fill="rgb(227,98,46)" rx="2" ry="2" />
<text  x="163.81" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1094.5" y="1765" width="0.2" height="15.0" fill="rgb(227,73,38)" rx="2" ry="2" />
<text  x="1097.54" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="246.4" y="1717" width="0.2" height="15.0" fill="rgb(213,56,25)" rx="2" ry="2" />
<text  x="249.44" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="623.9" y="2037" width="1.8" height="15.0" fill="rgb(230,98,39)" rx="2" ry="2" />
<text  x="626.86" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="67.4" y="1797" width="0.2" height="15.0" fill="rgb(237,204,38)" rx="2" ry="2" />
<text  x="70.36" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="260.7" y="1813" width="0.4" height="15.0" fill="rgb(226,216,9)" rx="2" ry="2" />
<text  x="263.68" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="579.7" y="1957" width="0.2" height="15.0" fill="rgb(249,35,21)" rx="2" ry="2" />
<text  x="582.75" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="1149.7" y="1925" width="0.2" height="15.0" fill="rgb(242,76,36)" rx="2" ry="2" />
<text  x="1152.69" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="69.8" y="1493" width="0.2" height="15.0" fill="rgb(205,78,6)" rx="2" ry="2" />
<text  x="72.76" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1094.3" y="1861" width="0.4" height="15.0" fill="rgb(244,101,19)" rx="2" ry="2" />
<text  x="1097.34" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="965.4" y="2005" width="0.2" height="15.0" fill="rgb(254,52,27)" rx="2" ry="2" />
<text  x="968.39" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="850.1" y="1797" width="0.2" height="15.0" fill="rgb(213,37,48)" rx="2" ry="2" />
<text  x="853.08" y="1807.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.05%)</title><rect x="500.1" y="1925" width="0.6" height="15.0" fill="rgb(253,2,34)" rx="2" ry="2" />
<text  x="503.13" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="139.2" y="1877" width="0.2" height="15.0" fill="rgb(207,58,18)" rx="2" ry="2" />
<text  x="142.15" y="1887.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="1155.5" y="1685" width="0.2" height="15.0" fill="rgb(217,64,17)" rx="2" ry="2" />
<text  x="1158.51" y="1695.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.14%)</title><rect x="696.3" y="1877" width="1.6" height="15.0" fill="rgb(229,87,33)" rx="2" ry="2" />
<text  x="699.26" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="932.9" y="1765" width="0.2" height="15.0" fill="rgb(218,103,30)" rx="2" ry="2" />
<text  x="935.90" y="1775.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1015.9" y="2037" width="0.2" height="15.0" fill="rgb(225,20,39)" rx="2" ry="2" />
<text  x="1018.93" y="2047.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="25.4" y="1541" width="0.2" height="15.0" fill="rgb(226,187,8)" rx="2" ry="2" />
<text  x="28.44" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.7" y="1925" width="0.2" height="15.0" fill="rgb(210,175,43)" rx="2" ry="2" />
<text  x="123.70" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="544.0" y="1957" width="0.2" height="15.0" fill="rgb(209,136,14)" rx="2" ry="2" />
<text  x="547.05" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="69.8" y="1621" width="0.2" height="15.0" fill="rgb(220,138,33)" rx="2" ry="2" />
<text  x="72.76" y="1631.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="520.0" y="1973" width="0.2" height="15.0" fill="rgb(231,165,36)" rx="2" ry="2" />
<text  x="522.98" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (5 samples, 0.08%)</title><rect x="514.6" y="1957" width="1.0" height="15.0" fill="rgb(228,158,0)" rx="2" ry="2" />
<text  x="517.57" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="98.4" y="149" width="15.9" height="15.0" fill="rgb(235,4,1)" rx="2" ry="2" />
<text  x="101.44" y="159.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="160.8" y="1829" width="0.2" height="15.0" fill="rgb(223,85,6)" rx="2" ry="2" />
<text  x="163.81" y="1839.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="308.6" y="1829" width="0.2" height="15.0" fill="rgb(232,192,37)" rx="2" ry="2" />
<text  x="311.61" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="575.5" y="1877" width="0.2" height="15.0" fill="rgb(246,136,31)" rx="2" ry="2" />
<text  x="578.53" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="210.9" y="1861" width="0.2" height="15.0" fill="rgb(236,149,44)" rx="2" ry="2" />
<text  x="213.94" y="1871.5" ></text>
</g>
<g >
<title>__kfree_skb (102 samples, 1.73%)</title><rect x="1070.1" y="1925" width="20.4" height="15.0" fill="rgb(244,186,7)" rx="2" ry="2" />
<text  x="1073.07" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="478.5" y="1781" width="0.2" height="15.0" fill="rgb(246,44,4)" rx="2" ry="2" />
<text  x="481.47" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="148.4" y="1909" width="1.0" height="15.0" fill="rgb(226,60,46)" rx="2" ry="2" />
<text  x="151.38" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="391.0" y="1621" width="0.2" height="15.0" fill="rgb(229,125,2)" rx="2" ry="2" />
<text  x="394.03" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="918.5" y="1733" width="0.2" height="15.0" fill="rgb(226,147,27)" rx="2" ry="2" />
<text  x="921.46" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="990.5" y="1845" width="0.2" height="15.0" fill="rgb(212,7,5)" rx="2" ry="2" />
<text  x="993.46" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (3 samples, 0.05%)</title><rect x="579.3" y="2021" width="0.6" height="15.0" fill="rgb(224,157,42)" rx="2" ry="2" />
<text  x="582.34" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="707.7" y="1973" width="0.4" height="15.0" fill="rgb(219,158,36)" rx="2" ry="2" />
<text  x="710.69" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="644.1" y="1925" width="0.6" height="15.0" fill="rgb(232,51,46)" rx="2" ry="2" />
<text  x="647.12" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="550.1" y="1925" width="0.2" height="15.0" fill="rgb(239,195,34)" rx="2" ry="2" />
<text  x="553.06" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="156.2" y="2021" width="0.2" height="15.0" fill="rgb(240,62,12)" rx="2" ry="2" />
<text  x="159.20" y="2031.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="615.2" y="1877" width="0.4" height="15.0" fill="rgb(214,180,19)" rx="2" ry="2" />
<text  x="618.24" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.53%)</title><rect x="98.2" y="1749" width="18.1" height="15.0" fill="rgb(210,109,45)" rx="2" ry="2" />
<text  x="101.24" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (1 samples, 0.02%)</title><rect x="216.6" y="1909" width="0.2" height="15.0" fill="rgb(205,202,43)" rx="2" ry="2" />
<text  x="219.56" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="932.9" y="1717" width="0.2" height="15.0" fill="rgb(251,115,11)" rx="2" ry="2" />
<text  x="935.90" y="1727.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="1136.3" y="2053" width="0.4" height="15.0" fill="rgb(248,49,10)" rx="2" ry="2" />
<text  x="1139.25" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="994.3" y="1813" width="0.2" height="15.0" fill="rgb(210,226,16)" rx="2" ry="2" />
<text  x="997.27" y="1823.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="308.8" y="1829" width="0.4" height="15.0" fill="rgb(234,205,10)" rx="2" ry="2" />
<text  x="311.81" y="1839.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="857.7" y="1861" width="0.2" height="15.0" fill="rgb(250,111,22)" rx="2" ry="2" />
<text  x="860.70" y="1871.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="579.7" y="1557" width="0.2" height="15.0" fill="rgb(216,86,47)" rx="2" ry="2" />
<text  x="582.75" y="1567.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="646.7" y="1973" width="0.2" height="15.0" fill="rgb(216,209,6)" rx="2" ry="2" />
<text  x="649.73" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (24 samples, 0.41%)</title><rect x="981.0" y="1925" width="4.8" height="15.0" fill="rgb(241,205,17)" rx="2" ry="2" />
<text  x="984.03" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="146.0" y="1797" width="0.2" height="15.0" fill="rgb(254,192,50)" rx="2" ry="2" />
<text  x="148.97" y="1807.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="533.8" y="1957" width="0.2" height="15.0" fill="rgb(236,81,21)" rx="2" ry="2" />
<text  x="536.82" y="1967.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="577.7" y="1989" width="0.2" height="15.0" fill="rgb(222,55,43)" rx="2" ry="2" />
<text  x="580.74" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="541.8" y="1893" width="0.6" height="15.0" fill="rgb(206,150,15)" rx="2" ry="2" />
<text  x="544.84" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (6 samples, 0.10%)</title><rect x="882.8" y="1877" width="1.2" height="15.0" fill="rgb(218,151,53)" rx="2" ry="2" />
<text  x="885.77" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="143.2" y="1829" width="0.2" height="15.0" fill="rgb(224,146,8)" rx="2" ry="2" />
<text  x="146.16" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (6 samples, 0.10%)</title><rect x="542.4" y="1925" width="1.2" height="15.0" fill="rgb(223,56,5)" rx="2" ry="2" />
<text  x="545.44" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="1164.7" y="1909" width="0.8" height="15.0" fill="rgb(206,88,2)" rx="2" ry="2" />
<text  x="1167.73" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="327.1" y="2021" width="0.4" height="15.0" fill="rgb(226,162,20)" rx="2" ry="2" />
<text  x="330.06" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.1" y="1765" width="0.2" height="15.0" fill="rgb(254,225,27)" rx="2" ry="2" />
<text  x="844.05" y="1775.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="301.4" y="1797" width="0.2" height="15.0" fill="rgb(212,33,12)" rx="2" ry="2" />
<text  x="304.39" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="443.2" y="1973" width="0.8" height="15.0" fill="rgb(253,188,10)" rx="2" ry="2" />
<text  x="446.17" y="1983.5" ></text>
</g>
<g >
<title>task_work_run (2 samples, 0.03%)</title><rect x="841.3" y="1861" width="0.4" height="15.0" fill="rgb(219,63,5)" rx="2" ry="2" />
<text  x="844.25" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="776.5" y="1589" width="0.2" height="15.0" fill="rgb(222,103,28)" rx="2" ry="2" />
<text  x="779.48" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="146.0" y="1685" width="0.2" height="15.0" fill="rgb(236,163,48)" rx="2" ry="2" />
<text  x="148.97" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1093.7" y="1829" width="0.2" height="15.0" fill="rgb(223,227,17)" rx="2" ry="2" />
<text  x="1096.74" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.3" y="1989" width="0.2" height="15.0" fill="rgb(246,60,48)" rx="2" ry="2" />
<text  x="122.30" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="918.5" y="1973" width="0.2" height="15.0" fill="rgb(233,86,42)" rx="2" ry="2" />
<text  x="921.46" y="1983.5" ></text>
</g>
<g >
<title>ip_output (133 samples, 2.26%)</title><rect x="273.9" y="1781" width="26.7" height="15.0" fill="rgb(223,107,31)" rx="2" ry="2" />
<text  x="276.92" y="1791.5" >i..</text>
</g>
<g >
<title>sys_accept4 (310 samples, 5.27%)</title><rect x="342.9" y="1989" width="62.2" height="15.0" fill="rgb(217,23,0)" rx="2" ry="2" />
<text  x="345.90" y="1999.5" >sys_ac..</text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="389" width="16.1" height="15.0" fill="rgb(208,125,3)" rx="2" ry="2" />
<text  x="101.44" y="399.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="544.9" y="1973" width="0.2" height="15.0" fill="rgb(249,166,5)" rx="2" ry="2" />
<text  x="547.85" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (11 samples, 0.19%)</title><rect x="647.5" y="1989" width="2.2" height="15.0" fill="rgb(221,139,21)" rx="2" ry="2" />
<text  x="650.53" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1179.2" y="1989" width="0.2" height="15.0" fill="rgb(248,110,12)" rx="2" ry="2" />
<text  x="1182.17" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="575.5" y="1909" width="0.2" height="15.0" fill="rgb(234,38,10)" rx="2" ry="2" />
<text  x="578.53" y="1919.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="369.6" y="1589" width="0.2" height="15.0" fill="rgb(222,207,38)" rx="2" ry="2" />
<text  x="372.58" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1093.7" y="1781" width="0.2" height="15.0" fill="rgb(225,134,41)" rx="2" ry="2" />
<text  x="1096.74" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1053.8" y="1909" width="0.2" height="15.0" fill="rgb(226,17,53)" rx="2" ry="2" />
<text  x="1056.83" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="28.7" y="1925" width="0.2" height="15.0" fill="rgb(226,89,54)" rx="2" ry="2" />
<text  x="31.65" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1094.3" y="1877" width="0.4" height="15.0" fill="rgb(233,12,49)" rx="2" ry="2" />
<text  x="1097.34" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (6 samples, 0.10%)</title><rect x="1122.8" y="1941" width="1.2" height="15.0" fill="rgb(233,52,17)" rx="2" ry="2" />
<text  x="1125.82" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="73.2" y="1941" width="0.4" height="15.0" fill="rgb(230,41,41)" rx="2" ry="2" />
<text  x="76.17" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="390.8" y="1845" width="0.2" height="15.0" fill="rgb(241,54,1)" rx="2" ry="2" />
<text  x="393.83" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="399.7" y="1685" width="0.2" height="15.0" fill="rgb(228,144,31)" rx="2" ry="2" />
<text  x="402.66" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="544.2" y="1973" width="0.4" height="15.0" fill="rgb(217,70,15)" rx="2" ry="2" />
<text  x="547.25" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (3 samples, 0.05%)</title><rect x="25.8" y="1989" width="0.6" height="15.0" fill="rgb(219,228,3)" rx="2" ry="2" />
<text  x="28.84" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="68.0" y="1861" width="0.2" height="15.0" fill="rgb(235,19,48)" rx="2" ry="2" />
<text  x="70.96" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="246.4" y="1685" width="0.2" height="15.0" fill="rgb(222,143,3)" rx="2" ry="2" />
<text  x="249.44" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="477.7" y="1957" width="0.2" height="15.0" fill="rgb(251,222,7)" rx="2" ry="2" />
<text  x="480.67" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1177.6" y="1909" width="0.2" height="15.0" fill="rgb(221,6,1)" rx="2" ry="2" />
<text  x="1180.57" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="847.1" y="1925" width="0.4" height="15.0" fill="rgb(237,167,40)" rx="2" ry="2" />
<text  x="850.07" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="75.6" y="1733" width="0.2" height="15.0" fill="rgb(241,44,8)" rx="2" ry="2" />
<text  x="78.58" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="58.5" y="1893" width="0.6" height="15.0" fill="rgb(243,141,33)" rx="2" ry="2" />
<text  x="61.53" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="133.9" y="1925" width="0.2" height="15.0" fill="rgb(229,50,1)" rx="2" ry="2" />
<text  x="136.94" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="33.1" y="2005" width="0.2" height="15.0" fill="rgb(234,227,39)" rx="2" ry="2" />
<text  x="36.06" y="2015.5" ></text>
</g>
<g >
<title>[mcrouter] (142 samples, 2.41%)</title><rect x="193.9" y="2021" width="28.5" height="15.0" fill="rgb(224,148,16)" rx="2" ry="2" />
<text  x="196.90" y="2031.5" >[m..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1178.2" y="1989" width="0.2" height="15.0" fill="rgb(214,59,19)" rx="2" ry="2" />
<text  x="1181.17" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1054.2" y="1973" width="0.2" height="15.0" fill="rgb(233,83,9)" rx="2" ry="2" />
<text  x="1057.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="620.5" y="2037" width="0.6" height="15.0" fill="rgb(241,49,15)" rx="2" ry="2" />
<text  x="623.46" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (8 samples, 0.14%)</title><rect x="907.4" y="1973" width="1.6" height="15.0" fill="rgb(218,179,34)" rx="2" ry="2" />
<text  x="910.43" y="1983.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="576.3" y="1941" width="0.2" height="15.0" fill="rgb(239,181,42)" rx="2" ry="2" />
<text  x="579.34" y="1951.5" ></text>
</g>
<g >
<title>__libc_fcntl (1 samples, 0.02%)</title><rect x="223.8" y="2037" width="0.2" height="15.0" fill="rgb(249,97,11)" rx="2" ry="2" />
<text  x="226.78" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="885" width="16.3" height="15.0" fill="rgb(207,219,12)" rx="2" ry="2" />
<text  x="101.44" y="895.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1100.8" y="1829" width="0.2" height="15.0" fill="rgb(217,204,4)" rx="2" ry="2" />
<text  x="1103.76" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="402.1" y="1893" width="0.2" height="15.0" fill="rgb(219,205,53)" rx="2" ry="2" />
<text  x="405.06" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="501" width="16.1" height="15.0" fill="rgb(231,201,7)" rx="2" ry="2" />
<text  x="101.44" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="243.2" y="1781" width="0.2" height="15.0" fill="rgb(252,185,43)" rx="2" ry="2" />
<text  x="246.23" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="543.8" y="1973" width="0.4" height="15.0" fill="rgb(217,19,19)" rx="2" ry="2" />
<text  x="546.85" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="646.5" y="1973" width="0.2" height="15.0" fill="rgb(220,153,25)" rx="2" ry="2" />
<text  x="649.53" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="61.7" y="1877" width="0.2" height="15.0" fill="rgb(251,221,36)" rx="2" ry="2" />
<text  x="64.74" y="1887.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (4 samples, 0.07%)</title><rect x="1137.9" y="2053" width="0.8" height="15.0" fill="rgb(228,42,21)" rx="2" ry="2" />
<text  x="1140.86" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="150.4" y="1909" width="0.2" height="15.0" fill="rgb(244,8,52)" rx="2" ry="2" />
<text  x="153.38" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="144.2" y="1893" width="0.2" height="15.0" fill="rgb(237,23,32)" rx="2" ry="2" />
<text  x="147.16" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="69.8" y="1829" width="0.2" height="15.0" fill="rgb(238,135,12)" rx="2" ry="2" />
<text  x="72.76" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (26 samples, 0.44%)</title><rect x="1070.3" y="1893" width="5.2" height="15.0" fill="rgb(229,24,1)" rx="2" ry="2" />
<text  x="1073.28" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="610.8" y="1893" width="0.2" height="15.0" fill="rgb(248,217,7)" rx="2" ry="2" />
<text  x="613.83" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="67.4" y="1813" width="0.2" height="15.0" fill="rgb(246,201,18)" rx="2" ry="2" />
<text  x="70.36" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="160.8" y="1813" width="0.2" height="15.0" fill="rgb(228,195,42)" rx="2" ry="2" />
<text  x="163.81" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="649.5" y="1973" width="0.2" height="15.0" fill="rgb(224,87,10)" rx="2" ry="2" />
<text  x="652.53" y="1983.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="1015.3" y="2037" width="0.6" height="15.0" fill="rgb(210,191,24)" rx="2" ry="2" />
<text  x="1018.33" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="381.2" y="1781" width="0.2" height="15.0" fill="rgb(232,103,37)" rx="2" ry="2" />
<text  x="384.21" y="1791.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="538.8" y="1973" width="0.2" height="15.0" fill="rgb(220,98,7)" rx="2" ry="2" />
<text  x="541.83" y="1983.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="545.3" y="1733" width="0.2" height="15.0" fill="rgb(241,93,15)" rx="2" ry="2" />
<text  x="548.25" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="784.5" y="1349" width="0.2" height="15.0" fill="rgb(233,22,4)" rx="2" ry="2" />
<text  x="787.50" y="1359.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="24.4" y="1813" width="0.2" height="15.0" fill="rgb(229,210,20)" rx="2" ry="2" />
<text  x="27.44" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="210.3" y="1877" width="0.2" height="15.0" fill="rgb(247,89,32)" rx="2" ry="2" />
<text  x="213.34" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="493.9" y="1829" width="0.4" height="15.0" fill="rgb(244,116,40)" rx="2" ry="2" />
<text  x="496.91" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="945.7" y="1989" width="0.2" height="15.0" fill="rgb(239,21,12)" rx="2" ry="2" />
<text  x="948.74" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="494.1" y="1685" width="0.2" height="15.0" fill="rgb(219,24,31)" rx="2" ry="2" />
<text  x="497.11" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="148.0" y="1717" width="0.2" height="15.0" fill="rgb(227,209,12)" rx="2" ry="2" />
<text  x="150.97" y="1727.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="306.6" y="1813" width="0.2" height="15.0" fill="rgb(215,91,2)" rx="2" ry="2" />
<text  x="309.60" y="1823.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="614.0" y="1813" width="1.0" height="15.0" fill="rgb(246,52,53)" rx="2" ry="2" />
<text  x="617.04" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (1 samples, 0.02%)</title><rect x="133.5" y="1941" width="0.2" height="15.0" fill="rgb(245,137,15)" rx="2" ry="2" />
<text  x="136.54" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="994.3" y="1877" width="0.2" height="15.0" fill="rgb(250,219,14)" rx="2" ry="2" />
<text  x="997.27" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="859.3" y="1941" width="0.2" height="15.0" fill="rgb(213,175,33)" rx="2" ry="2" />
<text  x="862.30" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="143.2" y="1861" width="0.2" height="15.0" fill="rgb(236,192,28)" rx="2" ry="2" />
<text  x="146.16" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="582.8" y="1941" width="2.0" height="15.0" fill="rgb(239,71,32)" rx="2" ry="2" />
<text  x="585.75" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="276.7" y="1445" width="0.2" height="15.0" fill="rgb(226,151,44)" rx="2" ry="2" />
<text  x="279.72" y="1455.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="56.1" y="1909" width="0.2" height="15.0" fill="rgb(224,228,44)" rx="2" ry="2" />
<text  x="59.13" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="924.5" y="1909" width="0.6" height="15.0" fill="rgb(237,93,39)" rx="2" ry="2" />
<text  x="927.48" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="494.1" y="1797" width="0.2" height="15.0" fill="rgb(243,44,42)" rx="2" ry="2" />
<text  x="497.11" y="1807.5" ></text>
</g>
<g >
<title>_extract_crng (1 samples, 0.02%)</title><rect x="95.8" y="1557" width="0.2" height="15.0" fill="rgb(247,130,42)" rx="2" ry="2" />
<text  x="98.83" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="583.2" y="1733" width="0.2" height="15.0" fill="rgb(247,13,1)" rx="2" ry="2" />
<text  x="586.15" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="784.5" y="1509" width="0.2" height="15.0" fill="rgb(226,183,30)" rx="2" ry="2" />
<text  x="787.50" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="691.2" y="1845" width="0.2" height="15.0" fill="rgb(224,53,36)" rx="2" ry="2" />
<text  x="694.25" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="146.0" y="1845" width="0.2" height="15.0" fill="rgb(228,147,48)" rx="2" ry="2" />
<text  x="148.97" y="1855.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="1094.1" y="1845" width="0.2" height="15.0" fill="rgb(247,182,23)" rx="2" ry="2" />
<text  x="1097.14" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="1153.5" y="2053" width="0.2" height="15.0" fill="rgb(234,84,20)" rx="2" ry="2" />
<text  x="1156.50" y="2063.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="880.2" y="1909" width="0.4" height="15.0" fill="rgb(225,223,18)" rx="2" ry="2" />
<text  x="883.16" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1413" width="16.3" height="15.0" fill="rgb(226,171,4)" rx="2" ry="2" />
<text  x="101.44" y="1423.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="604.4" y="1989" width="0.2" height="15.0" fill="rgb(223,137,6)" rx="2" ry="2" />
<text  x="607.41" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="370.0" y="1925" width="1.8" height="15.0" fill="rgb(228,167,9)" rx="2" ry="2" />
<text  x="372.98" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="996.1" y="1957" width="0.2" height="15.0" fill="rgb(253,38,10)" rx="2" ry="2" />
<text  x="999.07" y="1967.5" ></text>
</g>
<g >
<title>__GI___getsockname (89 samples, 1.51%)</title><rect x="585.2" y="1941" width="17.8" height="15.0" fill="rgb(216,207,7)" rx="2" ry="2" />
<text  x="588.16" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="140.8" y="1861" width="0.2" height="15.0" fill="rgb(241,44,2)" rx="2" ry="2" />
<text  x="143.75" y="1871.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="47.5" y="1893" width="0.2" height="15.0" fill="rgb(237,40,41)" rx="2" ry="2" />
<text  x="50.50" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="563.7" y="1829" width="0.4" height="15.0" fill="rgb(246,41,6)" rx="2" ry="2" />
<text  x="566.70" y="1839.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="815.0" y="1621" width="0.2" height="15.0" fill="rgb(249,148,3)" rx="2" ry="2" />
<text  x="817.98" y="1631.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="615.8" y="1973" width="0.4" height="15.0" fill="rgb(220,56,6)" rx="2" ry="2" />
<text  x="618.84" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (14 samples, 0.24%)</title><rect x="855.1" y="1941" width="2.8" height="15.0" fill="rgb(225,198,8)" rx="2" ry="2" />
<text  x="858.09" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="575.5" y="1973" width="0.2" height="15.0" fill="rgb(235,52,50)" rx="2" ry="2" />
<text  x="578.53" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="77.0" y="1909" width="0.4" height="15.0" fill="rgb(213,4,37)" rx="2" ry="2" />
<text  x="79.98" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1164.5" y="1781" width="0.2" height="15.0" fill="rgb(217,98,9)" rx="2" ry="2" />
<text  x="1167.53" y="1791.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="243.2" y="1877" width="0.2" height="15.0" fill="rgb(230,4,34)" rx="2" ry="2" />
<text  x="246.23" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="814.0" y="1589" width="0.2" height="15.0" fill="rgb(226,182,20)" rx="2" ry="2" />
<text  x="816.98" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="315.4" y="1717" width="0.2" height="15.0" fill="rgb(248,183,30)" rx="2" ry="2" />
<text  x="318.43" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="494.1" y="1733" width="0.2" height="15.0" fill="rgb(246,178,54)" rx="2" ry="2" />
<text  x="497.11" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="855.7" y="1909" width="2.0" height="15.0" fill="rgb(221,220,11)" rx="2" ry="2" />
<text  x="858.69" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.46%)</title><rect x="98.4" y="1669" width="17.3" height="15.0" fill="rgb(247,20,24)" rx="2" ry="2" />
<text  x="101.44" y="1679.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="309.0" y="1797" width="0.2" height="15.0" fill="rgb(245,204,6)" rx="2" ry="2" />
<text  x="312.01" y="1807.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="453.4" y="1893" width="0.4" height="15.0" fill="rgb(228,66,7)" rx="2" ry="2" />
<text  x="456.40" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="391.0" y="1717" width="0.2" height="15.0" fill="rgb(254,210,40)" rx="2" ry="2" />
<text  x="394.03" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="579.7" y="1861" width="0.2" height="15.0" fill="rgb(245,34,43)" rx="2" ry="2" />
<text  x="582.75" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="477.7" y="1829" width="0.2" height="15.0" fill="rgb(213,203,37)" rx="2" ry="2" />
<text  x="480.67" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="889.2" y="1877" width="0.4" height="15.0" fill="rgb(249,58,46)" rx="2" ry="2" />
<text  x="892.18" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2 samples, 0.03%)</title><rect x="996.9" y="1973" width="0.4" height="15.0" fill="rgb(223,61,54)" rx="2" ry="2" />
<text  x="999.88" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (102 samples, 1.73%)</title><rect x="279.9" y="1733" width="20.5" height="15.0" fill="rgb(247,37,47)" rx="2" ry="2" />
<text  x="282.93" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (72 samples, 1.22%)</title><rect x="1153.7" y="2021" width="14.4" height="15.0" fill="rgb(251,83,13)" rx="2" ry="2" />
<text  x="1156.70" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="583.2" y="1845" width="0.2" height="15.0" fill="rgb(247,187,35)" rx="2" ry="2" />
<text  x="586.15" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="507.7" y="1957" width="0.5" height="15.0" fill="rgb(213,64,48)" rx="2" ry="2" />
<text  x="510.75" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="712.7" y="1813" width="0.4" height="15.0" fill="rgb(214,168,20)" rx="2" ry="2" />
<text  x="715.71" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="575.5" y="1845" width="0.2" height="15.0" fill="rgb(210,100,41)" rx="2" ry="2" />
<text  x="578.53" y="1855.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="755.6" y="1765" width="0.2" height="15.0" fill="rgb(249,140,10)" rx="2" ry="2" />
<text  x="758.62" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="620.3" y="2005" width="0.2" height="15.0" fill="rgb(246,160,18)" rx="2" ry="2" />
<text  x="623.25" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (1 samples, 0.02%)</title><rect x="916.1" y="2037" width="0.2" height="15.0" fill="rgb(236,184,5)" rx="2" ry="2" />
<text  x="919.06" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (5 samples, 0.08%)</title><rect x="1177.0" y="1989" width="1.0" height="15.0" fill="rgb(223,215,34)" rx="2" ry="2" />
<text  x="1179.96" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="950.6" y="1973" width="0.2" height="15.0" fill="rgb(223,227,52)" rx="2" ry="2" />
<text  x="953.55" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="91.0" y="2021" width="0.2" height="15.0" fill="rgb(244,45,12)" rx="2" ry="2" />
<text  x="94.02" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="147.6" y="1893" width="0.4" height="15.0" fill="rgb(230,184,8)" rx="2" ry="2" />
<text  x="150.57" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.14%)</title><rect x="842.1" y="1893" width="1.6" height="15.0" fill="rgb(249,33,31)" rx="2" ry="2" />
<text  x="845.06" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="28.7" y="1909" width="0.2" height="15.0" fill="rgb(248,155,8)" rx="2" ry="2" />
<text  x="31.65" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="301.0" y="1781" width="0.2" height="15.0" fill="rgb(229,97,17)" rx="2" ry="2" />
<text  x="303.99" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (1 samples, 0.02%)</title><rect x="1145.5" y="2053" width="0.2" height="15.0" fill="rgb(211,114,11)" rx="2" ry="2" />
<text  x="1148.48" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="711.1" y="1925" width="0.2" height="15.0" fill="rgb(223,63,33)" rx="2" ry="2" />
<text  x="714.10" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="673.6" y="1829" width="0.8" height="15.0" fill="rgb(208,9,7)" rx="2" ry="2" />
<text  x="676.60" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="518.6" y="1973" width="1.0" height="15.0" fill="rgb(247,114,49)" rx="2" ry="2" />
<text  x="521.58" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1148.3" y="1925" width="0.2" height="15.0" fill="rgb(207,72,43)" rx="2" ry="2" />
<text  x="1151.29" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="381.2" y="1765" width="0.2" height="15.0" fill="rgb(208,61,50)" rx="2" ry="2" />
<text  x="384.21" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (47 samples, 0.80%)</title><rect x="1109.0" y="1637" width="9.4" height="15.0" fill="rgb(232,227,5)" rx="2" ry="2" />
<text  x="1111.98" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (25 samples, 0.42%)</title><rect x="532.4" y="2005" width="5.0" height="15.0" fill="rgb(245,227,54)" rx="2" ry="2" />
<text  x="535.42" y="2015.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (4 samples, 0.07%)</title><rect x="847.9" y="1925" width="0.8" height="15.0" fill="rgb(216,18,39)" rx="2" ry="2" />
<text  x="850.87" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="617.4" y="1957" width="0.2" height="15.0" fill="rgb(216,61,22)" rx="2" ry="2" />
<text  x="620.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1029" width="16.3" height="15.0" fill="rgb(225,3,14)" rx="2" ry="2" />
<text  x="101.44" y="1039.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (4 samples, 0.07%)</title><rect x="863.1" y="1973" width="0.8" height="15.0" fill="rgb(207,83,36)" rx="2" ry="2" />
<text  x="866.11" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="405" width="16.1" height="15.0" fill="rgb(226,203,23)" rx="2" ry="2" />
<text  x="101.44" y="415.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (3 samples, 0.05%)</title><rect x="1154.3" y="1973" width="0.6" height="15.0" fill="rgb(234,181,20)" rx="2" ry="2" />
<text  x="1157.30" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="143.2" y="1765" width="0.2" height="15.0" fill="rgb(226,226,4)" rx="2" ry="2" />
<text  x="146.16" y="1775.5" ></text>
</g>
<g >
<title>event_set (2 samples, 0.03%)</title><rect x="539.0" y="1973" width="0.4" height="15.0" fill="rgb(218,178,54)" rx="2" ry="2" />
<text  x="542.03" y="1983.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="677.0" y="1845" width="0.6" height="15.0" fill="rgb(240,208,0)" rx="2" ry="2" />
<text  x="680.01" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="660.2" y="2005" width="0.4" height="15.0" fill="rgb(211,100,10)" rx="2" ry="2" />
<text  x="663.16" y="2015.5" ></text>
</g>
<g >
<title>__alloc_fd (9 samples, 0.15%)</title><rect x="345.1" y="1941" width="1.8" height="15.0" fill="rgb(217,220,26)" rx="2" ry="2" />
<text  x="348.11" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (4 samples, 0.07%)</title><rect x="131.5" y="2005" width="0.8" height="15.0" fill="rgb(218,132,24)" rx="2" ry="2" />
<text  x="134.53" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="699.9" y="1957" width="0.2" height="15.0" fill="rgb(209,165,29)" rx="2" ry="2" />
<text  x="702.87" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="106.5" y="37" width="0.2" height="15.0" fill="rgb(254,102,44)" rx="2" ry="2" />
<text  x="109.46" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="903.0" y="2005" width="0.6" height="15.0" fill="rgb(249,143,21)" rx="2" ry="2" />
<text  x="906.02" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1091.7" y="1909" width="0.6" height="15.0" fill="rgb(206,147,37)" rx="2" ry="2" />
<text  x="1094.73" y="1919.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.03%)</title><rect x="180.1" y="2021" width="0.4" height="15.0" fill="rgb(235,161,26)" rx="2" ry="2" />
<text  x="183.06" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (5 samples, 0.08%)</title><rect x="904.0" y="2037" width="1.0" height="15.0" fill="rgb(220,189,4)" rx="2" ry="2" />
<text  x="907.02" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="450.6" y="1909" width="0.2" height="15.0" fill="rgb(248,81,3)" rx="2" ry="2" />
<text  x="453.59" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="626.5" y="2037" width="0.2" height="15.0" fill="rgb(220,1,51)" rx="2" ry="2" />
<text  x="629.47" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (5 samples, 0.08%)</title><rect x="856.7" y="1893" width="1.0" height="15.0" fill="rgb(235,161,12)" rx="2" ry="2" />
<text  x="859.70" y="1903.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="1148.5" y="1957" width="0.2" height="15.0" fill="rgb(233,6,11)" rx="2" ry="2" />
<text  x="1151.49" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="668.4" y="1925" width="0.4" height="15.0" fill="rgb(228,173,20)" rx="2" ry="2" />
<text  x="671.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1144.5" y="1829" width="0.2" height="15.0" fill="rgb(252,25,22)" rx="2" ry="2" />
<text  x="1147.48" y="1839.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="301.0" y="1525" width="0.2" height="15.0" fill="rgb(239,125,36)" rx="2" ry="2" />
<text  x="303.99" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (32 samples, 0.54%)</title><rect x="1173.4" y="2037" width="6.4" height="15.0" fill="rgb(242,13,54)" rx="2" ry="2" />
<text  x="1176.35" y="2047.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="242.4" y="1941" width="0.2" height="15.0" fill="rgb(251,68,4)" rx="2" ry="2" />
<text  x="245.43" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="327.3" y="1877" width="0.2" height="15.0" fill="rgb(238,42,52)" rx="2" ry="2" />
<text  x="330.26" y="1887.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.07%)</title><rect x="781.3" y="1605" width="0.8" height="15.0" fill="rgb(222,120,54)" rx="2" ry="2" />
<text  x="784.29" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (47 samples, 0.80%)</title><rect x="1109.0" y="1653" width="9.4" height="15.0" fill="rgb(241,118,50)" rx="2" ry="2" />
<text  x="1111.98" y="1663.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="144.4" y="1893" width="0.4" height="15.0" fill="rgb(205,68,31)" rx="2" ry="2" />
<text  x="147.36" y="1903.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="347.5" y="1941" width="0.4" height="15.0" fill="rgb(206,118,21)" rx="2" ry="2" />
<text  x="350.52" y="1951.5" ></text>
</g>
<g >
<title>SYSC_getsockname (1 samples, 0.02%)</title><rect x="593.2" y="1893" width="0.2" height="15.0" fill="rgb(209,155,47)" rx="2" ry="2" />
<text  x="596.18" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="478.3" y="2005" width="0.6" height="15.0" fill="rgb(238,24,49)" rx="2" ry="2" />
<text  x="481.27" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="963.2" y="1861" width="0.2" height="15.0" fill="rgb(228,75,19)" rx="2" ry="2" />
<text  x="966.18" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (5 samples, 0.08%)</title><rect x="863.9" y="1989" width="1.0" height="15.0" fill="rgb(235,87,12)" rx="2" ry="2" />
<text  x="866.92" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="697.7" y="1573" width="0.2" height="15.0" fill="rgb(220,158,35)" rx="2" ry="2" />
<text  x="700.66" y="1583.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="425.9" y="1989" width="0.4" height="15.0" fill="rgb(240,49,51)" rx="2" ry="2" />
<text  x="428.93" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="98.4" y="1589" width="17.1" height="15.0" fill="rgb(212,177,9)" rx="2" ry="2" />
<text  x="101.44" y="1599.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="214.6" y="1797" width="0.2" height="15.0" fill="rgb(210,200,36)" rx="2" ry="2" />
<text  x="217.55" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="25.4" y="1509" width="0.2" height="15.0" fill="rgb(226,107,32)" rx="2" ry="2" />
<text  x="28.44" y="1519.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="494.1" y="1525" width="0.2" height="15.0" fill="rgb(209,19,17)" rx="2" ry="2" />
<text  x="497.11" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (92 samples, 1.56%)</title><rect x="132.3" y="2005" width="18.5" height="15.0" fill="rgb(254,229,3)" rx="2" ry="2" />
<text  x="135.33" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="950.4" y="1973" width="0.2" height="15.0" fill="rgb(216,152,14)" rx="2" ry="2" />
<text  x="953.35" y="1983.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(209,174,15)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (6 samples, 0.10%)</title><rect x="314.2" y="1749" width="1.2" height="15.0" fill="rgb(254,167,30)" rx="2" ry="2" />
<text  x="317.23" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (10 samples, 0.17%)</title><rect x="884.4" y="1941" width="2.0" height="15.0" fill="rgb(227,110,11)" rx="2" ry="2" />
<text  x="887.37" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="493.9" y="1845" width="0.4" height="15.0" fill="rgb(207,70,53)" rx="2" ry="2" />
<text  x="496.91" y="1855.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="55.3" y="1909" width="0.2" height="15.0" fill="rgb(221,150,40)" rx="2" ry="2" />
<text  x="58.32" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="857.7" y="1909" width="0.2" height="15.0" fill="rgb(244,201,29)" rx="2" ry="2" />
<text  x="860.70" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="804.4" y="1525" width="0.2" height="15.0" fill="rgb(252,177,26)" rx="2" ry="2" />
<text  x="807.35" y="1535.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.6" y="1925" width="0.8" height="15.0" fill="rgb(215,4,31)" rx="2" ry="2" />
<text  x="14.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="575.3" y="1733" width="0.2" height="15.0" fill="rgb(241,140,11)" rx="2" ry="2" />
<text  x="578.33" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="570.5" y="2005" width="0.2" height="15.0" fill="rgb(221,125,19)" rx="2" ry="2" />
<text  x="573.52" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="25.4" y="1813" width="0.2" height="15.0" fill="rgb(230,124,18)" rx="2" ry="2" />
<text  x="28.44" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (3 samples, 0.05%)</title><rect x="982.4" y="1909" width="0.6" height="15.0" fill="rgb(228,45,3)" rx="2" ry="2" />
<text  x="985.44" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.67%)</title><rect x="98.2" y="1877" width="19.7" height="15.0" fill="rgb(254,78,53)" rx="2" ry="2" />
<text  x="101.24" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="640.5" y="1941" width="0.4" height="15.0" fill="rgb(206,139,51)" rx="2" ry="2" />
<text  x="643.51" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1008.9" y="2005" width="0.2" height="15.0" fill="rgb(234,42,22)" rx="2" ry="2" />
<text  x="1011.91" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="918.5" y="1765" width="0.2" height="15.0" fill="rgb(208,120,35)" rx="2" ry="2" />
<text  x="921.46" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::close (4 samples, 0.07%)</title><rect x="858.1" y="1941" width="0.8" height="15.0" fill="rgb(210,215,30)" rx="2" ry="2" />
<text  x="861.10" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="276.5" y="1557" width="0.6" height="15.0" fill="rgb(226,37,10)" rx="2" ry="2" />
<text  x="279.52" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="327.3" y="1829" width="0.2" height="15.0" fill="rgb(239,186,54)" rx="2" ry="2" />
<text  x="330.26" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="623.7" y="2005" width="0.2" height="15.0" fill="rgb(213,11,2)" rx="2" ry="2" />
<text  x="626.66" y="2015.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="1155.5" y="1669" width="0.2" height="15.0" fill="rgb(243,177,33)" rx="2" ry="2" />
<text  x="1158.51" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="892.0" y="1861" width="0.2" height="15.0" fill="rgb(254,162,12)" rx="2" ry="2" />
<text  x="894.99" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="806.6" y="1493" width="0.2" height="15.0" fill="rgb(221,0,33)" rx="2" ry="2" />
<text  x="809.56" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1155.5" y="1893" width="0.2" height="15.0" fill="rgb(206,39,38)" rx="2" ry="2" />
<text  x="1158.51" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="994.3" y="1845" width="0.2" height="15.0" fill="rgb(208,30,24)" rx="2" ry="2" />
<text  x="997.27" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="813.0" y="1669" width="0.2" height="15.0" fill="rgb(220,38,17)" rx="2" ry="2" />
<text  x="815.98" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="644.1" y="1893" width="0.4" height="15.0" fill="rgb(244,166,10)" rx="2" ry="2" />
<text  x="647.12" y="1903.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="250.7" y="1861" width="0.2" height="15.0" fill="rgb(206,127,36)" rx="2" ry="2" />
<text  x="253.65" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="322.2" y="1845" width="0.6" height="15.0" fill="rgb(218,182,24)" rx="2" ry="2" />
<text  x="325.25" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="98.4" y="1077" width="16.3" height="15.0" fill="rgb(237,44,26)" rx="2" ry="2" />
<text  x="101.44" y="1087.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="883.4" y="1861" width="0.6" height="15.0" fill="rgb(213,125,51)" rx="2" ry="2" />
<text  x="886.37" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="757.8" y="1733" width="0.2" height="15.0" fill="rgb(232,181,36)" rx="2" ry="2" />
<text  x="760.83" y="1743.5" ></text>
</g>
<g >
<title>__close (612 samples, 10.40%)</title><rect x="720.9" y="1909" width="122.8" height="15.0" fill="rgb(207,213,21)" rx="2" ry="2" />
<text  x="723.93" y="1919.5" >__close</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="645.3" y="1909" width="0.2" height="15.0" fill="rgb(216,17,27)" rx="2" ry="2" />
<text  x="648.32" y="1919.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="1023.1" y="2053" width="0.4" height="15.0" fill="rgb(242,65,8)" rx="2" ry="2" />
<text  x="1026.15" y="2063.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="999.3" y="2037" width="0.4" height="15.0" fill="rgb(247,212,31)" rx="2" ry="2" />
<text  x="1002.28" y="2047.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="600.8" y="1605" width="0.2" height="15.0" fill="rgb(249,84,47)" rx="2" ry="2" />
<text  x="603.80" y="1615.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="516.6" y="1957" width="0.2" height="15.0" fill="rgb(223,185,42)" rx="2" ry="2" />
<text  x="519.57" y="1967.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.02%)</title><rect x="153.2" y="1765" width="0.2" height="15.0" fill="rgb(209,84,54)" rx="2" ry="2" />
<text  x="156.19" y="1775.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.3" y="2005" width="0.2" height="15.0" fill="rgb(207,217,38)" rx="2" ry="2" />
<text  x="125.30" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (11 samples, 0.19%)</title><rect x="703.1" y="2021" width="2.2" height="15.0" fill="rgb(205,179,16)" rx="2" ry="2" />
<text  x="706.08" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="143.2" y="1813" width="0.2" height="15.0" fill="rgb(223,178,10)" rx="2" ry="2" />
<text  x="146.16" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="576.5" y="1973" width="0.2" height="15.0" fill="rgb(225,124,36)" rx="2" ry="2" />
<text  x="579.54" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="369.6" y="1861" width="0.2" height="15.0" fill="rgb(222,30,49)" rx="2" ry="2" />
<text  x="372.58" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="160.8" y="1909" width="0.2" height="15.0" fill="rgb(217,202,41)" rx="2" ry="2" />
<text  x="163.81" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10 samples, 0.17%)</title><rect x="598.4" y="1861" width="2.0" height="15.0" fill="rgb(239,10,36)" rx="2" ry="2" />
<text  x="601.40" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.70%)</title><rect x="98.4" y="53" width="8.3" height="15.0" fill="rgb(208,23,6)" rx="2" ry="2" />
<text  x="101.44" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="897.4" y="1957" width="0.2" height="15.0" fill="rgb(222,153,13)" rx="2" ry="2" />
<text  x="900.41" y="1967.5" ></text>
</g>
<g >
<title>mcrouter (5,866 samples, 99.69%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(213,187,39)" rx="2" ry="2" />
<text  x="16.61" y="2079.5" >mcrouter</text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="837.2" y="1813" width="0.2" height="15.0" fill="rgb(215,68,11)" rx="2" ry="2" />
<text  x="840.24" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="837.8" y="1829" width="0.2" height="15.0" fill="rgb(223,37,47)" rx="2" ry="2" />
<text  x="840.85" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="426.7" y="1781" width="0.2" height="15.0" fill="rgb(238,19,1)" rx="2" ry="2" />
<text  x="429.73" y="1791.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="244.0" y="1781" width="1.0" height="15.0" fill="rgb(224,49,21)" rx="2" ry="2" />
<text  x="247.03" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="210.9" y="1637" width="0.2" height="15.0" fill="rgb(240,129,27)" rx="2" ry="2" />
<text  x="213.94" y="1647.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="523.6" y="1941" width="0.6" height="15.0" fill="rgb(212,117,9)" rx="2" ry="2" />
<text  x="526.59" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="649.5" y="1925" width="0.2" height="15.0" fill="rgb(214,30,11)" rx="2" ry="2" />
<text  x="652.53" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="132.5" y="1893" width="0.6" height="15.0" fill="rgb(212,129,12)" rx="2" ry="2" />
<text  x="135.53" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="880.6" y="1941" width="0.4" height="15.0" fill="rgb(215,2,44)" rx="2" ry="2" />
<text  x="883.56" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="381.2" y="1829" width="0.2" height="15.0" fill="rgb(236,60,22)" rx="2" ry="2" />
<text  x="384.21" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="147.8" y="1877" width="0.2" height="15.0" fill="rgb(215,88,40)" rx="2" ry="2" />
<text  x="150.77" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (136 samples, 2.31%)</title><rect x="195.1" y="1989" width="27.3" height="15.0" fill="rgb(208,143,48)" rx="2" ry="2" />
<text  x="198.10" y="1999.5" >f..</text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="218.4" y="1877" width="0.2" height="15.0" fill="rgb(246,38,27)" rx="2" ry="2" />
<text  x="221.37" y="1887.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2 samples, 0.03%)</title><rect x="1183.4" y="1941" width="0.4" height="15.0" fill="rgb(206,125,28)" rx="2" ry="2" />
<text  x="1186.38" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="643.7" y="1909" width="0.2" height="15.0" fill="rgb(245,45,17)" rx="2" ry="2" />
<text  x="646.72" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="260.1" y="1797" width="0.2" height="15.0" fill="rgb(212,30,7)" rx="2" ry="2" />
<text  x="263.08" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="71.8" y="1861" width="0.2" height="15.0" fill="rgb(220,143,17)" rx="2" ry="2" />
<text  x="74.77" y="1871.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(237,199,21)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="936.7" y="1941" width="0.2" height="15.0" fill="rgb(211,134,3)" rx="2" ry="2" />
<text  x="939.71" y="1951.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (3 samples, 0.05%)</title><rect x="1163.7" y="1909" width="0.6" height="15.0" fill="rgb(221,73,47)" rx="2" ry="2" />
<text  x="1166.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="950.4" y="2021" width="1.8" height="15.0" fill="rgb(231,156,14)" rx="2" ry="2" />
<text  x="953.35" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="67.8" y="1797" width="0.2" height="15.0" fill="rgb(249,158,10)" rx="2" ry="2" />
<text  x="70.76" y="1807.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="170.8" y="1973" width="0.2" height="15.0" fill="rgb(205,46,13)" rx="2" ry="2" />
<text  x="173.84" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="478.3" y="1861" width="0.6" height="15.0" fill="rgb(210,161,15)" rx="2" ry="2" />
<text  x="481.27" y="1871.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="146.0" y="1669" width="0.2" height="15.0" fill="rgb(212,89,41)" rx="2" ry="2" />
<text  x="148.97" y="1679.5" ></text>
</g>
<g >
<title>free_pages.part.91 (1 samples, 0.02%)</title><rect x="614.0" y="1701" width="0.2" height="15.0" fill="rgb(225,44,1)" rx="2" ry="2" />
<text  x="617.04" y="1711.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="148.4" y="1893" width="1.0" height="15.0" fill="rgb(215,93,53)" rx="2" ry="2" />
<text  x="151.38" y="1903.5" ></text>
</g>
<g >
<title>new_inode_pseudo (48 samples, 0.82%)</title><rect x="378.4" y="1941" width="9.6" height="15.0" fill="rgb(220,127,54)" rx="2" ry="2" />
<text  x="381.40" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="629.9" y="2005" width="0.2" height="15.0" fill="rgb(251,222,32)" rx="2" ry="2" />
<text  x="632.88" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="545.3" y="1829" width="0.2" height="15.0" fill="rgb(219,165,28)" rx="2" ry="2" />
<text  x="548.25" y="1839.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="964.6" y="2037" width="1.0" height="15.0" fill="rgb(236,207,34)" rx="2" ry="2" />
<text  x="967.59" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="136.7" y="1909" width="0.2" height="15.0" fill="rgb(243,23,0)" rx="2" ry="2" />
<text  x="139.74" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="134.7" y="1861" width="0.2" height="15.0" fill="rgb(249,98,43)" rx="2" ry="2" />
<text  x="137.74" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="468.0" y="1925" width="0.4" height="15.0" fill="rgb(213,108,31)" rx="2" ry="2" />
<text  x="471.04" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.12%)</title><rect x="249.4" y="1877" width="1.5" height="15.0" fill="rgb(232,152,52)" rx="2" ry="2" />
<text  x="252.45" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="111.1" y="53" width="0.8" height="15.0" fill="rgb(251,82,31)" rx="2" ry="2" />
<text  x="114.07" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (315 samples, 5.35%)</title><rect x="415.1" y="2021" width="63.2" height="15.0" fill="rgb(214,220,37)" rx="2" ry="2" />
<text  x="418.10" y="2031.5" >entry_..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="893.0" y="1973" width="0.2" height="15.0" fill="rgb(251,185,21)" rx="2" ry="2" />
<text  x="895.99" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="851.3" y="1877" width="0.2" height="15.0" fill="rgb(236,212,49)" rx="2" ry="2" />
<text  x="854.28" y="1887.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="87.2" y="1941" width="0.2" height="15.0" fill="rgb(221,85,44)" rx="2" ry="2" />
<text  x="90.21" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="892.2" y="1973" width="0.4" height="15.0" fill="rgb(211,126,54)" rx="2" ry="2" />
<text  x="895.19" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="374.4" y="1733" width="0.4" height="15.0" fill="rgb(252,187,34)" rx="2" ry="2" />
<text  x="377.39" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1152.1" y="2005" width="0.2" height="15.0" fill="rgb(208,0,18)" rx="2" ry="2" />
<text  x="1155.10" y="2015.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="244.2" y="1765" width="0.8" height="15.0" fill="rgb(206,169,19)" rx="2" ry="2" />
<text  x="247.24" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="901.2" y="2021" width="0.2" height="15.0" fill="rgb(224,8,9)" rx="2" ry="2" />
<text  x="904.22" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="213.8" y="1813" width="0.4" height="15.0" fill="rgb(229,198,46)" rx="2" ry="2" />
<text  x="216.75" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.36%)</title><rect x="98.4" y="453" width="16.1" height="15.0" fill="rgb(219,145,39)" rx="2" ry="2" />
<text  x="101.44" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="346.3" y="1925" width="0.4" height="15.0" fill="rgb(233,176,10)" rx="2" ry="2" />
<text  x="349.31" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (4 samples, 0.07%)</title><rect x="768.1" y="1701" width="0.8" height="15.0" fill="rgb(234,20,22)" rx="2" ry="2" />
<text  x="771.06" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.31%)</title><rect x="98.4" y="85" width="15.5" height="15.0" fill="rgb(232,120,36)" rx="2" ry="2" />
<text  x="101.44" y="95.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="1143.7" y="2005" width="0.2" height="15.0" fill="rgb(224,206,12)" rx="2" ry="2" />
<text  x="1146.67" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="74.8" y="1941" width="0.2" height="15.0" fill="rgb(212,78,34)" rx="2" ry="2" />
<text  x="77.78" y="1951.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (2 samples, 0.03%)</title><rect x="961.6" y="2005" width="0.4" height="15.0" fill="rgb(237,0,30)" rx="2" ry="2" />
<text  x="964.58" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (23 samples, 0.39%)</title><rect x="471.5" y="1973" width="4.6" height="15.0" fill="rgb(230,212,31)" rx="2" ry="2" />
<text  x="474.45" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="146.0" y="1733" width="0.2" height="15.0" fill="rgb(241,124,32)" rx="2" ry="2" />
<text  x="148.97" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="11.4" y="2037" width="1.0" height="15.0" fill="rgb(244,62,17)" rx="2" ry="2" />
<text  x="14.40" y="2047.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="892.6" y="1973" width="0.2" height="15.0" fill="rgb(235,220,49)" rx="2" ry="2" />
<text  x="895.59" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (48 samples, 0.82%)</title><rect x="1108.8" y="1717" width="9.6" height="15.0" fill="rgb(251,18,26)" rx="2" ry="2" />
<text  x="1111.78" y="1727.5" ></text>
</g>
<g >
<title>__fdget_raw (6 samples, 0.10%)</title><rect x="561.9" y="1925" width="1.2" height="15.0" fill="rgb(235,139,50)" rx="2" ry="2" />
<text  x="564.90" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (4 samples, 0.07%)</title><rect x="691.4" y="1893" width="0.9" height="15.0" fill="rgb(226,158,51)" rx="2" ry="2" />
<text  x="694.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="363.8" y="1605" width="0.2" height="15.0" fill="rgb(224,215,22)" rx="2" ry="2" />
<text  x="366.76" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="426.7" y="1733" width="0.2" height="15.0" fill="rgb(249,162,36)" rx="2" ry="2" />
<text  x="429.73" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="494.1" y="1621" width="0.2" height="15.0" fill="rgb(228,18,20)" rx="2" ry="2" />
<text  x="497.11" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.63%)</title><rect x="98.2" y="1813" width="19.3" height="15.0" fill="rgb(253,41,6)" rx="2" ry="2" />
<text  x="101.24" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="399.7" y="1701" width="0.2" height="15.0" fill="rgb(211,192,16)" rx="2" ry="2" />
<text  x="402.66" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="533.6" y="1973" width="0.4" height="15.0" fill="rgb(232,64,24)" rx="2" ry="2" />
<text  x="536.62" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1128.4" y="1893" width="0.2" height="15.0" fill="rgb(252,3,12)" rx="2" ry="2" />
<text  x="1131.43" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="982.0" y="1909" width="0.4" height="15.0" fill="rgb(242,19,50)" rx="2" ry="2" />
<text  x="985.04" y="1919.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="182.3" y="2037" width="0.4" height="15.0" fill="rgb(223,99,6)" rx="2" ry="2" />
<text  x="185.27" y="2047.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (7 samples, 0.12%)</title><rect x="385.0" y="1877" width="1.4" height="15.0" fill="rgb(222,98,30)" rx="2" ry="2" />
<text  x="388.02" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="399.7" y="1541" width="0.2" height="15.0" fill="rgb(207,124,22)" rx="2" ry="2" />
<text  x="402.66" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (29 samples, 0.49%)</title><rect x="124.5" y="1989" width="5.8" height="15.0" fill="rgb(250,109,43)" rx="2" ry="2" />
<text  x="127.51" y="1999.5" ></text>
</g>
<g >
<title>dput.part.26 (77 samples, 1.31%)</title><rect x="735.4" y="1781" width="15.4" height="15.0" fill="rgb(217,106,14)" rx="2" ry="2" />
<text  x="738.37" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (156 samples, 2.65%)</title><rect x="919.1" y="2037" width="31.3" height="15.0" fill="rgb(237,204,19)" rx="2" ry="2" />
<text  x="922.07" y="2047.5" >fa..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (2 samples, 0.03%)</title><rect x="501.9" y="2037" width="0.4" height="15.0" fill="rgb(230,121,37)" rx="2" ry="2" />
<text  x="504.93" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (483 samples, 8.21%)</title><rect x="1032.4" y="2021" width="96.8" height="15.0" fill="rgb(254,34,23)" rx="2" ry="2" />
<text  x="1035.37" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="600.6" y="1877" width="0.2" height="15.0" fill="rgb(235,66,26)" rx="2" ry="2" />
<text  x="603.60" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="236.8" y="1861" width="0.4" height="15.0" fill="rgb(238,124,35)" rx="2" ry="2" />
<text  x="239.82" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="654.5" y="1973" width="0.2" height="15.0" fill="rgb(207,152,22)" rx="2" ry="2" />
<text  x="657.55" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="680.0" y="1989" width="0.2" height="15.0" fill="rgb(209,223,25)" rx="2" ry="2" />
<text  x="683.02" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.6" y="1877" width="0.8" height="15.0" fill="rgb(248,36,45)" rx="2" ry="2" />
<text  x="14.60" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="932.9" y="1733" width="0.2" height="15.0" fill="rgb(247,140,23)" rx="2" ry="2" />
<text  x="935.90" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (12 samples, 0.20%)</title><rect x="47.7" y="1957" width="2.4" height="15.0" fill="rgb(242,96,42)" rx="2" ry="2" />
<text  x="50.70" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (147 samples, 2.50%)</title><rect x="271.7" y="1813" width="29.5" height="15.0" fill="rgb(206,115,1)" rx="2" ry="2" />
<text  x="274.71" y="1823.5" >ip..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (4 samples, 0.07%)</title><rect x="222.4" y="2037" width="0.8" height="15.0" fill="rgb(223,94,21)" rx="2" ry="2" />
<text  x="225.38" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (24 samples, 0.41%)</title><rect x="651.1" y="2021" width="4.9" height="15.0" fill="rgb(230,41,2)" rx="2" ry="2" />
<text  x="654.14" y="2031.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="521.8" y="1845" width="0.8" height="15.0" fill="rgb(227,88,48)" rx="2" ry="2" />
<text  x="524.79" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="207.3" y="1893" width="1.6" height="15.0" fill="rgb(245,217,36)" rx="2" ry="2" />
<text  x="210.34" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="508.6" y="1973" width="1.0" height="15.0" fill="rgb(246,69,50)" rx="2" ry="2" />
<text  x="511.55" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1170.7" y="2021" width="0.2" height="15.0" fill="rgb(207,74,37)" rx="2" ry="2" />
<text  x="1173.75" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (92 samples, 1.56%)</title><rect x="132.3" y="1989" width="18.5" height="15.0" fill="rgb(237,10,17)" rx="2" ry="2" />
<text  x="135.33" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (5 samples, 0.08%)</title><rect x="904.0" y="2005" width="1.0" height="15.0" fill="rgb(234,165,49)" rx="2" ry="2" />
<text  x="907.02" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="618.2" y="1925" width="1.1" height="15.0" fill="rgb(218,118,1)" rx="2" ry="2" />
<text  x="621.25" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="70.6" y="1941" width="0.2" height="15.0" fill="rgb(250,196,3)" rx="2" ry="2" />
<text  x="73.56" y="1951.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="75.6" y="1637" width="0.2" height="15.0" fill="rgb(222,166,21)" rx="2" ry="2" />
<text  x="78.58" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="699.9" y="1877" width="0.2" height="15.0" fill="rgb(237,4,43)" rx="2" ry="2" />
<text  x="702.87" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="892.0" y="1845" width="0.2" height="15.0" fill="rgb(235,204,23)" rx="2" ry="2" />
<text  x="894.99" y="1855.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="322.8" y="1909" width="0.2" height="15.0" fill="rgb(248,32,29)" rx="2" ry="2" />
<text  x="325.85" y="1919.5" ></text>
</g>
</g>
</svg>
