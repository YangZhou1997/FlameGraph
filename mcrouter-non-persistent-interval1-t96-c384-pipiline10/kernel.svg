<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="387.6" y="1909" width="0.2" height="15.0" fill="rgb(209,99,9)" rx="2" ry="2" />
<text  x="390.64" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="694.2" y="1989" width="0.2" height="15.0" fill="rgb(212,205,8)" rx="2" ry="2" />
<text  x="697.16" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (8 samples, 0.13%)</title><rect x="790.1" y="1541" width="1.6" height="15.0" fill="rgb(210,210,21)" rx="2" ry="2" />
<text  x="793.11" y="1551.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="203.1" y="2037" width="0.4" height="15.0" fill="rgb(229,11,37)" rx="2" ry="2" />
<text  x="206.09" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="489.9" y="1989" width="0.2" height="15.0" fill="rgb(252,219,48)" rx="2" ry="2" />
<text  x="492.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="37.2" y="1989" width="0.2" height="15.0" fill="rgb(211,176,7)" rx="2" ry="2" />
<text  x="40.22" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (22 samples, 0.37%)</title><rect x="803.2" y="1621" width="4.4" height="15.0" fill="rgb(209,198,19)" rx="2" ry="2" />
<text  x="806.22" y="1631.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="992.7" y="1925" width="1.4" height="15.0" fill="rgb(227,53,9)" rx="2" ry="2" />
<text  x="995.74" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (1 samples, 0.02%)</title><rect x="96.4" y="2021" width="0.2" height="15.0" fill="rgb(216,143,15)" rx="2" ry="2" />
<text  x="99.41" y="2031.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="260.1" y="1893" width="0.8" height="15.0" fill="rgb(237,178,26)" rx="2" ry="2" />
<text  x="263.10" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (8 samples, 0.13%)</title><rect x="840.2" y="1909" width="1.6" height="15.0" fill="rgb(210,86,48)" rx="2" ry="2" />
<text  x="843.17" y="1919.5" ></text>
</g>
<g >
<title>tcp_close (374 samples, 6.30%)</title><rect x="746.4" y="1749" width="74.3" height="15.0" fill="rgb(212,177,33)" rx="2" ry="2" />
<text  x="749.41" y="1759.5" >tcp_close</text>
</g>
<g >
<title>move_addr_to_user (2 samples, 0.03%)</title><rect x="671.5" y="1861" width="0.4" height="15.0" fill="rgb(238,198,50)" rx="2" ry="2" />
<text  x="674.52" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="616.3" y="1925" width="0.2" height="15.0" fill="rgb(248,63,46)" rx="2" ry="2" />
<text  x="619.29" y="1935.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1176.5" y="1973" width="0.2" height="15.0" fill="rgb(230,40,4)" rx="2" ry="2" />
<text  x="1179.49" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="697.5" y="1893" width="0.2" height="15.0" fill="rgb(240,222,6)" rx="2" ry="2" />
<text  x="700.54" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="852.5" y="1845" width="0.2" height="15.0" fill="rgb(229,92,28)" rx="2" ry="2" />
<text  x="855.49" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="534.6" y="1925" width="0.2" height="15.0" fill="rgb(240,219,6)" rx="2" ry="2" />
<text  x="537.64" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="691.2" y="1717" width="0.2" height="15.0" fill="rgb(238,120,18)" rx="2" ry="2" />
<text  x="694.18" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="218.4" y="1893" width="0.8" height="15.0" fill="rgb(239,137,17)" rx="2" ry="2" />
<text  x="221.39" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (466 samples, 7.85%)</title><rect x="104.2" y="2037" width="92.5" height="15.0" fill="rgb(223,115,33)" rx="2" ry="2" />
<text  x="107.16" y="2047.5" >[unknown]</text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="157.0" y="1877" width="0.2" height="15.0" fill="rgb(251,118,29)" rx="2" ry="2" />
<text  x="160.00" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (2 samples, 0.03%)</title><rect x="1151.5" y="2053" width="0.4" height="15.0" fill="rgb(215,139,41)" rx="2" ry="2" />
<text  x="1154.46" y="2063.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="77.5" y="1925" width="0.4" height="15.0" fill="rgb(253,21,31)" rx="2" ry="2" />
<text  x="80.54" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.08%)</title><rect x="348.5" y="2005" width="1.0" height="15.0" fill="rgb(223,103,14)" rx="2" ry="2" />
<text  x="351.51" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.5" y="1829" width="0.2" height="15.0" fill="rgb(237,201,21)" rx="2" ry="2" />
<text  x="887.47" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="392.4" y="1925" width="0.2" height="15.0" fill="rgb(237,215,32)" rx="2" ry="2" />
<text  x="395.41" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8 samples, 0.13%)</title><rect x="411.3" y="1909" width="1.6" height="15.0" fill="rgb(232,213,11)" rx="2" ry="2" />
<text  x="414.28" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="618.1" y="1989" width="0.4" height="15.0" fill="rgb(229,79,37)" rx="2" ry="2" />
<text  x="621.08" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1105.2" y="1781" width="0.2" height="15.0" fill="rgb(244,164,14)" rx="2" ry="2" />
<text  x="1108.18" y="1791.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (2 samples, 0.03%)</title><rect x="1184.2" y="2053" width="0.4" height="15.0" fill="rgb(235,177,49)" rx="2" ry="2" />
<text  x="1187.24" y="2063.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="598.4" y="1845" width="0.2" height="15.0" fill="rgb(220,51,33)" rx="2" ry="2" />
<text  x="601.41" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="299.6" y="1541" width="0.6" height="15.0" fill="rgb(244,169,6)" rx="2" ry="2" />
<text  x="302.64" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="1006.0" y="1989" width="0.2" height="15.0" fill="rgb(238,29,25)" rx="2" ry="2" />
<text  x="1009.05" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="497.7" y="1781" width="0.2" height="15.0" fill="rgb(205,72,2)" rx="2" ry="2" />
<text  x="500.69" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="171.9" y="1733" width="0.2" height="15.0" fill="rgb(225,187,11)" rx="2" ry="2" />
<text  x="174.90" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.13%)</title><rect x="584.5" y="1941" width="1.6" height="15.0" fill="rgb(230,53,13)" rx="2" ry="2" />
<text  x="587.51" y="1951.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="769.5" y="1493" width="0.1" height="15.0" fill="rgb(207,106,46)" rx="2" ry="2" />
<text  x="772.45" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="302.4" y="1685" width="0.2" height="15.0" fill="rgb(231,125,24)" rx="2" ry="2" />
<text  x="305.42" y="1695.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="72.0" y="1861" width="0.2" height="15.0" fill="rgb(219,34,7)" rx="2" ry="2" />
<text  x="74.98" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="356.5" y="1957" width="0.1" height="15.0" fill="rgb(250,64,3)" rx="2" ry="2" />
<text  x="359.45" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="565.0" y="1813" width="0.2" height="15.0" fill="rgb(208,68,26)" rx="2" ry="2" />
<text  x="568.04" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="697.5" y="1925" width="0.2" height="15.0" fill="rgb(252,156,17)" rx="2" ry="2" />
<text  x="700.54" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (7 samples, 0.12%)</title><rect x="223.2" y="1877" width="1.3" height="15.0" fill="rgb(242,213,48)" rx="2" ry="2" />
<text  x="226.15" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="642.9" y="1973" width="1.4" height="15.0" fill="rgb(208,223,8)" rx="2" ry="2" />
<text  x="645.91" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1150.3" y="1989" width="0.2" height="15.0" fill="rgb(251,223,46)" rx="2" ry="2" />
<text  x="1153.27" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="624.4" y="1941" width="0.6" height="15.0" fill="rgb(248,29,16)" rx="2" ry="2" />
<text  x="627.43" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (6 samples, 0.10%)</title><rect x="400.2" y="1877" width="1.1" height="15.0" fill="rgb(222,195,41)" rx="2" ry="2" />
<text  x="403.15" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="172.7" y="1989" width="0.2" height="15.0" fill="rgb(250,25,31)" rx="2" ry="2" />
<text  x="175.70" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="99.6" y="1925" width="0.2" height="15.0" fill="rgb(253,197,10)" rx="2" ry="2" />
<text  x="102.59" y="1935.5" ></text>
</g>
<g >
<title>tcp_drop (1 samples, 0.02%)</title><rect x="792.7" y="1397" width="0.2" height="15.0" fill="rgb(217,175,52)" rx="2" ry="2" />
<text  x="795.69" y="1407.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.6" y="1573" width="0.2" height="15.0" fill="rgb(230,15,11)" rx="2" ry="2" />
<text  x="124.64" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="555.1" y="1829" width="0.2" height="15.0" fill="rgb(226,176,26)" rx="2" ry="2" />
<text  x="558.10" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="70.6" y="1797" width="0.2" height="15.0" fill="rgb(215,93,30)" rx="2" ry="2" />
<text  x="73.59" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="895.4" y="1797" width="0.2" height="15.0" fill="rgb(219,46,3)" rx="2" ry="2" />
<text  x="898.40" y="1807.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="943.9" y="1941" width="0.2" height="15.0" fill="rgb(248,193,49)" rx="2" ry="2" />
<text  x="946.87" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="901.6" y="1861" width="0.2" height="15.0" fill="rgb(224,7,7)" rx="2" ry="2" />
<text  x="904.56" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="145.9" y="1893" width="0.4" height="15.0" fill="rgb(214,186,1)" rx="2" ry="2" />
<text  x="148.88" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="874.3" y="1941" width="1.0" height="15.0" fill="rgb(221,208,40)" rx="2" ry="2" />
<text  x="877.34" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="27.5" y="1893" width="0.2" height="15.0" fill="rgb(229,159,11)" rx="2" ry="2" />
<text  x="30.48" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="845.1" y="1733" width="0.2" height="15.0" fill="rgb(229,215,2)" rx="2" ry="2" />
<text  x="848.14" y="1743.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.05%)</title><rect x="697.1" y="1973" width="0.6" height="15.0" fill="rgb(250,218,11)" rx="2" ry="2" />
<text  x="700.14" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="258.7" y="1925" width="0.2" height="15.0" fill="rgb(253,224,0)" rx="2" ry="2" />
<text  x="261.71" y="1935.5" ></text>
</g>
<g >
<title>tcp_drop (1 samples, 0.02%)</title><rect x="208.1" y="1717" width="0.2" height="15.0" fill="rgb(216,215,45)" rx="2" ry="2" />
<text  x="211.06" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="468.3" y="1909" width="0.2" height="15.0" fill="rgb(208,153,6)" rx="2" ry="2" />
<text  x="471.29" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="506.8" y="1893" width="0.2" height="15.0" fill="rgb(213,211,18)" rx="2" ry="2" />
<text  x="509.83" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="89.1" y="1957" width="0.6" height="15.0" fill="rgb(220,4,7)" rx="2" ry="2" />
<text  x="92.06" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="110.1" y="37" width="0.6" height="15.0" fill="rgb(243,47,40)" rx="2" ry="2" />
<text  x="113.12" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="298.6" y="1605" width="0.8" height="15.0" fill="rgb(213,205,35)" rx="2" ry="2" />
<text  x="301.64" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="514.8" y="1669" width="0.2" height="15.0" fill="rgb(245,214,34)" rx="2" ry="2" />
<text  x="517.78" y="1679.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="138.3" y="1973" width="0.2" height="15.0" fill="rgb(215,150,35)" rx="2" ry="2" />
<text  x="141.33" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="79.1" y="1957" width="1.2" height="15.0" fill="rgb(209,184,34)" rx="2" ry="2" />
<text  x="82.13" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (26 samples, 0.44%)</title><rect x="778.2" y="1541" width="5.2" height="15.0" fill="rgb(238,36,34)" rx="2" ry="2" />
<text  x="781.19" y="1551.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="846.1" y="1909" width="0.4" height="15.0" fill="rgb(237,8,6)" rx="2" ry="2" />
<text  x="849.13" y="1919.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="1059.7" y="1685" width="0.2" height="15.0" fill="rgb(218,35,14)" rx="2" ry="2" />
<text  x="1062.68" y="1695.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="115.7" y="53" width="0.4" height="15.0" fill="rgb(230,111,22)" rx="2" ry="2" />
<text  x="118.68" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (6 samples, 0.10%)</title><rect x="133.8" y="1941" width="1.2" height="15.0" fill="rgb(253,37,18)" rx="2" ry="2" />
<text  x="136.76" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="159.6" y="1525" width="0.2" height="15.0" fill="rgb(250,101,47)" rx="2" ry="2" />
<text  x="162.59" y="1535.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="874.5" y="1829" width="0.8" height="15.0" fill="rgb(242,30,23)" rx="2" ry="2" />
<text  x="877.54" y="1839.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="635.6" y="1621" width="0.2" height="15.0" fill="rgb(254,170,10)" rx="2" ry="2" />
<text  x="638.56" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="165" width="13.5" height="15.0" fill="rgb(250,83,39)" rx="2" ry="2" />
<text  x="108.75" y="175.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="488.8" y="1925" width="0.6" height="15.0" fill="rgb(216,96,38)" rx="2" ry="2" />
<text  x="491.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 1.89%)</title><rect x="104.2" y="1957" width="22.2" height="15.0" fill="rgb(250,90,30)" rx="2" ry="2" />
<text  x="107.16" y="1967.5" >[..</text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="619.9" y="2021" width="0.2" height="15.0" fill="rgb(233,82,29)" rx="2" ry="2" />
<text  x="622.87" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getSecurityProtocol[abi:cxx11] (3 samples, 0.05%)</title><rect x="234.5" y="1957" width="0.6" height="15.0" fill="rgb(220,21,5)" rx="2" ry="2" />
<text  x="237.48" y="1967.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="256.9" y="1893" width="0.2" height="15.0" fill="rgb(213,135,47)" rx="2" ry="2" />
<text  x="259.93" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="941.3" y="1925" width="0.2" height="15.0" fill="rgb(247,76,48)" rx="2" ry="2" />
<text  x="944.29" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="783.0" y="1445" width="0.2" height="15.0" fill="rgb(229,8,30)" rx="2" ry="2" />
<text  x="785.96" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="317.7" y="1669" width="0.2" height="15.0" fill="rgb(241,123,40)" rx="2" ry="2" />
<text  x="320.71" y="1679.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="912.9" y="1925" width="0.2" height="15.0" fill="rgb(239,168,19)" rx="2" ry="2" />
<text  x="915.88" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="73.0" y="1845" width="0.2" height="15.0" fill="rgb(219,170,30)" rx="2" ry="2" />
<text  x="75.97" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="61.3" y="1829" width="0.2" height="15.0" fill="rgb(226,31,27)" rx="2" ry="2" />
<text  x="64.25" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="888.2" y="1829" width="0.2" height="15.0" fill="rgb(236,51,14)" rx="2" ry="2" />
<text  x="891.25" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="321.9" y="1749" width="0.4" height="15.0" fill="rgb(236,202,17)" rx="2" ry="2" />
<text  x="324.89" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1150.5" y="1941" width="0.2" height="15.0" fill="rgb(242,175,52)" rx="2" ry="2" />
<text  x="1153.47" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="401.3" y="1813" width="0.2" height="15.0" fill="rgb(252,205,26)" rx="2" ry="2" />
<text  x="404.35" y="1823.5" ></text>
</g>
<g >
<title>malloc@plt (3 samples, 0.05%)</title><rect x="1030.1" y="2037" width="0.6" height="15.0" fill="rgb(246,108,34)" rx="2" ry="2" />
<text  x="1033.08" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1105.2" y="1669" width="0.2" height="15.0" fill="rgb(229,228,50)" rx="2" ry="2" />
<text  x="1108.18" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="619.7" y="1797" width="0.2" height="15.0" fill="rgb(252,186,12)" rx="2" ry="2" />
<text  x="622.67" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="75.8" y="1845" width="0.2" height="15.0" fill="rgb(232,6,50)" rx="2" ry="2" />
<text  x="78.75" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="513.2" y="1829" width="0.2" height="15.0" fill="rgb(209,131,35)" rx="2" ry="2" />
<text  x="516.19" y="1839.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8 samples, 0.13%)</title><rect x="371.5" y="1957" width="1.6" height="15.0" fill="rgb(237,34,4)" rx="2" ry="2" />
<text  x="374.55" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (12 samples, 0.20%)</title><rect x="228.5" y="1877" width="2.4" height="15.0" fill="rgb(225,149,25)" rx="2" ry="2" />
<text  x="231.52" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="879.5" y="1925" width="0.2" height="15.0" fill="rgb(226,165,38)" rx="2" ry="2" />
<text  x="882.51" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="862.4" y="1717" width="0.2" height="15.0" fill="rgb(249,171,34)" rx="2" ry="2" />
<text  x="865.42" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="159.6" y="1621" width="0.2" height="15.0" fill="rgb(219,186,30)" rx="2" ry="2" />
<text  x="162.59" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="73.0" y="1925" width="0.2" height="15.0" fill="rgb(226,214,29)" rx="2" ry="2" />
<text  x="75.97" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="337.0" y="1557" width="0.2" height="15.0" fill="rgb(214,129,23)" rx="2" ry="2" />
<text  x="339.98" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="104.8" y="1701" width="18.2" height="15.0" fill="rgb(238,190,27)" rx="2" ry="2" />
<text  x="107.76" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="902.7" y="2005" width="0.4" height="15.0" fill="rgb(218,198,52)" rx="2" ry="2" />
<text  x="905.75" y="2015.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="280.2" y="1845" width="1.2" height="15.0" fill="rgb(238,175,11)" rx="2" ry="2" />
<text  x="283.17" y="1855.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1008.6" y="1925" width="0.2" height="15.0" fill="rgb(234,188,39)" rx="2" ry="2" />
<text  x="1011.63" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (411 samples, 6.92%)</title><rect x="15.8" y="2053" width="81.6" height="15.0" fill="rgb(215,216,50)" rx="2" ry="2" />
<text  x="18.76" y="2063.5" >[libevent..</text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="993.5" y="1893" width="0.6" height="15.0" fill="rgb(232,201,36)" rx="2" ry="2" />
<text  x="996.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (51 samples, 0.86%)</title><rect x="1107.8" y="1909" width="10.1" height="15.0" fill="rgb(218,101,4)" rx="2" ry="2" />
<text  x="1110.76" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="317.3" y="1557" width="0.2" height="15.0" fill="rgb(226,110,51)" rx="2" ry="2" />
<text  x="320.32" y="1567.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (4 samples, 0.07%)</title><rect x="197.7" y="2037" width="0.8" height="15.0" fill="rgb(211,53,12)" rx="2" ry="2" />
<text  x="200.73" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="160.2" y="1637" width="0.2" height="15.0" fill="rgb(243,204,26)" rx="2" ry="2" />
<text  x="163.18" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="480.4" y="1829" width="0.2" height="15.0" fill="rgb(212,1,25)" rx="2" ry="2" />
<text  x="483.41" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="338.6" y="1829" width="0.2" height="15.0" fill="rgb(215,211,31)" rx="2" ry="2" />
<text  x="341.57" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="931.0" y="1909" width="0.2" height="15.0" fill="rgb(221,0,43)" rx="2" ry="2" />
<text  x="933.96" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (6 samples, 0.10%)</title><rect x="1174.9" y="1973" width="1.2" height="15.0" fill="rgb(220,1,46)" rx="2" ry="2" />
<text  x="1177.90" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="514.8" y="1845" width="0.2" height="15.0" fill="rgb(239,143,34)" rx="2" ry="2" />
<text  x="517.78" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="574.2" y="1669" width="0.2" height="15.0" fill="rgb(243,117,5)" rx="2" ry="2" />
<text  x="577.18" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="700.3" y="2021" width="0.2" height="15.0" fill="rgb(218,228,37)" rx="2" ry="2" />
<text  x="703.32" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="74.4" y="1749" width="0.2" height="15.0" fill="rgb(232,86,46)" rx="2" ry="2" />
<text  x="77.36" y="1759.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1115.5" y="1397" width="0.2" height="15.0" fill="rgb(242,123,25)" rx="2" ry="2" />
<text  x="1118.51" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="572.2" y="2005" width="0.2" height="15.0" fill="rgb(239,0,54)" rx="2" ry="2" />
<text  x="575.19" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="171.7" y="1893" width="0.4" height="15.0" fill="rgb(230,118,51)" rx="2" ry="2" />
<text  x="174.70" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="565.0" y="1653" width="0.2" height="15.0" fill="rgb(206,209,38)" rx="2" ry="2" />
<text  x="568.04" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="73.0" y="1877" width="0.2" height="15.0" fill="rgb(253,212,47)" rx="2" ry="2" />
<text  x="75.97" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="750.0" y="1717" width="0.2" height="15.0" fill="rgb(212,108,25)" rx="2" ry="2" />
<text  x="752.98" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="220.6" y="1877" width="0.2" height="15.0" fill="rgb(206,89,54)" rx="2" ry="2" />
<text  x="223.57" y="1887.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="846.5" y="1925" width="0.2" height="15.0" fill="rgb(242,178,53)" rx="2" ry="2" />
<text  x="849.53" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="891.8" y="1925" width="0.8" height="15.0" fill="rgb(214,206,50)" rx="2" ry="2" />
<text  x="894.82" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="317.7" y="1605" width="0.2" height="15.0" fill="rgb(248,13,19)" rx="2" ry="2" />
<text  x="320.71" y="1615.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="467.5" y="1893" width="0.2" height="15.0" fill="rgb(254,67,41)" rx="2" ry="2" />
<text  x="470.50" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="829.8" y="1813" width="0.2" height="15.0" fill="rgb(226,56,20)" rx="2" ry="2" />
<text  x="832.84" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="852.1" y="1781" width="0.2" height="15.0" fill="rgb(240,132,34)" rx="2" ry="2" />
<text  x="855.09" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="713.0" y="1701" width="0.2" height="15.0" fill="rgb(208,201,52)" rx="2" ry="2" />
<text  x="716.03" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="697.5" y="1877" width="0.2" height="15.0" fill="rgb(227,60,27)" rx="2" ry="2" />
<text  x="700.54" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="630.8" y="1989" width="0.4" height="15.0" fill="rgb(254,194,44)" rx="2" ry="2" />
<text  x="633.79" y="1999.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (1 samples, 0.02%)</title><rect x="730.9" y="1717" width="0.2" height="15.0" fill="rgb(214,109,31)" rx="2" ry="2" />
<text  x="733.91" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (3 samples, 0.05%)</title><rect x="996.1" y="1909" width="0.6" height="15.0" fill="rgb(232,202,39)" rx="2" ry="2" />
<text  x="999.11" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18 samples, 0.30%)</title><rect x="393.4" y="1925" width="3.6" height="15.0" fill="rgb(246,201,19)" rx="2" ry="2" />
<text  x="396.40" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="642.3" y="1957" width="0.4" height="15.0" fill="rgb(229,150,46)" rx="2" ry="2" />
<text  x="645.31" y="1967.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1000.3" y="1989" width="0.2" height="15.0" fill="rgb(222,225,5)" rx="2" ry="2" />
<text  x="1003.29" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="967.5" y="1957" width="0.2" height="15.0" fill="rgb(215,174,14)" rx="2" ry="2" />
<text  x="970.51" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="79.7" y="1941" width="0.4" height="15.0" fill="rgb(242,37,36)" rx="2" ry="2" />
<text  x="82.73" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (88 samples, 1.48%)</title><rect x="517.0" y="2021" width="17.4" height="15.0" fill="rgb(232,2,21)" rx="2" ry="2" />
<text  x="519.96" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="748.8" y="1685" width="0.2" height="15.0" fill="rgb(231,39,26)" rx="2" ry="2" />
<text  x="751.79" y="1695.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="846.1" y="1893" width="0.2" height="15.0" fill="rgb(250,10,18)" rx="2" ry="2" />
<text  x="849.13" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="171.7" y="1829" width="0.4" height="15.0" fill="rgb(220,128,0)" rx="2" ry="2" />
<text  x="174.70" y="1839.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="677.7" y="1893" width="0.2" height="15.0" fill="rgb(235,24,44)" rx="2" ry="2" />
<text  x="680.67" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="622.6" y="1989" width="0.2" height="15.0" fill="rgb(235,139,31)" rx="2" ry="2" />
<text  x="625.65" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="600.6" y="1765" width="0.2" height="15.0" fill="rgb(214,14,51)" rx="2" ry="2" />
<text  x="603.60" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="39.6" y="1941" width="0.2" height="15.0" fill="rgb(251,142,29)" rx="2" ry="2" />
<text  x="42.60" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="798.5" y="1669" width="0.4" height="15.0" fill="rgb(224,113,17)" rx="2" ry="2" />
<text  x="801.45" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="819.3" y="1557" width="0.2" height="15.0" fill="rgb(220,193,2)" rx="2" ry="2" />
<text  x="822.31" y="1567.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::Data (3 samples, 0.05%)</title><rect x="571.4" y="1989" width="0.6" height="15.0" fill="rgb(241,101,18)" rx="2" ry="2" />
<text  x="574.39" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="144.1" y="1861" width="0.2" height="15.0" fill="rgb(251,26,27)" rx="2" ry="2" />
<text  x="147.09" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (12 samples, 0.20%)</title><rect x="1140.7" y="2037" width="2.4" height="15.0" fill="rgb(243,18,27)" rx="2" ry="2" />
<text  x="1143.73" y="2047.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="1004.3" y="2005" width="0.2" height="15.0" fill="rgb(225,69,19)" rx="2" ry="2" />
<text  x="1007.26" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="571.0" y="1909" width="0.2" height="15.0" fill="rgb(241,1,30)" rx="2" ry="2" />
<text  x="574.00" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="299.4" y="1621" width="1.0" height="15.0" fill="rgb(213,194,31)" rx="2" ry="2" />
<text  x="302.44" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="291.1" y="1573" width="0.2" height="15.0" fill="rgb(254,79,41)" rx="2" ry="2" />
<text  x="294.09" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (29 samples, 0.49%)</title><rect x="88.7" y="1989" width="5.7" height="15.0" fill="rgb(227,176,10)" rx="2" ry="2" />
<text  x="91.67" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="64.8" y="1861" width="0.2" height="15.0" fill="rgb(210,43,4)" rx="2" ry="2" />
<text  x="67.83" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="862.4" y="1701" width="0.2" height="15.0" fill="rgb(236,218,44)" rx="2" ry="2" />
<text  x="865.42" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (6 samples, 0.10%)</title><rect x="1141.5" y="2005" width="1.2" height="15.0" fill="rgb(208,225,5)" rx="2" ry="2" />
<text  x="1144.53" y="2015.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="333.8" y="1493" width="0.2" height="15.0" fill="rgb(235,59,42)" rx="2" ry="2" />
<text  x="336.80" y="1503.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="116.1" y="37" width="0.4" height="15.0" fill="rgb(246,38,43)" rx="2" ry="2" />
<text  x="119.08" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="892.4" y="1733" width="0.2" height="15.0" fill="rgb(229,213,17)" rx="2" ry="2" />
<text  x="895.42" y="1743.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="618.3" y="1925" width="0.2" height="15.0" fill="rgb(250,142,52)" rx="2" ry="2" />
<text  x="621.28" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="792.7" y="1461" width="0.2" height="15.0" fill="rgb(205,210,2)" rx="2" ry="2" />
<text  x="795.69" y="1471.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="321.9" y="1637" width="0.2" height="15.0" fill="rgb(244,210,51)" rx="2" ry="2" />
<text  x="324.89" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="291.1" y="1605" width="0.2" height="15.0" fill="rgb(207,81,1)" rx="2" ry="2" />
<text  x="294.09" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="271.2" y="1781" width="0.2" height="15.0" fill="rgb(239,148,0)" rx="2" ry="2" />
<text  x="274.23" y="1791.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="482.8" y="1957" width="0.2" height="15.0" fill="rgb(251,225,11)" rx="2" ry="2" />
<text  x="485.79" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (14 samples, 0.24%)</title><rect x="735.7" y="1669" width="2.8" height="15.0" fill="rgb(241,221,33)" rx="2" ry="2" />
<text  x="738.68" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.2" y="1749" width="0.2" height="15.0" fill="rgb(215,168,44)" rx="2" ry="2" />
<text  x="281.18" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="178.1" y="1957" width="0.4" height="15.0" fill="rgb(236,11,50)" rx="2" ry="2" />
<text  x="181.06" y="1967.5" ></text>
</g>
<g >
<title>all (5,940 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(230,78,7)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="483.0" y="1685" width="0.2" height="15.0" fill="rgb(213,111,16)" rx="2" ry="2" />
<text  x="485.99" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.31%)</title><rect x="105.2" y="1333" width="15.4" height="15.0" fill="rgb(238,117,21)" rx="2" ry="2" />
<text  x="108.15" y="1343.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1014.2" y="2005" width="0.2" height="15.0" fill="rgb(221,173,17)" rx="2" ry="2" />
<text  x="1017.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="114.7" y="37" width="0.2" height="15.0" fill="rgb(246,195,25)" rx="2" ry="2" />
<text  x="117.69" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="570.2" y="1989" width="0.4" height="15.0" fill="rgb(253,217,1)" rx="2" ry="2" />
<text  x="573.20" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="523.3" y="1941" width="0.2" height="15.0" fill="rgb(242,14,2)" rx="2" ry="2" />
<text  x="526.32" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="542.8" y="1941" width="0.2" height="15.0" fill="rgb(243,165,28)" rx="2" ry="2" />
<text  x="545.79" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="321.3" y="1685" width="0.2" height="15.0" fill="rgb(234,144,31)" rx="2" ry="2" />
<text  x="324.29" y="1695.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="96.0" y="2005" width="0.2" height="15.0" fill="rgb(253,1,13)" rx="2" ry="2" />
<text  x="99.02" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="392.4" y="1909" width="0.2" height="15.0" fill="rgb(210,83,4)" rx="2" ry="2" />
<text  x="395.41" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="27.5" y="1957" width="0.2" height="15.0" fill="rgb(243,146,1)" rx="2" ry="2" />
<text  x="30.48" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="256.7" y="1893" width="0.2" height="15.0" fill="rgb(242,215,22)" rx="2" ry="2" />
<text  x="259.73" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="534.6" y="1989" width="1.8" height="15.0" fill="rgb(231,24,24)" rx="2" ry="2" />
<text  x="537.64" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="100.8" y="1925" width="0.2" height="15.0" fill="rgb(247,26,40)" rx="2" ry="2" />
<text  x="103.78" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="208.1" y="1893" width="0.2" height="15.0" fill="rgb(235,120,31)" rx="2" ry="2" />
<text  x="211.06" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="697.5" y="1957" width="0.2" height="15.0" fill="rgb(209,164,26)" rx="2" ry="2" />
<text  x="700.54" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="507.0" y="1861" width="0.2" height="15.0" fill="rgb(229,192,45)" rx="2" ry="2" />
<text  x="510.03" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="513.4" y="1765" width="0.2" height="15.0" fill="rgb(248,177,27)" rx="2" ry="2" />
<text  x="516.39" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="497.7" y="1701" width="0.2" height="15.0" fill="rgb(232,33,27)" rx="2" ry="2" />
<text  x="500.69" y="1711.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="515.0" y="1909" width="0.2" height="15.0" fill="rgb(239,216,6)" rx="2" ry="2" />
<text  x="517.98" y="1919.5" ></text>
</g>
<g >
<title>inet_sendmsg (426 samples, 7.17%)</title><rect x="258.9" y="1925" width="84.6" height="15.0" fill="rgb(238,210,51)" rx="2" ry="2" />
<text  x="261.91" y="1935.5" >inet_send..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="894.0" y="1941" width="0.4" height="15.0" fill="rgb(207,11,21)" rx="2" ry="2" />
<text  x="897.01" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="73.0" y="1797" width="0.2" height="15.0" fill="rgb(228,155,9)" rx="2" ry="2" />
<text  x="75.97" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (2 samples, 0.03%)</title><rect x="620.1" y="2005" width="0.4" height="15.0" fill="rgb(214,2,45)" rx="2" ry="2" />
<text  x="623.06" y="2015.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="65.0" y="1973" width="0.2" height="15.0" fill="rgb(224,146,5)" rx="2" ry="2" />
<text  x="68.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="309" width="13.5" height="15.0" fill="rgb(247,82,42)" rx="2" ry="2" />
<text  x="108.75" y="319.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1128.8" y="1829" width="0.2" height="15.0" fill="rgb(230,18,43)" rx="2" ry="2" />
<text  x="1131.81" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="163.2" y="1861" width="0.2" height="15.0" fill="rgb(208,4,20)" rx="2" ry="2" />
<text  x="166.16" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="534.6" y="1957" width="1.8" height="15.0" fill="rgb(223,8,29)" rx="2" ry="2" />
<text  x="537.64" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="901.6" y="1653" width="0.2" height="15.0" fill="rgb(226,113,11)" rx="2" ry="2" />
<text  x="904.56" y="1663.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="865.2" y="1941" width="0.2" height="15.0" fill="rgb(226,198,5)" rx="2" ry="2" />
<text  x="868.20" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="896.6" y="1797" width="0.2" height="15.0" fill="rgb(248,3,2)" rx="2" ry="2" />
<text  x="899.59" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="893.4" y="1909" width="0.2" height="15.0" fill="rgb(222,62,49)" rx="2" ry="2" />
<text  x="896.41" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1621" width="0.2" height="15.0" fill="rgb(225,31,18)" rx="2" ry="2" />
<text  x="828.07" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="96.2" y="2005" width="0.2" height="15.0" fill="rgb(229,14,38)" rx="2" ry="2" />
<text  x="99.22" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="989.0" y="1973" width="0.2" height="15.0" fill="rgb(231,134,12)" rx="2" ry="2" />
<text  x="991.96" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="943.3" y="1941" width="0.2" height="15.0" fill="rgb(220,9,42)" rx="2" ry="2" />
<text  x="946.27" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1142.7" y="1973" width="0.2" height="15.0" fill="rgb(237,207,2)" rx="2" ry="2" />
<text  x="1145.72" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="480.4" y="1893" width="0.2" height="15.0" fill="rgb(218,81,5)" rx="2" ry="2" />
<text  x="483.41" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1059.7" y="1925" width="0.4" height="15.0" fill="rgb(225,36,2)" rx="2" ry="2" />
<text  x="1062.68" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="529.7" y="1973" width="0.2" height="15.0" fill="rgb(250,35,4)" rx="2" ry="2" />
<text  x="532.68" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="553.7" y="1957" width="0.2" height="15.0" fill="rgb(219,109,6)" rx="2" ry="2" />
<text  x="556.71" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="166.5" y="2021" width="0.2" height="15.0" fill="rgb(222,160,46)" rx="2" ry="2" />
<text  x="169.54" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="483.0" y="1781" width="0.2" height="15.0" fill="rgb(236,186,9)" rx="2" ry="2" />
<text  x="485.99" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="46.0" y="1925" width="0.6" height="15.0" fill="rgb(238,84,7)" rx="2" ry="2" />
<text  x="48.96" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (7 samples, 0.12%)</title><rect x="570.6" y="2005" width="1.4" height="15.0" fill="rgb(223,56,35)" rx="2" ry="2" />
<text  x="573.60" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (102 samples, 1.72%)</title><rect x="657.6" y="2037" width="20.3" height="15.0" fill="rgb(229,215,49)" rx="2" ry="2" />
<text  x="660.61" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="773.2" y="1541" width="0.4" height="15.0" fill="rgb(246,210,27)" rx="2" ry="2" />
<text  x="776.23" y="1551.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 0.15%)</title><rect x="10.6" y="1973" width="1.8" height="15.0" fill="rgb(213,59,39)" rx="2" ry="2" />
<text  x="13.60" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="757" width="14.3" height="15.0" fill="rgb(211,19,16)" rx="2" ry="2" />
<text  x="108.75" y="767.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1129.2" y="2021" width="0.2" height="15.0" fill="rgb(229,127,1)" rx="2" ry="2" />
<text  x="1132.21" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="222.6" y="1781" width="0.2" height="15.0" fill="rgb(224,222,46)" rx="2" ry="2" />
<text  x="225.56" y="1791.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="73.0" y="1621" width="0.2" height="15.0" fill="rgb(227,170,34)" rx="2" ry="2" />
<text  x="75.97" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.2" y="1845" width="0.2" height="15.0" fill="rgb(208,223,54)" rx="2" ry="2" />
<text  x="163.18" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="480.4" y="1845" width="0.2" height="15.0" fill="rgb(214,77,26)" rx="2" ry="2" />
<text  x="483.41" y="1855.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="334.0" y="1253" width="0.2" height="15.0" fill="rgb(235,131,39)" rx="2" ry="2" />
<text  x="337.00" y="1263.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="373.9" y="1893" width="0.2" height="15.0" fill="rgb(213,91,5)" rx="2" ry="2" />
<text  x="376.93" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="188.2" y="1925" width="0.2" height="15.0" fill="rgb(221,123,18)" rx="2" ry="2" />
<text  x="191.19" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (7 samples, 0.12%)</title><rect x="840.4" y="1893" width="1.4" height="15.0" fill="rgb(218,127,35)" rx="2" ry="2" />
<text  x="843.37" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="662.8" y="1925" width="0.4" height="15.0" fill="rgb(237,66,9)" rx="2" ry="2" />
<text  x="665.77" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="14.8" y="1925" width="1.0" height="15.0" fill="rgb(219,211,45)" rx="2" ry="2" />
<text  x="17.77" y="1935.5" ></text>
</g>
<g >
<title>sock_sendmsg (446 samples, 7.51%)</title><rect x="257.9" y="1941" width="88.6" height="15.0" fill="rgb(208,43,47)" rx="2" ry="2" />
<text  x="260.92" y="1951.5" >sock_sendmsg</text>
</g>
<g >
<title>copy_msghdr_from_user (8 samples, 0.13%)</title><rect x="255.7" y="1941" width="1.6" height="15.0" fill="rgb(242,167,22)" rx="2" ry="2" />
<text  x="258.73" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="600.6" y="1845" width="0.2" height="15.0" fill="rgb(249,89,40)" rx="2" ry="2" />
<text  x="603.60" y="1855.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="268.8" y="1861" width="0.6" height="15.0" fill="rgb(212,152,3)" rx="2" ry="2" />
<text  x="271.85" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (3 samples, 0.05%)</title><rect x="84.9" y="1909" width="0.6" height="15.0" fill="rgb(233,116,11)" rx="2" ry="2" />
<text  x="87.89" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (65 samples, 1.09%)</title><rect x="587.1" y="1909" width="12.9" height="15.0" fill="rgb(230,49,45)" rx="2" ry="2" />
<text  x="590.09" y="1919.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="625.8" y="1925" width="0.2" height="15.0" fill="rgb(211,56,40)" rx="2" ry="2" />
<text  x="628.82" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="458.6" y="1973" width="0.2" height="15.0" fill="rgb(232,74,43)" rx="2" ry="2" />
<text  x="461.56" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="259.9" y="1893" width="0.2" height="15.0" fill="rgb(250,215,37)" rx="2" ry="2" />
<text  x="262.91" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (1 samples, 0.02%)</title><rect x="168.3" y="2021" width="0.2" height="15.0" fill="rgb(245,152,46)" rx="2" ry="2" />
<text  x="171.33" y="2031.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (5 samples, 0.08%)</title><rect x="748.0" y="1733" width="1.0" height="15.0" fill="rgb(220,17,12)" rx="2" ry="2" />
<text  x="751.00" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="63.4" y="1909" width="0.2" height="15.0" fill="rgb(228,40,11)" rx="2" ry="2" />
<text  x="66.44" y="1919.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="896.4" y="1893" width="0.2" height="15.0" fill="rgb(236,19,40)" rx="2" ry="2" />
<text  x="899.39" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="930.8" y="1909" width="0.2" height="15.0" fill="rgb(241,120,8)" rx="2" ry="2" />
<text  x="933.76" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="573.2" y="1861" width="0.2" height="15.0" fill="rgb(206,198,18)" rx="2" ry="2" />
<text  x="576.18" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (3 samples, 0.05%)</title><rect x="839.4" y="1925" width="0.6" height="15.0" fill="rgb(206,93,10)" rx="2" ry="2" />
<text  x="842.38" y="1935.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (3 samples, 0.05%)</title><rect x="532.5" y="1989" width="0.6" height="15.0" fill="rgb(235,196,51)" rx="2" ry="2" />
<text  x="535.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="186.2" y="2021" width="0.4" height="15.0" fill="rgb(214,11,20)" rx="2" ry="2" />
<text  x="189.21" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="743.0" y="1765" width="0.6" height="15.0" fill="rgb(248,202,6)" rx="2" ry="2" />
<text  x="746.03" y="1775.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="702.5" y="1909" width="0.2" height="15.0" fill="rgb(227,220,10)" rx="2" ry="2" />
<text  x="705.51" y="1919.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (6 samples, 0.10%)</title><rect x="513.8" y="1893" width="1.2" height="15.0" fill="rgb(207,165,53)" rx="2" ry="2" />
<text  x="516.78" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="392.4" y="1749" width="0.2" height="15.0" fill="rgb(218,45,49)" rx="2" ry="2" />
<text  x="395.41" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="293.5" y="1733" width="0.2" height="15.0" fill="rgb(223,152,25)" rx="2" ry="2" />
<text  x="296.48" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="468.3" y="1925" width="0.2" height="15.0" fill="rgb(206,3,39)" rx="2" ry="2" />
<text  x="471.29" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (10 samples, 0.17%)</title><rect x="905.3" y="2037" width="2.0" height="15.0" fill="rgb(214,196,32)" rx="2" ry="2" />
<text  x="908.33" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output2 (50 samples, 0.84%)</title><rect x="1108.0" y="1797" width="9.9" height="15.0" fill="rgb(233,179,12)" rx="2" ry="2" />
<text  x="1110.96" y="1807.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (37 samples, 0.62%)</title><rect x="330.4" y="1797" width="7.4" height="15.0" fill="rgb(227,157,33)" rx="2" ry="2" />
<text  x="333.43" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1179.3" y="2037" width="0.2" height="15.0" fill="rgb(205,227,28)" rx="2" ry="2" />
<text  x="1182.27" y="2047.5" ></text>
</g>
<g >
<title>accept4 (6 samples, 0.10%)</title><rect x="21.9" y="2005" width="1.2" height="15.0" fill="rgb(240,194,41)" rx="2" ry="2" />
<text  x="24.92" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="185.2" y="2021" width="0.4" height="15.0" fill="rgb(228,150,14)" rx="2" ry="2" />
<text  x="188.21" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="890.6" y="1925" width="0.2" height="15.0" fill="rgb(215,106,49)" rx="2" ry="2" />
<text  x="893.63" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="118.9" y="37" width="0.2" height="15.0" fill="rgb(213,222,33)" rx="2" ry="2" />
<text  x="121.86" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="574.2" y="1893" width="0.2" height="15.0" fill="rgb(238,99,43)" rx="2" ry="2" />
<text  x="577.18" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="337.4" y="1669" width="0.2" height="15.0" fill="rgb(224,192,34)" rx="2" ry="2" />
<text  x="340.38" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="929.8" y="1925" width="0.6" height="15.0" fill="rgb(234,180,38)" rx="2" ry="2" />
<text  x="932.76" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (6 samples, 0.10%)</title><rect x="55.7" y="1973" width="1.2" height="15.0" fill="rgb(210,160,39)" rx="2" ry="2" />
<text  x="58.69" y="1983.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (12 samples, 0.20%)</title><rect x="97.4" y="2053" width="2.4" height="15.0" fill="rgb(232,227,31)" rx="2" ry="2" />
<text  x="100.41" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (11 samples, 0.19%)</title><rect x="899.2" y="1989" width="2.2" height="15.0" fill="rgb(236,25,48)" rx="2" ry="2" />
<text  x="902.17" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="489.7" y="1861" width="0.2" height="15.0" fill="rgb(253,81,49)" rx="2" ry="2" />
<text  x="492.75" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (6 samples, 0.10%)</title><rect x="520.3" y="1989" width="1.2" height="15.0" fill="rgb(217,34,36)" rx="2" ry="2" />
<text  x="523.34" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="657.0" y="2037" width="0.4" height="15.0" fill="rgb(233,187,40)" rx="2" ry="2" />
<text  x="660.01" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="635.6" y="1589" width="0.2" height="15.0" fill="rgb(223,29,27)" rx="2" ry="2" />
<text  x="638.56" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="348.7" y="1957" width="0.8" height="15.0" fill="rgb(223,17,19)" rx="2" ry="2" />
<text  x="351.70" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="635.6" y="1845" width="0.2" height="15.0" fill="rgb(206,11,27)" rx="2" ry="2" />
<text  x="638.56" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1040.8" y="2053" width="0.2" height="15.0" fill="rgb(222,13,54)" rx="2" ry="2" />
<text  x="1043.81" y="2063.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (3 samples, 0.05%)</title><rect x="1153.1" y="1973" width="0.5" height="15.0" fill="rgb(215,7,41)" rx="2" ry="2" />
<text  x="1156.05" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="163.2" y="1893" width="0.2" height="15.0" fill="rgb(235,143,32)" rx="2" ry="2" />
<text  x="166.16" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="584.1" y="1957" width="2.0" height="15.0" fill="rgb(230,40,44)" rx="2" ry="2" />
<text  x="587.11" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="945.3" y="1957" width="0.2" height="15.0" fill="rgb(239,150,16)" rx="2" ry="2" />
<text  x="948.26" y="1967.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (5 samples, 0.08%)</title><rect x="229.1" y="1813" width="1.0" height="15.0" fill="rgb(240,147,19)" rx="2" ry="2" />
<text  x="232.11" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="933.7" y="1925" width="1.0" height="15.0" fill="rgb(220,144,24)" rx="2" ry="2" />
<text  x="936.74" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="356.5" y="1845" width="0.1" height="15.0" fill="rgb(243,97,44)" rx="2" ry="2" />
<text  x="359.45" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="535.0" y="1893" width="0.2" height="15.0" fill="rgb(224,139,1)" rx="2" ry="2" />
<text  x="538.04" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (106 samples, 1.78%)</title><rect x="141.9" y="1957" width="21.1" height="15.0" fill="rgb(251,108,25)" rx="2" ry="2" />
<text  x="144.91" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="576.2" y="1957" width="0.4" height="15.0" fill="rgb(242,77,5)" rx="2" ry="2" />
<text  x="579.16" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="496.9" y="1957" width="0.2" height="15.0" fill="rgb(237,58,46)" rx="2" ry="2" />
<text  x="499.90" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="74.4" y="1669" width="0.2" height="15.0" fill="rgb(244,32,20)" rx="2" ry="2" />
<text  x="77.36" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="76.9" y="1925" width="0.4" height="15.0" fill="rgb(246,225,44)" rx="2" ry="2" />
<text  x="79.95" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="63.4" y="1957" width="0.4" height="15.0" fill="rgb(209,131,1)" rx="2" ry="2" />
<text  x="66.44" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(215,212,40)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (51 samples, 0.86%)</title><rect x="880.3" y="1957" width="10.1" height="15.0" fill="rgb(222,86,49)" rx="2" ry="2" />
<text  x="883.30" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (7 samples, 0.12%)</title><rect x="298.0" y="1653" width="1.4" height="15.0" fill="rgb(227,175,3)" rx="2" ry="2" />
<text  x="301.05" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="220.2" y="1893" width="1.4" height="15.0" fill="rgb(237,204,49)" rx="2" ry="2" />
<text  x="223.18" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="401.3" y="1845" width="0.2" height="15.0" fill="rgb(229,109,44)" rx="2" ry="2" />
<text  x="404.35" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="507.0" y="1701" width="0.2" height="15.0" fill="rgb(252,15,54)" rx="2" ry="2" />
<text  x="510.03" y="1711.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (15 samples, 0.25%)</title><rect x="169.3" y="2005" width="3.0" height="15.0" fill="rgb(208,19,8)" rx="2" ry="2" />
<text  x="172.32" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="516.0" y="1925" width="0.2" height="15.0" fill="rgb(252,92,7)" rx="2" ry="2" />
<text  x="518.97" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="113.9" y="37" width="0.4" height="15.0" fill="rgb(231,111,54)" rx="2" ry="2" />
<text  x="116.90" y="47.5" ></text>
</g>
<g >
<title>sock_alloc_inode (26 samples, 0.44%)</title><rect x="398.0" y="1909" width="5.1" height="15.0" fill="rgb(231,189,50)" rx="2" ry="2" />
<text  x="400.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1128.8" y="1781" width="0.2" height="15.0" fill="rgb(217,123,4)" rx="2" ry="2" />
<text  x="1131.81" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1160.8" y="1685" width="0.2" height="15.0" fill="rgb(205,135,17)" rx="2" ry="2" />
<text  x="1163.80" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="489.7" y="1877" width="0.2" height="15.0" fill="rgb(206,11,20)" rx="2" ry="2" />
<text  x="492.75" y="1887.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="342.5" y="1845" width="0.4" height="15.0" fill="rgb(211,51,41)" rx="2" ry="2" />
<text  x="345.55" y="1855.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="193.6" y="2021" width="0.4" height="15.0" fill="rgb(214,111,10)" rx="2" ry="2" />
<text  x="196.56" y="2031.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="1125.4" y="1605" width="0.2" height="15.0" fill="rgb(253,179,41)" rx="2" ry="2" />
<text  x="1128.44" y="1615.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (5 samples, 0.08%)</title><rect x="90.5" y="1957" width="0.9" height="15.0" fill="rgb(222,100,2)" rx="2" ry="2" />
<text  x="93.45" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="289.7" y="1813" width="0.2" height="15.0" fill="rgb(229,58,54)" rx="2" ry="2" />
<text  x="292.70" y="1823.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (53 samples, 0.89%)</title><rect x="729.7" y="1749" width="10.5" height="15.0" fill="rgb(243,44,53)" rx="2" ry="2" />
<text  x="732.72" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="177.9" y="1925" width="0.2" height="15.0" fill="rgb(238,194,1)" rx="2" ry="2" />
<text  x="180.86" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (50 samples, 0.84%)</title><rect x="1108.0" y="1813" width="9.9" height="15.0" fill="rgb(224,17,49)" rx="2" ry="2" />
<text  x="1110.96" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="388.0" y="1893" width="0.2" height="15.0" fill="rgb(232,115,29)" rx="2" ry="2" />
<text  x="391.04" y="1903.5" ></text>
</g>
<g >
<title>isspace (2 samples, 0.03%)</title><rect x="1020.5" y="2021" width="0.4" height="15.0" fill="rgb(252,69,51)" rx="2" ry="2" />
<text  x="1023.55" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="896.2" y="1845" width="0.2" height="15.0" fill="rgb(226,198,22)" rx="2" ry="2" />
<text  x="899.19" y="1855.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (4 samples, 0.07%)</title><rect x="570.6" y="1973" width="0.8" height="15.0" fill="rgb(252,94,33)" rx="2" ry="2" />
<text  x="573.60" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="30.1" y="1941" width="0.2" height="15.0" fill="rgb(234,51,5)" rx="2" ry="2" />
<text  x="33.06" y="1951.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="507.0" y="1637" width="0.2" height="15.0" fill="rgb(222,147,5)" rx="2" ry="2" />
<text  x="510.03" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="701.5" y="2037" width="0.2" height="15.0" fill="rgb(251,67,51)" rx="2" ry="2" />
<text  x="704.51" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1125" width="14.7" height="15.0" fill="rgb(234,150,42)" rx="2" ry="2" />
<text  x="108.35" y="1135.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="908.1" y="1989" width="0.4" height="15.0" fill="rgb(241,78,32)" rx="2" ry="2" />
<text  x="911.11" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="412.5" y="1893" width="0.2" height="15.0" fill="rgb(254,26,29)" rx="2" ry="2" />
<text  x="415.47" y="1903.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="556.7" y="1653" width="0.2" height="15.0" fill="rgb(249,70,4)" rx="2" ry="2" />
<text  x="559.69" y="1663.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (2 samples, 0.03%)</title><rect x="536.0" y="1909" width="0.4" height="15.0" fill="rgb(214,124,20)" rx="2" ry="2" />
<text  x="539.03" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="226.3" y="1829" width="0.4" height="15.0" fill="rgb(215,224,20)" rx="2" ry="2" />
<text  x="229.33" y="1839.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="725.7" y="1797" width="0.2" height="15.0" fill="rgb(219,100,16)" rx="2" ry="2" />
<text  x="728.75" y="1807.5" ></text>
</g>
<g >
<title>new_inode_pseudo (51 samples, 0.86%)</title><rect x="393.2" y="1941" width="10.1" height="15.0" fill="rgb(223,142,22)" rx="2" ry="2" />
<text  x="396.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="299.2" y="1477" width="0.2" height="15.0" fill="rgb(224,183,5)" rx="2" ry="2" />
<text  x="302.24" y="1487.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="76.7" y="1941" width="0.6" height="15.0" fill="rgb(219,157,46)" rx="2" ry="2" />
<text  x="79.75" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (72 samples, 1.21%)</title><rect x="662.4" y="1957" width="14.3" height="15.0" fill="rgb(215,161,12)" rx="2" ry="2" />
<text  x="665.38" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="172.9" y="1989" width="1.0" height="15.0" fill="rgb(221,186,20)" rx="2" ry="2" />
<text  x="175.90" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="866.4" y="1957" width="0.2" height="15.0" fill="rgb(224,195,22)" rx="2" ry="2" />
<text  x="869.39" y="1967.5" ></text>
</g>
<g >
<title>security_socket_accept (2 samples, 0.03%)</title><rect x="392.6" y="1957" width="0.4" height="15.0" fill="rgb(207,73,12)" rx="2" ry="2" />
<text  x="395.61" y="1967.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="355.7" y="2037" width="0.4" height="15.0" fill="rgb(246,78,42)" rx="2" ry="2" />
<text  x="358.66" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="574.2" y="1813" width="0.2" height="15.0" fill="rgb(239,127,2)" rx="2" ry="2" />
<text  x="577.18" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="531.9" y="1989" width="0.2" height="15.0" fill="rgb(230,104,28)" rx="2" ry="2" />
<text  x="534.86" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1092.1" y="1925" width="0.2" height="15.0" fill="rgb(208,34,52)" rx="2" ry="2" />
<text  x="1095.06" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (3 samples, 0.05%)</title><rect x="577.2" y="1989" width="0.6" height="15.0" fill="rgb(206,198,34)" rx="2" ry="2" />
<text  x="580.15" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="713.0" y="1941" width="0.2" height="15.0" fill="rgb(229,43,35)" rx="2" ry="2" />
<text  x="716.03" y="1951.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.10%)</title><rect x="128.0" y="1989" width="1.2" height="15.0" fill="rgb(243,81,1)" rx="2" ry="2" />
<text  x="131.00" y="1999.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (3 samples, 0.05%)</title><rect x="570.6" y="1957" width="0.6" height="15.0" fill="rgb(208,192,1)" rx="2" ry="2" />
<text  x="573.60" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="971.1" y="2005" width="0.6" height="15.0" fill="rgb(229,189,43)" rx="2" ry="2" />
<text  x="974.08" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1105.8" y="1893" width="0.4" height="15.0" fill="rgb(219,177,0)" rx="2" ry="2" />
<text  x="1108.77" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="253.4" y="1893" width="0.1" height="15.0" fill="rgb(216,100,19)" rx="2" ry="2" />
<text  x="256.35" y="1903.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="615.1" y="1861" width="0.2" height="15.0" fill="rgb(234,65,21)" rx="2" ry="2" />
<text  x="618.10" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="852.3" y="1861" width="0.4" height="15.0" fill="rgb(251,125,18)" rx="2" ry="2" />
<text  x="855.29" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1139.9" y="1765" width="0.2" height="15.0" fill="rgb(241,150,29)" rx="2" ry="2" />
<text  x="1142.94" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="521.5" y="1973" width="0.2" height="15.0" fill="rgb(211,56,5)" rx="2" ry="2" />
<text  x="524.53" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="992.5" y="1973" width="2.0" height="15.0" fill="rgb(224,98,50)" rx="2" ry="2" />
<text  x="995.54" y="1983.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.02%)</title><rect x="197.5" y="2037" width="0.2" height="15.0" fill="rgb(254,18,20)" rx="2" ry="2" />
<text  x="200.53" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="356.5" y="2005" width="0.1" height="15.0" fill="rgb(221,57,32)" rx="2" ry="2" />
<text  x="359.45" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="223.0" y="1877" width="0.2" height="15.0" fill="rgb(244,98,38)" rx="2" ry="2" />
<text  x="225.96" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="302.4" y="1653" width="0.2" height="15.0" fill="rgb(211,142,13)" rx="2" ry="2" />
<text  x="305.42" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="14.4" y="1845" width="0.2" height="15.0" fill="rgb(245,210,0)" rx="2" ry="2" />
<text  x="17.37" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (7 samples, 0.12%)</title><rect x="49.9" y="1909" width="1.4" height="15.0" fill="rgb(225,216,29)" rx="2" ry="2" />
<text  x="52.93" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(238,135,14)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="171.7" y="1909" width="0.4" height="15.0" fill="rgb(227,15,19)" rx="2" ry="2" />
<text  x="174.70" y="1919.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="278.0" y="1813" width="0.4" height="15.0" fill="rgb(210,215,8)" rx="2" ry="2" />
<text  x="280.98" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="672.5" y="1573" width="0.2" height="15.0" fill="rgb(209,172,41)" rx="2" ry="2" />
<text  x="675.51" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="895.8" y="1925" width="0.6" height="15.0" fill="rgb(244,127,9)" rx="2" ry="2" />
<text  x="898.79" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_reqsk_destructor (1 samples, 0.02%)</title><rect x="387.8" y="1925" width="0.2" height="15.0" fill="rgb(229,189,53)" rx="2" ry="2" />
<text  x="390.84" y="1935.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(234,42,37)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1160.8" y="1717" width="0.2" height="15.0" fill="rgb(246,163,42)" rx="2" ry="2" />
<text  x="1163.80" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="896.6" y="1749" width="0.2" height="15.0" fill="rgb(238,160,36)" rx="2" ry="2" />
<text  x="899.59" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="298.6" y="1637" width="0.8" height="15.0" fill="rgb(239,41,42)" rx="2" ry="2" />
<text  x="301.64" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="618.1" y="1973" width="0.4" height="15.0" fill="rgb(225,21,25)" rx="2" ry="2" />
<text  x="621.08" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="792.7" y="1429" width="0.2" height="15.0" fill="rgb(224,176,46)" rx="2" ry="2" />
<text  x="795.69" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="850.9" y="1909" width="0.4" height="15.0" fill="rgb(252,218,18)" rx="2" ry="2" />
<text  x="853.90" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="483.0" y="1861" width="0.2" height="15.0" fill="rgb(246,150,1)" rx="2" ry="2" />
<text  x="485.99" y="1871.5" ></text>
</g>
<g >
<title>sock_destroy_inode (20 samples, 0.34%)</title><rect x="734.5" y="1685" width="4.0" height="15.0" fill="rgb(210,157,34)" rx="2" ry="2" />
<text  x="737.49" y="1695.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="170.9" y="1973" width="0.2" height="15.0" fill="rgb(207,81,38)" rx="2" ry="2" />
<text  x="173.91" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="412.7" y="1685" width="0.2" height="15.0" fill="rgb(221,1,50)" rx="2" ry="2" />
<text  x="415.67" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (9 samples, 0.15%)</title><rect x="53.9" y="1957" width="1.8" height="15.0" fill="rgb(244,118,29)" rx="2" ry="2" />
<text  x="56.90" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="130.2" y="1973" width="0.2" height="15.0" fill="rgb(215,51,41)" rx="2" ry="2" />
<text  x="133.19" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="484.0" y="1925" width="0.2" height="15.0" fill="rgb(249,108,52)" rx="2" ry="2" />
<text  x="486.99" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="46.6" y="1941" width="0.2" height="15.0" fill="rgb(235,194,30)" rx="2" ry="2" />
<text  x="49.55" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="32.4" y="1909" width="0.2" height="15.0" fill="rgb(207,68,1)" rx="2" ry="2" />
<text  x="35.45" y="1919.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="300.0" y="1317" width="0.2" height="15.0" fill="rgb(241,218,48)" rx="2" ry="2" />
<text  x="303.03" y="1327.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1161.8" y="1749" width="0.2" height="15.0" fill="rgb(244,36,9)" rx="2" ry="2" />
<text  x="1164.79" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="333.8" y="1525" width="0.4" height="15.0" fill="rgb(244,159,40)" rx="2" ry="2" />
<text  x="336.80" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.3" y="1877" width="0.2" height="15.0" fill="rgb(222,31,26)" rx="2" ry="2" />
<text  x="146.30" y="1887.5" ></text>
</g>
<g >
<title>skb_network_protocol (3 samples, 0.05%)</title><rect x="320.5" y="1637" width="0.6" height="15.0" fill="rgb(253,177,49)" rx="2" ry="2" />
<text  x="323.49" y="1647.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (3 samples, 0.05%)</title><rect x="1129.4" y="2037" width="0.6" height="15.0" fill="rgb(241,177,40)" rx="2" ry="2" />
<text  x="1132.41" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1031.7" y="1749" width="0.2" height="15.0" fill="rgb(241,69,29)" rx="2" ry="2" />
<text  x="1034.67" y="1759.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="373.7" y="1941" width="0.2" height="15.0" fill="rgb(242,150,23)" rx="2" ry="2" />
<text  x="376.73" y="1951.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="845.1" y="1637" width="0.2" height="15.0" fill="rgb(254,97,40)" rx="2" ry="2" />
<text  x="848.14" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getAncillaryDataSize (1 samples, 0.02%)</title><rect x="878.9" y="1957" width="0.2" height="15.0" fill="rgb(238,118,13)" rx="2" ry="2" />
<text  x="881.91" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="961.9" y="2037" width="0.2" height="15.0" fill="rgb(254,159,50)" rx="2" ry="2" />
<text  x="964.95" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="148.1" y="1909" width="0.2" height="15.0" fill="rgb(224,49,2)" rx="2" ry="2" />
<text  x="151.06" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="825.1" y="1765" width="0.2" height="15.0" fill="rgb(224,95,20)" rx="2" ry="2" />
<text  x="828.07" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="830.8" y="1845" width="0.2" height="15.0" fill="rgb(219,142,11)" rx="2" ry="2" />
<text  x="833.84" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="514.8" y="1653" width="0.2" height="15.0" fill="rgb(220,102,21)" rx="2" ry="2" />
<text  x="517.78" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.1" y="1845" width="0.2" height="15.0" fill="rgb(240,84,22)" rx="2" ry="2" />
<text  x="149.08" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="848.7" y="1813" width="0.4" height="15.0" fill="rgb(215,8,43)" rx="2" ry="2" />
<text  x="851.71" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="842.0" y="1909" width="0.8" height="15.0" fill="rgb(240,109,24)" rx="2" ry="2" />
<text  x="844.96" y="1919.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="694.4" y="2005" width="0.4" height="15.0" fill="rgb(232,165,31)" rx="2" ry="2" />
<text  x="697.36" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (9 samples, 0.15%)</title><rect x="705.9" y="1973" width="1.8" height="15.0" fill="rgb(252,98,49)" rx="2" ry="2" />
<text  x="708.88" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="149.1" y="1893" width="1.0" height="15.0" fill="rgb(251,178,20)" rx="2" ry="2" />
<text  x="152.06" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (12 samples, 0.20%)</title><rect x="890.4" y="1941" width="2.4" height="15.0" fill="rgb(225,80,31)" rx="2" ry="2" />
<text  x="893.43" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="527.3" y="1957" width="0.2" height="15.0" fill="rgb(246,102,27)" rx="2" ry="2" />
<text  x="530.29" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="757.5" y="1461" width="0.2" height="15.0" fill="rgb(224,167,28)" rx="2" ry="2" />
<text  x="760.53" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.5" y="1845" width="0.2" height="15.0" fill="rgb(215,167,29)" rx="2" ry="2" />
<text  x="887.47" y="1855.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="824.9" y="1733" width="0.2" height="15.0" fill="rgb(249,141,49)" rx="2" ry="2" />
<text  x="827.88" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="160.2" y="1669" width="0.2" height="15.0" fill="rgb(206,57,41)" rx="2" ry="2" />
<text  x="163.18" y="1679.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="157.8" y="1813" width="0.2" height="15.0" fill="rgb(222,70,15)" rx="2" ry="2" />
<text  x="160.80" y="1823.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="773.2" y="1557" width="0.4" height="15.0" fill="rgb(249,55,13)" rx="2" ry="2" />
<text  x="776.23" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (10 samples, 0.17%)</title><rect x="71.2" y="1957" width="2.0" height="15.0" fill="rgb(210,172,33)" rx="2" ry="2" />
<text  x="74.19" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="713.0" y="1861" width="0.2" height="15.0" fill="rgb(230,189,45)" rx="2" ry="2" />
<text  x="716.03" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="82.7" y="1941" width="0.2" height="15.0" fill="rgb(233,119,6)" rx="2" ry="2" />
<text  x="85.71" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="22.9" y="1941" width="0.2" height="15.0" fill="rgb(206,203,25)" rx="2" ry="2" />
<text  x="25.91" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (3 samples, 0.05%)</title><rect x="1150.3" y="2037" width="0.6" height="15.0" fill="rgb(249,198,15)" rx="2" ry="2" />
<text  x="1153.27" y="2047.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1108.2" y="1717" width="0.2" height="15.0" fill="rgb(238,193,7)" rx="2" ry="2" />
<text  x="1111.15" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.12%)</title><rect x="11.0" y="1829" width="1.4" height="15.0" fill="rgb(211,85,40)" rx="2" ry="2" />
<text  x="13.99" y="1839.5" ></text>
</g>
<g >
<title>remove_wait_queue (13 samples, 0.22%)</title><rect x="478.0" y="1941" width="2.6" height="15.0" fill="rgb(232,123,16)" rx="2" ry="2" />
<text  x="481.03" y="1951.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1116.7" y="1509" width="0.2" height="15.0" fill="rgb(226,21,32)" rx="2" ry="2" />
<text  x="1119.70" y="1519.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="858.1" y="1845" width="0.1" height="15.0" fill="rgb(220,176,13)" rx="2" ry="2" />
<text  x="861.05" y="1855.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="896.2" y="1797" width="0.2" height="15.0" fill="rgb(224,81,3)" rx="2" ry="2" />
<text  x="899.19" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="677.7" y="1909" width="0.2" height="15.0" fill="rgb(226,171,15)" rx="2" ry="2" />
<text  x="680.67" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="226.7" y="1845" width="0.8" height="15.0" fill="rgb(235,111,40)" rx="2" ry="2" />
<text  x="229.73" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="1165.6" y="2053" width="0.6" height="15.0" fill="rgb(243,49,17)" rx="2" ry="2" />
<text  x="1168.57" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="253.0" y="1925" width="0.5" height="15.0" fill="rgb(239,219,0)" rx="2" ry="2" />
<text  x="255.95" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="355.5" y="2037" width="0.2" height="15.0" fill="rgb(250,41,0)" rx="2" ry="2" />
<text  x="358.46" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="243.8" y="2021" width="0.2" height="15.0" fill="rgb(221,73,52)" rx="2" ry="2" />
<text  x="246.81" y="2031.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1059.5" y="1893" width="0.2" height="15.0" fill="rgb(228,38,53)" rx="2" ry="2" />
<text  x="1062.48" y="1903.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="417.2" y="1669" width="0.2" height="15.0" fill="rgb(230,131,15)" rx="2" ry="2" />
<text  x="420.24" y="1679.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (42 samples, 0.71%)</title><rect x="460.1" y="1973" width="8.4" height="15.0" fill="rgb(246,196,24)" rx="2" ry="2" />
<text  x="463.15" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="488.0" y="1925" width="0.2" height="15.0" fill="rgb(248,220,19)" rx="2" ry="2" />
<text  x="490.96" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="677.7" y="1957" width="0.2" height="15.0" fill="rgb(212,193,26)" rx="2" ry="2" />
<text  x="680.67" y="1967.5" ></text>
</g>
<g >
<title>sock_poll (37 samples, 0.62%)</title><rect x="460.5" y="1957" width="7.4" height="15.0" fill="rgb(215,103,5)" rx="2" ry="2" />
<text  x="463.55" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="326.7" y="1749" width="0.4" height="15.0" fill="rgb(206,221,37)" rx="2" ry="2" />
<text  x="329.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.8" y="1989" width="0.2" height="15.0" fill="rgb(225,216,6)" rx="2" ry="2" />
<text  x="925.81" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="144.3" y="1893" width="0.2" height="15.0" fill="rgb(219,198,30)" rx="2" ry="2" />
<text  x="147.29" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1160.8" y="1781" width="0.2" height="15.0" fill="rgb(228,158,12)" rx="2" ry="2" />
<text  x="1163.80" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="279.8" y="1797" width="0.2" height="15.0" fill="rgb(212,199,4)" rx="2" ry="2" />
<text  x="282.77" y="1807.5" ></text>
</g>
<g >
<title>__GI___getpeername (68 samples, 1.14%)</title><rect x="662.6" y="1941" width="13.5" height="15.0" fill="rgb(209,10,3)" rx="2" ry="2" />
<text  x="665.58" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="816.5" y="1685" width="0.2" height="15.0" fill="rgb(207,60,36)" rx="2" ry="2" />
<text  x="819.53" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (2 samples, 0.03%)</title><rect x="141.5" y="1957" width="0.4" height="15.0" fill="rgb(217,62,14)" rx="2" ry="2" />
<text  x="144.51" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="574.2" y="1909" width="0.2" height="15.0" fill="rgb(227,39,31)" rx="2" ry="2" />
<text  x="577.18" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="92.8" y="1973" width="0.2" height="15.0" fill="rgb(218,34,12)" rx="2" ry="2" />
<text  x="95.84" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="544.8" y="1893" width="0.6" height="15.0" fill="rgb(241,79,16)" rx="2" ry="2" />
<text  x="547.77" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="75.0" y="1957" width="0.2" height="15.0" fill="rgb(234,72,33)" rx="2" ry="2" />
<text  x="77.96" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (7 samples, 0.12%)</title><rect x="485.4" y="1957" width="1.4" height="15.0" fill="rgb(237,67,21)" rx="2" ry="2" />
<text  x="488.38" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (3 samples, 0.05%)</title><rect x="894.4" y="1941" width="0.6" height="15.0" fill="rgb(231,190,9)" rx="2" ry="2" />
<text  x="897.40" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="93.0" y="1973" width="0.6" height="15.0" fill="rgb(236,113,32)" rx="2" ry="2" />
<text  x="96.04" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (27 samples, 0.45%)</title><rect x="784.7" y="1509" width="5.4" height="15.0" fill="rgb(246,38,21)" rx="2" ry="2" />
<text  x="787.75" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="992.7" y="1941" width="1.4" height="15.0" fill="rgb(206,120,48)" rx="2" ry="2" />
<text  x="995.74" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="507.0" y="1877" width="0.2" height="15.0" fill="rgb(254,220,36)" rx="2" ry="2" />
<text  x="510.03" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="705.5" y="1989" width="0.4" height="15.0" fill="rgb(207,127,15)" rx="2" ry="2" />
<text  x="708.48" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="171.7" y="1765" width="0.4" height="15.0" fill="rgb(252,187,22)" rx="2" ry="2" />
<text  x="174.70" y="1775.5" ></text>
</g>
<g >
<title>task_work_add (6 samples, 0.10%)</title><rect x="827.7" y="1797" width="1.1" height="15.0" fill="rgb(232,42,29)" rx="2" ry="2" />
<text  x="830.66" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="884.5" y="1701" width="0.2" height="15.0" fill="rgb(240,0,8)" rx="2" ry="2" />
<text  x="887.47" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="386.2" y="1765" width="0.2" height="15.0" fill="rgb(207,15,17)" rx="2" ry="2" />
<text  x="389.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (112 samples, 1.89%)</title><rect x="104.2" y="1941" width="22.2" height="15.0" fill="rgb(251,74,50)" rx="2" ry="2" />
<text  x="107.16" y="1951.5" >[..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="565.0" y="1861" width="0.2" height="15.0" fill="rgb(238,141,38)" rx="2" ry="2" />
<text  x="568.04" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="32.4" y="1973" width="0.2" height="15.0" fill="rgb(250,11,47)" rx="2" ry="2" />
<text  x="35.45" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (2 samples, 0.03%)</title><rect x="148.7" y="1893" width="0.4" height="15.0" fill="rgb(231,208,17)" rx="2" ry="2" />
<text  x="151.66" y="1903.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="580.7" y="1909" width="0.2" height="15.0" fill="rgb(222,73,45)" rx="2" ry="2" />
<text  x="583.73" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="585.7" y="1909" width="0.2" height="15.0" fill="rgb(242,44,23)" rx="2" ry="2" />
<text  x="588.70" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="923.4" y="2005" width="1.4" height="15.0" fill="rgb(228,15,20)" rx="2" ry="2" />
<text  x="926.41" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="1008.2" y="1973" width="0.6" height="15.0" fill="rgb(214,225,49)" rx="2" ry="2" />
<text  x="1011.23" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (19 samples, 0.32%)</title><rect x="963.9" y="1989" width="3.8" height="15.0" fill="rgb(254,145,49)" rx="2" ry="2" />
<text  x="966.93" y="1999.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="171.9" y="1685" width="0.2" height="15.0" fill="rgb(237,227,29)" rx="2" ry="2" />
<text  x="174.90" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="356.5" y="1925" width="0.1" height="15.0" fill="rgb(215,63,23)" rx="2" ry="2" />
<text  x="359.45" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1160.8" y="1621" width="0.2" height="15.0" fill="rgb(232,174,20)" rx="2" ry="2" />
<text  x="1163.80" y="1631.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="981.4" y="1941" width="0.2" height="15.0" fill="rgb(216,141,8)" rx="2" ry="2" />
<text  x="984.41" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (17 samples, 0.29%)</title><rect x="652.6" y="2037" width="3.4" height="15.0" fill="rgb(232,7,51)" rx="2" ry="2" />
<text  x="655.64" y="2047.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1161.8" y="1717" width="0.2" height="15.0" fill="rgb(241,116,42)" rx="2" ry="2" />
<text  x="1164.79" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="235.7" y="1861" width="0.2" height="15.0" fill="rgb(217,191,36)" rx="2" ry="2" />
<text  x="238.67" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1509" width="16.2" height="15.0" fill="rgb(249,173,45)" rx="2" ry="2" />
<text  x="108.15" y="1519.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="533.1" y="1989" width="0.2" height="15.0" fill="rgb(215,10,13)" rx="2" ry="2" />
<text  x="536.05" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="416.8" y="1893" width="0.2" height="15.0" fill="rgb(242,119,10)" rx="2" ry="2" />
<text  x="419.84" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="208.1" y="1781" width="0.2" height="15.0" fill="rgb(235,160,32)" rx="2" ry="2" />
<text  x="211.06" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="962.1" y="2005" width="0.2" height="15.0" fill="rgb(242,15,11)" rx="2" ry="2" />
<text  x="965.14" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (4 samples, 0.07%)</title><rect x="304.4" y="1685" width="0.8" height="15.0" fill="rgb(229,14,52)" rx="2" ry="2" />
<text  x="307.40" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (735 samples, 12.37%)</title><rect x="710.3" y="1957" width="146.0" height="15.0" fill="rgb(235,106,8)" rx="2" ry="2" />
<text  x="713.25" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.13%)</title><rect x="57.3" y="1925" width="1.6" height="15.0" fill="rgb(226,152,34)" rx="2" ry="2" />
<text  x="60.28" y="1935.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="386.2" y="1637" width="0.2" height="15.0" fill="rgb(210,196,18)" rx="2" ry="2" />
<text  x="389.25" y="1647.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="572.6" y="2005" width="0.2" height="15.0" fill="rgb(208,110,25)" rx="2" ry="2" />
<text  x="575.59" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="327.2" y="1749" width="0.2" height="15.0" fill="rgb(208,202,18)" rx="2" ry="2" />
<text  x="330.25" y="1759.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (41 samples, 0.69%)</title><rect x="329.6" y="1829" width="8.2" height="15.0" fill="rgb(214,188,48)" rx="2" ry="2" />
<text  x="332.63" y="1839.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="998.7" y="1909" width="0.4" height="15.0" fill="rgb(230,24,44)" rx="2" ry="2" />
<text  x="1001.70" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="341" width="13.5" height="15.0" fill="rgb(241,85,34)" rx="2" ry="2" />
<text  x="108.75" y="351.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="749.2" y="1733" width="0.2" height="15.0" fill="rgb(246,146,18)" rx="2" ry="2" />
<text  x="752.19" y="1743.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="468.3" y="1829" width="0.2" height="15.0" fill="rgb(230,204,19)" rx="2" ry="2" />
<text  x="471.29" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="333.6" y="1701" width="0.6" height="15.0" fill="rgb(210,149,24)" rx="2" ry="2" />
<text  x="336.61" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.0" y="1845" width="0.2" height="15.0" fill="rgb(221,56,50)" rx="2" ry="2" />
<text  x="65.05" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (320 samples, 5.39%)</title><rect x="426.4" y="2021" width="63.5" height="15.0" fill="rgb(234,185,19)" rx="2" ry="2" />
<text  x="429.38" y="2031.5" >entry_..</text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="620.9" y="2021" width="0.4" height="15.0" fill="rgb(241,223,2)" rx="2" ry="2" />
<text  x="623.86" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="65.4" y="1733" width="0.4" height="15.0" fill="rgb(253,2,47)" rx="2" ry="2" />
<text  x="68.42" y="1743.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="137.1" y="1973" width="0.4" height="15.0" fill="rgb(226,178,3)" rx="2" ry="2" />
<text  x="140.14" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="356.5" y="1893" width="0.1" height="15.0" fill="rgb(227,139,36)" rx="2" ry="2" />
<text  x="359.45" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="293.5" y="1765" width="0.2" height="15.0" fill="rgb(209,134,29)" rx="2" ry="2" />
<text  x="296.48" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (8 samples, 0.13%)</title><rect x="130.2" y="1989" width="1.6" height="15.0" fill="rgb(207,35,6)" rx="2" ry="2" />
<text  x="133.19" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="489.7" y="1989" width="0.2" height="15.0" fill="rgb(215,153,34)" rx="2" ry="2" />
<text  x="492.75" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1031.7" y="1941" width="0.2" height="15.0" fill="rgb(224,5,1)" rx="2" ry="2" />
<text  x="1034.67" y="1951.5" ></text>
</g>
<g >
<title>__memchr_avx2 (12 samples, 0.20%)</title><rect x="352.9" y="2037" width="2.4" height="15.0" fill="rgb(205,106,4)" rx="2" ry="2" />
<text  x="355.88" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="691.2" y="1749" width="0.2" height="15.0" fill="rgb(237,81,25)" rx="2" ry="2" />
<text  x="694.18" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (2 samples, 0.03%)</title><rect x="147.1" y="1909" width="0.4" height="15.0" fill="rgb(212,196,45)" rx="2" ry="2" />
<text  x="150.07" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (3 samples, 0.05%)</title><rect x="66.4" y="1973" width="0.6" height="15.0" fill="rgb(227,200,43)" rx="2" ry="2" />
<text  x="69.42" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="618.1" y="1925" width="0.2" height="15.0" fill="rgb(228,192,31)" rx="2" ry="2" />
<text  x="621.08" y="1935.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="1129.0" y="1829" width="0.2" height="15.0" fill="rgb(239,135,24)" rx="2" ry="2" />
<text  x="1132.01" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (30 samples, 0.51%)</title><rect x="935.1" y="1909" width="6.0" height="15.0" fill="rgb(237,189,9)" rx="2" ry="2" />
<text  x="938.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="963.9" y="2021" width="4.6" height="15.0" fill="rgb(218,160,28)" rx="2" ry="2" />
<text  x="966.93" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="513.2" y="1797" width="0.2" height="15.0" fill="rgb(206,49,1)" rx="2" ry="2" />
<text  x="516.19" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="488.0" y="1893" width="0.2" height="15.0" fill="rgb(214,50,22)" rx="2" ry="2" />
<text  x="490.96" y="1903.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1136.8" y="2037" width="0.2" height="15.0" fill="rgb(226,98,7)" rx="2" ry="2" />
<text  x="1139.76" y="2047.5" ></text>
</g>
<g >
<title>prandom_u32_state (1 samples, 0.02%)</title><rect x="489.7" y="1685" width="0.2" height="15.0" fill="rgb(233,75,1)" rx="2" ry="2" />
<text  x="492.75" y="1695.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="71.0" y="1877" width="0.2" height="15.0" fill="rgb(231,122,30)" rx="2" ry="2" />
<text  x="73.99" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="386.2" y="1653" width="0.2" height="15.0" fill="rgb(215,41,6)" rx="2" ry="2" />
<text  x="389.25" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="197" width="13.5" height="15.0" fill="rgb(231,54,52)" rx="2" ry="2" />
<text  x="108.75" y="207.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="697.5" y="1749" width="0.2" height="15.0" fill="rgb(228,87,46)" rx="2" ry="2" />
<text  x="700.54" y="1759.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1110.5" y="1365" width="0.2" height="15.0" fill="rgb(210,126,27)" rx="2" ry="2" />
<text  x="1113.54" y="1375.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="697.5" y="1829" width="0.2" height="15.0" fill="rgb(205,84,14)" rx="2" ry="2" />
<text  x="700.54" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="883.9" y="1925" width="0.2" height="15.0" fill="rgb(250,184,52)" rx="2" ry="2" />
<text  x="886.88" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="271.2" y="1797" width="0.2" height="15.0" fill="rgb(213,222,18)" rx="2" ry="2" />
<text  x="274.23" y="1807.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="565.8" y="1973" width="0.2" height="15.0" fill="rgb(213,38,41)" rx="2" ry="2" />
<text  x="568.83" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.5" y="1813" width="0.2" height="15.0" fill="rgb(251,19,23)" rx="2" ry="2" />
<text  x="887.47" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="635.6" y="1877" width="0.2" height="15.0" fill="rgb(243,91,47)" rx="2" ry="2" />
<text  x="638.56" y="1887.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1189.6" y="2037" width="0.4" height="15.0" fill="rgb(225,204,1)" rx="2" ry="2" />
<text  x="1192.60" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="672.5" y="1701" width="0.2" height="15.0" fill="rgb(213,221,2)" rx="2" ry="2" />
<text  x="675.51" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="791.9" y="1493" width="0.2" height="15.0" fill="rgb(219,149,31)" rx="2" ry="2" />
<text  x="794.90" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="845.1" y="1845" width="0.2" height="15.0" fill="rgb(206,117,54)" rx="2" ry="2" />
<text  x="848.14" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="888.0" y="1845" width="0.2" height="15.0" fill="rgb(213,208,46)" rx="2" ry="2" />
<text  x="891.05" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="319.7" y="1653" width="0.2" height="15.0" fill="rgb(251,101,30)" rx="2" ry="2" />
<text  x="322.70" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1059.7" y="1989" width="0.4" height="15.0" fill="rgb(207,82,3)" rx="2" ry="2" />
<text  x="1062.68" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="791.9" y="1589" width="0.2" height="15.0" fill="rgb(231,219,25)" rx="2" ry="2" />
<text  x="794.90" y="1599.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="536.2" y="1621" width="0.2" height="15.0" fill="rgb(205,67,36)" rx="2" ry="2" />
<text  x="539.23" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (3 samples, 0.05%)</title><rect x="636.9" y="1925" width="0.6" height="15.0" fill="rgb(228,33,3)" rx="2" ry="2" />
<text  x="639.95" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="637.5" y="1925" width="0.6" height="15.0" fill="rgb(227,129,3)" rx="2" ry="2" />
<text  x="640.55" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="769.5" y="1573" width="0.1" height="15.0" fill="rgb(215,109,17)" rx="2" ry="2" />
<text  x="772.45" y="1583.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="318.7" y="1669" width="0.2" height="15.0" fill="rgb(234,198,4)" rx="2" ry="2" />
<text  x="321.71" y="1679.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1010.0" y="1973" width="0.2" height="15.0" fill="rgb(210,81,10)" rx="2" ry="2" />
<text  x="1013.02" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="100.8" y="1973" width="0.2" height="15.0" fill="rgb(208,187,48)" rx="2" ry="2" />
<text  x="103.78" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="334.0" y="1333" width="0.2" height="15.0" fill="rgb(211,217,7)" rx="2" ry="2" />
<text  x="337.00" y="1343.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="74.4" y="1861" width="0.2" height="15.0" fill="rgb(209,168,53)" rx="2" ry="2" />
<text  x="77.36" y="1871.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (41 samples, 0.69%)</title><rect x="472.5" y="1957" width="8.1" height="15.0" fill="rgb(238,76,29)" rx="2" ry="2" />
<text  x="475.46" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="327.4" y="1797" width="0.2" height="15.0" fill="rgb(250,65,18)" rx="2" ry="2" />
<text  x="330.45" y="1807.5" ></text>
</g>
<g >
<title>SYSC_accept4 (241 samples, 4.06%)</title><rect x="367.8" y="1973" width="47.8" height="15.0" fill="rgb(244,221,10)" rx="2" ry="2" />
<text  x="370.77" y="1983.5" >SYSC..</text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 0.22%)</title><rect x="297.8" y="1685" width="2.6" height="15.0" fill="rgb(209,98,28)" rx="2" ry="2" />
<text  x="300.85" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::coalesce (1 samples, 0.02%)</title><rect x="114.3" y="37" width="0.2" height="15.0" fill="rgb(240,115,9)" rx="2" ry="2" />
<text  x="117.29" y="47.5" ></text>
</g>
<g >
<title>epoll_wait (98 samples, 1.65%)</title><rect x="496.7" y="2037" width="19.5" height="15.0" fill="rgb(253,191,3)" rx="2" ry="2" />
<text  x="499.70" y="2047.5" ></text>
</g>
<g >
<title>sys_accept4 (245 samples, 4.12%)</title><rect x="367.8" y="1989" width="48.6" height="15.0" fill="rgb(222,223,54)" rx="2" ry="2" />
<text  x="370.77" y="1999.5" >sys_..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="459.2" y="1973" width="0.4" height="15.0" fill="rgb(229,152,51)" rx="2" ry="2" />
<text  x="462.15" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="556.7" y="1797" width="0.2" height="15.0" fill="rgb(242,163,12)" rx="2" ry="2" />
<text  x="559.69" y="1807.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="792.1" y="1637" width="0.2" height="15.0" fill="rgb(210,157,14)" rx="2" ry="2" />
<text  x="795.10" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.07%)</title><rect x="1008.8" y="1973" width="0.8" height="15.0" fill="rgb(210,72,40)" rx="2" ry="2" />
<text  x="1011.83" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="356.5" y="1861" width="0.1" height="15.0" fill="rgb(230,127,51)" rx="2" ry="2" />
<text  x="359.45" y="1871.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="386.2" y="1893" width="0.2" height="15.0" fill="rgb(222,174,24)" rx="2" ry="2" />
<text  x="389.25" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="619.7" y="1749" width="0.2" height="15.0" fill="rgb(247,83,8)" rx="2" ry="2" />
<text  x="622.67" y="1759.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="758.5" y="1701" width="0.2" height="15.0" fill="rgb(207,2,22)" rx="2" ry="2" />
<text  x="761.53" y="1711.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (2 samples, 0.03%)</title><rect x="820.7" y="1765" width="0.4" height="15.0" fill="rgb(237,172,23)" rx="2" ry="2" />
<text  x="823.70" y="1775.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="286.3" y="1829" width="0.4" height="15.0" fill="rgb(253,22,21)" rx="2" ry="2" />
<text  x="289.33" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="489.7" y="1717" width="0.2" height="15.0" fill="rgb(218,140,53)" rx="2" ry="2" />
<text  x="492.75" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (310 samples, 5.22%)</title><rect x="34.8" y="2021" width="61.6" height="15.0" fill="rgb(210,190,22)" rx="2" ry="2" />
<text  x="37.83" y="2031.5" >folly:..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="148.1" y="1797" width="0.2" height="15.0" fill="rgb(213,158,43)" rx="2" ry="2" />
<text  x="151.06" y="1807.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1110.5" y="1445" width="0.2" height="15.0" fill="rgb(253,66,24)" rx="2" ry="2" />
<text  x="1113.54" y="1455.5" ></text>
</g>
<g >
<title>folly::netops::recv (10 samples, 0.17%)</title><rect x="51.5" y="1957" width="2.0" height="15.0" fill="rgb(250,53,47)" rx="2" ry="2" />
<text  x="54.52" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="171.7" y="1973" width="0.4" height="15.0" fill="rgb(220,39,24)" rx="2" ry="2" />
<text  x="174.70" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.3" y="1893" width="0.2" height="15.0" fill="rgb(210,85,28)" rx="2" ry="2" />
<text  x="146.30" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="417.0" y="1877" width="0.4" height="15.0" fill="rgb(250,87,23)" rx="2" ry="2" />
<text  x="420.04" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="291.1" y="1621" width="0.2" height="15.0" fill="rgb(234,71,2)" rx="2" ry="2" />
<text  x="294.09" y="1631.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1183.2" y="1973" width="0.2" height="15.0" fill="rgb(227,19,8)" rx="2" ry="2" />
<text  x="1186.25" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (43 samples, 0.72%)</title><rect x="1108.8" y="1637" width="8.5" height="15.0" fill="rgb(226,11,16)" rx="2" ry="2" />
<text  x="1111.75" y="1647.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="188.2" y="1957" width="0.2" height="15.0" fill="rgb(235,221,35)" rx="2" ry="2" />
<text  x="191.19" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="824.9" y="1781" width="0.4" height="15.0" fill="rgb(236,84,49)" rx="2" ry="2" />
<text  x="827.88" y="1791.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="160.2" y="1621" width="0.2" height="15.0" fill="rgb(234,172,53)" rx="2" ry="2" />
<text  x="163.18" y="1631.5" ></text>
</g>
<g >
<title>[mcrouter] (27 samples, 0.45%)</title><rect x="994.5" y="1941" width="5.4" height="15.0" fill="rgb(247,50,53)" rx="2" ry="2" />
<text  x="997.53" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (18 samples, 0.30%)</title><rect x="885.7" y="1941" width="3.5" height="15.0" fill="rgb(223,113,10)" rx="2" ry="2" />
<text  x="888.66" y="1951.5" ></text>
</g>
<g >
<title>SYSC_getpeername (3 samples, 0.05%)</title><rect x="706.7" y="1829" width="0.6" height="15.0" fill="rgb(251,53,3)" rx="2" ry="2" />
<text  x="709.68" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="373.7" y="1845" width="0.2" height="15.0" fill="rgb(241,148,18)" rx="2" ry="2" />
<text  x="376.73" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1004.7" y="1877" width="0.2" height="15.0" fill="rgb(205,129,26)" rx="2" ry="2" />
<text  x="1007.66" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="911.5" y="1957" width="0.8" height="15.0" fill="rgb(241,167,35)" rx="2" ry="2" />
<text  x="914.49" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="103.0" y="1973" width="0.2" height="15.0" fill="rgb(232,177,26)" rx="2" ry="2" />
<text  x="105.97" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.8" y="2005" width="0.2" height="15.0" fill="rgb(225,167,21)" rx="2" ry="2" />
<text  x="925.81" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6 samples, 0.10%)</title><rect x="1174.9" y="1989" width="1.2" height="15.0" fill="rgb(231,61,52)" rx="2" ry="2" />
<text  x="1177.90" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="520.7" y="1957" width="0.6" height="15.0" fill="rgb(218,138,15)" rx="2" ry="2" />
<text  x="523.74" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1150.3" y="1973" width="0.2" height="15.0" fill="rgb(225,65,23)" rx="2" ry="2" />
<text  x="1153.27" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="965" width="14.7" height="15.0" fill="rgb(221,9,45)" rx="2" ry="2" />
<text  x="108.35" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="551.3" y="1957" width="0.4" height="15.0" fill="rgb(226,194,35)" rx="2" ry="2" />
<text  x="554.33" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="337.4" y="1637" width="0.2" height="15.0" fill="rgb(254,70,53)" rx="2" ry="2" />
<text  x="340.38" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1105.2" y="1813" width="0.2" height="15.0" fill="rgb(244,67,6)" rx="2" ry="2" />
<text  x="1108.18" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (2 samples, 0.03%)</title><rect x="969.5" y="2037" width="0.4" height="15.0" fill="rgb(234,15,31)" rx="2" ry="2" />
<text  x="972.49" y="2047.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="327.6" y="1813" width="0.6" height="15.0" fill="rgb(241,156,31)" rx="2" ry="2" />
<text  x="330.65" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="158.6" y="1813" width="0.2" height="15.0" fill="rgb(219,21,9)" rx="2" ry="2" />
<text  x="161.59" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="14.4" y="1829" width="0.2" height="15.0" fill="rgb(212,126,18)" rx="2" ry="2" />
<text  x="17.37" y="1839.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="252.0" y="1957" width="0.8" height="15.0" fill="rgb(209,187,6)" rx="2" ry="2" />
<text  x="254.96" y="1967.5" ></text>
</g>
<g >
<title>security_file_free (13 samples, 0.22%)</title><rect x="741.0" y="1797" width="2.6" height="15.0" fill="rgb(245,168,52)" rx="2" ry="2" />
<text  x="744.04" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="691.2" y="1653" width="0.2" height="15.0" fill="rgb(207,165,41)" rx="2" ry="2" />
<text  x="694.18" y="1663.5" ></text>
</g>
<g >
<title>sock_alloc (2 samples, 0.03%)</title><rect x="415.8" y="1973" width="0.4" height="15.0" fill="rgb(240,124,49)" rx="2" ry="2" />
<text  x="418.85" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="896.6" y="1781" width="0.2" height="15.0" fill="rgb(221,41,22)" rx="2" ry="2" />
<text  x="899.59" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1013" width="14.7" height="15.0" fill="rgb(229,31,24)" rx="2" ry="2" />
<text  x="108.35" y="1023.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="865.6" y="1973" width="0.2" height="15.0" fill="rgb(236,156,27)" rx="2" ry="2" />
<text  x="868.60" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (758 samples, 12.76%)</title><rect x="707.7" y="1989" width="150.5" height="15.0" fill="rgb(217,167,48)" rx="2" ry="2" />
<text  x="710.67" y="1999.5" >facebook::memcache:..</text>
</g>
<g >
<title>do_syscall_64 (314 samples, 5.29%)</title><rect x="427.2" y="2005" width="62.3" height="15.0" fill="rgb(218,144,14)" rx="2" ry="2" />
<text  x="430.17" y="2015.5" >do_sys..</text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="614.3" y="1813" width="0.2" height="15.0" fill="rgb(217,119,36)" rx="2" ry="2" />
<text  x="617.30" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="12.6" y="2037" width="2.0" height="15.0" fill="rgb(215,159,52)" rx="2" ry="2" />
<text  x="15.58" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (120 samples, 2.02%)</title><rect x="582.9" y="2021" width="23.9" height="15.0" fill="rgb(218,57,14)" rx="2" ry="2" />
<text  x="585.92" y="2031.5" >f..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="904.5" y="2021" width="0.6" height="15.0" fill="rgb(222,67,10)" rx="2" ry="2" />
<text  x="907.54" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="963.3" y="1989" width="0.2" height="15.0" fill="rgb(233,48,50)" rx="2" ry="2" />
<text  x="966.34" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="386.2" y="1829" width="0.2" height="15.0" fill="rgb(210,97,25)" rx="2" ry="2" />
<text  x="389.25" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="887.8" y="1461" width="0.2" height="15.0" fill="rgb(236,190,43)" rx="2" ry="2" />
<text  x="890.85" y="1471.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="1141.9" y="1973" width="0.2" height="15.0" fill="rgb(206,107,18)" rx="2" ry="2" />
<text  x="1144.93" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (4 samples, 0.07%)</title><rect x="102.4" y="2005" width="0.8" height="15.0" fill="rgb(228,38,3)" rx="2" ry="2" />
<text  x="105.37" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="299.0" y="1381" width="0.2" height="15.0" fill="rgb(248,171,9)" rx="2" ry="2" />
<text  x="302.04" y="1391.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="230.9" y="1925" width="1.2" height="15.0" fill="rgb(222,229,25)" rx="2" ry="2" />
<text  x="233.90" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="569.6" y="1909" width="0.2" height="15.0" fill="rgb(216,151,31)" rx="2" ry="2" />
<text  x="572.61" y="1919.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (6 samples, 0.10%)</title><rect x="518.6" y="1957" width="1.1" height="15.0" fill="rgb(245,36,35)" rx="2" ry="2" />
<text  x="521.55" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="343.5" y="1925" width="0.2" height="15.0" fill="rgb(239,213,17)" rx="2" ry="2" />
<text  x="346.54" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="72.2" y="1925" width="0.2" height="15.0" fill="rgb(254,116,23)" rx="2" ry="2" />
<text  x="75.18" y="1935.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="281.2" y="1461" width="0.2" height="15.0" fill="rgb(213,60,2)" rx="2" ry="2" />
<text  x="284.16" y="1471.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="879.3" y="1861" width="0.2" height="15.0" fill="rgb(252,101,45)" rx="2" ry="2" />
<text  x="882.31" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="158.6" y="1781" width="0.2" height="15.0" fill="rgb(214,19,19)" rx="2" ry="2" />
<text  x="161.59" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (42 samples, 0.71%)</title><rect x="632.4" y="1973" width="8.3" height="15.0" fill="rgb(246,118,30)" rx="2" ry="2" />
<text  x="635.38" y="1983.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="992.3" y="1973" width="0.2" height="15.0" fill="rgb(237,36,50)" rx="2" ry="2" />
<text  x="995.34" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1019.6" y="1973" width="0.2" height="15.0" fill="rgb(208,185,31)" rx="2" ry="2" />
<text  x="1022.56" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4 samples, 0.07%)</title><rect x="1011.0" y="1989" width="0.8" height="15.0" fill="rgb(223,41,6)" rx="2" ry="2" />
<text  x="1014.01" y="1999.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="1127.2" y="1909" width="0.2" height="15.0" fill="rgb(243,9,29)" rx="2" ry="2" />
<text  x="1130.23" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (2 samples, 0.03%)</title><rect x="134.6" y="1925" width="0.4" height="15.0" fill="rgb(245,159,17)" rx="2" ry="2" />
<text  x="137.56" y="1935.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="51.1" y="1765" width="0.2" height="15.0" fill="rgb(215,183,25)" rx="2" ry="2" />
<text  x="54.12" y="1775.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="100.8" y="1941" width="0.2" height="15.0" fill="rgb(228,191,38)" rx="2" ry="2" />
<text  x="103.78" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="223.9" y="1861" width="0.4" height="15.0" fill="rgb(227,7,22)" rx="2" ry="2" />
<text  x="226.95" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="173.5" y="1925" width="0.2" height="15.0" fill="rgb(222,24,54)" rx="2" ry="2" />
<text  x="176.49" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.13%)</title><rect x="674.5" y="1925" width="1.6" height="15.0" fill="rgb(215,168,45)" rx="2" ry="2" />
<text  x="677.49" y="1935.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="299.8" y="1365" width="0.4" height="15.0" fill="rgb(238,115,49)" rx="2" ry="2" />
<text  x="302.84" y="1375.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="896.6" y="1765" width="0.2" height="15.0" fill="rgb(240,47,24)" rx="2" ry="2" />
<text  x="899.59" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (90 samples, 1.52%)</title><rect x="927.6" y="1989" width="17.9" height="15.0" fill="rgb(220,50,17)" rx="2" ry="2" />
<text  x="930.58" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="222.6" y="1749" width="0.2" height="15.0" fill="rgb(228,145,30)" rx="2" ry="2" />
<text  x="225.56" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1031.7" y="1765" width="0.2" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="1034.67" y="1775.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="616.5" y="1973" width="0.2" height="15.0" fill="rgb(215,168,30)" rx="2" ry="2" />
<text  x="619.49" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1152.3" y="2053" width="0.2" height="15.0" fill="rgb(252,8,16)" rx="2" ry="2" />
<text  x="1155.26" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="835.0" y="1765" width="0.2" height="15.0" fill="rgb(217,45,35)" rx="2" ry="2" />
<text  x="838.01" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="848.9" y="1797" width="0.2" height="15.0" fill="rgb(243,50,52)" rx="2" ry="2" />
<text  x="851.91" y="1807.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1115.5" y="1413" width="0.2" height="15.0" fill="rgb(244,90,26)" rx="2" ry="2" />
<text  x="1118.51" y="1423.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (12 samples, 0.20%)</title><rect x="68.8" y="1957" width="2.4" height="15.0" fill="rgb(253,25,6)" rx="2" ry="2" />
<text  x="71.80" y="1967.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="564.8" y="1893" width="0.4" height="15.0" fill="rgb(227,45,42)" rx="2" ry="2" />
<text  x="567.84" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="889.6" y="1909" width="0.2" height="15.0" fill="rgb(231,132,7)" rx="2" ry="2" />
<text  x="892.64" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="725.9" y="1797" width="0.2" height="15.0" fill="rgb(225,22,40)" rx="2" ry="2" />
<text  x="728.95" y="1807.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="326.9" y="1493" width="0.2" height="15.0" fill="rgb(228,133,52)" rx="2" ry="2" />
<text  x="329.85" y="1503.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="624.4" y="1925" width="0.4" height="15.0" fill="rgb(229,182,22)" rx="2" ry="2" />
<text  x="627.43" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="691.2" y="1829" width="0.2" height="15.0" fill="rgb(248,27,6)" rx="2" ry="2" />
<text  x="694.18" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (128 samples, 2.15%)</title><rect x="104.2" y="2005" width="25.4" height="15.0" fill="rgb(222,24,35)" rx="2" ry="2" />
<text  x="107.16" y="2015.5" >[..</text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="27.5" y="1877" width="0.2" height="15.0" fill="rgb(206,167,32)" rx="2" ry="2" />
<text  x="30.48" y="1887.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="858.1" y="1861" width="0.1" height="15.0" fill="rgb(209,63,8)" rx="2" ry="2" />
<text  x="861.05" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="51.1" y="1813" width="0.2" height="15.0" fill="rgb(214,173,48)" rx="2" ry="2" />
<text  x="54.12" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="848.7" y="1765" width="0.2" height="15.0" fill="rgb(224,220,42)" rx="2" ry="2" />
<text  x="851.71" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (9 samples, 0.15%)</title><rect x="858.2" y="1989" width="1.8" height="15.0" fill="rgb(209,156,44)" rx="2" ry="2" />
<text  x="861.25" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (18 samples, 0.30%)</title><rect x="398.4" y="1893" width="3.5" height="15.0" fill="rgb(220,218,0)" rx="2" ry="2" />
<text  x="401.37" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="586.1" y="1957" width="0.2" height="15.0" fill="rgb(234,154,14)" rx="2" ry="2" />
<text  x="589.09" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="516.0" y="1941" width="0.2" height="15.0" fill="rgb(216,78,20)" rx="2" ry="2" />
<text  x="518.97" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="79.7" y="1909" width="0.4" height="15.0" fill="rgb(207,23,12)" rx="2" ry="2" />
<text  x="82.73" y="1919.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1059.9" y="1701" width="0.2" height="15.0" fill="rgb(250,72,41)" rx="2" ry="2" />
<text  x="1062.88" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="484.0" y="1941" width="0.2" height="15.0" fill="rgb(241,49,34)" rx="2" ry="2" />
<text  x="486.99" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="697.5" y="1813" width="0.2" height="15.0" fill="rgb(209,61,54)" rx="2" ry="2" />
<text  x="700.54" y="1823.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="513.4" y="1541" width="0.2" height="15.0" fill="rgb(230,10,35)" rx="2" ry="2" />
<text  x="516.39" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (1 samples, 0.02%)</title><rect x="873.5" y="1989" width="0.2" height="15.0" fill="rgb(217,203,27)" rx="2" ry="2" />
<text  x="876.55" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1189.8" y="2021" width="0.2" height="15.0" fill="rgb(238,52,32)" rx="2" ry="2" />
<text  x="1192.80" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="317.3" y="1605" width="0.2" height="15.0" fill="rgb(222,147,41)" rx="2" ry="2" />
<text  x="320.32" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="884.5" y="1621" width="0.2" height="15.0" fill="rgb(221,165,0)" rx="2" ry="2" />
<text  x="887.47" y="1631.5" ></text>
</g>
<g >
<title>sys_futex (6 samples, 0.10%)</title><rect x="14.6" y="2005" width="1.2" height="15.0" fill="rgb(229,107,20)" rx="2" ry="2" />
<text  x="17.57" y="2015.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="1011.0" y="1813" width="0.2" height="15.0" fill="rgb(223,22,42)" rx="2" ry="2" />
<text  x="1014.01" y="1823.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (2 samples, 0.03%)</title><rect x="27.7" y="1989" width="0.4" height="15.0" fill="rgb(222,225,54)" rx="2" ry="2" />
<text  x="30.68" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="677.7" y="1941" width="0.2" height="15.0" fill="rgb(250,213,25)" rx="2" ry="2" />
<text  x="680.67" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="999.5" y="1909" width="0.2" height="15.0" fill="rgb(233,158,3)" rx="2" ry="2" />
<text  x="1002.49" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="513.2" y="1813" width="0.2" height="15.0" fill="rgb(231,189,51)" rx="2" ry="2" />
<text  x="516.19" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.8" y="645" width="13.9" height="15.0" fill="rgb(245,114,19)" rx="2" ry="2" />
<text  x="108.75" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="489.7" y="1749" width="0.2" height="15.0" fill="rgb(238,53,18)" rx="2" ry="2" />
<text  x="492.75" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="412.7" y="1877" width="0.2" height="15.0" fill="rgb(238,114,18)" rx="2" ry="2" />
<text  x="415.67" y="1887.5" ></text>
</g>
<g >
<title>sys_getpeername (20 samples, 0.34%)</title><rect x="670.3" y="1893" width="4.0" height="15.0" fill="rgb(231,207,51)" rx="2" ry="2" />
<text  x="673.32" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="73.0" y="1781" width="0.2" height="15.0" fill="rgb(212,52,10)" rx="2" ry="2" />
<text  x="75.97" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="896.6" y="1717" width="0.2" height="15.0" fill="rgb(240,46,10)" rx="2" ry="2" />
<text  x="899.59" y="1727.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (1 samples, 0.02%)</title><rect x="733.9" y="1653" width="0.2" height="15.0" fill="rgb(248,145,14)" rx="2" ry="2" />
<text  x="736.89" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="222.6" y="1733" width="0.2" height="15.0" fill="rgb(221,78,49)" rx="2" ry="2" />
<text  x="225.56" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="960.6" y="1909" width="0.2" height="15.0" fill="rgb(234,77,11)" rx="2" ry="2" />
<text  x="963.56" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="326.7" y="1621" width="0.4" height="15.0" fill="rgb(248,207,11)" rx="2" ry="2" />
<text  x="329.65" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="895.4" y="1749" width="0.2" height="15.0" fill="rgb(251,38,9)" rx="2" ry="2" />
<text  x="898.40" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="116.7" y="53" width="0.2" height="15.0" fill="rgb(228,117,50)" rx="2" ry="2" />
<text  x="119.68" y="63.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="97.2" y="2037" width="0.2" height="15.0" fill="rgb(229,134,8)" rx="2" ry="2" />
<text  x="100.21" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1117.3" y="1653" width="0.2" height="15.0" fill="rgb(227,32,19)" rx="2" ry="2" />
<text  x="1120.29" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (5 samples, 0.08%)</title><rect x="909.3" y="2005" width="1.0" height="15.0" fill="rgb(223,181,29)" rx="2" ry="2" />
<text  x="912.30" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="571.8" y="1765" width="0.2" height="15.0" fill="rgb(236,156,20)" rx="2" ry="2" />
<text  x="574.79" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="175.5" y="1989" width="0.4" height="15.0" fill="rgb(232,195,33)" rx="2" ry="2" />
<text  x="178.48" y="1999.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1128.8" y="1765" width="0.2" height="15.0" fill="rgb(205,159,14)" rx="2" ry="2" />
<text  x="1131.81" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="513.4" y="1621" width="0.2" height="15.0" fill="rgb(205,80,42)" rx="2" ry="2" />
<text  x="516.39" y="1631.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="991.9" y="1973" width="0.2" height="15.0" fill="rgb(242,155,7)" rx="2" ry="2" />
<text  x="994.94" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1059.5" y="1941" width="0.2" height="15.0" fill="rgb(241,133,25)" rx="2" ry="2" />
<text  x="1062.48" y="1951.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (6 samples, 0.10%)</title><rect x="989.2" y="1973" width="1.2" height="15.0" fill="rgb(237,60,19)" rx="2" ry="2" />
<text  x="992.16" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="1174.5" y="1941" width="0.2" height="15.0" fill="rgb(206,107,8)" rx="2" ry="2" />
<text  x="1177.51" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.19%)</title><rect x="10.2" y="2053" width="2.2" height="15.0" fill="rgb(215,137,21)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (1 samples, 0.02%)</title><rect x="963.7" y="2037" width="0.2" height="15.0" fill="rgb(238,57,32)" rx="2" ry="2" />
<text  x="966.73" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1117.7" y="1749" width="0.2" height="15.0" fill="rgb(232,9,41)" rx="2" ry="2" />
<text  x="1120.69" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1012.2" y="1909" width="0.2" height="15.0" fill="rgb(243,95,7)" rx="2" ry="2" />
<text  x="1015.21" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="571.8" y="1733" width="0.2" height="15.0" fill="rgb(231,182,54)" rx="2" ry="2" />
<text  x="574.79" y="1743.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="281.4" y="1797" width="0.2" height="15.0" fill="rgb(216,167,13)" rx="2" ry="2" />
<text  x="284.36" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="619.7" y="1941" width="0.2" height="15.0" fill="rgb(240,74,52)" rx="2" ry="2" />
<text  x="622.67" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="640.1" y="1957" width="0.2" height="15.0" fill="rgb(215,197,0)" rx="2" ry="2" />
<text  x="643.13" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (6 samples, 0.10%)</title><rect x="174.7" y="2021" width="1.2" height="15.0" fill="rgb(218,71,25)" rx="2" ry="2" />
<text  x="177.68" y="2031.5" ></text>
</g>
<g >
<title>__xmknod (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(240,11,48)" rx="2" ry="2" />
<text  x="15.38" y="2063.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1027.5" y="1813" width="0.2" height="15.0" fill="rgb(218,172,4)" rx="2" ry="2" />
<text  x="1030.50" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="513.4" y="1685" width="0.2" height="15.0" fill="rgb(228,51,27)" rx="2" ry="2" />
<text  x="516.39" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (5 samples, 0.08%)</title><rect x="870.2" y="1973" width="1.0" height="15.0" fill="rgb(238,178,15)" rx="2" ry="2" />
<text  x="873.17" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="835.0" y="1893" width="0.2" height="15.0" fill="rgb(234,212,25)" rx="2" ry="2" />
<text  x="838.01" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (78 samples, 1.31%)</title><rect x="678.9" y="2005" width="15.5" height="15.0" fill="rgb(235,160,20)" rx="2" ry="2" />
<text  x="681.87" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1047.2" y="2037" width="0.2" height="15.0" fill="rgb(206,139,7)" rx="2" ry="2" />
<text  x="1050.17" y="2047.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="540.6" y="1973" width="0.2" height="15.0" fill="rgb(233,172,52)" rx="2" ry="2" />
<text  x="543.60" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (3 samples, 0.05%)</title><rect x="931.9" y="1925" width="0.6" height="15.0" fill="rgb(205,78,40)" rx="2" ry="2" />
<text  x="934.95" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="892.4" y="1653" width="0.2" height="15.0" fill="rgb(232,155,16)" rx="2" ry="2" />
<text  x="895.42" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1139.9" y="1877" width="0.2" height="15.0" fill="rgb(227,71,22)" rx="2" ry="2" />
<text  x="1142.94" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::maySend (1 samples, 0.02%)</title><rect x="956.2" y="2005" width="0.2" height="15.0" fill="rgb(232,38,32)" rx="2" ry="2" />
<text  x="959.19" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="757.5" y="1381" width="0.2" height="15.0" fill="rgb(230,185,42)" rx="2" ry="2" />
<text  x="760.53" y="1391.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="116.7" y="37" width="0.2" height="15.0" fill="rgb(216,31,10)" rx="2" ry="2" />
<text  x="119.68" y="47.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="283.1" y="1781" width="0.2" height="15.0" fill="rgb(250,200,3)" rx="2" ry="2" />
<text  x="286.15" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1012.2" y="1765" width="0.2" height="15.0" fill="rgb(221,89,22)" rx="2" ry="2" />
<text  x="1015.21" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.13%)</title><rect x="806.0" y="1589" width="1.6" height="15.0" fill="rgb(248,176,9)" rx="2" ry="2" />
<text  x="809.00" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="138.9" y="2005" width="0.2" height="15.0" fill="rgb(240,124,7)" rx="2" ry="2" />
<text  x="141.93" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (8 samples, 0.13%)</title><rect x="544.2" y="1957" width="1.6" height="15.0" fill="rgb(246,76,0)" rx="2" ry="2" />
<text  x="547.18" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="830.8" y="1893" width="0.2" height="15.0" fill="rgb(213,66,18)" rx="2" ry="2" />
<text  x="833.84" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="118.9" y="69" width="0.2" height="15.0" fill="rgb(250,145,31)" rx="2" ry="2" />
<text  x="121.86" y="79.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (2 samples, 0.03%)</title><rect x="39.4" y="1973" width="0.4" height="15.0" fill="rgb(206,99,45)" rx="2" ry="2" />
<text  x="42.40" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="536.2" y="1669" width="0.2" height="15.0" fill="rgb(207,177,47)" rx="2" ry="2" />
<text  x="539.23" y="1679.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="151.2" y="1925" width="0.2" height="15.0" fill="rgb(215,34,34)" rx="2" ry="2" />
<text  x="154.24" y="1935.5" ></text>
</g>
<g >
<title>tcp_poll (33 samples, 0.56%)</title><rect x="507.2" y="1893" width="6.6" height="15.0" fill="rgb(233,92,42)" rx="2" ry="2" />
<text  x="510.23" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="1171.1" y="2005" width="0.2" height="15.0" fill="rgb(215,141,15)" rx="2" ry="2" />
<text  x="1174.13" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="623.8" y="1957" width="0.2" height="15.0" fill="rgb(226,83,20)" rx="2" ry="2" />
<text  x="626.84" y="1967.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="129.6" y="2005" width="0.2" height="15.0" fill="rgb(243,35,54)" rx="2" ry="2" />
<text  x="132.59" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="865.6" y="1893" width="0.2" height="15.0" fill="rgb(225,90,11)" rx="2" ry="2" />
<text  x="868.60" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (3 samples, 0.05%)</title><rect x="647.7" y="1989" width="0.6" height="15.0" fill="rgb(238,80,50)" rx="2" ry="2" />
<text  x="650.68" y="1999.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="941.1" y="1925" width="0.2" height="15.0" fill="rgb(218,181,14)" rx="2" ry="2" />
<text  x="944.09" y="1935.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="604.8" y="1877" width="0.2" height="15.0" fill="rgb(229,126,7)" rx="2" ry="2" />
<text  x="607.77" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1142.1" y="1941" width="0.2" height="15.0" fill="rgb(219,82,29)" rx="2" ry="2" />
<text  x="1145.12" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="769.5" y="1509" width="0.1" height="15.0" fill="rgb(241,171,13)" rx="2" ry="2" />
<text  x="772.45" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="160.2" y="1781" width="0.2" height="15.0" fill="rgb(229,180,33)" rx="2" ry="2" />
<text  x="163.18" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="70.6" y="1589" width="0.2" height="15.0" fill="rgb(251,78,10)" rx="2" ry="2" />
<text  x="73.59" y="1599.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="894.8" y="1925" width="0.2" height="15.0" fill="rgb(245,63,9)" rx="2" ry="2" />
<text  x="897.80" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="147.5" y="1909" width="0.4" height="15.0" fill="rgb(227,219,10)" rx="2" ry="2" />
<text  x="150.47" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1102.8" y="1877" width="0.2" height="15.0" fill="rgb(227,12,54)" rx="2" ry="2" />
<text  x="1105.79" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="672.5" y="1541" width="0.2" height="15.0" fill="rgb(211,107,5)" rx="2" ry="2" />
<text  x="675.51" y="1551.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="783.0" y="1477" width="0.2" height="15.0" fill="rgb(252,77,21)" rx="2" ry="2" />
<text  x="785.96" y="1487.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="334.0" y="1317" width="0.2" height="15.0" fill="rgb(247,225,40)" rx="2" ry="2" />
<text  x="337.00" y="1327.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="984.6" y="2005" width="0.2" height="15.0" fill="rgb(248,21,17)" rx="2" ry="2" />
<text  x="987.59" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1105.2" y="1861" width="0.2" height="15.0" fill="rgb(233,144,29)" rx="2" ry="2" />
<text  x="1108.18" y="1871.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="740.8" y="1797" width="0.2" height="15.0" fill="rgb(250,48,0)" rx="2" ry="2" />
<text  x="743.85" y="1807.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="208.5" y="2021" width="0.4" height="15.0" fill="rgb(235,92,6)" rx="2" ry="2" />
<text  x="211.45" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="261" width="13.5" height="15.0" fill="rgb(236,222,13)" rx="2" ry="2" />
<text  x="108.75" y="271.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.1" y="1941" width="0.1" height="15.0" fill="rgb(206,103,36)" rx="2" ry="2" />
<text  x="861.05" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="235.7" y="1877" width="0.2" height="15.0" fill="rgb(225,87,1)" rx="2" ry="2" />
<text  x="238.67" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (9 samples, 0.15%)</title><rect x="76.4" y="1957" width="1.7" height="15.0" fill="rgb(230,204,26)" rx="2" ry="2" />
<text  x="79.35" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="897.8" y="1973" width="0.2" height="15.0" fill="rgb(214,15,50)" rx="2" ry="2" />
<text  x="900.78" y="1983.5" ></text>
</g>
<g >
<title>bictcp_state (1 samples, 0.02%)</title><rect x="373.7" y="1653" width="0.2" height="15.0" fill="rgb(245,46,33)" rx="2" ry="2" />
<text  x="376.73" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="691.4" y="1893" width="0.2" height="15.0" fill="rgb(254,20,1)" rx="2" ry="2" />
<text  x="694.38" y="1903.5" ></text>
</g>
<g >
<title>__fdget (31 samples, 0.52%)</title><rect x="452.4" y="1973" width="6.2" height="15.0" fill="rgb(246,75,41)" rx="2" ry="2" />
<text  x="455.40" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="887.8" y="1509" width="0.2" height="15.0" fill="rgb(225,222,15)" rx="2" ry="2" />
<text  x="890.85" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="606.6" y="1989" width="0.2" height="15.0" fill="rgb(217,27,11)" rx="2" ry="2" />
<text  x="609.56" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="829.6" y="1717" width="0.2" height="15.0" fill="rgb(227,9,20)" rx="2" ry="2" />
<text  x="832.64" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (390 samples, 6.57%)</title><rect x="1048.6" y="2021" width="77.4" height="15.0" fill="rgb(233,131,26)" rx="2" ry="2" />
<text  x="1051.56" y="2031.5" >do_sysca..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="74.4" y="1877" width="0.2" height="15.0" fill="rgb(211,22,39)" rx="2" ry="2" />
<text  x="77.36" y="1887.5" ></text>
</g>
<g >
<title>task_work_run (502 samples, 8.45%)</title><rect x="724.8" y="1845" width="99.7" height="15.0" fill="rgb(237,165,14)" rx="2" ry="2" />
<text  x="727.75" y="1855.5" >task_work_run</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="791.9" y="1445" width="0.2" height="15.0" fill="rgb(232,49,40)" rx="2" ry="2" />
<text  x="794.90" y="1455.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="161.0" y="1877" width="0.4" height="15.0" fill="rgb(250,17,50)" rx="2" ry="2" />
<text  x="163.98" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="884.7" y="1845" width="0.2" height="15.0" fill="rgb(221,179,42)" rx="2" ry="2" />
<text  x="887.67" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="141.3" y="1941" width="0.2" height="15.0" fill="rgb(211,158,26)" rx="2" ry="2" />
<text  x="144.31" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="334.0" y="1397" width="0.2" height="15.0" fill="rgb(253,134,6)" rx="2" ry="2" />
<text  x="337.00" y="1407.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="536.0" y="1941" width="0.4" height="15.0" fill="rgb(234,95,14)" rx="2" ry="2" />
<text  x="539.03" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="386.2" y="1669" width="0.2" height="15.0" fill="rgb(213,175,19)" rx="2" ry="2" />
<text  x="389.25" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1010.2" y="1989" width="0.4" height="15.0" fill="rgb(245,28,23)" rx="2" ry="2" />
<text  x="1013.22" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (7 samples, 0.12%)</title><rect x="1127.8" y="1957" width="1.4" height="15.0" fill="rgb(210,223,5)" rx="2" ry="2" />
<text  x="1130.82" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="799.4" y="1669" width="0.4" height="15.0" fill="rgb(218,25,52)" rx="2" ry="2" />
<text  x="802.45" y="1679.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="229.1" y="1829" width="1.4" height="15.0" fill="rgb(211,136,16)" rx="2" ry="2" />
<text  x="232.11" y="1839.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (2 samples, 0.03%)</title><rect x="944.3" y="1941" width="0.4" height="15.0" fill="rgb(208,177,17)" rx="2" ry="2" />
<text  x="947.27" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="60.1" y="1909" width="0.2" height="15.0" fill="rgb(208,26,41)" rx="2" ry="2" />
<text  x="63.06" y="1919.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="154.6" y="1797" width="0.2" height="15.0" fill="rgb(208,203,44)" rx="2" ry="2" />
<text  x="157.62" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="291.1" y="1557" width="0.2" height="15.0" fill="rgb(206,205,52)" rx="2" ry="2" />
<text  x="294.09" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="713.0" y="1829" width="0.2" height="15.0" fill="rgb(240,61,30)" rx="2" ry="2" />
<text  x="716.03" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="848.7" y="1893" width="0.4" height="15.0" fill="rgb(233,224,31)" rx="2" ry="2" />
<text  x="851.71" y="1903.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="95.0" y="1989" width="0.2" height="15.0" fill="rgb(217,121,24)" rx="2" ry="2" />
<text  x="98.02" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="697.5" y="1845" width="0.2" height="15.0" fill="rgb(251,47,32)" rx="2" ry="2" />
<text  x="700.54" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="556.3" y="1973" width="1.0" height="15.0" fill="rgb(227,218,6)" rx="2" ry="2" />
<text  x="559.30" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="783.2" y="1445" width="0.2" height="15.0" fill="rgb(212,130,11)" rx="2" ry="2" />
<text  x="786.16" y="1455.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.03%)</title><rect x="878.1" y="1925" width="0.4" height="15.0" fill="rgb(221,157,29)" rx="2" ry="2" />
<text  x="881.11" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="144.1" y="1877" width="0.2" height="15.0" fill="rgb(215,114,11)" rx="2" ry="2" />
<text  x="147.09" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="884.5" y="1733" width="0.2" height="15.0" fill="rgb(221,169,24)" rx="2" ry="2" />
<text  x="887.47" y="1743.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="334.0" y="1301" width="0.2" height="15.0" fill="rgb(249,205,22)" rx="2" ry="2" />
<text  x="337.00" y="1311.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="961.2" y="2037" width="0.7" height="15.0" fill="rgb(224,133,17)" rx="2" ry="2" />
<text  x="964.15" y="2047.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="468.3" y="1813" width="0.2" height="15.0" fill="rgb(226,65,37)" rx="2" ry="2" />
<text  x="471.29" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="618.1" y="1957" width="0.2" height="15.0" fill="rgb(233,66,43)" rx="2" ry="2" />
<text  x="621.08" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (4 samples, 0.07%)</title><rect x="888.4" y="1925" width="0.8" height="15.0" fill="rgb(237,32,31)" rx="2" ry="2" />
<text  x="891.44" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1112.1" y="1445" width="0.2" height="15.0" fill="rgb(211,19,17)" rx="2" ry="2" />
<text  x="1115.13" y="1455.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="619.7" y="2005" width="0.2" height="15.0" fill="rgb(241,68,42)" rx="2" ry="2" />
<text  x="622.67" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="892.4" y="1845" width="0.2" height="15.0" fill="rgb(240,2,48)" rx="2" ry="2" />
<text  x="895.42" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (58 samples, 0.98%)</title><rect x="607.0" y="2021" width="11.5" height="15.0" fill="rgb(243,197,19)" rx="2" ry="2" />
<text  x="609.95" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="53.9" y="1941" width="0.6" height="15.0" fill="rgb(218,26,46)" rx="2" ry="2" />
<text  x="56.90" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (4 samples, 0.07%)</title><rect x="578.5" y="1973" width="0.8" height="15.0" fill="rgb(236,60,7)" rx="2" ry="2" />
<text  x="581.55" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1027.3" y="1925" width="0.4" height="15.0" fill="rgb(252,2,6)" rx="2" ry="2" />
<text  x="1030.30" y="1935.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="80.3" y="1941" width="0.2" height="15.0" fill="rgb(249,28,50)" rx="2" ry="2" />
<text  x="83.32" y="1951.5" ></text>
</g>
<g >
<title>folly::operator!= (7 samples, 0.12%)</title><rect x="31.1" y="1989" width="1.3" height="15.0" fill="rgb(207,135,29)" rx="2" ry="2" />
<text  x="34.06" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.2" y="1813" width="0.2" height="15.0" fill="rgb(251,96,51)" rx="2" ry="2" />
<text  x="163.18" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (3 samples, 0.05%)</title><rect x="649.9" y="1973" width="0.6" height="15.0" fill="rgb(231,72,38)" rx="2" ry="2" />
<text  x="652.86" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1701" width="0.2" height="15.0" fill="rgb(209,162,7)" rx="2" ry="2" />
<text  x="238.67" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="672.5" y="1685" width="0.2" height="15.0" fill="rgb(213,200,33)" rx="2" ry="2" />
<text  x="675.51" y="1695.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="769.5" y="1477" width="0.1" height="15.0" fill="rgb(239,109,14)" rx="2" ry="2" />
<text  x="772.45" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="848.7" y="1877" width="0.4" height="15.0" fill="rgb(227,3,14)" rx="2" ry="2" />
<text  x="851.71" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (836 samples, 14.07%)</title><rect x="702.5" y="2005" width="166.1" height="15.0" fill="rgb(244,74,47)" rx="2" ry="2" />
<text  x="705.51" y="2015.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="145.7" y="1925" width="0.2" height="15.0" fill="rgb(210,141,42)" rx="2" ry="2" />
<text  x="148.68" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1004.7" y="1909" width="0.2" height="15.0" fill="rgb(250,39,24)" rx="2" ry="2" />
<text  x="1007.66" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="875.5" y="1925" width="0.2" height="15.0" fill="rgb(230,172,6)" rx="2" ry="2" />
<text  x="878.53" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="474.3" y="1941" width="0.5" height="15.0" fill="rgb(209,125,27)" rx="2" ry="2" />
<text  x="477.25" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (568 samples, 9.56%)</title><rect x="717.8" y="1877" width="112.8" height="15.0" fill="rgb(235,184,14)" rx="2" ry="2" />
<text  x="720.80" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (8 samples, 0.13%)</title><rect x="12.8" y="1845" width="1.6" height="15.0" fill="rgb(225,142,42)" rx="2" ry="2" />
<text  x="15.78" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="75.8" y="1909" width="0.2" height="15.0" fill="rgb(246,118,18)" rx="2" ry="2" />
<text  x="78.75" y="1919.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="326.9" y="1461" width="0.2" height="15.0" fill="rgb(212,221,25)" rx="2" ry="2" />
<text  x="329.85" y="1471.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="327.2" y="1733" width="0.2" height="15.0" fill="rgb(217,102,9)" rx="2" ry="2" />
<text  x="330.25" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="941.9" y="1973" width="0.6" height="15.0" fill="rgb(236,171,28)" rx="2" ry="2" />
<text  x="944.88" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="349.1" y="1909" width="0.4" height="15.0" fill="rgb(214,63,54)" rx="2" ry="2" />
<text  x="352.10" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="880.1" y="1941" width="0.2" height="15.0" fill="rgb(235,160,23)" rx="2" ry="2" />
<text  x="883.10" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="281.8" y="1845" width="0.2" height="15.0" fill="rgb(250,201,39)" rx="2" ry="2" />
<text  x="284.76" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="852.7" y="1877" width="0.2" height="15.0" fill="rgb(210,91,40)" rx="2" ry="2" />
<text  x="855.69" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (18 samples, 0.30%)</title><rect x="1146.7" y="2037" width="3.6" height="15.0" fill="rgb(213,76,19)" rx="2" ry="2" />
<text  x="1149.69" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="895.4" y="1765" width="0.2" height="15.0" fill="rgb(244,156,22)" rx="2" ry="2" />
<text  x="898.40" y="1775.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="337.2" y="1525" width="0.2" height="15.0" fill="rgb(226,101,46)" rx="2" ry="2" />
<text  x="340.18" y="1535.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="1102.8" y="1541" width="0.2" height="15.0" fill="rgb(250,159,40)" rx="2" ry="2" />
<text  x="1105.79" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="373.7" y="1717" width="0.2" height="15.0" fill="rgb(224,26,39)" rx="2" ry="2" />
<text  x="376.73" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="68.6" y="1893" width="0.2" height="15.0" fill="rgb(243,4,52)" rx="2" ry="2" />
<text  x="71.60" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="412.7" y="1701" width="0.2" height="15.0" fill="rgb(229,19,26)" rx="2" ry="2" />
<text  x="415.67" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="483.0" y="1957" width="0.2" height="15.0" fill="rgb(242,174,0)" rx="2" ry="2" />
<text  x="485.99" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="161.6" y="1925" width="0.2" height="15.0" fill="rgb(207,144,14)" rx="2" ry="2" />
<text  x="164.57" y="1935.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="326.9" y="1445" width="0.2" height="15.0" fill="rgb(239,98,12)" rx="2" ry="2" />
<text  x="329.85" y="1455.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="406.1" y="1877" width="0.2" height="15.0" fill="rgb(219,70,4)" rx="2" ry="2" />
<text  x="409.11" y="1887.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="555.1" y="1717" width="0.2" height="15.0" fill="rgb(220,32,30)" rx="2" ry="2" />
<text  x="558.10" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="386.2" y="1781" width="0.2" height="15.0" fill="rgb(215,148,12)" rx="2" ry="2" />
<text  x="389.25" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="239.0" y="2021" width="0.2" height="15.0" fill="rgb(235,105,14)" rx="2" ry="2" />
<text  x="242.05" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="905.1" y="2021" width="0.2" height="15.0" fill="rgb(217,2,31)" rx="2" ry="2" />
<text  x="908.13" y="2031.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="917.8" y="2005" width="0.2" height="15.0" fill="rgb(205,202,23)" rx="2" ry="2" />
<text  x="920.85" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (7 samples, 0.12%)</title><rect x="574.0" y="2005" width="1.4" height="15.0" fill="rgb(252,175,49)" rx="2" ry="2" />
<text  x="576.98" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="75.8" y="1861" width="0.2" height="15.0" fill="rgb(222,15,13)" rx="2" ry="2" />
<text  x="78.75" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1176.9" y="1989" width="0.2" height="15.0" fill="rgb(220,228,21)" rx="2" ry="2" />
<text  x="1179.89" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="299.6" y="1477" width="0.6" height="15.0" fill="rgb(228,130,3)" rx="2" ry="2" />
<text  x="302.64" y="1487.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="732.9" y="1701" width="0.2" height="15.0" fill="rgb(245,168,3)" rx="2" ry="2" />
<text  x="735.90" y="1711.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="402.9" y="1893" width="0.2" height="15.0" fill="rgb(232,5,37)" rx="2" ry="2" />
<text  x="405.94" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="412.7" y="1717" width="0.2" height="15.0" fill="rgb(218,155,19)" rx="2" ry="2" />
<text  x="415.67" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1004.7" y="2021" width="0.2" height="15.0" fill="rgb(244,102,37)" rx="2" ry="2" />
<text  x="1007.66" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="527.7" y="1957" width="0.2" height="15.0" fill="rgb(207,225,30)" rx="2" ry="2" />
<text  x="530.69" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="896.8" y="1973" width="0.4" height="15.0" fill="rgb(240,64,7)" rx="2" ry="2" />
<text  x="899.79" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="969.9" y="2021" width="2.0" height="15.0" fill="rgb(233,215,1)" rx="2" ry="2" />
<text  x="972.89" y="2031.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1110.5" y="1381" width="0.2" height="15.0" fill="rgb(243,213,50)" rx="2" ry="2" />
<text  x="1113.54" y="1391.5" ></text>
</g>
<g >
<title>__close_fd (1 samples, 0.02%)</title><rect x="723.8" y="1861" width="0.2" height="15.0" fill="rgb(236,104,27)" rx="2" ry="2" />
<text  x="726.76" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="905.1" y="2037" width="0.2" height="15.0" fill="rgb(220,193,52)" rx="2" ry="2" />
<text  x="908.13" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1004.7" y="1957" width="0.2" height="15.0" fill="rgb(252,47,4)" rx="2" ry="2" />
<text  x="1007.66" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="417.0" y="1845" width="0.4" height="15.0" fill="rgb(239,114,20)" rx="2" ry="2" />
<text  x="420.04" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1161.8" y="1829" width="0.2" height="15.0" fill="rgb(239,34,53)" rx="2" ry="2" />
<text  x="1164.79" y="1839.5" ></text>
</g>
<g >
<title>security_socket_getsockname (1 samples, 0.02%)</title><rect x="598.6" y="1861" width="0.2" height="15.0" fill="rgb(220,170,11)" rx="2" ry="2" />
<text  x="601.61" y="1871.5" ></text>
</g>
<g >
<title>netif_skb_features (4 samples, 0.07%)</title><rect x="790.7" y="1509" width="0.8" height="15.0" fill="rgb(250,65,15)" rx="2" ry="2" />
<text  x="793.71" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (125 samples, 2.10%)</title><rect x="211.6" y="1973" width="24.9" height="15.0" fill="rgb(232,197,16)" rx="2" ry="2" />
<text  x="214.63" y="1983.5" >f..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="15.0" y="1877" width="0.8" height="15.0" fill="rgb(223,202,27)" rx="2" ry="2" />
<text  x="17.97" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="534.4" y="2021" width="0.2" height="15.0" fill="rgb(217,120,27)" rx="2" ry="2" />
<text  x="537.44" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (133 samples, 2.24%)</title><rect x="210.0" y="2005" width="26.5" height="15.0" fill="rgb(209,103,29)" rx="2" ry="2" />
<text  x="213.04" y="2015.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="862.4" y="1829" width="0.2" height="15.0" fill="rgb(235,106,11)" rx="2" ry="2" />
<text  x="865.42" y="1839.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="842.6" y="1893" width="0.2" height="15.0" fill="rgb(234,118,15)" rx="2" ry="2" />
<text  x="845.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (312 samples, 5.25%)</title><rect x="104.2" y="2021" width="61.9" height="15.0" fill="rgb(231,170,48)" rx="2" ry="2" />
<text  x="107.16" y="2031.5" >[unkno..</text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="486.8" y="1957" width="0.2" height="15.0" fill="rgb(250,226,51)" rx="2" ry="2" />
<text  x="489.77" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="260.1" y="1877" width="0.8" height="15.0" fill="rgb(244,110,25)" rx="2" ry="2" />
<text  x="263.10" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="489.0" y="1877" width="0.2" height="15.0" fill="rgb(251,52,9)" rx="2" ry="2" />
<text  x="491.95" y="1887.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="1059.7" y="1733" width="0.2" height="15.0" fill="rgb(246,24,7)" rx="2" ry="2" />
<text  x="1062.68" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (102 samples, 1.72%)</title><rect x="214.2" y="1957" width="20.3" height="15.0" fill="rgb(238,162,37)" rx="2" ry="2" />
<text  x="217.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="631.2" y="2021" width="13.9" height="15.0" fill="rgb(241,154,2)" rx="2" ry="2" />
<text  x="634.19" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="483.0" y="1845" width="0.2" height="15.0" fill="rgb(236,150,6)" rx="2" ry="2" />
<text  x="485.99" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="453" width="13.5" height="15.0" fill="rgb(247,67,54)" rx="2" ry="2" />
<text  x="108.75" y="463.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (1 samples, 0.02%)</title><rect x="99.6" y="2005" width="0.2" height="15.0" fill="rgb(245,199,16)" rx="2" ry="2" />
<text  x="102.59" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="99.6" y="1957" width="0.2" height="15.0" fill="rgb(230,65,19)" rx="2" ry="2" />
<text  x="102.59" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="574.2" y="1733" width="0.2" height="15.0" fill="rgb(245,222,54)" rx="2" ry="2" />
<text  x="577.18" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (6 samples, 0.10%)</title><rect x="1143.3" y="2021" width="1.2" height="15.0" fill="rgb(230,193,14)" rx="2" ry="2" />
<text  x="1146.32" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="213" width="13.5" height="15.0" fill="rgb(246,80,2)" rx="2" ry="2" />
<text  x="108.75" y="223.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="480.4" y="1813" width="0.2" height="15.0" fill="rgb(239,188,31)" rx="2" ry="2" />
<text  x="483.41" y="1823.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="536.2" y="1573" width="0.2" height="15.0" fill="rgb(238,36,23)" rx="2" ry="2" />
<text  x="539.23" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="253.4" y="1845" width="0.1" height="15.0" fill="rgb(209,78,35)" rx="2" ry="2" />
<text  x="256.35" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="109.7" y="37" width="0.4" height="15.0" fill="rgb(227,42,3)" rx="2" ry="2" />
<text  x="112.72" y="47.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (33 samples, 0.56%)</title><rect x="801.0" y="1685" width="6.6" height="15.0" fill="rgb(251,54,50)" rx="2" ry="2" />
<text  x="804.04" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="70.6" y="1621" width="0.2" height="15.0" fill="rgb(253,17,26)" rx="2" ry="2" />
<text  x="73.59" y="1631.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1102.8" y="1573" width="0.2" height="15.0" fill="rgb(216,115,30)" rx="2" ry="2" />
<text  x="1105.79" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc (8 samples, 0.13%)</title><rect x="276.4" y="1813" width="1.6" height="15.0" fill="rgb(239,136,18)" rx="2" ry="2" />
<text  x="279.39" y="1823.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="159.6" y="1541" width="0.2" height="15.0" fill="rgb(211,141,1)" rx="2" ry="2" />
<text  x="162.59" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="857.7" y="1925" width="0.2" height="15.0" fill="rgb(209,142,49)" rx="2" ry="2" />
<text  x="860.65" y="1935.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="848.7" y="1605" width="0.2" height="15.0" fill="rgb(251,17,0)" rx="2" ry="2" />
<text  x="851.71" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="63.4" y="1893" width="0.2" height="15.0" fill="rgb(223,123,22)" rx="2" ry="2" />
<text  x="66.44" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="845.1" y="1893" width="0.2" height="15.0" fill="rgb(223,39,15)" rx="2" ry="2" />
<text  x="848.14" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="555.9" y="1973" width="0.2" height="15.0" fill="rgb(236,79,24)" rx="2" ry="2" />
<text  x="558.90" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="198.3" y="1989" width="0.2" height="15.0" fill="rgb(206,87,30)" rx="2" ry="2" />
<text  x="201.32" y="1999.5" ></text>
</g>
<g >
<title>event_assign (4 samples, 0.07%)</title><rect x="967.7" y="2005" width="0.8" height="15.0" fill="rgb(236,57,22)" rx="2" ry="2" />
<text  x="970.71" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="72.6" y="1909" width="0.2" height="15.0" fill="rgb(249,205,20)" rx="2" ry="2" />
<text  x="75.58" y="1919.5" ></text>
</g>
<g >
<title>dev_queue_xmit (106 samples, 1.78%)</title><rect x="300.4" y="1733" width="21.1" height="15.0" fill="rgb(249,93,29)" rx="2" ry="2" />
<text  x="303.43" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (6 samples, 0.10%)</title><rect x="618.5" y="2005" width="1.2" height="15.0" fill="rgb(241,62,8)" rx="2" ry="2" />
<text  x="621.47" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="791.9" y="1429" width="0.2" height="15.0" fill="rgb(243,142,44)" rx="2" ry="2" />
<text  x="794.90" y="1439.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="73.4" y="1909" width="0.2" height="15.0" fill="rgb(228,40,6)" rx="2" ry="2" />
<text  x="76.37" y="1919.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1169.3" y="1941" width="0.2" height="15.0" fill="rgb(245,228,14)" rx="2" ry="2" />
<text  x="1172.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="298.8" y="1461" width="0.2" height="15.0" fill="rgb(244,215,40)" rx="2" ry="2" />
<text  x="301.84" y="1471.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="348.5" y="1989" width="0.2" height="15.0" fill="rgb(234,13,45)" rx="2" ry="2" />
<text  x="351.51" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="574.2" y="1701" width="0.2" height="15.0" fill="rgb(226,26,42)" rx="2" ry="2" />
<text  x="577.18" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="618.1" y="1893" width="0.2" height="15.0" fill="rgb(245,113,18)" rx="2" ry="2" />
<text  x="621.08" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1105.2" y="1685" width="0.2" height="15.0" fill="rgb(250,113,45)" rx="2" ry="2" />
<text  x="1108.18" y="1695.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (16 samples, 0.27%)</title><rect x="374.1" y="1941" width="3.2" height="15.0" fill="rgb(227,216,19)" rx="2" ry="2" />
<text  x="377.13" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (26 samples, 0.44%)</title><rect x="380.9" y="1925" width="5.2" height="15.0" fill="rgb(241,104,36)" rx="2" ry="2" />
<text  x="383.89" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="606.0" y="1989" width="0.2" height="15.0" fill="rgb(233,85,50)" rx="2" ry="2" />
<text  x="608.96" y="1999.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="974.9" y="2021" width="0.2" height="15.0" fill="rgb(213,28,35)" rx="2" ry="2" />
<text  x="977.86" y="2031.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="72.0" y="1877" width="0.2" height="15.0" fill="rgb(249,2,43)" rx="2" ry="2" />
<text  x="74.98" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1102.8" y="1653" width="0.2" height="15.0" fill="rgb(237,58,2)" rx="2" ry="2" />
<text  x="1105.79" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="924.0" y="1989" width="0.4" height="15.0" fill="rgb(208,54,47)" rx="2" ry="2" />
<text  x="927.00" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="555.1" y="1765" width="0.2" height="15.0" fill="rgb(253,62,7)" rx="2" ry="2" />
<text  x="558.10" y="1775.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (14 samples, 0.24%)</title><rect x="410.5" y="1941" width="2.8" height="15.0" fill="rgb(247,63,11)" rx="2" ry="2" />
<text  x="413.48" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="68.6" y="1813" width="0.2" height="15.0" fill="rgb(224,178,9)" rx="2" ry="2" />
<text  x="71.60" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="544.6" y="1925" width="0.8" height="15.0" fill="rgb(208,93,49)" rx="2" ry="2" />
<text  x="547.58" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="51.1" y="1845" width="0.2" height="15.0" fill="rgb(249,99,36)" rx="2" ry="2" />
<text  x="54.12" y="1855.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="125.6" y="1829" width="0.8" height="15.0" fill="rgb(228,194,29)" rx="2" ry="2" />
<text  x="128.62" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="926.2" y="2005" width="0.6" height="15.0" fill="rgb(243,140,8)" rx="2" ry="2" />
<text  x="929.19" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="713.0" y="1877" width="0.2" height="15.0" fill="rgb(225,90,47)" rx="2" ry="2" />
<text  x="716.03" y="1887.5" ></text>
</g>
<g >
<title>inet_getname (7 samples, 0.12%)</title><rect x="596.6" y="1861" width="1.4" height="15.0" fill="rgb(228,181,20)" rx="2" ry="2" />
<text  x="599.62" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (399 samples, 6.72%)</title><rect x="1047.4" y="2037" width="79.2" height="15.0" fill="rgb(234,123,40)" rx="2" ry="2" />
<text  x="1050.37" y="2047.5" >entry_SYS..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="180.4" y="1957" width="0.2" height="15.0" fill="rgb(214,88,25)" rx="2" ry="2" />
<text  x="183.44" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1019.8" y="1973" width="0.7" height="15.0" fill="rgb(251,171,37)" rx="2" ry="2" />
<text  x="1022.75" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (2 samples, 0.03%)</title><rect x="940.3" y="1893" width="0.4" height="15.0" fill="rgb(235,83,3)" rx="2" ry="2" />
<text  x="943.29" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (133 samples, 2.24%)</title><rect x="871.6" y="2005" width="26.4" height="15.0" fill="rgb(237,42,10)" rx="2" ry="2" />
<text  x="874.56" y="2015.5" >f..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="556.7" y="1733" width="0.2" height="15.0" fill="rgb(240,21,22)" rx="2" ry="2" />
<text  x="559.69" y="1743.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="919.2" y="2005" width="0.2" height="15.0" fill="rgb(238,4,6)" rx="2" ry="2" />
<text  x="922.24" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="819.3" y="1621" width="0.2" height="15.0" fill="rgb(242,64,27)" rx="2" ry="2" />
<text  x="822.31" y="1631.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="848.7" y="1557" width="0.2" height="15.0" fill="rgb(247,132,22)" rx="2" ry="2" />
<text  x="851.71" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="386.2" y="1733" width="0.2" height="15.0" fill="rgb(229,158,1)" rx="2" ry="2" />
<text  x="389.25" y="1743.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="697.5" y="1717" width="0.2" height="15.0" fill="rgb(252,29,26)" rx="2" ry="2" />
<text  x="700.54" y="1727.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (3 samples, 0.05%)</title><rect x="496.1" y="2037" width="0.6" height="15.0" fill="rgb(217,117,35)" rx="2" ry="2" />
<text  x="499.10" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="489.7" y="1925" width="0.2" height="15.0" fill="rgb(248,97,38)" rx="2" ry="2" />
<text  x="492.75" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="198.3" y="1973" width="0.2" height="15.0" fill="rgb(236,9,14)" rx="2" ry="2" />
<text  x="201.32" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="625.0" y="1989" width="0.2" height="15.0" fill="rgb(212,10,7)" rx="2" ry="2" />
<text  x="628.03" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1160.8" y="1669" width="0.2" height="15.0" fill="rgb(229,44,18)" rx="2" ry="2" />
<text  x="1163.80" y="1679.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1118.9" y="1877" width="0.2" height="15.0" fill="rgb(226,127,30)" rx="2" ry="2" />
<text  x="1121.88" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (4 samples, 0.07%)</title><rect x="842.0" y="1925" width="0.8" height="15.0" fill="rgb(210,192,38)" rx="2" ry="2" />
<text  x="844.96" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="484.0" y="1957" width="0.2" height="15.0" fill="rgb(240,98,23)" rx="2" ry="2" />
<text  x="486.99" y="1967.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="735.1" y="1653" width="0.6" height="15.0" fill="rgb(252,73,20)" rx="2" ry="2" />
<text  x="738.08" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="188.2" y="2005" width="0.2" height="15.0" fill="rgb(226,35,30)" rx="2" ry="2" />
<text  x="191.19" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="489.2" y="1685" width="0.2" height="15.0" fill="rgb(216,112,1)" rx="2" ry="2" />
<text  x="492.15" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="55.5" y="1925" width="0.2" height="15.0" fill="rgb(229,51,34)" rx="2" ry="2" />
<text  x="58.49" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="195.1" y="2021" width="0.2" height="15.0" fill="rgb(243,80,45)" rx="2" ry="2" />
<text  x="198.14" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (4 samples, 0.07%)</title><rect x="111.7" y="37" width="0.8" height="15.0" fill="rgb(208,112,15)" rx="2" ry="2" />
<text  x="114.71" y="47.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (11 samples, 0.19%)</title><rect x="344.3" y="1893" width="2.2" height="15.0" fill="rgb(205,161,44)" rx="2" ry="2" />
<text  x="347.33" y="1903.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="691.4" y="1877" width="0.2" height="15.0" fill="rgb(251,36,54)" rx="2" ry="2" />
<text  x="694.38" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.8" y="1973" width="0.2" height="15.0" fill="rgb(223,183,18)" rx="2" ry="2" />
<text  x="68.82" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="757.5" y="1605" width="0.2" height="15.0" fill="rgb(230,180,54)" rx="2" ry="2" />
<text  x="760.53" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1161.8" y="1797" width="0.2" height="15.0" fill="rgb(233,89,8)" rx="2" ry="2" />
<text  x="1164.79" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="160.6" y="1893" width="0.2" height="15.0" fill="rgb(213,21,38)" rx="2" ry="2" />
<text  x="163.58" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="885.1" y="1925" width="0.6" height="15.0" fill="rgb(225,123,28)" rx="2" ry="2" />
<text  x="888.07" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="105.0" y="1621" width="17.2" height="15.0" fill="rgb(226,197,10)" rx="2" ry="2" />
<text  x="107.96" y="1631.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="1139.9" y="1733" width="0.2" height="15.0" fill="rgb(219,85,17)" rx="2" ry="2" />
<text  x="1142.94" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (1 samples, 0.02%)</title><rect x="236.5" y="2005" width="0.2" height="15.0" fill="rgb(251,174,16)" rx="2" ry="2" />
<text  x="239.46" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="489.2" y="1829" width="0.2" height="15.0" fill="rgb(214,132,39)" rx="2" ry="2" />
<text  x="492.15" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="489.7" y="1797" width="0.2" height="15.0" fill="rgb(208,138,30)" rx="2" ry="2" />
<text  x="492.75" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="672.5" y="1621" width="0.2" height="15.0" fill="rgb(242,224,38)" rx="2" ry="2" />
<text  x="675.51" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="1007.6" y="1957" width="0.2" height="15.0" fill="rgb(232,35,54)" rx="2" ry="2" />
<text  x="1010.64" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="104.4" y="1781" width="19.0" height="15.0" fill="rgb(241,135,47)" rx="2" ry="2" />
<text  x="107.36" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="967.1" y="1957" width="0.2" height="15.0" fill="rgb(229,102,6)" rx="2" ry="2" />
<text  x="970.11" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="775.4" y="1557" width="0.2" height="15.0" fill="rgb(226,177,37)" rx="2" ry="2" />
<text  x="778.41" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="392.4" y="1861" width="0.2" height="15.0" fill="rgb(227,14,44)" rx="2" ry="2" />
<text  x="395.41" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1125.2" y="1797" width="0.4" height="15.0" fill="rgb(214,83,24)" rx="2" ry="2" />
<text  x="1128.24" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="514.8" y="1621" width="0.2" height="15.0" fill="rgb(248,216,22)" rx="2" ry="2" />
<text  x="517.78" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="526.5" y="1941" width="0.6" height="15.0" fill="rgb(219,223,50)" rx="2" ry="2" />
<text  x="529.50" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (4 samples, 0.07%)</title><rect x="1148.5" y="1989" width="0.8" height="15.0" fill="rgb(240,16,4)" rx="2" ry="2" />
<text  x="1151.48" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="497.5" y="1781" width="0.2" height="15.0" fill="rgb(213,172,2)" rx="2" ry="2" />
<text  x="500.49" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="349.1" y="1781" width="0.4" height="15.0" fill="rgb(224,213,10)" rx="2" ry="2" />
<text  x="352.10" y="1791.5" ></text>
</g>
<g >
<title>ep_send_events_proc (89 samples, 1.50%)</title><rect x="498.1" y="1941" width="17.7" height="15.0" fill="rgb(218,105,35)" rx="2" ry="2" />
<text  x="501.09" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1033.5" y="1813" width="0.2" height="15.0" fill="rgb(233,129,21)" rx="2" ry="2" />
<text  x="1036.46" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="623.4" y="2037" width="1.8" height="15.0" fill="rgb(218,128,25)" rx="2" ry="2" />
<text  x="626.44" y="2047.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.05%)</title><rect x="95.2" y="1989" width="0.6" height="15.0" fill="rgb(222,141,2)" rx="2" ry="2" />
<text  x="98.22" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="198.3" y="1941" width="0.2" height="15.0" fill="rgb(219,31,35)" rx="2" ry="2" />
<text  x="201.32" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="61.6" y="1925" width="1.4" height="15.0" fill="rgb(213,7,49)" rx="2" ry="2" />
<text  x="64.65" y="1935.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="141.1" y="1845" width="0.2" height="15.0" fill="rgb(226,16,24)" rx="2" ry="2" />
<text  x="144.11" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.8" y="1829" width="0.2" height="15.0" fill="rgb(245,54,8)" rx="2" ry="2" />
<text  x="890.85" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="333.6" y="1669" width="0.6" height="15.0" fill="rgb(219,22,18)" rx="2" ry="2" />
<text  x="336.61" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="869.0" y="1989" width="0.6" height="15.0" fill="rgb(231,191,1)" rx="2" ry="2" />
<text  x="871.98" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="259.5" y="1893" width="0.2" height="15.0" fill="rgb(245,153,35)" rx="2" ry="2" />
<text  x="262.51" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="892.4" y="1701" width="0.2" height="15.0" fill="rgb(246,113,52)" rx="2" ry="2" />
<text  x="895.42" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="277" width="13.5" height="15.0" fill="rgb(245,188,29)" rx="2" ry="2" />
<text  x="108.75" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="390.0" y="1925" width="0.4" height="15.0" fill="rgb(248,123,11)" rx="2" ry="2" />
<text  x="393.02" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="620.5" y="2005" width="0.2" height="15.0" fill="rgb(248,180,37)" rx="2" ry="2" />
<text  x="623.46" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="770.0" y="1605" width="0.2" height="15.0" fill="rgb(214,72,27)" rx="2" ry="2" />
<text  x="773.05" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="153.8" y="1861" width="0.6" height="15.0" fill="rgb(230,116,45)" rx="2" ry="2" />
<text  x="156.82" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="839.0" y="1893" width="0.2" height="15.0" fill="rgb(250,80,13)" rx="2" ry="2" />
<text  x="841.98" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="523.9" y="1957" width="0.6" height="15.0" fill="rgb(223,105,39)" rx="2" ry="2" />
<text  x="526.92" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="621.3" y="2021" width="0.2" height="15.0" fill="rgb(211,198,51)" rx="2" ry="2" />
<text  x="624.26" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="783.0" y="1509" width="0.2" height="15.0" fill="rgb(241,40,42)" rx="2" ry="2" />
<text  x="785.96" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="748.8" y="1605" width="0.2" height="15.0" fill="rgb(251,25,5)" rx="2" ry="2" />
<text  x="751.79" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1033.5" y="1973" width="0.2" height="15.0" fill="rgb(223,9,38)" rx="2" ry="2" />
<text  x="1036.46" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="62.4" y="1893" width="0.2" height="15.0" fill="rgb(244,106,16)" rx="2" ry="2" />
<text  x="65.44" y="1903.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="1175.7" y="1941" width="0.2" height="15.0" fill="rgb(213,131,3)" rx="2" ry="2" />
<text  x="1178.70" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="958.4" y="2005" width="0.2" height="15.0" fill="rgb(209,110,3)" rx="2" ry="2" />
<text  x="961.37" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1160.8" y="1829" width="0.2" height="15.0" fill="rgb(218,26,35)" rx="2" ry="2" />
<text  x="1163.80" y="1839.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="555.1" y="1733" width="0.2" height="15.0" fill="rgb(209,200,1)" rx="2" ry="2" />
<text  x="558.10" y="1743.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="793.1" y="1653" width="0.2" height="15.0" fill="rgb(229,166,32)" rx="2" ry="2" />
<text  x="796.09" y="1663.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="514.8" y="1605" width="0.2" height="15.0" fill="rgb(217,22,8)" rx="2" ry="2" />
<text  x="517.78" y="1615.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="338.4" y="1829" width="0.2" height="15.0" fill="rgb(235,217,37)" rx="2" ry="2" />
<text  x="341.37" y="1839.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (80 samples, 1.35%)</title><rect x="499.3" y="1925" width="15.9" height="15.0" fill="rgb(215,71,31)" rx="2" ry="2" />
<text  x="502.28" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="114.9" y="37" width="0.4" height="15.0" fill="rgb(214,139,12)" rx="2" ry="2" />
<text  x="117.89" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="513.4" y="1717" width="0.2" height="15.0" fill="rgb(230,205,2)" rx="2" ry="2" />
<text  x="516.39" y="1727.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="810.0" y="1717" width="0.2" height="15.0" fill="rgb(233,59,46)" rx="2" ry="2" />
<text  x="812.98" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="884.5" y="1893" width="0.6" height="15.0" fill="rgb(229,142,38)" rx="2" ry="2" />
<text  x="887.47" y="1903.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(214,158,7)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="863.6" y="1989" width="0.2" height="15.0" fill="rgb(229,149,35)" rx="2" ry="2" />
<text  x="866.61" y="1999.5" ></text>
</g>
<g >
<title>__sock_release (399 samples, 6.72%)</title><rect x="743.6" y="1781" width="79.3" height="15.0" fill="rgb(209,194,25)" rx="2" ry="2" />
<text  x="746.63" y="1791.5" >__sock_re..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="489.2" y="1797" width="0.2" height="15.0" fill="rgb(227,79,13)" rx="2" ry="2" />
<text  x="492.15" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="65.4" y="1781" width="0.4" height="15.0" fill="rgb(207,28,10)" rx="2" ry="2" />
<text  x="68.42" y="1791.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="184.6" y="1941" width="0.4" height="15.0" fill="rgb(252,181,50)" rx="2" ry="2" />
<text  x="187.62" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="167.1" y="2021" width="0.2" height="15.0" fill="rgb(254,133,28)" rx="2" ry="2" />
<text  x="170.13" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="271.2" y="1685" width="0.2" height="15.0" fill="rgb(211,20,7)" rx="2" ry="2" />
<text  x="274.23" y="1695.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="579.5" y="2005" width="0.2" height="15.0" fill="rgb(227,195,23)" rx="2" ry="2" />
<text  x="582.54" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="230.9" y="1909" width="1.2" height="15.0" fill="rgb(215,95,17)" rx="2" ry="2" />
<text  x="233.90" y="1919.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="758.1" y="1701" width="0.4" height="15.0" fill="rgb(222,142,42)" rx="2" ry="2" />
<text  x="761.13" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1033.5" y="1925" width="0.2" height="15.0" fill="rgb(224,153,3)" rx="2" ry="2" />
<text  x="1036.46" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="497.7" y="1669" width="0.2" height="15.0" fill="rgb(237,37,6)" rx="2" ry="2" />
<text  x="500.69" y="1679.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (3 samples, 0.05%)</title><rect x="171.1" y="1973" width="0.6" height="15.0" fill="rgb(252,184,41)" rx="2" ry="2" />
<text  x="174.11" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.12%)</title><rect x="268.1" y="1877" width="1.3" height="15.0" fill="rgb(213,197,6)" rx="2" ry="2" />
<text  x="271.05" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="757.5" y="1493" width="0.2" height="15.0" fill="rgb(249,128,28)" rx="2" ry="2" />
<text  x="760.53" y="1503.5" ></text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.03%)</title><rect x="100.6" y="2005" width="0.4" height="15.0" fill="rgb(214,16,49)" rx="2" ry="2" />
<text  x="103.59" y="2015.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (3 samples, 0.05%)</title><rect x="155.4" y="1893" width="0.6" height="15.0" fill="rgb(252,224,40)" rx="2" ry="2" />
<text  x="158.41" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1027.3" y="1877" width="0.4" height="15.0" fill="rgb(226,81,32)" rx="2" ry="2" />
<text  x="1030.30" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="159.6" y="1861" width="0.2" height="15.0" fill="rgb(214,221,51)" rx="2" ry="2" />
<text  x="162.59" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (12 samples, 0.20%)</title><rect x="992.1" y="1989" width="2.4" height="15.0" fill="rgb(253,162,22)" rx="2" ry="2" />
<text  x="995.14" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (1 samples, 0.02%)</title><rect x="651.1" y="2005" width="0.2" height="15.0" fill="rgb(223,204,48)" rx="2" ry="2" />
<text  x="654.05" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="73.0" y="1893" width="0.2" height="15.0" fill="rgb(217,93,42)" rx="2" ry="2" />
<text  x="75.97" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="976.2" y="2037" width="0.4" height="15.0" fill="rgb(238,35,51)" rx="2" ry="2" />
<text  x="979.25" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="155.2" y="1893" width="0.2" height="15.0" fill="rgb(221,211,31)" rx="2" ry="2" />
<text  x="158.22" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="483.0" y="1733" width="0.2" height="15.0" fill="rgb(241,83,42)" rx="2" ry="2" />
<text  x="485.99" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="580.7" y="1973" width="0.2" height="15.0" fill="rgb(230,206,22)" rx="2" ry="2" />
<text  x="583.73" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="138.3" y="1957" width="0.2" height="15.0" fill="rgb(218,139,42)" rx="2" ry="2" />
<text  x="141.33" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="22.9" y="1989" width="0.2" height="15.0" fill="rgb(248,172,17)" rx="2" ry="2" />
<text  x="25.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="181" width="13.5" height="15.0" fill="rgb(243,206,26)" rx="2" ry="2" />
<text  x="108.75" y="191.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="483.0" y="1813" width="0.2" height="15.0" fill="rgb(236,102,5)" rx="2" ry="2" />
<text  x="485.99" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="922.4" y="1989" width="0.4" height="15.0" fill="rgb(239,133,24)" rx="2" ry="2" />
<text  x="925.41" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="373.7" y="1749" width="0.2" height="15.0" fill="rgb(225,79,31)" rx="2" ry="2" />
<text  x="376.73" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="388.2" y="1941" width="0.2" height="15.0" fill="rgb(253,207,2)" rx="2" ry="2" />
<text  x="391.24" y="1951.5" ></text>
</g>
<g >
<title>__libc_fcntl (4 samples, 0.07%)</title><rect x="238.5" y="2037" width="0.7" height="15.0" fill="rgb(224,207,16)" rx="2" ry="2" />
<text  x="241.45" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="571.8" y="1893" width="0.2" height="15.0" fill="rgb(212,27,2)" rx="2" ry="2" />
<text  x="574.79" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1019.8" y="1925" width="0.7" height="15.0" fill="rgb(235,222,1)" rx="2" ry="2" />
<text  x="1022.75" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="387.6" y="1893" width="0.2" height="15.0" fill="rgb(223,153,31)" rx="2" ry="2" />
<text  x="390.64" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="141.3" y="1893" width="0.2" height="15.0" fill="rgb(210,169,28)" rx="2" ry="2" />
<text  x="144.31" y="1903.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="300.2" y="1557" width="0.2" height="15.0" fill="rgb(213,102,42)" rx="2" ry="2" />
<text  x="303.23" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (6 samples, 0.10%)</title><rect x="957.0" y="2005" width="1.2" height="15.0" fill="rgb(236,83,20)" rx="2" ry="2" />
<text  x="959.98" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1125.4" y="1717" width="0.2" height="15.0" fill="rgb(217,211,24)" rx="2" ry="2" />
<text  x="1128.44" y="1727.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="599.0" y="1813" width="1.0" height="15.0" fill="rgb(246,139,19)" rx="2" ry="2" />
<text  x="602.01" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (31 samples, 0.52%)</title><rect x="452.4" y="1957" width="6.2" height="15.0" fill="rgb(246,116,38)" rx="2" ry="2" />
<text  x="455.40" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="713.0" y="1909" width="0.2" height="15.0" fill="rgb(216,210,25)" rx="2" ry="2" />
<text  x="716.03" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="208.9" y="2021" width="0.2" height="15.0" fill="rgb(243,96,34)" rx="2" ry="2" />
<text  x="211.85" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (61 samples, 1.03%)</title><rect x="679.5" y="1957" width="12.1" height="15.0" fill="rgb(242,121,26)" rx="2" ry="2" />
<text  x="682.46" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="343.5" y="1877" width="0.2" height="15.0" fill="rgb(216,34,23)" rx="2" ry="2" />
<text  x="346.54" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="357" width="13.5" height="15.0" fill="rgb(242,68,14)" rx="2" ry="2" />
<text  x="108.75" y="367.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="792.7" y="1413" width="0.2" height="15.0" fill="rgb(248,59,53)" rx="2" ry="2" />
<text  x="795.69" y="1423.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="660.4" y="1941" width="2.0" height="15.0" fill="rgb(227,213,36)" rx="2" ry="2" />
<text  x="663.39" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="412.7" y="1813" width="0.2" height="15.0" fill="rgb(222,109,49)" rx="2" ry="2" />
<text  x="415.67" y="1823.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="21.7" y="2005" width="0.2" height="15.0" fill="rgb(254,210,28)" rx="2" ry="2" />
<text  x="24.72" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="326.7" y="1557" width="0.4" height="15.0" fill="rgb(206,41,32)" rx="2" ry="2" />
<text  x="329.65" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="835.0" y="1909" width="0.2" height="15.0" fill="rgb(215,48,3)" rx="2" ry="2" />
<text  x="838.01" y="1919.5" ></text>
</g>
<g >
<title>locks_remove_posix (5 samples, 0.08%)</title><rect x="828.8" y="1813" width="1.0" height="15.0" fill="rgb(246,164,22)" rx="2" ry="2" />
<text  x="831.85" y="1823.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="70.6" y="1573" width="0.2" height="15.0" fill="rgb(254,3,19)" rx="2" ry="2" />
<text  x="73.59" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1012.0" y="2005" width="0.4" height="15.0" fill="rgb(238,121,12)" rx="2" ry="2" />
<text  x="1015.01" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1061" width="14.7" height="15.0" fill="rgb(239,167,6)" rx="2" ry="2" />
<text  x="108.35" y="1071.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="565.0" y="1685" width="0.2" height="15.0" fill="rgb(234,210,7)" rx="2" ry="2" />
<text  x="568.04" y="1695.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="281.4" y="1813" width="0.2" height="15.0" fill="rgb(229,190,27)" rx="2" ry="2" />
<text  x="284.36" y="1823.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (138 samples, 2.32%)</title><rect x="209.2" y="2037" width="27.5" height="15.0" fill="rgb(221,116,41)" rx="2" ry="2" />
<text  x="212.25" y="2047.5" >_..</text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="206.1" y="2021" width="0.2" height="15.0" fill="rgb(213,80,18)" rx="2" ry="2" />
<text  x="209.07" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="337.0" y="1573" width="0.4" height="15.0" fill="rgb(224,209,21)" rx="2" ry="2" />
<text  x="339.98" y="1583.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="858.1" y="1925" width="0.1" height="15.0" fill="rgb(250,38,34)" rx="2" ry="2" />
<text  x="861.05" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="600.6" y="1749" width="0.2" height="15.0" fill="rgb(230,71,34)" rx="2" ry="2" />
<text  x="603.60" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="629.2" y="1973" width="0.2" height="15.0" fill="rgb(228,200,17)" rx="2" ry="2" />
<text  x="632.20" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="1033.7" y="2021" width="0.8" height="15.0" fill="rgb(211,168,5)" rx="2" ry="2" />
<text  x="1036.66" y="2031.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="644.3" y="1989" width="0.6" height="15.0" fill="rgb(234,6,25)" rx="2" ry="2" />
<text  x="647.30" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="825.1" y="1685" width="0.2" height="15.0" fill="rgb(242,118,7)" rx="2" ry="2" />
<text  x="828.07" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (112 samples, 1.89%)</title><rect x="141.1" y="1973" width="22.3" height="15.0" fill="rgb(234,73,36)" rx="2" ry="2" />
<text  x="144.11" y="1983.5" >f..</text>
</g>
<g >
<title>mutex_lock (2 samples, 0.03%)</title><rect x="487.4" y="1973" width="0.4" height="15.0" fill="rgb(249,112,24)" rx="2" ry="2" />
<text  x="490.36" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="901.6" y="1749" width="0.2" height="15.0" fill="rgb(208,44,28)" rx="2" ry="2" />
<text  x="904.56" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="291.1" y="1669" width="0.2" height="15.0" fill="rgb(228,206,12)" rx="2" ry="2" />
<text  x="294.09" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.3" y="69" width="0.2" height="15.0" fill="rgb(243,47,47)" rx="2" ry="2" />
<text  x="121.27" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1031.7" y="1877" width="0.2" height="15.0" fill="rgb(206,194,30)" rx="2" ry="2" />
<text  x="1034.67" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="769.5" y="1541" width="0.1" height="15.0" fill="rgb(245,191,46)" rx="2" ry="2" />
<text  x="772.45" y="1551.5" ></text>
</g>
<g >
<title>down_write (7 samples, 0.12%)</title><rect x="744.4" y="1765" width="1.4" height="15.0" fill="rgb(213,83,4)" rx="2" ry="2" />
<text  x="747.42" y="1775.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1109.1" y="1493" width="0.2" height="15.0" fill="rgb(234,143,12)" rx="2" ry="2" />
<text  x="1112.15" y="1503.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="154.6" y="1765" width="0.2" height="15.0" fill="rgb(226,103,45)" rx="2" ry="2" />
<text  x="157.62" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (2 samples, 0.03%)</title><rect x="861.8" y="1989" width="0.4" height="15.0" fill="rgb(234,92,48)" rx="2" ry="2" />
<text  x="864.82" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="58.7" y="1893" width="0.2" height="15.0" fill="rgb(231,77,15)" rx="2" ry="2" />
<text  x="61.67" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="956.4" y="2005" width="0.6" height="15.0" fill="rgb(217,11,23)" rx="2" ry="2" />
<text  x="959.38" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="235.7" y="1797" width="0.2" height="15.0" fill="rgb(217,185,31)" rx="2" ry="2" />
<text  x="238.67" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="75.4" y="1957" width="0.2" height="15.0" fill="rgb(246,159,10)" rx="2" ry="2" />
<text  x="78.36" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="31.3" y="1957" width="0.8" height="15.0" fill="rgb(253,180,27)" rx="2" ry="2" />
<text  x="34.26" y="1967.5" ></text>
</g>
<g >
<title>kfree_call_rcu (4 samples, 0.07%)</title><rect x="734.9" y="1669" width="0.8" height="15.0" fill="rgb(236,4,7)" rx="2" ry="2" />
<text  x="737.89" y="1679.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="709.7" y="1941" width="0.2" height="15.0" fill="rgb(218,15,38)" rx="2" ry="2" />
<text  x="712.66" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="22.9" y="1957" width="0.2" height="15.0" fill="rgb(215,54,40)" rx="2" ry="2" />
<text  x="25.91" y="1967.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (4 samples, 0.07%)</title><rect x="570.6" y="1989" width="0.8" height="15.0" fill="rgb(253,140,38)" rx="2" ry="2" />
<text  x="573.60" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="489.7" y="1733" width="0.2" height="15.0" fill="rgb(247,138,40)" rx="2" ry="2" />
<text  x="492.75" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="885" width="14.3" height="15.0" fill="rgb(212,118,44)" rx="2" ry="2" />
<text  x="108.75" y="895.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="969.1" y="1957" width="0.2" height="15.0" fill="rgb(222,105,10)" rx="2" ry="2" />
<text  x="972.10" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="82.5" y="1941" width="0.2" height="15.0" fill="rgb(222,21,13)" rx="2" ry="2" />
<text  x="85.51" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="97.0" y="1989" width="0.2" height="15.0" fill="rgb(242,162,21)" rx="2" ry="2" />
<text  x="100.01" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (5 samples, 0.08%)</title><rect x="616.7" y="1973" width="1.0" height="15.0" fill="rgb(220,131,8)" rx="2" ry="2" />
<text  x="619.69" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.1" y="1957" width="0.1" height="15.0" fill="rgb(205,17,10)" rx="2" ry="2" />
<text  x="861.05" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="233.7" y="1781" width="0.8" height="15.0" fill="rgb(225,129,25)" rx="2" ry="2" />
<text  x="236.68" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (6 samples, 0.10%)</title><rect x="905.9" y="1973" width="1.2" height="15.0" fill="rgb(243,115,52)" rx="2" ry="2" />
<text  x="908.93" y="1983.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="299.2" y="1461" width="0.2" height="15.0" fill="rgb(236,105,3)" rx="2" ry="2" />
<text  x="302.24" y="1471.5" ></text>
</g>
<g >
<title>ip_rcv (5 samples, 0.08%)</title><rect x="299.4" y="1605" width="1.0" height="15.0" fill="rgb(214,202,30)" rx="2" ry="2" />
<text  x="302.44" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="86.3" y="1925" width="0.2" height="15.0" fill="rgb(212,61,7)" rx="2" ry="2" />
<text  x="89.28" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="576.8" y="1989" width="0.4" height="15.0" fill="rgb(218,90,29)" rx="2" ry="2" />
<text  x="579.76" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (108 samples, 1.82%)</title><rect x="583.7" y="1973" width="21.5" height="15.0" fill="rgb(210,96,26)" rx="2" ry="2" />
<text  x="586.71" y="1983.5" >f..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="73.0" y="1589" width="0.2" height="15.0" fill="rgb(234,201,52)" rx="2" ry="2" />
<text  x="75.97" y="1599.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.07%)</title><rect x="195.3" y="2021" width="0.8" height="15.0" fill="rgb(239,210,24)" rx="2" ry="2" />
<text  x="198.34" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="657.4" y="2037" width="0.2" height="15.0" fill="rgb(219,50,6)" rx="2" ry="2" />
<text  x="660.41" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="848.7" y="1669" width="0.2" height="15.0" fill="rgb(205,207,7)" rx="2" ry="2" />
<text  x="851.71" y="1679.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="1144.5" y="2021" width="0.2" height="15.0" fill="rgb(236,96,48)" rx="2" ry="2" />
<text  x="1147.51" y="2031.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="529.9" y="1989" width="0.2" height="15.0" fill="rgb(245,37,28)" rx="2" ry="2" />
<text  x="532.88" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="126.4" y="1957" width="0.2" height="15.0" fill="rgb(205,166,8)" rx="2" ry="2" />
<text  x="129.41" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="322.1" y="1605" width="0.2" height="15.0" fill="rgb(216,111,17)" rx="2" ry="2" />
<text  x="325.08" y="1615.5" ></text>
</g>
<g >
<title>sys_fcntl (6 samples, 0.10%)</title><rect x="564.6" y="1941" width="1.2" height="15.0" fill="rgb(225,17,5)" rx="2" ry="2" />
<text  x="567.64" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="279.8" y="1749" width="0.2" height="15.0" fill="rgb(217,70,11)" rx="2" ry="2" />
<text  x="282.77" y="1759.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="181.2" y="1957" width="1.4" height="15.0" fill="rgb(230,12,30)" rx="2" ry="2" />
<text  x="184.24" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="862.4" y="1669" width="0.2" height="15.0" fill="rgb(226,169,6)" rx="2" ry="2" />
<text  x="865.42" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1128.8" y="1845" width="0.4" height="15.0" fill="rgb(242,103,18)" rx="2" ry="2" />
<text  x="1131.81" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="536.2" y="1861" width="0.2" height="15.0" fill="rgb(237,185,46)" rx="2" ry="2" />
<text  x="539.23" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="618.1" y="1877" width="0.2" height="15.0" fill="rgb(235,86,26)" rx="2" ry="2" />
<text  x="621.08" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="875.5" y="1957" width="0.2" height="15.0" fill="rgb(227,139,28)" rx="2" ry="2" />
<text  x="878.53" y="1967.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (12 samples, 0.20%)</title><rect x="228.5" y="1845" width="2.4" height="15.0" fill="rgb(248,228,41)" rx="2" ry="2" />
<text  x="231.52" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="889.6" y="1925" width="0.2" height="15.0" fill="rgb(234,139,43)" rx="2" ry="2" />
<text  x="892.64" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.2" y="1861" width="0.2" height="15.0" fill="rgb(214,111,32)" rx="2" ry="2" />
<text  x="163.18" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="177.7" y="1973" width="0.2" height="15.0" fill="rgb(218,191,47)" rx="2" ry="2" />
<text  x="180.66" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="77.7" y="1909" width="0.2" height="15.0" fill="rgb(228,122,37)" rx="2" ry="2" />
<text  x="80.74" y="1919.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="971.7" y="2005" width="0.2" height="15.0" fill="rgb(247,199,40)" rx="2" ry="2" />
<text  x="974.68" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="896.6" y="1877" width="0.2" height="15.0" fill="rgb(244,69,6)" rx="2" ry="2" />
<text  x="899.59" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="728.1" y="1749" width="0.2" height="15.0" fill="rgb(230,150,5)" rx="2" ry="2" />
<text  x="731.13" y="1759.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="1035.8" y="2021" width="3.2" height="15.0" fill="rgb(253,37,3)" rx="2" ry="2" />
<text  x="1038.85" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1125.2" y="1877" width="0.4" height="15.0" fill="rgb(231,12,2)" rx="2" ry="2" />
<text  x="1128.24" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="967.3" y="1957" width="0.2" height="15.0" fill="rgb(224,24,29)" rx="2" ry="2" />
<text  x="970.31" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1102.8" y="1749" width="0.2" height="15.0" fill="rgb(211,42,6)" rx="2" ry="2" />
<text  x="1105.79" y="1759.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="963.9" y="1957" width="3.2" height="15.0" fill="rgb(205,118,46)" rx="2" ry="2" />
<text  x="966.93" y="1967.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="1059.9" y="1685" width="0.2" height="15.0" fill="rgb(245,225,12)" rx="2" ry="2" />
<text  x="1062.88" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="626.4" y="2005" width="0.2" height="15.0" fill="rgb(223,219,18)" rx="2" ry="2" />
<text  x="629.42" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="317.7" y="1621" width="0.2" height="15.0" fill="rgb(209,121,9)" rx="2" ry="2" />
<text  x="320.71" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="925.6" y="2005" width="0.6" height="15.0" fill="rgb(227,141,36)" rx="2" ry="2" />
<text  x="928.59" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="238.5" y="2021" width="0.3" height="15.0" fill="rgb(244,194,13)" rx="2" ry="2" />
<text  x="241.45" y="2031.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="1004.7" y="1733" width="0.2" height="15.0" fill="rgb(222,188,7)" rx="2" ry="2" />
<text  x="1007.66" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(227,124,33)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1150.5" y="1989" width="0.2" height="15.0" fill="rgb(240,173,31)" rx="2" ry="2" />
<text  x="1153.47" y="1999.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="62.0" y="1861" width="0.2" height="15.0" fill="rgb(249,88,38)" rx="2" ry="2" />
<text  x="65.05" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (9 samples, 0.15%)</title><rect x="525.7" y="1973" width="1.8" height="15.0" fill="rgb(235,183,45)" rx="2" ry="2" />
<text  x="528.70" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.8" y="2021" width="0.2" height="15.0" fill="rgb(227,64,3)" rx="2" ry="2" />
<text  x="925.81" y="2031.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="536.2" y="1605" width="0.2" height="15.0" fill="rgb(241,99,54)" rx="2" ry="2" />
<text  x="539.23" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (15 samples, 0.25%)</title><rect x="552.9" y="1973" width="3.0" height="15.0" fill="rgb(245,149,25)" rx="2" ry="2" />
<text  x="555.92" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (5 samples, 0.08%)</title><rect x="913.5" y="1973" width="1.0" height="15.0" fill="rgb(213,204,3)" rx="2" ry="2" />
<text  x="916.47" y="1983.5" ></text>
</g>
<g >
<title>alloc_file (36 samples, 0.61%)</title><rect x="403.3" y="1941" width="7.2" height="15.0" fill="rgb(232,174,1)" rx="2" ry="2" />
<text  x="406.33" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="783.0" y="1493" width="0.2" height="15.0" fill="rgb(247,162,8)" rx="2" ry="2" />
<text  x="785.96" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1033.5" y="2021" width="0.2" height="15.0" fill="rgb(246,166,16)" rx="2" ry="2" />
<text  x="1036.46" y="2031.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="713.0" y="1637" width="0.2" height="15.0" fill="rgb(236,62,42)" rx="2" ry="2" />
<text  x="716.03" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="536.2" y="1685" width="0.2" height="15.0" fill="rgb(239,50,53)" rx="2" ry="2" />
<text  x="539.23" y="1695.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.02%)</title><rect x="148.1" y="1733" width="0.2" height="15.0" fill="rgb(246,60,53)" rx="2" ry="2" />
<text  x="151.06" y="1743.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="255.9" y="1925" width="0.2" height="15.0" fill="rgb(235,84,28)" rx="2" ry="2" />
<text  x="258.93" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="865.8" y="1989" width="0.2" height="15.0" fill="rgb(245,63,40)" rx="2" ry="2" />
<text  x="868.80" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="800.8" y="1685" width="0.2" height="15.0" fill="rgb(210,177,36)" rx="2" ry="2" />
<text  x="803.84" y="1695.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="757.5" y="1413" width="0.2" height="15.0" fill="rgb(243,156,45)" rx="2" ry="2" />
<text  x="760.53" y="1423.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="295.1" y="1701" width="0.2" height="15.0" fill="rgb(238,44,34)" rx="2" ry="2" />
<text  x="298.07" y="1711.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="907.1" y="1973" width="0.2" height="15.0" fill="rgb(212,65,5)" rx="2" ry="2" />
<text  x="910.12" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="835.0" y="1845" width="0.2" height="15.0" fill="rgb(241,153,15)" rx="2" ry="2" />
<text  x="838.01" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="576.6" y="2005" width="0.6" height="15.0" fill="rgb(208,197,24)" rx="2" ry="2" />
<text  x="579.56" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1007.8" y="1957" width="0.2" height="15.0" fill="rgb(226,15,21)" rx="2" ry="2" />
<text  x="1010.84" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="702.5" y="1957" width="0.2" height="15.0" fill="rgb(219,35,7)" rx="2" ry="2" />
<text  x="705.51" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (27 samples, 0.45%)</title><rect x="994.5" y="1973" width="5.4" height="15.0" fill="rgb(220,175,30)" rx="2" ry="2" />
<text  x="997.53" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="27.5" y="1973" width="0.2" height="15.0" fill="rgb(232,79,12)" rx="2" ry="2" />
<text  x="30.48" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="356.6" y="2021" width="0.2" height="15.0" fill="rgb(246,79,7)" rx="2" ry="2" />
<text  x="359.65" y="2031.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="756.3" y="1685" width="0.2" height="15.0" fill="rgb(207,131,1)" rx="2" ry="2" />
<text  x="759.34" y="1695.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1102.8" y="1637" width="0.2" height="15.0" fill="rgb(223,210,29)" rx="2" ry="2" />
<text  x="1105.79" y="1647.5" ></text>
</g>
<g >
<title>free (35 samples, 0.59%)</title><rect x="1020.9" y="2037" width="7.0" height="15.0" fill="rgb(243,215,21)" rx="2" ry="2" />
<text  x="1023.95" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (10 samples, 0.17%)</title><rect x="1074.2" y="1877" width="2.0" height="15.0" fill="rgb(230,92,33)" rx="2" ry="2" />
<text  x="1077.19" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="630.0" y="1973" width="0.6" height="15.0" fill="rgb(212,142,14)" rx="2" ry="2" />
<text  x="633.00" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.9" y="725" width="0.2" height="15.0" fill="rgb(211,220,46)" rx="2" ry="2" />
<text  x="122.86" y="735.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="892.4" y="1749" width="0.2" height="15.0" fill="rgb(228,45,3)" rx="2" ry="2" />
<text  x="895.42" y="1759.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="252.8" y="1893" width="0.2" height="15.0" fill="rgb(211,223,53)" rx="2" ry="2" />
<text  x="255.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (40 samples, 0.67%)</title><rect x="1109.1" y="1557" width="8.0" height="15.0" fill="rgb(244,155,54)" rx="2" ry="2" />
<text  x="1112.15" y="1567.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="551.1" y="1973" width="0.6" height="15.0" fill="rgb(218,219,13)" rx="2" ry="2" />
<text  x="554.13" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="521.7" y="1973" width="1.0" height="15.0" fill="rgb(226,209,7)" rx="2" ry="2" />
<text  x="524.73" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.36%)</title><rect x="105.2" y="1381" width="16.0" height="15.0" fill="rgb(245,54,38)" rx="2" ry="2" />
<text  x="108.15" y="1391.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="349.1" y="1925" width="0.4" height="15.0" fill="rgb(252,141,20)" rx="2" ry="2" />
<text  x="352.10" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="507.0" y="1765" width="0.2" height="15.0" fill="rgb(209,93,24)" rx="2" ry="2" />
<text  x="510.03" y="1775.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (12 samples, 0.20%)</title><rect x="68.8" y="1941" width="2.4" height="15.0" fill="rgb(242,180,54)" rx="2" ry="2" />
<text  x="71.80" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="896.6" y="1829" width="0.2" height="15.0" fill="rgb(206,29,0)" rx="2" ry="2" />
<text  x="899.59" y="1839.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="939.7" y="1877" width="0.2" height="15.0" fill="rgb(231,213,2)" rx="2" ry="2" />
<text  x="942.70" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (22 samples, 0.37%)</title><rect x="928.2" y="1973" width="4.3" height="15.0" fill="rgb(224,138,45)" rx="2" ry="2" />
<text  x="931.18" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="661.4" y="1893" width="0.2" height="15.0" fill="rgb(206,92,23)" rx="2" ry="2" />
<text  x="664.38" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="983.6" y="2005" width="0.2" height="15.0" fill="rgb(207,45,54)" rx="2" ry="2" />
<text  x="986.60" y="2015.5" ></text>
</g>
<g >
<title>cpu_needs_another_gp (1 samples, 0.02%)</title><rect x="745.2" y="1685" width="0.2" height="15.0" fill="rgb(211,160,27)" rx="2" ry="2" />
<text  x="748.22" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="171.7" y="1781" width="0.4" height="15.0" fill="rgb(215,14,35)" rx="2" ry="2" />
<text  x="174.70" y="1791.5" ></text>
</g>
<g >
<title>kfree (17 samples, 0.29%)</title><rect x="1112.3" y="1445" width="3.4" height="15.0" fill="rgb(209,37,35)" rx="2" ry="2" />
<text  x="1115.33" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="271.2" y="1877" width="0.2" height="15.0" fill="rgb(239,69,49)" rx="2" ry="2" />
<text  x="274.23" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1059.7" y="1861" width="0.4" height="15.0" fill="rgb(232,156,15)" rx="2" ry="2" />
<text  x="1062.68" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1004.7" y="1813" width="0.2" height="15.0" fill="rgb(206,207,22)" rx="2" ry="2" />
<text  x="1007.66" y="1823.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (59 samples, 0.99%)</title><rect x="1106.2" y="1925" width="11.7" height="15.0" fill="rgb(228,97,26)" rx="2" ry="2" />
<text  x="1109.17" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.2" y="1621" width="0.2" height="15.0" fill="rgb(228,0,35)" rx="2" ry="2" />
<text  x="125.24" y="1631.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="748.8" y="1493" width="0.2" height="15.0" fill="rgb(213,123,14)" rx="2" ry="2" />
<text  x="751.79" y="1503.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="565.0" y="1829" width="0.2" height="15.0" fill="rgb(216,153,34)" rx="2" ry="2" />
<text  x="568.04" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="571.0" y="1733" width="0.2" height="15.0" fill="rgb(207,110,1)" rx="2" ry="2" />
<text  x="574.00" y="1743.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="631.6" y="1989" width="0.2" height="15.0" fill="rgb(233,1,53)" rx="2" ry="2" />
<text  x="634.59" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt;::back (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(239,35,37)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="299.2" y="1445" width="0.2" height="15.0" fill="rgb(242,187,45)" rx="2" ry="2" />
<text  x="302.24" y="1455.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1011.2" y="1813" width="0.6" height="15.0" fill="rgb(254,125,15)" rx="2" ry="2" />
<text  x="1014.21" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="691.2" y="1797" width="0.2" height="15.0" fill="rgb(248,31,10)" rx="2" ry="2" />
<text  x="694.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="330.2" y="1813" width="0.2" height="15.0" fill="rgb(222,58,27)" rx="2" ry="2" />
<text  x="333.23" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (23 samples, 0.39%)</title><rect x="524.7" y="1989" width="4.6" height="15.0" fill="rgb(246,5,53)" rx="2" ry="2" />
<text  x="527.71" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (11 samples, 0.19%)</title><rect x="843.0" y="1941" width="2.1" height="15.0" fill="rgb(230,68,24)" rx="2" ry="2" />
<text  x="845.95" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="317.3" y="1573" width="0.2" height="15.0" fill="rgb(227,164,46)" rx="2" ry="2" />
<text  x="320.32" y="1583.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="349.3" y="1701" width="0.2" height="15.0" fill="rgb(211,120,47)" rx="2" ry="2" />
<text  x="352.30" y="1711.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="326.9" y="1477" width="0.2" height="15.0" fill="rgb(240,175,23)" rx="2" ry="2" />
<text  x="329.85" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="483.0" y="1765" width="0.2" height="15.0" fill="rgb(250,54,27)" rx="2" ry="2" />
<text  x="485.99" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1102.8" y="1813" width="0.2" height="15.0" fill="rgb(214,44,52)" rx="2" ry="2" />
<text  x="1105.79" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.13%)</title><rect x="584.5" y="1925" width="1.6" height="15.0" fill="rgb(240,75,45)" rx="2" ry="2" />
<text  x="587.51" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="104.4" y="1877" width="20.6" height="15.0" fill="rgb(220,145,34)" rx="2" ry="2" />
<text  x="107.36" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1183.0" y="1989" width="0.4" height="15.0" fill="rgb(229,124,17)" rx="2" ry="2" />
<text  x="1186.05" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="600.6" y="1701" width="0.2" height="15.0" fill="rgb(252,223,15)" rx="2" ry="2" />
<text  x="603.60" y="1711.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="257.7" y="1941" width="0.2" height="15.0" fill="rgb(208,93,43)" rx="2" ry="2" />
<text  x="260.72" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1160.8" y="1877" width="0.2" height="15.0" fill="rgb(248,199,20)" rx="2" ry="2" />
<text  x="1163.80" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.3" y="1925" width="0.2" height="15.0" fill="rgb(245,215,5)" rx="2" ry="2" />
<text  x="146.30" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (44 samples, 0.74%)</title><rect x="932.5" y="1941" width="8.8" height="15.0" fill="rgb(221,148,17)" rx="2" ry="2" />
<text  x="935.55" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="61.6" y="1909" width="1.2" height="15.0" fill="rgb(246,112,44)" rx="2" ry="2" />
<text  x="64.65" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.4" y="2021" width="0.2" height="15.0" fill="rgb(222,1,21)" rx="2" ry="2" />
<text  x="1186.44" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="281.8" y="1797" width="0.2" height="15.0" fill="rgb(242,149,16)" rx="2" ry="2" />
<text  x="284.76" y="1807.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="1094.6" y="1925" width="0.6" height="15.0" fill="rgb(235,216,17)" rx="2" ry="2" />
<text  x="1097.65" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (7 samples, 0.12%)</title><rect x="568.4" y="2005" width="1.4" height="15.0" fill="rgb(243,149,13)" rx="2" ry="2" />
<text  x="571.41" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="163.8" y="2005" width="0.2" height="15.0" fill="rgb(234,102,12)" rx="2" ry="2" />
<text  x="166.76" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="625.0" y="2005" width="0.2" height="15.0" fill="rgb(231,58,33)" rx="2" ry="2" />
<text  x="628.03" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (34 samples, 0.57%)</title><rect x="1170.9" y="2037" width="6.8" height="15.0" fill="rgb(251,58,50)" rx="2" ry="2" />
<text  x="1173.93" y="2047.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="281.6" y="1653" width="0.2" height="15.0" fill="rgb(250,5,31)" rx="2" ry="2" />
<text  x="284.56" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="909.3" y="2021" width="1.4" height="15.0" fill="rgb(212,109,29)" rx="2" ry="2" />
<text  x="912.30" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (4 samples, 0.07%)</title><rect x="921.6" y="1989" width="0.8" height="15.0" fill="rgb(213,178,15)" rx="2" ry="2" />
<text  x="924.62" y="1999.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="330.6" y="1765" width="0.2" height="15.0" fill="rgb(251,37,48)" rx="2" ry="2" />
<text  x="333.63" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="933" width="14.7" height="15.0" fill="rgb(235,69,46)" rx="2" ry="2" />
<text  x="108.35" y="943.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="333.8" y="1445" width="0.2" height="15.0" fill="rgb(228,190,35)" rx="2" ry="2" />
<text  x="336.80" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="625.8" y="2021" width="0.2" height="15.0" fill="rgb(216,211,19)" rx="2" ry="2" />
<text  x="628.82" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="930.0" y="1909" width="0.4" height="15.0" fill="rgb(239,105,10)" rx="2" ry="2" />
<text  x="932.96" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1139.9" y="1861" width="0.2" height="15.0" fill="rgb(243,16,9)" rx="2" ry="2" />
<text  x="1142.94" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="613.5" y="1893" width="0.2" height="15.0" fill="rgb(223,186,45)" rx="2" ry="2" />
<text  x="616.51" y="1903.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="799.8" y="1685" width="0.4" height="15.0" fill="rgb(215,76,34)" rx="2" ry="2" />
<text  x="802.85" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="750.4" y="1717" width="0.4" height="15.0" fill="rgb(211,96,34)" rx="2" ry="2" />
<text  x="753.38" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1161.8" y="1893" width="0.2" height="15.0" fill="rgb(206,176,30)" rx="2" ry="2" />
<text  x="1164.79" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="157.2" y="1877" width="0.8" height="15.0" fill="rgb(206,104,54)" rx="2" ry="2" />
<text  x="160.20" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (3 samples, 0.05%)</title><rect x="574.4" y="1941" width="0.6" height="15.0" fill="rgb(221,221,31)" rx="2" ry="2" />
<text  x="577.37" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1012.2" y="1829" width="0.2" height="15.0" fill="rgb(214,29,40)" rx="2" ry="2" />
<text  x="1015.21" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="480.4" y="1909" width="0.2" height="15.0" fill="rgb(244,1,7)" rx="2" ry="2" />
<text  x="483.41" y="1919.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="896.6" y="1733" width="0.2" height="15.0" fill="rgb(232,171,12)" rx="2" ry="2" />
<text  x="899.59" y="1743.5" ></text>
</g>
<g >
<title>netdev_pick_tx (7 samples, 0.12%)</title><rect x="303.8" y="1701" width="1.4" height="15.0" fill="rgb(245,136,15)" rx="2" ry="2" />
<text  x="306.81" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="936.3" y="1893" width="0.8" height="15.0" fill="rgb(251,202,50)" rx="2" ry="2" />
<text  x="939.32" y="1903.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.17%)</title><rect x="12.6" y="2005" width="2.0" height="15.0" fill="rgb(244,140,39)" rx="2" ry="2" />
<text  x="15.58" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (2 samples, 0.03%)</title><rect x="980.0" y="2005" width="0.4" height="15.0" fill="rgb(227,197,29)" rx="2" ry="2" />
<text  x="983.02" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="618.3" y="1957" width="0.2" height="15.0" fill="rgb(231,185,2)" rx="2" ry="2" />
<text  x="621.28" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1160.8" y="1845" width="0.2" height="15.0" fill="rgb(221,10,19)" rx="2" ry="2" />
<text  x="1163.80" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.2" y="1301" width="15.3" height="15.0" fill="rgb(253,96,41)" rx="2" ry="2" />
<text  x="108.15" y="1311.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="848.7" y="1845" width="0.4" height="15.0" fill="rgb(208,40,12)" rx="2" ry="2" />
<text  x="851.71" y="1855.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="565.0" y="1573" width="0.2" height="15.0" fill="rgb(244,88,21)" rx="2" ry="2" />
<text  x="568.04" y="1583.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="317.7" y="1637" width="0.2" height="15.0" fill="rgb(236,92,16)" rx="2" ry="2" />
<text  x="320.71" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="147.9" y="1893" width="0.2" height="15.0" fill="rgb(236,2,11)" rx="2" ry="2" />
<text  x="150.87" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="565.0" y="1797" width="0.2" height="15.0" fill="rgb(208,75,6)" rx="2" ry="2" />
<text  x="568.04" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="849.1" y="1877" width="0.6" height="15.0" fill="rgb(242,125,3)" rx="2" ry="2" />
<text  x="852.11" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="253.4" y="1829" width="0.1" height="15.0" fill="rgb(217,31,42)" rx="2" ry="2" />
<text  x="256.35" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="371.0" y="1957" width="0.2" height="15.0" fill="rgb(254,87,16)" rx="2" ry="2" />
<text  x="373.95" y="1967.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="281.2" y="1493" width="0.2" height="15.0" fill="rgb(241,150,50)" rx="2" ry="2" />
<text  x="284.16" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1143.1" y="2037" width="0.2" height="15.0" fill="rgb(246,31,1)" rx="2" ry="2" />
<text  x="1146.12" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1008.4" y="1957" width="0.4" height="15.0" fill="rgb(249,212,2)" rx="2" ry="2" />
<text  x="1011.43" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="884.5" y="1669" width="0.2" height="15.0" fill="rgb(244,188,3)" rx="2" ry="2" />
<text  x="887.47" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="159.6" y="1669" width="0.2" height="15.0" fill="rgb(226,171,50)" rx="2" ry="2" />
<text  x="162.59" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (7 samples, 0.12%)</title><rect x="895.0" y="1941" width="1.4" height="15.0" fill="rgb(233,16,41)" rx="2" ry="2" />
<text  x="898.00" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (2 samples, 0.03%)</title><rect x="856.9" y="1957" width="0.4" height="15.0" fill="rgb(247,14,46)" rx="2" ry="2" />
<text  x="859.86" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1012.2" y="1957" width="0.2" height="15.0" fill="rgb(239,81,49)" rx="2" ry="2" />
<text  x="1015.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="635.2" y="1941" width="0.4" height="15.0" fill="rgb(220,193,28)" rx="2" ry="2" />
<text  x="638.16" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1493" width="16.2" height="15.0" fill="rgb(221,223,2)" rx="2" ry="2" />
<text  x="108.15" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (6 samples, 0.10%)</title><rect x="1117.9" y="1925" width="1.2" height="15.0" fill="rgb(238,47,23)" rx="2" ry="2" />
<text  x="1120.89" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="78.7" y="1957" width="0.2" height="15.0" fill="rgb(210,13,17)" rx="2" ry="2" />
<text  x="81.73" y="1967.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (12 samples, 0.20%)</title><rect x="689.0" y="1893" width="2.4" height="15.0" fill="rgb(227,130,32)" rx="2" ry="2" />
<text  x="692.00" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1012.2" y="1877" width="0.2" height="15.0" fill="rgb(224,26,28)" rx="2" ry="2" />
<text  x="1015.21" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="34.0" y="2005" width="0.2" height="15.0" fill="rgb(215,41,39)" rx="2" ry="2" />
<text  x="37.04" y="2015.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1182.8" y="1989" width="0.2" height="15.0" fill="rgb(221,181,3)" rx="2" ry="2" />
<text  x="1185.85" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (24 samples, 0.40%)</title><rect x="312.4" y="1653" width="4.7" height="15.0" fill="rgb(225,103,46)" rx="2" ry="2" />
<text  x="315.35" y="1663.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (29 samples, 0.49%)</title><rect x="948.4" y="1989" width="5.8" height="15.0" fill="rgb(231,138,29)" rx="2" ry="2" />
<text  x="951.44" y="1999.5" ></text>
</g>
<g >
<title>sys_getpeername (3 samples, 0.05%)</title><rect x="706.7" y="1845" width="0.6" height="15.0" fill="rgb(216,224,48)" rx="2" ry="2" />
<text  x="709.68" y="1855.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="94.4" y="1989" width="0.2" height="15.0" fill="rgb(218,34,30)" rx="2" ry="2" />
<text  x="97.43" y="1999.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="823.9" y="1829" width="0.2" height="15.0" fill="rgb(211,179,31)" rx="2" ry="2" />
<text  x="826.88" y="1839.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1102.4" y="1893" width="0.6" height="15.0" fill="rgb(220,126,50)" rx="2" ry="2" />
<text  x="1105.39" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="188.2" y="1941" width="0.2" height="15.0" fill="rgb(205,65,41)" rx="2" ry="2" />
<text  x="191.19" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="63.0" y="1941" width="0.2" height="15.0" fill="rgb(237,135,5)" rx="2" ry="2" />
<text  x="66.04" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="621.5" y="2021" width="0.2" height="15.0" fill="rgb(246,129,50)" rx="2" ry="2" />
<text  x="624.45" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="74.4" y="1717" width="0.2" height="15.0" fill="rgb(208,56,24)" rx="2" ry="2" />
<text  x="77.36" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="616.3" y="1861" width="0.2" height="15.0" fill="rgb(206,110,0)" rx="2" ry="2" />
<text  x="619.29" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1150.1" y="2005" width="0.2" height="15.0" fill="rgb(238,110,40)" rx="2" ry="2" />
<text  x="1153.07" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1004.7" y="2005" width="0.2" height="15.0" fill="rgb(250,66,10)" rx="2" ry="2" />
<text  x="1007.66" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="1167.6" y="2021" width="1.7" height="15.0" fill="rgb(228,176,2)" rx="2" ry="2" />
<text  x="1170.55" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (1 samples, 0.02%)</title><rect x="577.8" y="1989" width="0.1" height="15.0" fill="rgb(253,101,43)" rx="2" ry="2" />
<text  x="580.75" y="1999.5" ></text>
</g>
<g >
<title>process_backlog (45 samples, 0.76%)</title><rect x="1108.6" y="1701" width="8.9" height="15.0" fill="rgb(221,155,47)" rx="2" ry="2" />
<text  x="1111.55" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="208.1" y="1765" width="0.2" height="15.0" fill="rgb(242,43,11)" rx="2" ry="2" />
<text  x="211.06" y="1775.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="1183.6" y="2053" width="0.6" height="15.0" fill="rgb(208,141,45)" rx="2" ry="2" />
<text  x="1186.64" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="279.8" y="1669" width="0.2" height="15.0" fill="rgb(218,228,51)" rx="2" ry="2" />
<text  x="282.77" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (3 samples, 0.05%)</title><rect x="1150.3" y="2021" width="0.6" height="15.0" fill="rgb(244,184,21)" rx="2" ry="2" />
<text  x="1153.27" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="857.1" y="1861" width="0.2" height="15.0" fill="rgb(244,70,12)" rx="2" ry="2" />
<text  x="860.06" y="1871.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="302.4" y="1621" width="0.2" height="15.0" fill="rgb(235,13,49)" rx="2" ry="2" />
<text  x="305.42" y="1631.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="660.8" y="1925" width="1.4" height="15.0" fill="rgb(232,83,45)" rx="2" ry="2" />
<text  x="663.79" y="1935.5" ></text>
</g>
<g >
<title>malloc (23 samples, 0.39%)</title><rect x="1184.8" y="2053" width="4.6" height="15.0" fill="rgb(243,128,44)" rx="2" ry="2" />
<text  x="1187.84" y="2063.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="690.6" y="1877" width="0.2" height="15.0" fill="rgb(238,115,12)" rx="2" ry="2" />
<text  x="693.59" y="1887.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="336.8" y="1749" width="0.2" height="15.0" fill="rgb(225,139,30)" rx="2" ry="2" />
<text  x="339.78" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1082.9" y="1781" width="0.2" height="15.0" fill="rgb(205,112,11)" rx="2" ry="2" />
<text  x="1085.93" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="497.7" y="1733" width="0.2" height="15.0" fill="rgb(247,156,49)" rx="2" ry="2" />
<text  x="500.69" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="70.6" y="1749" width="0.2" height="15.0" fill="rgb(227,14,43)" rx="2" ry="2" />
<text  x="73.59" y="1759.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="738.3" y="1605" width="0.2" height="15.0" fill="rgb(226,89,46)" rx="2" ry="2" />
<text  x="741.26" y="1615.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="65.6" y="1669" width="0.2" height="15.0" fill="rgb(222,99,11)" rx="2" ry="2" />
<text  x="68.62" y="1679.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1105.2" y="1589" width="0.2" height="15.0" fill="rgb(234,41,17)" rx="2" ry="2" />
<text  x="1108.18" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="901.6" y="1957" width="0.2" height="15.0" fill="rgb(236,91,8)" rx="2" ry="2" />
<text  x="904.56" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1160.8" y="1813" width="0.2" height="15.0" fill="rgb(235,10,25)" rx="2" ry="2" />
<text  x="1163.80" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="816.5" y="1701" width="0.2" height="15.0" fill="rgb(222,175,48)" rx="2" ry="2" />
<text  x="819.53" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="222.6" y="1653" width="0.2" height="15.0" fill="rgb(243,124,31)" rx="2" ry="2" />
<text  x="225.56" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="905.3" y="2021" width="2.0" height="15.0" fill="rgb(226,122,54)" rx="2" ry="2" />
<text  x="908.33" y="2031.5" ></text>
</g>
<g >
<title>ip_output (50 samples, 0.84%)</title><rect x="1108.0" y="1829" width="9.9" height="15.0" fill="rgb(211,223,18)" rx="2" ry="2" />
<text  x="1110.96" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="839.8" y="1909" width="0.2" height="15.0" fill="rgb(244,62,34)" rx="2" ry="2" />
<text  x="842.77" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="756.1" y="1685" width="0.2" height="15.0" fill="rgb(241,123,48)" rx="2" ry="2" />
<text  x="759.14" y="1695.5" ></text>
</g>
<g >
<title>path_init (1 samples, 0.02%)</title><rect x="12.4" y="1941" width="0.2" height="15.0" fill="rgb(242,148,4)" rx="2" ry="2" />
<text  x="15.38" y="1951.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="996.5" y="1877" width="0.2" height="15.0" fill="rgb(241,46,34)" rx="2" ry="2" />
<text  x="999.51" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (112 samples, 1.89%)</title><rect x="66.0" y="1989" width="22.3" height="15.0" fill="rgb(223,191,5)" rx="2" ry="2" />
<text  x="69.02" y="1999.5" >f..</text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="329.0" y="1813" width="0.6" height="15.0" fill="rgb(238,33,14)" rx="2" ry="2" />
<text  x="332.04" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1027.3" y="1829" width="0.2" height="15.0" fill="rgb(213,157,20)" rx="2" ry="2" />
<text  x="1030.30" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="303.4" y="1701" width="0.4" height="15.0" fill="rgb(206,110,8)" rx="2" ry="2" />
<text  x="306.41" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="748.8" y="1541" width="0.2" height="15.0" fill="rgb(210,18,48)" rx="2" ry="2" />
<text  x="751.79" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="291.1" y="1781" width="0.2" height="15.0" fill="rgb(210,59,4)" rx="2" ry="2" />
<text  x="294.09" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="757.5" y="1557" width="0.2" height="15.0" fill="rgb(217,111,33)" rx="2" ry="2" />
<text  x="760.53" y="1567.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="219.0" y="1813" width="0.2" height="15.0" fill="rgb(251,172,19)" rx="2" ry="2" />
<text  x="221.98" y="1823.5" ></text>
</g>
<g >
<title>napi_consume_skb (2 samples, 0.03%)</title><rect x="348.7" y="1925" width="0.4" height="15.0" fill="rgb(238,27,1)" rx="2" ry="2" />
<text  x="351.70" y="1935.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (2 samples, 0.03%)</title><rect x="94.6" y="1989" width="0.4" height="15.0" fill="rgb(243,196,10)" rx="2" ry="2" />
<text  x="97.63" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="574.4" y="1957" width="0.6" height="15.0" fill="rgb(227,115,10)" rx="2" ry="2" />
<text  x="577.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="713.0" y="1685" width="0.2" height="15.0" fill="rgb(236,150,20)" rx="2" ry="2" />
<text  x="716.03" y="1695.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="467.1" y="1877" width="0.2" height="15.0" fill="rgb(216,94,9)" rx="2" ry="2" />
<text  x="470.10" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="574.2" y="1653" width="0.2" height="15.0" fill="rgb(228,34,4)" rx="2" ry="2" />
<text  x="577.18" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="556.7" y="1877" width="0.2" height="15.0" fill="rgb(216,39,53)" rx="2" ry="2" />
<text  x="559.69" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="373.5" y="1941" width="0.2" height="15.0" fill="rgb(221,191,8)" rx="2" ry="2" />
<text  x="376.54" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (2 samples, 0.03%)</title><rect x="534.0" y="1989" width="0.4" height="15.0" fill="rgb(233,20,11)" rx="2" ry="2" />
<text  x="537.05" y="1999.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="459.6" y="1973" width="0.2" height="15.0" fill="rgb(212,220,37)" rx="2" ry="2" />
<text  x="462.55" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="535.2" y="1877" width="0.8" height="15.0" fill="rgb(232,197,32)" rx="2" ry="2" />
<text  x="538.24" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1160.8" y="1765" width="0.2" height="15.0" fill="rgb(250,102,49)" rx="2" ry="2" />
<text  x="1163.80" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1019.8" y="1989" width="0.7" height="15.0" fill="rgb(243,37,53)" rx="2" ry="2" />
<text  x="1022.75" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (31 samples, 0.52%)</title><rect x="1130.0" y="2037" width="6.2" height="15.0" fill="rgb(206,154,30)" rx="2" ry="2" />
<text  x="1133.01" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output2 (126 samples, 2.12%)</title><rect x="296.5" y="1749" width="25.0" height="15.0" fill="rgb(241,196,24)" rx="2" ry="2" />
<text  x="299.46" y="1759.5" >i..</text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (2 samples, 0.03%)</title><rect x="570.2" y="2005" width="0.4" height="15.0" fill="rgb(205,1,41)" rx="2" ry="2" />
<text  x="573.20" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="999.7" y="1909" width="0.2" height="15.0" fill="rgb(217,116,12)" rx="2" ry="2" />
<text  x="1002.69" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="497.5" y="1797" width="0.2" height="15.0" fill="rgb(222,71,5)" rx="2" ry="2" />
<text  x="500.49" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="221.4" y="1877" width="0.2" height="15.0" fill="rgb(253,70,11)" rx="2" ry="2" />
<text  x="224.37" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (59 samples, 0.99%)</title><rect x="219.2" y="1925" width="11.7" height="15.0" fill="rgb(208,172,24)" rx="2" ry="2" />
<text  x="222.18" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (80 samples, 1.35%)</title><rect x="1076.2" y="1909" width="15.9" height="15.0" fill="rgb(229,147,37)" rx="2" ry="2" />
<text  x="1079.17" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1141.9" y="1989" width="0.2" height="15.0" fill="rgb(211,145,50)" rx="2" ry="2" />
<text  x="1144.93" y="1999.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1009.2" y="1957" width="0.2" height="15.0" fill="rgb(251,215,30)" rx="2" ry="2" />
<text  x="1012.23" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (25 samples, 0.42%)</title><rect x="1110.7" y="1477" width="5.0" height="15.0" fill="rgb(237,156,43)" rx="2" ry="2" />
<text  x="1113.74" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="901.6" y="1829" width="0.2" height="15.0" fill="rgb(238,58,45)" rx="2" ry="2" />
<text  x="904.56" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1102.8" y="1829" width="0.2" height="15.0" fill="rgb(250,158,8)" rx="2" ry="2" />
<text  x="1105.79" y="1839.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="412.7" y="1621" width="0.2" height="15.0" fill="rgb(233,1,6)" rx="2" ry="2" />
<text  x="415.67" y="1631.5" ></text>
</g>
<g >
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="283.7" y="1877" width="0.4" height="15.0" fill="rgb(233,0,22)" rx="2" ry="2" />
<text  x="286.74" y="1887.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (1 samples, 0.02%)</title><rect x="1012.4" y="2021" width="0.2" height="15.0" fill="rgb(209,75,34)" rx="2" ry="2" />
<text  x="1015.40" y="2031.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="466.7" y="1877" width="0.4" height="15.0" fill="rgb(205,208,33)" rx="2" ry="2" />
<text  x="469.70" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1139.9" y="1989" width="0.2" height="15.0" fill="rgb(220,29,53)" rx="2" ry="2" />
<text  x="1142.94" y="1999.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="598.0" y="1861" width="0.6" height="15.0" fill="rgb(229,160,7)" rx="2" ry="2" />
<text  x="601.01" y="1871.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="100.8" y="1893" width="0.2" height="15.0" fill="rgb(236,186,38)" rx="2" ry="2" />
<text  x="103.78" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="488.2" y="1973" width="0.2" height="15.0" fill="rgb(242,207,40)" rx="2" ry="2" />
<text  x="491.16" y="1983.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1019.0" y="1973" width="0.4" height="15.0" fill="rgb(252,200,8)" rx="2" ry="2" />
<text  x="1021.96" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="757.5" y="1573" width="0.2" height="15.0" fill="rgb(208,178,38)" rx="2" ry="2" />
<text  x="760.53" y="1583.5" ></text>
</g>
<g >
<title>malloc (11 samples, 0.19%)</title><rect x="1027.9" y="2037" width="2.2" height="15.0" fill="rgb(240,175,19)" rx="2" ry="2" />
<text  x="1030.90" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="991.9" y="1957" width="0.2" height="15.0" fill="rgb(210,108,38)" rx="2" ry="2" />
<text  x="994.94" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="934.1" y="1893" width="0.6" height="15.0" fill="rgb(209,117,33)" rx="2" ry="2" />
<text  x="937.13" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="159.6" y="1573" width="0.2" height="15.0" fill="rgb(225,121,49)" rx="2" ry="2" />
<text  x="162.59" y="1583.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (39 samples, 0.66%)</title><rect x="1012.8" y="2021" width="7.7" height="15.0" fill="rgb(236,9,19)" rx="2" ry="2" />
<text  x="1015.80" y="2031.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="31.3" y="1973" width="0.8" height="15.0" fill="rgb(248,40,54)" rx="2" ry="2" />
<text  x="34.26" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (35 samples, 0.59%)</title><rect x="154.4" y="1925" width="7.0" height="15.0" fill="rgb(246,164,5)" rx="2" ry="2" />
<text  x="157.42" y="1935.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (1 samples, 0.02%)</title><rect x="188.6" y="2021" width="0.2" height="15.0" fill="rgb(212,184,47)" rx="2" ry="2" />
<text  x="191.59" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="386.2" y="1813" width="0.2" height="15.0" fill="rgb(246,104,6)" rx="2" ry="2" />
<text  x="389.25" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1083.1" y="1813" width="0.2" height="15.0" fill="rgb(237,64,28)" rx="2" ry="2" />
<text  x="1086.12" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.15%)</title><rect x="12.8" y="1909" width="1.8" height="15.0" fill="rgb(219,209,47)" rx="2" ry="2" />
<text  x="15.78" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="994.1" y="1941" width="0.2" height="15.0" fill="rgb(221,116,28)" rx="2" ry="2" />
<text  x="997.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="914.9" y="1973" width="0.2" height="15.0" fill="rgb(227,161,29)" rx="2" ry="2" />
<text  x="917.87" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.4" y="1845" width="20.2" height="15.0" fill="rgb(217,94,34)" rx="2" ry="2" />
<text  x="107.36" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="229.7" y="1781" width="0.4" height="15.0" fill="rgb(206,223,11)" rx="2" ry="2" />
<text  x="232.71" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (2 samples, 0.03%)</title><rect x="862.2" y="1989" width="0.4" height="15.0" fill="rgb(247,116,21)" rx="2" ry="2" />
<text  x="865.22" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="913.1" y="1989" width="3.2" height="15.0" fill="rgb(248,42,51)" rx="2" ry="2" />
<text  x="916.08" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="65.4" y="1765" width="0.4" height="15.0" fill="rgb(220,68,29)" rx="2" ry="2" />
<text  x="68.42" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="739.9" y="1685" width="0.2" height="15.0" fill="rgb(223,94,32)" rx="2" ry="2" />
<text  x="742.85" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="569.6" y="1973" width="0.2" height="15.0" fill="rgb(218,67,35)" rx="2" ry="2" />
<text  x="572.61" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="147.9" y="1813" width="0.2" height="15.0" fill="rgb(223,83,33)" rx="2" ry="2" />
<text  x="150.87" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="819.3" y="1573" width="0.2" height="15.0" fill="rgb(216,194,42)" rx="2" ry="2" />
<text  x="822.31" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="789" width="14.3" height="15.0" fill="rgb(245,121,8)" rx="2" ry="2" />
<text  x="108.75" y="799.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1165.4" y="2053" width="0.2" height="15.0" fill="rgb(233,81,30)" rx="2" ry="2" />
<text  x="1168.37" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (100 samples, 1.68%)</title><rect x="104.4" y="1813" width="19.8" height="15.0" fill="rgb(211,37,18)" rx="2" ry="2" />
<text  x="107.36" y="1823.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (19 samples, 0.32%)</title><rect x="275.0" y="1845" width="3.8" height="15.0" fill="rgb(227,149,51)" rx="2" ry="2" />
<text  x="278.00" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.8" y="1589" width="0.2" height="15.0" fill="rgb(253,218,9)" rx="2" ry="2" />
<text  x="124.84" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="281.6" y="1813" width="0.2" height="15.0" fill="rgb(245,144,23)" rx="2" ry="2" />
<text  x="284.56" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1173" width="14.7" height="15.0" fill="rgb(248,203,35)" rx="2" ry="2" />
<text  x="108.35" y="1183.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="45.8" y="1925" width="0.2" height="15.0" fill="rgb(246,34,14)" rx="2" ry="2" />
<text  x="48.76" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="65.4" y="1797" width="0.4" height="15.0" fill="rgb(221,66,49)" rx="2" ry="2" />
<text  x="68.42" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1105.2" y="1845" width="0.2" height="15.0" fill="rgb(242,17,41)" rx="2" ry="2" />
<text  x="1108.18" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="171.7" y="1845" width="0.4" height="15.0" fill="rgb(245,189,37)" rx="2" ry="2" />
<text  x="174.70" y="1855.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1109.1" y="1509" width="0.2" height="15.0" fill="rgb(233,36,33)" rx="2" ry="2" />
<text  x="1112.15" y="1519.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="820.3" y="1717" width="0.2" height="15.0" fill="rgb(232,107,47)" rx="2" ry="2" />
<text  x="823.31" y="1727.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (13 samples, 0.22%)</title><rect x="151.8" y="1909" width="2.6" height="15.0" fill="rgb(253,33,33)" rx="2" ry="2" />
<text  x="154.84" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="981.6" y="2037" width="1.2" height="15.0" fill="rgb(226,125,8)" rx="2" ry="2" />
<text  x="984.61" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="691.2" y="1589" width="0.2" height="15.0" fill="rgb(228,106,14)" rx="2" ry="2" />
<text  x="694.18" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1125.4" y="1749" width="0.2" height="15.0" fill="rgb(236,10,10)" rx="2" ry="2" />
<text  x="1128.44" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1125.2" y="1861" width="0.4" height="15.0" fill="rgb(238,179,38)" rx="2" ry="2" />
<text  x="1128.24" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="892.4" y="1717" width="0.2" height="15.0" fill="rgb(245,148,10)" rx="2" ry="2" />
<text  x="895.42" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1027.3" y="1797" width="0.2" height="15.0" fill="rgb(207,129,22)" rx="2" ry="2" />
<text  x="1030.30" y="1807.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="557.1" y="1957" width="0.2" height="15.0" fill="rgb(205,172,43)" rx="2" ry="2" />
<text  x="560.09" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="69.2" y="1925" width="0.2" height="15.0" fill="rgb(226,194,24)" rx="2" ry="2" />
<text  x="72.20" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (43 samples, 0.72%)</title><rect x="1108.8" y="1621" width="8.5" height="15.0" fill="rgb(217,6,41)" rx="2" ry="2" />
<text  x="1111.75" y="1631.5" ></text>
</g>
<g >
<title>inode_init_always (3 samples, 0.05%)</title><rect x="397.2" y="1909" width="0.6" height="15.0" fill="rgb(243,130,4)" rx="2" ry="2" />
<text  x="400.18" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1093" width="14.7" height="15.0" fill="rgb(254,150,3)" rx="2" ry="2" />
<text  x="108.35" y="1103.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="619.3" y="1989" width="0.4" height="15.0" fill="rgb(238,189,6)" rx="2" ry="2" />
<text  x="622.27" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1059.7" y="1893" width="0.4" height="15.0" fill="rgb(247,109,46)" rx="2" ry="2" />
<text  x="1062.68" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1148.7" y="1957" width="0.2" height="15.0" fill="rgb(212,117,9)" rx="2" ry="2" />
<text  x="1151.68" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="346.3" y="1877" width="0.2" height="15.0" fill="rgb(228,105,46)" rx="2" ry="2" />
<text  x="349.32" y="1887.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1035.4" y="2021" width="0.2" height="15.0" fill="rgb(229,113,21)" rx="2" ry="2" />
<text  x="1038.45" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (6 samples, 0.10%)</title><rect x="841.8" y="1941" width="1.2" height="15.0" fill="rgb(208,41,2)" rx="2" ry="2" />
<text  x="844.76" y="1951.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="171.7" y="1717" width="0.2" height="15.0" fill="rgb(245,137,49)" rx="2" ry="2" />
<text  x="174.70" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="65.4" y="1957" width="0.4" height="15.0" fill="rgb(212,142,39)" rx="2" ry="2" />
<text  x="68.42" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="745.0" y="1749" width="0.2" height="15.0" fill="rgb(244,24,54)" rx="2" ry="2" />
<text  x="748.02" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="901.6" y="1909" width="0.2" height="15.0" fill="rgb(210,46,15)" rx="2" ry="2" />
<text  x="904.56" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="416.8" y="1941" width="0.6" height="15.0" fill="rgb(217,180,39)" rx="2" ry="2" />
<text  x="419.84" y="1951.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1175.9" y="1941" width="0.2" height="15.0" fill="rgb(206,200,30)" rx="2" ry="2" />
<text  x="1178.90" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1142.7" y="1957" width="0.2" height="15.0" fill="rgb(205,203,8)" rx="2" ry="2" />
<text  x="1145.72" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="317.7" y="1653" width="0.2" height="15.0" fill="rgb(249,56,20)" rx="2" ry="2" />
<text  x="320.71" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="571.8" y="1829" width="0.2" height="15.0" fill="rgb(245,144,45)" rx="2" ry="2" />
<text  x="574.79" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="483.0" y="1829" width="0.2" height="15.0" fill="rgb(218,179,41)" rx="2" ry="2" />
<text  x="485.99" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1477" width="16.2" height="15.0" fill="rgb(220,61,19)" rx="2" ry="2" />
<text  x="108.15" y="1487.5" ></text>
</g>
<g >
<title>__GI___getsockname (12 samples, 0.20%)</title><rect x="203.5" y="2037" width="2.4" height="15.0" fill="rgb(219,40,48)" rx="2" ry="2" />
<text  x="206.49" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="390.4" y="1925" width="0.2" height="15.0" fill="rgb(223,138,1)" rx="2" ry="2" />
<text  x="393.42" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="892.8" y="1909" width="0.2" height="15.0" fill="rgb(223,109,28)" rx="2" ry="2" />
<text  x="895.81" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="59.5" y="1845" width="0.2" height="15.0" fill="rgb(217,136,45)" rx="2" ry="2" />
<text  x="62.46" y="1855.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="391.8" y="1957" width="0.2" height="15.0" fill="rgb(238,129,28)" rx="2" ry="2" />
<text  x="394.81" y="1967.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="333.2" y="1733" width="0.2" height="15.0" fill="rgb(237,34,15)" rx="2" ry="2" />
<text  x="336.21" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="74.4" y="1925" width="0.2" height="15.0" fill="rgb(215,14,20)" rx="2" ry="2" />
<text  x="77.36" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="1149.1" y="1925" width="0.2" height="15.0" fill="rgb(232,10,26)" rx="2" ry="2" />
<text  x="1152.08" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="625.8" y="1973" width="0.2" height="15.0" fill="rgb(237,26,14)" rx="2" ry="2" />
<text  x="628.82" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1143.3" y="1989" width="0.4" height="15.0" fill="rgb(232,111,18)" rx="2" ry="2" />
<text  x="1146.32" y="1999.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1125.6" y="1989" width="0.2" height="15.0" fill="rgb(228,118,4)" rx="2" ry="2" />
<text  x="1128.64" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="208.1" y="1989" width="0.2" height="15.0" fill="rgb(229,105,43)" rx="2" ry="2" />
<text  x="211.06" y="1999.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="141.1" y="1909" width="0.2" height="15.0" fill="rgb(237,85,1)" rx="2" ry="2" />
<text  x="144.11" y="1919.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="945.3" y="1973" width="0.2" height="15.0" fill="rgb(230,211,36)" rx="2" ry="2" />
<text  x="948.26" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="625.8" y="1941" width="0.2" height="15.0" fill="rgb(246,30,32)" rx="2" ry="2" />
<text  x="628.82" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="571.0" y="1925" width="0.2" height="15.0" fill="rgb(205,171,52)" rx="2" ry="2" />
<text  x="574.00" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="410.3" y="1877" width="0.2" height="15.0" fill="rgb(222,64,6)" rx="2" ry="2" />
<text  x="413.29" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="573.2" y="1893" width="0.2" height="15.0" fill="rgb(209,20,8)" rx="2" ry="2" />
<text  x="576.18" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="614.9" y="1861" width="0.2" height="15.0" fill="rgb(218,157,21)" rx="2" ry="2" />
<text  x="617.90" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1033.5" y="1717" width="0.2" height="15.0" fill="rgb(241,138,21)" rx="2" ry="2" />
<text  x="1036.46" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="171.7" y="1877" width="0.4" height="15.0" fill="rgb(211,36,29)" rx="2" ry="2" />
<text  x="174.70" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (2 samples, 0.03%)</title><rect x="533.3" y="1989" width="0.3" height="15.0" fill="rgb(241,144,14)" rx="2" ry="2" />
<text  x="536.25" y="1999.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="750.4" y="1733" width="0.8" height="15.0" fill="rgb(223,32,53)" rx="2" ry="2" />
<text  x="753.38" y="1743.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1001.1" y="1989" width="0.2" height="15.0" fill="rgb(205,115,51)" rx="2" ry="2" />
<text  x="1004.08" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="327.1" y="1749" width="0.1" height="15.0" fill="rgb(206,169,24)" rx="2" ry="2" />
<text  x="330.05" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="573.2" y="1781" width="0.2" height="15.0" fill="rgb(220,125,30)" rx="2" ry="2" />
<text  x="576.18" y="1791.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1064.1" y="1941" width="0.2" height="15.0" fill="rgb(253,33,39)" rx="2" ry="2" />
<text  x="1067.05" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="792.7" y="1349" width="0.2" height="15.0" fill="rgb(226,92,8)" rx="2" ry="2" />
<text  x="795.69" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="229" width="13.5" height="15.0" fill="rgb(237,111,14)" rx="2" ry="2" />
<text  x="108.75" y="239.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="745.4" y="1749" width="0.4" height="15.0" fill="rgb(239,198,27)" rx="2" ry="2" />
<text  x="748.41" y="1759.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="269.4" y="1861" width="0.2" height="15.0" fill="rgb(222,186,28)" rx="2" ry="2" />
<text  x="272.44" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1012.2" y="1973" width="0.2" height="15.0" fill="rgb(223,148,13)" rx="2" ry="2" />
<text  x="1015.21" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="387.6" y="1877" width="0.2" height="15.0" fill="rgb(212,84,8)" rx="2" ry="2" />
<text  x="390.64" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="650.3" y="1957" width="0.2" height="15.0" fill="rgb(235,226,6)" rx="2" ry="2" />
<text  x="653.26" y="1967.5" ></text>
</g>
<g >
<title>__skb_clone (24 samples, 0.40%)</title><rect x="322.7" y="1797" width="4.7" height="15.0" fill="rgb(227,75,40)" rx="2" ry="2" />
<text  x="325.68" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="230.5" y="1829" width="0.4" height="15.0" fill="rgb(240,65,27)" rx="2" ry="2" />
<text  x="233.51" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1128.4" y="1941" width="0.2" height="15.0" fill="rgb(248,138,5)" rx="2" ry="2" />
<text  x="1131.42" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="879.3" y="1909" width="0.2" height="15.0" fill="rgb(252,40,9)" rx="2" ry="2" />
<text  x="882.31" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="778.0" y="1541" width="0.2" height="15.0" fill="rgb(230,188,21)" rx="2" ry="2" />
<text  x="780.99" y="1551.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="370.8" y="1957" width="0.2" height="15.0" fill="rgb(228,53,38)" rx="2" ry="2" />
<text  x="373.75" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.7" y="2021" width="0.2" height="15.0" fill="rgb(213,217,25)" rx="2" ry="2" />
<text  x="583.73" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="840.0" y="1909" width="0.2" height="15.0" fill="rgb(211,176,1)" rx="2" ry="2" />
<text  x="842.97" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (6 samples, 0.10%)</title><rect x="1174.9" y="1957" width="1.2" height="15.0" fill="rgb(239,50,25)" rx="2" ry="2" />
<text  x="1177.90" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="299.6" y="1493" width="0.6" height="15.0" fill="rgb(219,181,16)" rx="2" ry="2" />
<text  x="302.64" y="1503.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="552.5" y="1989" width="0.2" height="15.0" fill="rgb(227,81,50)" rx="2" ry="2" />
<text  x="555.52" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="279.8" y="1653" width="0.2" height="15.0" fill="rgb(207,130,41)" rx="2" ry="2" />
<text  x="282.77" y="1663.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (1 samples, 0.02%)</title><rect x="613.3" y="1909" width="0.2" height="15.0" fill="rgb(214,102,29)" rx="2" ry="2" />
<text  x="616.31" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1105.2" y="1717" width="0.2" height="15.0" fill="rgb(210,46,27)" rx="2" ry="2" />
<text  x="1108.18" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1020.0" y="1829" width="0.5" height="15.0" fill="rgb(241,23,45)" rx="2" ry="2" />
<text  x="1022.95" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="208.1" y="1813" width="0.2" height="15.0" fill="rgb(246,79,16)" rx="2" ry="2" />
<text  x="211.06" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="144.1" y="1925" width="0.4" height="15.0" fill="rgb(253,55,25)" rx="2" ry="2" />
<text  x="147.09" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="138.7" y="1941" width="0.2" height="15.0" fill="rgb(214,171,12)" rx="2" ry="2" />
<text  x="141.73" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="53.5" y="1957" width="0.2" height="15.0" fill="rgb(253,16,2)" rx="2" ry="2" />
<text  x="56.51" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="405" width="13.5" height="15.0" fill="rgb(222,105,25)" rx="2" ry="2" />
<text  x="108.75" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="227.1" y="1781" width="0.4" height="15.0" fill="rgb(248,111,44)" rx="2" ry="2" />
<text  x="230.13" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (1 samples, 0.02%)</title><rect x="71.2" y="1941" width="0.2" height="15.0" fill="rgb(219,99,18)" rx="2" ry="2" />
<text  x="74.19" y="1951.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="1004.7" y="1717" width="0.2" height="15.0" fill="rgb(252,82,29)" rx="2" ry="2" />
<text  x="1007.66" y="1727.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (4 samples, 0.07%)</title><rect x="1170.1" y="2037" width="0.8" height="15.0" fill="rgb(235,220,3)" rx="2" ry="2" />
<text  x="1173.13" y="2047.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="857.3" y="1957" width="0.2" height="15.0" fill="rgb(233,72,25)" rx="2" ry="2" />
<text  x="860.26" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="911.3" y="1973" width="1.0" height="15.0" fill="rgb(241,214,15)" rx="2" ry="2" />
<text  x="914.29" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="497.5" y="1845" width="0.4" height="15.0" fill="rgb(224,176,48)" rx="2" ry="2" />
<text  x="500.49" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1115.5" y="1381" width="0.2" height="15.0" fill="rgb(232,31,18)" rx="2" ry="2" />
<text  x="1118.51" y="1391.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="569.6" y="1877" width="0.2" height="15.0" fill="rgb(232,142,2)" rx="2" ry="2" />
<text  x="572.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="837" width="14.3" height="15.0" fill="rgb(252,72,11)" rx="2" ry="2" />
<text  x="108.75" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="1176.1" y="1989" width="0.6" height="15.0" fill="rgb(224,156,7)" rx="2" ry="2" />
<text  x="1179.09" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (11 samples, 0.19%)</title><rect x="1103.2" y="1893" width="2.2" height="15.0" fill="rgb(217,76,54)" rx="2" ry="2" />
<text  x="1106.19" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="829.6" y="1781" width="0.2" height="15.0" fill="rgb(239,54,18)" rx="2" ry="2" />
<text  x="832.64" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="917" width="14.7" height="15.0" fill="rgb(249,193,51)" rx="2" ry="2" />
<text  x="108.35" y="927.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="635.4" y="1925" width="0.2" height="15.0" fill="rgb(250,30,22)" rx="2" ry="2" />
<text  x="638.36" y="1935.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="291.1" y="1509" width="0.2" height="15.0" fill="rgb(229,206,38)" rx="2" ry="2" />
<text  x="294.09" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="488.8" y="1957" width="0.6" height="15.0" fill="rgb(247,146,16)" rx="2" ry="2" />
<text  x="491.75" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (6 samples, 0.10%)</title><rect x="108.5" y="37" width="1.2" height="15.0" fill="rgb(251,33,4)" rx="2" ry="2" />
<text  x="111.53" y="47.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (2 samples, 0.03%)</title><rect x="170.7" y="1989" width="0.4" height="15.0" fill="rgb(216,210,12)" rx="2" ry="2" />
<text  x="173.71" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="326.7" y="1701" width="0.4" height="15.0" fill="rgb(238,32,31)" rx="2" ry="2" />
<text  x="329.65" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1059.9" y="1749" width="0.2" height="15.0" fill="rgb(215,45,39)" rx="2" ry="2" />
<text  x="1062.88" y="1759.5" ></text>
</g>
<g >
<title>do_fcntl (3 samples, 0.05%)</title><rect x="565.2" y="1925" width="0.6" height="15.0" fill="rgb(251,160,46)" rx="2" ry="2" />
<text  x="568.24" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="441.5" y="1733" width="0.2" height="15.0" fill="rgb(206,215,22)" rx="2" ry="2" />
<text  x="444.47" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="291.1" y="1541" width="0.2" height="15.0" fill="rgb(248,108,25)" rx="2" ry="2" />
<text  x="294.09" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="907.3" y="2005" width="0.4" height="15.0" fill="rgb(244,61,6)" rx="2" ry="2" />
<text  x="910.32" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1019.6" y="1893" width="0.2" height="15.0" fill="rgb(217,208,19)" rx="2" ry="2" />
<text  x="1022.56" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="70.2" y="1813" width="0.2" height="15.0" fill="rgb(250,123,18)" rx="2" ry="2" />
<text  x="73.19" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="569.6" y="1861" width="0.2" height="15.0" fill="rgb(249,102,50)" rx="2" ry="2" />
<text  x="572.61" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="279.8" y="1637" width="0.2" height="15.0" fill="rgb(228,5,2)" rx="2" ry="2" />
<text  x="282.77" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="819.3" y="1605" width="0.2" height="15.0" fill="rgb(222,41,49)" rx="2" ry="2" />
<text  x="822.31" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="138.5" y="1973" width="0.4" height="15.0" fill="rgb(226,77,37)" rx="2" ry="2" />
<text  x="141.53" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="339.4" y="1797" width="0.2" height="15.0" fill="rgb(224,205,47)" rx="2" ry="2" />
<text  x="342.37" y="1807.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="488.0" y="1845" width="0.2" height="15.0" fill="rgb(216,175,46)" rx="2" ry="2" />
<text  x="490.96" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1125.2" y="1893" width="0.4" height="15.0" fill="rgb(248,175,40)" rx="2" ry="2" />
<text  x="1128.24" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="497.7" y="1813" width="0.2" height="15.0" fill="rgb(218,164,36)" rx="2" ry="2" />
<text  x="500.69" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="600.6" y="1717" width="0.2" height="15.0" fill="rgb(223,87,36)" rx="2" ry="2" />
<text  x="603.60" y="1727.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="256.5" y="1877" width="0.2" height="15.0" fill="rgb(249,132,1)" rx="2" ry="2" />
<text  x="259.53" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="534.6" y="1941" width="0.6" height="15.0" fill="rgb(214,114,49)" rx="2" ry="2" />
<text  x="537.64" y="1951.5" ></text>
</g>
<g >
<title>ip_output (132 samples, 2.22%)</title><rect x="295.3" y="1781" width="26.2" height="15.0" fill="rgb(246,107,31)" rx="2" ry="2" />
<text  x="298.27" y="1791.5" >i..</text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="333.8" y="1461" width="0.2" height="15.0" fill="rgb(221,208,48)" rx="2" ry="2" />
<text  x="336.80" y="1471.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="252.0" y="1989" width="0.8" height="15.0" fill="rgb(236,3,28)" rx="2" ry="2" />
<text  x="254.96" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (8 samples, 0.13%)</title><rect x="899.2" y="1973" width="1.6" height="15.0" fill="rgb(239,148,43)" rx="2" ry="2" />
<text  x="902.17" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1,017 samples, 17.12%)</title><rect x="702.5" y="2037" width="202.0" height="15.0" fill="rgb(208,86,32)" rx="2" ry="2" />
<text  x="705.51" y="2047.5" >facebook::memcache::McServ..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="387.4" y="1909" width="0.2" height="15.0" fill="rgb(211,34,45)" rx="2" ry="2" />
<text  x="390.44" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="154.6" y="1845" width="0.2" height="15.0" fill="rgb(224,142,28)" rx="2" ry="2" />
<text  x="157.62" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="914.5" y="1973" width="0.4" height="15.0" fill="rgb(233,206,31)" rx="2" ry="2" />
<text  x="917.47" y="1983.5" ></text>
</g>
<g >
<title>trigger_dyntick_cpu.isra.35 (1 samples, 0.02%)</title><rect x="337.6" y="1765" width="0.2" height="15.0" fill="rgb(227,44,35)" rx="2" ry="2" />
<text  x="340.58" y="1775.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (9 samples, 0.15%)</title><rect x="69.4" y="1909" width="1.8" height="15.0" fill="rgb(232,224,11)" rx="2" ry="2" />
<text  x="72.40" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="70.6" y="1813" width="0.2" height="15.0" fill="rgb(247,92,8)" rx="2" ry="2" />
<text  x="73.59" y="1823.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (3 samples, 0.05%)</title><rect x="1177.7" y="2053" width="0.6" height="15.0" fill="rgb(253,12,11)" rx="2" ry="2" />
<text  x="1180.68" y="2063.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="545.0" y="1877" width="0.4" height="15.0" fill="rgb(237,74,7)" rx="2" ry="2" />
<text  x="547.97" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="70.6" y="1685" width="0.2" height="15.0" fill="rgb(238,3,25)" rx="2" ry="2" />
<text  x="73.59" y="1695.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="968.5" y="2005" width="0.8" height="15.0" fill="rgb(213,158,5)" rx="2" ry="2" />
<text  x="971.50" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="253.0" y="1957" width="0.5" height="15.0" fill="rgb(238,200,11)" rx="2" ry="2" />
<text  x="255.95" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (11 samples, 0.19%)</title><rect x="344.3" y="1909" width="2.2" height="15.0" fill="rgb(226,118,16)" rx="2" ry="2" />
<text  x="347.33" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.8" y="1781" width="0.2" height="15.0" fill="rgb(249,49,15)" rx="2" ry="2" />
<text  x="890.85" y="1791.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="371.4" y="1957" width="0.1" height="15.0" fill="rgb(221,121,12)" rx="2" ry="2" />
<text  x="374.35" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="235.1" y="1957" width="0.8" height="15.0" fill="rgb(233,50,5)" rx="2" ry="2" />
<text  x="238.07" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="697.5" y="1797" width="0.2" height="15.0" fill="rgb(254,180,21)" rx="2" ry="2" />
<text  x="700.54" y="1807.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="100.8" y="1861" width="0.2" height="15.0" fill="rgb(211,36,17)" rx="2" ry="2" />
<text  x="103.78" y="1871.5" ></text>
</g>
<g >
<title>__kfree_skb (99 samples, 1.67%)</title><rect x="1072.4" y="1925" width="19.7" height="15.0" fill="rgb(210,85,28)" rx="2" ry="2" />
<text  x="1075.40" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="74.4" y="1797" width="0.2" height="15.0" fill="rgb(229,116,27)" rx="2" ry="2" />
<text  x="77.36" y="1807.5" ></text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="270.2" y="1861" width="0.8" height="15.0" fill="rgb(239,64,24)" rx="2" ry="2" />
<text  x="273.24" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="530.7" y="1973" width="1.2" height="15.0" fill="rgb(247,33,3)" rx="2" ry="2" />
<text  x="533.67" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (15 samples, 0.25%)</title><rect x="484.2" y="1973" width="3.0" height="15.0" fill="rgb(248,137,49)" rx="2" ry="2" />
<text  x="487.19" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="963.3" y="2005" width="0.2" height="15.0" fill="rgb(238,104,9)" rx="2" ry="2" />
<text  x="966.34" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="513.4" y="1589" width="0.2" height="15.0" fill="rgb(247,183,0)" rx="2" ry="2" />
<text  x="516.39" y="1599.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1183.6" y="2037" width="0.6" height="15.0" fill="rgb(229,46,18)" rx="2" ry="2" />
<text  x="1186.64" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="127.2" y="1957" width="0.2" height="15.0" fill="rgb(244,206,31)" rx="2" ry="2" />
<text  x="130.21" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.4" y="1573" width="0.2" height="15.0" fill="rgb(249,143,19)" rx="2" ry="2" />
<text  x="124.44" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="862.4" y="1765" width="0.2" height="15.0" fill="rgb(222,33,22)" rx="2" ry="2" />
<text  x="865.42" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (8 samples, 0.13%)</title><rect x="613.7" y="1877" width="1.6" height="15.0" fill="rgb(209,183,18)" rx="2" ry="2" />
<text  x="616.71" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (4 samples, 0.07%)</title><rect x="1016.4" y="2005" width="0.8" height="15.0" fill="rgb(212,46,14)" rx="2" ry="2" />
<text  x="1019.38" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="76.0" y="1925" width="0.2" height="15.0" fill="rgb(211,89,4)" rx="2" ry="2" />
<text  x="78.95" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="480.4" y="1797" width="0.2" height="15.0" fill="rgb(244,205,51)" rx="2" ry="2" />
<text  x="483.41" y="1807.5" ></text>
</g>
<g >
<title>sock_alloc_file (57 samples, 0.96%)</title><rect x="403.3" y="1957" width="11.4" height="15.0" fill="rgb(226,21,28)" rx="2" ry="2" />
<text  x="406.33" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="928.4" y="1957" width="0.2" height="15.0" fill="rgb(243,10,15)" rx="2" ry="2" />
<text  x="931.37" y="1967.5" ></text>
</g>
<g >
<title>__fget (30 samples, 0.51%)</title><rect x="452.6" y="1941" width="6.0" height="15.0" fill="rgb(232,141,46)" rx="2" ry="2" />
<text  x="455.60" y="1951.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="388.0" y="1669" width="0.2" height="15.0" fill="rgb(244,147,15)" rx="2" ry="2" />
<text  x="391.04" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="569.6" y="1941" width="0.2" height="15.0" fill="rgb(225,154,42)" rx="2" ry="2" />
<text  x="572.61" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="489.2" y="1813" width="0.2" height="15.0" fill="rgb(210,55,9)" rx="2" ry="2" />
<text  x="492.15" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="697.7" y="1973" width="0.8" height="15.0" fill="rgb(206,127,35)" rx="2" ry="2" />
<text  x="700.74" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="702.5" y="1989" width="0.2" height="15.0" fill="rgb(239,47,30)" rx="2" ry="2" />
<text  x="705.51" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="554.9" y="1941" width="0.4" height="15.0" fill="rgb(222,26,36)" rx="2" ry="2" />
<text  x="557.91" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (3 samples, 0.05%)</title><rect x="164.9" y="2005" width="0.6" height="15.0" fill="rgb(249,213,23)" rx="2" ry="2" />
<text  x="167.95" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="776.2" y="1525" width="1.0" height="15.0" fill="rgb(217,177,24)" rx="2" ry="2" />
<text  x="779.21" y="1535.5" ></text>
</g>
<g >
<title>inet_csk_accept (54 samples, 0.91%)</title><rect x="377.3" y="1941" width="10.7" height="15.0" fill="rgb(251,18,19)" rx="2" ry="2" />
<text  x="380.31" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="869" width="14.3" height="15.0" fill="rgb(215,29,14)" rx="2" ry="2" />
<text  x="108.75" y="879.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.10%)</title><rect x="14.6" y="1973" width="1.2" height="15.0" fill="rgb(241,189,32)" rx="2" ry="2" />
<text  x="17.57" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="129.8" y="2005" width="0.4" height="15.0" fill="rgb(205,105,14)" rx="2" ry="2" />
<text  x="132.79" y="2015.5" ></text>
</g>
<g >
<title>tcp_poll (3 samples, 0.05%)</title><rect x="467.9" y="1957" width="0.6" height="15.0" fill="rgb(244,212,3)" rx="2" ry="2" />
<text  x="470.90" y="1967.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="370.4" y="1957" width="0.4" height="15.0" fill="rgb(252,76,52)" rx="2" ry="2" />
<text  x="373.36" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (3 samples, 0.05%)</title><rect x="672.1" y="1845" width="0.6" height="15.0" fill="rgb(218,150,47)" rx="2" ry="2" />
<text  x="675.11" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="326.7" y="1765" width="0.4" height="15.0" fill="rgb(233,65,45)" rx="2" ry="2" />
<text  x="329.65" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="619.7" y="1861" width="0.2" height="15.0" fill="rgb(212,169,37)" rx="2" ry="2" />
<text  x="622.67" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1177.5" y="2021" width="0.2" height="15.0" fill="rgb(236,55,6)" rx="2" ry="2" />
<text  x="1180.48" y="2031.5" ></text>
</g>
<g >
<title>tcp_sendmsg (425 samples, 7.15%)</title><rect x="259.1" y="1909" width="84.4" height="15.0" fill="rgb(214,10,28)" rx="2" ry="2" />
<text  x="262.11" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="235.7" y="1909" width="0.2" height="15.0" fill="rgb(226,8,54)" rx="2" ry="2" />
<text  x="238.67" y="1919.5" ></text>
</g>
<g >
<title>ip_copy_addrs (7 samples, 0.12%)</title><rect x="289.9" y="1813" width="1.4" height="15.0" fill="rgb(217,93,14)" rx="2" ry="2" />
<text  x="292.90" y="1823.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="554.7" y="1941" width="0.2" height="15.0" fill="rgb(206,52,8)" rx="2" ry="2" />
<text  x="557.71" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="412.3" y="1893" width="0.2" height="15.0" fill="rgb(248,112,46)" rx="2" ry="2" />
<text  x="415.27" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="252.0" y="1893" width="0.8" height="15.0" fill="rgb(208,203,33)" rx="2" ry="2" />
<text  x="254.96" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="571.0" y="1861" width="0.2" height="15.0" fill="rgb(234,57,32)" rx="2" ry="2" />
<text  x="574.00" y="1871.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="349.3" y="1653" width="0.2" height="15.0" fill="rgb(253,166,8)" rx="2" ry="2" />
<text  x="352.30" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="691.2" y="1861" width="0.2" height="15.0" fill="rgb(211,20,28)" rx="2" ry="2" />
<text  x="694.18" y="1871.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (20 samples, 0.34%)</title><rect x="198.5" y="2037" width="4.0" height="15.0" fill="rgb(253,10,52)" rx="2" ry="2" />
<text  x="201.52" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="488.8" y="1941" width="0.6" height="15.0" fill="rgb(231,126,21)" rx="2" ry="2" />
<text  x="491.75" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="73.0" y="1909" width="0.2" height="15.0" fill="rgb(252,41,18)" rx="2" ry="2" />
<text  x="75.97" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="893.4" y="1893" width="0.2" height="15.0" fill="rgb(214,201,18)" rx="2" ry="2" />
<text  x="896.41" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="281.2" y="1749" width="0.2" height="15.0" fill="rgb(227,65,52)" rx="2" ry="2" />
<text  x="284.16" y="1759.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="769.8" y="1605" width="0.2" height="15.0" fill="rgb(221,126,13)" rx="2" ry="2" />
<text  x="772.85" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="961.2" y="2005" width="0.7" height="15.0" fill="rgb(251,43,9)" rx="2" ry="2" />
<text  x="964.15" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="150.1" y="1893" width="0.5" height="15.0" fill="rgb(216,19,27)" rx="2" ry="2" />
<text  x="153.05" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (7 samples, 0.12%)</title><rect x="37.4" y="1989" width="1.4" height="15.0" fill="rgb(228,118,4)" rx="2" ry="2" />
<text  x="40.41" y="1999.5" ></text>
</g>
<g >
<title>skb_clone (27 samples, 0.45%)</title><rect x="322.3" y="1813" width="5.3" height="15.0" fill="rgb(229,79,34)" rx="2" ry="2" />
<text  x="325.28" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="819.3" y="1685" width="0.2" height="15.0" fill="rgb(224,109,51)" rx="2" ry="2" />
<text  x="822.31" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="68.6" y="1941" width="0.2" height="15.0" fill="rgb(220,77,28)" rx="2" ry="2" />
<text  x="71.60" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="147.9" y="1877" width="0.2" height="15.0" fill="rgb(221,131,23)" rx="2" ry="2" />
<text  x="150.87" y="1887.5" ></text>
</g>
<g >
<title>__fdget_raw (2 samples, 0.03%)</title><rect x="564.8" y="1925" width="0.4" height="15.0" fill="rgb(205,207,48)" rx="2" ry="2" />
<text  x="567.84" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="144.5" y="1941" width="0.2" height="15.0" fill="rgb(224,61,19)" rx="2" ry="2" />
<text  x="147.49" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="845.1" y="1909" width="0.2" height="15.0" fill="rgb(244,3,52)" rx="2" ry="2" />
<text  x="848.14" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="635.6" y="1653" width="0.2" height="15.0" fill="rgb(227,34,22)" rx="2" ry="2" />
<text  x="638.56" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="885.1" y="1909" width="0.6" height="15.0" fill="rgb(235,91,50)" rx="2" ry="2" />
<text  x="888.07" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="356.5" y="1877" width="0.1" height="15.0" fill="rgb(227,169,5)" rx="2" ry="2" />
<text  x="359.45" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.5" y="1781" width="0.2" height="15.0" fill="rgb(228,78,4)" rx="2" ry="2" />
<text  x="229.53" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="619.7" y="1909" width="0.2" height="15.0" fill="rgb(211,127,30)" rx="2" ry="2" />
<text  x="622.67" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (6 samples, 0.10%)</title><rect x="91.6" y="1957" width="1.2" height="15.0" fill="rgb(208,148,37)" rx="2" ry="2" />
<text  x="94.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="171.9" y="1749" width="0.2" height="15.0" fill="rgb(251,32,27)" rx="2" ry="2" />
<text  x="174.90" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="177.5" y="1973" width="0.2" height="15.0" fill="rgb(242,41,2)" rx="2" ry="2" />
<text  x="180.46" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="792.5" y="1621" width="0.4" height="15.0" fill="rgb(224,215,27)" rx="2" ry="2" />
<text  x="795.49" y="1631.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="329.0" y="1797" width="0.6" height="15.0" fill="rgb(246,32,13)" rx="2" ry="2" />
<text  x="332.04" y="1807.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="852.1" y="1813" width="0.2" height="15.0" fill="rgb(210,54,3)" rx="2" ry="2" />
<text  x="855.09" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="193.4" y="1989" width="0.2" height="15.0" fill="rgb(248,17,6)" rx="2" ry="2" />
<text  x="196.36" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1012.2" y="1925" width="0.2" height="15.0" fill="rgb(231,30,53)" rx="2" ry="2" />
<text  x="1015.21" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1033.5" y="1797" width="0.2" height="15.0" fill="rgb(248,35,50)" rx="2" ry="2" />
<text  x="1036.46" y="1807.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(243,141,28)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1012.2" y="1989" width="0.2" height="15.0" fill="rgb(220,147,28)" rx="2" ry="2" />
<text  x="1015.21" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="222.6" y="1637" width="0.2" height="15.0" fill="rgb(222,215,29)" rx="2" ry="2" />
<text  x="225.56" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (3 samples, 0.05%)</title><rect x="143.9" y="1941" width="0.6" height="15.0" fill="rgb(247,41,4)" rx="2" ry="2" />
<text  x="146.89" y="1951.5" ></text>
</g>
<g >
<title>calloc@plt (3 samples, 0.05%)</title><rect x="199.5" y="2021" width="0.6" height="15.0" fill="rgb(236,19,6)" rx="2" ry="2" />
<text  x="202.52" y="2031.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="148.1" y="1749" width="0.2" height="15.0" fill="rgb(215,24,44)" rx="2" ry="2" />
<text  x="151.06" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (12 samples, 0.20%)</title><rect x="228.5" y="1861" width="2.4" height="15.0" fill="rgb(229,139,49)" rx="2" ry="2" />
<text  x="231.52" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="97.2" y="2021" width="0.2" height="15.0" fill="rgb(225,68,50)" rx="2" ry="2" />
<text  x="100.21" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="337.0" y="1653" width="0.4" height="15.0" fill="rgb(224,105,53)" rx="2" ry="2" />
<text  x="339.98" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="37.0" y="1989" width="0.2" height="15.0" fill="rgb(232,136,28)" rx="2" ry="2" />
<text  x="40.02" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="961.0" y="2005" width="0.2" height="15.0" fill="rgb(212,144,45)" rx="2" ry="2" />
<text  x="963.95" y="2015.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="152.8" y="1893" width="0.4" height="15.0" fill="rgb(214,156,13)" rx="2" ry="2" />
<text  x="155.83" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="857.9" y="1973" width="0.3" height="15.0" fill="rgb(251,99,15)" rx="2" ry="2" />
<text  x="860.85" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (34 samples, 0.57%)</title><rect x="783.4" y="1541" width="6.7" height="15.0" fill="rgb(254,56,15)" rx="2" ry="2" />
<text  x="786.36" y="1551.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="298.8" y="1477" width="0.4" height="15.0" fill="rgb(224,150,52)" rx="2" ry="2" />
<text  x="301.84" y="1487.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="171.7" y="1957" width="0.4" height="15.0" fill="rgb(247,58,2)" rx="2" ry="2" />
<text  x="174.70" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1012.2" y="1813" width="0.2" height="15.0" fill="rgb(253,181,19)" rx="2" ry="2" />
<text  x="1015.21" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="62.0" y="1765" width="0.2" height="15.0" fill="rgb(218,148,7)" rx="2" ry="2" />
<text  x="65.05" y="1775.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr (1 samples, 0.02%)</title><rect x="162.2" y="1941" width="0.2" height="15.0" fill="rgb(215,179,6)" rx="2" ry="2" />
<text  x="165.17" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="174.3" y="2005" width="0.2" height="15.0" fill="rgb(254,46,2)" rx="2" ry="2" />
<text  x="177.29" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1160.8" y="1653" width="0.2" height="15.0" fill="rgb(222,151,45)" rx="2" ry="2" />
<text  x="1163.80" y="1663.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="174.3" y="1989" width="0.2" height="15.0" fill="rgb(208,2,4)" rx="2" ry="2" />
<text  x="177.29" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="571.0" y="1765" width="0.2" height="15.0" fill="rgb(230,164,21)" rx="2" ry="2" />
<text  x="574.00" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="178.9" y="1957" width="0.7" height="15.0" fill="rgb(208,224,6)" rx="2" ry="2" />
<text  x="181.86" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="763.5" y="1669" width="0.2" height="15.0" fill="rgb(232,23,45)" rx="2" ry="2" />
<text  x="766.49" y="1679.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="460.5" y="1941" width="0.2" height="15.0" fill="rgb(207,171,45)" rx="2" ry="2" />
<text  x="463.55" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="118.1" y="53" width="0.2" height="15.0" fill="rgb(242,18,39)" rx="2" ry="2" />
<text  x="121.07" y="63.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="572.4" y="2005" width="0.2" height="15.0" fill="rgb(254,126,54)" rx="2" ry="2" />
<text  x="575.39" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="271.2" y="1861" width="0.2" height="15.0" fill="rgb(246,48,7)" rx="2" ry="2" />
<text  x="274.23" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="529.5" y="1989" width="0.4" height="15.0" fill="rgb(237,110,22)" rx="2" ry="2" />
<text  x="532.48" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.8" y="1685" width="18.0" height="15.0" fill="rgb(254,21,7)" rx="2" ry="2" />
<text  x="107.76" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="902.5" y="1973" width="0.2" height="15.0" fill="rgb(223,216,51)" rx="2" ry="2" />
<text  x="905.55" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="22.9" y="1861" width="0.2" height="15.0" fill="rgb(217,62,3)" rx="2" ry="2" />
<text  x="25.91" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="697.5" y="1909" width="0.2" height="15.0" fill="rgb(215,156,36)" rx="2" ry="2" />
<text  x="700.54" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="878.1" y="1941" width="0.4" height="15.0" fill="rgb(254,101,8)" rx="2" ry="2" />
<text  x="881.11" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="252.8" y="1957" width="0.2" height="15.0" fill="rgb(236,64,41)" rx="2" ry="2" />
<text  x="255.75" y="1967.5" ></text>
</g>
<g >
<title>call_rcu_sched (6 samples, 0.10%)</title><rect x="471.3" y="1957" width="1.2" height="15.0" fill="rgb(252,216,31)" rx="2" ry="2" />
<text  x="474.27" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="317.3" y="1637" width="0.2" height="15.0" fill="rgb(231,206,19)" rx="2" ry="2" />
<text  x="320.32" y="1647.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="171.7" y="1749" width="0.2" height="15.0" fill="rgb(215,20,3)" rx="2" ry="2" />
<text  x="174.70" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="691.2" y="1813" width="0.2" height="15.0" fill="rgb(214,180,38)" rx="2" ry="2" />
<text  x="694.18" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="896.2" y="1829" width="0.2" height="15.0" fill="rgb(217,223,23)" rx="2" ry="2" />
<text  x="899.19" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="895.6" y="1893" width="0.2" height="15.0" fill="rgb(217,225,39)" rx="2" ry="2" />
<text  x="898.60" y="1903.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="671.3" y="1861" width="0.2" height="15.0" fill="rgb(239,0,9)" rx="2" ry="2" />
<text  x="674.32" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="327.1" y="1701" width="0.1" height="15.0" fill="rgb(246,117,24)" rx="2" ry="2" />
<text  x="330.05" y="1711.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (5 samples, 0.08%)</title><rect x="738.9" y="1701" width="1.0" height="15.0" fill="rgb(212,225,33)" rx="2" ry="2" />
<text  x="741.86" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="60.9" y="1893" width="0.6" height="15.0" fill="rgb(208,170,3)" rx="2" ry="2" />
<text  x="63.86" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="87.9" y="1973" width="0.4" height="15.0" fill="rgb(244,23,4)" rx="2" ry="2" />
<text  x="90.87" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="130.8" y="1925" width="0.4" height="15.0" fill="rgb(213,151,32)" rx="2" ry="2" />
<text  x="133.78" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="349.1" y="1861" width="0.4" height="15.0" fill="rgb(234,31,50)" rx="2" ry="2" />
<text  x="352.10" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="171.7" y="1797" width="0.4" height="15.0" fill="rgb(226,132,50)" rx="2" ry="2" />
<text  x="174.70" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="279.6" y="1813" width="0.2" height="15.0" fill="rgb(239,102,18)" rx="2" ry="2" />
<text  x="282.57" y="1823.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1105.2" y="1605" width="0.2" height="15.0" fill="rgb(246,75,9)" rx="2" ry="2" />
<text  x="1108.18" y="1615.5" ></text>
</g>
<g >
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="293.1" y="1797" width="0.6" height="15.0" fill="rgb(239,187,54)" rx="2" ry="2" />
<text  x="296.08" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1128.8" y="1877" width="0.4" height="15.0" fill="rgb(234,173,48)" rx="2" ry="2" />
<text  x="1131.81" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="115.3" y="37" width="0.2" height="15.0" fill="rgb(207,81,40)" rx="2" ry="2" />
<text  x="118.29" y="47.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="270.0" y="1765" width="0.2" height="15.0" fill="rgb(224,147,32)" rx="2" ry="2" />
<text  x="273.04" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="514.8" y="1797" width="0.2" height="15.0" fill="rgb(240,179,10)" rx="2" ry="2" />
<text  x="517.78" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1102.8" y="1685" width="0.2" height="15.0" fill="rgb(218,118,48)" rx="2" ry="2" />
<text  x="1105.79" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="791.9" y="1477" width="0.2" height="15.0" fill="rgb(229,86,52)" rx="2" ry="2" />
<text  x="794.90" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="112.5" y="37" width="0.2" height="15.0" fill="rgb(220,189,11)" rx="2" ry="2" />
<text  x="115.51" y="47.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 1.06%)</title><rect x="105.8" y="85" width="12.5" height="15.0" fill="rgb(233,174,5)" rx="2" ry="2" />
<text  x="108.75" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="412.9" y="1925" width="0.4" height="15.0" fill="rgb(230,8,44)" rx="2" ry="2" />
<text  x="415.87" y="1935.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="887.8" y="1477" width="0.2" height="15.0" fill="rgb(234,149,54)" rx="2" ry="2" />
<text  x="890.85" y="1487.5" ></text>
</g>
<g >
<title>sys_mknod (1 samples, 0.02%)</title><rect x="12.4" y="2005" width="0.2" height="15.0" fill="rgb(246,115,1)" rx="2" ry="2" />
<text  x="15.38" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="50.3" y="1893" width="0.8" height="15.0" fill="rgb(252,189,31)" rx="2" ry="2" />
<text  x="53.33" y="1903.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="65.2" y="1973" width="0.2" height="15.0" fill="rgb(236,170,49)" rx="2" ry="2" />
<text  x="68.23" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="574.2" y="1845" width="0.2" height="15.0" fill="rgb(233,229,17)" rx="2" ry="2" />
<text  x="577.18" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="63.0" y="1925" width="0.2" height="15.0" fill="rgb(247,25,21)" rx="2" ry="2" />
<text  x="66.04" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="672.5" y="1509" width="0.2" height="15.0" fill="rgb(244,53,53)" rx="2" ry="2" />
<text  x="675.51" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="68.6" y="1861" width="0.2" height="15.0" fill="rgb(250,67,5)" rx="2" ry="2" />
<text  x="71.60" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="892.4" y="1877" width="0.2" height="15.0" fill="rgb(250,28,18)" rx="2" ry="2" />
<text  x="895.42" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1059.9" y="1717" width="0.2" height="15.0" fill="rgb(228,77,27)" rx="2" ry="2" />
<text  x="1062.88" y="1727.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="299.2" y="1429" width="0.2" height="15.0" fill="rgb(249,4,26)" rx="2" ry="2" />
<text  x="302.24" y="1439.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (1 samples, 0.02%)</title><rect x="919.6" y="2005" width="0.2" height="15.0" fill="rgb(214,47,2)" rx="2" ry="2" />
<text  x="922.63" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="748.8" y="1653" width="0.2" height="15.0" fill="rgb(241,86,25)" rx="2" ry="2" />
<text  x="751.79" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="894.6" y="1909" width="0.2" height="15.0" fill="rgb(248,24,28)" rx="2" ry="2" />
<text  x="897.60" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="884.7" y="1861" width="0.2" height="15.0" fill="rgb(219,26,19)" rx="2" ry="2" />
<text  x="887.67" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (4 samples, 0.07%)</title><rect x="577.2" y="2005" width="0.7" height="15.0" fill="rgb(241,3,41)" rx="2" ry="2" />
<text  x="580.15" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="405.7" y="1877" width="0.4" height="15.0" fill="rgb(223,160,51)" rx="2" ry="2" />
<text  x="408.72" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="902.2" y="2005" width="0.2" height="15.0" fill="rgb(234,43,19)" rx="2" ry="2" />
<text  x="905.15" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="225.3" y="1845" width="0.2" height="15.0" fill="rgb(217,148,6)" rx="2" ry="2" />
<text  x="228.34" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1027.3" y="1941" width="0.4" height="15.0" fill="rgb(249,88,4)" rx="2" ry="2" />
<text  x="1030.30" y="1951.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (3 samples, 0.05%)</title><rect x="171.1" y="1989" width="0.6" height="15.0" fill="rgb(213,6,24)" rx="2" ry="2" />
<text  x="174.11" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (73 samples, 1.23%)</title><rect x="777.2" y="1557" width="14.5" height="15.0" fill="rgb(222,211,43)" rx="2" ry="2" />
<text  x="780.20" y="1567.5" ></text>
</g>
<g >
<title>inet_recvmsg (280 samples, 4.71%)</title><rect x="1063.7" y="1957" width="55.6" height="15.0" fill="rgb(235,15,8)" rx="2" ry="2" />
<text  x="1066.66" y="1967.5" >inet_..</text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="583.3" y="1957" width="0.2" height="15.0" fill="rgb(234,134,11)" rx="2" ry="2" />
<text  x="586.31" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="556.7" y="1685" width="0.2" height="15.0" fill="rgb(240,95,21)" rx="2" ry="2" />
<text  x="559.69" y="1695.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="865.6" y="1941" width="0.2" height="15.0" fill="rgb(208,171,47)" rx="2" ry="2" />
<text  x="868.60" y="1951.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="231.1" y="1893" width="0.2" height="15.0" fill="rgb(247,131,19)" rx="2" ry="2" />
<text  x="234.10" y="1903.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1039.2" y="2021" width="0.2" height="15.0" fill="rgb(233,160,32)" rx="2" ry="2" />
<text  x="1042.22" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="298.6" y="1525" width="0.8" height="15.0" fill="rgb(207,120,20)" rx="2" ry="2" />
<text  x="301.64" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="70.6" y="1781" width="0.2" height="15.0" fill="rgb(244,145,8)" rx="2" ry="2" />
<text  x="73.59" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="226.9" y="1813" width="0.6" height="15.0" fill="rgb(219,43,28)" rx="2" ry="2" />
<text  x="229.93" y="1823.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1102.8" y="1557" width="0.2" height="15.0" fill="rgb(206,75,12)" rx="2" ry="2" />
<text  x="1105.79" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="513.4" y="1781" width="0.2" height="15.0" fill="rgb(228,103,54)" rx="2" ry="2" />
<text  x="516.39" y="1791.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1138.7" y="2053" width="0.2" height="15.0" fill="rgb(210,93,14)" rx="2" ry="2" />
<text  x="1141.75" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (3 samples, 0.05%)</title><rect x="1150.3" y="2053" width="0.6" height="15.0" fill="rgb(243,69,47)" rx="2" ry="2" />
<text  x="1153.27" y="2063.5" ></text>
</g>
<g >
<title>__libc_fcntl (55 samples, 0.93%)</title><rect x="557.3" y="1989" width="10.9" height="15.0" fill="rgb(212,90,13)" rx="2" ry="2" />
<text  x="560.29" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (132 samples, 2.22%)</title><rect x="39.8" y="1989" width="26.2" height="15.0" fill="rgb(243,59,16)" rx="2" ry="2" />
<text  x="42.80" y="1999.5" >f..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="22.9" y="1925" width="0.2" height="15.0" fill="rgb(209,57,24)" rx="2" ry="2" />
<text  x="25.91" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1004.7" y="1797" width="0.2" height="15.0" fill="rgb(248,50,3)" rx="2" ry="2" />
<text  x="1007.66" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="792.7" y="1557" width="0.2" height="15.0" fill="rgb(235,148,0)" rx="2" ry="2" />
<text  x="795.69" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="386.2" y="1749" width="0.2" height="15.0" fill="rgb(222,40,40)" rx="2" ry="2" />
<text  x="389.25" y="1759.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="148.1" y="1861" width="0.2" height="15.0" fill="rgb(235,173,36)" rx="2" ry="2" />
<text  x="151.06" y="1871.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.17%)</title><rect x="12.6" y="1925" width="2.0" height="15.0" fill="rgb(225,1,34)" rx="2" ry="2" />
<text  x="15.58" y="1935.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (4 samples, 0.07%)</title><rect x="807.8" y="1685" width="0.8" height="15.0" fill="rgb(205,11,50)" rx="2" ry="2" />
<text  x="810.79" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="583.5" y="1941" width="0.2" height="15.0" fill="rgb(252,88,41)" rx="2" ry="2" />
<text  x="586.51" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="104.4" y="1893" width="20.8" height="15.0" fill="rgb(239,27,38)" rx="2" ry="2" />
<text  x="107.36" y="1903.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (21 samples, 0.35%)</title><rect x="971.9" y="2037" width="4.2" height="15.0" fill="rgb(207,122,34)" rx="2" ry="2" />
<text  x="974.88" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="50.9" y="1877" width="0.2" height="15.0" fill="rgb(232,186,8)" rx="2" ry="2" />
<text  x="53.92" y="1887.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="789.7" y="1493" width="0.4" height="15.0" fill="rgb(250,226,46)" rx="2" ry="2" />
<text  x="792.71" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1176.7" y="1973" width="0.2" height="15.0" fill="rgb(222,69,6)" rx="2" ry="2" />
<text  x="1179.69" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.79%)</title><rect x="910.9" y="2021" width="9.3" height="15.0" fill="rgb(217,223,14)" rx="2" ry="2" />
<text  x="913.89" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (13 samples, 0.22%)</title><rect x="25.1" y="1989" width="2.6" height="15.0" fill="rgb(252,2,5)" rx="2" ry="2" />
<text  x="28.10" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="337.4" y="1605" width="0.2" height="15.0" fill="rgb(215,61,40)" rx="2" ry="2" />
<text  x="340.38" y="1615.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="775.2" y="1557" width="0.2" height="15.0" fill="rgb(231,143,17)" rx="2" ry="2" />
<text  x="778.21" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="262.1" y="1877" width="0.4" height="15.0" fill="rgb(230,101,34)" rx="2" ry="2" />
<text  x="265.09" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="235.7" y="1685" width="0.2" height="15.0" fill="rgb(212,55,21)" rx="2" ry="2" />
<text  x="238.67" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="863.8" y="1989" width="0.2" height="15.0" fill="rgb(236,65,37)" rx="2" ry="2" />
<text  x="866.81" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (4 samples, 0.07%)</title><rect x="103.4" y="2037" width="0.8" height="15.0" fill="rgb(243,184,22)" rx="2" ry="2" />
<text  x="106.37" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (30 samples, 0.51%)</title><rect x="846.9" y="1941" width="6.0" height="15.0" fill="rgb(212,159,28)" rx="2" ry="2" />
<text  x="849.93" y="1951.5" ></text>
</g>
<g >
<title>sk_reset_timer (37 samples, 0.62%)</title><rect x="330.4" y="1781" width="7.4" height="15.0" fill="rgb(226,7,3)" rx="2" ry="2" />
<text  x="333.43" y="1791.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.6" y="1589" width="0.2" height="15.0" fill="rgb(228,147,26)" rx="2" ry="2" />
<text  x="124.64" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="62.6" y="1829" width="0.2" height="15.0" fill="rgb(206,119,47)" rx="2" ry="2" />
<text  x="65.64" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="271.2" y="1653" width="0.2" height="15.0" fill="rgb(218,176,5)" rx="2" ry="2" />
<text  x="274.23" y="1663.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="901.6" y="1685" width="0.2" height="15.0" fill="rgb(229,158,12)" rx="2" ry="2" />
<text  x="904.56" y="1695.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="1127.2" y="1973" width="0.4" height="15.0" fill="rgb(215,60,13)" rx="2" ry="2" />
<text  x="1130.23" y="1983.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="808.4" y="1653" width="0.2" height="15.0" fill="rgb(221,10,6)" rx="2" ry="2" />
<text  x="811.39" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="173.3" y="1973" width="0.6" height="15.0" fill="rgb(210,186,40)" rx="2" ry="2" />
<text  x="176.29" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="160.2" y="1653" width="0.2" height="15.0" fill="rgb(249,137,33)" rx="2" ry="2" />
<text  x="163.18" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="119.1" y="37" width="0.2" height="15.0" fill="rgb(235,1,47)" rx="2" ry="2" />
<text  x="122.06" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1083.1" y="1845" width="0.2" height="15.0" fill="rgb(218,41,0)" rx="2" ry="2" />
<text  x="1086.12" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (44 samples, 0.74%)</title><rect x="1108.8" y="1669" width="8.7" height="15.0" fill="rgb(241,92,20)" rx="2" ry="2" />
<text  x="1111.75" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="905.9" y="1989" width="1.2" height="15.0" fill="rgb(208,44,53)" rx="2" ry="2" />
<text  x="908.93" y="1999.5" ></text>
</g>
<g >
<title>fput (10 samples, 0.17%)</title><rect x="826.9" y="1813" width="1.9" height="15.0" fill="rgb(208,146,27)" rx="2" ry="2" />
<text  x="829.86" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(238,3,50)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="118.5" y="37" width="0.2" height="15.0" fill="rgb(232,41,51)" rx="2" ry="2" />
<text  x="121.46" y="47.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="82.1" y="1877" width="0.2" height="15.0" fill="rgb(210,127,37)" rx="2" ry="2" />
<text  x="85.11" y="1887.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="791.1" y="1493" width="0.4" height="15.0" fill="rgb(208,98,14)" rx="2" ry="2" />
<text  x="794.10" y="1503.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="862.4" y="1685" width="0.2" height="15.0" fill="rgb(237,79,37)" rx="2" ry="2" />
<text  x="865.42" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (1 samples, 0.02%)</title><rect x="99.6" y="2037" width="0.2" height="15.0" fill="rgb(231,73,5)" rx="2" ry="2" />
<text  x="102.59" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="337.4" y="1717" width="0.2" height="15.0" fill="rgb(222,104,54)" rx="2" ry="2" />
<text  x="340.38" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="600.6" y="1829" width="0.2" height="15.0" fill="rgb(228,185,51)" rx="2" ry="2" />
<text  x="603.60" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (7 samples, 0.12%)</title><rect x="71.4" y="1941" width="1.4" height="15.0" fill="rgb(234,154,15)" rx="2" ry="2" />
<text  x="74.38" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="571.8" y="1925" width="0.2" height="15.0" fill="rgb(217,203,6)" rx="2" ry="2" />
<text  x="574.79" y="1935.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="874.3" y="1925" width="1.0" height="15.0" fill="rgb(220,40,54)" rx="2" ry="2" />
<text  x="877.34" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1139.9" y="1893" width="0.2" height="15.0" fill="rgb(241,71,36)" rx="2" ry="2" />
<text  x="1142.94" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="848.3" y="1909" width="1.8" height="15.0" fill="rgb(215,164,9)" rx="2" ry="2" />
<text  x="851.32" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1139.9" y="1781" width="0.2" height="15.0" fill="rgb(233,215,32)" rx="2" ry="2" />
<text  x="1142.94" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (113 samples, 1.90%)</title><rect x="140.9" y="1989" width="22.5" height="15.0" fill="rgb(210,221,39)" rx="2" ry="2" />
<text  x="143.91" y="1999.5" >s..</text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="1059.5" y="1877" width="0.2" height="15.0" fill="rgb(210,67,37)" rx="2" ry="2" />
<text  x="1062.48" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="892.2" y="1877" width="0.2" height="15.0" fill="rgb(233,76,32)" rx="2" ry="2" />
<text  x="895.22" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="65.4" y="1925" width="0.4" height="15.0" fill="rgb(244,116,2)" rx="2" ry="2" />
<text  x="68.42" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="831.0" y="1893" width="2.8" height="15.0" fill="rgb(231,228,22)" rx="2" ry="2" />
<text  x="834.03" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.1" y="1957" width="0.2" height="15.0" fill="rgb(216,49,32)" rx="2" ry="2" />
<text  x="144.11" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="356.5" y="1797" width="0.1" height="15.0" fill="rgb(225,101,47)" rx="2" ry="2" />
<text  x="359.45" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="773.2" y="1525" width="0.4" height="15.0" fill="rgb(248,156,39)" rx="2" ry="2" />
<text  x="776.23" y="1535.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="673.9" y="1877" width="0.4" height="15.0" fill="rgb(228,24,10)" rx="2" ry="2" />
<text  x="676.90" y="1887.5" ></text>
</g>
<g >
<title>sys_getsockname (2 samples, 0.03%)</title><rect x="600.0" y="1909" width="0.4" height="15.0" fill="rgb(234,135,7)" rx="2" ry="2" />
<text  x="603.00" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="348.7" y="1973" width="0.8" height="15.0" fill="rgb(239,137,0)" rx="2" ry="2" />
<text  x="351.70" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="888.2" y="1765" width="0.2" height="15.0" fill="rgb(241,195,1)" rx="2" ry="2" />
<text  x="891.25" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="388.0" y="1925" width="0.2" height="15.0" fill="rgb(216,122,30)" rx="2" ry="2" />
<text  x="391.04" y="1935.5" ></text>
</g>
<g >
<title>sock_recvmsg (295 samples, 4.97%)</title><rect x="1063.1" y="1973" width="58.6" height="15.0" fill="rgb(230,49,23)" rx="2" ry="2" />
<text  x="1066.06" y="1983.5" >sock_r..</text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="417.0" y="1893" width="0.4" height="15.0" fill="rgb(239,60,34)" rx="2" ry="2" />
<text  x="420.04" y="1903.5" ></text>
</g>
<g >
<title>tcp_current_mss (11 samples, 0.19%)</title><rect x="341.0" y="1861" width="2.1" height="15.0" fill="rgb(231,129,29)" rx="2" ry="2" />
<text  x="343.96" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="535.2" y="1893" width="0.8" height="15.0" fill="rgb(208,86,25)" rx="2" ry="2" />
<text  x="538.24" y="1903.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="194.0" y="2021" width="0.7" height="15.0" fill="rgb(246,184,38)" rx="2" ry="2" />
<text  x="196.95" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="63.0" y="1909" width="0.2" height="15.0" fill="rgb(223,36,35)" rx="2" ry="2" />
<text  x="66.04" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="321.9" y="1797" width="0.4" height="15.0" fill="rgb(223,92,42)" rx="2" ry="2" />
<text  x="324.89" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="887.8" y="1669" width="0.2" height="15.0" fill="rgb(243,85,41)" rx="2" ry="2" />
<text  x="890.85" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="672.5" y="1749" width="0.2" height="15.0" fill="rgb(232,141,23)" rx="2" ry="2" />
<text  x="675.51" y="1759.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="888.2" y="1797" width="0.2" height="15.0" fill="rgb(207,87,29)" rx="2" ry="2" />
<text  x="891.25" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="164.6" y="1989" width="0.3" height="15.0" fill="rgb(238,6,24)" rx="2" ry="2" />
<text  x="167.55" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="337.4" y="1749" width="0.2" height="15.0" fill="rgb(211,210,13)" rx="2" ry="2" />
<text  x="340.38" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="225.5" y="1845" width="0.2" height="15.0" fill="rgb(229,200,50)" rx="2" ry="2" />
<text  x="228.54" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="480.4" y="1877" width="0.2" height="15.0" fill="rgb(250,142,49)" rx="2" ry="2" />
<text  x="483.41" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="852.1" y="1749" width="0.2" height="15.0" fill="rgb(251,222,20)" rx="2" ry="2" />
<text  x="855.09" y="1759.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="75.2" y="1925" width="0.2" height="15.0" fill="rgb(217,6,51)" rx="2" ry="2" />
<text  x="78.16" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (10 samples, 0.17%)</title><rect x="640.7" y="1989" width="2.0" height="15.0" fill="rgb(247,54,18)" rx="2" ry="2" />
<text  x="643.72" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::ControllerCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="161.6" y="1941" width="0.2" height="15.0" fill="rgb(249,89,5)" rx="2" ry="2" />
<text  x="164.57" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1004.7" y="1941" width="0.2" height="15.0" fill="rgb(238,148,1)" rx="2" ry="2" />
<text  x="1007.66" y="1951.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (6 samples, 0.10%)</title><rect x="969.9" y="2005" width="1.2" height="15.0" fill="rgb(231,156,1)" rx="2" ry="2" />
<text  x="972.89" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="226.7" y="1829" width="0.8" height="15.0" fill="rgb(225,18,45)" rx="2" ry="2" />
<text  x="229.73" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="656.4" y="2005" width="0.6" height="15.0" fill="rgb(231,87,1)" rx="2" ry="2" />
<text  x="659.42" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="969.1" y="1941" width="0.2" height="15.0" fill="rgb(249,128,27)" rx="2" ry="2" />
<text  x="972.10" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="141.3" y="1909" width="0.2" height="15.0" fill="rgb(238,143,38)" rx="2" ry="2" />
<text  x="144.31" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="53.3" y="1941" width="0.2" height="15.0" fill="rgb(233,211,9)" rx="2" ry="2" />
<text  x="56.31" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="575.6" y="1957" width="0.6" height="15.0" fill="rgb(219,192,7)" rx="2" ry="2" />
<text  x="578.57" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="80.1" y="1941" width="0.2" height="15.0" fill="rgb(233,25,26)" rx="2" ry="2" />
<text  x="83.12" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="471.1" y="1957" width="0.2" height="15.0" fill="rgb(224,198,32)" rx="2" ry="2" />
<text  x="474.07" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="281.2" y="1733" width="0.2" height="15.0" fill="rgb(212,16,35)" rx="2" ry="2" />
<text  x="284.16" y="1743.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="903.3" y="2005" width="0.4" height="15.0" fill="rgb(212,52,38)" rx="2" ry="2" />
<text  x="906.34" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.0" y="1829" width="0.2" height="15.0" fill="rgb(213,48,40)" rx="2" ry="2" />
<text  x="65.05" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (8 samples, 0.13%)</title><rect x="705.9" y="1957" width="1.6" height="15.0" fill="rgb(208,105,28)" rx="2" ry="2" />
<text  x="708.88" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="866.4" y="1909" width="0.2" height="15.0" fill="rgb(236,202,20)" rx="2" ry="2" />
<text  x="869.39" y="1919.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1174.7" y="1957" width="0.2" height="15.0" fill="rgb(235,178,53)" rx="2" ry="2" />
<text  x="1177.70" y="1967.5" ></text>
</g>
<g >
<title>get_empty_filp (34 samples, 0.57%)</title><rect x="403.7" y="1925" width="6.8" height="15.0" fill="rgb(252,192,17)" rx="2" ry="2" />
<text  x="406.73" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="409.9" y="1877" width="0.2" height="15.0" fill="rgb(208,73,48)" rx="2" ry="2" />
<text  x="412.89" y="1887.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="1141.9" y="1957" width="0.2" height="15.0" fill="rgb(245,123,21)" rx="2" ry="2" />
<text  x="1144.93" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="969.1" y="1925" width="0.2" height="15.0" fill="rgb(221,188,16)" rx="2" ry="2" />
<text  x="972.10" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="311.4" y="1637" width="0.2" height="15.0" fill="rgb(218,85,42)" rx="2" ry="2" />
<text  x="314.36" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="333.0" y="1749" width="0.4" height="15.0" fill="rgb(217,104,6)" rx="2" ry="2" />
<text  x="336.01" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="105.0" y="1637" width="17.2" height="15.0" fill="rgb(222,63,38)" rx="2" ry="2" />
<text  x="107.96" y="1647.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="194.9" y="2021" width="0.2" height="15.0" fill="rgb(236,129,24)" rx="2" ry="2" />
<text  x="197.95" y="2031.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="196.9" y="2037" width="0.4" height="15.0" fill="rgb(251,159,31)" rx="2" ry="2" />
<text  x="199.93" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (304 samples, 5.12%)</title><rect x="35.4" y="2005" width="60.4" height="15.0" fill="rgb(220,102,11)" rx="2" ry="2" />
<text  x="38.43" y="2015.5" >folly:..</text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="741" width="14.3" height="15.0" fill="rgb(233,201,31)" rx="2" ry="2" />
<text  x="108.75" y="751.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="170.7" y="1973" width="0.2" height="15.0" fill="rgb(234,120,31)" rx="2" ry="2" />
<text  x="173.71" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="179.6" y="1989" width="0.4" height="15.0" fill="rgb(249,140,32)" rx="2" ry="2" />
<text  x="182.65" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="410.1" y="1877" width="0.2" height="15.0" fill="rgb(209,130,51)" rx="2" ry="2" />
<text  x="413.09" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="955.4" y="2005" width="0.2" height="15.0" fill="rgb(237,6,0)" rx="2" ry="2" />
<text  x="958.39" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (94 samples, 1.58%)</title><rect x="926.8" y="2005" width="18.7" height="15.0" fill="rgb(209,190,13)" rx="2" ry="2" />
<text  x="929.78" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="569.6" y="1925" width="0.2" height="15.0" fill="rgb(228,153,2)" rx="2" ry="2" />
<text  x="572.61" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="843.9" y="1893" width="0.6" height="15.0" fill="rgb(215,37,46)" rx="2" ry="2" />
<text  x="846.95" y="1903.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="392.8" y="1909" width="0.2" height="15.0" fill="rgb(217,81,38)" rx="2" ry="2" />
<text  x="395.80" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="1145.1" y="2053" width="0.4" height="15.0" fill="rgb(210,101,38)" rx="2" ry="2" />
<text  x="1148.10" y="2063.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="157.8" y="1797" width="0.2" height="15.0" fill="rgb(230,204,53)" rx="2" ry="2" />
<text  x="160.80" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (6 samples, 0.10%)</title><rect x="997.1" y="1893" width="1.2" height="15.0" fill="rgb(213,109,50)" rx="2" ry="2" />
<text  x="1000.11" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="177.1" y="1957" width="0.4" height="15.0" fill="rgb(238,166,11)" rx="2" ry="2" />
<text  x="180.07" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="706.7" y="1813" width="0.6" height="15.0" fill="rgb(218,202,34)" rx="2" ry="2" />
<text  x="709.68" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="60.1" y="1733" width="0.2" height="15.0" fill="rgb(217,12,34)" rx="2" ry="2" />
<text  x="63.06" y="1743.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="92.2" y="1941" width="0.2" height="15.0" fill="rgb(254,121,40)" rx="2" ry="2" />
<text  x="95.24" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.5" y="1941" width="0.2" height="15.0" fill="rgb(206,39,12)" rx="2" ry="2" />
<text  x="146.49" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="65.4" y="1893" width="0.4" height="15.0" fill="rgb(232,29,23)" rx="2" ry="2" />
<text  x="68.42" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="830.6" y="1893" width="0.2" height="15.0" fill="rgb(250,1,15)" rx="2" ry="2" />
<text  x="833.64" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="75.2" y="1957" width="0.2" height="15.0" fill="rgb(243,16,52)" rx="2" ry="2" />
<text  x="78.16" y="1967.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="540.8" y="2005" width="0.4" height="15.0" fill="rgb(248,3,48)" rx="2" ry="2" />
<text  x="543.80" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="749.0" y="1733" width="0.2" height="15.0" fill="rgb(211,78,7)" rx="2" ry="2" />
<text  x="751.99" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="514.8" y="1637" width="0.2" height="15.0" fill="rgb(219,82,29)" rx="2" ry="2" />
<text  x="517.78" y="1647.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="303.2" y="1685" width="0.2" height="15.0" fill="rgb(212,1,16)" rx="2" ry="2" />
<text  x="306.21" y="1695.5" ></text>
</g>
<g >
<title>__dentry_kill (63 samples, 1.06%)</title><rect x="727.7" y="1765" width="12.5" height="15.0" fill="rgb(253,4,12)" rx="2" ry="2" />
<text  x="730.73" y="1775.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="101.0" y="2005" width="0.6" height="15.0" fill="rgb(217,208,4)" rx="2" ry="2" />
<text  x="103.98" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="208.1" y="1845" width="0.2" height="15.0" fill="rgb(242,196,27)" rx="2" ry="2" />
<text  x="211.06" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="117.1" y="53" width="0.4" height="15.0" fill="rgb(253,151,31)" rx="2" ry="2" />
<text  x="120.07" y="63.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="700.3" y="1989" width="0.2" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="703.32" y="1999.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="483.0" y="1717" width="0.2" height="15.0" fill="rgb(213,185,1)" rx="2" ry="2" />
<text  x="485.99" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="158.6" y="1861" width="0.2" height="15.0" fill="rgb(242,62,19)" rx="2" ry="2" />
<text  x="161.59" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="749.4" y="1717" width="0.4" height="15.0" fill="rgb(205,72,43)" rx="2" ry="2" />
<text  x="752.39" y="1727.5" ></text>
</g>
<g >
<title>kmem_cache_free (16 samples, 0.27%)</title><rect x="474.8" y="1941" width="3.2" height="15.0" fill="rgb(220,134,10)" rx="2" ry="2" />
<text  x="477.85" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="222.6" y="1589" width="0.2" height="15.0" fill="rgb(251,185,29)" rx="2" ry="2" />
<text  x="225.56" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="955.6" y="2005" width="0.2" height="15.0" fill="rgb(213,215,21)" rx="2" ry="2" />
<text  x="958.59" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1059.9" y="1653" width="0.2" height="15.0" fill="rgb(216,70,14)" rx="2" ry="2" />
<text  x="1062.88" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1033.5" y="1845" width="0.2" height="15.0" fill="rgb(219,109,38)" rx="2" ry="2" />
<text  x="1036.46" y="1855.5" ></text>
</g>
<g >
<title>event_add_nolock_ (4 samples, 0.07%)</title><rect x="125.6" y="1925" width="0.8" height="15.0" fill="rgb(219,102,25)" rx="2" ry="2" />
<text  x="128.62" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="906.1" y="1957" width="0.8" height="15.0" fill="rgb(252,75,47)" rx="2" ry="2" />
<text  x="909.12" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="904.1" y="2005" width="0.4" height="15.0" fill="rgb(226,140,35)" rx="2" ry="2" />
<text  x="907.14" y="2015.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="15.0" y="1829" width="0.8" height="15.0" fill="rgb(249,131,5)" rx="2" ry="2" />
<text  x="17.97" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="637.7" y="1909" width="0.4" height="15.0" fill="rgb(214,64,17)" rx="2" ry="2" />
<text  x="640.74" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="356.5" y="1813" width="0.1" height="15.0" fill="rgb(207,12,28)" rx="2" ry="2" />
<text  x="359.45" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="231.3" y="1893" width="0.4" height="15.0" fill="rgb(226,54,19)" rx="2" ry="2" />
<text  x="234.30" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="574.2" y="1573" width="0.2" height="15.0" fill="rgb(211,200,23)" rx="2" ry="2" />
<text  x="577.18" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="536.2" y="1781" width="0.2" height="15.0" fill="rgb(219,55,1)" rx="2" ry="2" />
<text  x="539.23" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="627.6" y="2005" width="0.2" height="15.0" fill="rgb(237,64,24)" rx="2" ry="2" />
<text  x="630.61" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="100.8" y="1845" width="0.2" height="15.0" fill="rgb(242,179,28)" rx="2" ry="2" />
<text  x="103.78" y="1855.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="901.4" y="1957" width="0.2" height="15.0" fill="rgb(236,132,21)" rx="2" ry="2" />
<text  x="904.36" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.4" y="1861" width="20.2" height="15.0" fill="rgb(238,180,0)" rx="2" ry="2" />
<text  x="107.36" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="412.7" y="1797" width="0.2" height="15.0" fill="rgb(210,71,47)" rx="2" ry="2" />
<text  x="415.67" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (113 samples, 1.90%)</title><rect x="583.5" y="1989" width="22.5" height="15.0" fill="rgb(240,195,48)" rx="2" ry="2" />
<text  x="586.51" y="1999.5" >f..</text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="65.4" y="1909" width="0.4" height="15.0" fill="rgb(212,80,49)" rx="2" ry="2" />
<text  x="68.42" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="218.4" y="1877" width="0.8" height="15.0" fill="rgb(223,88,54)" rx="2" ry="2" />
<text  x="221.39" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="252.8" y="1925" width="0.2" height="15.0" fill="rgb(233,208,26)" rx="2" ry="2" />
<text  x="255.75" y="1935.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="862.4" y="1637" width="0.2" height="15.0" fill="rgb(250,147,12)" rx="2" ry="2" />
<text  x="865.42" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="921.0" y="2037" width="0.2" height="15.0" fill="rgb(210,43,30)" rx="2" ry="2" />
<text  x="924.02" y="2047.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="820.5" y="1733" width="0.2" height="15.0" fill="rgb(216,221,40)" rx="2" ry="2" />
<text  x="823.51" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1182.6" y="2005" width="0.4" height="15.0" fill="rgb(225,92,23)" rx="2" ry="2" />
<text  x="1185.65" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="348.5" y="1973" width="0.2" height="15.0" fill="rgb(233,161,19)" rx="2" ry="2" />
<text  x="351.51" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="541.6" y="1957" width="1.4" height="15.0" fill="rgb(249,171,14)" rx="2" ry="2" />
<text  x="544.60" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="188.4" y="2021" width="0.2" height="15.0" fill="rgb(226,174,16)" rx="2" ry="2" />
<text  x="191.39" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="540.6" y="1957" width="0.2" height="15.0" fill="rgb(211,229,13)" rx="2" ry="2" />
<text  x="543.60" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="565.0" y="1589" width="0.2" height="15.0" fill="rgb(250,12,27)" rx="2" ry="2" />
<text  x="568.04" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20 samples, 0.34%)</title><rect x="1006.2" y="1989" width="4.0" height="15.0" fill="rgb(237,111,48)" rx="2" ry="2" />
<text  x="1009.25" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="920.6" y="2037" width="0.4" height="15.0" fill="rgb(228,207,39)" rx="2" ry="2" />
<text  x="923.63" y="2047.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="783.0" y="1381" width="0.2" height="15.0" fill="rgb(243,10,5)" rx="2" ry="2" />
<text  x="785.96" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="173.3" y="1957" width="0.4" height="15.0" fill="rgb(226,159,3)" rx="2" ry="2" />
<text  x="176.29" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="70.6" y="1845" width="0.2" height="15.0" fill="rgb(221,130,42)" rx="2" ry="2" />
<text  x="73.59" y="1855.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="125.2" y="1893" width="0.2" height="15.0" fill="rgb(240,202,25)" rx="2" ry="2" />
<text  x="128.22" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (506 samples, 8.52%)</title><rect x="724.0" y="1861" width="100.5" height="15.0" fill="rgb(219,45,7)" rx="2" ry="2" />
<text  x="726.96" y="1871.5" >exit_to_user..</text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.05%)</title><rect x="299.6" y="1509" width="0.6" height="15.0" fill="rgb(232,41,42)" rx="2" ry="2" />
<text  x="302.64" y="1519.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (25 samples, 0.42%)</title><rect x="608.3" y="1893" width="5.0" height="15.0" fill="rgb(249,229,18)" rx="2" ry="2" />
<text  x="611.34" y="1903.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="763.7" y="1669" width="0.4" height="15.0" fill="rgb(221,46,16)" rx="2" ry="2" />
<text  x="766.69" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (31 samples, 0.52%)</title><rect x="57.1" y="1957" width="6.1" height="15.0" fill="rgb(239,95,47)" rx="2" ry="2" />
<text  x="60.08" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="499.1" y="1925" width="0.2" height="15.0" fill="rgb(245,95,15)" rx="2" ry="2" />
<text  x="502.08" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="553.3" y="1957" width="0.2" height="15.0" fill="rgb(223,36,28)" rx="2" ry="2" />
<text  x="556.32" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1059.5" y="1989" width="0.2" height="15.0" fill="rgb(206,4,4)" rx="2" ry="2" />
<text  x="1062.48" y="1999.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="922.8" y="1973" width="0.2" height="15.0" fill="rgb(250,218,49)" rx="2" ry="2" />
<text  x="925.81" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="625.6" y="2037" width="0.2" height="15.0" fill="rgb(223,120,28)" rx="2" ry="2" />
<text  x="628.63" y="2047.5" ></text>
</g>
<g >
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="268.4" y="1861" width="0.4" height="15.0" fill="rgb(232,213,49)" rx="2" ry="2" />
<text  x="271.45" y="1871.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1033.5" y="1685" width="0.2" height="15.0" fill="rgb(241,20,38)" rx="2" ry="2" />
<text  x="1036.46" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="470.7" y="1957" width="0.4" height="15.0" fill="rgb(253,209,47)" rx="2" ry="2" />
<text  x="473.68" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (6 samples, 0.10%)</title><rect x="754.6" y="1685" width="1.1" height="15.0" fill="rgb(236,209,18)" rx="2" ry="2" />
<text  x="757.55" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="73.4" y="1941" width="0.2" height="15.0" fill="rgb(226,67,28)" rx="2" ry="2" />
<text  x="76.37" y="1951.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="281.2" y="1525" width="0.2" height="15.0" fill="rgb(214,12,48)" rx="2" ry="2" />
<text  x="284.16" y="1535.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="546.6" y="1973" width="0.2" height="15.0" fill="rgb(238,39,29)" rx="2" ry="2" />
<text  x="549.56" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="116.9" y="69" width="0.6" height="15.0" fill="rgb(214,169,24)" rx="2" ry="2" />
<text  x="119.88" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="388.6" y="1925" width="1.0" height="15.0" fill="rgb(254,71,4)" rx="2" ry="2" />
<text  x="391.63" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="549.9" y="1861" width="0.2" height="15.0" fill="rgb(207,160,40)" rx="2" ry="2" />
<text  x="552.94" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="604.8" y="1941" width="0.2" height="15.0" fill="rgb(241,13,29)" rx="2" ry="2" />
<text  x="607.77" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.8" y="1669" width="0.2" height="15.0" fill="rgb(221,4,28)" rx="2" ry="2" />
<text  x="125.84" y="1679.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="883.9" y="1909" width="0.2" height="15.0" fill="rgb(243,57,23)" rx="2" ry="2" />
<text  x="886.88" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="697.5" y="1765" width="0.2" height="15.0" fill="rgb(217,187,16)" rx="2" ry="2" />
<text  x="700.54" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="963.5" y="2005" width="0.2" height="15.0" fill="rgb(253,43,14)" rx="2" ry="2" />
<text  x="966.54" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (2 samples, 0.03%)</title><rect x="173.9" y="2021" width="0.4" height="15.0" fill="rgb(247,188,39)" rx="2" ry="2" />
<text  x="176.89" y="2031.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1092.7" y="1909" width="0.4" height="15.0" fill="rgb(219,100,40)" rx="2" ry="2" />
<text  x="1095.66" y="1919.5" ></text>
</g>
<g >
<title>native_iret (1 samples, 0.02%)</title><rect x="257.1" y="1925" width="0.2" height="15.0" fill="rgb(213,193,9)" rx="2" ry="2" />
<text  x="260.12" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="73.0" y="1765" width="0.2" height="15.0" fill="rgb(209,31,30)" rx="2" ry="2" />
<text  x="75.97" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="819.3" y="1701" width="0.2" height="15.0" fill="rgb(240,181,30)" rx="2" ry="2" />
<text  x="822.31" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="155.6" y="1877" width="0.4" height="15.0" fill="rgb(223,192,39)" rx="2" ry="2" />
<text  x="158.61" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="884.5" y="1877" width="0.4" height="15.0" fill="rgb(226,50,10)" rx="2" ry="2" />
<text  x="887.47" y="1887.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="750.2" y="1733" width="0.2" height="15.0" fill="rgb(205,93,3)" rx="2" ry="2" />
<text  x="753.18" y="1743.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="893.0" y="1941" width="0.2" height="15.0" fill="rgb(205,217,21)" rx="2" ry="2" />
<text  x="896.01" y="1951.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="536.2" y="1589" width="0.2" height="15.0" fill="rgb(239,148,48)" rx="2" ry="2" />
<text  x="539.23" y="1599.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="304.0" y="1685" width="0.2" height="15.0" fill="rgb(221,45,54)" rx="2" ry="2" />
<text  x="307.01" y="1695.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (3 samples, 0.05%)</title><rect x="202.5" y="2037" width="0.6" height="15.0" fill="rgb(229,26,23)" rx="2" ry="2" />
<text  x="205.49" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="145.3" y="1925" width="0.2" height="15.0" fill="rgb(247,162,53)" rx="2" ry="2" />
<text  x="148.28" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="373.7" y="1701" width="0.2" height="15.0" fill="rgb(223,15,15)" rx="2" ry="2" />
<text  x="376.73" y="1711.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1102.8" y="1605" width="0.2" height="15.0" fill="rgb(250,52,3)" rx="2" ry="2" />
<text  x="1105.79" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="628.4" y="2005" width="0.6" height="15.0" fill="rgb(237,108,21)" rx="2" ry="2" />
<text  x="631.41" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="908.5" y="2005" width="0.2" height="15.0" fill="rgb(213,186,16)" rx="2" ry="2" />
<text  x="911.51" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (13 samples, 0.22%)</title><rect x="205.9" y="2037" width="2.6" height="15.0" fill="rgb(223,65,28)" rx="2" ry="2" />
<text  x="208.87" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1125.2" y="1765" width="0.4" height="15.0" fill="rgb(247,157,47)" rx="2" ry="2" />
<text  x="1128.24" y="1775.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1127.0" y="2037" width="0.2" height="15.0" fill="rgb(244,153,20)" rx="2" ry="2" />
<text  x="1130.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.8" y="693" width="14.1" height="15.0" fill="rgb(224,208,18)" rx="2" ry="2" />
<text  x="108.75" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="750.8" y="1717" width="0.4" height="15.0" fill="rgb(254,120,39)" rx="2" ry="2" />
<text  x="753.78" y="1727.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="662.2" y="1925" width="0.2" height="15.0" fill="rgb(212,15,31)" rx="2" ry="2" />
<text  x="665.18" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.13%)</title><rect x="57.3" y="1941" width="1.6" height="15.0" fill="rgb(241,5,11)" rx="2" ry="2" />
<text  x="60.28" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="484.0" y="1893" width="0.2" height="15.0" fill="rgb(239,75,54)" rx="2" ry="2" />
<text  x="486.99" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="585.3" y="1877" width="0.2" height="15.0" fill="rgb(214,44,0)" rx="2" ry="2" />
<text  x="588.30" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (8 samples, 0.13%)</title><rect x="83.3" y="1925" width="1.6" height="15.0" fill="rgb(238,26,20)" rx="2" ry="2" />
<text  x="86.30" y="1935.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="671.7" y="1845" width="0.2" height="15.0" fill="rgb(216,120,8)" rx="2" ry="2" />
<text  x="674.71" y="1855.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="402.3" y="1861" width="0.4" height="15.0" fill="rgb(217,224,34)" rx="2" ry="2" />
<text  x="405.34" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="998.1" y="1877" width="0.2" height="15.0" fill="rgb(236,171,48)" rx="2" ry="2" />
<text  x="1001.10" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="617.7" y="2005" width="0.2" height="15.0" fill="rgb(206,111,18)" rx="2" ry="2" />
<text  x="620.68" y="2015.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="616.3" y="1845" width="0.2" height="15.0" fill="rgb(233,220,53)" rx="2" ry="2" />
<text  x="619.29" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="565.0" y="1877" width="0.2" height="15.0" fill="rgb(213,69,40)" rx="2" ry="2" />
<text  x="568.04" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="79.7" y="1925" width="0.4" height="15.0" fill="rgb(239,191,49)" rx="2" ry="2" />
<text  x="82.73" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="862.4" y="1973" width="0.2" height="15.0" fill="rgb(227,178,4)" rx="2" ry="2" />
<text  x="865.42" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="901.6" y="1797" width="0.2" height="15.0" fill="rgb(217,228,26)" rx="2" ry="2" />
<text  x="904.56" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="1001.7" y="1989" width="0.2" height="15.0" fill="rgb(224,159,25)" rx="2" ry="2" />
<text  x="1004.68" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="902.5" y="1989" width="0.2" height="15.0" fill="rgb(241,34,45)" rx="2" ry="2" />
<text  x="905.55" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="941.3" y="1941" width="0.2" height="15.0" fill="rgb(223,209,53)" rx="2" ry="2" />
<text  x="944.29" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="849.9" y="1829" width="0.2" height="15.0" fill="rgb(226,178,44)" rx="2" ry="2" />
<text  x="852.91" y="1839.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1082.9" y="1717" width="0.2" height="15.0" fill="rgb(209,187,3)" rx="2" ry="2" />
<text  x="1085.93" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="705.7" y="1957" width="0.2" height="15.0" fill="rgb(236,148,5)" rx="2" ry="2" />
<text  x="708.68" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="299.0" y="1397" width="0.2" height="15.0" fill="rgb(209,114,32)" rx="2" ry="2" />
<text  x="302.04" y="1407.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (7 samples, 0.12%)</title><rect x="649.1" y="1989" width="1.4" height="15.0" fill="rgb(217,82,19)" rx="2" ry="2" />
<text  x="652.07" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="623.8" y="1941" width="0.2" height="15.0" fill="rgb(241,108,48)" rx="2" ry="2" />
<text  x="626.84" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (6 samples, 0.10%)</title><rect x="706.1" y="1909" width="1.2" height="15.0" fill="rgb(216,48,40)" rx="2" ry="2" />
<text  x="709.08" y="1919.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="277.6" y="1781" width="0.4" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="280.59" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="1180.7" y="2021" width="0.6" height="15.0" fill="rgb(244,219,16)" rx="2" ry="2" />
<text  x="1183.66" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="60.1" y="1717" width="0.2" height="15.0" fill="rgb(230,26,3)" rx="2" ry="2" />
<text  x="63.06" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="821" width="14.3" height="15.0" fill="rgb(236,200,27)" rx="2" ry="2" />
<text  x="108.75" y="831.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="528.5" y="1925" width="0.4" height="15.0" fill="rgb(253,29,29)" rx="2" ry="2" />
<text  x="531.48" y="1935.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="180.2" y="1941" width="0.2" height="15.0" fill="rgb(243,1,50)" rx="2" ry="2" />
<text  x="183.25" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="536.2" y="1829" width="0.2" height="15.0" fill="rgb(243,81,36)" rx="2" ry="2" />
<text  x="539.23" y="1839.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1117.5" y="1781" width="0.4" height="15.0" fill="rgb(224,194,14)" rx="2" ry="2" />
<text  x="1120.49" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="855.7" y="1941" width="0.2" height="15.0" fill="rgb(253,26,28)" rx="2" ry="2" />
<text  x="858.67" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="961.2" y="2021" width="0.7" height="15.0" fill="rgb(220,78,10)" rx="2" ry="2" />
<text  x="964.15" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1059.7" y="1797" width="0.4" height="15.0" fill="rgb(219,218,19)" rx="2" ry="2" />
<text  x="1062.68" y="1807.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="1032.5" y="2037" width="0.2" height="15.0" fill="rgb(220,122,36)" rx="2" ry="2" />
<text  x="1035.47" y="2047.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (2 samples, 0.03%)</title><rect x="105.4" y="901" width="0.4" height="15.0" fill="rgb(239,207,21)" rx="2" ry="2" />
<text  x="108.35" y="911.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="386.1" y="1925" width="0.9" height="15.0" fill="rgb(214,86,31)" rx="2" ry="2" />
<text  x="389.05" y="1935.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="614.7" y="1845" width="0.2" height="15.0" fill="rgb(227,227,11)" rx="2" ry="2" />
<text  x="617.70" y="1855.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="687.6" y="1925" width="0.2" height="15.0" fill="rgb(242,222,14)" rx="2" ry="2" />
<text  x="690.61" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="887.8" y="1701" width="0.2" height="15.0" fill="rgb(220,138,48)" rx="2" ry="2" />
<text  x="890.85" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1139.9" y="1925" width="0.2" height="15.0" fill="rgb(253,80,41)" rx="2" ry="2" />
<text  x="1142.94" y="1935.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="901.6" y="1701" width="0.2" height="15.0" fill="rgb(244,158,52)" rx="2" ry="2" />
<text  x="904.56" y="1711.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="388.0" y="1685" width="0.2" height="15.0" fill="rgb(205,184,28)" rx="2" ry="2" />
<text  x="391.04" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1059.7" y="1829" width="0.4" height="15.0" fill="rgb(222,29,23)" rx="2" ry="2" />
<text  x="1062.68" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="489.2" y="1877" width="0.2" height="15.0" fill="rgb(215,76,4)" rx="2" ry="2" />
<text  x="492.15" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="570.0" y="2005" width="0.2" height="15.0" fill="rgb(243,53,12)" rx="2" ry="2" />
<text  x="573.00" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="270.0" y="1797" width="0.2" height="15.0" fill="rgb(237,103,7)" rx="2" ry="2" />
<text  x="273.04" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="138.5" y="1989" width="0.4" height="15.0" fill="rgb(242,212,52)" rx="2" ry="2" />
<text  x="141.53" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="969.7" y="1925" width="0.2" height="15.0" fill="rgb(237,51,35)" rx="2" ry="2" />
<text  x="972.69" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="326.9" y="1413" width="0.2" height="15.0" fill="rgb(209,205,30)" rx="2" ry="2" />
<text  x="329.85" y="1423.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="524.3" y="1941" width="0.2" height="15.0" fill="rgb(250,106,20)" rx="2" ry="2" />
<text  x="527.31" y="1951.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1109.1" y="1525" width="0.2" height="15.0" fill="rgb(250,15,20)" rx="2" ry="2" />
<text  x="1112.15" y="1535.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (1 samples, 0.02%)</title><rect x="397.8" y="1909" width="0.2" height="15.0" fill="rgb(215,86,54)" rx="2" ry="2" />
<text  x="400.77" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (2 samples, 0.03%)</title><rect x="981.0" y="2037" width="0.4" height="15.0" fill="rgb(250,191,18)" rx="2" ry="2" />
<text  x="984.02" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.36%)</title><rect x="105.2" y="1413" width="16.0" height="15.0" fill="rgb(216,146,5)" rx="2" ry="2" />
<text  x="108.15" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="279.8" y="1717" width="0.2" height="15.0" fill="rgb(229,181,50)" rx="2" ry="2" />
<text  x="282.77" y="1727.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="321.3" y="1653" width="0.2" height="15.0" fill="rgb(208,206,26)" rx="2" ry="2" />
<text  x="324.29" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="845.1" y="1925" width="0.2" height="15.0" fill="rgb(205,91,16)" rx="2" ry="2" />
<text  x="848.14" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="279.6" y="1829" width="0.4" height="15.0" fill="rgb(244,136,35)" rx="2" ry="2" />
<text  x="282.57" y="1839.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1183.8" y="2021" width="0.4" height="15.0" fill="rgb(235,76,43)" rx="2" ry="2" />
<text  x="1186.84" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="392.4" y="1845" width="0.2" height="15.0" fill="rgb(210,0,3)" rx="2" ry="2" />
<text  x="395.41" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9 samples, 0.15%)</title><rect x="1173.1" y="1989" width="1.8" height="15.0" fill="rgb(229,6,9)" rx="2" ry="2" />
<text  x="1176.11" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (4 samples, 0.07%)</title><rect x="884.3" y="1941" width="0.8" height="15.0" fill="rgb(240,166,3)" rx="2" ry="2" />
<text  x="887.27" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="386.2" y="1701" width="0.2" height="15.0" fill="rgb(214,35,15)" rx="2" ry="2" />
<text  x="389.25" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="830.8" y="1813" width="0.2" height="15.0" fill="rgb(208,205,2)" rx="2" ry="2" />
<text  x="833.84" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1031.7" y="1925" width="0.2" height="15.0" fill="rgb(226,171,28)" rx="2" ry="2" />
<text  x="1034.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (8 samples, 0.13%)</title><rect x="133.4" y="1957" width="1.6" height="15.0" fill="rgb(230,214,34)" rx="2" ry="2" />
<text  x="136.36" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="291.1" y="1749" width="0.2" height="15.0" fill="rgb(248,85,30)" rx="2" ry="2" />
<text  x="294.09" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1845" width="0.2" height="15.0" fill="rgb(244,160,45)" rx="2" ry="2" />
<text  x="1085.93" y="1855.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="554.3" y="1957" width="1.4" height="15.0" fill="rgb(223,227,30)" rx="2" ry="2" />
<text  x="557.31" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="233.9" y="1765" width="0.6" height="15.0" fill="rgb(252,56,29)" rx="2" ry="2" />
<text  x="236.88" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="901.4" y="1989" width="0.4" height="15.0" fill="rgb(241,198,7)" rx="2" ry="2" />
<text  x="904.36" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="334.0" y="1381" width="0.2" height="15.0" fill="rgb(218,94,6)" rx="2" ry="2" />
<text  x="337.00" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="223.9" y="1845" width="0.4" height="15.0" fill="rgb(251,51,47)" rx="2" ry="2" />
<text  x="226.95" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (102 samples, 1.72%)</title><rect x="67.2" y="1973" width="20.3" height="15.0" fill="rgb(242,209,26)" rx="2" ry="2" />
<text  x="70.21" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="635.6" y="1909" width="0.2" height="15.0" fill="rgb(224,162,14)" rx="2" ry="2" />
<text  x="638.56" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="672.5" y="1589" width="0.2" height="15.0" fill="rgb(251,117,1)" rx="2" ry="2" />
<text  x="675.51" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="489.7" y="1829" width="0.2" height="15.0" fill="rgb(210,90,7)" rx="2" ry="2" />
<text  x="492.75" y="1839.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="744.2" y="1765" width="0.2" height="15.0" fill="rgb(227,226,12)" rx="2" ry="2" />
<text  x="747.22" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="131.2" y="1941" width="0.6" height="15.0" fill="rgb(220,145,15)" rx="2" ry="2" />
<text  x="134.18" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="298.6" y="1573" width="0.8" height="15.0" fill="rgb(230,228,22)" rx="2" ry="2" />
<text  x="301.64" y="1583.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="62.2" y="1861" width="0.2" height="15.0" fill="rgb(222,171,7)" rx="2" ry="2" />
<text  x="65.25" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="321.9" y="1733" width="0.4" height="15.0" fill="rgb(252,130,23)" rx="2" ry="2" />
<text  x="324.89" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="864.2" y="1973" width="1.2" height="15.0" fill="rgb(250,109,24)" rx="2" ry="2" />
<text  x="867.21" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="757.5" y="1621" width="0.2" height="15.0" fill="rgb(228,151,22)" rx="2" ry="2" />
<text  x="760.53" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="572.0" y="2005" width="0.2" height="15.0" fill="rgb(219,209,16)" rx="2" ry="2" />
<text  x="574.99" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="792.7" y="1477" width="0.2" height="15.0" fill="rgb(235,100,44)" rx="2" ry="2" />
<text  x="795.69" y="1487.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="467.7" y="1893" width="0.2" height="15.0" fill="rgb(223,142,38)" rx="2" ry="2" />
<text  x="470.70" y="1903.5" ></text>
</g>
<g >
<title>add_wait_queue (5 samples, 0.08%)</title><rect x="464.3" y="1909" width="1.0" height="15.0" fill="rgb(222,121,32)" rx="2" ry="2" />
<text  x="467.32" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="100.6" y="2021" width="2.6" height="15.0" fill="rgb(208,113,52)" rx="2" ry="2" />
<text  x="103.59" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (7 samples, 0.12%)</title><rect x="1143.3" y="2037" width="1.4" height="15.0" fill="rgb(220,187,51)" rx="2" ry="2" />
<text  x="1146.32" y="2047.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="337.2" y="1541" width="0.2" height="15.0" fill="rgb(215,178,48)" rx="2" ry="2" />
<text  x="340.18" y="1551.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="224.1" y="1797" width="0.2" height="15.0" fill="rgb(217,131,21)" rx="2" ry="2" />
<text  x="227.15" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="614.1" y="1845" width="0.6" height="15.0" fill="rgb(220,193,49)" rx="2" ry="2" />
<text  x="617.10" y="1855.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="974.7" y="2005" width="0.2" height="15.0" fill="rgb(233,9,46)" rx="2" ry="2" />
<text  x="977.66" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="790.9" y="1493" width="0.2" height="15.0" fill="rgb(229,52,22)" rx="2" ry="2" />
<text  x="793.91" y="1503.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="901.4" y="1973" width="0.4" height="15.0" fill="rgb(208,181,44)" rx="2" ry="2" />
<text  x="904.36" y="1983.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="598.8" y="1861" width="1.2" height="15.0" fill="rgb(213,72,27)" rx="2" ry="2" />
<text  x="601.81" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (25 samples, 0.42%)</title><rect x="626.2" y="2037" width="5.0" height="15.0" fill="rgb(232,8,24)" rx="2" ry="2" />
<text  x="629.22" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="147.9" y="1861" width="0.2" height="15.0" fill="rgb(244,150,36)" rx="2" ry="2" />
<text  x="150.87" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="892.4" y="1829" width="0.2" height="15.0" fill="rgb(206,174,12)" rx="2" ry="2" />
<text  x="895.42" y="1839.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="262.3" y="1861" width="0.2" height="15.0" fill="rgb(221,182,19)" rx="2" ry="2" />
<text  x="265.29" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="551.5" y="1941" width="0.2" height="15.0" fill="rgb(218,27,29)" rx="2" ry="2" />
<text  x="554.53" y="1951.5" ></text>
</g>
<g >
<title>__alloc_skb (47 samples, 0.79%)</title><rect x="272.4" y="1861" width="9.4" height="15.0" fill="rgb(215,59,10)" rx="2" ry="2" />
<text  x="275.42" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="222.6" y="1669" width="0.2" height="15.0" fill="rgb(247,156,18)" rx="2" ry="2" />
<text  x="225.56" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="159.6" y="1605" width="0.2" height="15.0" fill="rgb(237,183,15)" rx="2" ry="2" />
<text  x="162.59" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="160.2" y="1733" width="0.2" height="15.0" fill="rgb(221,209,16)" rx="2" ry="2" />
<text  x="163.18" y="1743.5" ></text>
</g>
<g >
<title>__snprintf (1 samples, 0.02%)</title><rect x="356.5" y="2037" width="0.1" height="15.0" fill="rgb(236,89,21)" rx="2" ry="2" />
<text  x="359.45" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="550.1" y="1893" width="0.2" height="15.0" fill="rgb(221,25,37)" rx="2" ry="2" />
<text  x="553.14" y="1903.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="321.5" y="1781" width="0.2" height="15.0" fill="rgb(209,3,22)" rx="2" ry="2" />
<text  x="324.49" y="1791.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="884.5" y="1605" width="0.2" height="15.0" fill="rgb(213,106,19)" rx="2" ry="2" />
<text  x="887.47" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="412.7" y="1781" width="0.2" height="15.0" fill="rgb(206,210,30)" rx="2" ry="2" />
<text  x="415.67" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="137.7" y="1989" width="0.4" height="15.0" fill="rgb(220,41,43)" rx="2" ry="2" />
<text  x="140.73" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="337.4" y="1685" width="0.2" height="15.0" fill="rgb(233,36,54)" rx="2" ry="2" />
<text  x="340.38" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1105.2" y="1829" width="0.2" height="15.0" fill="rgb(240,213,51)" rx="2" ry="2" />
<text  x="1108.18" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="392.4" y="1893" width="0.2" height="15.0" fill="rgb(251,162,44)" rx="2" ry="2" />
<text  x="395.41" y="1903.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="278.4" y="1829" width="0.4" height="15.0" fill="rgb(210,210,18)" rx="2" ry="2" />
<text  x="281.38" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="333.8" y="1637" width="0.4" height="15.0" fill="rgb(228,160,33)" rx="2" ry="2" />
<text  x="336.80" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (5 samples, 0.08%)</title><rect x="864.4" y="1957" width="1.0" height="15.0" fill="rgb(240,48,21)" rx="2" ry="2" />
<text  x="867.41" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="253.4" y="1877" width="0.1" height="15.0" fill="rgb(212,10,15)" rx="2" ry="2" />
<text  x="256.35" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="348.7" y="1941" width="0.8" height="15.0" fill="rgb(227,73,28)" rx="2" ry="2" />
<text  x="351.70" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="620.1" y="2021" width="0.6" height="15.0" fill="rgb(206,72,31)" rx="2" ry="2" />
<text  x="623.06" y="2031.5" ></text>
</g>
<g >
<title>fput (5 samples, 0.08%)</title><rect x="483.2" y="1973" width="1.0" height="15.0" fill="rgb(236,211,0)" rx="2" ry="2" />
<text  x="486.19" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="902.5" y="1957" width="0.2" height="15.0" fill="rgb(220,4,20)" rx="2" ry="2" />
<text  x="905.55" y="1967.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (4 samples, 0.07%)</title><rect x="853.3" y="1941" width="0.8" height="15.0" fill="rgb(217,74,12)" rx="2" ry="2" />
<text  x="856.28" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="747.8" y="1733" width="0.2" height="15.0" fill="rgb(222,163,41)" rx="2" ry="2" />
<text  x="750.80" y="1743.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (9 samples, 0.15%)</title><rect x="544.0" y="1973" width="1.8" height="15.0" fill="rgb(216,128,54)" rx="2" ry="2" />
<text  x="546.98" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="555.3" y="1941" width="0.4" height="15.0" fill="rgb(206,52,18)" rx="2" ry="2" />
<text  x="558.30" y="1951.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="409.9" y="1861" width="0.2" height="15.0" fill="rgb(233,217,15)" rx="2" ry="2" />
<text  x="412.89" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="837.2" y="1925" width="0.2" height="15.0" fill="rgb(214,165,31)" rx="2" ry="2" />
<text  x="840.19" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1157" width="14.7" height="15.0" fill="rgb(220,76,37)" rx="2" ry="2" />
<text  x="108.35" y="1167.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="604.8" y="1893" width="0.2" height="15.0" fill="rgb(230,111,26)" rx="2" ry="2" />
<text  x="607.77" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (1 samples, 0.02%)</title><rect x="162.4" y="1941" width="0.2" height="15.0" fill="rgb(245,31,6)" rx="2" ry="2" />
<text  x="165.37" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="858.1" y="1893" width="0.1" height="15.0" fill="rgb(238,196,29)" rx="2" ry="2" />
<text  x="861.05" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1161.8" y="1781" width="0.2" height="15.0" fill="rgb(234,116,17)" rx="2" ry="2" />
<text  x="1164.79" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (12 samples, 0.20%)</title><rect x="478.0" y="1925" width="2.4" height="15.0" fill="rgb(222,185,53)" rx="2" ry="2" />
<text  x="481.03" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="516.6" y="2037" width="0.4" height="15.0" fill="rgb(239,143,0)" rx="2" ry="2" />
<text  x="519.57" y="2047.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1062.5" y="1973" width="0.4" height="15.0" fill="rgb(208,31,16)" rx="2" ry="2" />
<text  x="1065.46" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="960.6" y="1861" width="0.2" height="15.0" fill="rgb(219,221,22)" rx="2" ry="2" />
<text  x="963.56" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="625.8" y="2005" width="0.2" height="15.0" fill="rgb(227,194,49)" rx="2" ry="2" />
<text  x="628.82" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="574.2" y="1557" width="0.2" height="15.0" fill="rgb(216,198,50)" rx="2" ry="2" />
<text  x="577.18" y="1567.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="791.7" y="1573" width="0.2" height="15.0" fill="rgb(231,52,16)" rx="2" ry="2" />
<text  x="794.70" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1059.7" y="1909" width="0.4" height="15.0" fill="rgb(215,154,17)" rx="2" ry="2" />
<text  x="1062.68" y="1919.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="32.4" y="1893" width="0.2" height="15.0" fill="rgb(235,223,5)" rx="2" ry="2" />
<text  x="35.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="417.0" y="1781" width="0.4" height="15.0" fill="rgb(228,10,43)" rx="2" ry="2" />
<text  x="420.04" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (2 samples, 0.03%)</title><rect x="607.4" y="1925" width="0.3" height="15.0" fill="rgb(208,186,18)" rx="2" ry="2" />
<text  x="610.35" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9 samples, 0.15%)</title><rect x="10.6" y="1893" width="1.8" height="15.0" fill="rgb(225,224,18)" rx="2" ry="2" />
<text  x="13.60" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="222.6" y="1861" width="0.2" height="15.0" fill="rgb(235,82,9)" rx="2" ry="2" />
<text  x="225.56" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="63.2" y="1957" width="0.2" height="15.0" fill="rgb(218,63,4)" rx="2" ry="2" />
<text  x="66.24" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="71.8" y="1893" width="0.4" height="15.0" fill="rgb(223,10,24)" rx="2" ry="2" />
<text  x="74.78" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="631.0" y="1973" width="0.2" height="15.0" fill="rgb(212,190,20)" rx="2" ry="2" />
<text  x="633.99" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="489.7" y="1701" width="0.2" height="15.0" fill="rgb(254,20,19)" rx="2" ry="2" />
<text  x="492.75" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1033.5" y="1989" width="0.2" height="15.0" fill="rgb(248,44,22)" rx="2" ry="2" />
<text  x="1036.46" y="1999.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="1031.1" y="2037" width="0.2" height="15.0" fill="rgb(227,85,52)" rx="2" ry="2" />
<text  x="1034.08" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="527.5" y="1957" width="0.2" height="15.0" fill="rgb(225,26,47)" rx="2" ry="2" />
<text  x="530.49" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="387.6" y="1925" width="0.2" height="15.0" fill="rgb(217,0,47)" rx="2" ry="2" />
<text  x="390.64" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1160.8" y="1605" width="0.2" height="15.0" fill="rgb(219,103,49)" rx="2" ry="2" />
<text  x="1163.80" y="1615.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="890.8" y="1925" width="0.2" height="15.0" fill="rgb(233,218,1)" rx="2" ry="2" />
<text  x="893.83" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="960.8" y="2005" width="0.2" height="15.0" fill="rgb(237,129,50)" rx="2" ry="2" />
<text  x="963.75" y="2015.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="321.7" y="1797" width="0.2" height="15.0" fill="rgb(233,34,44)" rx="2" ry="2" />
<text  x="324.69" y="1807.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="278.8" y="1845" width="0.2" height="15.0" fill="rgb(232,30,7)" rx="2" ry="2" />
<text  x="281.78" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1161.8" y="1861" width="0.2" height="15.0" fill="rgb(229,44,1)" rx="2" ry="2" />
<text  x="1164.79" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (3 samples, 0.05%)</title><rect x="701.7" y="2037" width="0.6" height="15.0" fill="rgb(230,19,37)" rx="2" ry="2" />
<text  x="704.71" y="2047.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="912.3" y="1973" width="0.2" height="15.0" fill="rgb(221,46,11)" rx="2" ry="2" />
<text  x="915.28" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="235.7" y="1845" width="0.2" height="15.0" fill="rgb(248,202,18)" rx="2" ry="2" />
<text  x="238.67" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="86.7" y="1909" width="0.2" height="15.0" fill="rgb(225,199,52)" rx="2" ry="2" />
<text  x="89.68" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="271.2" y="1813" width="0.2" height="15.0" fill="rgb(253,222,13)" rx="2" ry="2" />
<text  x="274.23" y="1823.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (382 samples, 6.43%)</title><rect x="21.3" y="2037" width="75.9" height="15.0" fill="rgb(210,36,29)" rx="2" ry="2" />
<text  x="24.32" y="2047.5" >folly::E..</text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.02%)</title><rect x="373.9" y="1813" width="0.2" height="15.0" fill="rgb(230,107,3)" rx="2" ry="2" />
<text  x="376.93" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="283.1" y="1861" width="0.2" height="15.0" fill="rgb(222,8,25)" rx="2" ry="2" />
<text  x="286.15" y="1871.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="513.2" y="1781" width="0.2" height="15.0" fill="rgb(227,214,50)" rx="2" ry="2" />
<text  x="516.19" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (1 samples, 0.02%)</title><rect x="863.4" y="1989" width="0.2" height="15.0" fill="rgb(225,179,51)" rx="2" ry="2" />
<text  x="866.41" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="571.8" y="1781" width="0.2" height="15.0" fill="rgb(205,105,51)" rx="2" ry="2" />
<text  x="574.79" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="74.6" y="1957" width="0.2" height="15.0" fill="rgb(243,39,47)" rx="2" ry="2" />
<text  x="77.56" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="849.7" y="1845" width="0.4" height="15.0" fill="rgb(229,15,36)" rx="2" ry="2" />
<text  x="852.71" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="147.9" y="1845" width="0.2" height="15.0" fill="rgb(223,87,22)" rx="2" ry="2" />
<text  x="150.87" y="1855.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="233.7" y="1829" width="0.8" height="15.0" fill="rgb(246,147,6)" rx="2" ry="2" />
<text  x="236.68" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1161.8" y="1877" width="0.2" height="15.0" fill="rgb(219,88,28)" rx="2" ry="2" />
<text  x="1164.79" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1027.7" y="2021" width="0.2" height="15.0" fill="rgb(215,91,50)" rx="2" ry="2" />
<text  x="1030.70" y="2031.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="868.6" y="2005" width="0.2" height="15.0" fill="rgb(205,172,49)" rx="2" ry="2" />
<text  x="871.58" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="629.2" y="1989" width="0.2" height="15.0" fill="rgb(244,52,49)" rx="2" ry="2" />
<text  x="632.20" y="1999.5" ></text>
</g>
<g >
<title>sys_setsockopt (23 samples, 0.39%)</title><rect x="687.0" y="1941" width="4.6" height="15.0" fill="rgb(206,63,7)" rx="2" ry="2" />
<text  x="690.01" y="1951.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="650.9" y="1989" width="0.2" height="15.0" fill="rgb(212,17,0)" rx="2" ry="2" />
<text  x="653.86" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="161.4" y="1925" width="0.2" height="15.0" fill="rgb(212,54,7)" rx="2" ry="2" />
<text  x="164.37" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="65.4" y="1701" width="0.2" height="15.0" fill="rgb(211,202,0)" rx="2" ry="2" />
<text  x="68.42" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.28%)</title><rect x="105.2" y="1285" width="15.1" height="15.0" fill="rgb(227,25,43)" rx="2" ry="2" />
<text  x="108.15" y="1295.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (29 samples, 0.49%)</title><rect x="634.2" y="1957" width="5.7" height="15.0" fill="rgb(235,12,39)" rx="2" ry="2" />
<text  x="637.17" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.26%)</title><rect x="105.4" y="1221" width="14.9" height="15.0" fill="rgb(239,141,46)" rx="2" ry="2" />
<text  x="108.35" y="1231.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (3 samples, 0.05%)</title><rect x="688.0" y="1925" width="0.6" height="15.0" fill="rgb(221,71,35)" rx="2" ry="2" />
<text  x="691.00" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="791.9" y="1573" width="0.2" height="15.0" fill="rgb(226,151,18)" rx="2" ry="2" />
<text  x="794.90" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="54.5" y="1925" width="1.0" height="15.0" fill="rgb(234,59,30)" rx="2" ry="2" />
<text  x="57.50" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="835.4" y="1909" width="0.4" height="15.0" fill="rgb(230,73,19)" rx="2" ry="2" />
<text  x="838.40" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="416.8" y="2005" width="0.6" height="15.0" fill="rgb(235,13,47)" rx="2" ry="2" />
<text  x="419.84" y="2015.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.07%)</title><rect x="1105.4" y="1909" width="0.8" height="15.0" fill="rgb(217,9,37)" rx="2" ry="2" />
<text  x="1108.37" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="271.2" y="1637" width="0.2" height="15.0" fill="rgb(217,210,33)" rx="2" ry="2" />
<text  x="274.23" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="392.4" y="1813" width="0.2" height="15.0" fill="rgb(236,81,46)" rx="2" ry="2" />
<text  x="395.41" y="1823.5" ></text>
</g>
<g >
<title>__d_alloc (12 samples, 0.20%)</title><rect x="410.5" y="1925" width="2.4" height="15.0" fill="rgb(253,21,49)" rx="2" ry="2" />
<text  x="413.48" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="225.9" y="1829" width="0.4" height="15.0" fill="rgb(234,175,22)" rx="2" ry="2" />
<text  x="228.94" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="783.2" y="1477" width="0.2" height="15.0" fill="rgb(205,128,31)" rx="2" ry="2" />
<text  x="786.16" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="113.9" y="53" width="0.6" height="15.0" fill="rgb(243,124,21)" rx="2" ry="2" />
<text  x="116.90" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="85.7" y="1941" width="0.2" height="15.0" fill="rgb(253,222,32)" rx="2" ry="2" />
<text  x="88.69" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="159.6" y="1653" width="0.2" height="15.0" fill="rgb(218,41,40)" rx="2" ry="2" />
<text  x="162.59" y="1663.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="262.3" y="1765" width="0.2" height="15.0" fill="rgb(243,34,36)" rx="2" ry="2" />
<text  x="265.29" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="573.4" y="1973" width="0.4" height="15.0" fill="rgb(254,48,26)" rx="2" ry="2" />
<text  x="576.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="923.6" y="1989" width="0.2" height="15.0" fill="rgb(224,163,47)" rx="2" ry="2" />
<text  x="926.61" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="68.6" y="1877" width="0.2" height="15.0" fill="rgb(214,96,0)" rx="2" ry="2" />
<text  x="71.60" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="816.5" y="1653" width="0.2" height="15.0" fill="rgb(230,187,44)" rx="2" ry="2" />
<text  x="819.53" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="271.2" y="1733" width="0.2" height="15.0" fill="rgb(210,195,26)" rx="2" ry="2" />
<text  x="274.23" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="600.4" y="1909" width="0.4" height="15.0" fill="rgb(253,57,42)" rx="2" ry="2" />
<text  x="603.40" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="849.7" y="1877" width="0.4" height="15.0" fill="rgb(212,143,48)" rx="2" ry="2" />
<text  x="852.71" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (84 samples, 1.41%)</title><rect x="660.0" y="1989" width="16.7" height="15.0" fill="rgb(215,85,11)" rx="2" ry="2" />
<text  x="662.99" y="1999.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="596.0" y="1861" width="0.2" height="15.0" fill="rgb(215,109,37)" rx="2" ry="2" />
<text  x="599.03" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="701.3" y="2037" width="0.2" height="15.0" fill="rgb(244,183,23)" rx="2" ry="2" />
<text  x="704.31" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="598.6" y="1845" width="0.2" height="15.0" fill="rgb(251,219,7)" rx="2" ry="2" />
<text  x="601.61" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="969.7" y="1957" width="0.2" height="15.0" fill="rgb(248,134,3)" rx="2" ry="2" />
<text  x="972.69" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (3 samples, 0.05%)</title><rect x="924.8" y="2037" width="0.6" height="15.0" fill="rgb(229,29,53)" rx="2" ry="2" />
<text  x="927.80" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="565.0" y="1845" width="0.2" height="15.0" fill="rgb(249,221,28)" rx="2" ry="2" />
<text  x="568.04" y="1855.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="900.2" y="1941" width="0.2" height="15.0" fill="rgb(247,132,38)" rx="2" ry="2" />
<text  x="903.16" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="145.9" y="1909" width="0.4" height="15.0" fill="rgb(247,154,53)" rx="2" ry="2" />
<text  x="148.88" y="1919.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="862.4" y="1653" width="0.2" height="15.0" fill="rgb(240,15,2)" rx="2" ry="2" />
<text  x="865.42" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="441.5" y="1813" width="0.2" height="15.0" fill="rgb(251,14,1)" rx="2" ry="2" />
<text  x="444.47" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="468.3" y="1893" width="0.2" height="15.0" fill="rgb(233,141,29)" rx="2" ry="2" />
<text  x="471.29" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="533.5" y="1941" width="0.1" height="15.0" fill="rgb(234,76,16)" rx="2" ry="2" />
<text  x="536.45" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="995.7" y="1909" width="0.2" height="15.0" fill="rgb(247,13,15)" rx="2" ry="2" />
<text  x="998.72" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1160.8" y="1749" width="0.2" height="15.0" fill="rgb(238,0,20)" rx="2" ry="2" />
<text  x="1163.80" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="865.4" y="1989" width="0.4" height="15.0" fill="rgb(211,54,41)" rx="2" ry="2" />
<text  x="868.40" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="170.5" y="1989" width="0.2" height="15.0" fill="rgb(227,120,14)" rx="2" ry="2" />
<text  x="173.51" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="343.5" y="1861" width="0.2" height="15.0" fill="rgb(239,119,2)" rx="2" ry="2" />
<text  x="346.54" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="513.2" y="1861" width="0.4" height="15.0" fill="rgb(247,133,26)" rx="2" ry="2" />
<text  x="516.19" y="1871.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="823.1" y="1813" width="0.2" height="15.0" fill="rgb(246,140,23)" rx="2" ry="2" />
<text  x="826.09" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="32.1" y="1973" width="0.3" height="15.0" fill="rgb(251,173,50)" rx="2" ry="2" />
<text  x="35.05" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="549.5" y="1893" width="0.6" height="15.0" fill="rgb(208,128,4)" rx="2" ry="2" />
<text  x="552.54" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="233.7" y="1797" width="0.8" height="15.0" fill="rgb(239,139,12)" rx="2" ry="2" />
<text  x="236.68" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="147.9" y="1797" width="0.2" height="15.0" fill="rgb(240,227,34)" rx="2" ry="2" />
<text  x="150.87" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="573.2" y="1829" width="0.2" height="15.0" fill="rgb(207,59,37)" rx="2" ry="2" />
<text  x="576.18" y="1839.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="979.8" y="2037" width="0.2" height="15.0" fill="rgb(219,67,12)" rx="2" ry="2" />
<text  x="982.82" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="176.9" y="1973" width="0.6" height="15.0" fill="rgb(250,133,11)" rx="2" ry="2" />
<text  x="179.87" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="93.6" y="1973" width="0.8" height="15.0" fill="rgb(220,162,6)" rx="2" ry="2" />
<text  x="96.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="326.9" y="1509" width="0.2" height="15.0" fill="rgb(254,176,22)" rx="2" ry="2" />
<text  x="329.85" y="1519.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="299.6" y="1461" width="0.6" height="15.0" fill="rgb(215,52,17)" rx="2" ry="2" />
<text  x="302.64" y="1471.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="874.5" y="1797" width="0.8" height="15.0" fill="rgb(220,18,19)" rx="2" ry="2" />
<text  x="877.54" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="550.3" y="1973" width="0.2" height="15.0" fill="rgb(250,192,36)" rx="2" ry="2" />
<text  x="553.34" y="1983.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="417.2" y="1637" width="0.2" height="15.0" fill="rgb(234,152,32)" rx="2" ry="2" />
<text  x="420.24" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="895.2" y="1829" width="0.4" height="15.0" fill="rgb(234,185,21)" rx="2" ry="2" />
<text  x="898.20" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="117.5" y="37" width="0.6" height="15.0" fill="rgb(248,104,24)" rx="2" ry="2" />
<text  x="120.47" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (2 samples, 0.03%)</title><rect x="73.2" y="1957" width="0.4" height="15.0" fill="rgb(219,56,30)" rx="2" ry="2" />
<text  x="76.17" y="1967.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="334.0" y="1285" width="0.2" height="15.0" fill="rgb(206,141,24)" rx="2" ry="2" />
<text  x="337.00" y="1295.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (2 samples, 0.03%)</title><rect x="30.7" y="1989" width="0.4" height="15.0" fill="rgb(231,194,0)" rx="2" ry="2" />
<text  x="33.66" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="895.2" y="1893" width="0.4" height="15.0" fill="rgb(234,28,34)" rx="2" ry="2" />
<text  x="898.20" y="1903.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="513.6" y="1877" width="0.2" height="15.0" fill="rgb(221,197,24)" rx="2" ry="2" />
<text  x="516.59" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (10 samples, 0.17%)</title><rect x="1127.2" y="2037" width="2.0" height="15.0" fill="rgb(233,188,15)" rx="2" ry="2" />
<text  x="1130.23" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9 samples, 0.15%)</title><rect x="1119.7" y="1941" width="1.8" height="15.0" fill="rgb(244,120,53)" rx="2" ry="2" />
<text  x="1122.68" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (8 samples, 0.13%)</title><rect x="335.2" y="1749" width="1.6" height="15.0" fill="rgb(216,218,4)" rx="2" ry="2" />
<text  x="338.20" y="1759.5" ></text>
</g>
<g >
<title>__GI___setsockopt (77 samples, 1.30%)</title><rect x="678.9" y="1989" width="15.3" height="15.0" fill="rgb(251,38,0)" rx="2" ry="2" />
<text  x="681.87" y="1999.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="865.6" y="1877" width="0.2" height="15.0" fill="rgb(210,56,11)" rx="2" ry="2" />
<text  x="868.60" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="10.6" y="1829" width="0.2" height="15.0" fill="rgb(252,89,29)" rx="2" ry="2" />
<text  x="13.60" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (22 samples, 0.37%)</title><rect x="987.8" y="1989" width="4.3" height="15.0" fill="rgb(212,116,29)" rx="2" ry="2" />
<text  x="990.77" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.2" y="1413" width="0.2" height="15.0" fill="rgb(245,46,37)" rx="2" ry="2" />
<text  x="124.25" y="1423.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="343.3" y="1877" width="0.2" height="15.0" fill="rgb(221,13,4)" rx="2" ry="2" />
<text  x="346.34" y="1887.5" ></text>
</g>
<g >
<title>ep_remove (74 samples, 1.25%)</title><rect x="468.5" y="1973" width="14.7" height="15.0" fill="rgb(240,171,49)" rx="2" ry="2" />
<text  x="471.49" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1004.7" y="1765" width="0.2" height="15.0" fill="rgb(227,209,51)" rx="2" ry="2" />
<text  x="1007.66" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="879.3" y="1941" width="0.4" height="15.0" fill="rgb(241,195,17)" rx="2" ry="2" />
<text  x="882.31" y="1951.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="253.2" y="1893" width="0.2" height="15.0" fill="rgb(243,219,15)" rx="2" ry="2" />
<text  x="256.15" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="63.0" y="1829" width="0.2" height="15.0" fill="rgb(237,75,43)" rx="2" ry="2" />
<text  x="66.04" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (1 samples, 0.02%)</title><rect x="33.6" y="1973" width="0.2" height="15.0" fill="rgb(226,167,17)" rx="2" ry="2" />
<text  x="36.64" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="625.2" y="2005" width="0.2" height="15.0" fill="rgb(239,21,5)" rx="2" ry="2" />
<text  x="628.23" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="32.4" y="1941" width="0.2" height="15.0" fill="rgb(226,115,4)" rx="2" ry="2" />
<text  x="35.45" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_xmit (256 samples, 4.31%)</title><rect x="758.7" y="1701" width="50.9" height="15.0" fill="rgb(237,42,30)" rx="2" ry="2" />
<text  x="761.72" y="1711.5" >tcp_w..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (10 samples, 0.17%)</title><rect x="869.6" y="1989" width="2.0" height="15.0" fill="rgb(231,130,7)" rx="2" ry="2" />
<text  x="872.57" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="543.0" y="1973" width="0.2" height="15.0" fill="rgb(219,89,50)" rx="2" ry="2" />
<text  x="545.99" y="1983.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="1059.7" y="1765" width="0.2" height="15.0" fill="rgb(230,214,23)" rx="2" ry="2" />
<text  x="1062.68" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="22.9" y="1973" width="0.2" height="15.0" fill="rgb(241,45,13)" rx="2" ry="2" />
<text  x="25.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="571.8" y="1701" width="0.2" height="15.0" fill="rgb(254,191,46)" rx="2" ry="2" />
<text  x="574.79" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (16 samples, 0.27%)</title><rect x="552.9" y="1989" width="3.2" height="15.0" fill="rgb(237,79,23)" rx="2" ry="2" />
<text  x="555.92" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="281.2" y="1717" width="0.2" height="15.0" fill="rgb(250,32,1)" rx="2" ry="2" />
<text  x="284.16" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="910.5" y="2005" width="0.2" height="15.0" fill="rgb(210,129,40)" rx="2" ry="2" />
<text  x="913.49" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="342.9" y="1845" width="0.2" height="15.0" fill="rgb(215,63,42)" rx="2" ry="2" />
<text  x="345.94" y="1855.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="994.3" y="1957" width="0.2" height="15.0" fill="rgb(252,100,39)" rx="2" ry="2" />
<text  x="997.33" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="981.4" y="2005" width="0.2" height="15.0" fill="rgb(228,39,50)" rx="2" ry="2" />
<text  x="984.41" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="183.6" y="1973" width="0.2" height="15.0" fill="rgb(245,63,20)" rx="2" ry="2" />
<text  x="186.62" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="641.3" y="1973" width="0.4" height="15.0" fill="rgb(207,2,16)" rx="2" ry="2" />
<text  x="644.32" y="1983.5" ></text>
</g>
<g >
<title>up_write (9 samples, 0.15%)</title><rect x="821.1" y="1765" width="1.8" height="15.0" fill="rgb(239,208,22)" rx="2" ry="2" />
<text  x="824.10" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="895.2" y="1813" width="0.4" height="15.0" fill="rgb(225,39,43)" rx="2" ry="2" />
<text  x="898.20" y="1823.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (8 samples, 0.13%)</title><rect x="851.3" y="1909" width="1.6" height="15.0" fill="rgb(216,129,50)" rx="2" ry="2" />
<text  x="854.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.28%)</title><rect x="105.2" y="1269" width="15.1" height="15.0" fill="rgb(250,155,47)" rx="2" ry="2" />
<text  x="108.15" y="1279.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="371.2" y="1957" width="0.2" height="15.0" fill="rgb(238,146,50)" rx="2" ry="2" />
<text  x="374.15" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="577.4" y="1957" width="0.4" height="15.0" fill="rgb(226,166,27)" rx="2" ry="2" />
<text  x="580.35" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.03%)</title><rect x="348.7" y="1909" width="0.4" height="15.0" fill="rgb(214,29,21)" rx="2" ry="2" />
<text  x="351.70" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="208.1" y="1941" width="0.2" height="15.0" fill="rgb(239,143,22)" rx="2" ry="2" />
<text  x="211.06" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="286.1" y="1829" width="0.2" height="15.0" fill="rgb(205,65,14)" rx="2" ry="2" />
<text  x="289.13" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="173.7" y="1957" width="0.2" height="15.0" fill="rgb(238,149,52)" rx="2" ry="2" />
<text  x="176.69" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="571.8" y="1861" width="0.2" height="15.0" fill="rgb(242,36,13)" rx="2" ry="2" />
<text  x="574.79" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="569.6" y="1989" width="0.2" height="15.0" fill="rgb(246,120,42)" rx="2" ry="2" />
<text  x="572.61" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_fin (347 samples, 5.84%)</title><rect x="751.6" y="1733" width="68.9" height="15.0" fill="rgb(240,99,9)" rx="2" ry="2" />
<text  x="754.57" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="222.6" y="1829" width="0.2" height="15.0" fill="rgb(252,17,54)" rx="2" ry="2" />
<text  x="225.56" y="1839.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1183.8" y="2005" width="0.4" height="15.0" fill="rgb(245,109,12)" rx="2" ry="2" />
<text  x="1186.84" y="2015.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="235.7" y="1637" width="0.2" height="15.0" fill="rgb(251,17,28)" rx="2" ry="2" />
<text  x="238.67" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1166.2" y="2053" width="0.2" height="15.0" fill="rgb(220,188,41)" rx="2" ry="2" />
<text  x="1169.16" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="575.4" y="1989" width="1.2" height="15.0" fill="rgb(242,21,8)" rx="2" ry="2" />
<text  x="578.37" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (1 samples, 0.02%)</title><rect x="579.7" y="2021" width="0.2" height="15.0" fill="rgb(219,91,30)" rx="2" ry="2" />
<text  x="582.74" y="2031.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="902.5" y="1877" width="0.2" height="15.0" fill="rgb(242,222,37)" rx="2" ry="2" />
<text  x="905.55" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="923.0" y="2037" width="0.2" height="15.0" fill="rgb(243,33,52)" rx="2" ry="2" />
<text  x="926.01" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="135.7" y="1925" width="0.2" height="15.0" fill="rgb(227,202,40)" rx="2" ry="2" />
<text  x="138.75" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.5" y="1797" width="0.2" height="15.0" fill="rgb(245,53,25)" rx="2" ry="2" />
<text  x="229.53" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (14 samples, 0.24%)</title><rect x="60.3" y="1941" width="2.7" height="15.0" fill="rgb(231,110,1)" rx="2" ry="2" />
<text  x="63.26" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="177.9" y="1973" width="0.6" height="15.0" fill="rgb(219,79,43)" rx="2" ry="2" />
<text  x="180.86" y="1983.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.17%)</title><rect x="12.6" y="1941" width="2.0" height="15.0" fill="rgb(231,36,22)" rx="2" ry="2" />
<text  x="15.58" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="103.0" y="1957" width="0.2" height="15.0" fill="rgb(212,199,0)" rx="2" ry="2" />
<text  x="105.97" y="1967.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="303.0" y="1685" width="0.2" height="15.0" fill="rgb(222,193,24)" rx="2" ry="2" />
<text  x="306.01" y="1695.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (212 samples, 3.57%)</title><rect x="286.7" y="1829" width="42.1" height="15.0" fill="rgb(219,16,10)" rx="2" ry="2" />
<text  x="289.72" y="1839.5" >__t..</text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="70.8" y="1845" width="0.2" height="15.0" fill="rgb(251,218,28)" rx="2" ry="2" />
<text  x="73.79" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="14.6" y="2037" width="1.2" height="15.0" fill="rgb(210,19,40)" rx="2" ry="2" />
<text  x="17.57" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.2" y="1813" width="0.2" height="15.0" fill="rgb(236,76,36)" rx="2" ry="2" />
<text  x="127.23" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="337.0" y="1605" width="0.4" height="15.0" fill="rgb(251,24,13)" rx="2" ry="2" />
<text  x="339.98" y="1615.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="60.9" y="1861" width="0.2" height="15.0" fill="rgb(236,207,22)" rx="2" ry="2" />
<text  x="63.86" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1000.5" y="1973" width="0.2" height="15.0" fill="rgb(226,200,8)" rx="2" ry="2" />
<text  x="1003.48" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="887.8" y="1685" width="0.2" height="15.0" fill="rgb(238,95,46)" rx="2" ry="2" />
<text  x="890.85" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (45 samples, 0.76%)</title><rect x="631.8" y="1989" width="8.9" height="15.0" fill="rgb(235,166,51)" rx="2" ry="2" />
<text  x="634.78" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="321.9" y="1765" width="0.4" height="15.0" fill="rgb(243,220,24)" rx="2" ry="2" />
<text  x="324.89" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="691.2" y="1781" width="0.2" height="15.0" fill="rgb(234,7,45)" rx="2" ry="2" />
<text  x="694.18" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1161.8" y="1669" width="0.2" height="15.0" fill="rgb(227,44,12)" rx="2" ry="2" />
<text  x="1164.79" y="1679.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="833.8" y="1909" width="0.4" height="15.0" fill="rgb(240,95,31)" rx="2" ry="2" />
<text  x="836.81" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="337.0" y="1621" width="0.4" height="15.0" fill="rgb(210,124,16)" rx="2" ry="2" />
<text  x="339.98" y="1631.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="615.7" y="1861" width="0.2" height="15.0" fill="rgb(252,61,43)" rx="2" ry="2" />
<text  x="618.69" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="845.3" y="1941" width="1.4" height="15.0" fill="rgb(232,67,37)" rx="2" ry="2" />
<text  x="848.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1125.4" y="1653" width="0.2" height="15.0" fill="rgb(219,80,49)" rx="2" ry="2" />
<text  x="1128.44" y="1663.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (5 samples, 0.08%)</title><rect x="834.4" y="1925" width="1.0" height="15.0" fill="rgb(224,168,48)" rx="2" ry="2" />
<text  x="837.41" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="489.7" y="1909" width="0.2" height="15.0" fill="rgb(224,107,27)" rx="2" ry="2" />
<text  x="492.75" y="1919.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="978.6" y="2037" width="0.2" height="15.0" fill="rgb(212,60,19)" rx="2" ry="2" />
<text  x="981.63" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.36%)</title><rect x="105.2" y="1397" width="16.0" height="15.0" fill="rgb(213,60,38)" rx="2" ry="2" />
<text  x="108.15" y="1407.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (1 samples, 0.02%)</title><rect x="497.9" y="1941" width="0.2" height="15.0" fill="rgb(229,20,6)" rx="2" ry="2" />
<text  x="500.89" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="326.7" y="1589" width="0.4" height="15.0" fill="rgb(243,63,8)" rx="2" ry="2" />
<text  x="329.65" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="691.2" y="1621" width="0.2" height="15.0" fill="rgb(210,110,35)" rx="2" ry="2" />
<text  x="694.18" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (2 samples, 0.03%)</title><rect x="317.9" y="1685" width="0.4" height="15.0" fill="rgb(212,105,18)" rx="2" ry="2" />
<text  x="320.91" y="1695.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="973.5" y="2021" width="0.2" height="15.0" fill="rgb(216,136,24)" rx="2" ry="2" />
<text  x="976.47" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="160.2" y="1685" width="0.2" height="15.0" fill="rgb(205,54,27)" rx="2" ry="2" />
<text  x="163.18" y="1695.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="901.6" y="1717" width="0.2" height="15.0" fill="rgb(235,217,10)" rx="2" ry="2" />
<text  x="904.56" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="387.0" y="1909" width="0.4" height="15.0" fill="rgb(218,176,31)" rx="2" ry="2" />
<text  x="390.04" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1033.5" y="1941" width="0.2" height="15.0" fill="rgb(223,87,35)" rx="2" ry="2" />
<text  x="1036.46" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (2 samples, 0.03%)</title><rect x="1152.5" y="1973" width="0.4" height="15.0" fill="rgb(229,70,33)" rx="2" ry="2" />
<text  x="1155.45" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="484.0" y="1861" width="0.2" height="15.0" fill="rgb(245,78,6)" rx="2" ry="2" />
<text  x="486.99" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1161.8" y="1941" width="0.2" height="15.0" fill="rgb(234,48,2)" rx="2" ry="2" />
<text  x="1164.79" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="72.0" y="1829" width="0.2" height="15.0" fill="rgb(248,141,12)" rx="2" ry="2" />
<text  x="74.98" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="28.9" y="1973" width="1.8" height="15.0" fill="rgb(239,188,20)" rx="2" ry="2" />
<text  x="31.87" y="1983.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (4 samples, 0.07%)</title><rect x="805.2" y="1605" width="0.8" height="15.0" fill="rgb(208,138,27)" rx="2" ry="2" />
<text  x="808.21" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="843.0" y="1925" width="0.4" height="15.0" fill="rgb(221,50,49)" rx="2" ry="2" />
<text  x="845.95" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="769.5" y="1605" width="0.1" height="15.0" fill="rgb(229,138,23)" rx="2" ry="2" />
<text  x="772.45" y="1615.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="338.8" y="1877" width="0.8" height="15.0" fill="rgb(247,176,34)" rx="2" ry="2" />
<text  x="341.77" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="635.6" y="1925" width="0.2" height="15.0" fill="rgb(222,208,35)" rx="2" ry="2" />
<text  x="638.56" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="99.4" y="2037" width="0.2" height="15.0" fill="rgb(228,92,36)" rx="2" ry="2" />
<text  x="102.39" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1177.1" y="2005" width="0.4" height="15.0" fill="rgb(215,2,27)" rx="2" ry="2" />
<text  x="1180.09" y="2015.5" ></text>
</g>
<g >
<title>sock_rfree (14 samples, 0.24%)</title><rect x="1089.3" y="1893" width="2.8" height="15.0" fill="rgb(213,83,37)" rx="2" ry="2" />
<text  x="1092.28" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="105.0" y="1525" width="16.4" height="15.0" fill="rgb(216,156,18)" rx="2" ry="2" />
<text  x="107.96" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="569.6" y="1845" width="0.2" height="15.0" fill="rgb(250,110,24)" rx="2" ry="2" />
<text  x="572.61" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="835.4" y="1925" width="0.4" height="15.0" fill="rgb(221,94,44)" rx="2" ry="2" />
<text  x="838.40" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="322.1" y="1621" width="0.2" height="15.0" fill="rgb(229,82,45)" rx="2" ry="2" />
<text  x="325.08" y="1631.5" ></text>
</g>
<g >
<title>skb_entail (7 samples, 0.12%)</title><rect x="282.0" y="1877" width="1.3" height="15.0" fill="rgb(237,21,48)" rx="2" ry="2" />
<text  x="284.96" y="1887.5" ></text>
</g>
<g >
<title>___sys_sendmsg (2 samples, 0.03%)</title><rect x="253.5" y="1973" width="0.4" height="15.0" fill="rgb(206,0,21)" rx="2" ry="2" />
<text  x="256.55" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="252.0" y="1877" width="0.8" height="15.0" fill="rgb(245,109,42)" rx="2" ry="2" />
<text  x="254.96" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1160.8" y="1733" width="0.2" height="15.0" fill="rgb(254,185,13)" rx="2" ry="2" />
<text  x="1163.80" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="233.7" y="1925" width="0.8" height="15.0" fill="rgb(250,159,10)" rx="2" ry="2" />
<text  x="236.68" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="136.7" y="1957" width="0.2" height="15.0" fill="rgb(245,101,35)" rx="2" ry="2" />
<text  x="139.74" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="104.2" y="1909" width="21.2" height="15.0" fill="rgb(248,57,53)" rx="2" ry="2" />
<text  x="107.16" y="1919.5" >[..</text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="387.0" y="1925" width="0.6" height="15.0" fill="rgb(228,208,19)" rx="2" ry="2" />
<text  x="390.04" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_mss (19 samples, 0.32%)</title><rect x="339.6" y="1877" width="3.7" height="15.0" fill="rgb(212,162,33)" rx="2" ry="2" />
<text  x="342.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="485" width="13.5" height="15.0" fill="rgb(221,73,2)" rx="2" ry="2" />
<text  x="108.75" y="495.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="70.6" y="1701" width="0.2" height="15.0" fill="rgb(242,72,22)" rx="2" ry="2" />
<text  x="73.59" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="321.9" y="1813" width="0.4" height="15.0" fill="rgb(251,102,36)" rx="2" ry="2" />
<text  x="324.89" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (12 samples, 0.20%)</title><rect x="225.1" y="1861" width="2.4" height="15.0" fill="rgb(219,225,37)" rx="2" ry="2" />
<text  x="228.14" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="301.8" y="1701" width="0.4" height="15.0" fill="rgb(246,115,11)" rx="2" ry="2" />
<text  x="304.82" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (525 samples, 8.84%)</title><rect x="244.0" y="2021" width="104.3" height="15.0" fill="rgb(237,100,28)" rx="2" ry="2" />
<text  x="247.01" y="2031.5" >entry_SYSCAL..</text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="105.2" y="1253" width="0.2" height="15.0" fill="rgb(241,0,39)" rx="2" ry="2" />
<text  x="108.15" y="1263.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="975.9" y="1989" width="0.2" height="15.0" fill="rgb(222,110,36)" rx="2" ry="2" />
<text  x="978.85" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="930.4" y="1925" width="0.4" height="15.0" fill="rgb(234,78,28)" rx="2" ry="2" />
<text  x="933.36" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1160.8" y="1573" width="0.2" height="15.0" fill="rgb(234,205,12)" rx="2" ry="2" />
<text  x="1163.80" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.05%)</title><rect x="1034.7" y="2037" width="0.5" height="15.0" fill="rgb(234,124,19)" rx="2" ry="2" />
<text  x="1037.65" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="58.9" y="1941" width="1.4" height="15.0" fill="rgb(212,13,54)" rx="2" ry="2" />
<text  x="61.87" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="534.6" y="2005" width="1.8" height="15.0" fill="rgb(234,24,38)" rx="2" ry="2" />
<text  x="537.64" y="2015.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="808.2" y="1669" width="0.2" height="15.0" fill="rgb(244,2,52)" rx="2" ry="2" />
<text  x="811.19" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="218.4" y="1861" width="0.4" height="15.0" fill="rgb(236,222,43)" rx="2" ry="2" />
<text  x="221.39" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="585.5" y="1909" width="0.2" height="15.0" fill="rgb(236,43,34)" rx="2" ry="2" />
<text  x="588.50" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="337.4" y="1653" width="0.2" height="15.0" fill="rgb(240,197,48)" rx="2" ry="2" />
<text  x="340.38" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.0" y="1797" width="0.2" height="15.0" fill="rgb(242,215,42)" rx="2" ry="2" />
<text  x="127.03" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.64%)</title><rect x="558.3" y="1973" width="7.5" height="15.0" fill="rgb(221,101,34)" rx="2" ry="2" />
<text  x="561.28" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="160.8" y="1893" width="0.6" height="15.0" fill="rgb(241,18,37)" rx="2" ry="2" />
<text  x="163.78" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (2 samples, 0.03%)</title><rect x="1145.7" y="2053" width="0.4" height="15.0" fill="rgb(230,197,30)" rx="2" ry="2" />
<text  x="1148.70" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1105.2" y="1797" width="0.2" height="15.0" fill="rgb(210,72,29)" rx="2" ry="2" />
<text  x="1108.18" y="1807.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="865.6" y="1861" width="0.2" height="15.0" fill="rgb(205,141,50)" rx="2" ry="2" />
<text  x="868.60" y="1871.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="783.2" y="1493" width="0.2" height="15.0" fill="rgb(249,194,31)" rx="2" ry="2" />
<text  x="786.16" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="513.4" y="1797" width="0.2" height="15.0" fill="rgb(252,227,36)" rx="2" ry="2" />
<text  x="516.39" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="514.8" y="1877" width="0.2" height="15.0" fill="rgb(223,150,4)" rx="2" ry="2" />
<text  x="517.78" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="709.7" y="1973" width="0.2" height="15.0" fill="rgb(226,126,49)" rx="2" ry="2" />
<text  x="712.66" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="523.9" y="1989" width="0.8" height="15.0" fill="rgb(207,81,0)" rx="2" ry="2" />
<text  x="526.92" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (19 samples, 0.32%)</title><rect x="1072.4" y="1909" width="3.8" height="15.0" fill="rgb(231,227,43)" rx="2" ry="2" />
<text  x="1075.40" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="100.8" y="1909" width="0.2" height="15.0" fill="rgb(222,108,53)" rx="2" ry="2" />
<text  x="103.78" y="1919.5" ></text>
</g>
<g >
<title>__close (4 samples, 0.07%)</title><rect x="208.5" y="2037" width="0.7" height="15.0" fill="rgb(254,33,24)" rx="2" ry="2" />
<text  x="211.45" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="845.1" y="1781" width="0.2" height="15.0" fill="rgb(233,225,23)" rx="2" ry="2" />
<text  x="848.14" y="1791.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="263.1" y="1893" width="0.4" height="15.0" fill="rgb(242,169,29)" rx="2" ry="2" />
<text  x="266.08" y="1903.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="598.8" y="1845" width="1.2" height="15.0" fill="rgb(253,184,44)" rx="2" ry="2" />
<text  x="601.81" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="317.3" y="1621" width="0.2" height="15.0" fill="rgb(246,1,32)" rx="2" ry="2" />
<text  x="320.32" y="1631.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="1110.5" y="1413" width="0.2" height="15.0" fill="rgb(220,214,40)" rx="2" ry="2" />
<text  x="1113.54" y="1423.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="326.7" y="1605" width="0.4" height="15.0" fill="rgb(248,145,40)" rx="2" ry="2" />
<text  x="329.65" y="1615.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="884.5" y="1861" width="0.2" height="15.0" fill="rgb(206,3,21)" rx="2" ry="2" />
<text  x="887.47" y="1871.5" ></text>
</g>
<g >
<title>inet_release (377 samples, 6.35%)</title><rect x="745.8" y="1765" width="74.9" height="15.0" fill="rgb(252,26,44)" rx="2" ry="2" />
<text  x="748.81" y="1775.5" >inet_rel..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="218.8" y="1845" width="0.2" height="15.0" fill="rgb(217,126,51)" rx="2" ry="2" />
<text  x="221.78" y="1855.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (47 samples, 0.79%)</title><rect x="1108.2" y="1749" width="9.3" height="15.0" fill="rgb(228,86,41)" rx="2" ry="2" />
<text  x="1111.15" y="1759.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="824.1" y="1829" width="0.2" height="15.0" fill="rgb(210,9,27)" rx="2" ry="2" />
<text  x="827.08" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="380.1" y="1925" width="0.8" height="15.0" fill="rgb(250,143,25)" rx="2" ry="2" />
<text  x="383.09" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1605" width="17.0" height="15.0" fill="rgb(205,62,7)" rx="2" ry="2" />
<text  x="107.96" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1139.9" y="1909" width="0.2" height="15.0" fill="rgb(248,180,50)" rx="2" ry="2" />
<text  x="1142.94" y="1919.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="390.8" y="1941" width="0.2" height="15.0" fill="rgb(224,225,44)" rx="2" ry="2" />
<text  x="393.82" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="208.1" y="1877" width="0.2" height="15.0" fill="rgb(244,43,53)" rx="2" ry="2" />
<text  x="211.06" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="171.7" y="1733" width="0.2" height="15.0" fill="rgb(236,104,45)" rx="2" ry="2" />
<text  x="174.70" y="1743.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="233.7" y="1909" width="0.8" height="15.0" fill="rgb(205,201,14)" rx="2" ry="2" />
<text  x="236.68" y="1919.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="738.5" y="1701" width="0.4" height="15.0" fill="rgb(214,19,45)" rx="2" ry="2" />
<text  x="741.46" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="507.0" y="1733" width="0.2" height="15.0" fill="rgb(253,159,43)" rx="2" ry="2" />
<text  x="510.03" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1142.7" y="2005" width="0.2" height="15.0" fill="rgb(248,82,15)" rx="2" ry="2" />
<text  x="1145.72" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="70.2" y="1845" width="0.2" height="15.0" fill="rgb(241,152,7)" rx="2" ry="2" />
<text  x="73.19" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (104 samples, 1.75%)</title><rect x="875.7" y="1973" width="20.7" height="15.0" fill="rgb(228,179,42)" rx="2" ry="2" />
<text  x="878.73" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="379.9" y="1925" width="0.2" height="15.0" fill="rgb(237,87,46)" rx="2" ry="2" />
<text  x="382.89" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="889.0" y="1909" width="0.2" height="15.0" fill="rgb(250,130,14)" rx="2" ry="2" />
<text  x="892.04" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="533.8" y="2005" width="0.6" height="15.0" fill="rgb(227,175,2)" rx="2" ry="2" />
<text  x="536.85" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="141.1" y="1941" width="0.2" height="15.0" fill="rgb(250,71,25)" rx="2" ry="2" />
<text  x="144.11" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (10 samples, 0.17%)</title><rect x="1127.2" y="2021" width="2.0" height="15.0" fill="rgb(225,161,4)" rx="2" ry="2" />
<text  x="1130.23" y="2031.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="818.9" y="1701" width="0.4" height="15.0" fill="rgb(208,22,39)" rx="2" ry="2" />
<text  x="821.92" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="635.6" y="1813" width="0.2" height="15.0" fill="rgb(220,215,52)" rx="2" ry="2" />
<text  x="638.56" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="553.5" y="1957" width="0.2" height="15.0" fill="rgb(221,47,11)" rx="2" ry="2" />
<text  x="556.52" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="825.1" y="1749" width="0.2" height="15.0" fill="rgb(232,28,28)" rx="2" ry="2" />
<text  x="828.07" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1033.5" y="2005" width="0.2" height="15.0" fill="rgb(208,16,53)" rx="2" ry="2" />
<text  x="1036.46" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="896.2" y="1813" width="0.2" height="15.0" fill="rgb(253,99,48)" rx="2" ry="2" />
<text  x="899.19" y="1823.5" ></text>
</g>
<g >
<title>__GI___setsockopt (7 samples, 0.12%)</title><rect x="212.2" y="1957" width="1.4" height="15.0" fill="rgb(251,133,45)" rx="2" ry="2" />
<text  x="215.23" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="968.9" y="1989" width="0.4" height="15.0" fill="rgb(233,192,44)" rx="2" ry="2" />
<text  x="971.90" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="857.1" y="1877" width="0.2" height="15.0" fill="rgb(213,175,4)" rx="2" ry="2" />
<text  x="860.06" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="534.8" y="1909" width="0.2" height="15.0" fill="rgb(222,19,43)" rx="2" ry="2" />
<text  x="537.84" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="245" width="13.5" height="15.0" fill="rgb(234,198,25)" rx="2" ry="2" />
<text  x="108.75" y="255.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="339.4" y="1781" width="0.2" height="15.0" fill="rgb(242,54,8)" rx="2" ry="2" />
<text  x="342.37" y="1791.5" ></text>
</g>
<g >
<title>event_base_loop (4 samples, 0.07%)</title><rect x="1138.0" y="2053" width="0.7" height="15.0" fill="rgb(254,66,52)" rx="2" ry="2" />
<text  x="1140.95" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="523.7" y="1973" width="0.2" height="15.0" fill="rgb(247,76,5)" rx="2" ry="2" />
<text  x="526.72" y="1983.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1110.5" y="1429" width="0.2" height="15.0" fill="rgb(231,22,49)" rx="2" ry="2" />
<text  x="1113.54" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="565.0" y="1637" width="0.2" height="15.0" fill="rgb(206,27,11)" rx="2" ry="2" />
<text  x="568.04" y="1647.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="401.3" y="1877" width="0.2" height="15.0" fill="rgb(206,213,9)" rx="2" ry="2" />
<text  x="404.35" y="1887.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (1 samples, 0.02%)</title><rect x="686.6" y="1941" width="0.2" height="15.0" fill="rgb(242,65,11)" rx="2" ry="2" />
<text  x="689.61" y="1951.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="349.3" y="1717" width="0.2" height="15.0" fill="rgb(240,53,13)" rx="2" ry="2" />
<text  x="352.30" y="1727.5" ></text>
</g>
<g >
<title>memset_erms (3 samples, 0.05%)</title><rect x="407.1" y="1909" width="0.6" height="15.0" fill="rgb(227,227,46)" rx="2" ry="2" />
<text  x="410.11" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="373.9" y="1909" width="0.2" height="15.0" fill="rgb(246,106,38)" rx="2" ry="2" />
<text  x="376.93" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="514.8" y="1701" width="0.2" height="15.0" fill="rgb(223,63,50)" rx="2" ry="2" />
<text  x="517.78" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="514.8" y="1765" width="0.2" height="15.0" fill="rgb(218,32,42)" rx="2" ry="2" />
<text  x="517.78" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="574.0" y="1989" width="1.2" height="15.0" fill="rgb(237,144,24)" rx="2" ry="2" />
<text  x="576.98" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1155.0" y="1941" width="0.2" height="15.0" fill="rgb(218,213,19)" rx="2" ry="2" />
<text  x="1158.04" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1125.2" y="1781" width="0.4" height="15.0" fill="rgb(243,41,19)" rx="2" ry="2" />
<text  x="1128.24" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="639.5" y="1925" width="0.2" height="15.0" fill="rgb(228,123,53)" rx="2" ry="2" />
<text  x="642.53" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="536.2" y="1717" width="0.2" height="15.0" fill="rgb(239,9,45)" rx="2" ry="2" />
<text  x="539.23" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.15%)</title><rect x="10.6" y="1909" width="1.8" height="15.0" fill="rgb(228,202,14)" rx="2" ry="2" />
<text  x="13.60" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (10 samples, 0.17%)</title><rect x="44.8" y="1973" width="2.0" height="15.0" fill="rgb(250,146,32)" rx="2" ry="2" />
<text  x="47.76" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (2 samples, 0.03%)</title><rect x="1173.9" y="1973" width="0.4" height="15.0" fill="rgb(220,160,3)" rx="2" ry="2" />
<text  x="1176.91" y="1983.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="196.7" y="2037" width="0.2" height="15.0" fill="rgb(235,215,0)" rx="2" ry="2" />
<text  x="199.73" y="2047.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="117.5" y="69" width="0.6" height="15.0" fill="rgb(207,186,18)" rx="2" ry="2" />
<text  x="120.47" y="79.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="373.7" y="1925" width="0.2" height="15.0" fill="rgb(211,8,16)" rx="2" ry="2" />
<text  x="376.73" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="901.6" y="1813" width="0.2" height="15.0" fill="rgb(219,89,49)" rx="2" ry="2" />
<text  x="904.56" y="1823.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="388.0" y="1637" width="0.2" height="15.0" fill="rgb(213,192,39)" rx="2" ry="2" />
<text  x="391.04" y="1647.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="349.5" y="2021" width="0.4" height="15.0" fill="rgb(217,63,17)" rx="2" ry="2" />
<text  x="352.50" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="372.5" y="1925" width="0.2" height="15.0" fill="rgb(233,77,15)" rx="2" ry="2" />
<text  x="375.54" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="373.7" y="1877" width="0.2" height="15.0" fill="rgb(248,146,15)" rx="2" ry="2" />
<text  x="376.73" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1010.4" y="1973" width="0.2" height="15.0" fill="rgb(226,32,12)" rx="2" ry="2" />
<text  x="1013.42" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="258.5" y="1925" width="0.2" height="15.0" fill="rgb(208,198,41)" rx="2" ry="2" />
<text  x="261.52" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="850.3" y="1925" width="0.2" height="15.0" fill="rgb(225,44,21)" rx="2" ry="2" />
<text  x="853.30" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="35.2" y="2005" width="0.2" height="15.0" fill="rgb(225,28,1)" rx="2" ry="2" />
<text  x="38.23" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="862.4" y="1861" width="0.2" height="15.0" fill="rgb(228,43,13)" rx="2" ry="2" />
<text  x="865.42" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="960.0" y="1973" width="0.8" height="15.0" fill="rgb(212,223,1)" rx="2" ry="2" />
<text  x="962.96" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="930.8" y="1925" width="0.2" height="15.0" fill="rgb(226,24,31)" rx="2" ry="2" />
<text  x="933.76" y="1935.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (1 samples, 0.02%)</title><rect x="688.6" y="1909" width="0.2" height="15.0" fill="rgb(219,112,38)" rx="2" ry="2" />
<text  x="691.60" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="60.1" y="1845" width="0.2" height="15.0" fill="rgb(253,44,26)" rx="2" ry="2" />
<text  x="63.06" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="616.3" y="1941" width="0.2" height="15.0" fill="rgb(242,61,45)" rx="2" ry="2" />
<text  x="619.29" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (95 samples, 1.60%)</title><rect x="586.3" y="1957" width="18.9" height="15.0" fill="rgb(222,198,38)" rx="2" ry="2" />
<text  x="589.29" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="159.8" y="1877" width="0.2" height="15.0" fill="rgb(233,85,3)" rx="2" ry="2" />
<text  x="162.78" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="929.6" y="1941" width="1.2" height="15.0" fill="rgb(220,95,31)" rx="2" ry="2" />
<text  x="932.57" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="522.9" y="1941" width="0.4" height="15.0" fill="rgb(245,33,17)" rx="2" ry="2" />
<text  x="525.92" y="1951.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (6 samples, 0.10%)</title><rect x="85.9" y="1957" width="1.2" height="15.0" fill="rgb(210,191,33)" rx="2" ry="2" />
<text  x="88.89" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="573.2" y="1925" width="0.2" height="15.0" fill="rgb(224,86,41)" rx="2" ry="2" />
<text  x="576.18" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1016.8" y="1989" width="0.4" height="15.0" fill="rgb(227,74,53)" rx="2" ry="2" />
<text  x="1019.77" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="571.0" y="1717" width="0.2" height="15.0" fill="rgb(238,164,17)" rx="2" ry="2" />
<text  x="574.00" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="326.7" y="1573" width="0.4" height="15.0" fill="rgb(249,226,6)" rx="2" ry="2" />
<text  x="329.65" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="921.2" y="2021" width="0.4" height="15.0" fill="rgb(220,94,39)" rx="2" ry="2" />
<text  x="924.22" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="22.9" y="1893" width="0.2" height="15.0" fill="rgb(240,31,46)" rx="2" ry="2" />
<text  x="25.91" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="944.7" y="1957" width="0.4" height="15.0" fill="rgb(239,123,43)" rx="2" ry="2" />
<text  x="947.66" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1027.3" y="1973" width="0.4" height="15.0" fill="rgb(233,164,10)" rx="2" ry="2" />
<text  x="1030.30" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="401.3" y="1829" width="0.2" height="15.0" fill="rgb(218,197,23)" rx="2" ry="2" />
<text  x="404.35" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="49.9" y="1925" width="1.4" height="15.0" fill="rgb(242,41,22)" rx="2" ry="2" />
<text  x="52.93" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="697.5" y="1861" width="0.2" height="15.0" fill="rgb(223,0,27)" rx="2" ry="2" />
<text  x="700.54" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1125.4" y="1733" width="0.2" height="15.0" fill="rgb(214,44,30)" rx="2" ry="2" />
<text  x="1128.44" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.8" y="1813" width="0.2" height="15.0" fill="rgb(252,99,40)" rx="2" ry="2" />
<text  x="890.85" y="1823.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="884.5" y="1541" width="0.2" height="15.0" fill="rgb(205,51,52)" rx="2" ry="2" />
<text  x="887.47" y="1551.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="1161.8" y="1701" width="0.2" height="15.0" fill="rgb(218,74,10)" rx="2" ry="2" />
<text  x="1164.79" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="732.5" y="1685" width="0.2" height="15.0" fill="rgb(228,78,54)" rx="2" ry="2" />
<text  x="735.50" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="337.0" y="1685" width="0.4" height="15.0" fill="rgb(233,12,25)" rx="2" ry="2" />
<text  x="339.98" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="955.8" y="1989" width="0.2" height="15.0" fill="rgb(220,47,40)" rx="2" ry="2" />
<text  x="958.79" y="1999.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="252.0" y="1973" width="0.8" height="15.0" fill="rgb(232,49,46)" rx="2" ry="2" />
<text  x="254.96" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="77.9" y="1925" width="0.2" height="15.0" fill="rgb(254,175,37)" rx="2" ry="2" />
<text  x="80.94" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (20 samples, 0.34%)</title><rect x="1121.7" y="1973" width="3.9" height="15.0" fill="rgb(252,144,10)" rx="2" ry="2" />
<text  x="1124.66" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="613" width="13.7" height="15.0" fill="rgb(254,173,16)" rx="2" ry="2" />
<text  x="108.75" y="623.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="841.6" y="1845" width="0.2" height="15.0" fill="rgb(235,49,22)" rx="2" ry="2" />
<text  x="844.56" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="837.8" y="1925" width="0.2" height="15.0" fill="rgb(231,201,35)" rx="2" ry="2" />
<text  x="840.79" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1957" width="0.2" height="15.0" fill="rgb(236,109,29)" rx="2" ry="2" />
<text  x="56.70" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="843.7" y="1909" width="0.2" height="15.0" fill="rgb(232,52,20)" rx="2" ry="2" />
<text  x="846.75" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1004.7" y="1829" width="0.2" height="15.0" fill="rgb(212,165,38)" rx="2" ry="2" />
<text  x="1007.66" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="44.6" y="1973" width="0.2" height="15.0" fill="rgb(215,223,54)" rx="2" ry="2" />
<text  x="47.57" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="580.7" y="1989" width="0.2" height="15.0" fill="rgb(237,153,32)" rx="2" ry="2" />
<text  x="583.73" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="27.5" y="1941" width="0.2" height="15.0" fill="rgb(213,215,43)" rx="2" ry="2" />
<text  x="30.48" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (2 samples, 0.03%)</title><rect x="1007.0" y="1973" width="0.4" height="15.0" fill="rgb(236,174,13)" rx="2" ry="2" />
<text  x="1010.04" y="1983.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (21 samples, 0.35%)</title><rect x="463.7" y="1925" width="4.2" height="15.0" fill="rgb(211,47,25)" rx="2" ry="2" />
<text  x="466.72" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="321.3" y="1701" width="0.2" height="15.0" fill="rgb(243,125,33)" rx="2" ry="2" />
<text  x="324.29" y="1711.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="845.1" y="1653" width="0.2" height="15.0" fill="rgb(248,200,6)" rx="2" ry="2" />
<text  x="848.14" y="1663.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (6 samples, 0.10%)</title><rect x="1014.4" y="2005" width="1.2" height="15.0" fill="rgb(239,53,27)" rx="2" ry="2" />
<text  x="1017.39" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="556.7" y="1925" width="0.2" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="559.69" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="808.4" y="1669" width="0.2" height="15.0" fill="rgb(251,193,38)" rx="2" ry="2" />
<text  x="811.39" y="1679.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="122.6" y="1669" width="0.2" height="15.0" fill="rgb(214,18,11)" rx="2" ry="2" />
<text  x="125.64" y="1679.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1118.9" y="1909" width="0.2" height="15.0" fill="rgb(218,98,24)" rx="2" ry="2" />
<text  x="1121.88" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="64.8" y="1893" width="0.2" height="15.0" fill="rgb(218,40,7)" rx="2" ry="2" />
<text  x="67.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="86.9" y="1909" width="0.2" height="15.0" fill="rgb(232,179,3)" rx="2" ry="2" />
<text  x="89.88" y="1919.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="165.7" y="2005" width="0.2" height="15.0" fill="rgb(210,121,4)" rx="2" ry="2" />
<text  x="168.74" y="2015.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="415.3" y="1909" width="0.3" height="15.0" fill="rgb(227,81,4)" rx="2" ry="2" />
<text  x="418.25" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="404.5" y="1909" width="2.4" height="15.0" fill="rgb(243,94,40)" rx="2" ry="2" />
<text  x="407.53" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="262.3" y="1845" width="0.2" height="15.0" fill="rgb(215,156,45)" rx="2" ry="2" />
<text  x="265.29" y="1855.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1169.5" y="1941" width="0.2" height="15.0" fill="rgb(227,73,23)" rx="2" ry="2" />
<text  x="1172.54" y="1951.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="1176.3" y="1973" width="0.2" height="15.0" fill="rgb(231,161,48)" rx="2" ry="2" />
<text  x="1179.29" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="892.4" y="1909" width="0.2" height="15.0" fill="rgb(241,177,37)" rx="2" ry="2" />
<text  x="895.42" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1033.5" y="1893" width="0.2" height="15.0" fill="rgb(254,32,49)" rx="2" ry="2" />
<text  x="1036.46" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (13 samples, 0.22%)</title><rect x="297.8" y="1669" width="2.6" height="15.0" fill="rgb(242,204,43)" rx="2" ry="2" />
<text  x="300.85" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="489.9" y="2021" width="0.2" height="15.0" fill="rgb(215,68,22)" rx="2" ry="2" />
<text  x="492.95" y="2031.5" ></text>
</g>
<g >
<title>page_frag_free (19 samples, 0.32%)</title><rect x="1079.5" y="1861" width="3.8" height="15.0" fill="rgb(209,4,20)" rx="2" ry="2" />
<text  x="1082.55" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="769.5" y="1525" width="0.1" height="15.0" fill="rgb(247,123,40)" rx="2" ry="2" />
<text  x="772.45" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="690.4" y="1877" width="0.2" height="15.0" fill="rgb(231,183,28)" rx="2" ry="2" />
<text  x="693.39" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="819.3" y="1541" width="0.2" height="15.0" fill="rgb(252,13,45)" rx="2" ry="2" />
<text  x="822.31" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1161.8" y="1845" width="0.2" height="15.0" fill="rgb(220,146,12)" rx="2" ry="2" />
<text  x="1164.79" y="1855.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="528.9" y="1973" width="0.2" height="15.0" fill="rgb(207,213,43)" rx="2" ry="2" />
<text  x="531.88" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="60.1" y="1797" width="0.2" height="15.0" fill="rgb(244,219,36)" rx="2" ry="2" />
<text  x="63.06" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="88.3" y="1989" width="0.4" height="15.0" fill="rgb(248,47,10)" rx="2" ry="2" />
<text  x="91.27" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="705.3" y="1989" width="0.2" height="15.0" fill="rgb(216,134,37)" rx="2" ry="2" />
<text  x="708.29" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_locked (3 samples, 0.05%)</title><rect x="299.6" y="1413" width="0.6" height="15.0" fill="rgb(225,28,5)" rx="2" ry="2" />
<text  x="302.64" y="1423.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="22.9" y="1749" width="0.2" height="15.0" fill="rgb(251,38,24)" rx="2" ry="2" />
<text  x="25.91" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="1145.5" y="2053" width="0.2" height="15.0" fill="rgb(248,39,52)" rx="2" ry="2" />
<text  x="1148.50" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="884.5" y="1749" width="0.2" height="15.0" fill="rgb(214,83,36)" rx="2" ry="2" />
<text  x="887.47" y="1759.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="490.3" y="2021" width="0.2" height="15.0" fill="rgb(217,20,53)" rx="2" ry="2" />
<text  x="493.34" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1033.5" y="1765" width="0.2" height="15.0" fill="rgb(227,68,35)" rx="2" ry="2" />
<text  x="1036.46" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="895.8" y="1909" width="0.4" height="15.0" fill="rgb(216,56,40)" rx="2" ry="2" />
<text  x="898.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (40 samples, 0.67%)</title><rect x="1109.1" y="1573" width="8.0" height="15.0" fill="rgb(205,181,12)" rx="2" ry="2" />
<text  x="1112.15" y="1583.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1128.8" y="1749" width="0.2" height="15.0" fill="rgb(249,129,31)" rx="2" ry="2" />
<text  x="1131.81" y="1759.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="896.6" y="1701" width="0.2" height="15.0" fill="rgb(208,9,23)" rx="2" ry="2" />
<text  x="899.59" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="163.2" y="1909" width="0.2" height="15.0" fill="rgb(243,129,21)" rx="2" ry="2" />
<text  x="166.16" y="1919.5" ></text>
</g>
<g >
<title>chacha20_block (1 samples, 0.02%)</title><rect x="277.8" y="1733" width="0.2" height="15.0" fill="rgb(222,99,23)" rx="2" ry="2" />
<text  x="280.78" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="931.8" y="1925" width="0.1" height="15.0" fill="rgb(231,154,44)" rx="2" ry="2" />
<text  x="934.75" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="635.6" y="1829" width="0.2" height="15.0" fill="rgb(221,2,3)" rx="2" ry="2" />
<text  x="638.56" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="565" width="13.7" height="15.0" fill="rgb(226,153,52)" rx="2" ry="2" />
<text  x="108.75" y="575.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="388.0" y="1829" width="0.2" height="15.0" fill="rgb(250,193,10)" rx="2" ry="2" />
<text  x="391.04" y="1839.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="65.6" y="1701" width="0.2" height="15.0" fill="rgb(244,216,51)" rx="2" ry="2" />
<text  x="68.62" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="530.3" y="1989" width="0.2" height="15.0" fill="rgb(218,208,19)" rx="2" ry="2" />
<text  x="533.27" y="1999.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="347.1" y="1941" width="1.2" height="15.0" fill="rgb(210,181,14)" rx="2" ry="2" />
<text  x="350.11" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="390.4" y="1877" width="0.2" height="15.0" fill="rgb(236,30,17)" rx="2" ry="2" />
<text  x="393.42" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="549.5" y="1877" width="0.6" height="15.0" fill="rgb(214,111,21)" rx="2" ry="2" />
<text  x="552.54" y="1887.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="691.4" y="1925" width="0.2" height="15.0" fill="rgb(230,76,4)" rx="2" ry="2" />
<text  x="694.38" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="373.7" y="1861" width="0.2" height="15.0" fill="rgb(248,76,14)" rx="2" ry="2" />
<text  x="376.73" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1019.6" y="1925" width="0.2" height="15.0" fill="rgb(232,9,15)" rx="2" ry="2" />
<text  x="1022.56" y="1935.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="672.5" y="1493" width="0.2" height="15.0" fill="rgb(242,210,14)" rx="2" ry="2" />
<text  x="675.51" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="312.2" y="1653" width="0.2" height="15.0" fill="rgb(254,69,27)" rx="2" ry="2" />
<text  x="315.15" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="283.1" y="1845" width="0.2" height="15.0" fill="rgb(215,170,35)" rx="2" ry="2" />
<text  x="286.15" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (116 samples, 1.95%)</title><rect x="583.1" y="2005" width="23.1" height="15.0" fill="rgb(250,90,15)" rx="2" ry="2" />
<text  x="586.11" y="2015.5" >f..</text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="405.9" y="1861" width="0.2" height="15.0" fill="rgb(209,206,25)" rx="2" ry="2" />
<text  x="408.92" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="517.4" y="2005" width="0.4" height="15.0" fill="rgb(210,50,19)" rx="2" ry="2" />
<text  x="520.36" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="534.6" y="1973" width="1.8" height="15.0" fill="rgb(253,143,40)" rx="2" ry="2" />
<text  x="537.64" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1160.8" y="1637" width="0.2" height="15.0" fill="rgb(236,80,40)" rx="2" ry="2" />
<text  x="1163.80" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (50 samples, 0.84%)</title><rect x="945.5" y="2005" width="9.9" height="15.0" fill="rgb(245,67,0)" rx="2" ry="2" />
<text  x="948.46" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="623.4" y="1973" width="0.4" height="15.0" fill="rgb(228,193,32)" rx="2" ry="2" />
<text  x="626.44" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="59.5" y="1861" width="0.2" height="15.0" fill="rgb(213,183,52)" rx="2" ry="2" />
<text  x="62.46" y="1871.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="507.0" y="1653" width="0.2" height="15.0" fill="rgb(237,5,25)" rx="2" ry="2" />
<text  x="510.03" y="1663.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="233.7" y="1893" width="0.8" height="15.0" fill="rgb(216,216,33)" rx="2" ry="2" />
<text  x="236.68" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (3 samples, 0.05%)</title><rect x="71.6" y="1925" width="0.6" height="15.0" fill="rgb(230,103,0)" rx="2" ry="2" />
<text  x="74.58" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="895.2" y="1925" width="0.6" height="15.0" fill="rgb(230,102,34)" rx="2" ry="2" />
<text  x="898.20" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="406.9" y="1909" width="0.2" height="15.0" fill="rgb(246,42,34)" rx="2" ry="2" />
<text  x="409.91" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="819.3" y="1637" width="0.2" height="15.0" fill="rgb(252,206,2)" rx="2" ry="2" />
<text  x="822.31" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="392.4" y="1877" width="0.2" height="15.0" fill="rgb(221,122,5)" rx="2" ry="2" />
<text  x="395.41" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="523.9" y="1973" width="0.8" height="15.0" fill="rgb(252,127,35)" rx="2" ry="2" />
<text  x="526.92" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="623.2" y="2005" width="0.2" height="15.0" fill="rgb(231,156,16)" rx="2" ry="2" />
<text  x="626.24" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="545.4" y="1909" width="0.4" height="15.0" fill="rgb(251,172,46)" rx="2" ry="2" />
<text  x="548.37" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="337.0" y="1717" width="0.4" height="15.0" fill="rgb(217,167,34)" rx="2" ry="2" />
<text  x="339.98" y="1727.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="1125.4" y="1637" width="0.2" height="15.0" fill="rgb(244,167,49)" rx="2" ry="2" />
<text  x="1128.44" y="1647.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (5 samples, 0.08%)</title><rect x="975.1" y="2021" width="1.0" height="15.0" fill="rgb(240,88,24)" rx="2" ry="2" />
<text  x="978.06" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="77.9" y="1909" width="0.2" height="15.0" fill="rgb(244,110,6)" rx="2" ry="2" />
<text  x="80.94" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="982.8" y="2021" width="21.7" height="15.0" fill="rgb(238,53,40)" rx="2" ry="2" />
<text  x="985.80" y="2031.5" >[..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="922.8" y="2037" width="0.2" height="15.0" fill="rgb(216,91,31)" rx="2" ry="2" />
<text  x="925.81" y="2047.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1082.9" y="1733" width="0.2" height="15.0" fill="rgb(220,143,12)" rx="2" ry="2" />
<text  x="1085.93" y="1743.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="337.4" y="1541" width="0.2" height="15.0" fill="rgb(221,109,43)" rx="2" ry="2" />
<text  x="340.38" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="901.6" y="1845" width="0.2" height="15.0" fill="rgb(246,92,1)" rx="2" ry="2" />
<text  x="904.56" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="724.6" y="1845" width="0.2" height="15.0" fill="rgb(209,70,48)" rx="2" ry="2" />
<text  x="727.56" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (55 samples, 0.93%)</title><rect x="557.3" y="2005" width="10.9" height="15.0" fill="rgb(236,19,26)" rx="2" ry="2" />
<text  x="560.29" y="2015.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="73.0" y="1637" width="0.2" height="15.0" fill="rgb(228,154,32)" rx="2" ry="2" />
<text  x="75.97" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="14.4" y="1861" width="0.2" height="15.0" fill="rgb(229,188,26)" rx="2" ry="2" />
<text  x="17.37" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="270.0" y="1813" width="0.2" height="15.0" fill="rgb(247,171,45)" rx="2" ry="2" />
<text  x="273.04" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="236.7" y="2037" width="0.2" height="15.0" fill="rgb(214,99,13)" rx="2" ry="2" />
<text  x="239.66" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="163.2" y="1877" width="0.2" height="15.0" fill="rgb(205,133,23)" rx="2" ry="2" />
<text  x="166.16" y="1887.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="854.7" y="1941" width="0.2" height="15.0" fill="rgb(243,193,54)" rx="2" ry="2" />
<text  x="857.67" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="70.6" y="1765" width="0.2" height="15.0" fill="rgb(232,2,34)" rx="2" ry="2" />
<text  x="73.59" y="1775.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="117.1" y="37" width="0.4" height="15.0" fill="rgb(248,4,33)" rx="2" ry="2" />
<text  x="120.07" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="138.3" y="1989" width="0.2" height="15.0" fill="rgb(210,85,31)" rx="2" ry="2" />
<text  x="141.33" y="1999.5" ></text>
</g>
<g >
<title>__fput (494 samples, 8.32%)</title><rect x="725.0" y="1813" width="98.1" height="15.0" fill="rgb(250,145,38)" rx="2" ry="2" />
<text  x="727.95" y="1823.5" >__fput</text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="839.0" y="1909" width="0.2" height="15.0" fill="rgb(235,135,15)" rx="2" ry="2" />
<text  x="841.98" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="659.6" y="1957" width="0.4" height="15.0" fill="rgb(254,136,12)" rx="2" ry="2" />
<text  x="662.60" y="1967.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="596.2" y="1861" width="0.2" height="15.0" fill="rgb(235,144,11)" rx="2" ry="2" />
<text  x="599.23" y="1871.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="92.4" y="1941" width="0.4" height="15.0" fill="rgb(226,82,28)" rx="2" ry="2" />
<text  x="95.44" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.7" y="37" width="0.2" height="15.0" fill="rgb(240,166,36)" rx="2" ry="2" />
<text  x="121.66" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="655.8" y="2021" width="0.2" height="15.0" fill="rgb(247,171,48)" rx="2" ry="2" />
<text  x="658.82" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="116.1" y="53" width="0.4" height="15.0" fill="rgb(241,56,38)" rx="2" ry="2" />
<text  x="119.08" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="862.4" y="1957" width="0.2" height="15.0" fill="rgb(236,22,11)" rx="2" ry="2" />
<text  x="865.42" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="895.2" y="1909" width="0.6" height="15.0" fill="rgb(254,20,12)" rx="2" ry="2" />
<text  x="898.20" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="86.5" y="1925" width="0.6" height="15.0" fill="rgb(247,74,39)" rx="2" ry="2" />
<text  x="89.48" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1031.7" y="1909" width="0.2" height="15.0" fill="rgb(222,44,18)" rx="2" ry="2" />
<text  x="1034.67" y="1919.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1047.0" y="2037" width="0.2" height="15.0" fill="rgb(219,185,32)" rx="2" ry="2" />
<text  x="1049.97" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="861.0" y="1989" width="0.8" height="15.0" fill="rgb(248,149,42)" rx="2" ry="2" />
<text  x="864.03" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="949" width="14.7" height="15.0" fill="rgb(224,86,11)" rx="2" ry="2" />
<text  x="108.35" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="884.5" y="1717" width="0.2" height="15.0" fill="rgb(253,22,38)" rx="2" ry="2" />
<text  x="887.47" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output (112 samples, 1.89%)</title><rect x="769.8" y="1621" width="22.3" height="15.0" fill="rgb(218,57,13)" rx="2" ry="2" />
<text  x="772.85" y="1631.5" >i..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="159.6" y="1877" width="0.2" height="15.0" fill="rgb(230,38,1)" rx="2" ry="2" />
<text  x="162.59" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="550.5" y="1973" width="0.2" height="15.0" fill="rgb(242,204,50)" rx="2" ry="2" />
<text  x="553.54" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (41 samples, 0.69%)</title><rect x="607.7" y="1925" width="8.2" height="15.0" fill="rgb(211,178,11)" rx="2" ry="2" />
<text  x="610.75" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.6" y="1877" width="0.2" height="15.0" fill="rgb(212,82,34)" rx="2" ry="2" />
<text  x="65.64" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="468.3" y="1861" width="0.2" height="15.0" fill="rgb(254,76,19)" rx="2" ry="2" />
<text  x="471.29" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="923.4" y="2021" width="1.4" height="15.0" fill="rgb(249,98,31)" rx="2" ry="2" />
<text  x="926.41" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="158.6" y="1797" width="0.2" height="15.0" fill="rgb(208,92,21)" rx="2" ry="2" />
<text  x="161.59" y="1807.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="546.4" y="1973" width="0.2" height="15.0" fill="rgb(225,192,34)" rx="2" ry="2" />
<text  x="549.36" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="549.1" y="1925" width="1.0" height="15.0" fill="rgb(209,133,25)" rx="2" ry="2" />
<text  x="552.14" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="1128.6" y="1925" width="0.6" height="15.0" fill="rgb(226,61,13)" rx="2" ry="2" />
<text  x="1131.62" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (22 samples, 0.37%)</title><rect x="646.7" y="2005" width="4.4" height="15.0" fill="rgb(239,17,11)" rx="2" ry="2" />
<text  x="649.68" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="533.6" y="2005" width="0.2" height="15.0" fill="rgb(250,13,52)" rx="2" ry="2" />
<text  x="536.65" y="2015.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="792.7" y="1365" width="0.2" height="15.0" fill="rgb(253,195,50)" rx="2" ry="2" />
<text  x="795.69" y="1375.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="724.4" y="1845" width="0.2" height="15.0" fill="rgb(224,164,4)" rx="2" ry="2" />
<text  x="727.36" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="583.5" y="1973" width="0.2" height="15.0" fill="rgb(247,19,17)" rx="2" ry="2" />
<text  x="586.51" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1034.1" y="2005" width="0.2" height="15.0" fill="rgb(207,44,10)" rx="2" ry="2" />
<text  x="1037.06" y="2015.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="900.4" y="1957" width="0.2" height="15.0" fill="rgb(234,153,51)" rx="2" ry="2" />
<text  x="903.36" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="337.0" y="1669" width="0.4" height="15.0" fill="rgb(248,24,48)" rx="2" ry="2" />
<text  x="339.98" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1027.3" y="1845" width="0.4" height="15.0" fill="rgb(239,5,13)" rx="2" ry="2" />
<text  x="1030.30" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="889.6" y="1845" width="0.2" height="15.0" fill="rgb(212,135,34)" rx="2" ry="2" />
<text  x="892.64" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::AsyncSocketBase (1 samples, 0.02%)</title><rect x="569.0" y="1989" width="0.2" height="15.0" fill="rgb(253,100,5)" rx="2" ry="2" />
<text  x="572.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="513.4" y="1653" width="0.2" height="15.0" fill="rgb(213,125,33)" rx="2" ry="2" />
<text  x="516.39" y="1663.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="406.3" y="1893" width="0.2" height="15.0" fill="rgb(213,36,6)" rx="2" ry="2" />
<text  x="409.31" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.6" y="1893" width="0.2" height="15.0" fill="rgb(213,161,25)" rx="2" ry="2" />
<text  x="65.64" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="737.7" y="1653" width="0.6" height="15.0" fill="rgb(251,201,21)" rx="2" ry="2" />
<text  x="740.67" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="1040.2" y="2053" width="0.6" height="15.0" fill="rgb(230,178,1)" rx="2" ry="2" />
<text  x="1043.22" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="642.7" y="1989" width="1.6" height="15.0" fill="rgb(238,139,45)" rx="2" ry="2" />
<text  x="645.71" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="144.1" y="1909" width="0.2" height="15.0" fill="rgb(245,163,36)" rx="2" ry="2" />
<text  x="147.09" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="583.3" y="1989" width="0.2" height="15.0" fill="rgb(234,15,37)" rx="2" ry="2" />
<text  x="586.31" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="819.3" y="1509" width="0.2" height="15.0" fill="rgb(208,184,7)" rx="2" ry="2" />
<text  x="822.31" y="1519.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (2 samples, 0.03%)</title><rect x="28.1" y="1989" width="0.4" height="15.0" fill="rgb(244,152,38)" rx="2" ry="2" />
<text  x="31.08" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="580.7" y="2005" width="0.2" height="15.0" fill="rgb(206,204,7)" rx="2" ry="2" />
<text  x="583.73" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="619.7" y="1989" width="0.2" height="15.0" fill="rgb(218,64,13)" rx="2" ry="2" />
<text  x="622.67" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="198.3" y="2021" width="0.2" height="15.0" fill="rgb(206,117,2)" rx="2" ry="2" />
<text  x="201.32" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="218.8" y="1861" width="0.4" height="15.0" fill="rgb(221,64,54)" rx="2" ry="2" />
<text  x="221.78" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1139.9" y="1845" width="0.2" height="15.0" fill="rgb(239,56,50)" rx="2" ry="2" />
<text  x="1142.94" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.0" y="1797" width="0.2" height="15.0" fill="rgb(221,172,21)" rx="2" ry="2" />
<text  x="65.05" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="655.4" y="2021" width="0.4" height="15.0" fill="rgb(252,13,26)" rx="2" ry="2" />
<text  x="658.42" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="842.8" y="1925" width="0.2" height="15.0" fill="rgb(227,147,4)" rx="2" ry="2" />
<text  x="845.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (7 samples, 0.12%)</title><rect x="962.1" y="2037" width="1.4" height="15.0" fill="rgb(222,124,6)" rx="2" ry="2" />
<text  x="965.14" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="70.6" y="1733" width="0.2" height="15.0" fill="rgb(219,179,14)" rx="2" ry="2" />
<text  x="73.59" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (7 samples, 0.12%)</title><rect x="907.3" y="2037" width="1.4" height="15.0" fill="rgb(238,154,12)" rx="2" ry="2" />
<text  x="910.32" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (32 samples, 0.54%)</title><rect x="934.7" y="1925" width="6.4" height="15.0" fill="rgb(236,106,1)" rx="2" ry="2" />
<text  x="937.73" y="1935.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1019.8" y="1941" width="0.7" height="15.0" fill="rgb(210,19,33)" rx="2" ry="2" />
<text  x="1022.75" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="991.1" y="1941" width="0.8" height="15.0" fill="rgb(248,23,13)" rx="2" ry="2" />
<text  x="994.15" y="1951.5" ></text>
</g>
<g >
<title>tcp_push (275 samples, 4.63%)</title><rect x="284.1" y="1877" width="54.7" height="15.0" fill="rgb(233,121,44)" rx="2" ry="2" />
<text  x="287.14" y="1887.5" >tcp_p..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="969.7" y="2005" width="0.2" height="15.0" fill="rgb(241,182,0)" rx="2" ry="2" />
<text  x="972.69" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="182.8" y="1973" width="0.6" height="15.0" fill="rgb(249,8,26)" rx="2" ry="2" />
<text  x="185.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="299.0" y="1461" width="0.2" height="15.0" fill="rgb(229,19,27)" rx="2" ry="2" />
<text  x="302.04" y="1471.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="235.7" y="1925" width="0.2" height="15.0" fill="rgb(251,155,9)" rx="2" ry="2" />
<text  x="238.67" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="337.4" y="1765" width="0.2" height="15.0" fill="rgb(254,74,23)" rx="2" ry="2" />
<text  x="340.38" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (6 samples, 0.10%)</title><rect x="60.5" y="1925" width="1.1" height="15.0" fill="rgb(217,7,34)" rx="2" ry="2" />
<text  x="63.46" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (15 samples, 0.25%)</title><rect x="151.4" y="1925" width="3.0" height="15.0" fill="rgb(223,64,37)" rx="2" ry="2" />
<text  x="154.44" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="525.9" y="1957" width="0.2" height="15.0" fill="rgb(230,50,40)" rx="2" ry="2" />
<text  x="528.90" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="298.6" y="1557" width="0.8" height="15.0" fill="rgb(206,141,35)" rx="2" ry="2" />
<text  x="301.64" y="1567.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.4" y="1653" width="0.2" height="15.0" fill="rgb(225,61,51)" rx="2" ry="2" />
<text  x="125.44" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="480.4" y="1861" width="0.2" height="15.0" fill="rgb(247,138,44)" rx="2" ry="2" />
<text  x="483.41" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (3 samples, 0.05%)</title><rect x="606.2" y="2005" width="0.6" height="15.0" fill="rgb(209,34,24)" rx="2" ry="2" />
<text  x="609.16" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="623.8" y="1925" width="0.2" height="15.0" fill="rgb(212,141,20)" rx="2" ry="2" />
<text  x="626.84" y="1935.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1116.5" y="1509" width="0.2" height="15.0" fill="rgb(251,97,3)" rx="2" ry="2" />
<text  x="1119.50" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="116.5" y="53" width="0.2" height="15.0" fill="rgb(244,186,27)" rx="2" ry="2" />
<text  x="119.48" y="63.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="569.4" y="1973" width="0.2" height="15.0" fill="rgb(222,141,43)" rx="2" ry="2" />
<text  x="572.41" y="1983.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="746.0" y="1749" width="0.2" height="15.0" fill="rgb(230,161,31)" rx="2" ry="2" />
<text  x="749.01" y="1759.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (43 samples, 0.72%)</title><rect x="1012.4" y="2037" width="8.5" height="15.0" fill="rgb(212,201,16)" rx="2" ry="2" />
<text  x="1015.40" y="2047.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="887.8" y="1557" width="0.2" height="15.0" fill="rgb(224,27,38)" rx="2" ry="2" />
<text  x="890.85" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="574.2" y="1797" width="0.2" height="15.0" fill="rgb(222,178,51)" rx="2" ry="2" />
<text  x="577.18" y="1807.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (17 samples, 0.29%)</title><rect x="275.0" y="1829" width="3.4" height="15.0" fill="rgb(234,226,2)" rx="2" ry="2" />
<text  x="278.00" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1059.5" y="1925" width="0.2" height="15.0" fill="rgb(230,110,44)" rx="2" ry="2" />
<text  x="1062.48" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="962.1" y="2021" width="1.4" height="15.0" fill="rgb(207,136,11)" rx="2" ry="2" />
<text  x="965.14" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="616.3" y="1909" width="0.2" height="15.0" fill="rgb(239,206,30)" rx="2" ry="2" />
<text  x="619.29" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="897.2" y="1941" width="0.2" height="15.0" fill="rgb(245,223,4)" rx="2" ry="2" />
<text  x="900.19" y="1951.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="706.7" y="1765" width="0.6" height="15.0" fill="rgb(253,111,26)" rx="2" ry="2" />
<text  x="709.68" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="176.7" y="1989" width="1.2" height="15.0" fill="rgb(249,153,31)" rx="2" ry="2" />
<text  x="179.67" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="281.6" y="1733" width="0.2" height="15.0" fill="rgb(207,90,36)" rx="2" ry="2" />
<text  x="284.56" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="333.8" y="1477" width="0.2" height="15.0" fill="rgb(209,174,33)" rx="2" ry="2" />
<text  x="336.80" y="1487.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="553.7" y="1941" width="0.2" height="15.0" fill="rgb(233,58,21)" rx="2" ry="2" />
<text  x="556.71" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (6 samples, 0.10%)</title><rect x="931.4" y="1941" width="1.1" height="15.0" fill="rgb(240,87,23)" rx="2" ry="2" />
<text  x="934.35" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="159.6" y="1637" width="0.2" height="15.0" fill="rgb(229,207,35)" rx="2" ry="2" />
<text  x="162.59" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.42%)</title><rect x="626.2" y="2021" width="5.0" height="15.0" fill="rgb(236,95,19)" rx="2" ry="2" />
<text  x="629.22" y="2031.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.02%)</title><rect x="726.1" y="1797" width="0.2" height="15.0" fill="rgb(227,151,4)" rx="2" ry="2" />
<text  x="729.14" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.31%)</title><rect x="105.2" y="1317" width="15.4" height="15.0" fill="rgb(242,37,43)" rx="2" ry="2" />
<text  x="108.15" y="1327.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="60.1" y="1829" width="0.2" height="15.0" fill="rgb(216,216,28)" rx="2" ry="2" />
<text  x="63.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (27 samples, 0.45%)</title><rect x="802.2" y="1653" width="5.4" height="15.0" fill="rgb(215,169,11)" rx="2" ry="2" />
<text  x="805.23" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="152.4" y="1893" width="0.4" height="15.0" fill="rgb(215,159,23)" rx="2" ry="2" />
<text  x="155.43" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="135.9" y="1909" width="0.2" height="15.0" fill="rgb(205,43,0)" rx="2" ry="2" />
<text  x="138.95" y="1919.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="555.1" y="1701" width="0.2" height="15.0" fill="rgb(231,207,42)" rx="2" ry="2" />
<text  x="558.10" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (47 samples, 0.79%)</title><rect x="910.9" y="2037" width="9.3" height="15.0" fill="rgb(210,206,32)" rx="2" ry="2" />
<text  x="913.89" y="2047.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="125.6" y="1765" width="0.8" height="15.0" fill="rgb(252,198,48)" rx="2" ry="2" />
<text  x="128.62" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="326.7" y="1637" width="0.4" height="15.0" fill="rgb(230,80,35)" rx="2" ry="2" />
<text  x="329.65" y="1647.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="619.7" y="1781" width="0.2" height="15.0" fill="rgb(221,69,48)" rx="2" ry="2" />
<text  x="622.67" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="281.4" y="1845" width="0.4" height="15.0" fill="rgb(242,0,10)" rx="2" ry="2" />
<text  x="284.36" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="227.1" y="1797" width="0.4" height="15.0" fill="rgb(230,211,6)" rx="2" ry="2" />
<text  x="230.13" y="1807.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="497.5" y="1829" width="0.2" height="15.0" fill="rgb(243,113,17)" rx="2" ry="2" />
<text  x="500.49" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="392.6" y="1941" width="0.4" height="15.0" fill="rgb(225,137,28)" rx="2" ry="2" />
<text  x="395.61" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (194 samples, 3.27%)</title><rect x="761.3" y="1685" width="38.5" height="15.0" fill="rgb(237,117,21)" rx="2" ry="2" />
<text  x="764.31" y="1695.5" >__t..</text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="773.0" y="1589" width="0.6" height="15.0" fill="rgb(249,129,20)" rx="2" ry="2" />
<text  x="776.03" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="349.1" y="1845" width="0.4" height="15.0" fill="rgb(233,48,40)" rx="2" ry="2" />
<text  x="352.10" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="386.2" y="1685" width="0.2" height="15.0" fill="rgb(205,47,28)" rx="2" ry="2" />
<text  x="389.25" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="388.0" y="1877" width="0.2" height="15.0" fill="rgb(228,79,46)" rx="2" ry="2" />
<text  x="391.04" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (20 samples, 0.34%)</title><rect x="168.5" y="2021" width="4.0" height="15.0" fill="rgb(219,45,39)" rx="2" ry="2" />
<text  x="171.53" y="2031.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="299.0" y="1413" width="0.2" height="15.0" fill="rgb(208,184,41)" rx="2" ry="2" />
<text  x="302.04" y="1423.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="894.2" y="1909" width="0.2" height="15.0" fill="rgb(208,204,4)" rx="2" ry="2" />
<text  x="897.21" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (2 samples, 0.03%)</title><rect x="570.6" y="1941" width="0.4" height="15.0" fill="rgb(229,134,3)" rx="2" ry="2" />
<text  x="573.60" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="536.2" y="1765" width="0.2" height="15.0" fill="rgb(232,159,29)" rx="2" ry="2" />
<text  x="539.23" y="1775.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="942.1" y="1941" width="0.4" height="15.0" fill="rgb(222,77,9)" rx="2" ry="2" />
<text  x="945.08" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="635.6" y="1797" width="0.2" height="15.0" fill="rgb(234,216,17)" rx="2" ry="2" />
<text  x="638.56" y="1807.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="749.8" y="1733" width="0.4" height="15.0" fill="rgb(219,36,54)" rx="2" ry="2" />
<text  x="752.78" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="65.4" y="1861" width="0.4" height="15.0" fill="rgb(225,62,38)" rx="2" ry="2" />
<text  x="68.42" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="909.1" y="2037" width="0.2" height="15.0" fill="rgb(220,185,8)" rx="2" ry="2" />
<text  x="912.10" y="2047.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="1082.9" y="1701" width="0.2" height="15.0" fill="rgb(239,84,37)" rx="2" ry="2" />
<text  x="1085.93" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="235.7" y="1733" width="0.2" height="15.0" fill="rgb(238,135,10)" rx="2" ry="2" />
<text  x="238.67" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="625.4" y="2005" width="0.2" height="15.0" fill="rgb(245,107,15)" rx="2" ry="2" />
<text  x="628.43" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1105.2" y="1621" width="0.2" height="15.0" fill="rgb(251,226,40)" rx="2" ry="2" />
<text  x="1108.18" y="1631.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="185.0" y="2005" width="0.2" height="15.0" fill="rgb(224,5,37)" rx="2" ry="2" />
<text  x="188.01" y="2015.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="271.4" y="1877" width="0.2" height="15.0" fill="rgb(205,83,52)" rx="2" ry="2" />
<text  x="274.43" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1160.8" y="1861" width="0.2" height="15.0" fill="rgb(216,219,45)" rx="2" ry="2" />
<text  x="1163.80" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="894.6" y="1893" width="0.2" height="15.0" fill="rgb(213,174,50)" rx="2" ry="2" />
<text  x="897.60" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="624.4" y="1909" width="0.4" height="15.0" fill="rgb(246,207,33)" rx="2" ry="2" />
<text  x="627.43" y="1919.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.17%)</title><rect x="12.6" y="1989" width="2.0" height="15.0" fill="rgb(246,148,0)" rx="2" ry="2" />
<text  x="15.58" y="1999.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="553.3" y="1941" width="0.2" height="15.0" fill="rgb(231,16,45)" rx="2" ry="2" />
<text  x="556.32" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="571.8" y="1877" width="0.2" height="15.0" fill="rgb(225,10,36)" rx="2" ry="2" />
<text  x="574.79" y="1887.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (1 samples, 0.02%)</title><rect x="856.1" y="1941" width="0.2" height="15.0" fill="rgb(223,183,31)" rx="2" ry="2" />
<text  x="859.06" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="989.8" y="1957" width="0.6" height="15.0" fill="rgb(248,224,13)" rx="2" ry="2" />
<text  x="992.76" y="1967.5" ></text>
</g>
<g >
<title>path_parentat (1 samples, 0.02%)</title><rect x="12.4" y="1957" width="0.2" height="15.0" fill="rgb(222,130,11)" rx="2" ry="2" />
<text  x="15.38" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="497.3" y="1941" width="0.2" height="15.0" fill="rgb(238,120,17)" rx="2" ry="2" />
<text  x="500.30" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="59.7" y="1877" width="0.2" height="15.0" fill="rgb(209,70,13)" rx="2" ry="2" />
<text  x="62.66" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="55.3" y="1861" width="0.2" height="15.0" fill="rgb(239,60,15)" rx="2" ry="2" />
<text  x="58.29" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="518.4" y="1973" width="1.3" height="15.0" fill="rgb(220,73,48)" rx="2" ry="2" />
<text  x="521.35" y="1983.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="1127.2" y="1941" width="0.4" height="15.0" fill="rgb(254,17,40)" rx="2" ry="2" />
<text  x="1130.23" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1105.2" y="1749" width="0.2" height="15.0" fill="rgb(215,71,38)" rx="2" ry="2" />
<text  x="1108.18" y="1759.5" ></text>
</g>
<g >
<title>__ip_local_out (8 samples, 0.13%)</title><rect x="293.7" y="1781" width="1.6" height="15.0" fill="rgb(247,135,54)" rx="2" ry="2" />
<text  x="296.68" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (10 samples, 0.17%)</title><rect x="541.2" y="2005" width="2.0" height="15.0" fill="rgb(231,184,20)" rx="2" ry="2" />
<text  x="544.20" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="141.1" y="1797" width="0.2" height="15.0" fill="rgb(225,177,31)" rx="2" ry="2" />
<text  x="144.11" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="792.7" y="1509" width="0.2" height="15.0" fill="rgb(231,132,2)" rx="2" ry="2" />
<text  x="795.69" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="556.7" y="1957" width="0.2" height="15.0" fill="rgb(249,154,42)" rx="2" ry="2" />
<text  x="559.69" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="162.6" y="1941" width="0.2" height="15.0" fill="rgb(224,152,33)" rx="2" ry="2" />
<text  x="165.57" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (42 samples, 0.71%)</title><rect x="1108.9" y="1589" width="8.4" height="15.0" fill="rgb(236,89,44)" rx="2" ry="2" />
<text  x="1111.95" y="1599.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (2 samples, 0.03%)</title><rect x="550.7" y="1973" width="0.4" height="15.0" fill="rgb(213,7,32)" rx="2" ry="2" />
<text  x="553.73" y="1983.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="630.6" y="2005" width="0.6" height="15.0" fill="rgb(241,33,12)" rx="2" ry="2" />
<text  x="633.59" y="2015.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="198.7" y="2021" width="0.4" height="15.0" fill="rgb(205,12,43)" rx="2" ry="2" />
<text  x="201.72" y="2031.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="386.8" y="1909" width="0.2" height="15.0" fill="rgb(246,13,21)" rx="2" ry="2" />
<text  x="389.85" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(251,11,5)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="848.7" y="1589" width="0.2" height="15.0" fill="rgb(218,147,26)" rx="2" ry="2" />
<text  x="851.71" y="1599.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="825.1" y="1589" width="0.2" height="15.0" fill="rgb(211,1,3)" rx="2" ry="2" />
<text  x="828.07" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.2" y="1349" width="15.8" height="15.0" fill="rgb(254,104,3)" rx="2" ry="2" />
<text  x="108.15" y="1359.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (8 samples, 0.13%)</title><rect x="1141.3" y="2021" width="1.6" height="15.0" fill="rgb(216,113,50)" rx="2" ry="2" />
<text  x="1144.33" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.8" y="725" width="14.1" height="15.0" fill="rgb(252,188,50)" rx="2" ry="2" />
<text  x="108.75" y="735.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="489.7" y="1781" width="0.2" height="15.0" fill="rgb(218,182,45)" rx="2" ry="2" />
<text  x="492.75" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="489.7" y="1957" width="0.2" height="15.0" fill="rgb(234,179,20)" rx="2" ry="2" />
<text  x="492.75" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="757.5" y="1349" width="0.2" height="15.0" fill="rgb(253,124,1)" rx="2" ry="2" />
<text  x="760.53" y="1359.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1031.7" y="2005" width="0.2" height="15.0" fill="rgb(208,118,44)" rx="2" ry="2" />
<text  x="1034.67" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.56%)</title><rect x="1155.2" y="1941" width="6.6" height="15.0" fill="rgb(207,229,37)" rx="2" ry="2" />
<text  x="1158.24" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="154.8" y="1893" width="0.4" height="15.0" fill="rgb(229,76,21)" rx="2" ry="2" />
<text  x="157.82" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="1000.7" y="1973" width="0.4" height="15.0" fill="rgb(242,46,51)" rx="2" ry="2" />
<text  x="1003.68" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="556.7" y="1781" width="0.2" height="15.0" fill="rgb(223,221,15)" rx="2" ry="2" />
<text  x="559.69" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="871.2" y="1973" width="0.4" height="15.0" fill="rgb(242,182,33)" rx="2" ry="2" />
<text  x="874.16" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="901.6" y="1733" width="0.2" height="15.0" fill="rgb(251,5,29)" rx="2" ry="2" />
<text  x="904.56" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="114.5" y="37" width="0.2" height="15.0" fill="rgb(229,132,18)" rx="2" ry="2" />
<text  x="117.49" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="636.8" y="1925" width="0.1" height="15.0" fill="rgb(218,152,25)" rx="2" ry="2" />
<text  x="639.75" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (5 samples, 0.08%)</title><rect x="1014.6" y="1989" width="1.0" height="15.0" fill="rgb(252,221,32)" rx="2" ry="2" />
<text  x="1017.59" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="901.2" y="1973" width="0.2" height="15.0" fill="rgb(217,102,46)" rx="2" ry="2" />
<text  x="904.16" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="704.7" y="1973" width="0.2" height="15.0" fill="rgb(251,25,3)" rx="2" ry="2" />
<text  x="707.69" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="889.6" y="1893" width="0.2" height="15.0" fill="rgb(218,109,18)" rx="2" ry="2" />
<text  x="892.64" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="160.2" y="1749" width="0.2" height="15.0" fill="rgb(244,56,25)" rx="2" ry="2" />
<text  x="163.18" y="1759.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="73.0" y="1669" width="0.2" height="15.0" fill="rgb(238,162,3)" rx="2" ry="2" />
<text  x="75.97" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="825.1" y="1605" width="0.2" height="15.0" fill="rgb(211,139,23)" rx="2" ry="2" />
<text  x="828.07" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1031.7" y="2021" width="0.2" height="15.0" fill="rgb(234,60,43)" rx="2" ry="2" />
<text  x="1034.67" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="157.8" y="1765" width="0.2" height="15.0" fill="rgb(213,172,22)" rx="2" ry="2" />
<text  x="160.80" y="1775.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1008.6" y="1909" width="0.2" height="15.0" fill="rgb(236,203,27)" rx="2" ry="2" />
<text  x="1011.63" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="337.4" y="1589" width="0.2" height="15.0" fill="rgb(248,42,47)" rx="2" ry="2" />
<text  x="340.38" y="1599.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="967.1" y="1973" width="0.6" height="15.0" fill="rgb(236,206,9)" rx="2" ry="2" />
<text  x="970.11" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="960.6" y="1925" width="0.2" height="15.0" fill="rgb(222,153,25)" rx="2" ry="2" />
<text  x="963.56" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="387.4" y="1893" width="0.2" height="15.0" fill="rgb(235,12,48)" rx="2" ry="2" />
<text  x="390.44" y="1903.5" ></text>
</g>
<g >
<title>__ip_local_out (19 samples, 0.32%)</title><rect x="765.9" y="1637" width="3.7" height="15.0" fill="rgb(254,122,30)" rx="2" ry="2" />
<text  x="768.88" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="489.9" y="2005" width="0.2" height="15.0" fill="rgb(221,174,42)" rx="2" ry="2" />
<text  x="492.95" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="862.4" y="1733" width="0.2" height="15.0" fill="rgb(213,216,19)" rx="2" ry="2" />
<text  x="865.42" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62 samples, 1.04%)</title><rect x="679.3" y="1973" width="12.3" height="15.0" fill="rgb(241,117,29)" rx="2" ry="2" />
<text  x="682.26" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1177.5" y="2005" width="0.2" height="15.0" fill="rgb(225,187,54)" rx="2" ry="2" />
<text  x="1180.48" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="349.1" y="1749" width="0.2" height="15.0" fill="rgb(213,1,7)" rx="2" ry="2" />
<text  x="352.10" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="373.9" y="1861" width="0.2" height="15.0" fill="rgb(234,110,25)" rx="2" ry="2" />
<text  x="376.93" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="969.7" y="1941" width="0.2" height="15.0" fill="rgb(242,62,18)" rx="2" ry="2" />
<text  x="972.69" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="513.4" y="1637" width="0.2" height="15.0" fill="rgb(209,160,39)" rx="2" ry="2" />
<text  x="516.39" y="1647.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="73.0" y="1653" width="0.2" height="15.0" fill="rgb(239,5,36)" rx="2" ry="2" />
<text  x="75.97" y="1663.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="1127.2" y="2005" width="0.4" height="15.0" fill="rgb(231,103,17)" rx="2" ry="2" />
<text  x="1130.23" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1128.8" y="1861" width="0.4" height="15.0" fill="rgb(222,114,1)" rx="2" ry="2" />
<text  x="1131.81" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="162.8" y="1925" width="0.2" height="15.0" fill="rgb(236,69,16)" rx="2" ry="2" />
<text  x="165.76" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="757.5" y="1685" width="0.2" height="15.0" fill="rgb(211,122,44)" rx="2" ry="2" />
<text  x="760.53" y="1695.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1829" width="0.2" height="15.0" fill="rgb(216,152,40)" rx="2" ry="2" />
<text  x="1085.93" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="1142.5" y="1989" width="0.2" height="15.0" fill="rgb(229,45,3)" rx="2" ry="2" />
<text  x="1145.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="578.3" y="1957" width="0.2" height="15.0" fill="rgb(226,17,29)" rx="2" ry="2" />
<text  x="581.35" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="278.2" y="1797" width="0.2" height="15.0" fill="rgb(223,137,21)" rx="2" ry="2" />
<text  x="281.18" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (1 samples, 0.02%)</title><rect x="626.0" y="2037" width="0.2" height="15.0" fill="rgb(234,155,45)" rx="2" ry="2" />
<text  x="629.02" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="279.8" y="1685" width="0.2" height="15.0" fill="rgb(247,71,46)" rx="2" ry="2" />
<text  x="282.77" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="281.2" y="1797" width="0.2" height="15.0" fill="rgb(230,212,11)" rx="2" ry="2" />
<text  x="284.16" y="1807.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (18 samples, 0.30%)</title><rect x="99.8" y="2037" width="3.6" height="15.0" fill="rgb(248,4,34)" rx="2" ry="2" />
<text  x="102.79" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (18 samples, 0.30%)</title><rect x="156.0" y="1893" width="3.6" height="15.0" fill="rgb(206,119,27)" rx="2" ry="2" />
<text  x="159.01" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="279.8" y="1781" width="0.2" height="15.0" fill="rgb(247,50,32)" rx="2" ry="2" />
<text  x="282.77" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (67 samples, 1.13%)</title><rect x="587.1" y="1925" width="13.3" height="15.0" fill="rgb(206,155,37)" rx="2" ry="2" />
<text  x="590.09" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="698.3" y="1957" width="0.2" height="15.0" fill="rgb(235,214,49)" rx="2" ry="2" />
<text  x="701.33" y="1967.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="388.4" y="1941" width="1.2" height="15.0" fill="rgb(243,120,9)" rx="2" ry="2" />
<text  x="391.43" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="76.2" y="1957" width="0.2" height="15.0" fill="rgb(218,12,21)" rx="2" ry="2" />
<text  x="79.15" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="165.9" y="2005" width="0.2" height="15.0" fill="rgb(230,202,23)" rx="2" ry="2" />
<text  x="168.94" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="570.2" y="1973" width="0.4" height="15.0" fill="rgb(233,129,52)" rx="2" ry="2" />
<text  x="573.20" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (28 samples, 0.47%)</title><rect x="1005.5" y="2005" width="5.5" height="15.0" fill="rgb(218,200,42)" rx="2" ry="2" />
<text  x="1008.45" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.0" y="1861" width="0.2" height="15.0" fill="rgb(233,200,24)" rx="2" ry="2" />
<text  x="128.02" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="706.1" y="1877" width="1.2" height="15.0" fill="rgb(216,122,35)" rx="2" ry="2" />
<text  x="709.08" y="1887.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="783.2" y="1429" width="0.2" height="15.0" fill="rgb(224,2,22)" rx="2" ry="2" />
<text  x="786.16" y="1439.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (3 samples, 0.05%)</title><rect x="84.9" y="1893" width="0.6" height="15.0" fill="rgb(241,77,28)" rx="2" ry="2" />
<text  x="87.89" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="536.2" y="1877" width="0.2" height="15.0" fill="rgb(219,215,42)" rx="2" ry="2" />
<text  x="539.23" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="907.1" y="1989" width="0.2" height="15.0" fill="rgb(216,190,37)" rx="2" ry="2" />
<text  x="910.12" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="871.0" y="1957" width="0.2" height="15.0" fill="rgb(226,150,4)" rx="2" ry="2" />
<text  x="873.96" y="1967.5" ></text>
</g>
<g >
<title>sys_epoll_wait (97 samples, 1.63%)</title><rect x="496.9" y="1989" width="19.3" height="15.0" fill="rgb(231,60,33)" rx="2" ry="2" />
<text  x="499.90" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="1128.6" y="1941" width="0.6" height="15.0" fill="rgb(220,133,22)" rx="2" ry="2" />
<text  x="1131.62" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (6 samples, 0.10%)</title><rect x="702.9" y="1973" width="1.2" height="15.0" fill="rgb(239,117,0)" rx="2" ry="2" />
<text  x="705.90" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="489.2" y="1781" width="0.2" height="15.0" fill="rgb(219,6,1)" rx="2" ry="2" />
<text  x="492.15" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="905.3" y="2005" width="2.0" height="15.0" fill="rgb(226,176,4)" rx="2" ry="2" />
<text  x="908.33" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="619.7" y="1813" width="0.2" height="15.0" fill="rgb(247,193,33)" rx="2" ry="2" />
<text  x="622.67" y="1823.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="866.6" y="1989" width="0.8" height="15.0" fill="rgb(245,153,49)" rx="2" ry="2" />
<text  x="869.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="533" width="13.7" height="15.0" fill="rgb(241,200,23)" rx="2" ry="2" />
<text  x="108.75" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1142.1" y="1925" width="0.2" height="15.0" fill="rgb(233,177,17)" rx="2" ry="2" />
<text  x="1145.12" y="1935.5" ></text>
</g>
<g >
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="798.9" y="1669" width="0.5" height="15.0" fill="rgb(214,146,5)" rx="2" ry="2" />
<text  x="801.85" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="745.2" y="1733" width="0.2" height="15.0" fill="rgb(229,106,33)" rx="2" ry="2" />
<text  x="748.22" y="1743.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="519.1" y="1925" width="0.2" height="15.0" fill="rgb(213,71,28)" rx="2" ry="2" />
<text  x="522.15" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (6 samples, 0.10%)</title><rect x="54.5" y="1941" width="1.2" height="15.0" fill="rgb(236,5,46)" rx="2" ry="2" />
<text  x="57.50" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1012.2" y="1797" width="0.2" height="15.0" fill="rgb(253,80,29)" rx="2" ry="2" />
<text  x="1015.21" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="912.9" y="1973" width="0.2" height="15.0" fill="rgb(222,205,10)" rx="2" ry="2" />
<text  x="915.88" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="64.8" y="1877" width="0.2" height="15.0" fill="rgb(220,150,47)" rx="2" ry="2" />
<text  x="67.83" y="1887.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="855.9" y="1941" width="0.2" height="15.0" fill="rgb(210,204,26)" rx="2" ry="2" />
<text  x="858.87" y="1951.5" ></text>
</g>
<g >
<title>__copy_skb_header (4 samples, 0.07%)</title><rect x="326.3" y="1781" width="0.8" height="15.0" fill="rgb(228,189,34)" rx="2" ry="2" />
<text  x="329.26" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1161.8" y="1925" width="0.2" height="15.0" fill="rgb(248,92,39)" rx="2" ry="2" />
<text  x="1164.79" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="571.8" y="1957" width="0.2" height="15.0" fill="rgb(253,208,18)" rx="2" ry="2" />
<text  x="574.79" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="573.2" y="1909" width="0.2" height="15.0" fill="rgb(223,107,25)" rx="2" ry="2" />
<text  x="576.18" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="573.2" y="1973" width="0.2" height="15.0" fill="rgb(223,56,32)" rx="2" ry="2" />
<text  x="576.18" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1027.3" y="1781" width="0.2" height="15.0" fill="rgb(236,212,25)" rx="2" ry="2" />
<text  x="1030.30" y="1791.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="688.0" y="1909" width="0.4" height="15.0" fill="rgb(208,191,38)" rx="2" ry="2" />
<text  x="691.00" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="604.8" y="1845" width="0.2" height="15.0" fill="rgb(247,173,24)" rx="2" ry="2" />
<text  x="607.77" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (5 samples, 0.08%)</title><rect x="81.3" y="1909" width="1.0" height="15.0" fill="rgb(235,66,9)" rx="2" ry="2" />
<text  x="84.32" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="845.9" y="1893" width="0.2" height="15.0" fill="rgb(224,197,37)" rx="2" ry="2" />
<text  x="848.93" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="235.7" y="1893" width="0.2" height="15.0" fill="rgb(252,132,13)" rx="2" ry="2" />
<text  x="238.67" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="513.4" y="1829" width="0.2" height="15.0" fill="rgb(227,168,25)" rx="2" ry="2" />
<text  x="516.39" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="573.2" y="1813" width="0.2" height="15.0" fill="rgb(246,64,35)" rx="2" ry="2" />
<text  x="576.18" y="1823.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="931.2" y="1941" width="0.2" height="15.0" fill="rgb(237,162,9)" rx="2" ry="2" />
<text  x="934.15" y="1951.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="900.4" y="1941" width="0.2" height="15.0" fill="rgb(241,5,3)" rx="2" ry="2" />
<text  x="903.36" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="606.8" y="2005" width="0.2" height="15.0" fill="rgb(249,116,18)" rx="2" ry="2" />
<text  x="609.75" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="270.0" y="1845" width="0.2" height="15.0" fill="rgb(232,12,8)" rx="2" ry="2" />
<text  x="273.04" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="848.7" y="1781" width="0.2" height="15.0" fill="rgb(251,191,6)" rx="2" ry="2" />
<text  x="851.71" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="619.7" y="1765" width="0.2" height="15.0" fill="rgb(226,72,5)" rx="2" ry="2" />
<text  x="622.67" y="1775.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="61.6" y="1893" width="0.8" height="15.0" fill="rgb(239,194,45)" rx="2" ry="2" />
<text  x="64.65" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="412.7" y="1765" width="0.2" height="15.0" fill="rgb(227,13,49)" rx="2" ry="2" />
<text  x="415.67" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="819.3" y="1525" width="0.2" height="15.0" fill="rgb(212,25,40)" rx="2" ry="2" />
<text  x="822.31" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="792.5" y="1589" width="0.4" height="15.0" fill="rgb(238,82,13)" rx="2" ry="2" />
<text  x="795.49" y="1599.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="672.1" y="1813" width="0.6" height="15.0" fill="rgb(206,225,51)" rx="2" ry="2" />
<text  x="675.11" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="238.8" y="2021" width="0.2" height="15.0" fill="rgb(251,0,28)" rx="2" ry="2" />
<text  x="241.85" y="2031.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="566.0" y="1973" width="2.2" height="15.0" fill="rgb(252,131,17)" rx="2" ry="2" />
<text  x="569.03" y="1983.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1184.6" y="2053" width="0.2" height="15.0" fill="rgb(245,142,13)" rx="2" ry="2" />
<text  x="1187.64" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="30.3" y="1941" width="0.2" height="15.0" fill="rgb(248,107,26)" rx="2" ry="2" />
<text  x="33.26" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="68.6" y="1909" width="0.2" height="15.0" fill="rgb(240,55,18)" rx="2" ry="2" />
<text  x="71.60" y="1919.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (8 samples, 0.13%)</title><rect x="269.4" y="1877" width="1.6" height="15.0" fill="rgb(221,175,43)" rx="2" ry="2" />
<text  x="272.44" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="824.7" y="1861" width="0.6" height="15.0" fill="rgb(208,89,51)" rx="2" ry="2" />
<text  x="827.68" y="1871.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="1127.4" y="1925" width="0.2" height="15.0" fill="rgb(227,72,49)" rx="2" ry="2" />
<text  x="1130.42" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="874.5" y="1845" width="0.8" height="15.0" fill="rgb(210,142,54)" rx="2" ry="2" />
<text  x="877.54" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="337.0" y="1733" width="0.4" height="15.0" fill="rgb(226,156,8)" rx="2" ry="2" />
<text  x="339.98" y="1743.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="672.9" y="1813" width="1.0" height="15.0" fill="rgb(216,12,30)" rx="2" ry="2" />
<text  x="675.91" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1139.9" y="1973" width="0.2" height="15.0" fill="rgb(252,143,9)" rx="2" ry="2" />
<text  x="1142.94" y="1983.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="514.8" y="1541" width="0.2" height="15.0" fill="rgb(222,139,27)" rx="2" ry="2" />
<text  x="517.78" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="1179.5" y="2037" width="1.8" height="15.0" fill="rgb(229,90,27)" rx="2" ry="2" />
<text  x="1182.47" y="2047.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="14.6" y="1925" width="0.2" height="15.0" fill="rgb(227,86,48)" rx="2" ry="2" />
<text  x="17.57" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (17 samples, 0.29%)</title><rect x="224.5" y="1877" width="3.4" height="15.0" fill="rgb(239,222,21)" rx="2" ry="2" />
<text  x="227.55" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="349.3" y="1685" width="0.2" height="15.0" fill="rgb(220,120,35)" rx="2" ry="2" />
<text  x="352.30" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (44 samples, 0.74%)</title><rect x="1108.8" y="1685" width="8.7" height="15.0" fill="rgb(211,51,36)" rx="2" ry="2" />
<text  x="1111.75" y="1695.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (47 samples, 0.79%)</title><rect x="221.6" y="1909" width="9.3" height="15.0" fill="rgb(238,176,9)" rx="2" ry="2" />
<text  x="224.57" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="514.8" y="1829" width="0.2" height="15.0" fill="rgb(238,114,36)" rx="2" ry="2" />
<text  x="517.78" y="1839.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="280.0" y="1829" width="0.2" height="15.0" fill="rgb(229,89,18)" rx="2" ry="2" />
<text  x="282.97" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (192 samples, 3.23%)</title><rect x="581.9" y="2037" width="38.2" height="15.0" fill="rgb(228,218,48)" rx="2" ry="2" />
<text  x="584.92" y="2047.5" >fac..</text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="691.6" y="1973" width="2.6" height="15.0" fill="rgb(218,78,35)" rx="2" ry="2" />
<text  x="694.58" y="1983.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="412.7" y="1589" width="0.2" height="15.0" fill="rgb(225,183,20)" rx="2" ry="2" />
<text  x="415.67" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (89 samples, 1.50%)</title><rect x="517.0" y="2037" width="17.6" height="15.0" fill="rgb(207,164,14)" rx="2" ry="2" />
<text  x="519.96" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (14 samples, 0.24%)</title><rect x="890.4" y="1957" width="2.8" height="15.0" fill="rgb(210,189,6)" rx="2" ry="2" />
<text  x="893.43" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="298.6" y="1621" width="0.8" height="15.0" fill="rgb(224,202,51)" rx="2" ry="2" />
<text  x="301.64" y="1631.5" ></text>
</g>
<g >
<title>SYSC_getsockname (25 samples, 0.42%)</title><rect x="595.0" y="1877" width="5.0" height="15.0" fill="rgb(214,173,43)" rx="2" ry="2" />
<text  x="598.03" y="1887.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (4 samples, 0.07%)</title><rect x="605.2" y="1973" width="0.8" height="15.0" fill="rgb(244,24,23)" rx="2" ry="2" />
<text  x="608.16" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (1 samples, 0.02%)</title><rect x="582.7" y="2021" width="0.2" height="15.0" fill="rgb(233,120,30)" rx="2" ry="2" />
<text  x="585.72" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.8" y="1845" width="0.2" height="15.0" fill="rgb(252,163,39)" rx="2" ry="2" />
<text  x="160.80" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="893.4" y="1925" width="0.2" height="15.0" fill="rgb(252,124,19)" rx="2" ry="2" />
<text  x="896.41" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="530.5" y="1973" width="0.2" height="15.0" fill="rgb(254,157,12)" rx="2" ry="2" />
<text  x="533.47" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="388.0" y="1621" width="0.2" height="15.0" fill="rgb(216,41,2)" rx="2" ry="2" />
<text  x="391.04" y="1631.5" ></text>
</g>
<g >
<title>tcp_current_mss (18 samples, 0.30%)</title><rect x="816.7" y="1717" width="3.6" height="15.0" fill="rgb(246,141,27)" rx="2" ry="2" />
<text  x="819.73" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="208.1" y="1973" width="0.2" height="15.0" fill="rgb(239,209,34)" rx="2" ry="2" />
<text  x="211.06" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (5 samples, 0.08%)</title><rect x="401.9" y="1893" width="1.0" height="15.0" fill="rgb(236,70,18)" rx="2" ry="2" />
<text  x="404.94" y="1903.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="419.0" y="2037" width="0.2" height="15.0" fill="rgb(222,100,42)" rx="2" ry="2" />
<text  x="422.03" y="2047.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1011.0" y="1845" width="0.8" height="15.0" fill="rgb(246,91,12)" rx="2" ry="2" />
<text  x="1014.01" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="835.0" y="1861" width="0.2" height="15.0" fill="rgb(239,149,18)" rx="2" ry="2" />
<text  x="838.01" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="887.8" y="1861" width="0.6" height="15.0" fill="rgb(206,202,6)" rx="2" ry="2" />
<text  x="890.85" y="1871.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1059.9" y="1669" width="0.2" height="15.0" fill="rgb(214,212,1)" rx="2" ry="2" />
<text  x="1062.88" y="1679.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="800.4" y="1669" width="0.4" height="15.0" fill="rgb(225,67,7)" rx="2" ry="2" />
<text  x="803.44" y="1679.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1128.8" y="1733" width="0.2" height="15.0" fill="rgb(254,153,16)" rx="2" ry="2" />
<text  x="1131.81" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="105.0" y="1557" width="16.4" height="15.0" fill="rgb(238,227,0)" rx="2" ry="2" />
<text  x="107.96" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="829.6" y="1797" width="0.2" height="15.0" fill="rgb(238,164,3)" rx="2" ry="2" />
<text  x="832.64" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (19 samples, 0.32%)</title><rect x="180.0" y="1989" width="3.8" height="15.0" fill="rgb(237,134,51)" rx="2" ry="2" />
<text  x="183.05" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="862.4" y="1749" width="0.2" height="15.0" fill="rgb(219,12,54)" rx="2" ry="2" />
<text  x="865.42" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="412.7" y="1861" width="0.2" height="15.0" fill="rgb(240,152,49)" rx="2" ry="2" />
<text  x="415.67" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="629.0" y="2005" width="0.2" height="15.0" fill="rgb(243,80,30)" rx="2" ry="2" />
<text  x="632.00" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (18 samples, 0.30%)</title><rect x="1122.1" y="1941" width="3.5" height="15.0" fill="rgb(244,78,0)" rx="2" ry="2" />
<text  x="1125.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="705.9" y="1909" width="0.2" height="15.0" fill="rgb(241,219,49)" rx="2" ry="2" />
<text  x="708.88" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="565.8" y="1957" width="0.2" height="15.0" fill="rgb(216,15,49)" rx="2" ry="2" />
<text  x="568.83" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="159.6" y="1813" width="0.2" height="15.0" fill="rgb(231,192,12)" rx="2" ry="2" />
<text  x="162.59" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="894.6" y="1861" width="0.2" height="15.0" fill="rgb(207,96,33)" rx="2" ry="2" />
<text  x="897.60" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="33.4" y="1973" width="0.2" height="15.0" fill="rgb(252,129,48)" rx="2" ry="2" />
<text  x="36.44" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="894.4" y="1909" width="0.2" height="15.0" fill="rgb(216,124,34)" rx="2" ry="2" />
<text  x="897.40" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="333.6" y="1717" width="0.6" height="15.0" fill="rgb(234,58,20)" rx="2" ry="2" />
<text  x="336.61" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1125.4" y="1669" width="0.2" height="15.0" fill="rgb(214,78,12)" rx="2" ry="2" />
<text  x="1128.44" y="1679.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1033.5" y="1653" width="0.2" height="15.0" fill="rgb(249,136,1)" rx="2" ry="2" />
<text  x="1036.46" y="1663.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="125.6" y="1845" width="0.8" height="15.0" fill="rgb(211,9,18)" rx="2" ry="2" />
<text  x="128.62" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (2 samples, 0.03%)</title><rect x="878.5" y="1941" width="0.4" height="15.0" fill="rgb(232,136,52)" rx="2" ry="2" />
<text  x="881.51" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (8 samples, 0.13%)</title><rect x="990.4" y="1973" width="1.5" height="15.0" fill="rgb(250,48,10)" rx="2" ry="2" />
<text  x="993.35" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="513.4" y="1669" width="0.2" height="15.0" fill="rgb(222,0,28)" rx="2" ry="2" />
<text  x="516.39" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="148.1" y="1813" width="0.2" height="15.0" fill="rgb(208,196,0)" rx="2" ry="2" />
<text  x="151.06" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseStart (1 samples, 0.02%)</title><rect x="704.9" y="1989" width="0.2" height="15.0" fill="rgb(224,198,44)" rx="2" ry="2" />
<text  x="707.89" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="459.0" y="1973" width="0.2" height="15.0" fill="rgb(232,93,14)" rx="2" ry="2" />
<text  x="461.96" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (1 samples, 0.02%)</title><rect x="910.7" y="2037" width="0.2" height="15.0" fill="rgb(242,185,1)" rx="2" ry="2" />
<text  x="913.69" y="2047.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="483.0" y="1701" width="0.2" height="15.0" fill="rgb(246,7,34)" rx="2" ry="2" />
<text  x="485.99" y="1711.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="513.2" y="1749" width="0.2" height="15.0" fill="rgb(228,170,1)" rx="2" ry="2" />
<text  x="516.19" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="757.5" y="1509" width="0.2" height="15.0" fill="rgb(222,126,18)" rx="2" ry="2" />
<text  x="760.53" y="1519.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="690.8" y="1861" width="0.4" height="15.0" fill="rgb(240,0,26)" rx="2" ry="2" />
<text  x="693.78" y="1871.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (3 samples, 0.05%)</title><rect x="773.0" y="1573" width="0.6" height="15.0" fill="rgb(233,202,18)" rx="2" ry="2" />
<text  x="776.03" y="1583.5" ></text>
</g>
<g >
<title>__sys_sendmsg (475 samples, 8.00%)</title><rect x="253.9" y="1973" width="94.4" height="15.0" fill="rgb(217,184,40)" rx="2" ry="2" />
<text  x="256.95" y="1983.5" >__sys_sendmsg</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="177.9" y="1957" width="0.2" height="15.0" fill="rgb(248,204,1)" rx="2" ry="2" />
<text  x="180.86" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="1178.9" y="2053" width="2.4" height="15.0" fill="rgb(231,189,48)" rx="2" ry="2" />
<text  x="1181.88" y="2063.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="825.1" y="1573" width="0.2" height="15.0" fill="rgb(252,143,12)" rx="2" ry="2" />
<text  x="828.07" y="1583.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="347.1" y="1925" width="1.2" height="15.0" fill="rgb(236,89,43)" rx="2" ry="2" />
<text  x="350.11" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="846.3" y="1893" width="0.2" height="15.0" fill="rgb(224,37,24)" rx="2" ry="2" />
<text  x="849.33" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.2" y="1829" width="0.2" height="15.0" fill="rgb(222,88,15)" rx="2" ry="2" />
<text  x="163.18" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="60.1" y="1749" width="0.2" height="15.0" fill="rgb(229,51,28)" rx="2" ry="2" />
<text  x="63.06" y="1759.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="337.4" y="1557" width="0.2" height="15.0" fill="rgb(240,212,34)" rx="2" ry="2" />
<text  x="340.38" y="1567.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="124.6" y="1861" width="0.4" height="15.0" fill="rgb(231,123,20)" rx="2" ry="2" />
<text  x="127.62" y="1871.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="165.5" y="2005" width="0.2" height="15.0" fill="rgb(206,185,7)" rx="2" ry="2" />
<text  x="168.55" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="489.7" y="1973" width="0.2" height="15.0" fill="rgb(208,77,34)" rx="2" ry="2" />
<text  x="492.75" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="227.3" y="1765" width="0.2" height="15.0" fill="rgb(222,215,46)" rx="2" ry="2" />
<text  x="230.33" y="1775.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1106.0" y="1877" width="0.2" height="15.0" fill="rgb(250,3,0)" rx="2" ry="2" />
<text  x="1108.97" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="337.0" y="1589" width="0.4" height="15.0" fill="rgb(237,139,25)" rx="2" ry="2" />
<text  x="339.98" y="1599.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (9 samples, 0.15%)</title><rect x="1167.6" y="2053" width="1.7" height="15.0" fill="rgb(215,175,49)" rx="2" ry="2" />
<text  x="1170.55" y="2063.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (37 samples, 0.62%)</title><rect x="330.4" y="1813" width="7.4" height="15.0" fill="rgb(208,1,43)" rx="2" ry="2" />
<text  x="333.43" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (9 samples, 0.15%)</title><rect x="1143.3" y="2053" width="1.8" height="15.0" fill="rgb(212,222,31)" rx="2" ry="2" />
<text  x="1146.32" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="489.2" y="1717" width="0.2" height="15.0" fill="rgb(227,214,39)" rx="2" ry="2" />
<text  x="492.15" y="1727.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="1039.4" y="2053" width="0.4" height="15.0" fill="rgb(252,83,24)" rx="2" ry="2" />
<text  x="1042.42" y="2063.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (2 samples, 0.03%)</title><rect x="488.4" y="1973" width="0.4" height="15.0" fill="rgb(216,204,20)" rx="2" ry="2" />
<text  x="491.36" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="980.4" y="2037" width="0.2" height="15.0" fill="rgb(229,122,17)" rx="2" ry="2" />
<text  x="983.42" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="942.9" y="1941" width="0.4" height="15.0" fill="rgb(214,121,4)" rx="2" ry="2" />
<text  x="945.88" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="635.8" y="1941" width="0.2" height="15.0" fill="rgb(228,108,13)" rx="2" ry="2" />
<text  x="638.76" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (31 samples, 0.52%)</title><rect x="645.9" y="2021" width="6.1" height="15.0" fill="rgb(247,86,44)" rx="2" ry="2" />
<text  x="648.89" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="74.4" y="1685" width="0.2" height="15.0" fill="rgb(213,90,4)" rx="2" ry="2" />
<text  x="77.36" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="893.6" y="1957" width="0.2" height="15.0" fill="rgb(209,62,50)" rx="2" ry="2" />
<text  x="896.61" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="845.1" y="1749" width="0.2" height="15.0" fill="rgb(216,219,1)" rx="2" ry="2" />
<text  x="848.14" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (110 samples, 1.85%)</title><rect x="677.9" y="2037" width="21.8" height="15.0" fill="rgb(223,0,35)" rx="2" ry="2" />
<text  x="680.87" y="2047.5" >f..</text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="848.7" y="1861" width="0.4" height="15.0" fill="rgb(216,99,45)" rx="2" ry="2" />
<text  x="851.71" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="281.6" y="1797" width="0.2" height="15.0" fill="rgb(228,198,49)" rx="2" ry="2" />
<text  x="284.56" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1019.8" y="1957" width="0.7" height="15.0" fill="rgb(221,119,7)" rx="2" ry="2" />
<text  x="1022.75" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="253.4" y="1861" width="0.1" height="15.0" fill="rgb(206,198,27)" rx="2" ry="2" />
<text  x="256.35" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="635.6" y="1749" width="0.2" height="15.0" fill="rgb(237,26,51)" rx="2" ry="2" />
<text  x="638.56" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(232,66,31)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="845.9" y="1909" width="0.2" height="15.0" fill="rgb(208,1,16)" rx="2" ry="2" />
<text  x="848.93" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="574.2" y="1749" width="0.2" height="15.0" fill="rgb(252,192,29)" rx="2" ry="2" />
<text  x="577.18" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="321.9" y="1685" width="0.4" height="15.0" fill="rgb(210,9,38)" rx="2" ry="2" />
<text  x="324.89" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="22.9" y="1765" width="0.2" height="15.0" fill="rgb(211,40,5)" rx="2" ry="2" />
<text  x="25.91" y="1775.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="874.3" y="1909" width="1.0" height="15.0" fill="rgb(214,104,18)" rx="2" ry="2" />
<text  x="877.34" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="573.2" y="1941" width="0.2" height="15.0" fill="rgb(212,184,21)" rx="2" ry="2" />
<text  x="576.18" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (136 samples, 2.29%)</title><rect x="765.3" y="1653" width="27.0" height="15.0" fill="rgb(232,92,43)" rx="2" ry="2" />
<text  x="768.28" y="1663.5" >i..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="838.0" y="1925" width="0.2" height="15.0" fill="rgb(242,82,38)" rx="2" ry="2" />
<text  x="840.99" y="1935.5" ></text>
</g>
<g >
<title>irq_work_tick (1 samples, 0.02%)</title><rect x="373.9" y="1829" width="0.2" height="15.0" fill="rgb(217,186,34)" rx="2" ry="2" />
<text  x="376.93" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="849.7" y="1861" width="0.4" height="15.0" fill="rgb(235,14,32)" rx="2" ry="2" />
<text  x="852.71" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="798.7" y="1653" width="0.2" height="15.0" fill="rgb(254,84,41)" rx="2" ry="2" />
<text  x="801.65" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="326.9" y="1381" width="0.2" height="15.0" fill="rgb(251,37,30)" rx="2" ry="2" />
<text  x="329.85" y="1391.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (13 samples, 0.22%)</title><rect x="297.8" y="1733" width="2.6" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="300.85" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="389" width="13.5" height="15.0" fill="rgb(216,57,26)" rx="2" ry="2" />
<text  x="108.75" y="399.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="386.2" y="1877" width="0.2" height="15.0" fill="rgb(242,202,10)" rx="2" ry="2" />
<text  x="389.25" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="835.0" y="1781" width="0.2" height="15.0" fill="rgb(230,112,4)" rx="2" ry="2" />
<text  x="838.01" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="556.7" y="1765" width="0.2" height="15.0" fill="rgb(223,81,51)" rx="2" ry="2" />
<text  x="559.69" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="555.1" y="1845" width="0.2" height="15.0" fill="rgb(252,190,15)" rx="2" ry="2" />
<text  x="558.10" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="824.5" y="1861" width="0.2" height="15.0" fill="rgb(248,143,52)" rx="2" ry="2" />
<text  x="827.48" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="921.6" y="2005" width="1.2" height="15.0" fill="rgb(227,6,38)" rx="2" ry="2" />
<text  x="924.62" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="514.8" y="1557" width="0.2" height="15.0" fill="rgb(211,155,6)" rx="2" ry="2" />
<text  x="517.78" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="574.2" y="1765" width="0.2" height="15.0" fill="rgb(226,29,18)" rx="2" ry="2" />
<text  x="577.18" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="824.3" y="1829" width="0.2" height="15.0" fill="rgb(238,118,15)" rx="2" ry="2" />
<text  x="827.28" y="1839.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1011.0" y="1973" width="0.8" height="15.0" fill="rgb(234,173,0)" rx="2" ry="2" />
<text  x="1014.01" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1102.8" y="1717" width="0.2" height="15.0" fill="rgb(230,90,5)" rx="2" ry="2" />
<text  x="1105.79" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (85 samples, 1.43%)</title><rect x="144.7" y="1941" width="16.9" height="15.0" fill="rgb(220,190,52)" rx="2" ry="2" />
<text  x="147.69" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1033.5" y="1957" width="0.2" height="15.0" fill="rgb(222,73,3)" rx="2" ry="2" />
<text  x="1036.46" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="963.1" y="2005" width="0.2" height="15.0" fill="rgb(221,99,53)" rx="2" ry="2" />
<text  x="966.14" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="507.0" y="1749" width="0.2" height="15.0" fill="rgb(218,68,33)" rx="2" ry="2" />
<text  x="510.03" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.41%)</title><rect x="105.0" y="1589" width="16.6" height="15.0" fill="rgb(223,152,1)" rx="2" ry="2" />
<text  x="107.96" y="1599.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="87.1" y="1941" width="0.4" height="15.0" fill="rgb(235,196,1)" rx="2" ry="2" />
<text  x="90.08" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="388.0" y="1845" width="0.2" height="15.0" fill="rgb(239,107,31)" rx="2" ry="2" />
<text  x="391.04" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="373.9" y="1925" width="0.2" height="15.0" fill="rgb(245,121,27)" rx="2" ry="2" />
<text  x="376.93" y="1935.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="14.6" y="2053" width="1.2" height="15.0" fill="rgb(224,197,9)" rx="2" ry="2" />
<text  x="17.57" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="906.3" y="1925" width="0.2" height="15.0" fill="rgb(224,31,42)" rx="2" ry="2" />
<text  x="909.32" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="522.7" y="1973" width="1.0" height="15.0" fill="rgb(242,28,3)" rx="2" ry="2" />
<text  x="525.72" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="700.7" y="2037" width="0.6" height="15.0" fill="rgb(243,171,22)" rx="2" ry="2" />
<text  x="703.72" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="571.2" y="1957" width="0.2" height="15.0" fill="rgb(233,26,13)" rx="2" ry="2" />
<text  x="574.20" y="1967.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="513.4" y="1573" width="0.2" height="15.0" fill="rgb(221,213,44)" rx="2" ry="2" />
<text  x="516.39" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="1033.7" y="2005" width="0.4" height="15.0" fill="rgb(227,227,51)" rx="2" ry="2" />
<text  x="1036.66" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="137.5" y="1957" width="0.2" height="15.0" fill="rgb(245,159,25)" rx="2" ry="2" />
<text  x="140.54" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="158.8" y="1861" width="0.8" height="15.0" fill="rgb(207,66,8)" rx="2" ry="2" />
<text  x="161.79" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="748.8" y="1525" width="0.2" height="15.0" fill="rgb(244,102,18)" rx="2" ry="2" />
<text  x="751.79" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="222.6" y="1765" width="0.2" height="15.0" fill="rgb(226,205,50)" rx="2" ry="2" />
<text  x="225.56" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="387.6" y="1861" width="0.2" height="15.0" fill="rgb(246,170,9)" rx="2" ry="2" />
<text  x="390.64" y="1871.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="761.1" y="1685" width="0.2" height="15.0" fill="rgb(231,189,10)" rx="2" ry="2" />
<text  x="764.11" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="526.1" y="1957" width="0.2" height="15.0" fill="rgb(216,208,14)" rx="2" ry="2" />
<text  x="529.10" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="497.7" y="1685" width="0.2" height="15.0" fill="rgb(224,90,1)" rx="2" ry="2" />
<text  x="500.69" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="392.4" y="1781" width="0.2" height="15.0" fill="rgb(248,202,24)" rx="2" ry="2" />
<text  x="395.41" y="1791.5" ></text>
</g>
<g >
<title>skb_put (2 samples, 0.03%)</title><rect x="283.3" y="1877" width="0.4" height="15.0" fill="rgb(227,11,22)" rx="2" ry="2" />
<text  x="286.35" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="571.0" y="1893" width="0.2" height="15.0" fill="rgb(228,46,48)" rx="2" ry="2" />
<text  x="574.00" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="60.1" y="1877" width="0.2" height="15.0" fill="rgb(244,148,50)" rx="2" ry="2" />
<text  x="63.06" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="555.1" y="1877" width="0.2" height="15.0" fill="rgb(241,33,30)" rx="2" ry="2" />
<text  x="558.10" y="1887.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="298.8" y="1445" width="0.2" height="15.0" fill="rgb(233,50,25)" rx="2" ry="2" />
<text  x="301.84" y="1455.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.02%)</title><rect x="73.4" y="1893" width="0.2" height="15.0" fill="rgb(230,17,11)" rx="2" ry="2" />
<text  x="76.37" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="74.4" y="1941" width="0.2" height="15.0" fill="rgb(210,170,15)" rx="2" ry="2" />
<text  x="77.36" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1176.7" y="1957" width="0.2" height="15.0" fill="rgb(210,134,32)" rx="2" ry="2" />
<text  x="1179.69" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="600.6" y="1877" width="0.2" height="15.0" fill="rgb(220,152,22)" rx="2" ry="2" />
<text  x="603.60" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="526.7" y="1925" width="0.4" height="15.0" fill="rgb(208,131,6)" rx="2" ry="2" />
<text  x="529.70" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="896.0" y="1893" width="0.2" height="15.0" fill="rgb(214,157,41)" rx="2" ry="2" />
<text  x="898.99" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (4 samples, 0.07%)</title><rect x="26.7" y="1973" width="0.8" height="15.0" fill="rgb(231,8,44)" rx="2" ry="2" />
<text  x="29.69" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="326.7" y="1653" width="0.4" height="15.0" fill="rgb(228,175,39)" rx="2" ry="2" />
<text  x="329.65" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="757.5" y="1429" width="0.2" height="15.0" fill="rgb(214,126,46)" rx="2" ry="2" />
<text  x="760.53" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="638.5" y="1925" width="0.6" height="15.0" fill="rgb(218,157,9)" rx="2" ry="2" />
<text  x="641.54" y="1935.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="279.8" y="1621" width="0.2" height="15.0" fill="rgb(225,83,22)" rx="2" ry="2" />
<text  x="282.77" y="1631.5" ></text>
</g>
<g >
<title>ip_queue_xmit (154 samples, 2.59%)</title><rect x="291.3" y="1813" width="30.6" height="15.0" fill="rgb(237,59,16)" rx="2" ry="2" />
<text  x="294.29" y="1823.5" >ip..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="51.1" y="1877" width="0.2" height="15.0" fill="rgb(214,95,48)" rx="2" ry="2" />
<text  x="54.12" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1010.6" y="1989" width="0.2" height="15.0" fill="rgb(237,28,23)" rx="2" ry="2" />
<text  x="1013.62" y="1999.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="934.9" y="1909" width="0.2" height="15.0" fill="rgb(212,174,32)" rx="2" ry="2" />
<text  x="937.93" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="317.3" y="1589" width="0.2" height="15.0" fill="rgb(213,144,53)" rx="2" ry="2" />
<text  x="320.32" y="1599.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (9 samples, 0.15%)</title><rect x="840.0" y="1925" width="1.8" height="15.0" fill="rgb(251,86,18)" rx="2" ry="2" />
<text  x="842.97" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="333.6" y="1653" width="0.6" height="15.0" fill="rgb(205,101,5)" rx="2" ry="2" />
<text  x="336.61" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="73.0" y="1813" width="0.2" height="15.0" fill="rgb(253,201,54)" rx="2" ry="2" />
<text  x="75.97" y="1823.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="304.2" y="1685" width="0.2" height="15.0" fill="rgb(220,99,30)" rx="2" ry="2" />
<text  x="307.21" y="1695.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="299.6" y="1429" width="0.6" height="15.0" fill="rgb(238,95,2)" rx="2" ry="2" />
<text  x="302.64" y="1439.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="271.6" y="1861" width="0.2" height="15.0" fill="rgb(236,86,31)" rx="2" ry="2" />
<text  x="274.63" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="769.5" y="1557" width="0.1" height="15.0" fill="rgb(232,152,25)" rx="2" ry="2" />
<text  x="772.45" y="1567.5" ></text>
</g>
<g >
<title>__skb_clone (25 samples, 0.42%)</title><rect x="793.3" y="1653" width="5.0" height="15.0" fill="rgb(240,71,8)" rx="2" ry="2" />
<text  x="796.29" y="1663.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="600.4" y="1861" width="0.2" height="15.0" fill="rgb(208,122,32)" rx="2" ry="2" />
<text  x="603.40" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="893.4" y="1861" width="0.2" height="15.0" fill="rgb(236,154,24)" rx="2" ry="2" />
<text  x="896.41" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="895.4" y="1717" width="0.2" height="15.0" fill="rgb(243,45,35)" rx="2" ry="2" />
<text  x="898.40" y="1727.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="757.5" y="1397" width="0.2" height="15.0" fill="rgb(226,140,45)" rx="2" ry="2" />
<text  x="760.53" y="1407.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (2 samples, 0.03%)</title><rect x="924.4" y="1989" width="0.4" height="15.0" fill="rgb(220,67,8)" rx="2" ry="2" />
<text  x="927.40" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1012.2" y="1845" width="0.2" height="15.0" fill="rgb(215,19,33)" rx="2" ry="2" />
<text  x="1015.21" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.15%)</title><rect x="10.6" y="2021" width="1.8" height="15.0" fill="rgb(235,199,43)" rx="2" ry="2" />
<text  x="13.60" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="327.1" y="1765" width="0.3" height="15.0" fill="rgb(237,123,45)" rx="2" ry="2" />
<text  x="330.05" y="1775.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1011.0" y="1941" width="0.8" height="15.0" fill="rgb(214,124,17)" rx="2" ry="2" />
<text  x="1014.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (1 samples, 0.02%)</title><rect x="1140.1" y="2053" width="0.2" height="15.0" fill="rgb(241,223,7)" rx="2" ry="2" />
<text  x="1143.14" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="571.0" y="1877" width="0.2" height="15.0" fill="rgb(251,147,6)" rx="2" ry="2" />
<text  x="574.00" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="824.7" y="1829" width="0.6" height="15.0" fill="rgb(208,140,26)" rx="2" ry="2" />
<text  x="827.68" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="311.4" y="1605" width="0.2" height="15.0" fill="rgb(208,6,42)" rx="2" ry="2" />
<text  x="314.36" y="1615.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="783.0" y="1429" width="0.2" height="15.0" fill="rgb(251,147,53)" rx="2" ry="2" />
<text  x="785.96" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (8 samples, 0.13%)</title><rect x="851.3" y="1893" width="1.6" height="15.0" fill="rgb(212,215,4)" rx="2" ry="2" />
<text  x="854.30" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (1 samples, 0.02%)</title><rect x="87.5" y="1973" width="0.2" height="15.0" fill="rgb(214,53,0)" rx="2" ry="2" />
<text  x="90.47" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="580.1" y="2021" width="0.6" height="15.0" fill="rgb(247,23,36)" rx="2" ry="2" />
<text  x="583.13" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="835.8" y="1909" width="0.2" height="15.0" fill="rgb(235,181,25)" rx="2" ry="2" />
<text  x="838.80" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="574.2" y="1861" width="0.2" height="15.0" fill="rgb(246,14,30)" rx="2" ry="2" />
<text  x="577.18" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="379.7" y="1925" width="0.2" height="15.0" fill="rgb(211,13,33)" rx="2" ry="2" />
<text  x="382.69" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="349.1" y="1765" width="0.4" height="15.0" fill="rgb(223,188,20)" rx="2" ry="2" />
<text  x="352.10" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="417.0" y="1861" width="0.4" height="15.0" fill="rgb(243,135,52)" rx="2" ry="2" />
<text  x="420.04" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="356.5" y="2021" width="0.1" height="15.0" fill="rgb(223,165,9)" rx="2" ry="2" />
<text  x="359.45" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (5 samples, 0.08%)</title><rect x="776.2" y="1541" width="1.0" height="15.0" fill="rgb(227,213,49)" rx="2" ry="2" />
<text  x="779.21" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="748.8" y="1637" width="0.2" height="15.0" fill="rgb(225,102,5)" rx="2" ry="2" />
<text  x="751.79" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="955.8" y="2005" width="0.2" height="15.0" fill="rgb(236,85,28)" rx="2" ry="2" />
<text  x="958.79" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="958.8" y="1989" width="0.2" height="15.0" fill="rgb(205,148,5)" rx="2" ry="2" />
<text  x="961.77" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1012.2" y="1941" width="0.2" height="15.0" fill="rgb(215,127,49)" rx="2" ry="2" />
<text  x="1015.21" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="180.6" y="1957" width="0.2" height="15.0" fill="rgb(240,189,15)" rx="2" ry="2" />
<text  x="183.64" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="845.1" y="1765" width="0.2" height="15.0" fill="rgb(243,128,47)" rx="2" ry="2" />
<text  x="848.14" y="1775.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="316.9" y="1637" width="0.2" height="15.0" fill="rgb(216,66,13)" rx="2" ry="2" />
<text  x="319.92" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="757.5" y="1541" width="0.2" height="15.0" fill="rgb(217,67,48)" rx="2" ry="2" />
<text  x="760.53" y="1551.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="91.4" y="1957" width="0.2" height="15.0" fill="rgb(232,130,53)" rx="2" ry="2" />
<text  x="94.45" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="140.9" y="1973" width="0.2" height="15.0" fill="rgb(237,78,20)" rx="2" ry="2" />
<text  x="143.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="171.9" y="1717" width="0.2" height="15.0" fill="rgb(249,57,14)" rx="2" ry="2" />
<text  x="174.90" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="845.1" y="1941" width="0.2" height="15.0" fill="rgb(250,142,25)" rx="2" ry="2" />
<text  x="848.14" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="571.8" y="1685" width="0.2" height="15.0" fill="rgb(235,89,9)" rx="2" ry="2" />
<text  x="574.79" y="1695.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="1169.5" y="1957" width="0.2" height="15.0" fill="rgb(219,67,14)" rx="2" ry="2" />
<text  x="1172.54" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="489.2" y="1749" width="0.2" height="15.0" fill="rgb(241,186,38)" rx="2" ry="2" />
<text  x="492.15" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="555.1" y="1797" width="0.2" height="15.0" fill="rgb(246,96,15)" rx="2" ry="2" />
<text  x="558.10" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="565.0" y="1701" width="0.2" height="15.0" fill="rgb(232,202,54)" rx="2" ry="2" />
<text  x="568.04" y="1711.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (3 samples, 0.05%)</title><rect x="1178.3" y="2053" width="0.6" height="15.0" fill="rgb(244,166,18)" rx="2" ry="2" />
<text  x="1181.28" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="672.5" y="1717" width="0.2" height="15.0" fill="rgb(216,202,20)" rx="2" ry="2" />
<text  x="675.51" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1142.1" y="1989" width="0.4" height="15.0" fill="rgb(249,223,24)" rx="2" ry="2" />
<text  x="1145.12" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="333.8" y="1509" width="0.4" height="15.0" fill="rgb(214,192,22)" rx="2" ry="2" />
<text  x="336.80" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="555.1" y="1861" width="0.2" height="15.0" fill="rgb(250,86,47)" rx="2" ry="2" />
<text  x="558.10" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="574.2" y="1829" width="0.2" height="15.0" fill="rgb(239,98,40)" rx="2" ry="2" />
<text  x="577.18" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="513.2" y="1765" width="0.2" height="15.0" fill="rgb(212,14,17)" rx="2" ry="2" />
<text  x="516.19" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="75.8" y="1877" width="0.2" height="15.0" fill="rgb(216,24,40)" rx="2" ry="2" />
<text  x="78.75" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="339.4" y="1829" width="0.2" height="15.0" fill="rgb(237,34,50)" rx="2" ry="2" />
<text  x="342.37" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1109" width="14.7" height="15.0" fill="rgb(246,95,1)" rx="2" ry="2" />
<text  x="108.35" y="1119.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="941.5" y="1973" width="0.4" height="15.0" fill="rgb(213,197,15)" rx="2" ry="2" />
<text  x="944.48" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.0" y="1333" width="0.2" height="15.0" fill="rgb(216,118,2)" rx="2" ry="2" />
<text  x="124.05" y="1343.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="386.2" y="1845" width="0.2" height="15.0" fill="rgb(207,199,28)" rx="2" ry="2" />
<text  x="389.25" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="163.2" y="1781" width="0.2" height="15.0" fill="rgb(226,91,22)" rx="2" ry="2" />
<text  x="166.16" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="619.7" y="1877" width="0.2" height="15.0" fill="rgb(235,220,39)" rx="2" ry="2" />
<text  x="622.67" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="523.5" y="1941" width="0.2" height="15.0" fill="rgb(237,152,11)" rx="2" ry="2" />
<text  x="526.52" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="619.7" y="1973" width="0.2" height="15.0" fill="rgb(216,167,16)" rx="2" ry="2" />
<text  x="622.67" y="1983.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="14.8" y="1941" width="1.0" height="15.0" fill="rgb(253,124,45)" rx="2" ry="2" />
<text  x="17.77" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (18 samples, 0.30%)</title><rect x="239.8" y="2021" width="3.6" height="15.0" fill="rgb(246,217,16)" rx="2" ry="2" />
<text  x="242.84" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="154.6" y="1829" width="0.2" height="15.0" fill="rgb(225,217,24)" rx="2" ry="2" />
<text  x="157.62" y="1839.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="83.1" y="1925" width="0.2" height="15.0" fill="rgb(208,156,47)" rx="2" ry="2" />
<text  x="86.10" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="536.2" y="1749" width="0.2" height="15.0" fill="rgb(205,104,3)" rx="2" ry="2" />
<text  x="539.23" y="1759.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="791.5" y="1509" width="0.2" height="15.0" fill="rgb(230,67,9)" rx="2" ry="2" />
<text  x="794.50" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="555.1" y="1813" width="0.2" height="15.0" fill="rgb(209,204,49)" rx="2" ry="2" />
<text  x="558.10" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="441.3" y="1957" width="0.4" height="15.0" fill="rgb(233,163,34)" rx="2" ry="2" />
<text  x="444.28" y="1967.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="1117.7" y="1717" width="0.2" height="15.0" fill="rgb(207,217,40)" rx="2" ry="2" />
<text  x="1120.69" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="163.2" y="1845" width="0.2" height="15.0" fill="rgb(241,163,10)" rx="2" ry="2" />
<text  x="166.16" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="208.3" y="2005" width="0.2" height="15.0" fill="rgb(207,151,26)" rx="2" ry="2" />
<text  x="211.26" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="295.1" y="1733" width="0.2" height="15.0" fill="rgb(216,229,40)" rx="2" ry="2" />
<text  x="298.07" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="337.0" y="1541" width="0.2" height="15.0" fill="rgb(234,14,32)" rx="2" ry="2" />
<text  x="339.98" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="514.8" y="1861" width="0.2" height="15.0" fill="rgb(239,94,38)" rx="2" ry="2" />
<text  x="517.78" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (5 samples, 0.08%)</title><rect x="616.7" y="1989" width="1.0" height="15.0" fill="rgb(248,212,29)" rx="2" ry="2" />
<text  x="619.69" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (80 samples, 1.35%)</title><rect x="986.0" y="2005" width="15.9" height="15.0" fill="rgb(206,139,18)" rx="2" ry="2" />
<text  x="988.98" y="2015.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1011.0" y="1893" width="0.8" height="15.0" fill="rgb(208,8,21)" rx="2" ry="2" />
<text  x="1014.01" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (13 samples, 0.22%)</title><rect x="297.8" y="1717" width="2.6" height="15.0" fill="rgb(224,19,2)" rx="2" ry="2" />
<text  x="300.85" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="177.5" y="1957" width="0.2" height="15.0" fill="rgb(235,58,18)" rx="2" ry="2" />
<text  x="180.46" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="291.1" y="1701" width="0.2" height="15.0" fill="rgb(240,58,11)" rx="2" ry="2" />
<text  x="294.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 1.97%)</title><rect x="104.2" y="1973" width="23.2" height="15.0" fill="rgb(229,68,17)" rx="2" ry="2" />
<text  x="107.16" y="1983.5" >[..</text>
</g>
<g >
<title>mcrouter (5,911 samples, 99.51%)</title><rect x="15.8" y="2069" width="1174.2" height="15.0" fill="rgb(216,5,9)" rx="2" ry="2" />
<text  x="18.76" y="2079.5" >mcrouter</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (6 samples, 0.10%)</title><rect x="172.7" y="2005" width="1.2" height="15.0" fill="rgb(251,5,9)" rx="2" ry="2" />
<text  x="175.70" y="2015.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="514.8" y="1573" width="0.2" height="15.0" fill="rgb(252,137,52)" rx="2" ry="2" />
<text  x="517.78" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="507.0" y="1669" width="0.2" height="15.0" fill="rgb(241,6,26)" rx="2" ry="2" />
<text  x="510.03" y="1679.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="880.1" y="1925" width="0.2" height="15.0" fill="rgb(225,191,46)" rx="2" ry="2" />
<text  x="883.10" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1011.0" y="1909" width="0.8" height="15.0" fill="rgb(219,220,52)" rx="2" ry="2" />
<text  x="1014.01" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="606.8" y="2021" width="0.2" height="15.0" fill="rgb(241,59,42)" rx="2" ry="2" />
<text  x="609.75" y="2031.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (6 samples, 0.10%)</title><rect x="556.1" y="1989" width="1.2" height="15.0" fill="rgb(244,50,51)" rx="2" ry="2" />
<text  x="559.10" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1012.2" y="1781" width="0.2" height="15.0" fill="rgb(252,78,15)" rx="2" ry="2" />
<text  x="1015.21" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="337.0" y="1749" width="0.4" height="15.0" fill="rgb(247,131,44)" rx="2" ry="2" />
<text  x="339.98" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.13%)</title><rect x="1181.9" y="2021" width="1.5" height="15.0" fill="rgb(243,79,4)" rx="2" ry="2" />
<text  x="1184.86" y="2031.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="69.8" y="1845" width="0.4" height="15.0" fill="rgb(242,178,10)" rx="2" ry="2" />
<text  x="72.79" y="1855.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (51 samples, 0.86%)</title><rect x="1107.8" y="1877" width="10.1" height="15.0" fill="rgb(210,38,5)" rx="2" ry="2" />
<text  x="1110.76" y="1887.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="336.6" y="1717" width="0.2" height="15.0" fill="rgb(223,204,47)" rx="2" ry="2" />
<text  x="339.59" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1160.8" y="1525" width="0.2" height="15.0" fill="rgb(225,39,2)" rx="2" ry="2" />
<text  x="1163.80" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="982.8" y="2005" width="0.6" height="15.0" fill="rgb(246,34,12)" rx="2" ry="2" />
<text  x="985.80" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="691.2" y="1685" width="0.2" height="15.0" fill="rgb(250,214,2)" rx="2" ry="2" />
<text  x="694.18" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="489.9" y="1941" width="0.2" height="15.0" fill="rgb(235,201,47)" rx="2" ry="2" />
<text  x="492.95" y="1951.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="277.4" y="1781" width="0.2" height="15.0" fill="rgb(250,69,23)" rx="2" ry="2" />
<text  x="280.39" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (21 samples, 0.35%)</title><rect x="1146.1" y="2053" width="4.2" height="15.0" fill="rgb(251,213,0)" rx="2" ry="2" />
<text  x="1149.10" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="526.3" y="1957" width="1.0" height="15.0" fill="rgb(210,212,26)" rx="2" ry="2" />
<text  x="529.30" y="1967.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="852.9" y="1941" width="0.4" height="15.0" fill="rgb(207,177,6)" rx="2" ry="2" />
<text  x="855.89" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1027.3" y="1733" width="0.2" height="15.0" fill="rgb(235,133,41)" rx="2" ry="2" />
<text  x="1030.30" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="654.8" y="2005" width="0.4" height="15.0" fill="rgb(208,200,49)" rx="2" ry="2" />
<text  x="657.83" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1102.8" y="1765" width="0.2" height="15.0" fill="rgb(235,121,33)" rx="2" ry="2" />
<text  x="1105.79" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="281.2" y="1685" width="0.2" height="15.0" fill="rgb(244,54,38)" rx="2" ry="2" />
<text  x="284.16" y="1695.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="598.8" y="1829" width="1.2" height="15.0" fill="rgb(229,91,21)" rx="2" ry="2" />
<text  x="601.81" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="135.9" y="1925" width="0.2" height="15.0" fill="rgb(253,190,29)" rx="2" ry="2" />
<text  x="138.95" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="629.2" y="2005" width="1.4" height="15.0" fill="rgb(218,202,12)" rx="2" ry="2" />
<text  x="632.20" y="2015.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="536.2" y="1557" width="0.2" height="15.0" fill="rgb(213,201,39)" rx="2" ry="2" />
<text  x="539.23" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="159.6" y="1717" width="0.2" height="15.0" fill="rgb(244,194,16)" rx="2" ry="2" />
<text  x="162.59" y="1727.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="483.0" y="1653" width="0.2" height="15.0" fill="rgb(254,152,15)" rx="2" ry="2" />
<text  x="485.99" y="1663.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="1019.8" y="1829" width="0.2" height="15.0" fill="rgb(247,105,47)" rx="2" ry="2" />
<text  x="1022.75" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1012.2" y="1861" width="0.2" height="15.0" fill="rgb(254,168,44)" rx="2" ry="2" />
<text  x="1015.21" y="1871.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="100.8" y="1957" width="0.2" height="15.0" fill="rgb(252,167,20)" rx="2" ry="2" />
<text  x="103.78" y="1967.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="769.5" y="1461" width="0.1" height="15.0" fill="rgb(211,33,15)" rx="2" ry="2" />
<text  x="772.45" y="1471.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="172.3" y="2005" width="0.2" height="15.0" fill="rgb(234,194,11)" rx="2" ry="2" />
<text  x="175.30" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="555.1" y="1749" width="0.2" height="15.0" fill="rgb(253,72,31)" rx="2" ry="2" />
<text  x="558.10" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="180.0" y="1973" width="2.6" height="15.0" fill="rgb(241,30,25)" rx="2" ry="2" />
<text  x="183.05" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="73.0" y="1717" width="0.2" height="15.0" fill="rgb(247,26,4)" rx="2" ry="2" />
<text  x="75.97" y="1727.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="534.8" y="1925" width="0.4" height="15.0" fill="rgb(223,1,46)" rx="2" ry="2" />
<text  x="537.84" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="149.5" y="1877" width="0.2" height="15.0" fill="rgb(230,42,54)" rx="2" ry="2" />
<text  x="152.45" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1102.8" y="1701" width="0.2" height="15.0" fill="rgb(207,89,23)" rx="2" ry="2" />
<text  x="1105.79" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="635.6" y="1781" width="0.2" height="15.0" fill="rgb(216,181,32)" rx="2" ry="2" />
<text  x="638.56" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.26%)</title><rect x="105.4" y="1237" width="14.9" height="15.0" fill="rgb(218,119,52)" rx="2" ry="2" />
<text  x="108.35" y="1247.5" ></text>
</g>
<g >
<title>__libc_sendmsg (572 samples, 9.63%)</title><rect x="239.2" y="2037" width="113.7" height="15.0" fill="rgb(254,199,18)" rx="2" ry="2" />
<text  x="242.25" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1027.1" y="1989" width="0.6" height="15.0" fill="rgb(222,8,11)" rx="2" ry="2" />
<text  x="1030.10" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="507.0" y="1797" width="0.2" height="15.0" fill="rgb(239,40,5)" rx="2" ry="2" />
<text  x="510.03" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="748.8" y="1589" width="0.2" height="15.0" fill="rgb(247,173,5)" rx="2" ry="2" />
<text  x="751.79" y="1599.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="59.9" y="1909" width="0.2" height="15.0" fill="rgb(244,218,7)" rx="2" ry="2" />
<text  x="62.86" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="78.5" y="1957" width="0.2" height="15.0" fill="rgb(233,221,22)" rx="2" ry="2" />
<text  x="81.54" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.05%)</title><rect x="1007.4" y="1973" width="0.6" height="15.0" fill="rgb(230,76,11)" rx="2" ry="2" />
<text  x="1010.44" y="1983.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (13 samples, 0.22%)</title><rect x="297.8" y="1701" width="2.6" height="15.0" fill="rgb(214,96,31)" rx="2" ry="2" />
<text  x="300.85" y="1711.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="127.8" y="1989" width="0.2" height="15.0" fill="rgb(240,177,47)" rx="2" ry="2" />
<text  x="130.80" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1142.1" y="1973" width="0.2" height="15.0" fill="rgb(210,183,51)" rx="2" ry="2" />
<text  x="1145.12" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (4 samples, 0.07%)</title><rect x="962.3" y="2005" width="0.8" height="15.0" fill="rgb(219,25,15)" rx="2" ry="2" />
<text  x="965.34" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1019.6" y="1989" width="0.2" height="15.0" fill="rgb(244,150,51)" rx="2" ry="2" />
<text  x="1022.56" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="953.2" y="1973" width="1.0" height="15.0" fill="rgb(209,3,23)" rx="2" ry="2" />
<text  x="956.21" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="421" width="13.5" height="15.0" fill="rgb(234,97,1)" rx="2" ry="2" />
<text  x="108.75" y="431.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="748.8" y="1701" width="0.2" height="15.0" fill="rgb(210,81,25)" rx="2" ry="2" />
<text  x="751.79" y="1711.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="296.1" y="1669" width="0.2" height="15.0" fill="rgb(249,164,31)" rx="2" ry="2" />
<text  x="299.06" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (2 samples, 0.03%)</title><rect x="581.3" y="2021" width="0.4" height="15.0" fill="rgb(212,197,1)" rx="2" ry="2" />
<text  x="584.33" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="148.1" y="1877" width="0.2" height="15.0" fill="rgb(230,31,54)" rx="2" ry="2" />
<text  x="151.06" y="1887.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1004.7" y="1749" width="0.2" height="15.0" fill="rgb(239,45,28)" rx="2" ry="2" />
<text  x="1007.66" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="174.3" y="2021" width="0.2" height="15.0" fill="rgb(242,122,11)" rx="2" ry="2" />
<text  x="177.29" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="15.0" y="1861" width="0.8" height="15.0" fill="rgb(207,220,27)" rx="2" ry="2" />
<text  x="17.97" y="1871.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="343.7" y="1909" width="0.6" height="15.0" fill="rgb(235,39,53)" rx="2" ry="2" />
<text  x="346.74" y="1919.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="979.6" y="2037" width="0.2" height="15.0" fill="rgb(207,53,0)" rx="2" ry="2" />
<text  x="982.63" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (1 samples, 0.02%)</title><rect x="529.3" y="1989" width="0.2" height="15.0" fill="rgb(228,45,9)" rx="2" ry="2" />
<text  x="532.28" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1031.7" y="1957" width="0.2" height="15.0" fill="rgb(237,159,31)" rx="2" ry="2" />
<text  x="1034.67" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="672.5" y="1797" width="0.2" height="15.0" fill="rgb(252,144,0)" rx="2" ry="2" />
<text  x="675.51" y="1807.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="556.9" y="1957" width="0.2" height="15.0" fill="rgb(237,119,11)" rx="2" ry="2" />
<text  x="559.89" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.3" y="1797" width="0.2" height="15.0" fill="rgb(234,155,17)" rx="2" ry="2" />
<text  x="229.33" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="416.8" y="1973" width="0.6" height="15.0" fill="rgb(207,40,36)" rx="2" ry="2" />
<text  x="419.84" y="1983.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.02%)</title><rect x="10.8" y="1829" width="0.2" height="15.0" fill="rgb(226,10,12)" rx="2" ry="2" />
<text  x="13.79" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.2" y="2037" width="0.2" height="15.0" fill="rgb(232,101,46)" rx="2" ry="2" />
<text  x="923.23" y="2047.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="235.9" y="1957" width="0.4" height="15.0" fill="rgb(244,135,27)" rx="2" ry="2" />
<text  x="238.87" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="392.4" y="1957" width="0.2" height="15.0" fill="rgb(216,48,36)" rx="2" ry="2" />
<text  x="395.41" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="162.8" y="1941" width="0.2" height="15.0" fill="rgb(234,42,34)" rx="2" ry="2" />
<text  x="165.76" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (330 samples, 5.56%)</title><rect x="1060.1" y="1989" width="65.5" height="15.0" fill="rgb(210,197,3)" rx="2" ry="2" />
<text  x="1063.08" y="1999.5" >SYSC_re..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (1 samples, 0.02%)</title><rect x="575.2" y="1989" width="0.2" height="15.0" fill="rgb(227,60,36)" rx="2" ry="2" />
<text  x="578.17" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="896.2" y="1893" width="0.2" height="15.0" fill="rgb(214,185,2)" rx="2" ry="2" />
<text  x="899.19" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (105 samples, 1.77%)</title><rect x="300.6" y="1717" width="20.9" height="15.0" fill="rgb(241,142,35)" rx="2" ry="2" />
<text  x="303.63" y="1727.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (5 samples, 0.08%)</title><rect x="1075.2" y="1861" width="1.0" height="15.0" fill="rgb(251,5,21)" rx="2" ry="2" />
<text  x="1078.18" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="581.7" y="2021" width="0.2" height="15.0" fill="rgb(231,148,11)" rx="2" ry="2" />
<text  x="584.72" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="531.5" y="1941" width="0.4" height="15.0" fill="rgb(244,127,50)" rx="2" ry="2" />
<text  x="534.46" y="1951.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::getEventBase (1 samples, 0.02%)</title><rect x="656.8" y="1989" width="0.2" height="15.0" fill="rgb(231,197,37)" rx="2" ry="2" />
<text  x="659.81" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (24 samples, 0.40%)</title><rect x="132.2" y="1973" width="4.7" height="15.0" fill="rgb(220,156,34)" rx="2" ry="2" />
<text  x="135.17" y="1983.5" ></text>
</g>
<g >
<title>event_add@plt (2 samples, 0.03%)</title><rect x="223.6" y="1861" width="0.3" height="15.0" fill="rgb(207,105,35)" rx="2" ry="2" />
<text  x="226.55" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (1 samples, 0.02%)</title><rect x="74.8" y="1957" width="0.2" height="15.0" fill="rgb(209,114,8)" rx="2" ry="2" />
<text  x="77.76" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="159.6" y="1829" width="0.2" height="15.0" fill="rgb(245,220,19)" rx="2" ry="2" />
<text  x="162.59" y="1839.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="819.3" y="1461" width="0.2" height="15.0" fill="rgb(249,212,39)" rx="2" ry="2" />
<text  x="822.31" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="78.1" y="1957" width="0.4" height="15.0" fill="rgb(246,214,50)" rx="2" ry="2" />
<text  x="81.14" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.66%)</title><rect x="105.8" y="53" width="7.7" height="15.0" fill="rgb(252,133,6)" rx="2" ry="2" />
<text  x="108.75" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="548.9" y="1925" width="0.2" height="15.0" fill="rgb(207,91,31)" rx="2" ry="2" />
<text  x="551.95" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1139.9" y="2037" width="0.2" height="15.0" fill="rgb(207,44,51)" rx="2" ry="2" />
<text  x="1142.94" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="929.2" y="1941" width="0.4" height="15.0" fill="rgb(224,96,1)" rx="2" ry="2" />
<text  x="932.17" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="120.5" y="1301" width="0.1" height="15.0" fill="rgb(211,32,27)" rx="2" ry="2" />
<text  x="123.45" y="1311.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="529.5" y="1973" width="0.2" height="15.0" fill="rgb(217,53,45)" rx="2" ry="2" />
<text  x="532.48" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="179.5" y="1925" width="0.1" height="15.0" fill="rgb(219,175,46)" rx="2" ry="2" />
<text  x="182.45" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="339.4" y="1861" width="0.2" height="15.0" fill="rgb(218,115,0)" rx="2" ry="2" />
<text  x="342.37" y="1871.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="141.1" y="1781" width="0.2" height="15.0" fill="rgb(234,168,45)" rx="2" ry="2" />
<text  x="144.11" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (23 samples, 0.39%)</title><rect x="963.9" y="2037" width="4.6" height="15.0" fill="rgb(243,107,29)" rx="2" ry="2" />
<text  x="966.93" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="791.9" y="1557" width="0.2" height="15.0" fill="rgb(245,2,40)" rx="2" ry="2" />
<text  x="794.90" y="1567.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="629.4" y="1989" width="0.2" height="15.0" fill="rgb(236,146,1)" rx="2" ry="2" />
<text  x="632.40" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (9 samples, 0.15%)</title><rect x="186.6" y="2021" width="1.8" height="15.0" fill="rgb(246,91,38)" rx="2" ry="2" />
<text  x="189.60" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (1 samples, 0.02%)</title><rect x="620.7" y="2037" width="0.2" height="15.0" fill="rgb(254,5,43)" rx="2" ry="2" />
<text  x="623.66" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="163.2" y="1797" width="0.2" height="15.0" fill="rgb(228,62,36)" rx="2" ry="2" />
<text  x="166.16" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="70.6" y="1653" width="0.2" height="15.0" fill="rgb(208,54,48)" rx="2" ry="2" />
<text  x="73.59" y="1663.5" ></text>
</g>
<g >
<title>std::operator== (3 samples, 0.05%)</title><rect x="891.2" y="1925" width="0.6" height="15.0" fill="rgb(212,130,46)" rx="2" ry="2" />
<text  x="894.23" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="824.9" y="1797" width="0.4" height="15.0" fill="rgb(240,57,36)" rx="2" ry="2" />
<text  x="827.88" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (1 samples, 0.02%)</title><rect x="981.4" y="2037" width="0.2" height="15.0" fill="rgb(230,70,20)" rx="2" ry="2" />
<text  x="984.41" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.5" y="1765" width="0.2" height="15.0" fill="rgb(215,143,15)" rx="2" ry="2" />
<text  x="887.47" y="1775.5" ></text>
</g>
<g >
<title>ip_local_out (50 samples, 0.84%)</title><rect x="1108.0" y="1845" width="9.9" height="15.0" fill="rgb(229,173,43)" rx="2" ry="2" />
<text  x="1110.96" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (9 samples, 0.15%)</title><rect x="80.5" y="1941" width="1.8" height="15.0" fill="rgb(244,43,8)" rx="2" ry="2" />
<text  x="83.52" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="844.5" y="1909" width="0.6" height="15.0" fill="rgb(206,195,7)" rx="2" ry="2" />
<text  x="847.54" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="14.4" y="1813" width="0.2" height="15.0" fill="rgb(251,67,53)" rx="2" ry="2" />
<text  x="17.37" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="497.5" y="1893" width="0.4" height="15.0" fill="rgb(228,94,34)" rx="2" ry="2" />
<text  x="500.49" y="1903.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="390.6" y="1925" width="0.2" height="15.0" fill="rgb(213,75,22)" rx="2" ry="2" />
<text  x="393.62" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="507.0" y="1829" width="0.2" height="15.0" fill="rgb(251,75,28)" rx="2" ry="2" />
<text  x="510.03" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (26 samples, 0.44%)</title><rect x="994.7" y="1925" width="5.2" height="15.0" fill="rgb(225,91,25)" rx="2" ry="2" />
<text  x="997.72" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="417.0" y="1909" width="0.4" height="15.0" fill="rgb(210,91,15)" rx="2" ry="2" />
<text  x="420.04" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="123.0" y="1733" width="0.2" height="15.0" fill="rgb(243,42,37)" rx="2" ry="2" />
<text  x="126.03" y="1743.5" ></text>
</g>
<g >
<title>__libc_recv (477 samples, 8.03%)</title><rect x="1041.4" y="2053" width="94.8" height="15.0" fill="rgb(248,155,29)" rx="2" ry="2" />
<text  x="1044.41" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="337.4" y="1733" width="0.2" height="15.0" fill="rgb(219,165,34)" rx="2" ry="2" />
<text  x="340.38" y="1743.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="705.9" y="1893" width="0.2" height="15.0" fill="rgb(223,56,42)" rx="2" ry="2" />
<text  x="708.88" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1125.2" y="1829" width="0.4" height="15.0" fill="rgb(243,70,54)" rx="2" ry="2" />
<text  x="1128.24" y="1839.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="564.8" y="1909" width="0.4" height="15.0" fill="rgb(215,209,6)" rx="2" ry="2" />
<text  x="567.84" y="1919.5" ></text>
</g>
<g >
<title>__fdget (18 samples, 0.30%)</title><rect x="1122.1" y="1957" width="3.5" height="15.0" fill="rgb(249,211,32)" rx="2" ry="2" />
<text  x="1125.06" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.15%)</title><rect x="10.6" y="1925" width="1.8" height="15.0" fill="rgb(217,33,17)" rx="2" ry="2" />
<text  x="13.60" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1461" width="16.2" height="15.0" fill="rgb(247,102,43)" rx="2" ry="2" />
<text  x="108.15" y="1471.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="171.7" y="1925" width="0.4" height="15.0" fill="rgb(214,173,38)" rx="2" ry="2" />
<text  x="174.70" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.4" y="1749" width="0.2" height="15.0" fill="rgb(206,43,30)" rx="2" ry="2" />
<text  x="107.36" y="1759.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="729.5" y="1717" width="0.2" height="15.0" fill="rgb(213,228,1)" rx="2" ry="2" />
<text  x="732.52" y="1727.5" ></text>
</g>
<g >
<title>accept4 (313 samples, 5.27%)</title><rect x="356.8" y="2037" width="62.2" height="15.0" fill="rgb(220,85,13)" rx="2" ry="2" />
<text  x="359.85" y="2047.5" >accept4</text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="702.5" y="1925" width="0.2" height="15.0" fill="rgb(243,43,17)" rx="2" ry="2" />
<text  x="705.51" y="1935.5" ></text>
</g>
<g >
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="328.2" y="1813" width="0.6" height="15.0" fill="rgb(206,73,21)" rx="2" ry="2" />
<text  x="331.24" y="1823.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1110.3" y="1445" width="0.2" height="15.0" fill="rgb(248,26,5)" rx="2" ry="2" />
<text  x="1113.34" y="1455.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="532.1" y="1989" width="0.4" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="535.06" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1129.2" y="2037" width="0.2" height="15.0" fill="rgb(211,96,1)" rx="2" ry="2" />
<text  x="1132.21" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="179.1" y="1941" width="0.5" height="15.0" fill="rgb(241,149,32)" rx="2" ry="2" />
<text  x="182.05" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="74.4" y="1765" width="0.2" height="15.0" fill="rgb(239,185,11)" rx="2" ry="2" />
<text  x="77.36" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="864.6" y="1941" width="0.6" height="15.0" fill="rgb(222,89,15)" rx="2" ry="2" />
<text  x="867.61" y="1951.5" ></text>
</g>
<g >
<title>syscall (18 samples, 0.30%)</title><rect x="1035.8" y="2037" width="3.6" height="15.0" fill="rgb(251,167,36)" rx="2" ry="2" />
<text  x="1038.85" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="99.6" y="1973" width="0.2" height="15.0" fill="rgb(231,132,9)" rx="2" ry="2" />
<text  x="102.59" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="333.8" y="1557" width="0.4" height="15.0" fill="rgb(220,160,37)" rx="2" ry="2" />
<text  x="336.80" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="536.2" y="1813" width="0.2" height="15.0" fill="rgb(235,40,15)" rx="2" ry="2" />
<text  x="539.23" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="489.7" y="1813" width="0.2" height="15.0" fill="rgb(217,77,19)" rx="2" ry="2" />
<text  x="492.75" y="1823.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="713.0" y="1653" width="0.2" height="15.0" fill="rgb(248,166,2)" rx="2" ry="2" />
<text  x="716.03" y="1663.5" ></text>
</g>
<g >
<title>filename_parentat (1 samples, 0.02%)</title><rect x="12.4" y="1973" width="0.2" height="15.0" fill="rgb(206,39,26)" rx="2" ry="2" />
<text  x="15.38" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="416.8" y="1989" width="0.6" height="15.0" fill="rgb(223,97,41)" rx="2" ry="2" />
<text  x="419.84" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="390.4" y="1845" width="0.2" height="15.0" fill="rgb(222,89,30)" rx="2" ry="2" />
<text  x="393.42" y="1855.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="486.0" y="1941" width="0.8" height="15.0" fill="rgb(217,64,24)" rx="2" ry="2" />
<text  x="488.97" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="934.1" y="1909" width="0.6" height="15.0" fill="rgb(228,198,15)" rx="2" ry="2" />
<text  x="937.13" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="252.8" y="1909" width="0.2" height="15.0" fill="rgb(240,34,52)" rx="2" ry="2" />
<text  x="255.75" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (1 samples, 0.02%)</title><rect x="699.3" y="2021" width="0.2" height="15.0" fill="rgb(206,142,0)" rx="2" ry="2" />
<text  x="702.33" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="322.1" y="1557" width="0.2" height="15.0" fill="rgb(225,153,6)" rx="2" ry="2" />
<text  x="325.08" y="1567.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="148.1" y="1845" width="0.2" height="15.0" fill="rgb(243,227,3)" rx="2" ry="2" />
<text  x="151.06" y="1855.5" ></text>
</g>
<g >
<title>lock_timer_base (8 samples, 0.13%)</title><rect x="806.0" y="1605" width="1.6" height="15.0" fill="rgb(220,179,44)" rx="2" ry="2" />
<text  x="809.00" y="1615.5" ></text>
</g>
<g >
<title>filp_close (21 samples, 0.35%)</title><rect x="826.5" y="1829" width="4.1" height="15.0" fill="rgb(231,168,1)" rx="2" ry="2" />
<text  x="829.46" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (9 samples, 0.15%)</title><rect x="139.1" y="2005" width="1.8" height="15.0" fill="rgb(240,8,48)" rx="2" ry="2" />
<text  x="142.12" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="931.2" y="1925" width="0.2" height="15.0" fill="rgb(229,94,31)" rx="2" ry="2" />
<text  x="934.15" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="923.8" y="1989" width="0.2" height="15.0" fill="rgb(231,129,40)" rx="2" ry="2" />
<text  x="926.80" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="73.0" y="1749" width="0.2" height="15.0" fill="rgb(222,129,54)" rx="2" ry="2" />
<text  x="75.97" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="468.3" y="1877" width="0.2" height="15.0" fill="rgb(240,28,26)" rx="2" ry="2" />
<text  x="471.29" y="1887.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="391.8" y="1941" width="0.2" height="15.0" fill="rgb(208,160,35)" rx="2" ry="2" />
<text  x="394.81" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1176.7" y="1989" width="0.2" height="15.0" fill="rgb(249,126,16)" rx="2" ry="2" />
<text  x="1179.69" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.3" y="53" width="0.2" height="15.0" fill="rgb(254,43,41)" rx="2" ry="2" />
<text  x="121.27" y="63.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="888.2" y="1813" width="0.2" height="15.0" fill="rgb(216,53,8)" rx="2" ry="2" />
<text  x="891.25" y="1823.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="416.8" y="1925" width="0.2" height="15.0" fill="rgb(207,122,22)" rx="2" ry="2" />
<text  x="419.84" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="176.5" y="1989" width="0.2" height="15.0" fill="rgb(234,175,20)" rx="2" ry="2" />
<text  x="179.47" y="1999.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1082.9" y="1797" width="0.2" height="15.0" fill="rgb(232,139,42)" rx="2" ry="2" />
<text  x="1085.93" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="517" width="13.5" height="15.0" fill="rgb(239,192,23)" rx="2" ry="2" />
<text  x="108.75" y="527.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="281.2" y="1765" width="0.2" height="15.0" fill="rgb(216,30,15)" rx="2" ry="2" />
<text  x="284.16" y="1775.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.02%)</title><rect x="823.7" y="1813" width="0.2" height="15.0" fill="rgb(247,122,16)" rx="2" ry="2" />
<text  x="826.68" y="1823.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (48 samples, 0.81%)</title><rect x="607.2" y="1989" width="9.5" height="15.0" fill="rgb(228,66,27)" rx="2" ry="2" />
<text  x="610.15" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="417.2" y="1653" width="0.2" height="15.0" fill="rgb(252,9,52)" rx="2" ry="2" />
<text  x="420.24" y="1663.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="848.7" y="1653" width="0.2" height="15.0" fill="rgb(225,70,0)" rx="2" ry="2" />
<text  x="851.71" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="835.0" y="1797" width="0.2" height="15.0" fill="rgb(228,90,31)" rx="2" ry="2" />
<text  x="838.01" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="773" width="14.3" height="15.0" fill="rgb(213,97,34)" rx="2" ry="2" />
<text  x="108.75" y="783.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (35 samples, 0.59%)</title><rect x="56.9" y="1973" width="6.9" height="15.0" fill="rgb(223,42,40)" rx="2" ry="2" />
<text  x="59.88" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1139.9" y="1813" width="0.2" height="15.0" fill="rgb(220,98,11)" rx="2" ry="2" />
<text  x="1142.94" y="1823.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1019.8" y="1845" width="0.7" height="15.0" fill="rgb(217,24,6)" rx="2" ry="2" />
<text  x="1022.75" y="1855.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="571.8" y="1669" width="0.2" height="15.0" fill="rgb(244,223,3)" rx="2" ry="2" />
<text  x="574.79" y="1679.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="125.6" y="1909" width="0.8" height="15.0" fill="rgb(220,206,40)" rx="2" ry="2" />
<text  x="128.62" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="164.6" y="2005" width="0.3" height="15.0" fill="rgb(229,99,48)" rx="2" ry="2" />
<text  x="167.55" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="469" width="13.5" height="15.0" fill="rgb(226,68,33)" rx="2" ry="2" />
<text  x="108.75" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="158.0" y="1877" width="1.6" height="15.0" fill="rgb(235,113,32)" rx="2" ry="2" />
<text  x="161.00" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.0" y="1957" width="0.2" height="15.0" fill="rgb(232,145,49)" rx="2" ry="2" />
<text  x="577.97" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="960.6" y="1877" width="0.2" height="15.0" fill="rgb(247,201,46)" rx="2" ry="2" />
<text  x="963.56" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="548.4" y="1941" width="1.9" height="15.0" fill="rgb(212,13,15)" rx="2" ry="2" />
<text  x="551.35" y="1951.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4 samples, 0.07%)</title><rect x="741.4" y="1781" width="0.8" height="15.0" fill="rgb(248,137,34)" rx="2" ry="2" />
<text  x="744.44" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1179.9" y="2021" width="0.8" height="15.0" fill="rgb(243,222,39)" rx="2" ry="2" />
<text  x="1182.87" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4,730 samples, 79.63%)</title><rect x="99.8" y="2053" width="939.6" height="15.0" fill="rgb(252,221,17)" rx="2" ry="2" />
<text  x="102.79" y="2063.5" >[unknown]</text>
</g>
<g >
<title>ip_finish_output (130 samples, 2.19%)</title><rect x="295.7" y="1765" width="25.8" height="15.0" fill="rgb(229,95,51)" rx="2" ry="2" />
<text  x="298.66" y="1775.5" >i..</text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="49.1" y="1957" width="0.2" height="15.0" fill="rgb(205,88,10)" rx="2" ry="2" />
<text  x="52.13" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="271.2" y="1765" width="0.2" height="15.0" fill="rgb(215,208,50)" rx="2" ry="2" />
<text  x="274.23" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="848.7" y="1685" width="0.2" height="15.0" fill="rgb(242,71,23)" rx="2" ry="2" />
<text  x="851.71" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="118.1" y="37" width="0.2" height="15.0" fill="rgb(219,185,47)" rx="2" ry="2" />
<text  x="121.07" y="47.5" ></text>
</g>
<g >
<title>clear_inode (3 samples, 0.05%)</title><rect x="732.3" y="1701" width="0.6" height="15.0" fill="rgb(239,85,51)" rx="2" ry="2" />
<text  x="735.30" y="1711.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="851.9" y="1829" width="0.4" height="15.0" fill="rgb(238,154,33)" rx="2" ry="2" />
<text  x="854.89" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="616.3" y="1877" width="0.2" height="15.0" fill="rgb(247,25,1)" rx="2" ry="2" />
<text  x="619.29" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="188.2" y="1973" width="0.2" height="15.0" fill="rgb(207,205,11)" rx="2" ry="2" />
<text  x="191.19" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="14.6" y="2021" width="1.2" height="15.0" fill="rgb(236,180,9)" rx="2" ry="2" />
<text  x="17.57" y="2031.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="253.2" y="1877" width="0.2" height="15.0" fill="rgb(236,39,42)" rx="2" ry="2" />
<text  x="256.15" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="129.2" y="1989" width="0.2" height="15.0" fill="rgb(221,213,32)" rx="2" ry="2" />
<text  x="132.19" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="441.5" y="1829" width="0.2" height="15.0" fill="rgb(254,145,26)" rx="2" ry="2" />
<text  x="444.47" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="623.8" y="1989" width="1.2" height="15.0" fill="rgb(212,7,16)" rx="2" ry="2" />
<text  x="626.84" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="302.2" y="1701" width="0.4" height="15.0" fill="rgb(225,208,14)" rx="2" ry="2" />
<text  x="305.22" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="29.1" y="1957" width="1.4" height="15.0" fill="rgb(222,175,14)" rx="2" ry="2" />
<text  x="32.07" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="858.1" y="1909" width="0.1" height="15.0" fill="rgb(226,87,35)" rx="2" ry="2" />
<text  x="861.05" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="677.7" y="1973" width="0.2" height="15.0" fill="rgb(227,147,3)" rx="2" ry="2" />
<text  x="680.67" y="1983.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="356.1" y="2037" width="0.2" height="15.0" fill="rgb(235,111,14)" rx="2" ry="2" />
<text  x="359.05" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="281.2" y="1589" width="0.2" height="15.0" fill="rgb(208,69,10)" rx="2" ry="2" />
<text  x="284.16" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1027.3" y="1957" width="0.4" height="15.0" fill="rgb(254,126,3)" rx="2" ry="2" />
<text  x="1030.30" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1001.1" y="1973" width="0.2" height="15.0" fill="rgb(213,13,41)" rx="2" ry="2" />
<text  x="1004.08" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="713.0" y="1733" width="0.2" height="15.0" fill="rgb(221,54,5)" rx="2" ry="2" />
<text  x="716.03" y="1743.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="62.0" y="1877" width="0.2" height="15.0" fill="rgb(215,126,53)" rx="2" ry="2" />
<text  x="65.05" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="141.3" y="1925" width="0.2" height="15.0" fill="rgb(246,2,6)" rx="2" ry="2" />
<text  x="144.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="118.5" y="85" width="0.4" height="15.0" fill="rgb(212,5,3)" rx="2" ry="2" />
<text  x="121.46" y="95.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="299.0" y="1429" width="0.2" height="15.0" fill="rgb(230,71,54)" rx="2" ry="2" />
<text  x="302.04" y="1439.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="783.0" y="1461" width="0.2" height="15.0" fill="rgb(220,97,15)" rx="2" ry="2" />
<text  x="785.96" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="63.4" y="1925" width="0.4" height="15.0" fill="rgb(208,104,28)" rx="2" ry="2" />
<text  x="66.44" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="489.7" y="1765" width="0.2" height="15.0" fill="rgb(252,63,39)" rx="2" ry="2" />
<text  x="492.75" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="271.2" y="1749" width="0.2" height="15.0" fill="rgb(218,17,36)" rx="2" ry="2" />
<text  x="274.23" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (113 samples, 1.90%)</title><rect x="140.9" y="2005" width="22.5" height="15.0" fill="rgb(213,191,25)" rx="2" ry="2" />
<text  x="143.91" y="2015.5" >f..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="262.3" y="1781" width="0.2" height="15.0" fill="rgb(210,53,13)" rx="2" ry="2" />
<text  x="265.29" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="896.4" y="1973" width="0.4" height="15.0" fill="rgb(223,4,6)" rx="2" ry="2" />
<text  x="899.39" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="349.1" y="1797" width="0.4" height="15.0" fill="rgb(246,50,18)" rx="2" ry="2" />
<text  x="352.10" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="513.2" y="1877" width="0.4" height="15.0" fill="rgb(243,96,10)" rx="2" ry="2" />
<text  x="516.19" y="1887.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="441.1" y="1989" width="0.2" height="15.0" fill="rgb(221,171,48)" rx="2" ry="2" />
<text  x="444.08" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="70.6" y="1605" width="0.2" height="15.0" fill="rgb(226,165,29)" rx="2" ry="2" />
<text  x="73.59" y="1615.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="799.6" y="1653" width="0.2" height="15.0" fill="rgb(218,179,16)" rx="2" ry="2" />
<text  x="802.65" y="1663.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1062.9" y="1973" width="0.2" height="15.0" fill="rgb(238,23,3)" rx="2" ry="2" />
<text  x="1065.86" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1027.1" y="2021" width="0.6" height="15.0" fill="rgb(249,131,28)" rx="2" ry="2" />
<text  x="1030.10" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="852.1" y="1717" width="0.2" height="15.0" fill="rgb(210,196,42)" rx="2" ry="2" />
<text  x="855.09" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (6 samples, 0.10%)</title><rect x="218.0" y="1925" width="1.2" height="15.0" fill="rgb(230,100,39)" rx="2" ry="2" />
<text  x="220.99" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (3 samples, 0.05%)</title><rect x="904.5" y="2005" width="0.6" height="15.0" fill="rgb(216,177,3)" rx="2" ry="2" />
<text  x="907.54" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb (11 samples, 0.19%)</title><rect x="318.9" y="1669" width="2.2" height="15.0" fill="rgb(231,82,8)" rx="2" ry="2" />
<text  x="321.91" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_features_check (2 samples, 0.03%)</title><rect x="320.1" y="1637" width="0.4" height="15.0" fill="rgb(239,80,28)" rx="2" ry="2" />
<text  x="323.10" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="910.3" y="2005" width="0.2" height="15.0" fill="rgb(217,118,42)" rx="2" ry="2" />
<text  x="913.30" y="2015.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="1115.1" y="1413" width="0.4" height="15.0" fill="rgb(229,166,0)" rx="2" ry="2" />
<text  x="1118.11" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1027.5" y="1829" width="0.2" height="15.0" fill="rgb(229,215,26)" rx="2" ry="2" />
<text  x="1030.50" y="1839.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="281.2" y="1557" width="0.2" height="15.0" fill="rgb(228,72,37)" rx="2" ry="2" />
<text  x="284.16" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="74.4" y="1893" width="0.2" height="15.0" fill="rgb(245,113,21)" rx="2" ry="2" />
<text  x="77.36" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="281.6" y="1685" width="0.2" height="15.0" fill="rgb(220,84,49)" rx="2" ry="2" />
<text  x="284.56" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="184.0" y="1957" width="1.0" height="15.0" fill="rgb(247,104,16)" rx="2" ry="2" />
<text  x="187.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="672.5" y="1525" width="0.2" height="15.0" fill="rgb(232,1,48)" rx="2" ry="2" />
<text  x="675.51" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="969.7" y="1989" width="0.2" height="15.0" fill="rgb(235,166,33)" rx="2" ry="2" />
<text  x="972.69" y="1999.5" ></text>
</g>
<g >
<title>ep_poll (97 samples, 1.63%)</title><rect x="496.9" y="1973" width="19.3" height="15.0" fill="rgb(247,15,26)" rx="2" ry="2" />
<text  x="499.90" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="791.9" y="1461" width="0.2" height="15.0" fill="rgb(229,159,1)" rx="2" ry="2" />
<text  x="794.90" y="1471.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (9 samples, 0.15%)</title><rect x="177.9" y="1989" width="1.7" height="15.0" fill="rgb(210,2,33)" rx="2" ry="2" />
<text  x="180.86" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="571.8" y="1797" width="0.2" height="15.0" fill="rgb(227,23,44)" rx="2" ry="2" />
<text  x="574.79" y="1807.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="373.7" y="1893" width="0.2" height="15.0" fill="rgb(254,5,32)" rx="2" ry="2" />
<text  x="376.73" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="115.5" y="37" width="0.2" height="15.0" fill="rgb(253,89,28)" rx="2" ry="2" />
<text  x="118.48" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (47 samples, 0.79%)</title><rect x="175.9" y="2021" width="9.3" height="15.0" fill="rgb(215,211,33)" rx="2" ry="2" />
<text  x="178.88" y="2031.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="467.3" y="1893" width="0.2" height="15.0" fill="rgb(207,58,3)" rx="2" ry="2" />
<text  x="470.30" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="163.2" y="1829" width="0.2" height="15.0" fill="rgb(227,86,33)" rx="2" ry="2" />
<text  x="166.16" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="224.1" y="1781" width="0.2" height="15.0" fill="rgb(229,186,20)" rx="2" ry="2" />
<text  x="227.15" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="163.2" y="1813" width="0.2" height="15.0" fill="rgb(225,84,46)" rx="2" ry="2" />
<text  x="166.16" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="569.6" y="1893" width="0.2" height="15.0" fill="rgb(251,203,44)" rx="2" ry="2" />
<text  x="572.61" y="1903.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="888.2" y="1733" width="0.2" height="15.0" fill="rgb(236,115,10)" rx="2" ry="2" />
<text  x="891.25" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="862.4" y="1813" width="0.2" height="15.0" fill="rgb(208,127,48)" rx="2" ry="2" />
<text  x="865.42" y="1823.5" ></text>
</g>
<g >
<title>netif_skb_features (6 samples, 0.10%)</title><rect x="319.9" y="1653" width="1.2" height="15.0" fill="rgb(216,82,50)" rx="2" ry="2" />
<text  x="322.90" y="1663.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (95 samples, 1.60%)</title><rect x="497.1" y="1957" width="18.9" height="15.0" fill="rgb(223,90,35)" rx="2" ry="2" />
<text  x="500.10" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="183.4" y="1973" width="0.2" height="15.0" fill="rgb(241,205,44)" rx="2" ry="2" />
<text  x="186.42" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="177.9" y="1845" width="0.2" height="15.0" fill="rgb(241,201,11)" rx="2" ry="2" />
<text  x="180.86" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (11 samples, 0.19%)</title><rect x="937.5" y="1877" width="2.2" height="15.0" fill="rgb(244,7,4)" rx="2" ry="2" />
<text  x="940.51" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="1169.3" y="2021" width="0.4" height="15.0" fill="rgb(222,191,48)" rx="2" ry="2" />
<text  x="1172.34" y="2031.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="222.6" y="1621" width="0.2" height="15.0" fill="rgb(234,39,26)" rx="2" ry="2" />
<text  x="225.56" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1083.1" y="1829" width="0.2" height="15.0" fill="rgb(240,180,2)" rx="2" ry="2" />
<text  x="1086.12" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="343.5" y="1909" width="0.2" height="15.0" fill="rgb(222,112,11)" rx="2" ry="2" />
<text  x="346.54" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="902.5" y="1941" width="0.2" height="15.0" fill="rgb(206,74,53)" rx="2" ry="2" />
<text  x="905.55" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="337.0" y="1701" width="0.4" height="15.0" fill="rgb(232,200,7)" rx="2" ry="2" />
<text  x="339.98" y="1711.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1105.2" y="1573" width="0.2" height="15.0" fill="rgb(254,87,35)" rx="2" ry="2" />
<text  x="1108.18" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="60.1" y="1701" width="0.2" height="15.0" fill="rgb(217,53,1)" rx="2" ry="2" />
<text  x="63.06" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="119.1" y="53" width="0.2" height="15.0" fill="rgb(251,10,18)" rx="2" ry="2" />
<text  x="122.06" y="63.5" ></text>
</g>
<g >
<title>tcp_recvmsg (276 samples, 4.65%)</title><rect x="1064.5" y="1941" width="54.8" height="15.0" fill="rgb(216,16,41)" rx="2" ry="2" />
<text  x="1067.45" y="1951.5" >tcp_r..</text>
</g>
<g >
<title>sk_forced_mem_schedule (33 samples, 0.56%)</title><rect x="810.2" y="1717" width="6.5" height="15.0" fill="rgb(208,162,15)" rx="2" ry="2" />
<text  x="813.18" y="1727.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (7 samples, 0.12%)</title><rect x="408.3" y="1893" width="1.4" height="15.0" fill="rgb(243,7,3)" rx="2" ry="2" />
<text  x="411.30" y="1903.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="196.5" y="2021" width="0.2" height="15.0" fill="rgb(249,14,10)" rx="2" ry="2" />
<text  x="199.54" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="896.6" y="1845" width="0.2" height="15.0" fill="rgb(214,61,6)" rx="2" ry="2" />
<text  x="899.59" y="1855.5" ></text>
</g>
<g >
<title>__check_object_size (17 samples, 0.29%)</title><rect x="1099.6" y="1909" width="3.4" height="15.0" fill="rgb(216,206,36)" rx="2" ry="2" />
<text  x="1102.61" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="356.5" y="1941" width="0.1" height="15.0" fill="rgb(233,189,31)" rx="2" ry="2" />
<text  x="359.45" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="163.2" y="1733" width="0.2" height="15.0" fill="rgb(206,159,24)" rx="2" ry="2" />
<text  x="166.16" y="1743.5" ></text>
</g>
<g >
<title>__close (597 samples, 10.05%)</title><rect x="715.2" y="1909" width="118.6" height="15.0" fill="rgb(211,200,32)" rx="2" ry="2" />
<text  x="718.22" y="1919.5" >__close</text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="524.5" y="1957" width="0.2" height="15.0" fill="rgb(229,25,20)" rx="2" ry="2" />
<text  x="527.51" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="555.1" y="1909" width="0.2" height="15.0" fill="rgb(248,89,6)" rx="2" ry="2" />
<text  x="558.10" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="857.7" y="1941" width="0.2" height="15.0" fill="rgb(237,67,29)" rx="2" ry="2" />
<text  x="860.65" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="792.7" y="1525" width="0.2" height="15.0" fill="rgb(236,227,51)" rx="2" ry="2" />
<text  x="795.69" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="122.6" y="1653" width="0.2" height="15.0" fill="rgb(217,37,0)" rx="2" ry="2" />
<text  x="125.64" y="1663.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="69.8" y="1829" width="0.4" height="15.0" fill="rgb(245,34,27)" rx="2" ry="2" />
<text  x="72.79" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="677.7" y="2005" width="0.2" height="15.0" fill="rgb(211,225,21)" rx="2" ry="2" />
<text  x="680.67" y="2015.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="182.0" y="1941" width="0.2" height="15.0" fill="rgb(215,219,46)" rx="2" ry="2" />
<text  x="185.03" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1125.2" y="1813" width="0.4" height="15.0" fill="rgb(219,210,26)" rx="2" ry="2" />
<text  x="1128.24" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1139.9" y="1797" width="0.2" height="15.0" fill="rgb(238,184,27)" rx="2" ry="2" />
<text  x="1142.94" y="1807.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="390.4" y="1893" width="0.2" height="15.0" fill="rgb(211,52,7)" rx="2" ry="2" />
<text  x="393.42" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1160.8" y="1893" width="0.2" height="15.0" fill="rgb(225,144,43)" rx="2" ry="2" />
<text  x="1163.80" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="161.8" y="1941" width="0.2" height="15.0" fill="rgb(211,192,51)" rx="2" ry="2" />
<text  x="164.77" y="1951.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::swap (1 samples, 0.02%)</title><rect x="162.0" y="1941" width="0.2" height="15.0" fill="rgb(240,68,36)" rx="2" ry="2" />
<text  x="164.97" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (2 samples, 0.03%)</title><rect x="1169.3" y="2053" width="0.4" height="15.0" fill="rgb(205,123,42)" rx="2" ry="2" />
<text  x="1172.34" y="2063.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="407.7" y="1909" width="0.2" height="15.0" fill="rgb(253,123,32)" rx="2" ry="2" />
<text  x="410.70" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.6" y="1861" width="0.2" height="15.0" fill="rgb(226,126,17)" rx="2" ry="2" />
<text  x="65.64" y="1871.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="1033.5" y="1701" width="0.2" height="15.0" fill="rgb(251,141,34)" rx="2" ry="2" />
<text  x="1036.46" y="1711.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="417.2" y="1749" width="0.2" height="15.0" fill="rgb(220,65,24)" rx="2" ry="2" />
<text  x="420.24" y="1759.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="487.2" y="1973" width="0.2" height="15.0" fill="rgb(225,148,40)" rx="2" ry="2" />
<text  x="490.16" y="1983.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="253.4" y="1765" width="0.1" height="15.0" fill="rgb(254,204,1)" rx="2" ry="2" />
<text  x="256.35" y="1775.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="58.5" y="1909" width="0.4" height="15.0" fill="rgb(213,67,33)" rx="2" ry="2" />
<text  x="61.47" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="22.9" y="1813" width="0.2" height="15.0" fill="rgb(232,164,29)" rx="2" ry="2" />
<text  x="25.91" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1637" width="0.2" height="15.0" fill="rgb(220,73,49)" rx="2" ry="2" />
<text  x="828.07" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="623.4" y="2021" width="1.8" height="15.0" fill="rgb(227,201,22)" rx="2" ry="2" />
<text  x="626.44" y="2031.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (7 samples, 0.12%)</title><rect x="384.7" y="1893" width="1.4" height="15.0" fill="rgb(246,14,45)" rx="2" ry="2" />
<text  x="387.66" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (8 samples, 0.13%)</title><rect x="1127.6" y="2005" width="1.6" height="15.0" fill="rgb(227,31,19)" rx="2" ry="2" />
<text  x="1130.62" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="388.0" y="1701" width="0.2" height="15.0" fill="rgb(242,212,53)" rx="2" ry="2" />
<text  x="391.04" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="699.9" y="2037" width="0.2" height="15.0" fill="rgb(234,222,18)" rx="2" ry="2" />
<text  x="702.92" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="291.1" y="1637" width="0.2" height="15.0" fill="rgb(248,163,10)" rx="2" ry="2" />
<text  x="294.09" y="1647.5" ></text>
</g>
<g >
<title>carbon-global-s (12 samples, 0.20%)</title><rect x="10.0" y="2069" width="2.4" height="15.0" fill="rgb(214,215,24)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="60.1" y="1813" width="0.2" height="15.0" fill="rgb(251,185,34)" rx="2" ry="2" />
<text  x="63.06" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(213,148,24)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="598.6" y="1813" width="0.2" height="15.0" fill="rgb(225,218,8)" rx="2" ry="2" />
<text  x="601.61" y="1823.5" ></text>
</g>
<g >
<title>retint_kernel (1 samples, 0.02%)</title><rect x="489.5" y="2005" width="0.2" height="15.0" fill="rgb(242,139,42)" rx="2" ry="2" />
<text  x="492.55" y="2015.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="74.4" y="1653" width="0.2" height="15.0" fill="rgb(244,156,31)" rx="2" ry="2" />
<text  x="77.36" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="732.1" y="1701" width="0.2" height="15.0" fill="rgb(239,2,54)" rx="2" ry="2" />
<text  x="735.10" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="687.8" y="1925" width="0.2" height="15.0" fill="rgb(220,88,31)" rx="2" ry="2" />
<text  x="690.80" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="193.4" y="2005" width="0.2" height="15.0" fill="rgb(220,148,7)" rx="2" ry="2" />
<text  x="196.36" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (53 samples, 0.89%)</title><rect x="23.3" y="2005" width="10.5" height="15.0" fill="rgb(248,3,0)" rx="2" ry="2" />
<text  x="26.31" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="617.9" y="2005" width="0.2" height="15.0" fill="rgb(250,109,6)" rx="2" ry="2" />
<text  x="620.88" y="2015.5" ></text>
</g>
<g >
<title>event_del_nolock_ (4 samples, 0.07%)</title><rect x="101.6" y="2005" width="0.8" height="15.0" fill="rgb(222,82,28)" rx="2" ry="2" />
<text  x="104.58" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="896.2" y="1909" width="0.2" height="15.0" fill="rgb(230,199,27)" rx="2" ry="2" />
<text  x="899.19" y="1919.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="222.2" y="1877" width="0.2" height="15.0" fill="rgb(218,126,32)" rx="2" ry="2" />
<text  x="225.16" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="809.0" y="1685" width="0.6" height="15.0" fill="rgb(247,91,10)" rx="2" ry="2" />
<text  x="811.98" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12 samples, 0.20%)</title><rect x="613.5" y="1909" width="2.4" height="15.0" fill="rgb(240,108,0)" rx="2" ry="2" />
<text  x="616.51" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="769.5" y="1589" width="0.1" height="15.0" fill="rgb(220,59,53)" rx="2" ry="2" />
<text  x="772.45" y="1599.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="690.8" y="1877" width="0.4" height="15.0" fill="rgb(233,182,9)" rx="2" ry="2" />
<text  x="693.78" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="65.4" y="1813" width="0.4" height="15.0" fill="rgb(236,220,54)" rx="2" ry="2" />
<text  x="68.42" y="1823.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="370.2" y="1957" width="0.2" height="15.0" fill="rgb(248,218,27)" rx="2" ry="2" />
<text  x="373.16" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="892.2" y="1893" width="0.2" height="15.0" fill="rgb(216,91,50)" rx="2" ry="2" />
<text  x="895.22" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="1043.2" y="2037" width="3.8" height="15.0" fill="rgb(234,135,18)" rx="2" ry="2" />
<text  x="1046.20" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (5 samples, 0.08%)</title><rect x="874.3" y="1973" width="1.0" height="15.0" fill="rgb(245,129,26)" rx="2" ry="2" />
<text  x="877.34" y="1983.5" ></text>
</g>
<g >
<title>vfprintf (12 samples, 0.20%)</title><rect x="200.1" y="2021" width="2.4" height="15.0" fill="rgb(248,159,24)" rx="2" ry="2" />
<text  x="203.11" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="441.3" y="1941" width="0.4" height="15.0" fill="rgb(239,222,33)" rx="2" ry="2" />
<text  x="444.28" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="895.6" y="1877" width="0.2" height="15.0" fill="rgb(210,128,24)" rx="2" ry="2" />
<text  x="898.60" y="1887.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (10 samples, 0.17%)</title><rect x="12.6" y="2053" width="2.0" height="15.0" fill="rgb(235,16,5)" rx="2" ry="2" />
<text  x="15.58" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="281.2" y="1637" width="0.2" height="15.0" fill="rgb(224,128,43)" rx="2" ry="2" />
<text  x="284.16" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="159.6" y="1845" width="0.2" height="15.0" fill="rgb(227,109,33)" rx="2" ry="2" />
<text  x="162.59" y="1855.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="69.8" y="1861" width="0.6" height="15.0" fill="rgb(232,198,54)" rx="2" ry="2" />
<text  x="72.79" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="349.1" y="1813" width="0.4" height="15.0" fill="rgb(214,169,12)" rx="2" ry="2" />
<text  x="352.10" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="700.5" y="2021" width="0.2" height="15.0" fill="rgb(251,115,54)" rx="2" ry="2" />
<text  x="703.52" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="412.7" y="1669" width="0.2" height="15.0" fill="rgb(206,98,45)" rx="2" ry="2" />
<text  x="415.67" y="1679.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="104.2" y="1877" width="0.2" height="15.0" fill="rgb(219,147,13)" rx="2" ry="2" />
<text  x="107.16" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="311.4" y="1653" width="0.2" height="15.0" fill="rgb(224,107,22)" rx="2" ry="2" />
<text  x="314.36" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="166.1" y="2021" width="0.4" height="15.0" fill="rgb(218,160,45)" rx="2" ry="2" />
<text  x="169.14" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="159.6" y="1749" width="0.2" height="15.0" fill="rgb(228,0,41)" rx="2" ry="2" />
<text  x="162.59" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="62.0" y="1781" width="0.2" height="15.0" fill="rgb(220,25,51)" rx="2" ry="2" />
<text  x="65.05" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="105.9" y="37" width="0.2" height="15.0" fill="rgb(212,167,17)" rx="2" ry="2" />
<text  x="108.95" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="547.8" y="1957" width="0.2" height="15.0" fill="rgb(211,21,11)" rx="2" ry="2" />
<text  x="550.75" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="171.7" y="1701" width="0.2" height="15.0" fill="rgb(230,223,53)" rx="2" ry="2" />
<text  x="174.70" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="271.2" y="1701" width="0.2" height="15.0" fill="rgb(213,226,29)" rx="2" ry="2" />
<text  x="274.23" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="1041.0" y="2053" width="0.4" height="15.0" fill="rgb(222,106,10)" rx="2" ry="2" />
<text  x="1044.01" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="343.5" y="1845" width="0.2" height="15.0" fill="rgb(224,45,13)" rx="2" ry="2" />
<text  x="346.54" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="209.1" y="2021" width="0.1" height="15.0" fill="rgb(230,16,19)" rx="2" ry="2" />
<text  x="212.05" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="791.9" y="1509" width="0.2" height="15.0" fill="rgb(232,154,6)" rx="2" ry="2" />
<text  x="794.90" y="1519.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="911.9" y="1941" width="0.2" height="15.0" fill="rgb(235,42,54)" rx="2" ry="2" />
<text  x="914.89" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="356.5" y="1829" width="0.1" height="15.0" fill="rgb(250,97,44)" rx="2" ry="2" />
<text  x="359.45" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.07%)</title><rect x="409.7" y="1893" width="0.8" height="15.0" fill="rgb(212,58,48)" rx="2" ry="2" />
<text  x="412.69" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="884.5" y="1589" width="0.2" height="15.0" fill="rgb(236,64,38)" rx="2" ry="2" />
<text  x="887.47" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="521.3" y="1957" width="0.2" height="15.0" fill="rgb(213,141,26)" rx="2" ry="2" />
<text  x="524.33" y="1967.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (3 samples, 0.05%)</title><rect x="460.7" y="1941" width="0.6" height="15.0" fill="rgb(217,96,8)" rx="2" ry="2" />
<text  x="463.74" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (129 samples, 2.17%)</title><rect x="210.8" y="1989" width="25.7" height="15.0" fill="rgb(245,219,38)" rx="2" ry="2" />
<text  x="213.84" y="1999.5" >f..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="390.4" y="1861" width="0.2" height="15.0" fill="rgb(249,200,45)" rx="2" ry="2" />
<text  x="393.42" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="60.9" y="1877" width="0.6" height="15.0" fill="rgb(227,143,0)" rx="2" ry="2" />
<text  x="63.86" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="232.5" y="1925" width="0.6" height="15.0" fill="rgb(206,8,23)" rx="2" ry="2" />
<text  x="235.49" y="1935.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (9 samples, 0.15%)</title><rect x="10.6" y="1861" width="1.8" height="15.0" fill="rgb(248,43,13)" rx="2" ry="2" />
<text  x="13.60" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="626.6" y="2005" width="0.2" height="15.0" fill="rgb(247,5,36)" rx="2" ry="2" />
<text  x="629.62" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="416.8" y="1957" width="0.6" height="15.0" fill="rgb(214,150,6)" rx="2" ry="2" />
<text  x="419.84" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="961.5" y="1989" width="0.4" height="15.0" fill="rgb(208,164,21)" rx="2" ry="2" />
<text  x="964.55" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="571.8" y="1845" width="0.2" height="15.0" fill="rgb(230,177,10)" rx="2" ry="2" />
<text  x="574.79" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.12%)</title><rect x="1127.8" y="1989" width="1.4" height="15.0" fill="rgb(205,132,21)" rx="2" ry="2" />
<text  x="1130.82" y="1999.5" ></text>
</g>
<g >
<title>tcp_assign_congestion_control (1 samples, 0.02%)</title><rect x="497.7" y="1653" width="0.2" height="15.0" fill="rgb(212,173,37)" rx="2" ry="2" />
<text  x="500.69" y="1663.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="569.6" y="1765" width="0.2" height="15.0" fill="rgb(240,41,17)" rx="2" ry="2" />
<text  x="572.61" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="209.2" y="2005" width="0.8" height="15.0" fill="rgb(228,92,44)" rx="2" ry="2" />
<text  x="212.25" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="713.0" y="1813" width="0.2" height="15.0" fill="rgb(250,100,10)" rx="2" ry="2" />
<text  x="716.03" y="1823.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1012.2" y="1749" width="0.2" height="15.0" fill="rgb(233,94,37)" rx="2" ry="2" />
<text  x="1015.21" y="1759.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="889.0" y="1893" width="0.2" height="15.0" fill="rgb(208,75,14)" rx="2" ry="2" />
<text  x="892.04" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (47 samples, 0.79%)</title><rect x="607.2" y="1973" width="9.3" height="15.0" fill="rgb(209,180,18)" rx="2" ry="2" />
<text  x="610.15" y="1983.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1019.8" y="1909" width="0.7" height="15.0" fill="rgb(252,101,38)" rx="2" ry="2" />
<text  x="1022.75" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1031.7" y="1829" width="0.2" height="15.0" fill="rgb(249,46,15)" rx="2" ry="2" />
<text  x="1034.67" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="540.6" y="1989" width="0.2" height="15.0" fill="rgb(247,173,50)" rx="2" ry="2" />
<text  x="543.60" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (6 samples, 0.10%)</title><rect x="838.2" y="1925" width="1.2" height="15.0" fill="rgb(228,125,17)" rx="2" ry="2" />
<text  x="841.19" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="171.7" y="1989" width="0.4" height="15.0" fill="rgb(207,67,21)" rx="2" ry="2" />
<text  x="174.70" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="281.2" y="1669" width="0.2" height="15.0" fill="rgb(251,196,36)" rx="2" ry="2" />
<text  x="284.16" y="1679.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="887.8" y="1541" width="0.2" height="15.0" fill="rgb(223,137,33)" rx="2" ry="2" />
<text  x="890.85" y="1551.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4 samples, 0.07%)</title><rect x="302.6" y="1701" width="0.8" height="15.0" fill="rgb(215,209,42)" rx="2" ry="2" />
<text  x="305.62" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="625.2" y="2021" width="0.4" height="15.0" fill="rgb(216,37,41)" rx="2" ry="2" />
<text  x="628.23" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="627.4" y="2005" width="0.2" height="15.0" fill="rgb(240,134,34)" rx="2" ry="2" />
<text  x="630.41" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="660.8" y="1909" width="1.0" height="15.0" fill="rgb(232,196,1)" rx="2" ry="2" />
<text  x="663.79" y="1919.5" ></text>
</g>
<g >
<title>__module_get (1 samples, 0.02%)</title><rect x="415.6" y="1973" width="0.2" height="15.0" fill="rgb(254,95,13)" rx="2" ry="2" />
<text  x="418.65" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="862.4" y="1909" width="0.2" height="15.0" fill="rgb(214,64,4)" rx="2" ry="2" />
<text  x="865.42" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="58.3" y="1909" width="0.2" height="15.0" fill="rgb(252,220,31)" rx="2" ry="2" />
<text  x="61.27" y="1919.5" ></text>
</g>
<g >
<title>ip_queue_xmit (139 samples, 2.34%)</title><rect x="764.9" y="1669" width="27.6" height="15.0" fill="rgb(213,87,18)" rx="2" ry="2" />
<text  x="767.88" y="1679.5" >i..</text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="220.8" y="1877" width="0.2" height="15.0" fill="rgb(223,225,54)" rx="2" ry="2" />
<text  x="223.77" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1150.7" y="2005" width="0.2" height="15.0" fill="rgb(237,101,35)" rx="2" ry="2" />
<text  x="1153.67" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="1128.6" y="1893" width="0.6" height="15.0" fill="rgb(221,62,41)" rx="2" ry="2" />
<text  x="1131.62" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (28 samples, 0.47%)</title><rect x="607.7" y="1909" width="5.6" height="15.0" fill="rgb(225,224,49)" rx="2" ry="2" />
<text  x="610.75" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="606.6" y="1973" width="0.2" height="15.0" fill="rgb(245,26,12)" rx="2" ry="2" />
<text  x="609.56" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="270.0" y="1829" width="0.2" height="15.0" fill="rgb(211,116,31)" rx="2" ry="2" />
<text  x="273.04" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="889.6" y="1877" width="0.2" height="15.0" fill="rgb(233,61,0)" rx="2" ry="2" />
<text  x="892.64" y="1887.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="737.9" y="1637" width="0.4" height="15.0" fill="rgb(250,148,31)" rx="2" ry="2" />
<text  x="740.87" y="1647.5" ></text>
</g>
<g >
<title>dev_queue_xmit (92 samples, 1.55%)</title><rect x="773.6" y="1589" width="18.3" height="15.0" fill="rgb(225,228,25)" rx="2" ry="2" />
<text  x="776.62" y="1599.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="709.7" y="1957" width="0.2" height="15.0" fill="rgb(222,67,44)" rx="2" ry="2" />
<text  x="712.66" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="698.5" y="1973" width="0.6" height="15.0" fill="rgb(221,124,19)" rx="2" ry="2" />
<text  x="701.53" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="227.7" y="1861" width="0.2" height="15.0" fill="rgb(225,178,21)" rx="2" ry="2" />
<text  x="230.72" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (2 samples, 0.03%)</title><rect x="908.7" y="2037" width="0.4" height="15.0" fill="rgb(249,75,35)" rx="2" ry="2" />
<text  x="911.71" y="2047.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.8" y="1637" width="0.2" height="15.0" fill="rgb(222,53,16)" rx="2" ry="2" />
<text  x="107.76" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="489.7" y="1941" width="0.2" height="15.0" fill="rgb(231,63,19)" rx="2" ry="2" />
<text  x="492.75" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="954.2" y="1989" width="0.4" height="15.0" fill="rgb(254,159,32)" rx="2" ry="2" />
<text  x="957.20" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (47 samples, 0.79%)</title><rect x="1108.2" y="1733" width="9.3" height="15.0" fill="rgb(226,204,5)" rx="2" ry="2" />
<text  x="1111.15" y="1743.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="166.7" y="2021" width="0.4" height="15.0" fill="rgb(219,152,35)" rx="2" ry="2" />
<text  x="169.74" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="956.0" y="2005" width="0.2" height="15.0" fill="rgb(207,10,18)" rx="2" ry="2" />
<text  x="958.99" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1167.2" y="2053" width="0.4" height="15.0" fill="rgb(228,224,17)" rx="2" ry="2" />
<text  x="1170.15" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="334.0" y="1429" width="0.2" height="15.0" fill="rgb(208,24,36)" rx="2" ry="2" />
<text  x="337.00" y="1439.5" ></text>
</g>
<g >
<title>d_instantiate (6 samples, 0.10%)</title><rect x="413.3" y="1941" width="1.2" height="15.0" fill="rgb(252,204,10)" rx="2" ry="2" />
<text  x="416.27" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="543.8" y="1973" width="0.2" height="15.0" fill="rgb(223,152,54)" rx="2" ry="2" />
<text  x="546.78" y="1983.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (12 samples, 0.20%)</title><rect x="1181.3" y="2053" width="2.3" height="15.0" fill="rgb(213,206,6)" rx="2" ry="2" />
<text  x="1184.26" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (29 samples, 0.49%)</title><rect x="546.0" y="1989" width="5.7" height="15.0" fill="rgb(249,47,27)" rx="2" ry="2" />
<text  x="548.97" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="116.9" y="53" width="0.2" height="15.0" fill="rgb(235,12,41)" rx="2" ry="2" />
<text  x="119.88" y="63.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="388.0" y="1941" width="0.2" height="15.0" fill="rgb(206,127,3)" rx="2" ry="2" />
<text  x="391.04" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="1165.2" y="2053" width="0.2" height="15.0" fill="rgb(242,48,21)" rx="2" ry="2" />
<text  x="1168.17" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="856.5" y="1957" width="0.2" height="15.0" fill="rgb(212,182,12)" rx="2" ry="2" />
<text  x="859.46" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="901.6" y="1669" width="0.2" height="15.0" fill="rgb(226,191,1)" rx="2" ry="2" />
<text  x="904.56" y="1679.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="1189.4" y="2053" width="0.2" height="15.0" fill="rgb(237,77,29)" rx="2" ry="2" />
<text  x="1192.40" y="2063.5" ></text>
</g>
<g >
<title>process_backlog (5 samples, 0.08%)</title><rect x="299.4" y="1653" width="1.0" height="15.0" fill="rgb(248,205,48)" rx="2" ry="2" />
<text  x="302.44" y="1663.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="527.7" y="1941" width="0.2" height="15.0" fill="rgb(229,84,26)" rx="2" ry="2" />
<text  x="530.69" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="939.9" y="1893" width="0.4" height="15.0" fill="rgb(220,69,41)" rx="2" ry="2" />
<text  x="942.90" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1001.1" y="1957" width="0.2" height="15.0" fill="rgb(246,160,33)" rx="2" ry="2" />
<text  x="1004.08" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="516.4" y="2037" width="0.2" height="15.0" fill="rgb(229,187,43)" rx="2" ry="2" />
<text  x="519.37" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (6 samples, 0.10%)</title><rect x="706.1" y="1893" width="1.2" height="15.0" fill="rgb(238,25,27)" rx="2" ry="2" />
<text  x="709.08" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="60.7" y="1909" width="0.2" height="15.0" fill="rgb(214,55,26)" rx="2" ry="2" />
<text  x="63.66" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="58.9" y="1925" width="1.2" height="15.0" fill="rgb(236,172,40)" rx="2" ry="2" />
<text  x="61.87" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="901.6" y="1893" width="0.2" height="15.0" fill="rgb(232,215,39)" rx="2" ry="2" />
<text  x="904.56" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="386.2" y="1717" width="0.2" height="15.0" fill="rgb(210,122,36)" rx="2" ry="2" />
<text  x="389.25" y="1727.5" ></text>
</g>
<g >
<title>skb_clone (27 samples, 0.45%)</title><rect x="792.9" y="1669" width="5.4" height="15.0" fill="rgb(207,32,30)" rx="2" ry="2" />
<text  x="795.89" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="295.1" y="1717" width="0.2" height="15.0" fill="rgb(236,88,38)" rx="2" ry="2" />
<text  x="298.07" y="1727.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="29.7" y="1941" width="0.2" height="15.0" fill="rgb(232,41,26)" rx="2" ry="2" />
<text  x="32.67" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1182.5" y="2005" width="0.1" height="15.0" fill="rgb(238,179,10)" rx="2" ry="2" />
<text  x="1185.45" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (15 samples, 0.25%)</title><rect x="318.3" y="1685" width="3.0" height="15.0" fill="rgb(243,170,34)" rx="2" ry="2" />
<text  x="321.31" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="317.5" y="1669" width="0.2" height="15.0" fill="rgb(206,155,38)" rx="2" ry="2" />
<text  x="320.52" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.96%)</title><rect x="663.2" y="1925" width="11.3" height="15.0" fill="rgb(234,149,47)" rx="2" ry="2" />
<text  x="666.17" y="1935.5" ></text>
</g>
<g >
<title>sock_alloc (52 samples, 0.88%)</title><rect x="393.0" y="1957" width="10.3" height="15.0" fill="rgb(246,94,37)" rx="2" ry="2" />
<text  x="396.00" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (4 samples, 0.07%)</title><rect x="33.0" y="1989" width="0.8" height="15.0" fill="rgb(212,168,0)" rx="2" ry="2" />
<text  x="36.04" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="172.5" y="2005" width="0.2" height="15.0" fill="rgb(212,186,14)" rx="2" ry="2" />
<text  x="175.50" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="549.5" y="1909" width="0.6" height="15.0" fill="rgb(243,214,19)" rx="2" ry="2" />
<text  x="552.54" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (6 samples, 0.10%)</title><rect x="279.0" y="1845" width="1.2" height="15.0" fill="rgb(231,194,35)" rx="2" ry="2" />
<text  x="281.98" y="1855.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="14.8" y="1893" width="1.0" height="15.0" fill="rgb(212,105,9)" rx="2" ry="2" />
<text  x="17.77" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="740.2" y="1765" width="0.2" height="15.0" fill="rgb(206,191,24)" rx="2" ry="2" />
<text  x="743.25" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="892.8" y="1925" width="0.2" height="15.0" fill="rgb(221,133,20)" rx="2" ry="2" />
<text  x="895.81" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="401.3" y="1797" width="0.2" height="15.0" fill="rgb(253,177,54)" rx="2" ry="2" />
<text  x="404.35" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="119.1" y="85" width="0.2" height="15.0" fill="rgb(236,155,40)" rx="2" ry="2" />
<text  x="122.06" y="95.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.2" y="1893" width="0.2" height="15.0" fill="rgb(213,176,16)" rx="2" ry="2" />
<text  x="163.18" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="706.1" y="1861" width="1.2" height="15.0" fill="rgb(239,55,35)" rx="2" ry="2" />
<text  x="709.08" y="1871.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="387.8" y="1909" width="0.2" height="15.0" fill="rgb(240,45,16)" rx="2" ry="2" />
<text  x="390.84" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="120.6" y="1333" width="0.4" height="15.0" fill="rgb(228,42,18)" rx="2" ry="2" />
<text  x="123.65" y="1343.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="51.1" y="1893" width="0.2" height="15.0" fill="rgb(228,0,32)" rx="2" ry="2" />
<text  x="54.12" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (8 samples, 0.13%)</title><rect x="106.9" y="37" width="1.6" height="15.0" fill="rgb(220,11,11)" rx="2" ry="2" />
<text  x="109.94" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="707.5" y="1957" width="0.2" height="15.0" fill="rgb(211,43,2)" rx="2" ry="2" />
<text  x="710.47" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="193.2" y="1957" width="0.2" height="15.0" fill="rgb(229,107,46)" rx="2" ry="2" />
<text  x="196.16" y="1967.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="348.7" y="1893" width="0.2" height="15.0" fill="rgb(212,180,36)" rx="2" ry="2" />
<text  x="351.70" y="1903.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="857.5" y="1957" width="0.4" height="15.0" fill="rgb(239,146,15)" rx="2" ry="2" />
<text  x="860.45" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="392.4" y="1941" width="0.2" height="15.0" fill="rgb(245,193,13)" rx="2" ry="2" />
<text  x="395.41" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="80.7" y="1925" width="0.6" height="15.0" fill="rgb(219,78,3)" rx="2" ry="2" />
<text  x="83.72" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="536.2" y="1845" width="0.2" height="15.0" fill="rgb(251,82,14)" rx="2" ry="2" />
<text  x="539.23" y="1855.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1160.8" y="1589" width="0.2" height="15.0" fill="rgb(236,41,35)" rx="2" ry="2" />
<text  x="1163.80" y="1599.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.4" y="1557" width="0.2" height="15.0" fill="rgb(206,219,14)" rx="2" ry="2" />
<text  x="124.44" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="339.4" y="1845" width="0.2" height="15.0" fill="rgb(246,178,28)" rx="2" ry="2" />
<text  x="342.37" y="1855.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="72.0" y="1845" width="0.2" height="15.0" fill="rgb(207,37,5)" rx="2" ry="2" />
<text  x="74.98" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="849.5" y="1845" width="0.2" height="15.0" fill="rgb(210,63,37)" rx="2" ry="2" />
<text  x="852.51" y="1855.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1108.9" y="1573" width="0.2" height="15.0" fill="rgb(236,19,34)" rx="2" ry="2" />
<text  x="1111.95" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (10 samples, 0.17%)</title><rect x="1181.7" y="2037" width="1.9" height="15.0" fill="rgb(225,112,23)" rx="2" ry="2" />
<text  x="1184.66" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="325" width="13.5" height="15.0" fill="rgb(213,139,11)" rx="2" ry="2" />
<text  x="108.75" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="330.4" y="1765" width="0.2" height="15.0" fill="rgb(246,167,11)" rx="2" ry="2" />
<text  x="333.43" y="1775.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="159.6" y="1557" width="0.2" height="15.0" fill="rgb(242,18,23)" rx="2" ry="2" />
<text  x="162.59" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="620.1" y="2037" width="0.6" height="15.0" fill="rgb(222,43,50)" rx="2" ry="2" />
<text  x="623.06" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="916.3" y="1989" width="0.2" height="15.0" fill="rgb(238,119,44)" rx="2" ry="2" />
<text  x="919.26" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="583.5" y="1957" width="0.2" height="15.0" fill="rgb(247,3,22)" rx="2" ry="2" />
<text  x="586.51" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="841.6" y="1861" width="0.2" height="15.0" fill="rgb(219,191,15)" rx="2" ry="2" />
<text  x="844.56" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1,017 samples, 17.12%)</title><rect x="702.5" y="2021" width="202.0" height="15.0" fill="rgb(207,1,29)" rx="2" ry="2" />
<text  x="705.51" y="2031.5" >[unknown]</text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1015.6" y="2005" width="0.2" height="15.0" fill="rgb(230,46,54)" rx="2" ry="2" />
<text  x="1018.58" y="2015.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="875.5" y="1909" width="0.2" height="15.0" fill="rgb(224,16,47)" rx="2" ry="2" />
<text  x="878.53" y="1919.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="626.2" y="2005" width="0.2" height="15.0" fill="rgb(213,4,2)" rx="2" ry="2" />
<text  x="629.22" y="2015.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="12.8" y="1829" width="0.2" height="15.0" fill="rgb(220,86,20)" rx="2" ry="2" />
<text  x="15.78" y="1839.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (4 samples, 0.07%)</title><rect x="978.8" y="2037" width="0.8" height="15.0" fill="rgb(244,118,22)" rx="2" ry="2" />
<text  x="981.83" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="852.1" y="1733" width="0.2" height="15.0" fill="rgb(234,139,13)" rx="2" ry="2" />
<text  x="855.09" y="1743.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1031.7" y="1701" width="0.2" height="15.0" fill="rgb(215,48,40)" rx="2" ry="2" />
<text  x="1034.67" y="1711.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (2 samples, 0.03%)</title><rect x="751.2" y="1733" width="0.4" height="15.0" fill="rgb(236,112,50)" rx="2" ry="2" />
<text  x="754.18" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="333.8" y="1589" width="0.4" height="15.0" fill="rgb(240,140,32)" rx="2" ry="2" />
<text  x="336.80" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="388.0" y="1909" width="0.2" height="15.0" fill="rgb(225,188,27)" rx="2" ry="2" />
<text  x="391.04" y="1919.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="868.2" y="1989" width="0.2" height="15.0" fill="rgb(217,167,22)" rx="2" ry="2" />
<text  x="871.18" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext (11 samples, 0.19%)</title><rect x="1002.1" y="2005" width="2.2" height="15.0" fill="rgb(225,10,15)" rx="2" ry="2" />
<text  x="1005.07" y="2015.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="142.5" y="1941" width="0.2" height="15.0" fill="rgb(207,213,11)" rx="2" ry="2" />
<text  x="145.50" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="177.9" y="1941" width="0.2" height="15.0" fill="rgb(254,86,47)" rx="2" ry="2" />
<text  x="180.86" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="326.9" y="1525" width="0.2" height="15.0" fill="rgb(207,189,1)" rx="2" ry="2" />
<text  x="329.85" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1105.2" y="1765" width="0.2" height="15.0" fill="rgb(243,80,13)" rx="2" ry="2" />
<text  x="1108.18" y="1775.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="284.5" y="1845" width="0.4" height="15.0" fill="rgb(254,204,38)" rx="2" ry="2" />
<text  x="287.54" y="1855.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="235.7" y="1653" width="0.2" height="15.0" fill="rgb(244,201,50)" rx="2" ry="2" />
<text  x="238.67" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (5 samples, 0.08%)</title><rect x="81.3" y="1925" width="1.0" height="15.0" fill="rgb(223,175,35)" rx="2" ry="2" />
<text  x="84.32" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="734.7" y="1669" width="0.2" height="15.0" fill="rgb(241,15,6)" rx="2" ry="2" />
<text  x="737.69" y="1679.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="281.4" y="1765" width="0.2" height="15.0" fill="rgb(253,169,35)" rx="2" ry="2" />
<text  x="284.36" y="1775.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="912.9" y="1941" width="0.2" height="15.0" fill="rgb(222,221,47)" rx="2" ry="2" />
<text  x="915.88" y="1951.5" ></text>
</g>
<g >
<title>ip_send_check (7 samples, 0.12%)</title><rect x="293.9" y="1765" width="1.4" height="15.0" fill="rgb(222,37,46)" rx="2" ry="2" />
<text  x="296.88" y="1775.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="912.9" y="1909" width="0.2" height="15.0" fill="rgb(243,213,20)" rx="2" ry="2" />
<text  x="915.88" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1032.9" y="2037" width="0.2" height="15.0" fill="rgb(221,53,4)" rx="2" ry="2" />
<text  x="1035.87" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (3 samples, 0.05%)</title><rect x="879.7" y="1957" width="0.6" height="15.0" fill="rgb(235,23,40)" rx="2" ry="2" />
<text  x="882.70" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="584.5" y="1909" width="1.0" height="15.0" fill="rgb(245,43,19)" rx="2" ry="2" />
<text  x="587.51" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_active_ (3 samples, 0.05%)</title><rect x="1139.5" y="2053" width="0.6" height="15.0" fill="rgb(230,135,18)" rx="2" ry="2" />
<text  x="1142.54" y="2063.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.15%)</title><rect x="10.6" y="1941" width="1.8" height="15.0" fill="rgb(217,38,42)" rx="2" ry="2" />
<text  x="13.60" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1445" width="16.2" height="15.0" fill="rgb(211,53,53)" rx="2" ry="2" />
<text  x="108.15" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="656.4" y="2021" width="0.6" height="15.0" fill="rgb(249,13,41)" rx="2" ry="2" />
<text  x="659.42" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (80 samples, 1.35%)</title><rect x="517.8" y="2005" width="15.8" height="15.0" fill="rgb(246,50,22)" rx="2" ry="2" />
<text  x="520.76" y="2015.5" ></text>
</g>
<g >
<title>filename_create (1 samples, 0.02%)</title><rect x="12.4" y="1989" width="0.2" height="15.0" fill="rgb(251,22,12)" rx="2" ry="2" />
<text  x="15.38" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (2 samples, 0.03%)</title><rect x="316.3" y="1637" width="0.4" height="15.0" fill="rgb(234,155,8)" rx="2" ry="2" />
<text  x="319.32" y="1647.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (4 samples, 0.07%)</title><rect x="1033.7" y="2037" width="0.8" height="15.0" fill="rgb(221,74,19)" rx="2" ry="2" />
<text  x="1036.66" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="271.2" y="1669" width="0.2" height="15.0" fill="rgb(220,5,2)" rx="2" ry="2" />
<text  x="274.23" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="713.0" y="1717" width="0.2" height="15.0" fill="rgb(210,208,35)" rx="2" ry="2" />
<text  x="716.03" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="271.2" y="1717" width="0.2" height="15.0" fill="rgb(211,36,42)" rx="2" ry="2" />
<text  x="274.23" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (9 samples, 0.15%)</title><rect x="69.4" y="1925" width="1.8" height="15.0" fill="rgb(240,70,37)" rx="2" ry="2" />
<text  x="72.40" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.4" y="2021" width="0.2" height="15.0" fill="rgb(214,46,41)" rx="2" ry="2" />
<text  x="984.41" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="84.7" y="1909" width="0.2" height="15.0" fill="rgb(216,156,52)" rx="2" ry="2" />
<text  x="87.69" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="296.1" y="1733" width="0.2" height="15.0" fill="rgb(244,1,37)" rx="2" ry="2" />
<text  x="299.06" y="1743.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="839.6" y="1909" width="0.2" height="15.0" fill="rgb(234,154,4)" rx="2" ry="2" />
<text  x="842.58" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (8 samples, 0.13%)</title><rect x="886.9" y="1925" width="1.5" height="15.0" fill="rgb(249,224,17)" rx="2" ry="2" />
<text  x="889.86" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="895.4" y="1781" width="0.2" height="15.0" fill="rgb(242,127,30)" rx="2" ry="2" />
<text  x="898.40" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="618.1" y="1909" width="0.2" height="15.0" fill="rgb(215,94,48)" rx="2" ry="2" />
<text  x="621.08" y="1919.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="834.2" y="1909" width="0.2" height="15.0" fill="rgb(236,81,1)" rx="2" ry="2" />
<text  x="837.21" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="635.6" y="1765" width="0.2" height="15.0" fill="rgb(212,82,30)" rx="2" ry="2" />
<text  x="638.56" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="825.1" y="1653" width="0.2" height="15.0" fill="rgb(253,21,2)" rx="2" ry="2" />
<text  x="828.07" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="571.0" y="1813" width="0.2" height="15.0" fill="rgb(211,70,8)" rx="2" ry="2" />
<text  x="574.00" y="1823.5" ></text>
</g>
<g >
<title>__inet_inherit_port (1 samples, 0.02%)</title><rect x="1027.3" y="1749" width="0.2" height="15.0" fill="rgb(249,183,27)" rx="2" ry="2" />
<text  x="1030.30" y="1759.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1121.5" y="1957" width="0.2" height="15.0" fill="rgb(238,60,53)" rx="2" ry="2" />
<text  x="1124.46" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="702.3" y="2037" width="0.2" height="15.0" fill="rgb(208,72,26)" rx="2" ry="2" />
<text  x="705.31" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (3 samples, 0.05%)</title><rect x="899.8" y="1957" width="0.6" height="15.0" fill="rgb(241,118,2)" rx="2" ry="2" />
<text  x="902.77" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1125.4" y="1685" width="0.2" height="15.0" fill="rgb(231,46,2)" rx="2" ry="2" />
<text  x="1128.44" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="373.7" y="1813" width="0.2" height="15.0" fill="rgb(236,227,43)" rx="2" ry="2" />
<text  x="376.73" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="231.7" y="1893" width="0.2" height="15.0" fill="rgb(243,88,14)" rx="2" ry="2" />
<text  x="234.70" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="792.7" y="1493" width="0.2" height="15.0" fill="rgb(226,72,43)" rx="2" ry="2" />
<text  x="795.69" y="1503.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="573.2" y="1957" width="0.2" height="15.0" fill="rgb(242,104,33)" rx="2" ry="2" />
<text  x="576.18" y="1967.5" ></text>
</g>
<g >
<title>__mix_pool_bytes (1 samples, 0.02%)</title><rect x="616.3" y="1829" width="0.2" height="15.0" fill="rgb(211,92,47)" rx="2" ry="2" />
<text  x="619.29" y="1839.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="372.9" y="1909" width="0.2" height="15.0" fill="rgb(246,142,39)" rx="2" ry="2" />
<text  x="375.94" y="1919.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="764.1" y="1669" width="0.2" height="15.0" fill="rgb(224,196,13)" rx="2" ry="2" />
<text  x="767.09" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.4" y="1813" width="0.2" height="15.0" fill="rgb(224,140,5)" rx="2" ry="2" />
<text  x="127.42" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="921.2" y="2037" width="0.4" height="15.0" fill="rgb(249,49,2)" rx="2" ry="2" />
<text  x="924.22" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.13%)</title><rect x="544.2" y="1941" width="1.6" height="15.0" fill="rgb(229,228,5)" rx="2" ry="2" />
<text  x="547.18" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="661.8" y="1909" width="0.4" height="15.0" fill="rgb(234,53,35)" rx="2" ry="2" />
<text  x="664.78" y="1919.5" ></text>
</g>
<g >
<title>security_socket_getpeername (4 samples, 0.07%)</title><rect x="671.9" y="1861" width="0.8" height="15.0" fill="rgb(232,171,33)" rx="2" ry="2" />
<text  x="674.91" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="159.4" y="1845" width="0.2" height="15.0" fill="rgb(232,174,47)" rx="2" ry="2" />
<text  x="162.39" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="702.5" y="1973" width="0.2" height="15.0" fill="rgb(239,195,5)" rx="2" ry="2" />
<text  x="705.51" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (3 samples, 0.05%)</title><rect x="918.6" y="2005" width="0.6" height="15.0" fill="rgb(248,69,44)" rx="2" ry="2" />
<text  x="921.64" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (30 samples, 0.51%)</title><rect x="784.2" y="1525" width="5.9" height="15.0" fill="rgb(248,86,11)" rx="2" ry="2" />
<text  x="787.15" y="1535.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="136.9" y="1973" width="0.2" height="15.0" fill="rgb(240,155,24)" rx="2" ry="2" />
<text  x="139.94" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="74.4" y="1829" width="0.2" height="15.0" fill="rgb(246,122,3)" rx="2" ry="2" />
<text  x="77.36" y="1839.5" ></text>
</g>
<g >
<title>__libc_fcntl (9 samples, 0.15%)</title><rect x="1167.6" y="2037" width="1.7" height="15.0" fill="rgb(217,159,20)" rx="2" ry="2" />
<text  x="1170.55" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="571.0" y="1797" width="0.2" height="15.0" fill="rgb(210,0,22)" rx="2" ry="2" />
<text  x="574.00" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="22.9" y="1845" width="0.2" height="15.0" fill="rgb(227,201,4)" rx="2" ry="2" />
<text  x="25.91" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="373.7" y="1733" width="0.2" height="15.0" fill="rgb(245,175,28)" rx="2" ry="2" />
<text  x="376.73" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1008.4" y="1941" width="0.4" height="15.0" fill="rgb(237,30,36)" rx="2" ry="2" />
<text  x="1011.43" y="1951.5" ></text>
</g>
<g >
<title>memchr@plt (2 samples, 0.03%)</title><rect x="1153.6" y="1973" width="0.4" height="15.0" fill="rgb(222,73,14)" rx="2" ry="2" />
<text  x="1156.65" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="672.5" y="1557" width="0.2" height="15.0" fill="rgb(246,46,28)" rx="2" ry="2" />
<text  x="675.51" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="638.1" y="1925" width="0.4" height="15.0" fill="rgb(226,222,30)" rx="2" ry="2" />
<text  x="641.14" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="623.4" y="1989" width="0.4" height="15.0" fill="rgb(208,187,34)" rx="2" ry="2" />
<text  x="626.44" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="713.0" y="1925" width="0.2" height="15.0" fill="rgb(238,147,23)" rx="2" ry="2" />
<text  x="716.03" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="236.3" y="1957" width="0.2" height="15.0" fill="rgb(213,49,37)" rx="2" ry="2" />
<text  x="239.27" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="489.0" y="1893" width="0.4" height="15.0" fill="rgb(227,95,34)" rx="2" ry="2" />
<text  x="491.95" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.03%)</title><rect x="142.7" y="1941" width="0.4" height="15.0" fill="rgb(230,192,2)" rx="2" ry="2" />
<text  x="145.70" y="1951.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="105.8" y="37" width="0.1" height="15.0" fill="rgb(254,115,51)" rx="2" ry="2" />
<text  x="108.75" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="27.5" y="1925" width="0.2" height="15.0" fill="rgb(236,137,52)" rx="2" ry="2" />
<text  x="30.48" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="894.6" y="1877" width="0.2" height="15.0" fill="rgb(249,71,0)" rx="2" ry="2" />
<text  x="897.60" y="1887.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (11 samples, 0.19%)</title><rect x="12.4" y="2069" width="2.2" height="15.0" fill="rgb(239,88,50)" rx="2" ry="2" />
<text  x="15.38" y="2079.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.13%)</title><rect x="613.7" y="1893" width="1.6" height="15.0" fill="rgb(234,73,4)" rx="2" ry="2" />
<text  x="616.71" y="1903.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.15%)</title><rect x="10.6" y="1989" width="1.8" height="15.0" fill="rgb(246,169,13)" rx="2" ry="2" />
<text  x="13.60" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="580.7" y="1941" width="0.2" height="15.0" fill="rgb(230,93,45)" rx="2" ry="2" />
<text  x="583.73" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.59%)</title><rect x="910.9" y="2005" width="6.9" height="15.0" fill="rgb(218,180,11)" rx="2" ry="2" />
<text  x="913.89" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="691.2" y="1733" width="0.2" height="15.0" fill="rgb(241,115,32)" rx="2" ry="2" />
<text  x="694.18" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (4 samples, 0.07%)</title><rect x="676.7" y="1989" width="0.8" height="15.0" fill="rgb(244,13,32)" rx="2" ry="2" />
<text  x="679.68" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1781" width="0.2" height="15.0" fill="rgb(242,184,37)" rx="2" ry="2" />
<text  x="238.67" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (11 samples, 0.19%)</title><rect x="49.3" y="1957" width="2.2" height="15.0" fill="rgb(241,207,27)" rx="2" ry="2" />
<text  x="52.33" y="1967.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="598.2" y="1845" width="0.2" height="15.0" fill="rgb(252,127,31)" rx="2" ry="2" />
<text  x="601.21" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="327.1" y="1733" width="0.1" height="15.0" fill="rgb(240,118,28)" rx="2" ry="2" />
<text  x="330.05" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="497.7" y="1749" width="0.2" height="15.0" fill="rgb(219,72,21)" rx="2" ry="2" />
<text  x="500.69" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="488.0" y="1941" width="0.2" height="15.0" fill="rgb(250,223,36)" rx="2" ry="2" />
<text  x="490.96" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1183.0" y="2005" width="0.4" height="15.0" fill="rgb(224,80,31)" rx="2" ry="2" />
<text  x="1186.05" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="104.4" y="1765" width="19.0" height="15.0" fill="rgb(240,111,50)" rx="2" ry="2" />
<text  x="107.36" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="896.2" y="1861" width="0.2" height="15.0" fill="rgb(228,43,28)" rx="2" ry="2" />
<text  x="899.19" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="901.6" y="1781" width="0.2" height="15.0" fill="rgb(233,179,13)" rx="2" ry="2" />
<text  x="904.56" y="1791.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="606.4" y="1989" width="0.2" height="15.0" fill="rgb(227,23,28)" rx="2" ry="2" />
<text  x="609.36" y="1999.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="58.9" y="1909" width="1.0" height="15.0" fill="rgb(222,135,44)" rx="2" ry="2" />
<text  x="61.87" y="1919.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="125.6" y="1797" width="0.8" height="15.0" fill="rgb(215,155,35)" rx="2" ry="2" />
<text  x="128.62" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="224.3" y="1861" width="0.2" height="15.0" fill="rgb(225,228,48)" rx="2" ry="2" />
<text  x="227.35" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="885.3" y="1877" width="0.4" height="15.0" fill="rgb(241,85,51)" rx="2" ry="2" />
<text  x="888.27" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="983.4" y="2005" width="0.2" height="15.0" fill="rgb(208,57,22)" rx="2" ry="2" />
<text  x="986.40" y="2015.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="12.6" y="1909" width="0.2" height="15.0" fill="rgb(236,92,52)" rx="2" ry="2" />
<text  x="15.58" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="896.4" y="1941" width="0.4" height="15.0" fill="rgb(235,4,49)" rx="2" ry="2" />
<text  x="899.39" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (15 samples, 0.25%)</title><rect x="1140.3" y="2053" width="3.0" height="15.0" fill="rgb(222,141,17)" rx="2" ry="2" />
<text  x="1143.34" y="2063.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="14.8" y="1909" width="1.0" height="15.0" fill="rgb(231,22,9)" rx="2" ry="2" />
<text  x="17.77" y="1919.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="346.5" y="1957" width="0.2" height="15.0" fill="rgb(226,189,30)" rx="2" ry="2" />
<text  x="349.52" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::close (3 samples, 0.05%)</title><rect x="854.1" y="1941" width="0.6" height="15.0" fill="rgb(228,14,34)" rx="2" ry="2" />
<text  x="857.08" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (179 samples, 3.01%)</title><rect x="925.6" y="2021" width="35.6" height="15.0" fill="rgb(253,35,13)" rx="2" ry="2" />
<text  x="928.59" y="2031.5" >[un..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="61.3" y="1813" width="0.2" height="15.0" fill="rgb(246,154,20)" rx="2" ry="2" />
<text  x="64.25" y="1823.5" ></text>
</g>
<g >
<title>dentry_free (7 samples, 0.12%)</title><rect x="728.3" y="1749" width="1.4" height="15.0" fill="rgb(207,31,1)" rx="2" ry="2" />
<text  x="731.33" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="60.1" y="1765" width="0.2" height="15.0" fill="rgb(246,144,11)" rx="2" ry="2" />
<text  x="63.06" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="697.5" y="1781" width="0.2" height="15.0" fill="rgb(241,48,36)" rx="2" ry="2" />
<text  x="700.54" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="222.6" y="1813" width="0.2" height="15.0" fill="rgb(239,121,38)" rx="2" ry="2" />
<text  x="225.56" y="1823.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="842.4" y="1877" width="0.2" height="15.0" fill="rgb(223,218,30)" rx="2" ry="2" />
<text  x="845.36" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="279.8" y="1733" width="0.2" height="15.0" fill="rgb(250,41,41)" rx="2" ry="2" />
<text  x="282.77" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="983.8" y="2005" width="0.2" height="15.0" fill="rgb(250,135,10)" rx="2" ry="2" />
<text  x="986.80" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="141.1" y="1925" width="0.2" height="15.0" fill="rgb(249,160,13)" rx="2" ry="2" />
<text  x="144.11" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="849.7" y="1893" width="0.4" height="15.0" fill="rgb(216,52,34)" rx="2" ry="2" />
<text  x="852.71" y="1903.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (5 samples, 0.08%)</title><rect x="973.9" y="2021" width="1.0" height="15.0" fill="rgb(205,153,15)" rx="2" ry="2" />
<text  x="976.87" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="153.0" y="1877" width="0.2" height="15.0" fill="rgb(240,13,31)" rx="2" ry="2" />
<text  x="156.03" y="1887.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="159.4" y="1797" width="0.2" height="15.0" fill="rgb(206,192,34)" rx="2" ry="2" />
<text  x="162.39" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="542.0" y="1925" width="0.2" height="15.0" fill="rgb(205,87,9)" rx="2" ry="2" />
<text  x="544.99" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="892.4" y="1621" width="0.2" height="15.0" fill="rgb(231,169,18)" rx="2" ry="2" />
<text  x="895.42" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="154.6" y="1877" width="0.2" height="15.0" fill="rgb(221,52,36)" rx="2" ry="2" />
<text  x="157.62" y="1887.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="222.0" y="1877" width="0.2" height="15.0" fill="rgb(251,213,33)" rx="2" ry="2" />
<text  x="224.96" y="1887.5" ></text>
</g>
<g >
<title>rb_erase_cached (11 samples, 0.19%)</title><rect x="480.6" y="1957" width="2.2" height="15.0" fill="rgb(222,172,11)" rx="2" ry="2" />
<text  x="483.61" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="233.1" y="1941" width="0.2" height="15.0" fill="rgb(217,14,32)" rx="2" ry="2" />
<text  x="236.09" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="177.9" y="1909" width="0.2" height="15.0" fill="rgb(249,119,39)" rx="2" ry="2" />
<text  x="180.86" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (3 samples, 0.05%)</title><rect x="652.0" y="2021" width="0.6" height="15.0" fill="rgb(227,193,41)" rx="2" ry="2" />
<text  x="655.05" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="171.7" y="1813" width="0.4" height="15.0" fill="rgb(224,203,2)" rx="2" ry="2" />
<text  x="174.70" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="160.2" y="1701" width="0.2" height="15.0" fill="rgb(210,129,35)" rx="2" ry="2" />
<text  x="163.18" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="908.1" y="1973" width="0.4" height="15.0" fill="rgb(216,1,37)" rx="2" ry="2" />
<text  x="911.11" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.5" y="1797" width="0.2" height="15.0" fill="rgb(218,58,50)" rx="2" ry="2" />
<text  x="887.47" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="299.6" y="1557" width="0.6" height="15.0" fill="rgb(238,148,52)" rx="2" ry="2" />
<text  x="302.64" y="1567.5" ></text>
</g>
<g >
<title>__slab_free (15 samples, 0.25%)</title><rect x="1112.7" y="1429" width="3.0" height="15.0" fill="rgb(217,100,42)" rx="2" ry="2" />
<text  x="1115.72" y="1439.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1011.0" y="1861" width="0.8" height="15.0" fill="rgb(223,195,53)" rx="2" ry="2" />
<text  x="1014.01" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="536.2" y="1653" width="0.2" height="15.0" fill="rgb(209,35,15)" rx="2" ry="2" />
<text  x="539.23" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="150.6" y="1893" width="0.2" height="15.0" fill="rgb(234,23,9)" rx="2" ry="2" />
<text  x="153.65" y="1903.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="414.7" y="1957" width="0.9" height="15.0" fill="rgb(220,0,39)" rx="2" ry="2" />
<text  x="417.66" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="848.7" y="1717" width="0.2" height="15.0" fill="rgb(251,208,39)" rx="2" ry="2" />
<text  x="851.71" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="12.4" y="2021" width="0.2" height="15.0" fill="rgb(243,3,20)" rx="2" ry="2" />
<text  x="15.38" y="2031.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="598.6" y="1829" width="0.2" height="15.0" fill="rgb(206,118,0)" rx="2" ry="2" />
<text  x="601.61" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="412.7" y="1829" width="0.2" height="15.0" fill="rgb(223,194,14)" rx="2" ry="2" />
<text  x="415.67" y="1839.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="635.6" y="1685" width="0.2" height="15.0" fill="rgb(228,46,27)" rx="2" ry="2" />
<text  x="638.56" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="848.7" y="1829" width="0.4" height="15.0" fill="rgb(246,128,49)" rx="2" ry="2" />
<text  x="851.71" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (2 samples, 0.03%)</title><rect x="551.7" y="1989" width="0.4" height="15.0" fill="rgb(249,152,21)" rx="2" ry="2" />
<text  x="554.73" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="614.3" y="1829" width="0.4" height="15.0" fill="rgb(253,180,2)" rx="2" ry="2" />
<text  x="617.30" y="1839.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (47 samples, 0.79%)</title><rect x="1108.2" y="1765" width="9.3" height="15.0" fill="rgb(243,36,22)" rx="2" ry="2" />
<text  x="1111.15" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (18 samples, 0.30%)</title><rect x="1146.7" y="2021" width="3.6" height="15.0" fill="rgb(231,146,50)" rx="2" ry="2" />
<text  x="1149.69" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="874.3" y="1957" width="1.0" height="15.0" fill="rgb(236,172,43)" rx="2" ry="2" />
<text  x="877.34" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="619.7" y="2021" width="0.2" height="15.0" fill="rgb(244,225,33)" rx="2" ry="2" />
<text  x="622.67" y="2031.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="302.4" y="1637" width="0.2" height="15.0" fill="rgb(248,63,3)" rx="2" ry="2" />
<text  x="305.42" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="119.1" y="117" width="0.2" height="15.0" fill="rgb(247,99,44)" rx="2" ry="2" />
<text  x="122.06" y="127.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="193.2" y="1973" width="0.2" height="15.0" fill="rgb(229,132,20)" rx="2" ry="2" />
<text  x="196.16" y="1983.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="691.4" y="1909" width="0.2" height="15.0" fill="rgb(214,116,24)" rx="2" ry="2" />
<text  x="694.38" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1139.9" y="1829" width="0.2" height="15.0" fill="rgb(249,48,40)" rx="2" ry="2" />
<text  x="1142.94" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="902.5" y="1909" width="0.2" height="15.0" fill="rgb(207,57,37)" rx="2" ry="2" />
<text  x="905.55" y="1919.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="243.6" y="2021" width="0.2" height="15.0" fill="rgb(250,174,5)" rx="2" ry="2" />
<text  x="246.62" y="2031.5" ></text>
</g>
<g >
<title>retint_kernel (1 samples, 0.02%)</title><rect x="1126.0" y="2021" width="0.2" height="15.0" fill="rgb(225,80,21)" rx="2" ry="2" />
<text  x="1129.03" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="51.1" y="1829" width="0.2" height="15.0" fill="rgb(239,216,39)" rx="2" ry="2" />
<text  x="54.12" y="1839.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="271.0" y="1877" width="0.2" height="15.0" fill="rgb(206,122,26)" rx="2" ry="2" />
<text  x="274.03" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="159.6" y="1685" width="0.2" height="15.0" fill="rgb(224,142,5)" rx="2" ry="2" />
<text  x="162.59" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="542.6" y="1941" width="0.2" height="15.0" fill="rgb(213,14,48)" rx="2" ry="2" />
<text  x="545.59" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_add (1 samples, 0.02%)</title><rect x="1161.8" y="1685" width="0.2" height="15.0" fill="rgb(226,0,7)" rx="2" ry="2" />
<text  x="1164.79" y="1695.5" ></text>
</g>
<g >
<title>apparmor_sk_clone_security (1 samples, 0.02%)</title><rect x="412.7" y="1557" width="0.2" height="15.0" fill="rgb(243,186,18)" rx="2" ry="2" />
<text  x="415.67" y="1567.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (8 samples, 0.13%)</title><rect x="754.2" y="1701" width="1.5" height="15.0" fill="rgb(223,34,41)" rx="2" ry="2" />
<text  x="757.15" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="412.1" y="1893" width="0.2" height="15.0" fill="rgb(212,11,10)" rx="2" ry="2" />
<text  x="415.07" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="118.9" y="85" width="0.2" height="15.0" fill="rgb(231,209,25)" rx="2" ry="2" />
<text  x="121.86" y="95.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="917.2" y="1973" width="0.4" height="15.0" fill="rgb(254,222,48)" rx="2" ry="2" />
<text  x="920.25" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (3 samples, 0.05%)</title><rect x="213.6" y="1957" width="0.6" height="15.0" fill="rgb(228,30,29)" rx="2" ry="2" />
<text  x="216.62" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="12.6" y="2021" width="2.0" height="15.0" fill="rgb(212,0,22)" rx="2" ry="2" />
<text  x="15.58" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="333.8" y="1621" width="0.4" height="15.0" fill="rgb(234,190,26)" rx="2" ry="2" />
<text  x="336.80" y="1631.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="884.5" y="1557" width="0.2" height="15.0" fill="rgb(226,170,20)" rx="2" ry="2" />
<text  x="887.47" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="792.5" y="1637" width="0.4" height="15.0" fill="rgb(215,12,43)" rx="2" ry="2" />
<text  x="795.49" y="1647.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="233.7" y="1877" width="0.8" height="15.0" fill="rgb(248,64,40)" rx="2" ry="2" />
<text  x="236.68" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="70.6" y="1669" width="0.2" height="15.0" fill="rgb(211,155,4)" rx="2" ry="2" />
<text  x="73.59" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="887.8" y="1749" width="0.2" height="15.0" fill="rgb(214,209,46)" rx="2" ry="2" />
<text  x="890.85" y="1759.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="944.1" y="1941" width="0.2" height="15.0" fill="rgb(223,118,25)" rx="2" ry="2" />
<text  x="947.07" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (141 samples, 2.37%)</title><rect x="293.7" y="1797" width="28.0" height="15.0" fill="rgb(243,128,13)" rx="2" ry="2" />
<text  x="296.68" y="1807.5" >i..</text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="615.7" y="1845" width="0.2" height="15.0" fill="rgb(240,138,18)" rx="2" ry="2" />
<text  x="618.69" y="1855.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="902.4" y="2005" width="0.3" height="15.0" fill="rgb(248,2,10)" rx="2" ry="2" />
<text  x="905.35" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="791.9" y="1525" width="0.2" height="15.0" fill="rgb(231,158,24)" rx="2" ry="2" />
<text  x="794.90" y="1535.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="71.6" y="1909" width="0.6" height="15.0" fill="rgb(218,25,37)" rx="2" ry="2" />
<text  x="74.58" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (63 samples, 1.06%)</title><rect x="1152.5" y="2037" width="12.5" height="15.0" fill="rgb(215,208,40)" rx="2" ry="2" />
<text  x="1155.45" y="2047.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="565.0" y="1557" width="0.2" height="15.0" fill="rgb(238,4,15)" rx="2" ry="2" />
<text  x="568.04" y="1567.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1119.1" y="1925" width="0.2" height="15.0" fill="rgb(231,3,15)" rx="2" ry="2" />
<text  x="1122.08" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1095.0" y="1909" width="0.2" height="15.0" fill="rgb(224,80,23)" rx="2" ry="2" />
<text  x="1098.04" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (7 samples, 0.12%)</title><rect x="992.7" y="1909" width="1.4" height="15.0" fill="rgb(211,58,1)" rx="2" ry="2" />
<text  x="995.74" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="672.9" y="1829" width="1.0" height="15.0" fill="rgb(252,18,52)" rx="2" ry="2" />
<text  x="675.91" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1027.7" y="2005" width="0.2" height="15.0" fill="rgb(239,5,41)" rx="2" ry="2" />
<text  x="1030.70" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="222.8" y="1877" width="0.2" height="15.0" fill="rgb(238,31,13)" rx="2" ry="2" />
<text  x="225.76" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="600.6" y="1781" width="0.2" height="15.0" fill="rgb(239,198,6)" rx="2" ry="2" />
<text  x="603.60" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="1128.6" y="1909" width="0.6" height="15.0" fill="rgb(240,46,48)" rx="2" ry="2" />
<text  x="1131.62" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="349.1" y="1733" width="0.2" height="15.0" fill="rgb(205,11,36)" rx="2" ry="2" />
<text  x="352.10" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="60.1" y="1781" width="0.2" height="15.0" fill="rgb(237,203,18)" rx="2" ry="2" />
<text  x="63.06" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="713.0" y="1781" width="0.2" height="15.0" fill="rgb(218,170,14)" rx="2" ry="2" />
<text  x="716.03" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (576 samples, 9.70%)</title><rect x="716.2" y="1893" width="114.4" height="15.0" fill="rgb(246,204,33)" rx="2" ry="2" />
<text  x="719.21" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1031.7" y="1685" width="0.2" height="15.0" fill="rgb(248,52,53)" rx="2" ry="2" />
<text  x="1034.67" y="1695.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="1148.9" y="1957" width="0.2" height="15.0" fill="rgb(249,68,32)" rx="2" ry="2" />
<text  x="1151.88" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="327.1" y="1717" width="0.1" height="15.0" fill="rgb(243,112,35)" rx="2" ry="2" />
<text  x="330.05" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="572.8" y="2005" width="1.0" height="15.0" fill="rgb(212,168,7)" rx="2" ry="2" />
<text  x="575.78" y="2015.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="650.7" y="1989" width="0.2" height="15.0" fill="rgb(227,46,1)" rx="2" ry="2" />
<text  x="653.66" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="29.9" y="1941" width="0.2" height="15.0" fill="rgb(241,138,41)" rx="2" ry="2" />
<text  x="32.87" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="203.5" y="2021" width="2.2" height="15.0" fill="rgb(237,47,52)" rx="2" ry="2" />
<text  x="206.49" y="2031.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="125.6" y="1877" width="0.8" height="15.0" fill="rgb(248,138,37)" rx="2" ry="2" />
<text  x="128.62" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="889.6" y="1941" width="0.2" height="15.0" fill="rgb(218,213,53)" rx="2" ry="2" />
<text  x="892.64" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="845.1" y="1813" width="0.2" height="15.0" fill="rgb(225,201,13)" rx="2" ry="2" />
<text  x="848.14" y="1823.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="836.6" y="1893" width="0.2" height="15.0" fill="rgb(245,83,8)" rx="2" ry="2" />
<text  x="839.60" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="574.2" y="1589" width="0.2" height="15.0" fill="rgb(225,69,19)" rx="2" ry="2" />
<text  x="577.18" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (14 samples, 0.24%)</title><rect x="148.3" y="1909" width="2.7" height="15.0" fill="rgb(211,104,14)" rx="2" ry="2" />
<text  x="151.26" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="262.3" y="1813" width="0.2" height="15.0" fill="rgb(248,220,13)" rx="2" ry="2" />
<text  x="265.29" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="416.4" y="2021" width="0.4" height="15.0" fill="rgb(217,172,8)" rx="2" ry="2" />
<text  x="419.44" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (3 samples, 0.05%)</title><rect x="700.1" y="2037" width="0.6" height="15.0" fill="rgb(219,108,52)" rx="2" ry="2" />
<text  x="703.12" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="113.3" y="37" width="0.2" height="15.0" fill="rgb(234,194,34)" rx="2" ry="2" />
<text  x="116.30" y="47.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="70.0" y="1813" width="0.2" height="15.0" fill="rgb(229,149,44)" rx="2" ry="2" />
<text  x="72.99" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="885.1" y="1941" width="0.6" height="15.0" fill="rgb(207,25,22)" rx="2" ry="2" />
<text  x="888.07" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="543.0" y="1941" width="0.2" height="15.0" fill="rgb(236,213,10)" rx="2" ry="2" />
<text  x="545.99" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="483.0" y="1749" width="0.2" height="15.0" fill="rgb(236,178,34)" rx="2" ry="2" />
<text  x="485.99" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.8" y="661" width="14.1" height="15.0" fill="rgb(209,216,36)" rx="2" ry="2" />
<text  x="108.75" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="32.4" y="1925" width="0.2" height="15.0" fill="rgb(250,153,49)" rx="2" ry="2" />
<text  x="35.45" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1004.7" y="1925" width="0.2" height="15.0" fill="rgb(219,130,41)" rx="2" ry="2" />
<text  x="1007.66" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="130.4" y="1973" width="1.4" height="15.0" fill="rgb(209,93,44)" rx="2" ry="2" />
<text  x="133.38" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="483.0" y="1941" width="0.2" height="15.0" fill="rgb(221,77,5)" rx="2" ry="2" />
<text  x="485.99" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (27 samples, 0.45%)</title><rect x="994.5" y="1989" width="5.4" height="15.0" fill="rgb(221,98,49)" rx="2" ry="2" />
<text  x="997.53" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="235.7" y="1829" width="0.2" height="15.0" fill="rgb(251,30,14)" rx="2" ry="2" />
<text  x="238.67" y="1839.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="177.9" y="1861" width="0.2" height="15.0" fill="rgb(215,51,13)" rx="2" ry="2" />
<text  x="180.86" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="22.9" y="1877" width="0.2" height="15.0" fill="rgb(231,136,49)" rx="2" ry="2" />
<text  x="25.91" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="293.5" y="1749" width="0.2" height="15.0" fill="rgb(224,209,48)" rx="2" ry="2" />
<text  x="296.48" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (21 samples, 0.35%)</title><rect x="88.7" y="1973" width="4.1" height="15.0" fill="rgb(208,214,51)" rx="2" ry="2" />
<text  x="91.67" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="441.3" y="1909" width="0.4" height="15.0" fill="rgb(208,25,17)" rx="2" ry="2" />
<text  x="444.28" y="1919.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="483.0" y="1637" width="0.2" height="15.0" fill="rgb(233,223,3)" rx="2" ry="2" />
<text  x="485.99" y="1647.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="415.3" y="1941" width="0.3" height="15.0" fill="rgb(217,151,30)" rx="2" ry="2" />
<text  x="418.25" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="757.5" y="1445" width="0.2" height="15.0" fill="rgb(232,18,25)" rx="2" ry="2" />
<text  x="760.53" y="1455.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="141.1" y="1829" width="0.2" height="15.0" fill="rgb(221,20,11)" rx="2" ry="2" />
<text  x="144.11" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (25 samples, 0.42%)</title><rect x="146.3" y="1925" width="4.9" height="15.0" fill="rgb(239,141,26)" rx="2" ry="2" />
<text  x="149.28" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="885.5" y="1861" width="0.2" height="15.0" fill="rgb(233,43,53)" rx="2" ry="2" />
<text  x="888.46" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="626.8" y="2005" width="0.4" height="15.0" fill="rgb(236,184,51)" rx="2" ry="2" />
<text  x="629.82" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.88%)</title><rect x="105.8" y="69" width="10.3" height="15.0" fill="rgb(233,55,6)" rx="2" ry="2" />
<text  x="108.75" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (32 samples, 0.54%)</title><rect x="1171.1" y="2021" width="6.4" height="15.0" fill="rgb(217,80,2)" rx="2" ry="2" />
<text  x="1174.13" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (46 samples, 0.77%)</title><rect x="175.9" y="2005" width="9.1" height="15.0" fill="rgb(244,88,29)" rx="2" ry="2" />
<text  x="178.88" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="829.6" y="1733" width="0.2" height="15.0" fill="rgb(253,189,20)" rx="2" ry="2" />
<text  x="832.64" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="571.0" y="1781" width="0.2" height="15.0" fill="rgb(228,63,53)" rx="2" ry="2" />
<text  x="574.00" y="1791.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="283.1" y="1813" width="0.2" height="15.0" fill="rgb(246,126,47)" rx="2" ry="2" />
<text  x="286.15" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="222.6" y="1845" width="0.2" height="15.0" fill="rgb(208,75,42)" rx="2" ry="2" />
<text  x="225.56" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="208.1" y="1861" width="0.2" height="15.0" fill="rgb(231,86,12)" rx="2" ry="2" />
<text  x="211.06" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="160.2" y="1717" width="0.2" height="15.0" fill="rgb(215,70,12)" rx="2" ry="2" />
<text  x="163.18" y="1727.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="823.3" y="1813" width="0.2" height="15.0" fill="rgb(224,159,35)" rx="2" ry="2" />
<text  x="826.29" y="1823.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (260 samples, 4.38%)</title><rect x="757.9" y="1717" width="51.7" height="15.0" fill="rgb(210,144,30)" rx="2" ry="2" />
<text  x="760.93" y="1727.5" >__tcp..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="921.4" y="2005" width="0.2" height="15.0" fill="rgb(239,225,28)" rx="2" ry="2" />
<text  x="924.42" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="398.2" y="1893" width="0.2" height="15.0" fill="rgb(207,26,13)" rx="2" ry="2" />
<text  x="401.17" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="281.6" y="1717" width="0.2" height="15.0" fill="rgb(245,21,44)" rx="2" ry="2" />
<text  x="284.56" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="906.5" y="1941" width="0.4" height="15.0" fill="rgb(207,51,48)" rx="2" ry="2" />
<text  x="909.52" y="1951.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="440.7" y="1989" width="0.2" height="15.0" fill="rgb(249,165,19)" rx="2" ry="2" />
<text  x="443.68" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="65.4" y="1845" width="0.4" height="15.0" fill="rgb(254,23,47)" rx="2" ry="2" />
<text  x="68.42" y="1855.5" ></text>
</g>
<g >
<title>____fput (498 samples, 8.38%)</title><rect x="725.0" y="1829" width="98.9" height="15.0" fill="rgb(219,132,44)" rx="2" ry="2" />
<text  x="727.95" y="1839.5" >____fput</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="800.6" y="1653" width="0.2" height="15.0" fill="rgb(252,229,13)" rx="2" ry="2" />
<text  x="803.64" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="514.8" y="1733" width="0.2" height="15.0" fill="rgb(241,131,30)" rx="2" ry="2" />
<text  x="517.78" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="896.4" y="1925" width="0.4" height="15.0" fill="rgb(218,49,29)" rx="2" ry="2" />
<text  x="899.39" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (15 samples, 0.25%)</title><rect x="847.3" y="1925" width="3.0" height="15.0" fill="rgb(234,218,29)" rx="2" ry="2" />
<text  x="850.32" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1059.7" y="1877" width="0.4" height="15.0" fill="rgb(229,20,15)" rx="2" ry="2" />
<text  x="1062.68" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="892.8" y="1941" width="0.2" height="15.0" fill="rgb(223,13,8)" rx="2" ry="2" />
<text  x="895.81" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1004.7" y="1973" width="0.2" height="15.0" fill="rgb(241,180,44)" rx="2" ry="2" />
<text  x="1007.66" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="487.0" y="1957" width="0.2" height="15.0" fill="rgb(232,133,0)" rx="2" ry="2" />
<text  x="489.97" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="356.5" y="1989" width="0.1" height="15.0" fill="rgb(223,49,51)" rx="2" ry="2" />
<text  x="359.45" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="281.2" y="1477" width="0.2" height="15.0" fill="rgb(243,203,29)" rx="2" ry="2" />
<text  x="284.16" y="1487.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="699.5" y="2021" width="0.2" height="15.0" fill="rgb(211,169,9)" rx="2" ry="2" />
<text  x="702.53" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1083.1" y="1765" width="0.2" height="15.0" fill="rgb(230,9,30)" rx="2" ry="2" />
<text  x="1086.12" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="262.3" y="1797" width="0.2" height="15.0" fill="rgb(213,166,34)" rx="2" ry="2" />
<text  x="265.29" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="392.4" y="1765" width="0.2" height="15.0" fill="rgb(241,170,49)" rx="2" ry="2" />
<text  x="395.41" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="672.5" y="1653" width="0.2" height="15.0" fill="rgb(208,129,21)" rx="2" ry="2" />
<text  x="675.51" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="388.0" y="1653" width="0.2" height="15.0" fill="rgb(212,128,1)" rx="2" ry="2" />
<text  x="391.04" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1139.9" y="1957" width="0.2" height="15.0" fill="rgb(226,153,42)" rx="2" ry="2" />
<text  x="1142.94" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="149.7" y="1877" width="0.2" height="15.0" fill="rgb(223,128,1)" rx="2" ry="2" />
<text  x="152.65" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="635.6" y="1669" width="0.2" height="15.0" fill="rgb(227,87,17)" rx="2" ry="2" />
<text  x="638.56" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (3 samples, 0.05%)</title><rect x="1148.7" y="1973" width="0.6" height="15.0" fill="rgb(215,64,0)" rx="2" ry="2" />
<text  x="1151.68" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="748.8" y="1573" width="0.2" height="15.0" fill="rgb(218,10,53)" rx="2" ry="2" />
<text  x="751.79" y="1583.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="803.0" y="1621" width="0.2" height="15.0" fill="rgb(215,197,31)" rx="2" ry="2" />
<text  x="806.02" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1161.8" y="1813" width="0.2" height="15.0" fill="rgb(246,173,6)" rx="2" ry="2" />
<text  x="1164.79" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="73.0" y="1733" width="0.2" height="15.0" fill="rgb(206,49,31)" rx="2" ry="2" />
<text  x="75.97" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="866.4" y="1973" width="0.2" height="15.0" fill="rgb(213,160,49)" rx="2" ry="2" />
<text  x="869.39" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="141.1" y="1861" width="0.2" height="15.0" fill="rgb(221,31,33)" rx="2" ry="2" />
<text  x="144.11" y="1871.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="87.7" y="1973" width="0.2" height="15.0" fill="rgb(233,212,45)" rx="2" ry="2" />
<text  x="90.67" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="552.1" y="1989" width="0.4" height="15.0" fill="rgb(217,214,9)" rx="2" ry="2" />
<text  x="555.12" y="1999.5" ></text>
</g>
<g >
<title>module_put (1 samples, 0.02%)</title><rect x="823.5" y="1813" width="0.2" height="15.0" fill="rgb(237,54,5)" rx="2" ry="2" />
<text  x="826.48" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (3 samples, 0.05%)</title><rect x="1166.4" y="2053" width="0.6" height="15.0" fill="rgb(213,107,33)" rx="2" ry="2" />
<text  x="1169.36" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="854.9" y="1941" width="0.4" height="15.0" fill="rgb(215,200,33)" rx="2" ry="2" />
<text  x="857.87" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="969.1" y="1909" width="0.2" height="15.0" fill="rgb(228,112,21)" rx="2" ry="2" />
<text  x="972.10" y="1919.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1160.8" y="1557" width="0.2" height="15.0" fill="rgb(228,195,7)" rx="2" ry="2" />
<text  x="1163.80" y="1567.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (3 samples, 0.05%)</title><rect x="1015.8" y="2005" width="0.6" height="15.0" fill="rgb(217,145,18)" rx="2" ry="2" />
<text  x="1018.78" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="224.1" y="1813" width="0.2" height="15.0" fill="rgb(222,206,4)" rx="2" ry="2" />
<text  x="227.15" y="1823.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="252.0" y="1861" width="0.2" height="15.0" fill="rgb(242,85,28)" rx="2" ry="2" />
<text  x="254.96" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (46 samples, 0.77%)</title><rect x="1108.4" y="1717" width="9.1" height="15.0" fill="rgb(233,159,43)" rx="2" ry="2" />
<text  x="1111.35" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="349.3" y="1669" width="0.2" height="15.0" fill="rgb(248,192,40)" rx="2" ry="2" />
<text  x="352.30" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="885.1" y="1893" width="0.6" height="15.0" fill="rgb(222,54,45)" rx="2" ry="2" />
<text  x="888.07" y="1903.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="497.5" y="1813" width="0.2" height="15.0" fill="rgb(222,132,36)" rx="2" ry="2" />
<text  x="500.49" y="1823.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="519.3" y="1941" width="0.4" height="15.0" fill="rgb(228,130,30)" rx="2" ry="2" />
<text  x="522.35" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="619.7" y="1957" width="0.2" height="15.0" fill="rgb(254,140,52)" rx="2" ry="2" />
<text  x="622.67" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1059.5" y="1909" width="0.2" height="15.0" fill="rgb(230,213,33)" rx="2" ry="2" />
<text  x="1062.48" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="138.3" y="2005" width="0.6" height="15.0" fill="rgb(238,76,24)" rx="2" ry="2" />
<text  x="141.33" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (4 samples, 0.07%)</title><rect x="968.5" y="2037" width="0.8" height="15.0" fill="rgb(217,45,8)" rx="2" ry="2" />
<text  x="971.50" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="659.2" y="1989" width="0.2" height="15.0" fill="rgb(242,56,8)" rx="2" ry="2" />
<text  x="662.20" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="22.9" y="1701" width="0.2" height="15.0" fill="rgb(212,59,43)" rx="2" ry="2" />
<text  x="25.91" y="1711.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="893.4" y="1813" width="0.2" height="15.0" fill="rgb(231,150,22)" rx="2" ry="2" />
<text  x="896.41" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="635.6" y="1941" width="0.2" height="15.0" fill="rgb(241,87,38)" rx="2" ry="2" />
<text  x="638.56" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (17 samples, 0.29%)</title><rect x="1017.2" y="2005" width="3.3" height="15.0" fill="rgb(239,137,27)" rx="2" ry="2" />
<text  x="1020.17" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="1117.5" y="1765" width="0.4" height="15.0" fill="rgb(234,217,39)" rx="2" ry="2" />
<text  x="1120.49" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1019.6" y="1957" width="0.2" height="15.0" fill="rgb(249,10,16)" rx="2" ry="2" />
<text  x="1022.56" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="816.5" y="1637" width="0.2" height="15.0" fill="rgb(254,181,31)" rx="2" ry="2" />
<text  x="819.53" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="571.8" y="1973" width="0.2" height="15.0" fill="rgb(219,47,52)" rx="2" ry="2" />
<text  x="574.79" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="862.4" y="1781" width="0.2" height="15.0" fill="rgb(226,222,52)" rx="2" ry="2" />
<text  x="865.42" y="1791.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="389.6" y="1941" width="1.2" height="15.0" fill="rgb(212,22,42)" rx="2" ry="2" />
<text  x="392.63" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="556.7" y="1669" width="0.2" height="15.0" fill="rgb(250,66,13)" rx="2" ry="2" />
<text  x="559.69" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="624.8" y="1925" width="0.2" height="15.0" fill="rgb(238,94,16)" rx="2" ry="2" />
<text  x="627.83" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="984.4" y="2005" width="0.2" height="15.0" fill="rgb(209,5,11)" rx="2" ry="2" />
<text  x="987.39" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="125.6" y="1813" width="0.8" height="15.0" fill="rgb(243,40,13)" rx="2" ry="2" />
<text  x="128.62" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1027.3" y="1893" width="0.4" height="15.0" fill="rgb(223,42,36)" rx="2" ry="2" />
<text  x="1030.30" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="349.5" y="2005" width="0.4" height="15.0" fill="rgb(231,206,54)" rx="2" ry="2" />
<text  x="352.50" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.8" y="629" width="13.9" height="15.0" fill="rgb(250,178,15)" rx="2" ry="2" />
<text  x="108.75" y="639.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1160.8" y="1701" width="0.2" height="15.0" fill="rgb(249,143,4)" rx="2" ry="2" />
<text  x="1163.80" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="580.7" y="1925" width="0.2" height="15.0" fill="rgb(231,148,23)" rx="2" ry="2" />
<text  x="583.73" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.7" y="1909" width="0.2" height="15.0" fill="rgb(213,73,0)" rx="2" ry="2" />
<text  x="148.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="349.3" y="1749" width="0.2" height="15.0" fill="rgb(246,202,12)" rx="2" ry="2" />
<text  x="352.30" y="1759.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="76.0" y="1941" width="0.2" height="15.0" fill="rgb(251,97,23)" rx="2" ry="2" />
<text  x="78.95" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="571.0" y="1829" width="0.2" height="15.0" fill="rgb(229,191,22)" rx="2" ry="2" />
<text  x="574.00" y="1839.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="297.6" y="1733" width="0.2" height="15.0" fill="rgb(236,29,31)" rx="2" ry="2" />
<text  x="300.65" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="841.0" y="1877" width="0.8" height="15.0" fill="rgb(248,117,30)" rx="2" ry="2" />
<text  x="843.97" y="1887.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="403.1" y="1925" width="0.2" height="15.0" fill="rgb(224,18,5)" rx="2" ry="2" />
<text  x="406.13" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="14.6" y="1941" width="0.2" height="15.0" fill="rgb(217,156,37)" rx="2" ry="2" />
<text  x="17.57" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="792.5" y="1605" width="0.4" height="15.0" fill="rgb(206,159,5)" rx="2" ry="2" />
<text  x="795.49" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="483.0" y="1893" width="0.2" height="15.0" fill="rgb(230,110,11)" rx="2" ry="2" />
<text  x="485.99" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="542.6" y="1925" width="0.2" height="15.0" fill="rgb(222,131,28)" rx="2" ry="2" />
<text  x="545.59" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (42 samples, 0.71%)</title><rect x="1108.9" y="1605" width="8.4" height="15.0" fill="rgb(250,82,42)" rx="2" ry="2" />
<text  x="1111.95" y="1615.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="63.0" y="1813" width="0.2" height="15.0" fill="rgb(214,171,0)" rx="2" ry="2" />
<text  x="66.04" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="417.0" y="1813" width="0.4" height="15.0" fill="rgb(237,223,46)" rx="2" ry="2" />
<text  x="420.04" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="349.1" y="1893" width="0.4" height="15.0" fill="rgb(225,131,45)" rx="2" ry="2" />
<text  x="352.10" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="278.2" y="1733" width="0.2" height="15.0" fill="rgb(226,169,43)" rx="2" ry="2" />
<text  x="281.18" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1143.9" y="2005" width="0.4" height="15.0" fill="rgb(211,223,25)" rx="2" ry="2" />
<text  x="1146.91" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="32.4" y="1861" width="0.2" height="15.0" fill="rgb(214,3,53)" rx="2" ry="2" />
<text  x="35.45" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="614.5" y="1813" width="0.2" height="15.0" fill="rgb(240,221,42)" rx="2" ry="2" />
<text  x="617.50" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1161.8" y="1733" width="0.2" height="15.0" fill="rgb(215,110,9)" rx="2" ry="2" />
<text  x="1164.79" y="1743.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (5 samples, 0.08%)</title><rect x="1014.6" y="1973" width="1.0" height="15.0" fill="rgb(244,11,54)" rx="2" ry="2" />
<text  x="1017.59" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.57%)</title><rect x="559.1" y="1957" width="6.7" height="15.0" fill="rgb(205,194,12)" rx="2" ry="2" />
<text  x="562.08" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="625.8" y="1989" width="0.2" height="15.0" fill="rgb(248,80,25)" rx="2" ry="2" />
<text  x="628.82" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="184.4" y="1941" width="0.2" height="15.0" fill="rgb(233,40,31)" rx="2" ry="2" />
<text  x="187.42" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1004.7" y="1893" width="0.2" height="15.0" fill="rgb(224,128,46)" rx="2" ry="2" />
<text  x="1007.66" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="390.4" y="1909" width="0.2" height="15.0" fill="rgb(242,154,46)" rx="2" ry="2" />
<text  x="393.42" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="99.6" y="1941" width="0.2" height="15.0" fill="rgb(219,1,13)" rx="2" ry="2" />
<text  x="102.59" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1027.3" y="1861" width="0.4" height="15.0" fill="rgb(214,69,26)" rx="2" ry="2" />
<text  x="1030.30" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="222.6" y="1797" width="0.2" height="15.0" fill="rgb(248,58,40)" rx="2" ry="2" />
<text  x="225.56" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="298.6" y="1589" width="0.8" height="15.0" fill="rgb(251,193,10)" rx="2" ry="2" />
<text  x="301.64" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="415.3" y="1925" width="0.3" height="15.0" fill="rgb(214,84,14)" rx="2" ry="2" />
<text  x="418.25" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="824.7" y="1813" width="0.6" height="15.0" fill="rgb(238,5,37)" rx="2" ry="2" />
<text  x="827.68" y="1823.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="302.4" y="1605" width="0.2" height="15.0" fill="rgb(212,46,51)" rx="2" ry="2" />
<text  x="305.42" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="162.8" y="1909" width="0.2" height="15.0" fill="rgb(253,28,5)" rx="2" ry="2" />
<text  x="165.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_select_initial_window (1 samples, 0.02%)</title><rect x="1139.9" y="1717" width="0.2" height="15.0" fill="rgb(229,180,12)" rx="2" ry="2" />
<text  x="1142.94" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="999.1" y="1909" width="0.4" height="15.0" fill="rgb(214,119,30)" rx="2" ry="2" />
<text  x="1002.09" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="124.6" y="1845" width="0.4" height="15.0" fill="rgb(225,126,17)" rx="2" ry="2" />
<text  x="127.62" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="672.5" y="1781" width="0.2" height="15.0" fill="rgb(253,31,16)" rx="2" ry="2" />
<text  x="675.51" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="637.1" y="1909" width="0.4" height="15.0" fill="rgb(243,109,52)" rx="2" ry="2" />
<text  x="640.15" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="748.8" y="1557" width="0.2" height="15.0" fill="rgb(248,143,24)" rx="2" ry="2" />
<text  x="751.79" y="1567.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="373.9" y="1845" width="0.2" height="15.0" fill="rgb(253,88,23)" rx="2" ry="2" />
<text  x="376.93" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (3 samples, 0.05%)</title><rect x="584.9" y="1893" width="0.6" height="15.0" fill="rgb(245,124,52)" rx="2" ry="2" />
<text  x="587.90" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1151.9" y="2053" width="0.4" height="15.0" fill="rgb(220,214,0)" rx="2" ry="2" />
<text  x="1154.86" y="2063.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="635.6" y="1637" width="0.2" height="15.0" fill="rgb(207,229,15)" rx="2" ry="2" />
<text  x="638.56" y="1647.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="177.9" y="1893" width="0.2" height="15.0" fill="rgb(254,205,15)" rx="2" ry="2" />
<text  x="180.86" y="1903.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="783.0" y="1413" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="785.96" y="1423.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (41 samples, 0.69%)</title><rect x="130.2" y="2005" width="8.1" height="15.0" fill="rgb(227,62,5)" rx="2" ry="2" />
<text  x="133.19" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="535.8" y="1861" width="0.2" height="15.0" fill="rgb(248,182,22)" rx="2" ry="2" />
<text  x="538.84" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="163.2" y="1925" width="0.2" height="15.0" fill="rgb(249,217,29)" rx="2" ry="2" />
<text  x="166.16" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (5 samples, 0.08%)</title><rect x="622.4" y="2037" width="1.0" height="15.0" fill="rgb(244,1,29)" rx="2" ry="2" />
<text  x="625.45" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.4" y="1989" width="0.2" height="15.0" fill="rgb(214,203,43)" rx="2" ry="2" />
<text  x="984.41" y="1999.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="103.2" y="2021" width="0.2" height="15.0" fill="rgb(251,7,54)" rx="2" ry="2" />
<text  x="106.17" y="2031.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="99.6" y="1909" width="0.2" height="15.0" fill="rgb(225,213,31)" rx="2" ry="2" />
<text  x="102.59" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="281.2" y="1829" width="0.2" height="15.0" fill="rgb(210,132,40)" rx="2" ry="2" />
<text  x="284.16" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="571.0" y="1941" width="0.2" height="15.0" fill="rgb(230,229,39)" rx="2" ry="2" />
<text  x="574.00" y="1951.5" ></text>
</g>
<g >
<title>___sys_sendmsg (462 samples, 7.78%)</title><rect x="254.7" y="1957" width="91.8" height="15.0" fill="rgb(239,65,22)" rx="2" ry="2" />
<text  x="257.74" y="1967.5" >___sys_sen..</text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="417.0" y="1797" width="0.4" height="15.0" fill="rgb(251,4,10)" rx="2" ry="2" />
<text  x="420.04" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="954.6" y="1989" width="0.8" height="15.0" fill="rgb(246,212,40)" rx="2" ry="2" />
<text  x="957.60" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="180.2" y="1957" width="0.2" height="15.0" fill="rgb(207,20,46)" rx="2" ry="2" />
<text  x="183.25" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="271.2" y="1829" width="0.2" height="15.0" fill="rgb(210,160,0)" rx="2" ry="2" />
<text  x="274.23" y="1839.5" ></text>
</g>
<g >
<title>tcp_ack (38 samples, 0.64%)</title><rect x="1109.3" y="1541" width="7.6" height="15.0" fill="rgb(245,15,36)" rx="2" ry="2" />
<text  x="1112.35" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (2 samples, 0.03%)</title><rect x="1144.7" y="2037" width="0.4" height="15.0" fill="rgb(243,55,44)" rx="2" ry="2" />
<text  x="1147.71" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="580.9" y="2021" width="0.4" height="15.0" fill="rgb(249,95,3)" rx="2" ry="2" />
<text  x="583.93" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1019.4" y="1973" width="0.2" height="15.0" fill="rgb(217,211,28)" rx="2" ry="2" />
<text  x="1022.36" y="1983.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="334.0" y="1445" width="0.2" height="15.0" fill="rgb(212,53,29)" rx="2" ry="2" />
<text  x="337.00" y="1455.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="903.7" y="2005" width="0.4" height="15.0" fill="rgb(225,159,6)" rx="2" ry="2" />
<text  x="906.74" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="326.7" y="1541" width="0.4" height="15.0" fill="rgb(212,44,12)" rx="2" ry="2" />
<text  x="329.65" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="514.8" y="1781" width="0.2" height="15.0" fill="rgb(227,175,44)" rx="2" ry="2" />
<text  x="517.78" y="1791.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="892.6" y="1925" width="0.2" height="15.0" fill="rgb(206,224,33)" rx="2" ry="2" />
<text  x="895.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="556.7" y="1717" width="0.2" height="15.0" fill="rgb(224,85,15)" rx="2" ry="2" />
<text  x="559.69" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="199.3" y="2021" width="0.2" height="15.0" fill="rgb(252,104,48)" rx="2" ry="2" />
<text  x="202.32" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1019.8" y="1861" width="0.7" height="15.0" fill="rgb(248,36,16)" rx="2" ry="2" />
<text  x="1022.75" y="1871.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="847.1" y="1925" width="0.2" height="15.0" fill="rgb(248,161,11)" rx="2" ry="2" />
<text  x="850.12" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="75.8" y="1893" width="0.2" height="15.0" fill="rgb(220,76,41)" rx="2" ry="2" />
<text  x="78.75" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.7" y="53" width="0.2" height="15.0" fill="rgb(229,23,54)" rx="2" ry="2" />
<text  x="121.66" y="63.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="470.5" y="1957" width="0.2" height="15.0" fill="rgb(231,198,43)" rx="2" ry="2" />
<text  x="473.48" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="545.2" y="1861" width="0.2" height="15.0" fill="rgb(228,36,19)" rx="2" ry="2" />
<text  x="548.17" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.4" y="1973" width="0.2" height="15.0" fill="rgb(211,39,41)" rx="2" ry="2" />
<text  x="984.41" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1128.8" y="1813" width="0.2" height="15.0" fill="rgb(223,76,23)" rx="2" ry="2" />
<text  x="1131.81" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="507.0" y="1845" width="0.2" height="15.0" fill="rgb(211,151,1)" rx="2" ry="2" />
<text  x="510.03" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="825.1" y="1701" width="0.2" height="15.0" fill="rgb(205,51,13)" rx="2" ry="2" />
<text  x="828.07" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="464.1" y="1909" width="0.2" height="15.0" fill="rgb(252,21,48)" rx="2" ry="2" />
<text  x="467.12" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1150.5" y="1957" width="0.2" height="15.0" fill="rgb(243,155,18)" rx="2" ry="2" />
<text  x="1153.47" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="600.4" y="1877" width="0.2" height="15.0" fill="rgb(232,219,10)" rx="2" ry="2" />
<text  x="603.40" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="127.4" y="1973" width="0.2" height="15.0" fill="rgb(233,150,10)" rx="2" ry="2" />
<text  x="130.40" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="1148.9" y="1941" width="0.2" height="15.0" fill="rgb(209,85,23)" rx="2" ry="2" />
<text  x="1151.88" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="879.3" y="1893" width="0.2" height="15.0" fill="rgb(249,34,32)" rx="2" ry="2" />
<text  x="882.31" y="1903.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="536.2" y="1525" width="0.2" height="15.0" fill="rgb(237,207,18)" rx="2" ry="2" />
<text  x="539.23" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="387.6" y="1845" width="0.2" height="15.0" fill="rgb(229,153,8)" rx="2" ry="2" />
<text  x="390.64" y="1855.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="343.1" y="1861" width="0.2" height="15.0" fill="rgb(221,54,31)" rx="2" ry="2" />
<text  x="346.14" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (1 samples, 0.02%)</title><rect x="901.8" y="2005" width="0.2" height="15.0" fill="rgb(240,41,51)" rx="2" ry="2" />
<text  x="904.75" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="884.5" y="1525" width="0.2" height="15.0" fill="rgb(207,108,19)" rx="2" ry="2" />
<text  x="887.47" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="390.4" y="1829" width="0.2" height="15.0" fill="rgb(214,18,50)" rx="2" ry="2" />
<text  x="393.42" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="892.4" y="1765" width="0.2" height="15.0" fill="rgb(242,95,49)" rx="2" ry="2" />
<text  x="895.42" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::coalesceAndGetRange (2 samples, 0.03%)</title><rect x="984.0" y="2005" width="0.4" height="15.0" fill="rgb(214,72,43)" rx="2" ry="2" />
<text  x="987.00" y="2015.5" ></text>
</g>
<g >
<title>dput (71 samples, 1.20%)</title><rect x="726.7" y="1797" width="14.1" height="15.0" fill="rgb(224,14,32)" rx="2" ry="2" />
<text  x="729.74" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="783.2" y="1461" width="0.2" height="15.0" fill="rgb(237,51,25)" rx="2" ry="2" />
<text  x="786.16" y="1471.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="896.2" y="1877" width="0.2" height="15.0" fill="rgb(251,42,14)" rx="2" ry="2" />
<text  x="899.19" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (109 samples, 1.84%)</title><rect x="982.8" y="2037" width="21.7" height="15.0" fill="rgb(223,203,6)" rx="2" ry="2" />
<text  x="985.80" y="2047.5" >f..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1139.9" y="2021" width="0.2" height="15.0" fill="rgb(210,10,43)" rx="2" ry="2" />
<text  x="1142.94" y="2031.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="739.9" y="1701" width="0.2" height="15.0" fill="rgb(247,149,42)" rx="2" ry="2" />
<text  x="742.85" y="1711.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="57.7" y="1909" width="0.2" height="15.0" fill="rgb(237,191,12)" rx="2" ry="2" />
<text  x="60.68" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="252.8" y="1941" width="0.2" height="15.0" fill="rgb(226,225,31)" rx="2" ry="2" />
<text  x="255.75" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="906.1" y="1909" width="0.2" height="15.0" fill="rgb(237,204,14)" rx="2" ry="2" />
<text  x="909.12" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="74.4" y="1813" width="0.2" height="15.0" fill="rgb(248,185,28)" rx="2" ry="2" />
<text  x="77.36" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="388.0" y="1813" width="0.2" height="15.0" fill="rgb(223,229,43)" rx="2" ry="2" />
<text  x="391.04" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="32.4" y="1989" width="0.2" height="15.0" fill="rgb(235,223,4)" rx="2" ry="2" />
<text  x="35.45" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="672.5" y="1765" width="0.2" height="15.0" fill="rgb(228,78,11)" rx="2" ry="2" />
<text  x="675.51" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="68.6" y="1925" width="0.2" height="15.0" fill="rgb(218,202,8)" rx="2" ry="2" />
<text  x="71.60" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="857.1" y="1941" width="0.2" height="15.0" fill="rgb(243,37,10)" rx="2" ry="2" />
<text  x="860.06" y="1951.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="348.9" y="1893" width="0.2" height="15.0" fill="rgb(238,70,7)" rx="2" ry="2" />
<text  x="351.90" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="556.7" y="1861" width="0.2" height="15.0" fill="rgb(216,149,3)" rx="2" ry="2" />
<text  x="559.69" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1143.7" y="1973" width="0.2" height="15.0" fill="rgb(239,127,53)" rx="2" ry="2" />
<text  x="1146.71" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="672.5" y="1669" width="0.2" height="15.0" fill="rgb(228,8,45)" rx="2" ry="2" />
<text  x="675.51" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="175.5" y="2005" width="0.4" height="15.0" fill="rgb(212,158,15)" rx="2" ry="2" />
<text  x="178.48" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="20.9" y="2037" width="0.4" height="15.0" fill="rgb(237,18,14)" rx="2" ry="2" />
<text  x="23.93" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="522.1" y="1957" width="0.6" height="15.0" fill="rgb(216,3,15)" rx="2" ry="2" />
<text  x="525.13" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="571.8" y="1909" width="0.2" height="15.0" fill="rgb(248,78,43)" rx="2" ry="2" />
<text  x="574.79" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="188.2" y="1893" width="0.2" height="15.0" fill="rgb(226,169,38)" rx="2" ry="2" />
<text  x="191.19" y="1903.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="402.5" y="1845" width="0.2" height="15.0" fill="rgb(228,40,45)" rx="2" ry="2" />
<text  x="405.54" y="1855.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="154.6" y="1781" width="0.2" height="15.0" fill="rgb(219,179,0)" rx="2" ry="2" />
<text  x="157.62" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="897.8" y="1989" width="0.2" height="15.0" fill="rgb(216,203,18)" rx="2" ry="2" />
<text  x="900.78" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (1 samples, 0.02%)</title><rect x="141.3" y="1957" width="0.2" height="15.0" fill="rgb(235,196,30)" rx="2" ry="2" />
<text  x="144.31" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="252.0" y="1925" width="0.8" height="15.0" fill="rgb(250,73,21)" rx="2" ry="2" />
<text  x="254.96" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="755.7" y="1701" width="0.8" height="15.0" fill="rgb(227,67,19)" rx="2" ry="2" />
<text  x="758.74" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="520.9" y="1941" width="0.4" height="15.0" fill="rgb(244,155,54)" rx="2" ry="2" />
<text  x="523.94" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="531.5" y="1925" width="0.4" height="15.0" fill="rgb(219,127,13)" rx="2" ry="2" />
<text  x="534.46" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="488.0" y="1957" width="0.2" height="15.0" fill="rgb(229,43,8)" rx="2" ry="2" />
<text  x="490.96" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1011.0" y="1925" width="0.8" height="15.0" fill="rgb(248,98,37)" rx="2" ry="2" />
<text  x="1014.01" y="1935.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="808.6" y="1685" width="0.4" height="15.0" fill="rgb(207,70,2)" rx="2" ry="2" />
<text  x="811.59" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="575.8" y="1941" width="0.2" height="15.0" fill="rgb(224,7,48)" rx="2" ry="2" />
<text  x="578.76" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="926.0" y="1989" width="0.2" height="15.0" fill="rgb(243,156,47)" rx="2" ry="2" />
<text  x="928.99" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="106.7" y="37" width="0.2" height="15.0" fill="rgb(246,83,22)" rx="2" ry="2" />
<text  x="109.74" y="47.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::getEvent (1 samples, 0.02%)</title><rect x="61.5" y="1909" width="0.1" height="15.0" fill="rgb(247,217,22)" rx="2" ry="2" />
<text  x="64.45" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="757.5" y="1525" width="0.2" height="15.0" fill="rgb(219,159,24)" rx="2" ry="2" />
<text  x="760.53" y="1535.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="912.7" y="1989" width="0.2" height="15.0" fill="rgb(252,111,26)" rx="2" ry="2" />
<text  x="915.68" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="349.9" y="2021" width="3.0" height="15.0" fill="rgb(233,110,38)" rx="2" ry="2" />
<text  x="352.90" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="158.6" y="1845" width="0.2" height="15.0" fill="rgb(216,219,20)" rx="2" ry="2" />
<text  x="161.59" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (6 samples, 0.10%)</title><rect x="618.5" y="2021" width="1.2" height="15.0" fill="rgb(231,61,10)" rx="2" ry="2" />
<text  x="621.47" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="897.2" y="1925" width="0.2" height="15.0" fill="rgb(216,91,42)" rx="2" ry="2" />
<text  x="900.19" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="533.3" y="1957" width="0.3" height="15.0" fill="rgb(243,58,14)" rx="2" ry="2" />
<text  x="536.25" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="829.6" y="1765" width="0.2" height="15.0" fill="rgb(254,180,23)" rx="2" ry="2" />
<text  x="832.64" y="1775.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="283.1" y="1829" width="0.2" height="15.0" fill="rgb(244,89,3)" rx="2" ry="2" />
<text  x="286.15" y="1839.5" ></text>
</g>
<g >
<title>__libc_recv (6 samples, 0.10%)</title><rect x="51.7" y="1941" width="1.2" height="15.0" fill="rgb(222,208,46)" rx="2" ry="2" />
<text  x="54.72" y="1951.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="1061.5" y="1973" width="0.8" height="15.0" fill="rgb(227,51,19)" rx="2" ry="2" />
<text  x="1064.47" y="1983.5" ></text>
</g>
<g >
<title>event_set (2 samples, 0.03%)</title><rect x="222.4" y="1877" width="0.4" height="15.0" fill="rgb(245,209,46)" rx="2" ry="2" />
<text  x="225.36" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (12 samples, 0.20%)</title><rect x="521.5" y="1989" width="2.4" height="15.0" fill="rgb(252,3,9)" rx="2" ry="2" />
<text  x="524.53" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (38 samples, 0.64%)</title><rect x="645.1" y="2037" width="7.5" height="15.0" fill="rgb(248,212,0)" rx="2" ry="2" />
<text  x="648.09" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="12.4" y="2037" width="0.2" height="15.0" fill="rgb(210,74,29)" rx="2" ry="2" />
<text  x="15.38" y="2047.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="126.8" y="1957" width="0.2" height="15.0" fill="rgb(210,209,17)" rx="2" ry="2" />
<text  x="129.81" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="485.2" y="1957" width="0.2" height="15.0" fill="rgb(247,100,10)" rx="2" ry="2" />
<text  x="488.18" y="1967.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="688.8" y="1893" width="0.2" height="15.0" fill="rgb(218,97,17)" rx="2" ry="2" />
<text  x="691.80" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="969.1" y="1973" width="0.2" height="15.0" fill="rgb(241,185,51)" rx="2" ry="2" />
<text  x="972.10" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (14 samples, 0.24%)</title><rect x="696.3" y="1989" width="2.8" height="15.0" fill="rgb(229,145,5)" rx="2" ry="2" />
<text  x="699.35" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="120.1" y="1205" width="0.2" height="15.0" fill="rgb(253,195,41)" rx="2" ry="2" />
<text  x="123.05" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="464.5" y="1893" width="0.6" height="15.0" fill="rgb(248,41,16)" rx="2" ry="2" />
<text  x="467.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="917.1" y="1989" width="0.5" height="15.0" fill="rgb(248,181,54)" rx="2" ry="2" />
<text  x="920.05" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="825.1" y="1733" width="0.2" height="15.0" fill="rgb(219,186,8)" rx="2" ry="2" />
<text  x="828.07" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="326.9" y="1429" width="0.2" height="15.0" fill="rgb(217,156,31)" rx="2" ry="2" />
<text  x="329.85" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (1 samples, 0.02%)</title><rect x="631.4" y="1989" width="0.2" height="15.0" fill="rgb(251,89,24)" rx="2" ry="2" />
<text  x="634.39" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="293" width="13.5" height="15.0" fill="rgb(245,189,39)" rx="2" ry="2" />
<text  x="108.75" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (6 samples, 0.10%)</title><rect x="915.1" y="1973" width="1.2" height="15.0" fill="rgb(205,28,12)" rx="2" ry="2" />
<text  x="918.06" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (1 samples, 0.02%)</title><rect x="902.0" y="2005" width="0.2" height="15.0" fill="rgb(237,148,42)" rx="2" ry="2" />
<text  x="904.95" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="1162.0" y="1957" width="3.0" height="15.0" fill="rgb(222,124,14)" rx="2" ry="2" />
<text  x="1164.99" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (1 samples, 0.02%)</title><rect x="185.6" y="2021" width="0.2" height="15.0" fill="rgb(248,54,25)" rx="2" ry="2" />
<text  x="188.61" y="2031.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="867.4" y="1989" width="0.8" height="15.0" fill="rgb(253,171,32)" rx="2" ry="2" />
<text  x="870.39" y="1999.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="125.6" y="1893" width="0.8" height="15.0" fill="rgb(250,48,3)" rx="2" ry="2" />
<text  x="128.62" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="887.8" y="1589" width="0.2" height="15.0" fill="rgb(237,115,18)" rx="2" ry="2" />
<text  x="890.85" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="441.3" y="1893" width="0.2" height="15.0" fill="rgb(245,13,13)" rx="2" ry="2" />
<text  x="444.28" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="792.5" y="1669" width="0.4" height="15.0" fill="rgb(211,66,23)" rx="2" ry="2" />
<text  x="795.49" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="75.2" y="1941" width="0.2" height="15.0" fill="rgb(241,111,44)" rx="2" ry="2" />
<text  x="78.16" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (5 samples, 0.08%)</title><rect x="624.0" y="1957" width="1.0" height="15.0" fill="rgb(232,58,25)" rx="2" ry="2" />
<text  x="627.04" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="131.4" y="1925" width="0.4" height="15.0" fill="rgb(227,185,1)" rx="2" ry="2" />
<text  x="134.38" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="159.4" y="1813" width="0.2" height="15.0" fill="rgb(222,150,42)" rx="2" ry="2" />
<text  x="162.39" y="1823.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="969.7" y="1909" width="0.2" height="15.0" fill="rgb(229,209,13)" rx="2" ry="2" />
<text  x="972.69" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="536.0" y="1925" width="0.4" height="15.0" fill="rgb(219,213,11)" rx="2" ry="2" />
<text  x="539.03" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1033.5" y="1669" width="0.2" height="15.0" fill="rgb(245,214,44)" rx="2" ry="2" />
<text  x="1036.46" y="1679.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="893.4" y="1829" width="0.2" height="15.0" fill="rgb(245,53,7)" rx="2" ry="2" />
<text  x="896.41" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="150.2" y="1877" width="0.4" height="15.0" fill="rgb(234,221,50)" rx="2" ry="2" />
<text  x="153.25" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="171.3" y="1957" width="0.4" height="15.0" fill="rgb(222,37,26)" rx="2" ry="2" />
<text  x="174.31" y="1967.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="125.6" y="1861" width="0.8" height="15.0" fill="rgb(244,65,5)" rx="2" ry="2" />
<text  x="128.62" y="1871.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="57.7" y="1893" width="0.2" height="15.0" fill="rgb(254,84,43)" rx="2" ry="2" />
<text  x="60.68" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="291.1" y="1797" width="0.2" height="15.0" fill="rgb(245,58,10)" rx="2" ry="2" />
<text  x="294.09" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="118.1" y="69" width="0.2" height="15.0" fill="rgb(251,181,24)" rx="2" ry="2" />
<text  x="121.07" y="79.5" ></text>
</g>
<g >
<title>[unknown] (67 samples, 1.13%)</title><rect x="105.8" y="117" width="13.3" height="15.0" fill="rgb(244,96,43)" rx="2" ry="2" />
<text  x="108.75" y="127.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="536.4" y="2005" width="0.2" height="15.0" fill="rgb(234,49,13)" rx="2" ry="2" />
<text  x="539.43" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1118.9" y="1893" width="0.2" height="15.0" fill="rgb(226,120,46)" rx="2" ry="2" />
<text  x="1121.88" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="905.5" y="1989" width="0.4" height="15.0" fill="rgb(242,78,52)" rx="2" ry="2" />
<text  x="908.53" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (11 samples, 0.19%)</title><rect x="1092.5" y="1925" width="2.1" height="15.0" fill="rgb(207,162,53)" rx="2" ry="2" />
<text  x="1095.46" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="135.9" y="1941" width="0.2" height="15.0" fill="rgb(241,20,1)" rx="2" ry="2" />
<text  x="138.95" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (2 samples, 0.03%)</title><rect x="185.8" y="2021" width="0.4" height="15.0" fill="rgb(243,226,10)" rx="2" ry="2" />
<text  x="188.81" y="2031.5" ></text>
</g>
<g >
<title>___slab_alloc (7 samples, 0.12%)</title><rect x="276.6" y="1797" width="1.4" height="15.0" fill="rgb(214,50,12)" rx="2" ry="2" />
<text  x="279.59" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="897.2" y="1957" width="0.2" height="15.0" fill="rgb(222,112,36)" rx="2" ry="2" />
<text  x="900.19" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="845.1" y="1861" width="0.2" height="15.0" fill="rgb(228,108,9)" rx="2" ry="2" />
<text  x="848.14" y="1871.5" ></text>
</g>
<g >
<title>folly::canNallocx (1 samples, 0.02%)</title><rect x="648.9" y="1973" width="0.2" height="15.0" fill="rgb(247,115,8)" rx="2" ry="2" />
<text  x="651.87" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="120.3" y="1285" width="0.2" height="15.0" fill="rgb(237,154,44)" rx="2" ry="2" />
<text  x="123.25" y="1295.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="565.0" y="1621" width="0.2" height="15.0" fill="rgb(230,126,12)" rx="2" ry="2" />
<text  x="568.04" y="1631.5" ></text>
</g>
<g >
<title>_copy_to_iter (12 samples, 0.20%)</title><rect x="1103.0" y="1909" width="2.4" height="15.0" fill="rgb(215,126,16)" rx="2" ry="2" />
<text  x="1105.99" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="281.6" y="1669" width="0.2" height="15.0" fill="rgb(218,203,6)" rx="2" ry="2" />
<text  x="284.56" y="1679.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (51 samples, 0.86%)</title><rect x="271.8" y="1877" width="10.2" height="15.0" fill="rgb(241,45,0)" rx="2" ry="2" />
<text  x="274.82" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (2 samples, 0.03%)</title><rect x="528.5" y="1957" width="0.4" height="15.0" fill="rgb(230,98,48)" rx="2" ry="2" />
<text  x="531.48" y="1967.5" ></text>
</g>
<g >
<title>__inet_inherit_port (1 samples, 0.02%)</title><rect x="1012.2" y="1717" width="0.2" height="15.0" fill="rgb(233,156,30)" rx="2" ry="2" />
<text  x="1015.21" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="691.2" y="1877" width="0.2" height="15.0" fill="rgb(223,171,30)" rx="2" ry="2" />
<text  x="694.18" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.8" y="677" width="14.1" height="15.0" fill="rgb(218,77,13)" rx="2" ry="2" />
<text  x="108.75" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="578.3" y="1941" width="0.2" height="15.0" fill="rgb(250,183,45)" rx="2" ry="2" />
<text  x="581.35" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (6 samples, 0.10%)</title><rect x="1109.5" y="1493" width="1.2" height="15.0" fill="rgb(237,104,12)" rx="2" ry="2" />
<text  x="1112.55" y="1503.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="141.1" y="1877" width="0.2" height="15.0" fill="rgb(234,18,24)" rx="2" ry="2" />
<text  x="144.11" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="816.5" y="1621" width="0.2" height="15.0" fill="rgb(249,127,11)" rx="2" ry="2" />
<text  x="819.53" y="1631.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1109.1" y="1541" width="0.2" height="15.0" fill="rgb(243,137,28)" rx="2" ry="2" />
<text  x="1112.15" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="544.8" y="1909" width="0.6" height="15.0" fill="rgb(249,1,2)" rx="2" ry="2" />
<text  x="547.77" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (13 samples, 0.22%)</title><rect x="543.2" y="2005" width="2.6" height="15.0" fill="rgb(233,56,0)" rx="2" ry="2" />
<text  x="546.19" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="417.0" y="1765" width="0.4" height="15.0" fill="rgb(209,172,35)" rx="2" ry="2" />
<text  x="420.04" y="1775.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="87.3" y="1925" width="0.2" height="15.0" fill="rgb(211,157,38)" rx="2" ry="2" />
<text  x="90.28" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="960.6" y="1893" width="0.2" height="15.0" fill="rgb(226,6,27)" rx="2" ry="2" />
<text  x="963.56" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="183.8" y="1989" width="1.2" height="15.0" fill="rgb(252,71,26)" rx="2" ry="2" />
<text  x="186.82" y="1999.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="1059.7" y="1717" width="0.2" height="15.0" fill="rgb(235,158,33)" rx="2" ry="2" />
<text  x="1062.68" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="998.3" y="1893" width="0.2" height="15.0" fill="rgb(214,68,46)" rx="2" ry="2" />
<text  x="1001.30" y="1903.5" ></text>
</g>
<g >
<title>evict (45 samples, 0.76%)</title><rect x="731.1" y="1717" width="9.0" height="15.0" fill="rgb(205,20,1)" rx="2" ry="2" />
<text  x="734.11" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (93 samples, 1.57%)</title><rect x="659.0" y="2005" width="18.5" height="15.0" fill="rgb(243,211,23)" rx="2" ry="2" />
<text  x="662.00" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="171.7" y="1861" width="0.4" height="15.0" fill="rgb(234,132,42)" rx="2" ry="2" />
<text  x="174.70" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="565.0" y="1781" width="0.2" height="15.0" fill="rgb(214,223,38)" rx="2" ry="2" />
<text  x="568.04" y="1791.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="800.2" y="1685" width="0.6" height="15.0" fill="rgb(213,77,0)" rx="2" ry="2" />
<text  x="803.24" y="1695.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (11 samples, 0.19%)</title><rect x="206.3" y="2021" width="2.2" height="15.0" fill="rgb(251,58,14)" rx="2" ry="2" />
<text  x="209.27" y="2031.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (11 samples, 0.19%)</title><rect x="702.7" y="1989" width="2.2" height="15.0" fill="rgb(222,219,28)" rx="2" ry="2" />
<text  x="705.70" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="962.3" y="1989" width="0.8" height="15.0" fill="rgb(211,149,27)" rx="2" ry="2" />
<text  x="965.34" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="792.7" y="1381" width="0.2" height="15.0" fill="rgb(235,0,52)" rx="2" ry="2" />
<text  x="795.69" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="141.3" y="1877" width="0.2" height="15.0" fill="rgb(221,118,23)" rx="2" ry="2" />
<text  x="144.31" y="1887.5" ></text>
</g>
<g >
<title>__close (16 samples, 0.27%)</title><rect x="963.9" y="1973" width="3.2" height="15.0" fill="rgb(254,64,10)" rx="2" ry="2" />
<text  x="966.93" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1105.2" y="1637" width="0.2" height="15.0" fill="rgb(249,41,45)" rx="2" ry="2" />
<text  x="1108.18" y="1647.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (399 samples, 6.72%)</title><rect x="264.3" y="1893" width="79.2" height="15.0" fill="rgb(239,216,4)" rx="2" ry="2" />
<text  x="267.28" y="1903.5" >tcp_sendm..</text>
</g>
<g >
<title>skb_entail (2 samples, 0.03%)</title><rect x="262.5" y="1893" width="0.4" height="15.0" fill="rgb(241,106,11)" rx="2" ry="2" />
<text  x="265.49" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.5" y="1781" width="0.2" height="15.0" fill="rgb(236,228,36)" rx="2" ry="2" />
<text  x="887.47" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="838.0" y="1893" width="0.2" height="15.0" fill="rgb(209,120,11)" rx="2" ry="2" />
<text  x="840.99" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="81.5" y="1845" width="0.2" height="15.0" fill="rgb(224,82,35)" rx="2" ry="2" />
<text  x="84.52" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="866.4" y="1941" width="0.2" height="15.0" fill="rgb(236,217,4)" rx="2" ry="2" />
<text  x="869.39" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="417.2" y="1717" width="0.2" height="15.0" fill="rgb(223,221,28)" rx="2" ry="2" />
<text  x="420.24" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="483.0" y="1925" width="0.2" height="15.0" fill="rgb(238,25,21)" rx="2" ry="2" />
<text  x="485.99" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="291.1" y="1765" width="0.2" height="15.0" fill="rgb(238,226,53)" rx="2" ry="2" />
<text  x="294.09" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1102.8" y="1669" width="0.2" height="15.0" fill="rgb(208,133,53)" rx="2" ry="2" />
<text  x="1105.79" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="578.3" y="1925" width="0.2" height="15.0" fill="rgb(235,205,23)" rx="2" ry="2" />
<text  x="581.35" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (10 samples, 0.17%)</title><rect x="969.9" y="2037" width="2.0" height="15.0" fill="rgb(246,116,14)" rx="2" ry="2" />
<text  x="972.89" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="888.2" y="1749" width="0.2" height="15.0" fill="rgb(221,43,52)" rx="2" ry="2" />
<text  x="891.25" y="1759.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="221.2" y="1861" width="0.2" height="15.0" fill="rgb(249,106,40)" rx="2" ry="2" />
<text  x="224.17" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (38 samples, 0.64%)</title><rect x="1004.9" y="2021" width="7.5" height="15.0" fill="rgb(207,36,47)" rx="2" ry="2" />
<text  x="1007.86" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="574.2" y="1781" width="0.2" height="15.0" fill="rgb(237,102,46)" rx="2" ry="2" />
<text  x="577.18" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="148.1" y="1893" width="0.2" height="15.0" fill="rgb(244,100,18)" rx="2" ry="2" />
<text  x="151.06" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="999.9" y="1989" width="0.2" height="15.0" fill="rgb(248,62,49)" rx="2" ry="2" />
<text  x="1002.89" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="925.4" y="2037" width="0.2" height="15.0" fill="rgb(219,132,40)" rx="2" ry="2" />
<text  x="928.39" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1143.7" y="1957" width="0.2" height="15.0" fill="rgb(254,44,45)" rx="2" ry="2" />
<text  x="1146.71" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="172.5" y="2021" width="1.4" height="15.0" fill="rgb(211,228,20)" rx="2" ry="2" />
<text  x="175.50" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="757.5" y="1669" width="0.2" height="15.0" fill="rgb(228,217,43)" rx="2" ry="2" />
<text  x="760.53" y="1679.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="1126.8" y="2037" width="0.2" height="15.0" fill="rgb(219,179,33)" rx="2" ry="2" />
<text  x="1129.83" y="2047.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="706.7" y="1797" width="0.6" height="15.0" fill="rgb(220,45,22)" rx="2" ry="2" />
<text  x="709.68" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1169.3" y="1989" width="0.4" height="15.0" fill="rgb(241,91,52)" rx="2" ry="2" />
<text  x="1172.34" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.08%)</title><rect x="348.5" y="2021" width="1.0" height="15.0" fill="rgb(216,8,9)" rx="2" ry="2" />
<text  x="351.51" y="2031.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (1 samples, 0.02%)</title><rect x="686.8" y="1941" width="0.2" height="15.0" fill="rgb(252,125,25)" rx="2" ry="2" />
<text  x="689.81" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1137.2" y="2037" width="0.2" height="15.0" fill="rgb(231,202,2)" rx="2" ry="2" />
<text  x="1140.16" y="2047.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="417.4" y="2021" width="0.2" height="15.0" fill="rgb(252,96,8)" rx="2" ry="2" />
<text  x="420.44" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="571.0" y="1845" width="0.2" height="15.0" fill="rgb(221,31,46)" rx="2" ry="2" />
<text  x="574.00" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="72.6" y="1925" width="0.2" height="15.0" fill="rgb(205,141,43)" rx="2" ry="2" />
<text  x="75.58" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.26%)</title><rect x="105.4" y="1253" width="14.9" height="15.0" fill="rgb(222,29,29)" rx="2" ry="2" />
<text  x="108.35" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.02%)</title><rect x="1175.1" y="1941" width="0.2" height="15.0" fill="rgb(223,144,5)" rx="2" ry="2" />
<text  x="1178.10" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="507.0" y="1893" width="0.2" height="15.0" fill="rgb(212,43,4)" rx="2" ry="2" />
<text  x="510.03" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="356.6" y="2005" width="0.2" height="15.0" fill="rgb(229,217,46)" rx="2" ry="2" />
<text  x="359.65" y="2015.5" ></text>
</g>
<g >
<title>tcp_poll (33 samples, 0.56%)</title><rect x="461.3" y="1941" width="6.6" height="15.0" fill="rgb(205,193,34)" rx="2" ry="2" />
<text  x="464.34" y="1951.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="441.5" y="1717" width="0.2" height="15.0" fill="rgb(249,141,3)" rx="2" ry="2" />
<text  x="444.47" y="1727.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="756.1" y="1669" width="0.2" height="15.0" fill="rgb(232,192,18)" rx="2" ry="2" />
<text  x="759.14" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="208.1" y="1829" width="0.2" height="15.0" fill="rgb(233,70,3)" rx="2" ry="2" />
<text  x="211.06" y="1839.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.6" y="1701" width="0.2" height="15.0" fill="rgb(232,15,3)" rx="2" ry="2" />
<text  x="107.56" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1177.3" y="1973" width="0.2" height="15.0" fill="rgb(224,109,7)" rx="2" ry="2" />
<text  x="1180.29" y="1983.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="565.0" y="1525" width="0.2" height="15.0" fill="rgb(229,96,7)" rx="2" ry="2" />
<text  x="568.04" y="1535.5" ></text>
</g>
<g >
<title>sk_reset_timer (26 samples, 0.44%)</title><rect x="802.4" y="1637" width="5.2" height="15.0" fill="rgb(218,160,20)" rx="2" ry="2" />
<text  x="805.43" y="1647.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="119.3" y="517" width="0.2" height="15.0" fill="rgb(249,92,2)" rx="2" ry="2" />
<text  x="122.26" y="527.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="14.4" y="1893" width="0.2" height="15.0" fill="rgb(211,13,29)" rx="2" ry="2" />
<text  x="17.37" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="82.3" y="1941" width="0.2" height="15.0" fill="rgb(243,59,39)" rx="2" ry="2" />
<text  x="85.31" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="63.4" y="1941" width="0.4" height="15.0" fill="rgb(206,57,6)" rx="2" ry="2" />
<text  x="66.44" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="848.7" y="1733" width="0.2" height="15.0" fill="rgb(208,109,39)" rx="2" ry="2" />
<text  x="851.71" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="845.1" y="1829" width="0.2" height="15.0" fill="rgb(212,54,42)" rx="2" ry="2" />
<text  x="848.14" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (5 samples, 0.08%)</title><rect x="887.5" y="1877" width="0.9" height="15.0" fill="rgb(241,222,40)" rx="2" ry="2" />
<text  x="890.45" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="159.6" y="1893" width="0.4" height="15.0" fill="rgb(215,123,10)" rx="2" ry="2" />
<text  x="162.59" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="697.5" y="1733" width="0.2" height="15.0" fill="rgb(242,185,52)" rx="2" ry="2" />
<text  x="700.54" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="641.7" y="1973" width="1.0" height="15.0" fill="rgb(208,175,5)" rx="2" ry="2" />
<text  x="644.72" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="489.7" y="1845" width="0.2" height="15.0" fill="rgb(244,41,8)" rx="2" ry="2" />
<text  x="492.75" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1105.2" y="1877" width="0.2" height="15.0" fill="rgb(235,139,43)" rx="2" ry="2" />
<text  x="1108.18" y="1887.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1001.9" y="2005" width="0.2" height="15.0" fill="rgb(243,70,48)" rx="2" ry="2" />
<text  x="1004.88" y="2015.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="197.3" y="2037" width="0.2" height="15.0" fill="rgb(246,141,47)" rx="2" ry="2" />
<text  x="200.33" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="193.2" y="2005" width="0.2" height="15.0" fill="rgb(233,227,29)" rx="2" ry="2" />
<text  x="196.16" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="81.5" y="1861" width="0.2" height="15.0" fill="rgb(252,178,3)" rx="2" ry="2" />
<text  x="84.52" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="334.0" y="1461" width="0.2" height="15.0" fill="rgb(221,208,18)" rx="2" ry="2" />
<text  x="337.00" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="896.6" y="1861" width="0.2" height="15.0" fill="rgb(234,81,21)" rx="2" ry="2" />
<text  x="899.59" y="1871.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="291.1" y="1525" width="0.2" height="15.0" fill="rgb(219,47,19)" rx="2" ry="2" />
<text  x="294.09" y="1535.5" ></text>
</g>
<g >
<title>rb_erase (3 samples, 0.05%)</title><rect x="1115.9" y="1509" width="0.6" height="15.0" fill="rgb(215,46,53)" rx="2" ry="2" />
<text  x="1118.90" y="1519.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="883.9" y="1893" width="0.2" height="15.0" fill="rgb(210,135,37)" rx="2" ry="2" />
<text  x="886.88" y="1903.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="304.6" y="1669" width="0.6" height="15.0" fill="rgb(215,145,31)" rx="2" ry="2" />
<text  x="307.60" y="1679.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="256.5" y="1893" width="0.2" height="15.0" fill="rgb(233,190,44)" rx="2" ry="2" />
<text  x="259.53" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (7 samples, 0.12%)</title><rect x="887.1" y="1909" width="1.3" height="15.0" fill="rgb(254,185,40)" rx="2" ry="2" />
<text  x="890.05" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="253.4" y="1813" width="0.1" height="15.0" fill="rgb(239,111,41)" rx="2" ry="2" />
<text  x="256.35" y="1823.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (17 samples, 0.29%)</title><rect x="82.5" y="1957" width="3.4" height="15.0" fill="rgb(242,76,28)" rx="2" ry="2" />
<text  x="85.51" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="713.0" y="1749" width="0.2" height="15.0" fill="rgb(208,98,11)" rx="2" ry="2" />
<text  x="716.03" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="311.4" y="1669" width="0.2" height="15.0" fill="rgb(206,17,21)" rx="2" ry="2" />
<text  x="314.36" y="1679.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="34.6" y="2005" width="0.2" height="15.0" fill="rgb(209,167,17)" rx="2" ry="2" />
<text  x="37.63" y="2015.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="802.8" y="1621" width="0.2" height="15.0" fill="rgb(207,137,18)" rx="2" ry="2" />
<text  x="805.82" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="600.6" y="1813" width="0.2" height="15.0" fill="rgb(240,147,12)" rx="2" ry="2" />
<text  x="603.60" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="159.6" y="1733" width="0.2" height="15.0" fill="rgb(240,149,28)" rx="2" ry="2" />
<text  x="162.59" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="745.2" y="1701" width="0.2" height="15.0" fill="rgb(235,218,26)" rx="2" ry="2" />
<text  x="748.22" y="1711.5" ></text>
</g>
<g >
<title>import_iovec (5 samples, 0.08%)</title><rect x="256.1" y="1925" width="1.0" height="15.0" fill="rgb(248,224,40)" rx="2" ry="2" />
<text  x="259.13" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="545.4" y="1925" width="0.4" height="15.0" fill="rgb(238,179,36)" rx="2" ry="2" />
<text  x="548.37" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="326.7" y="1685" width="0.4" height="15.0" fill="rgb(218,65,10)" rx="2" ry="2" />
<text  x="329.65" y="1695.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="180.8" y="1957" width="0.2" height="15.0" fill="rgb(252,203,19)" rx="2" ry="2" />
<text  x="183.84" y="1967.5" ></text>
</g>
<g >
<title>skb_free_head (18 samples, 0.30%)</title><rect x="1112.1" y="1461" width="3.6" height="15.0" fill="rgb(208,16,42)" rx="2" ry="2" />
<text  x="1115.13" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="555.1" y="1781" width="0.2" height="15.0" fill="rgb(232,161,0)" rx="2" ry="2" />
<text  x="558.10" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1027.3" y="1813" width="0.2" height="15.0" fill="rgb(225,44,8)" rx="2" ry="2" />
<text  x="1030.30" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.8" y="1653" width="17.6" height="15.0" fill="rgb(219,198,8)" rx="2" ry="2" />
<text  x="107.76" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="862.4" y="1925" width="0.2" height="15.0" fill="rgb(254,216,26)" rx="2" ry="2" />
<text  x="865.42" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="619.7" y="1829" width="0.2" height="15.0" fill="rgb(242,177,15)" rx="2" ry="2" />
<text  x="622.67" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="291.1" y="1589" width="0.2" height="15.0" fill="rgb(211,140,25)" rx="2" ry="2" />
<text  x="294.09" y="1599.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1148.3" y="1973" width="0.2" height="15.0" fill="rgb(223,86,42)" rx="2" ry="2" />
<text  x="1151.28" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="862.4" y="1893" width="0.2" height="15.0" fill="rgb(223,177,6)" rx="2" ry="2" />
<text  x="865.42" y="1903.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="577.6" y="1941" width="0.2" height="15.0" fill="rgb(223,178,16)" rx="2" ry="2" />
<text  x="580.55" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="65.6" y="1653" width="0.2" height="15.0" fill="rgb(230,23,26)" rx="2" ry="2" />
<text  x="68.62" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="691.2" y="1669" width="0.2" height="15.0" fill="rgb(232,140,34)" rx="2" ry="2" />
<text  x="694.18" y="1679.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="642.9" y="1957" width="1.4" height="15.0" fill="rgb(213,98,26)" rx="2" ry="2" />
<text  x="645.91" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1125.2" y="1845" width="0.4" height="15.0" fill="rgb(213,191,19)" rx="2" ry="2" />
<text  x="1128.24" y="1855.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="1059.7" y="1669" width="0.2" height="15.0" fill="rgb(246,224,7)" rx="2" ry="2" />
<text  x="1062.68" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="835.2" y="1909" width="0.2" height="15.0" fill="rgb(226,35,20)" rx="2" ry="2" />
<text  x="838.21" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="691.2" y="1845" width="0.2" height="15.0" fill="rgb(236,79,44)" rx="2" ry="2" />
<text  x="694.18" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="281.6" y="1701" width="0.2" height="15.0" fill="rgb(224,22,11)" rx="2" ry="2" />
<text  x="284.56" y="1711.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="835.2" y="1893" width="0.2" height="15.0" fill="rgb(211,35,27)" rx="2" ry="2" />
<text  x="838.21" y="1903.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="596.4" y="1861" width="0.2" height="15.0" fill="rgb(237,51,53)" rx="2" ry="2" />
<text  x="599.42" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="373.9" y="1877" width="0.2" height="15.0" fill="rgb(208,11,21)" rx="2" ry="2" />
<text  x="376.93" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="65.6" y="1685" width="0.2" height="15.0" fill="rgb(243,61,22)" rx="2" ry="2" />
<text  x="68.62" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="549" width="13.7" height="15.0" fill="rgb(247,114,32)" rx="2" ry="2" />
<text  x="108.75" y="559.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.13%)</title><rect x="790.1" y="1525" width="1.6" height="15.0" fill="rgb(222,27,12)" rx="2" ry="2" />
<text  x="793.11" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="525.5" y="1973" width="0.2" height="15.0" fill="rgb(229,163,25)" rx="2" ry="2" />
<text  x="528.51" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="149" width="13.5" height="15.0" fill="rgb(205,58,2)" rx="2" ry="2" />
<text  x="108.75" y="159.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="208.1" y="1733" width="0.2" height="15.0" fill="rgb(242,34,28)" rx="2" ry="2" />
<text  x="211.06" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (2 samples, 0.03%)</title><rect x="656.4" y="1989" width="0.4" height="15.0" fill="rgb(234,20,44)" rx="2" ry="2" />
<text  x="659.42" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="484.0" y="1877" width="0.2" height="15.0" fill="rgb(219,19,47)" rx="2" ry="2" />
<text  x="486.99" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="583.3" y="1973" width="0.2" height="15.0" fill="rgb(234,186,19)" rx="2" ry="2" />
<text  x="586.31" y="1983.5" ></text>
</g>
<g >
<title>skb_release_head_state (30 samples, 0.51%)</title><rect x="1083.3" y="1893" width="6.0" height="15.0" fill="rgb(208,124,22)" rx="2" ry="2" />
<text  x="1086.32" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="291.1" y="1733" width="0.2" height="15.0" fill="rgb(234,0,21)" rx="2" ry="2" />
<text  x="294.09" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="792.7" y="1445" width="0.2" height="15.0" fill="rgb(244,35,29)" rx="2" ry="2" />
<text  x="795.69" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="527.1" y="1941" width="0.2" height="15.0" fill="rgb(217,165,38)" rx="2" ry="2" />
<text  x="530.09" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="143.1" y="1941" width="0.2" height="15.0" fill="rgb(211,94,53)" rx="2" ry="2" />
<text  x="146.10" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="542.2" y="1925" width="0.4" height="15.0" fill="rgb(206,0,20)" rx="2" ry="2" />
<text  x="545.19" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="489.2" y="1845" width="0.2" height="15.0" fill="rgb(220,158,2)" rx="2" ry="2" />
<text  x="492.15" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="531.7" y="1909" width="0.2" height="15.0" fill="rgb(224,220,48)" rx="2" ry="2" />
<text  x="534.66" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="322.1" y="1637" width="0.2" height="15.0" fill="rgb(228,91,52)" rx="2" ry="2" />
<text  x="325.08" y="1647.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="136.1" y="1957" width="0.4" height="15.0" fill="rgb(244,33,48)" rx="2" ry="2" />
<text  x="139.14" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="1142.3" y="1973" width="0.2" height="15.0" fill="rgb(244,2,37)" rx="2" ry="2" />
<text  x="1145.32" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.8" y="1845" width="0.2" height="15.0" fill="rgb(241,224,13)" rx="2" ry="2" />
<text  x="890.85" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="198.3" y="1925" width="0.2" height="15.0" fill="rgb(236,155,47)" rx="2" ry="2" />
<text  x="201.32" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="635.6" y="1733" width="0.2" height="15.0" fill="rgb(209,144,36)" rx="2" ry="2" />
<text  x="638.56" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (1 samples, 0.02%)</title><rect x="97.0" y="2021" width="0.2" height="15.0" fill="rgb(218,215,27)" rx="2" ry="2" />
<text  x="100.01" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="994.5" y="1925" width="0.2" height="15.0" fill="rgb(247,166,28)" rx="2" ry="2" />
<text  x="997.53" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="334.0" y="1477" width="0.2" height="15.0" fill="rgb(233,180,1)" rx="2" ry="2" />
<text  x="337.00" y="1487.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="337.0" y="1637" width="0.4" height="15.0" fill="rgb(213,127,36)" rx="2" ry="2" />
<text  x="339.98" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="574.2" y="1925" width="0.2" height="15.0" fill="rgb(216,210,44)" rx="2" ry="2" />
<text  x="577.18" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="997.9" y="1877" width="0.2" height="15.0" fill="rgb(242,12,27)" rx="2" ry="2" />
<text  x="1000.90" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10 samples, 0.17%)</title><rect x="942.7" y="1957" width="2.0" height="15.0" fill="rgb(227,17,26)" rx="2" ry="2" />
<text  x="945.68" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1174.3" y="1957" width="0.4" height="15.0" fill="rgb(210,14,38)" rx="2" ry="2" />
<text  x="1177.31" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="233.3" y="1941" width="0.4" height="15.0" fill="rgb(214,15,38)" rx="2" ry="2" />
<text  x="236.29" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (4 samples, 0.07%)</title><rect x="620.9" y="2037" width="0.8" height="15.0" fill="rgb(237,18,46)" rx="2" ry="2" />
<text  x="623.86" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="819.3" y="1669" width="0.2" height="15.0" fill="rgb(236,1,22)" rx="2" ry="2" />
<text  x="822.31" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="63.4" y="1877" width="0.2" height="15.0" fill="rgb(242,221,50)" rx="2" ry="2" />
<text  x="66.44" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (11 samples, 0.19%)</title><rect x="1147.9" y="2005" width="2.2" height="15.0" fill="rgb(232,186,10)" rx="2" ry="2" />
<text  x="1150.89" y="2015.5" ></text>
</g>
<g >
<title>task_work_add (3 samples, 0.05%)</title><rect x="830.0" y="1813" width="0.6" height="15.0" fill="rgb(229,10,50)" rx="2" ry="2" />
<text  x="833.04" y="1823.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="981.4" y="1957" width="0.2" height="15.0" fill="rgb(210,221,46)" rx="2" ry="2" />
<text  x="984.41" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="988.2" y="1973" width="0.4" height="15.0" fill="rgb(209,182,45)" rx="2" ry="2" />
<text  x="991.17" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="550.1" y="1877" width="0.2" height="15.0" fill="rgb(242,91,21)" rx="2" ry="2" />
<text  x="553.14" y="1887.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.05%)</title><rect x="515.2" y="1925" width="0.6" height="15.0" fill="rgb(230,45,40)" rx="2" ry="2" />
<text  x="518.18" y="1935.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (4 samples, 0.07%)</title><rect x="975.3" y="2005" width="0.8" height="15.0" fill="rgb(246,19,28)" rx="2" ry="2" />
<text  x="978.26" y="2015.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="299.8" y="1381" width="0.4" height="15.0" fill="rgb(241,169,4)" rx="2" ry="2" />
<text  x="302.84" y="1391.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (2 samples, 0.03%)</title><rect x="1169.3" y="1973" width="0.4" height="15.0" fill="rgb(205,196,10)" rx="2" ry="2" />
<text  x="1172.34" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="333.8" y="1605" width="0.4" height="15.0" fill="rgb(223,81,38)" rx="2" ry="2" />
<text  x="336.80" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5 samples, 0.08%)</title><rect x="139.9" y="1989" width="1.0" height="15.0" fill="rgb(218,82,53)" rx="2" ry="2" />
<text  x="142.92" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="940.7" y="1893" width="0.4" height="15.0" fill="rgb(237,216,7)" rx="2" ry="2" />
<text  x="943.69" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="836.4" y="1893" width="0.2" height="15.0" fill="rgb(224,105,43)" rx="2" ry="2" />
<text  x="839.40" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="825.1" y="1717" width="0.2" height="15.0" fill="rgb(254,162,24)" rx="2" ry="2" />
<text  x="828.07" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="489.2" y="1765" width="0.2" height="15.0" fill="rgb(234,60,22)" rx="2" ry="2" />
<text  x="492.15" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="145.9" y="1861" width="0.4" height="15.0" fill="rgb(240,178,2)" rx="2" ry="2" />
<text  x="148.88" y="1871.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="14.6" y="2069" width="1.2" height="15.0" fill="rgb(253,50,47)" rx="2" ry="2" />
<text  x="17.57" y="2079.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="573.2" y="1877" width="0.2" height="15.0" fill="rgb(238,137,39)" rx="2" ry="2" />
<text  x="576.18" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="178.5" y="1973" width="1.1" height="15.0" fill="rgb(229,21,51)" rx="2" ry="2" />
<text  x="181.46" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::WriterLoop::runLoopCallback (1 samples, 0.02%)</title><rect x="143.7" y="1941" width="0.2" height="15.0" fill="rgb(219,29,39)" rx="2" ry="2" />
<text  x="146.69" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="441.5" y="1781" width="0.2" height="15.0" fill="rgb(229,165,11)" rx="2" ry="2" />
<text  x="444.47" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="885.1" y="1877" width="0.2" height="15.0" fill="rgb(224,122,24)" rx="2" ry="2" />
<text  x="888.07" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="388.0" y="1765" width="0.2" height="15.0" fill="rgb(228,181,50)" rx="2" ry="2" />
<text  x="391.04" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="46.2" y="1909" width="0.4" height="15.0" fill="rgb(237,115,44)" rx="2" ry="2" />
<text  x="49.15" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1092.3" y="1925" width="0.2" height="15.0" fill="rgb(238,111,34)" rx="2" ry="2" />
<text  x="1095.26" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="222.6" y="1701" width="0.2" height="15.0" fill="rgb(243,205,54)" rx="2" ry="2" />
<text  x="225.56" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="81.7" y="1893" width="0.6" height="15.0" fill="rgb(217,215,33)" rx="2" ry="2" />
<text  x="84.71" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="917.4" y="1957" width="0.2" height="15.0" fill="rgb(238,194,39)" rx="2" ry="2" />
<text  x="920.45" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.4" y="1909" width="0.2" height="15.0" fill="rgb(234,20,35)" rx="2" ry="2" />
<text  x="128.42" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (1 samples, 0.02%)</title><rect x="99.6" y="2021" width="0.2" height="15.0" fill="rgb(237,63,12)" rx="2" ry="2" />
<text  x="102.59" y="2031.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="819.3" y="1445" width="0.2" height="15.0" fill="rgb(240,49,5)" rx="2" ry="2" />
<text  x="822.31" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="884.5" y="1925" width="0.6" height="15.0" fill="rgb(229,68,21)" rx="2" ry="2" />
<text  x="887.47" y="1935.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="125.6" y="1733" width="0.8" height="15.0" fill="rgb(237,170,47)" rx="2" ry="2" />
<text  x="128.62" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="293.5" y="1781" width="0.2" height="15.0" fill="rgb(243,148,18)" rx="2" ry="2" />
<text  x="296.48" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (2 samples, 0.03%)</title><rect x="1150.3" y="2005" width="0.4" height="15.0" fill="rgb(231,89,44)" rx="2" ry="2" />
<text  x="1153.27" y="2015.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="32.4" y="1877" width="0.2" height="15.0" fill="rgb(240,165,23)" rx="2" ry="2" />
<text  x="35.45" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="203.1" y="2021" width="0.4" height="15.0" fill="rgb(222,188,3)" rx="2" ry="2" />
<text  x="206.09" y="2031.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="75.6" y="1957" width="0.6" height="15.0" fill="rgb(224,226,26)" rx="2" ry="2" />
<text  x="78.56" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="163.2" y="1749" width="0.2" height="15.0" fill="rgb(218,32,49)" rx="2" ry="2" />
<text  x="166.16" y="1759.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="68.6" y="1829" width="0.2" height="15.0" fill="rgb(240,180,52)" rx="2" ry="2" />
<text  x="71.60" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="75.8" y="1925" width="0.2" height="15.0" fill="rgb(214,219,21)" rx="2" ry="2" />
<text  x="78.75" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="891.0" y="1925" width="0.2" height="15.0" fill="rgb(228,79,5)" rx="2" ry="2" />
<text  x="894.03" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1941" width="0.8" height="15.0" fill="rgb(237,75,18)" rx="2" ry="2" />
<text  x="538.24" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="65.4" y="1717" width="0.4" height="15.0" fill="rgb(240,88,53)" rx="2" ry="2" />
<text  x="68.42" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="931.0" y="1925" width="0.2" height="15.0" fill="rgb(212,223,38)" rx="2" ry="2" />
<text  x="933.96" y="1935.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="271.6" y="1877" width="0.2" height="15.0" fill="rgb(243,222,50)" rx="2" ry="2" />
<text  x="274.63" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="700.5" y="2005" width="0.2" height="15.0" fill="rgb(228,197,34)" rx="2" ry="2" />
<text  x="703.52" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (1 samples, 0.02%)</title><rect x="1034.3" y="2005" width="0.2" height="15.0" fill="rgb(217,71,9)" rx="2" ry="2" />
<text  x="1037.26" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1174.3" y="1973" width="0.4" height="15.0" fill="rgb(209,88,8)" rx="2" ry="2" />
<text  x="1177.31" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1142.1" y="1957" width="0.2" height="15.0" fill="rgb(233,142,40)" rx="2" ry="2" />
<text  x="1145.12" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (5 samples, 0.08%)</title><rect x="860.0" y="1989" width="1.0" height="15.0" fill="rgb(247,65,2)" rx="2" ry="2" />
<text  x="863.04" y="1999.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="846.9" y="1925" width="0.2" height="15.0" fill="rgb(226,48,52)" rx="2" ry="2" />
<text  x="849.93" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="619.7" y="1893" width="0.2" height="15.0" fill="rgb(249,158,31)" rx="2" ry="2" />
<text  x="622.67" y="1903.5" ></text>
</g>
<g >
<title>sys_futex (9 samples, 0.15%)</title><rect x="10.6" y="2005" width="1.8" height="15.0" fill="rgb(231,153,27)" rx="2" ry="2" />
<text  x="13.60" y="2015.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="515.8" y="1941" width="0.2" height="15.0" fill="rgb(238,48,0)" rx="2" ry="2" />
<text  x="518.77" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (3 samples, 0.05%)</title><rect x="866.0" y="1989" width="0.6" height="15.0" fill="rgb(248,27,43)" rx="2" ry="2" />
<text  x="869.00" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="623.4" y="1957" width="0.4" height="15.0" fill="rgb(250,179,20)" rx="2" ry="2" />
<text  x="626.44" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="178.1" y="1941" width="0.4" height="15.0" fill="rgb(246,152,54)" rx="2" ry="2" />
<text  x="181.06" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="895.4" y="1733" width="0.2" height="15.0" fill="rgb(217,157,27)" rx="2" ry="2" />
<text  x="898.40" y="1743.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="1137.0" y="2037" width="0.2" height="15.0" fill="rgb(231,87,5)" rx="2" ry="2" />
<text  x="1139.96" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (32 samples, 0.54%)</title><rect x="311.6" y="1685" width="6.3" height="15.0" fill="rgb(230,204,42)" rx="2" ry="2" />
<text  x="314.56" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="819.3" y="1477" width="0.2" height="15.0" fill="rgb(219,187,7)" rx="2" ry="2" />
<text  x="822.31" y="1487.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="513.4" y="1557" width="0.2" height="15.0" fill="rgb(238,146,15)" rx="2" ry="2" />
<text  x="516.39" y="1567.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="221.0" y="1877" width="0.4" height="15.0" fill="rgb(243,146,54)" rx="2" ry="2" />
<text  x="223.97" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="639.7" y="1941" width="0.2" height="15.0" fill="rgb(225,15,5)" rx="2" ry="2" />
<text  x="642.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1033.5" y="1733" width="0.2" height="15.0" fill="rgb(211,92,53)" rx="2" ry="2" />
<text  x="1036.46" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="1167.0" y="2053" width="0.2" height="15.0" fill="rgb(246,72,52)" rx="2" ry="2" />
<text  x="1169.96" y="2063.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="884.5" y="1509" width="0.2" height="15.0" fill="rgb(219,58,3)" rx="2" ry="2" />
<text  x="887.47" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1813" width="0.2" height="15.0" fill="rgb(212,126,36)" rx="2" ry="2" />
<text  x="1085.93" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="943.7" y="1941" width="0.2" height="15.0" fill="rgb(208,181,27)" rx="2" ry="2" />
<text  x="946.67" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="845.1" y="1877" width="0.2" height="15.0" fill="rgb(207,142,6)" rx="2" ry="2" />
<text  x="848.14" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="632.2" y="1973" width="0.2" height="15.0" fill="rgb(228,33,40)" rx="2" ry="2" />
<text  x="635.18" y="1983.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="129.4" y="1989" width="0.2" height="15.0" fill="rgb(215,221,39)" rx="2" ry="2" />
<text  x="132.39" y="1999.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="82.9" y="1925" width="0.2" height="15.0" fill="rgb(222,195,44)" rx="2" ry="2" />
<text  x="85.91" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="356.6" y="2037" width="0.2" height="15.0" fill="rgb(231,216,19)" rx="2" ry="2" />
<text  x="359.65" y="2047.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="188.2" y="1877" width="0.2" height="15.0" fill="rgb(224,49,19)" rx="2" ry="2" />
<text  x="191.19" y="1887.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="615.5" y="1877" width="0.4" height="15.0" fill="rgb(211,221,33)" rx="2" ry="2" />
<text  x="618.49" y="1887.5" ></text>
</g>
<g >
<title>_mix_pool_bytes (1 samples, 0.02%)</title><rect x="616.3" y="1813" width="0.2" height="15.0" fill="rgb(217,4,29)" rx="2" ry="2" />
<text  x="619.29" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="127.0" y="1957" width="0.2" height="15.0" fill="rgb(234,79,53)" rx="2" ry="2" />
<text  x="130.01" y="1967.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="489.4" y="1973" width="0.1" height="15.0" fill="rgb(206,69,39)" rx="2" ry="2" />
<text  x="492.35" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="113.1" y="37" width="0.2" height="15.0" fill="rgb(216,99,22)" rx="2" ry="2" />
<text  x="116.10" y="47.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="59.3" y="1893" width="0.4" height="15.0" fill="rgb(229,12,8)" rx="2" ry="2" />
<text  x="62.27" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.36%)</title><rect x="105.2" y="1365" width="16.0" height="15.0" fill="rgb(213,30,53)" rx="2" ry="2" />
<text  x="108.15" y="1375.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="555.1" y="1925" width="0.2" height="15.0" fill="rgb(215,109,23)" rx="2" ry="2" />
<text  x="558.10" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.8" y="1909" width="0.2" height="15.0" fill="rgb(223,119,39)" rx="2" ry="2" />
<text  x="67.83" y="1919.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1009.4" y="1957" width="0.2" height="15.0" fill="rgb(253,28,16)" rx="2" ry="2" />
<text  x="1012.42" y="1967.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="338.0" y="1829" width="0.4" height="15.0" fill="rgb(225,222,37)" rx="2" ry="2" />
<text  x="340.98" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="416.8" y="2021" width="0.6" height="15.0" fill="rgb(212,104,48)" rx="2" ry="2" />
<text  x="419.84" y="2031.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1136.2" y="2053" width="0.4" height="15.0" fill="rgb(235,125,34)" rx="2" ry="2" />
<text  x="1139.16" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="902.5" y="1925" width="0.2" height="15.0" fill="rgb(238,98,49)" rx="2" ry="2" />
<text  x="905.55" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="565.0" y="1669" width="0.2" height="15.0" fill="rgb(220,58,45)" rx="2" ry="2" />
<text  x="568.04" y="1679.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="233.7" y="1765" width="0.2" height="15.0" fill="rgb(241,128,21)" rx="2" ry="2" />
<text  x="236.68" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="890.2" y="1941" width="0.2" height="15.0" fill="rgb(250,121,31)" rx="2" ry="2" />
<text  x="893.23" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="401.3" y="1861" width="0.2" height="15.0" fill="rgb(246,212,14)" rx="2" ry="2" />
<text  x="404.35" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="22.9" y="1797" width="0.2" height="15.0" fill="rgb(217,151,30)" rx="2" ry="2" />
<text  x="25.91" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1059.7" y="2005" width="0.4" height="15.0" fill="rgb(235,0,19)" rx="2" ry="2" />
<text  x="1062.68" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="852.1" y="1765" width="0.2" height="15.0" fill="rgb(233,58,34)" rx="2" ry="2" />
<text  x="855.09" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="531.1" y="1941" width="0.4" height="15.0" fill="rgb(249,126,24)" rx="2" ry="2" />
<text  x="534.07" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="888.2" y="1781" width="0.2" height="15.0" fill="rgb(219,169,37)" rx="2" ry="2" />
<text  x="891.25" y="1791.5" ></text>
</g>
<g >
<title>aa_sock_perm (3 samples, 0.05%)</title><rect x="672.1" y="1829" width="0.6" height="15.0" fill="rgb(252,101,42)" rx="2" ry="2" />
<text  x="675.11" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="597" width="13.7" height="15.0" fill="rgb(249,96,49)" rx="2" ry="2" />
<text  x="108.75" y="607.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="619.7" y="1845" width="0.2" height="15.0" fill="rgb(239,214,46)" rx="2" ry="2" />
<text  x="622.67" y="1855.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1062.3" y="1973" width="0.2" height="15.0" fill="rgb(234,59,46)" rx="2" ry="2" />
<text  x="1065.27" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.15%)</title><rect x="10.6" y="2037" width="1.8" height="15.0" fill="rgb(248,113,49)" rx="2" ry="2" />
<text  x="13.60" y="2047.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="749.4" y="1733" width="0.4" height="15.0" fill="rgb(240,8,7)" rx="2" ry="2" />
<text  x="752.39" y="1743.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="63.0" y="1845" width="0.2" height="15.0" fill="rgb(246,138,33)" rx="2" ry="2" />
<text  x="66.04" y="1855.5" ></text>
</g>
<g >
<title>inet_sk_rebuild_header (1 samples, 0.02%)</title><rect x="171.9" y="1701" width="0.2" height="15.0" fill="rgb(247,22,41)" rx="2" ry="2" />
<text  x="174.90" y="1711.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.2" y="1637" width="0.2" height="15.0" fill="rgb(208,103,20)" rx="2" ry="2" />
<text  x="125.24" y="1647.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="728.5" y="1733" width="1.2" height="15.0" fill="rgb(225,53,18)" rx="2" ry="2" />
<text  x="731.53" y="1743.5" ></text>
</g>
<g >
<title>__d_instantiate (5 samples, 0.08%)</title><rect x="413.5" y="1925" width="1.0" height="15.0" fill="rgb(219,107,47)" rx="2" ry="2" />
<text  x="416.46" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="540.6" y="2005" width="0.2" height="15.0" fill="rgb(250,126,29)" rx="2" ry="2" />
<text  x="543.60" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="222.6" y="1717" width="0.2" height="15.0" fill="rgb(233,46,16)" rx="2" ry="2" />
<text  x="225.56" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="536.2" y="1701" width="0.2" height="15.0" fill="rgb(206,7,17)" rx="2" ry="2" />
<text  x="539.23" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="857.1" y="1925" width="0.2" height="15.0" fill="rgb(243,29,26)" rx="2" ry="2" />
<text  x="860.06" y="1935.5" ></text>
</g>
<g >
<title>destroy_inode (27 samples, 0.45%)</title><rect x="733.1" y="1701" width="5.4" height="15.0" fill="rgb(236,65,10)" rx="2" ry="2" />
<text  x="736.10" y="1711.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="874.5" y="1861" width="0.8" height="15.0" fill="rgb(206,46,22)" rx="2" ry="2" />
<text  x="877.54" y="1871.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="59.3" y="1861" width="0.2" height="15.0" fill="rgb(212,224,39)" rx="2" ry="2" />
<text  x="62.27" y="1871.5" ></text>
</g>
<g >
<title>__kfree_skb (32 samples, 0.54%)</title><rect x="1109.5" y="1509" width="6.4" height="15.0" fill="rgb(253,174,33)" rx="2" ry="2" />
<text  x="1112.55" y="1519.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="529.1" y="1973" width="0.2" height="15.0" fill="rgb(247,168,5)" rx="2" ry="2" />
<text  x="532.08" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1031.7" y="1973" width="0.2" height="15.0" fill="rgb(210,123,32)" rx="2" ry="2" />
<text  x="1034.67" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1109.1" y="1477" width="0.2" height="15.0" fill="rgb(250,75,50)" rx="2" ry="2" />
<text  x="1112.15" y="1487.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="516.2" y="2037" width="0.2" height="15.0" fill="rgb(238,74,23)" rx="2" ry="2" />
<text  x="519.17" y="2047.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="887.8" y="1493" width="0.2" height="15.0" fill="rgb(227,118,26)" rx="2" ry="2" />
<text  x="890.85" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="845.1" y="1717" width="0.2" height="15.0" fill="rgb(207,6,15)" rx="2" ry="2" />
<text  x="848.14" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="1009.8" y="1973" width="0.2" height="15.0" fill="rgb(247,137,50)" rx="2" ry="2" />
<text  x="1012.82" y="1983.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="624.2" y="1941" width="0.2" height="15.0" fill="rgb(246,52,12)" rx="2" ry="2" />
<text  x="627.24" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="337.2" y="1557" width="0.2" height="15.0" fill="rgb(239,59,20)" rx="2" ry="2" />
<text  x="340.18" y="1567.5" ></text>
</g>
<g >
<title>iput (49 samples, 0.82%)</title><rect x="730.5" y="1733" width="9.7" height="15.0" fill="rgb(240,110,2)" rx="2" ry="2" />
<text  x="733.52" y="1743.5" ></text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.02%)</title><rect x="738.7" y="1685" width="0.2" height="15.0" fill="rgb(245,109,48)" rx="2" ry="2" />
<text  x="741.66" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="388.0" y="1733" width="0.2" height="15.0" fill="rgb(209,49,23)" rx="2" ry="2" />
<text  x="391.04" y="1743.5" ></text>
</g>
<g >
<title>sys_recvfrom (332 samples, 5.59%)</title><rect x="1060.1" y="2005" width="65.9" height="15.0" fill="rgb(249,52,26)" rx="2" ry="2" />
<text  x="1063.08" y="2015.5" >sys_rec..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (19 samples, 0.32%)</title><rect x="898.0" y="2005" width="3.8" height="15.0" fill="rgb(228,77,7)" rx="2" ry="2" />
<text  x="900.98" y="2015.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1012.6" y="2021" width="0.2" height="15.0" fill="rgb(245,141,7)" rx="2" ry="2" />
<text  x="1015.60" y="2031.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (273 samples, 4.60%)</title><rect x="284.5" y="1861" width="54.3" height="15.0" fill="rgb(222,178,42)" rx="2" ry="2" />
<text  x="287.54" y="1871.5" >__tcp..</text>
</g>
<g >
<title>folly::netops::recv (6 samples, 0.10%)</title><rect x="63.8" y="1973" width="1.2" height="15.0" fill="rgb(213,208,42)" rx="2" ry="2" />
<text  x="66.84" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="81.5" y="1893" width="0.2" height="15.0" fill="rgb(252,195,21)" rx="2" ry="2" />
<text  x="84.52" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="757.5" y="1589" width="0.2" height="15.0" fill="rgb(248,229,5)" rx="2" ry="2" />
<text  x="760.53" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="541.6" y="1941" width="1.0" height="15.0" fill="rgb(223,181,44)" rx="2" ry="2" />
<text  x="544.60" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="792.7" y="1573" width="0.2" height="15.0" fill="rgb(232,72,29)" rx="2" ry="2" />
<text  x="795.69" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1031.7" y="1717" width="0.2" height="15.0" fill="rgb(223,108,44)" rx="2" ry="2" />
<text  x="1034.67" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="283.1" y="1797" width="0.2" height="15.0" fill="rgb(213,105,18)" rx="2" ry="2" />
<text  x="286.15" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="600.6" y="1861" width="0.2" height="15.0" fill="rgb(247,70,44)" rx="2" ry="2" />
<text  x="603.60" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="28.9" y="1957" width="0.2" height="15.0" fill="rgb(244,146,25)" rx="2" ry="2" />
<text  x="31.87" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="348.3" y="2021" width="0.2" height="15.0" fill="rgb(227,212,49)" rx="2" ry="2" />
<text  x="351.31" y="2031.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="845.1" y="1685" width="0.2" height="15.0" fill="rgb(206,201,5)" rx="2" ry="2" />
<text  x="848.14" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="939.5" y="1861" width="0.2" height="15.0" fill="rgb(232,215,32)" rx="2" ry="2" />
<text  x="942.50" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="261.9" y="1877" width="0.2" height="15.0" fill="rgb(248,142,50)" rx="2" ry="2" />
<text  x="264.89" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="887.8" y="1653" width="0.2" height="15.0" fill="rgb(224,161,24)" rx="2" ry="2" />
<text  x="890.85" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="171.7" y="1941" width="0.4" height="15.0" fill="rgb(215,102,53)" rx="2" ry="2" />
<text  x="174.70" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="117.5" y="53" width="0.6" height="15.0" fill="rgb(233,139,40)" rx="2" ry="2" />
<text  x="120.47" y="63.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (4 samples, 0.07%)</title><rect x="883.5" y="1941" width="0.8" height="15.0" fill="rgb(214,180,25)" rx="2" ry="2" />
<text  x="886.48" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="618.1" y="1941" width="0.2" height="15.0" fill="rgb(252,134,32)" rx="2" ry="2" />
<text  x="621.08" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="892.4" y="1781" width="0.2" height="15.0" fill="rgb(221,26,23)" rx="2" ry="2" />
<text  x="895.42" y="1791.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="380.7" y="1909" width="0.2" height="15.0" fill="rgb(241,20,52)" rx="2" ry="2" />
<text  x="383.69" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (85 samples, 1.43%)</title><rect x="216.2" y="1941" width="16.9" height="15.0" fill="rgb(209,70,48)" rx="2" ry="2" />
<text  x="219.20" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13 samples, 0.22%)</title><rect x="465.3" y="1909" width="2.6" height="15.0" fill="rgb(245,197,27)" rx="2" ry="2" />
<text  x="468.31" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="125.6" y="1749" width="0.8" height="15.0" fill="rgb(222,228,44)" rx="2" ry="2" />
<text  x="128.62" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="697.5" y="1941" width="0.2" height="15.0" fill="rgb(211,152,27)" rx="2" ry="2" />
<text  x="700.54" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="441.3" y="1973" width="0.4" height="15.0" fill="rgb(237,228,23)" rx="2" ry="2" />
<text  x="444.28" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="337.4" y="1621" width="0.2" height="15.0" fill="rgb(239,161,35)" rx="2" ry="2" />
<text  x="340.38" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="412.7" y="1893" width="0.2" height="15.0" fill="rgb(249,164,3)" rx="2" ry="2" />
<text  x="415.67" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="299.6" y="1573" width="0.8" height="15.0" fill="rgb(242,154,23)" rx="2" ry="2" />
<text  x="302.64" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="892.4" y="1893" width="0.2" height="15.0" fill="rgb(251,186,14)" rx="2" ry="2" />
<text  x="895.42" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="281.4" y="1781" width="0.2" height="15.0" fill="rgb(233,47,42)" rx="2" ry="2" />
<text  x="284.36" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="281.2" y="1541" width="0.2" height="15.0" fill="rgb(253,79,13)" rx="2" ry="2" />
<text  x="284.16" y="1551.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (3 samples, 0.05%)</title><rect x="676.1" y="1941" width="0.6" height="15.0" fill="rgb(251,192,5)" rx="2" ry="2" />
<text  x="679.08" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="519.5" y="1925" width="0.2" height="15.0" fill="rgb(223,95,17)" rx="2" ry="2" />
<text  x="522.55" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="196.1" y="2021" width="0.4" height="15.0" fill="rgb(228,26,6)" rx="2" ry="2" />
<text  x="199.14" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="887.8" y="1621" width="0.2" height="15.0" fill="rgb(237,221,46)" rx="2" ry="2" />
<text  x="890.85" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="219.0" y="1829" width="0.2" height="15.0" fill="rgb(217,11,49)" rx="2" ry="2" />
<text  x="221.98" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (4 samples, 0.07%)</title><rect x="859.2" y="1973" width="0.8" height="15.0" fill="rgb(246,186,38)" rx="2" ry="2" />
<text  x="862.24" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.3" y="501" width="0.2" height="15.0" fill="rgb(240,7,13)" rx="2" ry="2" />
<text  x="122.26" y="511.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="487.8" y="1973" width="0.4" height="15.0" fill="rgb(254,72,18)" rx="2" ry="2" />
<text  x="490.76" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (33 samples, 0.56%)</title><rect x="1076.8" y="1893" width="6.5" height="15.0" fill="rgb(210,147,40)" rx="2" ry="2" />
<text  x="1079.77" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="551.1" y="1957" width="0.2" height="15.0" fill="rgb(216,179,22)" rx="2" ry="2" />
<text  x="554.13" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="133" width="13.5" height="15.0" fill="rgb(230,26,2)" rx="2" ry="2" />
<text  x="108.75" y="143.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="513.4" y="1749" width="0.2" height="15.0" fill="rgb(210,211,23)" rx="2" ry="2" />
<text  x="516.39" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1160.8" y="1541" width="0.2" height="15.0" fill="rgb(231,48,2)" rx="2" ry="2" />
<text  x="1163.80" y="1551.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.03%)</title><rect x="888.6" y="1909" width="0.4" height="15.0" fill="rgb(247,215,34)" rx="2" ry="2" />
<text  x="891.64" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="291.1" y="1653" width="0.2" height="15.0" fill="rgb(251,71,38)" rx="2" ry="2" />
<text  x="294.09" y="1663.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="105.0" y="1509" width="0.2" height="15.0" fill="rgb(207,16,30)" rx="2" ry="2" />
<text  x="107.96" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (9 samples, 0.15%)</title><rect x="49.7" y="1941" width="1.8" height="15.0" fill="rgb(219,144,18)" rx="2" ry="2" />
<text  x="52.73" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="326.7" y="1669" width="0.4" height="15.0" fill="rgb(226,78,41)" rx="2" ry="2" />
<text  x="329.65" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="281.2" y="1605" width="0.2" height="15.0" fill="rgb(216,167,6)" rx="2" ry="2" />
<text  x="284.16" y="1615.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="123.4" y="1781" width="0.6" height="15.0" fill="rgb(206,69,36)" rx="2" ry="2" />
<text  x="126.43" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (8 samples, 0.13%)</title><rect x="69.6" y="1893" width="1.6" height="15.0" fill="rgb(232,106,4)" rx="2" ry="2" />
<text  x="72.60" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (81 samples, 1.36%)</title><rect x="305.2" y="1701" width="16.1" height="15.0" fill="rgb(230,2,1)" rx="2" ry="2" />
<text  x="308.20" y="1711.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.0" y="1349" width="0.2" height="15.0" fill="rgb(222,168,16)" rx="2" ry="2" />
<text  x="124.05" y="1359.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="911.1" y="1973" width="0.2" height="15.0" fill="rgb(239,171,49)" rx="2" ry="2" />
<text  x="914.09" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="333.6" y="1685" width="0.6" height="15.0" fill="rgb(206,190,48)" rx="2" ry="2" />
<text  x="336.61" y="1695.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (14 samples, 0.24%)</title><rect x="343.7" y="1925" width="2.8" height="15.0" fill="rgb(210,169,17)" rx="2" ry="2" />
<text  x="346.74" y="1935.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (4 samples, 0.07%)</title><rect x="236.9" y="2037" width="0.8" height="15.0" fill="rgb(221,177,29)" rx="2" ry="2" />
<text  x="239.86" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1012.2" y="1733" width="0.2" height="15.0" fill="rgb(248,131,34)" rx="2" ry="2" />
<text  x="1015.21" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="137.5" y="1973" width="0.2" height="15.0" fill="rgb(253,100,53)" rx="2" ry="2" />
<text  x="140.54" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1126.6" y="2037" width="0.2" height="15.0" fill="rgb(220,191,14)" rx="2" ry="2" />
<text  x="1129.63" y="2047.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.13%)</title><rect x="260.9" y="1893" width="1.6" height="15.0" fill="rgb(240,39,48)" rx="2" ry="2" />
<text  x="263.90" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="279.8" y="1813" width="0.2" height="15.0" fill="rgb(247,203,9)" rx="2" ry="2" />
<text  x="282.77" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="483.0" y="1877" width="0.2" height="15.0" fill="rgb(220,26,34)" rx="2" ry="2" />
<text  x="485.99" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="887.8" y="1637" width="0.2" height="15.0" fill="rgb(247,152,5)" rx="2" ry="2" />
<text  x="890.85" y="1647.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="281.2" y="1509" width="0.2" height="15.0" fill="rgb(222,214,34)" rx="2" ry="2" />
<text  x="284.16" y="1519.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="392.4" y="1701" width="0.2" height="15.0" fill="rgb(231,9,19)" rx="2" ry="2" />
<text  x="395.41" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="717.4" y="1877" width="0.4" height="15.0" fill="rgb(236,47,6)" rx="2" ry="2" />
<text  x="720.40" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="875.5" y="1941" width="0.2" height="15.0" fill="rgb(226,220,27)" rx="2" ry="2" />
<text  x="878.53" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1019.8" y="1877" width="0.7" height="15.0" fill="rgb(226,117,15)" rx="2" ry="2" />
<text  x="1022.75" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="135.4" y="1941" width="0.5" height="15.0" fill="rgb(239,82,40)" rx="2" ry="2" />
<text  x="138.35" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="619.7" y="1925" width="0.2" height="15.0" fill="rgb(238,111,45)" rx="2" ry="2" />
<text  x="622.67" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1119.5" y="1941" width="0.2" height="15.0" fill="rgb(208,76,15)" rx="2" ry="2" />
<text  x="1122.48" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="1034.3" y="1989" width="0.2" height="15.0" fill="rgb(208,149,35)" rx="2" ry="2" />
<text  x="1037.26" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="846.7" y="1941" width="0.2" height="15.0" fill="rgb(231,26,43)" rx="2" ry="2" />
<text  x="849.73" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="218.2" y="1909" width="1.0" height="15.0" fill="rgb(235,139,23)" rx="2" ry="2" />
<text  x="221.19" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.52%)</title><rect x="104.8" y="1669" width="17.8" height="15.0" fill="rgb(215,79,12)" rx="2" ry="2" />
<text  x="107.76" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="65.4" y="1749" width="0.4" height="15.0" fill="rgb(243,118,51)" rx="2" ry="2" />
<text  x="68.42" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="373.7" y="1781" width="0.2" height="15.0" fill="rgb(214,23,47)" rx="2" ry="2" />
<text  x="376.73" y="1791.5" ></text>
</g>
<g >
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="726.3" y="1797" width="0.4" height="15.0" fill="rgb(223,116,43)" rx="2" ry="2" />
<text  x="729.34" y="1807.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="892.2" y="1909" width="0.2" height="15.0" fill="rgb(236,153,4)" rx="2" ry="2" />
<text  x="895.22" y="1919.5" ></text>
</g>
<g >
<title>inet_accept (90 samples, 1.52%)</title><rect x="373.1" y="1957" width="17.9" height="15.0" fill="rgb(247,196,11)" rx="2" ry="2" />
<text  x="376.14" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (2 samples, 0.03%)</title><rect x="836.8" y="1925" width="0.4" height="15.0" fill="rgb(214,118,27)" rx="2" ry="2" />
<text  x="839.79" y="1935.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="23.1" y="2005" width="0.2" height="15.0" fill="rgb(230,12,22)" rx="2" ry="2" />
<text  x="26.11" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="406.7" y="1893" width="0.2" height="15.0" fill="rgb(228,50,51)" rx="2" ry="2" />
<text  x="409.71" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="556.7" y="1749" width="0.2" height="15.0" fill="rgb(228,42,0)" rx="2" ry="2" />
<text  x="559.69" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="791.9" y="1541" width="0.2" height="15.0" fill="rgb(208,79,26)" rx="2" ry="2" />
<text  x="794.90" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="138.7" y="1957" width="0.2" height="15.0" fill="rgb(213,35,11)" rx="2" ry="2" />
<text  x="141.73" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="1143.7" y="1989" width="0.2" height="15.0" fill="rgb(219,149,49)" rx="2" ry="2" />
<text  x="1146.71" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1039.8" y="2053" width="0.4" height="15.0" fill="rgb(225,45,0)" rx="2" ry="2" />
<text  x="1042.82" y="2063.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="337.4" y="1573" width="0.2" height="15.0" fill="rgb(222,58,21)" rx="2" ry="2" />
<text  x="340.38" y="1583.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="565.0" y="1605" width="0.2" height="15.0" fill="rgb(254,148,28)" rx="2" ry="2" />
<text  x="568.04" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="441.5" y="1893" width="0.2" height="15.0" fill="rgb(231,47,9)" rx="2" ry="2" />
<text  x="444.47" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="897.2" y="1973" width="0.2" height="15.0" fill="rgb(238,165,14)" rx="2" ry="2" />
<text  x="900.19" y="1983.5" ></text>
</g>
<g >
<title>dput.part.26 (69 samples, 1.16%)</title><rect x="727.1" y="1781" width="13.7" height="15.0" fill="rgb(212,126,44)" rx="2" ry="2" />
<text  x="730.14" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="105.0" y="1573" width="16.4" height="15.0" fill="rgb(243,34,0)" rx="2" ry="2" />
<text  x="107.96" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="441.3" y="1925" width="0.4" height="15.0" fill="rgb(213,56,12)" rx="2" ry="2" />
<text  x="444.28" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="164.0" y="2005" width="0.6" height="15.0" fill="rgb(229,84,17)" rx="2" ry="2" />
<text  x="166.96" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="896.6" y="1893" width="0.2" height="15.0" fill="rgb(249,150,17)" rx="2" ry="2" />
<text  x="899.59" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="894.4" y="1925" width="0.4" height="15.0" fill="rgb(211,24,52)" rx="2" ry="2" />
<text  x="897.40" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14 samples, 0.24%)</title><rect x="942.5" y="1973" width="2.8" height="15.0" fill="rgb(246,122,42)" rx="2" ry="2" />
<text  x="945.48" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="522.9" y="1957" width="0.8" height="15.0" fill="rgb(234,218,48)" rx="2" ry="2" />
<text  x="525.92" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.2" y="1877" width="0.2" height="15.0" fill="rgb(210,52,52)" rx="2" ry="2" />
<text  x="163.18" y="1887.5" ></text>
</g>
<g >
<title>dst_release (10 samples, 0.17%)</title><rect x="1084.1" y="1877" width="2.0" height="15.0" fill="rgb(252,47,14)" rx="2" ry="2" />
<text  x="1087.12" y="1887.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="1116.9" y="1541" width="0.2" height="15.0" fill="rgb(235,229,0)" rx="2" ry="2" />
<text  x="1119.90" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="22.9" y="1829" width="0.2" height="15.0" fill="rgb(212,186,45)" rx="2" ry="2" />
<text  x="25.91" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="135.0" y="1957" width="1.1" height="15.0" fill="rgb(214,25,49)" rx="2" ry="2" />
<text  x="137.95" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="837.4" y="1925" width="0.4" height="15.0" fill="rgb(247,10,9)" rx="2" ry="2" />
<text  x="840.39" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1031.7" y="1813" width="0.2" height="15.0" fill="rgb(245,186,53)" rx="2" ry="2" />
<text  x="1034.67" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1077" width="14.7" height="15.0" fill="rgb(226,165,54)" rx="2" ry="2" />
<text  x="108.35" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (63 samples, 1.06%)</title><rect x="1152.5" y="2005" width="12.5" height="15.0" fill="rgb(206,200,20)" rx="2" ry="2" />
<text  x="1155.45" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="53.5" y="1941" width="0.2" height="15.0" fill="rgb(230,199,51)" rx="2" ry="2" />
<text  x="56.51" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="557.1" y="1941" width="0.2" height="15.0" fill="rgb(247,149,30)" rx="2" ry="2" />
<text  x="560.09" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1027.1" y="2005" width="0.6" height="15.0" fill="rgb(229,6,28)" rx="2" ry="2" />
<text  x="1030.10" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="850.1" y="1909" width="0.2" height="15.0" fill="rgb(247,183,4)" rx="2" ry="2" />
<text  x="853.10" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1148.3" y="1989" width="0.2" height="15.0" fill="rgb(240,27,15)" rx="2" ry="2" />
<text  x="1151.28" y="1999.5" ></text>
</g>
<g >
<title>tcp_fastopen_active_disable_ofo_check (1 samples, 0.02%)</title><rect x="825.1" y="1557" width="0.2" height="15.0" fill="rgb(213,218,30)" rx="2" ry="2" />
<text  x="828.07" y="1567.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (3 samples, 0.05%)</title><rect x="1000.5" y="1989" width="0.6" height="15.0" fill="rgb(229,69,20)" rx="2" ry="2" />
<text  x="1003.48" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (2 samples, 0.03%)</title><rect x="875.3" y="1973" width="0.4" height="15.0" fill="rgb(249,32,8)" rx="2" ry="2" />
<text  x="878.33" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="402.3" y="1877" width="0.4" height="15.0" fill="rgb(234,104,25)" rx="2" ry="2" />
<text  x="405.34" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="343.5" y="1893" width="0.2" height="15.0" fill="rgb(219,216,41)" rx="2" ry="2" />
<text  x="346.54" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="978.0" y="2037" width="0.4" height="15.0" fill="rgb(223,50,16)" rx="2" ry="2" />
<text  x="981.04" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1102.8" y="1797" width="0.2" height="15.0" fill="rgb(205,83,6)" rx="2" ry="2" />
<text  x="1105.79" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="507.0" y="1685" width="0.2" height="15.0" fill="rgb(206,54,33)" rx="2" ry="2" />
<text  x="510.03" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1007.8" y="1941" width="0.2" height="15.0" fill="rgb(209,154,41)" rx="2" ry="2" />
<text  x="1010.84" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1031.7" y="1989" width="0.2" height="15.0" fill="rgb(237,140,15)" rx="2" ry="2" />
<text  x="1034.67" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.8" y="709" width="14.1" height="15.0" fill="rgb(207,18,18)" rx="2" ry="2" />
<text  x="108.75" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="205.7" y="2021" width="0.2" height="15.0" fill="rgb(238,82,31)" rx="2" ry="2" />
<text  x="208.67" y="2031.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="400.6" y="1861" width="0.7" height="15.0" fill="rgb(215,52,20)" rx="2" ry="2" />
<text  x="403.55" y="1871.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="845.1" y="1669" width="0.2" height="15.0" fill="rgb(227,211,6)" rx="2" ry="2" />
<text  x="848.14" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (2 samples, 0.03%)</title><rect x="658.6" y="2021" width="0.4" height="15.0" fill="rgb(240,217,52)" rx="2" ry="2" />
<text  x="661.60" y="2031.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="688.4" y="1909" width="0.2" height="15.0" fill="rgb(223,50,27)" rx="2" ry="2" />
<text  x="691.40" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="1165.0" y="2053" width="0.2" height="15.0" fill="rgb(228,65,35)" rx="2" ry="2" />
<text  x="1167.97" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="182.6" y="1973" width="0.2" height="15.0" fill="rgb(207,87,51)" rx="2" ry="2" />
<text  x="185.63" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="969.7" y="2021" width="0.2" height="15.0" fill="rgb(216,131,21)" rx="2" ry="2" />
<text  x="972.69" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="874.3" y="1877" width="1.0" height="15.0" fill="rgb(234,13,49)" rx="2" ry="2" />
<text  x="877.34" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="1102.8" y="1589" width="0.2" height="15.0" fill="rgb(210,120,33)" rx="2" ry="2" />
<text  x="1105.79" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="536.2" y="1797" width="0.2" height="15.0" fill="rgb(235,161,21)" rx="2" ry="2" />
<text  x="539.23" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="565.0" y="1717" width="0.2" height="15.0" fill="rgb(227,95,31)" rx="2" ry="2" />
<text  x="568.04" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="321.9" y="1653" width="0.4" height="15.0" fill="rgb(220,138,32)" rx="2" ry="2" />
<text  x="324.89" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="901.6" y="1765" width="0.2" height="15.0" fill="rgb(247,94,37)" rx="2" ry="2" />
<text  x="904.56" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (23 samples, 0.39%)</title><rect x="552.7" y="2005" width="4.6" height="15.0" fill="rgb(247,41,38)" rx="2" ry="2" />
<text  x="555.72" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="279.8" y="1701" width="0.2" height="15.0" fill="rgb(232,214,44)" rx="2" ry="2" />
<text  x="282.77" y="1711.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (10 samples, 0.17%)</title><rect x="543.8" y="1989" width="2.0" height="15.0" fill="rgb(213,124,25)" rx="2" ry="2" />
<text  x="546.78" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="699.1" y="1989" width="0.2" height="15.0" fill="rgb(219,45,37)" rx="2" ry="2" />
<text  x="702.13" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="574.2" y="1605" width="0.2" height="15.0" fill="rgb(229,223,49)" rx="2" ry="2" />
<text  x="577.18" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="337.0" y="1525" width="0.2" height="15.0" fill="rgb(244,144,16)" rx="2" ry="2" />
<text  x="339.98" y="1535.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="912.9" y="1957" width="0.2" height="15.0" fill="rgb(244,177,51)" rx="2" ry="2" />
<text  x="915.88" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="556.7" y="1701" width="0.2" height="15.0" fill="rgb(219,214,11)" rx="2" ry="2" />
<text  x="559.69" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="865.6" y="1957" width="0.2" height="15.0" fill="rgb(218,115,50)" rx="2" ry="2" />
<text  x="868.60" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (3 samples, 0.05%)</title><rect x="577.2" y="1973" width="0.6" height="15.0" fill="rgb(217,63,52)" rx="2" ry="2" />
<text  x="580.15" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1925" width="0.8" height="15.0" fill="rgb(213,78,6)" rx="2" ry="2" />
<text  x="538.24" y="1935.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="270.0" y="1861" width="0.2" height="15.0" fill="rgb(248,196,20)" rx="2" ry="2" />
<text  x="273.04" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="973.7" y="2021" width="0.2" height="15.0" fill="rgb(237,33,45)" rx="2" ry="2" />
<text  x="976.67" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.0" y="1941" width="0.2" height="15.0" fill="rgb(211,189,33)" rx="2" ry="2" />
<text  x="578.96" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="147.9" y="1829" width="0.2" height="15.0" fill="rgb(243,97,52)" rx="2" ry="2" />
<text  x="150.87" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.0" y="1813" width="0.2" height="15.0" fill="rgb(236,100,32)" rx="2" ry="2" />
<text  x="65.05" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="995.9" y="1909" width="0.2" height="15.0" fill="rgb(223,157,22)" rx="2" ry="2" />
<text  x="998.92" y="1919.5" ></text>
</g>
<g >
<title>tcp_release_cb (4 samples, 0.07%)</title><rect x="263.5" y="1893" width="0.8" height="15.0" fill="rgb(241,207,5)" rx="2" ry="2" />
<text  x="266.48" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="154.6" y="1861" width="0.2" height="15.0" fill="rgb(229,12,37)" rx="2" ry="2" />
<text  x="157.62" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="235.7" y="1765" width="0.2" height="15.0" fill="rgb(238,137,36)" rx="2" ry="2" />
<text  x="238.67" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="835.0" y="1877" width="0.2" height="15.0" fill="rgb(228,88,33)" rx="2" ry="2" />
<text  x="838.01" y="1887.5" ></text>
</g>
<g >
<title>sys_sendmsg (477 samples, 8.03%)</title><rect x="253.5" y="1989" width="94.8" height="15.0" fill="rgb(250,181,39)" rx="2" ry="2" />
<text  x="256.55" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="884.7" y="1829" width="0.2" height="15.0" fill="rgb(248,78,41)" rx="2" ry="2" />
<text  x="887.67" y="1839.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1076.6" y="1893" width="0.2" height="15.0" fill="rgb(248,70,11)" rx="2" ry="2" />
<text  x="1079.57" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="235.7" y="1749" width="0.2" height="15.0" fill="rgb(223,200,45)" rx="2" ry="2" />
<text  x="238.67" y="1759.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="119.5" y="613" width="0.2" height="15.0" fill="rgb(228,79,28)" rx="2" ry="2" />
<text  x="122.46" y="623.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (7 samples, 0.12%)</title><rect x="69.6" y="1877" width="1.4" height="15.0" fill="rgb(217,75,31)" rx="2" ry="2" />
<text  x="72.60" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="326.7" y="1733" width="0.4" height="15.0" fill="rgb(242,85,20)" rx="2" ry="2" />
<text  x="329.65" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (10 samples, 0.17%)</title><rect x="958.8" y="2005" width="2.0" height="15.0" fill="rgb(224,79,16)" rx="2" ry="2" />
<text  x="961.77" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="119.1" y="101" width="0.2" height="15.0" fill="rgb(207,121,39)" rx="2" ry="2" />
<text  x="122.06" y="111.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="497.5" y="1925" width="0.4" height="15.0" fill="rgb(210,107,8)" rx="2" ry="2" />
<text  x="500.49" y="1935.5" ></text>
</g>
<g >
<title>locks_free_lock_context (2 samples, 0.03%)</title><rect x="734.1" y="1669" width="0.4" height="15.0" fill="rgb(207,183,0)" rx="2" ry="2" />
<text  x="737.09" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="188.2" y="1989" width="0.2" height="15.0" fill="rgb(221,131,17)" rx="2" ry="2" />
<text  x="191.19" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.10%)</title><rect x="14.6" y="1957" width="1.2" height="15.0" fill="rgb(218,202,14)" rx="2" ry="2" />
<text  x="17.57" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="70.6" y="1829" width="0.2" height="15.0" fill="rgb(221,67,23)" rx="2" ry="2" />
<text  x="73.59" y="1839.5" ></text>
</g>
<g >
<title>sys_recvfrom (2 samples, 0.03%)</title><rect x="1126.2" y="2021" width="0.4" height="15.0" fill="rgb(225,8,20)" rx="2" ry="2" />
<text  x="1129.23" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="154.6" y="1893" width="0.2" height="15.0" fill="rgb(246,38,35)" rx="2" ry="2" />
<text  x="157.62" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="895.2" y="1877" width="0.4" height="15.0" fill="rgb(244,65,47)" rx="2" ry="2" />
<text  x="898.20" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="744.0" y="1765" width="0.2" height="15.0" fill="rgb(253,20,30)" rx="2" ry="2" />
<text  x="747.02" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="713.0" y="1845" width="0.2" height="15.0" fill="rgb(227,108,29)" rx="2" ry="2" />
<text  x="716.03" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (4 samples, 0.07%)</title><rect x="229.3" y="1797" width="0.8" height="15.0" fill="rgb(252,183,47)" rx="2" ry="2" />
<text  x="232.31" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (10 samples, 0.17%)</title><rect x="534.6" y="2037" width="2.0" height="15.0" fill="rgb(210,140,14)" rx="2" ry="2" />
<text  x="537.64" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (1 samples, 0.02%)</title><rect x="969.3" y="2037" width="0.2" height="15.0" fill="rgb(237,227,3)" rx="2" ry="2" />
<text  x="972.30" y="2047.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="529.1" y="1957" width="0.2" height="15.0" fill="rgb(251,95,24)" rx="2" ry="2" />
<text  x="532.08" y="1967.5" ></text>
</g>
<g >
<title>ip_output (113 samples, 1.90%)</title><rect x="769.6" y="1637" width="22.5" height="15.0" fill="rgb(246,24,15)" rx="2" ry="2" />
<text  x="772.65" y="1647.5" >i..</text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="252.8" y="1989" width="0.7" height="15.0" fill="rgb(222,138,22)" rx="2" ry="2" />
<text  x="255.75" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1033.5" y="1877" width="0.2" height="15.0" fill="rgb(210,1,32)" rx="2" ry="2" />
<text  x="1036.46" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="62.2" y="1877" width="0.2" height="15.0" fill="rgb(237,181,32)" rx="2" ry="2" />
<text  x="65.25" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="894.0" y="1925" width="0.4" height="15.0" fill="rgb(224,14,39)" rx="2" ry="2" />
<text  x="897.01" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="412.7" y="1733" width="0.2" height="15.0" fill="rgb(213,199,49)" rx="2" ry="2" />
<text  x="415.67" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (1 samples, 0.02%)</title><rect x="67.0" y="1973" width="0.2" height="15.0" fill="rgb(251,174,54)" rx="2" ry="2" />
<text  x="70.01" y="1983.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="792.3" y="1653" width="0.2" height="15.0" fill="rgb(249,181,23)" rx="2" ry="2" />
<text  x="795.30" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="574.2" y="1637" width="0.2" height="15.0" fill="rgb(221,6,22)" rx="2" ry="2" />
<text  x="577.18" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="550.1" y="1925" width="0.2" height="15.0" fill="rgb(207,207,53)" rx="2" ry="2" />
<text  x="553.14" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="757.5" y="1477" width="0.2" height="15.0" fill="rgb(206,228,45)" rx="2" ry="2" />
<text  x="760.53" y="1487.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="672.7" y="1845" width="1.2" height="15.0" fill="rgb(245,172,47)" rx="2" ry="2" />
<text  x="675.71" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="600.6" y="1733" width="0.2" height="15.0" fill="rgb(210,206,14)" rx="2" ry="2" />
<text  x="603.60" y="1743.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="406.5" y="1893" width="0.2" height="15.0" fill="rgb(209,185,25)" rx="2" ry="2" />
<text  x="409.51" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="896.4" y="1957" width="0.4" height="15.0" fill="rgb(214,142,49)" rx="2" ry="2" />
<text  x="899.39" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="78.9" y="1957" width="0.2" height="15.0" fill="rgb(225,214,12)" rx="2" ry="2" />
<text  x="81.93" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="1149.3" y="1989" width="0.8" height="15.0" fill="rgb(230,228,43)" rx="2" ry="2" />
<text  x="1152.28" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="322.1" y="1589" width="0.2" height="15.0" fill="rgb(241,132,39)" rx="2" ry="2" />
<text  x="325.08" y="1599.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="700.3" y="2005" width="0.2" height="15.0" fill="rgb(226,101,7)" rx="2" ry="2" />
<text  x="703.32" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1019.6" y="1909" width="0.2" height="15.0" fill="rgb(229,73,45)" rx="2" ry="2" />
<text  x="1022.56" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (2 samples, 0.03%)</title><rect x="900.8" y="1973" width="0.4" height="15.0" fill="rgb(222,158,32)" rx="2" ry="2" />
<text  x="903.76" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="1127.2" y="1957" width="0.4" height="15.0" fill="rgb(208,71,40)" rx="2" ry="2" />
<text  x="1130.23" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="990.9" y="1957" width="1.0" height="15.0" fill="rgb(245,122,40)" rx="2" ry="2" />
<text  x="993.95" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="980.6" y="2037" width="0.2" height="15.0" fill="rgb(210,90,25)" rx="2" ry="2" />
<text  x="983.62" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="74.4" y="1701" width="0.2" height="15.0" fill="rgb(245,0,26)" rx="2" ry="2" />
<text  x="77.36" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="321.3" y="1669" width="0.2" height="15.0" fill="rgb(211,13,1)" rx="2" ry="2" />
<text  x="324.29" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="887.8" y="1605" width="0.2" height="15.0" fill="rgb(241,162,43)" rx="2" ry="2" />
<text  x="890.85" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1059.7" y="1941" width="0.4" height="15.0" fill="rgb(236,83,45)" rx="2" ry="2" />
<text  x="1062.68" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="826.1" y="1829" width="0.4" height="15.0" fill="rgb(231,21,20)" rx="2" ry="2" />
<text  x="829.07" y="1839.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="705.9" y="1877" width="0.2" height="15.0" fill="rgb(238,54,52)" rx="2" ry="2" />
<text  x="708.88" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="635.6" y="1861" width="0.2" height="15.0" fill="rgb(249,179,31)" rx="2" ry="2" />
<text  x="638.56" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="497.5" y="1861" width="0.4" height="15.0" fill="rgb(254,102,0)" rx="2" ry="2" />
<text  x="500.49" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="536.2" y="1541" width="0.2" height="15.0" fill="rgb(224,185,5)" rx="2" ry="2" />
<text  x="539.23" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="905.3" y="1989" width="0.2" height="15.0" fill="rgb(231,136,47)" rx="2" ry="2" />
<text  x="908.33" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="775.6" y="1557" width="0.6" height="15.0" fill="rgb(213,211,3)" rx="2" ry="2" />
<text  x="778.61" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (68 samples, 1.14%)</title><rect x="21.3" y="2021" width="13.5" height="15.0" fill="rgb(240,30,22)" rx="2" ry="2" />
<text  x="24.32" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="706.7" y="1781" width="0.6" height="15.0" fill="rgb(234,57,53)" rx="2" ry="2" />
<text  x="709.68" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="302.4" y="1669" width="0.2" height="15.0" fill="rgb(223,190,36)" rx="2" ry="2" />
<text  x="305.42" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1160.8" y="1909" width="0.2" height="15.0" fill="rgb(235,45,11)" rx="2" ry="2" />
<text  x="1163.80" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (16 samples, 0.27%)</title><rect x="547.2" y="1973" width="3.1" height="15.0" fill="rgb(205,197,29)" rx="2" ry="2" />
<text  x="550.16" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="802.6" y="1621" width="0.2" height="15.0" fill="rgb(239,141,19)" rx="2" ry="2" />
<text  x="805.63" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="22.9" y="1909" width="0.2" height="15.0" fill="rgb(245,121,25)" rx="2" ry="2" />
<text  x="25.91" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="227.9" y="1877" width="0.2" height="15.0" fill="rgb(227,6,3)" rx="2" ry="2" />
<text  x="230.92" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (211 samples, 3.55%)</title><rect x="537.8" y="2021" width="41.9" height="15.0" fill="rgb(226,79,23)" rx="2" ry="2" />
<text  x="540.82" y="2031.5" >fol..</text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="851.5" y="1861" width="0.8" height="15.0" fill="rgb(245,100,3)" rx="2" ry="2" />
<text  x="854.49" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="118.9" y="53" width="0.2" height="15.0" fill="rgb(249,197,40)" rx="2" ry="2" />
<text  x="121.86" y="63.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="483.0" y="1669" width="0.2" height="15.0" fill="rgb(228,166,54)" rx="2" ry="2" />
<text  x="485.99" y="1679.5" ></text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.02%)</title><rect x="416.2" y="1973" width="0.2" height="15.0" fill="rgb(252,155,16)" rx="2" ry="2" />
<text  x="419.25" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="112.7" y="37" width="0.4" height="15.0" fill="rgb(225,36,22)" rx="2" ry="2" />
<text  x="115.70" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="696.3" y="2005" width="3.0" height="15.0" fill="rgb(252,202,53)" rx="2" ry="2" />
<text  x="699.35" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="738.3" y="1637" width="0.2" height="15.0" fill="rgb(245,107,26)" rx="2" ry="2" />
<text  x="741.26" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.3" y="1909" width="0.2" height="15.0" fill="rgb(227,82,40)" rx="2" ry="2" />
<text  x="146.30" y="1919.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1136.6" y="2053" width="0.2" height="15.0" fill="rgb(220,184,3)" rx="2" ry="2" />
<text  x="1139.56" y="2063.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (7 samples, 0.12%)</title><rect x="851.3" y="1877" width="1.4" height="15.0" fill="rgb(220,103,38)" rx="2" ry="2" />
<text  x="854.30" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1011.0" y="1829" width="0.8" height="15.0" fill="rgb(210,118,33)" rx="2" ry="2" />
<text  x="1014.01" y="1839.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="896.6" y="1685" width="0.2" height="15.0" fill="rgb(252,8,40)" rx="2" ry="2" />
<text  x="899.59" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="334.0" y="1349" width="0.2" height="15.0" fill="rgb(246,117,3)" rx="2" ry="2" />
<text  x="337.00" y="1359.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="969.7" y="1973" width="0.2" height="15.0" fill="rgb(219,191,5)" rx="2" ry="2" />
<text  x="972.69" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="522.5" y="1941" width="0.2" height="15.0" fill="rgb(241,60,3)" rx="2" ry="2" />
<text  x="525.53" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="888.2" y="1845" width="0.2" height="15.0" fill="rgb(210,86,54)" rx="2" ry="2" />
<text  x="891.25" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (85 samples, 1.43%)</title><rect x="677.9" y="2021" width="16.9" height="15.0" fill="rgb(209,228,12)" rx="2" ry="2" />
<text  x="680.87" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="677.7" y="1989" width="0.2" height="15.0" fill="rgb(226,229,32)" rx="2" ry="2" />
<text  x="680.67" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="857.7" y="1909" width="0.2" height="15.0" fill="rgb(228,66,52)" rx="2" ry="2" />
<text  x="860.65" y="1919.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="1035.6" y="2037" width="0.2" height="15.0" fill="rgb(237,71,29)" rx="2" ry="2" />
<text  x="1038.65" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1031.7" y="1797" width="0.2" height="15.0" fill="rgb(221,158,31)" rx="2" ry="2" />
<text  x="1034.67" y="1807.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (55 samples, 0.93%)</title><rect x="1095.2" y="1925" width="11.0" height="15.0" fill="rgb(235,67,45)" rx="2" ry="2" />
<text  x="1098.24" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="617.3" y="1957" width="0.4" height="15.0" fill="rgb(242,148,36)" rx="2" ry="2" />
<text  x="620.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1105.2" y="1653" width="0.2" height="15.0" fill="rgb(228,1,31)" rx="2" ry="2" />
<text  x="1108.18" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="884.9" y="1877" width="0.2" height="15.0" fill="rgb(247,138,34)" rx="2" ry="2" />
<text  x="887.87" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="530.1" y="1989" width="0.2" height="15.0" fill="rgb(238,155,40)" rx="2" ry="2" />
<text  x="533.07" y="1999.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="328.8" y="1829" width="0.8" height="15.0" fill="rgb(239,138,49)" rx="2" ry="2" />
<text  x="331.84" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="253.0" y="1941" width="0.5" height="15.0" fill="rgb(224,188,48)" rx="2" ry="2" />
<text  x="255.95" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1160.8" y="1925" width="0.2" height="15.0" fill="rgb(210,170,42)" rx="2" ry="2" />
<text  x="1163.80" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="346.7" y="1957" width="1.6" height="15.0" fill="rgb(233,58,39)" rx="2" ry="2" />
<text  x="349.72" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="958.2" y="2005" width="0.2" height="15.0" fill="rgb(222,201,3)" rx="2" ry="2" />
<text  x="961.17" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1161.8" y="1765" width="0.2" height="15.0" fill="rgb(221,48,48)" rx="2" ry="2" />
<text  x="1164.79" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (2 samples, 0.03%)</title><rect x="784.4" y="1509" width="0.3" height="15.0" fill="rgb(216,85,13)" rx="2" ry="2" />
<text  x="787.35" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="569.6" y="1797" width="0.2" height="15.0" fill="rgb(209,33,32)" rx="2" ry="2" />
<text  x="572.61" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1031.7" y="1845" width="0.2" height="15.0" fill="rgb(243,141,12)" rx="2" ry="2" />
<text  x="1034.67" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="321.9" y="1781" width="0.4" height="15.0" fill="rgb(222,207,35)" rx="2" ry="2" />
<text  x="324.89" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1059.5" y="1973" width="0.2" height="15.0" fill="rgb(253,188,42)" rx="2" ry="2" />
<text  x="1062.48" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="333.4" y="1749" width="0.8" height="15.0" fill="rgb(218,5,45)" rx="2" ry="2" />
<text  x="336.41" y="1759.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="22.9" y="1669" width="0.2" height="15.0" fill="rgb(218,169,53)" rx="2" ry="2" />
<text  x="25.91" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="321.9" y="1717" width="0.4" height="15.0" fill="rgb(253,84,37)" rx="2" ry="2" />
<text  x="324.89" y="1727.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (5 samples, 0.08%)</title><rect x="256.1" y="1909" width="1.0" height="15.0" fill="rgb(221,35,12)" rx="2" ry="2" />
<text  x="259.13" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="830.8" y="1829" width="0.2" height="15.0" fill="rgb(242,214,5)" rx="2" ry="2" />
<text  x="833.84" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.32%)</title><rect x="601.0" y="1925" width="3.8" height="15.0" fill="rgb(243,128,48)" rx="2" ry="2" />
<text  x="603.99" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="104.6" y="1733" width="18.4" height="15.0" fill="rgb(224,51,38)" rx="2" ry="2" />
<text  x="107.56" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="225.7" y="1845" width="1.0" height="15.0" fill="rgb(238,49,27)" rx="2" ry="2" />
<text  x="228.74" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (98 samples, 1.65%)</title><rect x="496.7" y="2021" width="19.5" height="15.0" fill="rgb(253,110,20)" rx="2" ry="2" />
<text  x="499.70" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="63.6" y="1909" width="0.2" height="15.0" fill="rgb(228,76,24)" rx="2" ry="2" />
<text  x="66.64" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1142.7" y="1989" width="0.2" height="15.0" fill="rgb(219,189,48)" rx="2" ry="2" />
<text  x="1145.72" y="1999.5" ></text>
</g>
<g >
<title>syscall (55 samples, 0.93%)</title><rect x="1154.0" y="1973" width="11.0" height="15.0" fill="rgb(214,145,41)" rx="2" ry="2" />
<text  x="1157.04" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="884.5" y="1573" width="0.2" height="15.0" fill="rgb(226,125,41)" rx="2" ry="2" />
<text  x="887.47" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1029" width="14.7" height="15.0" fill="rgb(252,41,11)" rx="2" ry="2" />
<text  x="108.35" y="1039.5" ></text>
</g>
<g >
<title>ip_finish_output2 (109 samples, 1.84%)</title><rect x="770.2" y="1605" width="21.7" height="15.0" fill="rgb(244,213,44)" rx="2" ry="2" />
<text  x="773.25" y="1615.5" >i..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="154.6" y="1813" width="0.2" height="15.0" fill="rgb(232,18,27)" rx="2" ry="2" />
<text  x="157.62" y="1823.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="672.5" y="1477" width="0.2" height="15.0" fill="rgb(248,141,46)" rx="2" ry="2" />
<text  x="675.51" y="1487.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="141.1" y="1893" width="0.2" height="15.0" fill="rgb(254,206,32)" rx="2" ry="2" />
<text  x="144.11" y="1903.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1017.0" y="1973" width="0.2" height="15.0" fill="rgb(253,109,43)" rx="2" ry="2" />
<text  x="1019.97" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (2 samples, 0.03%)</title><rect x="1169.3" y="2005" width="0.4" height="15.0" fill="rgb(246,169,15)" rx="2" ry="2" />
<text  x="1172.34" y="2015.5" ></text>
</g>
<g >
<title>operator new@plt (3 samples, 0.05%)</title><rect x="1031.9" y="2037" width="0.6" height="15.0" fill="rgb(243,58,24)" rx="2" ry="2" />
<text  x="1034.87" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="628.0" y="2005" width="0.4" height="15.0" fill="rgb(254,154,31)" rx="2" ry="2" />
<text  x="631.01" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="792.7" y="1541" width="0.2" height="15.0" fill="rgb(219,122,16)" rx="2" ry="2" />
<text  x="795.69" y="1551.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="152.2" y="1893" width="0.2" height="15.0" fill="rgb(236,4,21)" rx="2" ry="2" />
<text  x="155.24" y="1903.5" ></text>
</g>
<g >
<title>ip_copy_addrs (3 samples, 0.05%)</title><rect x="764.3" y="1669" width="0.6" height="15.0" fill="rgb(250,93,23)" rx="2" ry="2" />
<text  x="767.29" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.03%)</title><rect x="618.1" y="2005" width="0.4" height="15.0" fill="rgb(219,223,33)" rx="2" ry="2" />
<text  x="621.08" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1139.9" y="1941" width="0.2" height="15.0" fill="rgb(233,122,2)" rx="2" ry="2" />
<text  x="1142.94" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="571.8" y="1749" width="0.2" height="15.0" fill="rgb(236,145,7)" rx="2" ry="2" />
<text  x="574.79" y="1759.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="166.5" y="2005" width="0.2" height="15.0" fill="rgb(214,105,17)" rx="2" ry="2" />
<text  x="169.54" y="2015.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="30.5" y="1957" width="0.2" height="15.0" fill="rgb(243,13,14)" rx="2" ry="2" />
<text  x="33.46" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="889.2" y="1941" width="0.4" height="15.0" fill="rgb(221,89,6)" rx="2" ry="2" />
<text  x="892.24" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1059.5" y="1957" width="0.2" height="15.0" fill="rgb(237,88,19)" rx="2" ry="2" />
<text  x="1062.48" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="27.5" y="1909" width="0.2" height="15.0" fill="rgb(242,203,34)" rx="2" ry="2" />
<text  x="30.48" y="1919.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="123.2" y="1749" width="0.2" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="126.23" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="879.3" y="1877" width="0.2" height="15.0" fill="rgb(225,9,35)" rx="2" ry="2" />
<text  x="882.31" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="1093.1" y="1909" width="1.5" height="15.0" fill="rgb(237,26,43)" rx="2" ry="2" />
<text  x="1096.06" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1102.8" y="1861" width="0.2" height="15.0" fill="rgb(248,57,15)" rx="2" ry="2" />
<text  x="1105.79" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="622.4" y="2005" width="0.4" height="15.0" fill="rgb(213,160,31)" rx="2" ry="2" />
<text  x="625.45" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="745.2" y="1717" width="0.2" height="15.0" fill="rgb(207,228,30)" rx="2" ry="2" />
<text  x="748.22" y="1727.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="89.5" y="1941" width="0.2" height="15.0" fill="rgb(206,120,9)" rx="2" ry="2" />
<text  x="92.46" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="230.1" y="1813" width="0.4" height="15.0" fill="rgb(221,144,47)" rx="2" ry="2" />
<text  x="233.11" y="1823.5" ></text>
</g>
<g >
<title>__alloc_skb (28 samples, 0.47%)</title><rect x="752.4" y="1717" width="5.5" height="15.0" fill="rgb(211,58,14)" rx="2" ry="2" />
<text  x="755.37" y="1727.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="144.5" y="1925" width="0.2" height="15.0" fill="rgb(211,151,12)" rx="2" ry="2" />
<text  x="147.49" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="852.1" y="1797" width="0.2" height="15.0" fill="rgb(235,9,21)" rx="2" ry="2" />
<text  x="855.09" y="1807.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="565.6" y="1909" width="0.2" height="15.0" fill="rgb(215,101,14)" rx="2" ry="2" />
<text  x="568.63" y="1919.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="746.2" y="1749" width="0.2" height="15.0" fill="rgb(215,89,17)" rx="2" ry="2" />
<text  x="749.21" y="1759.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="373.7" y="1685" width="0.2" height="15.0" fill="rgb(248,125,4)" rx="2" ry="2" />
<text  x="376.73" y="1695.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="1109.9" y="1461" width="0.8" height="15.0" fill="rgb(244,187,28)" rx="2" ry="2" />
<text  x="1112.94" y="1471.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="148.1" y="1781" width="0.2" height="15.0" fill="rgb(254,114,49)" rx="2" ry="2" />
<text  x="151.06" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="392.4" y="1829" width="0.2" height="15.0" fill="rgb(229,20,23)" rx="2" ry="2" />
<text  x="395.41" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (28 samples, 0.47%)</title><rect x="312.0" y="1669" width="5.5" height="15.0" fill="rgb(251,121,39)" rx="2" ry="2" />
<text  x="314.95" y="1679.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="22.9" y="1717" width="0.2" height="15.0" fill="rgb(212,67,18)" rx="2" ry="2" />
<text  x="25.91" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="862.4" y="1845" width="0.2" height="15.0" fill="rgb(233,163,18)" rx="2" ry="2" />
<text  x="865.42" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="705.7" y="1973" width="0.2" height="15.0" fill="rgb(217,191,51)" rx="2" ry="2" />
<text  x="708.68" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1004.7" y="1845" width="0.2" height="15.0" fill="rgb(247,185,33)" rx="2" ry="2" />
<text  x="1007.66" y="1855.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="824.9" y="1749" width="0.2" height="15.0" fill="rgb(207,135,34)" rx="2" ry="2" />
<text  x="827.88" y="1759.5" ></text>
</g>
<g >
<title>[mcrouter] (138 samples, 2.32%)</title><rect x="209.2" y="2021" width="27.5" height="15.0" fill="rgb(217,125,25)" rx="2" ry="2" />
<text  x="212.25" y="2031.5" >[..</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="488.0" y="1877" width="0.2" height="15.0" fill="rgb(254,199,26)" rx="2" ry="2" />
<text  x="490.96" y="1887.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="822.9" y="1781" width="0.2" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="825.89" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="627.8" y="2005" width="0.2" height="15.0" fill="rgb(206,143,37)" rx="2" ry="2" />
<text  x="630.81" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="147.9" y="1909" width="0.2" height="15.0" fill="rgb(226,205,13)" rx="2" ry="2" />
<text  x="150.87" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="104.4" y="1797" width="19.6" height="15.0" fill="rgb(227,78,2)" rx="2" ry="2" />
<text  x="107.36" y="1807.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="809.6" y="1717" width="0.4" height="15.0" fill="rgb(240,147,25)" rx="2" ry="2" />
<text  x="812.58" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="848.7" y="1797" width="0.2" height="15.0" fill="rgb(235,184,42)" rx="2" ry="2" />
<text  x="851.71" y="1807.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="151.6" y="1909" width="0.2" height="15.0" fill="rgb(210,33,14)" rx="2" ry="2" />
<text  x="154.64" y="1919.5" ></text>
</g>
<g >
<title>skb_release_all (26 samples, 0.44%)</title><rect x="1110.7" y="1493" width="5.2" height="15.0" fill="rgb(221,118,49)" rx="2" ry="2" />
<text  x="1113.74" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (7 samples, 0.12%)</title><rect x="45.4" y="1957" width="1.4" height="15.0" fill="rgb(240,63,34)" rx="2" ry="2" />
<text  x="48.36" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="843.7" y="1893" width="0.2" height="15.0" fill="rgb(228,106,47)" rx="2" ry="2" />
<text  x="846.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="892.4" y="1669" width="0.2" height="15.0" fill="rgb(248,85,22)" rx="2" ry="2" />
<text  x="895.42" y="1679.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="874.5" y="1813" width="0.8" height="15.0" fill="rgb(205,87,0)" rx="2" ry="2" />
<text  x="877.54" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="441.3" y="1989" width="0.4" height="15.0" fill="rgb(206,86,4)" rx="2" ry="2" />
<text  x="444.28" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="997.7" y="1877" width="0.2" height="15.0" fill="rgb(237,50,32)" rx="2" ry="2" />
<text  x="1000.70" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="468.3" y="1845" width="0.2" height="15.0" fill="rgb(226,60,35)" rx="2" ry="2" />
<text  x="471.29" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="712.6" y="1941" width="0.4" height="15.0" fill="rgb(207,88,17)" rx="2" ry="2" />
<text  x="715.64" y="1951.5" ></text>
</g>
<g >
<title>detach_if_pending (3 samples, 0.05%)</title><rect x="804.6" y="1605" width="0.6" height="15.0" fill="rgb(226,155,46)" rx="2" ry="2" />
<text  x="807.61" y="1615.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (25 samples, 0.42%)</title><rect x="421.0" y="2021" width="5.0" height="15.0" fill="rgb(214,114,13)" rx="2" ry="2" />
<text  x="424.01" y="2031.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="579.5" y="1989" width="0.2" height="15.0" fill="rgb(252,179,44)" rx="2" ry="2" />
<text  x="582.54" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.0" y="1605" width="0.2" height="15.0" fill="rgb(226,57,38)" rx="2" ry="2" />
<text  x="125.04" y="1615.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="231.9" y="1893" width="0.2" height="15.0" fill="rgb(253,172,37)" rx="2" ry="2" />
<text  x="234.90" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="298.6" y="1509" width="0.8" height="15.0" fill="rgb(228,173,39)" rx="2" ry="2" />
<text  x="301.64" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="226.3" y="1813" width="0.4" height="15.0" fill="rgb(233,161,32)" rx="2" ry="2" />
<text  x="229.33" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="488.8" y="1973" width="0.6" height="15.0" fill="rgb(240,32,13)" rx="2" ry="2" />
<text  x="491.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="322.1" y="1573" width="0.2" height="15.0" fill="rgb(216,202,51)" rx="2" ry="2" />
<text  x="325.08" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (3 samples, 0.05%)</title><rect x="1143.3" y="2005" width="0.6" height="15.0" fill="rgb(221,140,0)" rx="2" ry="2" />
<text  x="1146.32" y="2015.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="284.9" y="1845" width="0.2" height="15.0" fill="rgb(245,171,31)" rx="2" ry="2" />
<text  x="287.94" y="1855.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="856.7" y="1957" width="0.2" height="15.0" fill="rgb(246,50,31)" rx="2" ry="2" />
<text  x="859.66" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (745 samples, 12.54%)</title><rect x="709.9" y="1973" width="148.0" height="15.0" fill="rgb(221,16,8)" rx="2" ry="2" />
<text  x="712.86" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="625.8" y="2037" width="0.2" height="15.0" fill="rgb(238,108,18)" rx="2" ry="2" />
<text  x="628.82" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="977.2" y="2037" width="0.8" height="15.0" fill="rgb(219,128,14)" rx="2" ry="2" />
<text  x="980.24" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="623.8" y="1973" width="1.2" height="15.0" fill="rgb(228,121,16)" rx="2" ry="2" />
<text  x="626.84" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="60.1" y="1861" width="0.2" height="15.0" fill="rgb(210,26,52)" rx="2" ry="2" />
<text  x="63.06" y="1871.5" ></text>
</g>
<g >
<title>extract_crng (1 samples, 0.02%)</title><rect x="277.8" y="1749" width="0.2" height="15.0" fill="rgb(231,97,41)" rx="2" ry="2" />
<text  x="280.78" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="73.0" y="1701" width="0.2" height="15.0" fill="rgb(208,72,44)" rx="2" ry="2" />
<text  x="75.97" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="884.5" y="1685" width="0.2" height="15.0" fill="rgb(240,134,47)" rx="2" ry="2" />
<text  x="887.47" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (2 samples, 0.03%)</title><rect x="546.8" y="1973" width="0.4" height="15.0" fill="rgb(226,14,34)" rx="2" ry="2" />
<text  x="549.76" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="623.6" y="1941" width="0.2" height="15.0" fill="rgb(244,101,10)" rx="2" ry="2" />
<text  x="626.64" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1009.6" y="1973" width="0.2" height="15.0" fill="rgb(252,172,35)" rx="2" ry="2" />
<text  x="1012.62" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="921.2" y="2005" width="0.2" height="15.0" fill="rgb(208,60,40)" rx="2" ry="2" />
<text  x="924.22" y="2015.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (4 samples, 0.07%)</title><rect x="1058.9" y="2005" width="0.8" height="15.0" fill="rgb(233,48,20)" rx="2" ry="2" />
<text  x="1061.89" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.80%)</title><rect x="104.2" y="1925" width="21.2" height="15.0" fill="rgb(210,72,14)" rx="2" ry="2" />
<text  x="107.16" y="1935.5" >[..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="159.4" y="1829" width="0.2" height="15.0" fill="rgb(207,229,42)" rx="2" ry="2" />
<text  x="162.39" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="672.5" y="1733" width="0.2" height="15.0" fill="rgb(213,140,19)" rx="2" ry="2" />
<text  x="675.51" y="1743.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="441.5" y="1701" width="0.2" height="15.0" fill="rgb(216,217,47)" rx="2" ry="2" />
<text  x="444.47" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="159.6" y="1781" width="0.2" height="15.0" fill="rgb(226,122,36)" rx="2" ry="2" />
<text  x="162.59" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="298.6" y="1541" width="0.8" height="15.0" fill="rgb(211,158,44)" rx="2" ry="2" />
<text  x="301.64" y="1551.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="534.2" y="1957" width="0.2" height="15.0" fill="rgb(232,63,45)" rx="2" ry="2" />
<text  x="537.25" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1059.7" y="1957" width="0.4" height="15.0" fill="rgb(237,61,39)" rx="2" ry="2" />
<text  x="1062.68" y="1967.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="516.0" y="1893" width="0.2" height="15.0" fill="rgb(226,97,21)" rx="2" ry="2" />
<text  x="518.97" y="1903.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1115.7" y="1477" width="0.2" height="15.0" fill="rgb(217,201,15)" rx="2" ry="2" />
<text  x="1118.70" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="930.8" y="1941" width="0.4" height="15.0" fill="rgb(216,214,6)" rx="2" ry="2" />
<text  x="933.76" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (3 samples, 0.05%)</title><rect x="1150.9" y="2053" width="0.6" height="15.0" fill="rgb(249,56,52)" rx="2" ry="2" />
<text  x="1153.87" y="2063.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="851.5" y="1845" width="0.8" height="15.0" fill="rgb(218,191,14)" rx="2" ry="2" />
<text  x="854.49" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (6 samples, 0.10%)</title><rect x="921.6" y="2037" width="1.2" height="15.0" fill="rgb(230,76,50)" rx="2" ry="2" />
<text  x="924.62" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="858.1" y="1877" width="0.1" height="15.0" fill="rgb(234,14,8)" rx="2" ry="2" />
<text  x="861.05" y="1887.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1110.5" y="1397" width="0.2" height="15.0" fill="rgb(225,168,34)" rx="2" ry="2" />
<text  x="1113.54" y="1407.5" ></text>
</g>
<g >
<title>free (24 samples, 0.40%)</title><rect x="188.8" y="2021" width="4.8" height="15.0" fill="rgb(225,182,14)" rx="2" ry="2" />
<text  x="191.79" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="897.6" y="1973" width="0.2" height="15.0" fill="rgb(235,61,8)" rx="2" ry="2" />
<text  x="900.58" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="835.0" y="1813" width="0.2" height="15.0" fill="rgb(226,203,27)" rx="2" ry="2" />
<text  x="838.01" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="110.7" y="37" width="0.8" height="15.0" fill="rgb(243,45,23)" rx="2" ry="2" />
<text  x="113.72" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="910.9" y="1973" width="0.2" height="15.0" fill="rgb(247,49,52)" rx="2" ry="2" />
<text  x="913.89" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7 samples, 0.12%)</title><rect x="417.6" y="2021" width="1.4" height="15.0" fill="rgb(243,193,26)" rx="2" ry="2" />
<text  x="420.64" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="373.7" y="1797" width="0.2" height="15.0" fill="rgb(217,62,6)" rx="2" ry="2" />
<text  x="376.73" y="1807.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="53.5" y="1909" width="0.2" height="15.0" fill="rgb(217,64,30)" rx="2" ry="2" />
<text  x="56.51" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (3 samples, 0.05%)</title><rect x="527.5" y="1973" width="0.6" height="15.0" fill="rgb(244,52,47)" rx="2" ry="2" />
<text  x="530.49" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1010.8" y="1989" width="0.2" height="15.0" fill="rgb(206,141,6)" rx="2" ry="2" />
<text  x="1013.81" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="574.2" y="1685" width="0.2" height="15.0" fill="rgb(245,49,40)" rx="2" ry="2" />
<text  x="577.18" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1105.2" y="1733" width="0.2" height="15.0" fill="rgb(216,160,1)" rx="2" ry="2" />
<text  x="1108.18" y="1743.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="848.7" y="1621" width="0.2" height="15.0" fill="rgb(207,25,17)" rx="2" ry="2" />
<text  x="851.71" y="1631.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="945.1" y="1957" width="0.2" height="15.0" fill="rgb(238,202,48)" rx="2" ry="2" />
<text  x="948.06" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (45 samples, 0.76%)</title><rect x="932.5" y="1973" width="9.0" height="15.0" fill="rgb(215,182,47)" rx="2" ry="2" />
<text  x="935.55" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="392.4" y="1797" width="0.2" height="15.0" fill="rgb(226,14,37)" rx="2" ry="2" />
<text  x="395.41" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="878.1" y="1957" width="0.8" height="15.0" fill="rgb(238,45,35)" rx="2" ry="2" />
<text  x="881.11" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="386.4" y="1909" width="0.4" height="15.0" fill="rgb(208,225,40)" rx="2" ry="2" />
<text  x="389.45" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="233.7" y="1845" width="0.8" height="15.0" fill="rgb(213,23,40)" rx="2" ry="2" />
<text  x="236.68" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="892.4" y="1861" width="0.2" height="15.0" fill="rgb(248,63,8)" rx="2" ry="2" />
<text  x="895.42" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="616.1" y="1925" width="0.2" height="15.0" fill="rgb(221,67,52)" rx="2" ry="2" />
<text  x="619.09" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="34.2" y="2005" width="0.4" height="15.0" fill="rgb(249,77,5)" rx="2" ry="2" />
<text  x="37.24" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="22.9" y="1685" width="0.2" height="15.0" fill="rgb(223,72,48)" rx="2" ry="2" />
<text  x="25.91" y="1695.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="296.1" y="1637" width="0.2" height="15.0" fill="rgb(236,53,5)" rx="2" ry="2" />
<text  x="299.06" y="1647.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="485.2" y="1941" width="0.2" height="15.0" fill="rgb(243,72,21)" rx="2" ry="2" />
<text  x="488.18" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="115.7" y="37" width="0.4" height="15.0" fill="rgb(216,98,29)" rx="2" ry="2" />
<text  x="118.68" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="705.1" y="1989" width="0.2" height="15.0" fill="rgb(230,174,46)" rx="2" ry="2" />
<text  x="708.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.5" y="2021" width="0.2" height="15.0" fill="rgb(205,200,49)" rx="2" ry="2" />
<text  x="966.54" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="896.4" y="1909" width="0.4" height="15.0" fill="rgb(221,3,2)" rx="2" ry="2" />
<text  x="899.39" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="113.5" y="37" width="0.4" height="15.0" fill="rgb(238,138,26)" rx="2" ry="2" />
<text  x="116.50" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="516.0" y="1957" width="0.2" height="15.0" fill="rgb(241,193,29)" rx="2" ry="2" />
<text  x="518.97" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 0.05%)</title><rect x="123.4" y="1765" width="0.6" height="15.0" fill="rgb(220,220,4)" rx="2" ry="2" />
<text  x="126.43" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (1 samples, 0.02%)</title><rect x="68.6" y="1957" width="0.2" height="15.0" fill="rgb(222,156,29)" rx="2" ry="2" />
<text  x="71.60" y="1967.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (27 samples, 0.45%)</title><rect x="802.2" y="1669" width="5.4" height="15.0" fill="rgb(241,220,13)" rx="2" ry="2" />
<text  x="805.23" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="600.6" y="1797" width="0.2" height="15.0" fill="rgb(218,170,16)" rx="2" ry="2" />
<text  x="603.60" y="1807.5" ></text>
</g>
<g >
<title>security_sk_clone (1 samples, 0.02%)</title><rect x="412.7" y="1573" width="0.2" height="15.0" fill="rgb(237,220,16)" rx="2" ry="2" />
<text  x="415.67" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1031.7" y="1861" width="0.2" height="15.0" fill="rgb(254,100,11)" rx="2" ry="2" />
<text  x="1034.67" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="235.7" y="1941" width="0.2" height="15.0" fill="rgb(244,24,8)" rx="2" ry="2" />
<text  x="238.67" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="635.6" y="1893" width="0.2" height="15.0" fill="rgb(206,213,1)" rx="2" ry="2" />
<text  x="638.56" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (1 samples, 0.02%)</title><rect x="579.9" y="2021" width="0.2" height="15.0" fill="rgb(218,161,44)" rx="2" ry="2" />
<text  x="582.94" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (7 samples, 0.12%)</title><rect x="212.2" y="1941" width="1.4" height="15.0" fill="rgb(225,141,30)" rx="2" ry="2" />
<text  x="215.23" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (6 samples, 0.10%)</title><rect x="952.0" y="1973" width="1.2" height="15.0" fill="rgb(236,54,41)" rx="2" ry="2" />
<text  x="955.01" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.32%)</title><rect x="636.0" y="1941" width="3.7" height="15.0" fill="rgb(226,0,32)" rx="2" ry="2" />
<text  x="638.96" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="386.2" y="1909" width="0.2" height="15.0" fill="rgb(253,214,19)" rx="2" ry="2" />
<text  x="389.25" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="70.6" y="1637" width="0.2" height="15.0" fill="rgb(214,195,20)" rx="2" ry="2" />
<text  x="73.59" y="1647.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="347.3" y="1909" width="1.0" height="15.0" fill="rgb(221,198,14)" rx="2" ry="2" />
<text  x="350.31" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (45 samples, 0.76%)</title><rect x="932.5" y="1957" width="9.0" height="15.0" fill="rgb(210,73,50)" rx="2" ry="2" />
<text  x="935.55" y="1967.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="625.8" y="1909" width="0.2" height="15.0" fill="rgb(228,16,23)" rx="2" ry="2" />
<text  x="628.82" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="235.7" y="1813" width="0.2" height="15.0" fill="rgb(211,181,45)" rx="2" ry="2" />
<text  x="238.67" y="1823.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1175.3" y="1941" width="0.4" height="15.0" fill="rgb(229,99,18)" rx="2" ry="2" />
<text  x="1178.30" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (5 samples, 0.08%)</title><rect x="299.4" y="1589" width="1.0" height="15.0" fill="rgb(206,210,39)" rx="2" ry="2" />
<text  x="302.44" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="149.9" y="1877" width="0.2" height="15.0" fill="rgb(238,177,9)" rx="2" ry="2" />
<text  x="152.85" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="321.1" y="1669" width="0.2" height="15.0" fill="rgb(216,156,14)" rx="2" ry="2" />
<text  x="324.09" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="45.6" y="1941" width="1.0" height="15.0" fill="rgb(215,206,10)" rx="2" ry="2" />
<text  x="48.56" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (5 samples, 0.08%)</title><rect x="574.2" y="1973" width="1.0" height="15.0" fill="rgb(220,53,42)" rx="2" ry="2" />
<text  x="577.18" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (1 samples, 0.02%)</title><rect x="569.8" y="2005" width="0.2" height="15.0" fill="rgb(251,39,27)" rx="2" ry="2" />
<text  x="572.80" y="2015.5" ></text>
</g>
<g >
<title>folly::netops::close (601 samples, 10.12%)</title><rect x="715.0" y="1925" width="119.4" height="15.0" fill="rgb(244,30,7)" rx="2" ry="2" />
<text  x="718.02" y="1935.5" >folly::netops:..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="489.9" y="1957" width="0.2" height="15.0" fill="rgb(213,183,51)" rx="2" ry="2" />
<text  x="492.95" y="1967.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="471.3" y="1941" width="1.2" height="15.0" fill="rgb(223,203,16)" rx="2" ry="2" />
<text  x="474.27" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="412.7" y="1653" width="0.2" height="15.0" fill="rgb(217,93,43)" rx="2" ry="2" />
<text  x="415.67" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="923.4" y="1989" width="0.2" height="15.0" fill="rgb(220,166,25)" rx="2" ry="2" />
<text  x="926.41" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="571.8" y="1941" width="0.2" height="15.0" fill="rgb(233,63,23)" rx="2" ry="2" />
<text  x="574.79" y="1951.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (1 samples, 0.02%)</title><rect x="489.7" y="2005" width="0.2" height="15.0" fill="rgb(240,28,34)" rx="2" ry="2" />
<text  x="492.75" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (56 samples, 0.94%)</title><rect x="663.2" y="1909" width="11.1" height="15.0" fill="rgb(241,56,11)" rx="2" ry="2" />
<text  x="666.17" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="64.8" y="1925" width="0.2" height="15.0" fill="rgb(244,44,8)" rx="2" ry="2" />
<text  x="67.83" y="1935.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1059.9" y="1733" width="0.2" height="15.0" fill="rgb(240,60,12)" rx="2" ry="2" />
<text  x="1062.88" y="1743.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="960.6" y="1845" width="0.2" height="15.0" fill="rgb(231,179,12)" rx="2" ry="2" />
<text  x="963.56" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1031.7" y="1781" width="0.2" height="15.0" fill="rgb(216,136,6)" rx="2" ry="2" />
<text  x="1034.67" y="1791.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="177.9" y="1877" width="0.2" height="15.0" fill="rgb(217,148,3)" rx="2" ry="2" />
<text  x="180.86" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (43 samples, 0.72%)</title><rect x="1108.8" y="1653" width="8.5" height="15.0" fill="rgb(236,59,16)" rx="2" ry="2" />
<text  x="1111.75" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1102.8" y="1621" width="0.2" height="15.0" fill="rgb(211,146,32)" rx="2" ry="2" />
<text  x="1105.79" y="1631.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="1169.3" y="1957" width="0.2" height="15.0" fill="rgb(240,33,35)" rx="2" ry="2" />
<text  x="1172.34" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="816.5" y="1669" width="0.2" height="15.0" fill="rgb(227,1,26)" rx="2" ry="2" />
<text  x="819.53" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="326.9" y="1397" width="0.2" height="15.0" fill="rgb(242,111,51)" rx="2" ry="2" />
<text  x="329.85" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="906.1" y="1925" width="0.2" height="15.0" fill="rgb(226,59,41)" rx="2" ry="2" />
<text  x="909.12" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="296.3" y="1749" width="0.2" height="15.0" fill="rgb(237,163,10)" rx="2" ry="2" />
<text  x="299.26" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="148.9" y="1877" width="0.2" height="15.0" fill="rgb(205,204,41)" rx="2" ry="2" />
<text  x="151.86" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (5 samples, 0.08%)</title><rect x="38.8" y="1989" width="1.0" height="15.0" fill="rgb(225,129,52)" rx="2" ry="2" />
<text  x="41.80" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (2 samples, 0.03%)</title><rect x="317.1" y="1653" width="0.4" height="15.0" fill="rgb(246,102,21)" rx="2" ry="2" />
<text  x="320.12" y="1663.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (40 samples, 0.67%)</title><rect x="1004.5" y="2037" width="7.9" height="15.0" fill="rgb(209,41,50)" rx="2" ry="2" />
<text  x="1007.46" y="2047.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="783.0" y="1397" width="0.2" height="15.0" fill="rgb(245,176,51)" rx="2" ry="2" />
<text  x="785.96" y="1407.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (7 samples, 0.12%)</title><rect x="909.3" y="2037" width="1.4" height="15.0" fill="rgb(254,220,38)" rx="2" ry="2" />
<text  x="912.30" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1000.9" y="1957" width="0.2" height="15.0" fill="rgb(249,18,18)" rx="2" ry="2" />
<text  x="1003.88" y="1967.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::runOneFunction (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(231,81,8)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (4 samples, 0.07%)</title><rect x="86.3" y="1941" width="0.8" height="15.0" fill="rgb(230,2,15)" rx="2" ry="2" />
<text  x="89.28" y="1951.5" ></text>
</g>
<g >
<title>sock_rfree (16 samples, 0.27%)</title><rect x="1086.1" y="1877" width="3.2" height="15.0" fill="rgb(206,75,31)" rx="2" ry="2" />
<text  x="1089.10" y="1887.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="903.1" y="2005" width="0.2" height="15.0" fill="rgb(235,18,46)" rx="2" ry="2" />
<text  x="906.14" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="906.1" y="1941" width="0.4" height="15.0" fill="rgb(205,214,47)" rx="2" ry="2" />
<text  x="909.12" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="893.4" y="1957" width="0.2" height="15.0" fill="rgb(215,181,10)" rx="2" ry="2" />
<text  x="896.41" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="153.2" y="1893" width="1.2" height="15.0" fill="rgb(224,171,16)" rx="2" ry="2" />
<text  x="156.23" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="579.3" y="1989" width="0.2" height="15.0" fill="rgb(237,195,48)" rx="2" ry="2" />
<text  x="582.34" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="636.9" y="1909" width="0.2" height="15.0" fill="rgb(238,131,43)" rx="2" ry="2" />
<text  x="639.95" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="223.9" y="1829" width="0.4" height="15.0" fill="rgb(206,53,13)" rx="2" ry="2" />
<text  x="226.95" y="1839.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="417.2" y="1733" width="0.2" height="15.0" fill="rgb(222,90,27)" rx="2" ry="2" />
<text  x="420.24" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="575.4" y="2005" width="1.2" height="15.0" fill="rgb(247,52,47)" rx="2" ry="2" />
<text  x="578.37" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="849.5" y="1861" width="0.2" height="15.0" fill="rgb(224,156,40)" rx="2" ry="2" />
<text  x="852.51" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="333.6" y="1733" width="0.6" height="15.0" fill="rgb(251,135,24)" rx="2" ry="2" />
<text  x="336.61" y="1743.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="1127.2" y="1989" width="0.4" height="15.0" fill="rgb(242,63,0)" rx="2" ry="2" />
<text  x="1130.23" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="194.7" y="2021" width="0.2" height="15.0" fill="rgb(252,227,38)" rx="2" ry="2" />
<text  x="197.75" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="356.5" y="1909" width="0.1" height="15.0" fill="rgb(243,9,31)" rx="2" ry="2" />
<text  x="359.45" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.38%)</title><rect x="105.2" y="1429" width="16.2" height="15.0" fill="rgb(246,207,19)" rx="2" ry="2" />
<text  x="108.15" y="1439.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="73.0" y="1941" width="0.2" height="15.0" fill="rgb(211,201,37)" rx="2" ry="2" />
<text  x="75.97" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="534.2" y="1925" width="0.2" height="15.0" fill="rgb(238,192,19)" rx="2" ry="2" />
<text  x="537.25" y="1935.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (5 samples, 0.08%)</title><rect x="748.0" y="1717" width="1.0" height="15.0" fill="rgb(221,106,35)" rx="2" ry="2" />
<text  x="751.00" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="145.5" y="1925" width="0.2" height="15.0" fill="rgb(252,226,3)" rx="2" ry="2" />
<text  x="148.48" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5 samples, 0.08%)</title><rect x="613.9" y="1861" width="1.0" height="15.0" fill="rgb(244,33,0)" rx="2" ry="2" />
<text  x="616.91" y="1871.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="842.0" y="1893" width="0.6" height="15.0" fill="rgb(207,139,26)" rx="2" ry="2" />
<text  x="844.96" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="340.4" y="1861" width="0.4" height="15.0" fill="rgb(253,178,5)" rx="2" ry="2" />
<text  x="343.36" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (1 samples, 0.02%)</title><rect x="568.2" y="2005" width="0.2" height="15.0" fill="rgb(226,73,36)" rx="2" ry="2" />
<text  x="571.22" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="333.8" y="1541" width="0.4" height="15.0" fill="rgb(228,176,30)" rx="2" ry="2" />
<text  x="336.80" y="1551.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="857.1" y="1893" width="0.2" height="15.0" fill="rgb(205,32,50)" rx="2" ry="2" />
<text  x="860.06" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (7 samples, 0.12%)</title><rect x="705.9" y="1925" width="1.4" height="15.0" fill="rgb(240,208,16)" rx="2" ry="2" />
<text  x="708.88" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1125.4" y="1701" width="0.2" height="15.0" fill="rgb(219,75,45)" rx="2" ry="2" />
<text  x="1128.44" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="116.5" y="37" width="0.2" height="15.0" fill="rgb(212,129,4)" rx="2" ry="2" />
<text  x="119.48" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="892.4" y="1637" width="0.2" height="15.0" fill="rgb(244,162,26)" rx="2" ry="2" />
<text  x="895.42" y="1647.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="283.1" y="1765" width="0.2" height="15.0" fill="rgb(248,132,38)" rx="2" ry="2" />
<text  x="286.15" y="1775.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="518.9" y="1941" width="0.4" height="15.0" fill="rgb(243,39,33)" rx="2" ry="2" />
<text  x="521.95" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="441.5" y="1749" width="0.2" height="15.0" fill="rgb(233,46,5)" rx="2" ry="2" />
<text  x="444.47" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="222.6" y="1685" width="0.2" height="15.0" fill="rgb(233,25,53)" rx="2" ry="2" />
<text  x="225.56" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="143.3" y="1941" width="0.2" height="15.0" fill="rgb(247,144,26)" rx="2" ry="2" />
<text  x="146.30" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="466.5" y="1893" width="0.6" height="15.0" fill="rgb(233,22,26)" rx="2" ry="2" />
<text  x="469.51" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (2 samples, 0.03%)</title><rect x="980.0" y="2037" width="0.4" height="15.0" fill="rgb(252,61,30)" rx="2" ry="2" />
<text  x="983.02" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="556.7" y="1813" width="0.2" height="15.0" fill="rgb(240,107,13)" rx="2" ry="2" />
<text  x="559.69" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="830.8" y="1877" width="0.2" height="15.0" fill="rgb(221,192,19)" rx="2" ry="2" />
<text  x="833.84" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_accept (3 samples, 0.05%)</title><rect x="391.0" y="1957" width="0.6" height="15.0" fill="rgb(210,114,15)" rx="2" ry="2" />
<text  x="394.02" y="1967.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (2 samples, 0.03%)</title><rect x="87.1" y="1957" width="0.4" height="15.0" fill="rgb(236,152,8)" rx="2" ry="2" />
<text  x="90.08" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1149.1" y="1941" width="0.2" height="15.0" fill="rgb(214,211,23)" rx="2" ry="2" />
<text  x="1152.08" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="281.8" y="1861" width="0.2" height="15.0" fill="rgb(239,59,25)" rx="2" ry="2" />
<text  x="284.76" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="138.1" y="1989" width="0.2" height="15.0" fill="rgb(236,25,43)" rx="2" ry="2" />
<text  x="141.13" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="208.1" y="1909" width="0.2" height="15.0" fill="rgb(233,9,53)" rx="2" ry="2" />
<text  x="211.06" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="887.8" y="1733" width="0.2" height="15.0" fill="rgb(244,116,44)" rx="2" ry="2" />
<text  x="890.85" y="1743.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.17%)</title><rect x="12.6" y="1973" width="2.0" height="15.0" fill="rgb(220,53,27)" rx="2" ry="2" />
<text  x="15.58" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (30 samples, 0.51%)</title><rect x="131.8" y="1989" width="5.9" height="15.0" fill="rgb(246,194,33)" rx="2" ry="2" />
<text  x="134.77" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (35 samples, 0.59%)</title><rect x="545.8" y="2005" width="6.9" height="15.0" fill="rgb(226,184,16)" rx="2" ry="2" />
<text  x="548.77" y="2015.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="604.8" y="1861" width="0.2" height="15.0" fill="rgb(230,214,53)" rx="2" ry="2" />
<text  x="607.77" y="1871.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.2" y="1893" width="0.2" height="15.0" fill="rgb(206,222,41)" rx="2" ry="2" />
<text  x="107.16" y="1903.5" ></text>
</g>
<g >
<title>ksize (6 samples, 0.10%)</title><rect x="756.5" y="1701" width="1.2" height="15.0" fill="rgb(235,180,41)" rx="2" ry="2" />
<text  x="759.54" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29 samples, 0.49%)</title><rect x="1171.3" y="2005" width="5.8" height="15.0" fill="rgb(218,195,19)" rx="2" ry="2" />
<text  x="1174.33" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1189" width="14.7" height="15.0" fill="rgb(205,202,29)" rx="2" ry="2" />
<text  x="108.35" y="1199.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.3" y="37" width="0.2" height="15.0" fill="rgb(243,87,31)" rx="2" ry="2" />
<text  x="121.27" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="691.2" y="1765" width="0.2" height="15.0" fill="rgb(227,226,18)" rx="2" ry="2" />
<text  x="694.18" y="1775.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1183.6" y="2021" width="0.2" height="15.0" fill="rgb(233,0,17)" rx="2" ry="2" />
<text  x="1186.64" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.2" y="1397" width="0.2" height="15.0" fill="rgb(243,56,27)" rx="2" ry="2" />
<text  x="124.25" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.7" y="1893" width="0.2" height="15.0" fill="rgb(254,201,6)" rx="2" ry="2" />
<text  x="148.68" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="373.9" y="1941" width="0.2" height="15.0" fill="rgb(243,192,4)" rx="2" ry="2" />
<text  x="376.93" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (4 samples, 0.07%)</title><rect x="836.0" y="1909" width="0.8" height="15.0" fill="rgb(246,167,31)" rx="2" ry="2" />
<text  x="839.00" y="1919.5" ></text>
</g>
<g >
<title>__destroy_inode (7 samples, 0.12%)</title><rect x="733.1" y="1685" width="1.4" height="15.0" fill="rgb(226,21,52)" rx="2" ry="2" />
<text  x="736.10" y="1695.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="757.5" y="1365" width="0.2" height="15.0" fill="rgb(216,129,53)" rx="2" ry="2" />
<text  x="760.53" y="1375.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="182.4" y="1941" width="0.2" height="15.0" fill="rgb(253,19,40)" rx="2" ry="2" />
<text  x="185.43" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="531.1" y="1957" width="0.8" height="15.0" fill="rgb(217,207,13)" rx="2" ry="2" />
<text  x="534.07" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="640.3" y="1957" width="0.4" height="15.0" fill="rgb(243,22,44)" rx="2" ry="2" />
<text  x="643.33" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="702.5" y="1941" width="0.2" height="15.0" fill="rgb(242,167,10)" rx="2" ry="2" />
<text  x="705.51" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (28 samples, 0.47%)</title><rect x="490.5" y="2021" width="5.6" height="15.0" fill="rgb(249,176,13)" rx="2" ry="2" />
<text  x="493.54" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="523.5" y="1909" width="0.2" height="15.0" fill="rgb(221,210,44)" rx="2" ry="2" />
<text  x="526.52" y="1919.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="740.1" y="1717" width="0.1" height="15.0" fill="rgb(242,140,53)" rx="2" ry="2" />
<text  x="743.05" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="417.2" y="1701" width="0.2" height="15.0" fill="rgb(239,106,37)" rx="2" ry="2" />
<text  x="420.24" y="1711.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (14 samples, 0.24%)</title><rect x="688.6" y="1925" width="2.8" height="15.0" fill="rgb(209,221,34)" rx="2" ry="2" />
<text  x="691.60" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="585.9" y="1909" width="0.2" height="15.0" fill="rgb(247,28,37)" rx="2" ry="2" />
<text  x="588.90" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="742.2" y="1781" width="1.4" height="15.0" fill="rgb(205,115,43)" rx="2" ry="2" />
<text  x="745.24" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="291.1" y="1717" width="0.2" height="15.0" fill="rgb(247,194,12)" rx="2" ry="2" />
<text  x="294.09" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="22.9" y="1733" width="0.2" height="15.0" fill="rgb(235,119,9)" rx="2" ry="2" />
<text  x="25.91" y="1743.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="22.9" y="1653" width="0.2" height="15.0" fill="rgb(245,172,8)" rx="2" ry="2" />
<text  x="25.91" y="1663.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="459.8" y="1973" width="0.3" height="15.0" fill="rgb(206,128,19)" rx="2" ry="2" />
<text  x="462.75" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="555.7" y="1957" width="0.2" height="15.0" fill="rgb(238,24,13)" rx="2" ry="2" />
<text  x="558.70" y="1967.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="1128.2" y="1941" width="0.2" height="15.0" fill="rgb(247,118,30)" rx="2" ry="2" />
<text  x="1131.22" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="321.3" y="1637" width="0.2" height="15.0" fill="rgb(224,72,52)" rx="2" ry="2" />
<text  x="324.29" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.59%)</title><rect x="1154.8" y="1957" width="7.0" height="15.0" fill="rgb(238,31,36)" rx="2" ry="2" />
<text  x="1157.84" y="1967.5" ></text>
</g>
<g >
<title>__slab_free (11 samples, 0.19%)</title><rect x="475.8" y="1925" width="2.2" height="15.0" fill="rgb(240,140,43)" rx="2" ry="2" />
<text  x="478.84" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="907.9" y="2005" width="0.6" height="15.0" fill="rgb(222,150,2)" rx="2" ry="2" />
<text  x="910.91" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.13%)</title><rect x="335.2" y="1733" width="1.6" height="15.0" fill="rgb(214,177,20)" rx="2" ry="2" />
<text  x="338.20" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="901.6" y="1925" width="0.2" height="15.0" fill="rgb(209,151,51)" rx="2" ry="2" />
<text  x="904.56" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="441.5" y="1765" width="0.2" height="15.0" fill="rgb(248,8,31)" rx="2" ry="2" />
<text  x="444.47" y="1775.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="1125.4" y="1621" width="0.2" height="15.0" fill="rgb(216,15,19)" rx="2" ry="2" />
<text  x="1128.44" y="1631.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="824.9" y="1765" width="0.2" height="15.0" fill="rgb(245,85,13)" rx="2" ry="2" />
<text  x="827.88" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="824.7" y="1845" width="0.6" height="15.0" fill="rgb(242,4,29)" rx="2" ry="2" />
<text  x="827.68" y="1855.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.10%)</title><rect x="207.1" y="2005" width="1.2" height="15.0" fill="rgb(216,135,45)" rx="2" ry="2" />
<text  x="210.06" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="513.2" y="1845" width="0.2" height="15.0" fill="rgb(250,30,28)" rx="2" ry="2" />
<text  x="516.19" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="51.1" y="1861" width="0.2" height="15.0" fill="rgb(206,29,41)" rx="2" ry="2" />
<text  x="54.12" y="1871.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="229.1" y="1797" width="0.2" height="15.0" fill="rgb(250,68,41)" rx="2" ry="2" />
<text  x="232.11" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="198.3" y="2005" width="0.2" height="15.0" fill="rgb(245,82,5)" rx="2" ry="2" />
<text  x="201.32" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="70.4" y="1861" width="0.6" height="15.0" fill="rgb(252,176,26)" rx="2" ry="2" />
<text  x="73.39" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="783.2" y="1509" width="0.2" height="15.0" fill="rgb(212,35,48)" rx="2" ry="2" />
<text  x="786.16" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="74.4" y="1845" width="0.2" height="15.0" fill="rgb(234,132,38)" rx="2" ry="2" />
<text  x="77.36" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1019.6" y="1941" width="0.2" height="15.0" fill="rgb(222,163,13)" rx="2" ry="2" />
<text  x="1022.56" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="73.4" y="1925" width="0.2" height="15.0" fill="rgb(250,205,33)" rx="2" ry="2" />
<text  x="76.37" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="600.6" y="1893" width="0.2" height="15.0" fill="rgb(252,42,17)" rx="2" ry="2" />
<text  x="603.60" y="1903.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="311.4" y="1621" width="0.2" height="15.0" fill="rgb(225,79,23)" rx="2" ry="2" />
<text  x="314.36" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="845.1" y="1797" width="0.2" height="15.0" fill="rgb(217,69,2)" rx="2" ry="2" />
<text  x="848.14" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="992.5" y="1957" width="1.8" height="15.0" fill="rgb(225,188,28)" rx="2" ry="2" />
<text  x="995.54" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="278.2" y="1717" width="0.2" height="15.0" fill="rgb(219,111,9)" rx="2" ry="2" />
<text  x="281.18" y="1727.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (3 samples, 0.05%)</title><rect x="1161.2" y="1909" width="0.6" height="15.0" fill="rgb(222,165,16)" rx="2" ry="2" />
<text  x="1164.20" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getAncillaryDataSize (1 samples, 0.02%)</title><rect x="883.3" y="1941" width="0.2" height="15.0" fill="rgb(253,20,39)" rx="2" ry="2" />
<text  x="886.28" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="373.7" y="1765" width="0.2" height="15.0" fill="rgb(253,7,42)" rx="2" ry="2" />
<text  x="376.73" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="163.2" y="1717" width="0.2" height="15.0" fill="rgb(235,89,10)" rx="2" ry="2" />
<text  x="166.16" y="1727.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="281.8" y="1765" width="0.2" height="15.0" fill="rgb(245,133,43)" rx="2" ry="2" />
<text  x="284.76" y="1775.5" ></text>
</g>
<g >
<title>tcp_setsockopt (13 samples, 0.22%)</title><rect x="688.8" y="1909" width="2.6" height="15.0" fill="rgb(238,153,3)" rx="2" ry="2" />
<text  x="691.80" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="644.9" y="2005" width="0.2" height="15.0" fill="rgb(208,120,45)" rx="2" ry="2" />
<text  x="647.90" y="2015.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="615.9" y="1925" width="0.2" height="15.0" fill="rgb(223,94,24)" rx="2" ry="2" />
<text  x="618.89" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="96.6" y="2021" width="0.4" height="15.0" fill="rgb(242,225,4)" rx="2" ry="2" />
<text  x="99.61" y="2031.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="819.9" y="1685" width="0.2" height="15.0" fill="rgb(207,111,32)" rx="2" ry="2" />
<text  x="822.91" y="1695.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (2 samples, 0.03%)</title><rect x="569.2" y="1989" width="0.4" height="15.0" fill="rgb(208,89,47)" rx="2" ry="2" />
<text  x="572.21" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="51.1" y="1797" width="0.2" height="15.0" fill="rgb(252,13,12)" rx="2" ry="2" />
<text  x="54.12" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="892.4" y="1813" width="0.2" height="15.0" fill="rgb(228,199,42)" rx="2" ry="2" />
<text  x="895.42" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="489.2" y="1861" width="0.2" height="15.0" fill="rgb(249,167,44)" rx="2" ry="2" />
<text  x="492.15" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="825.1" y="1669" width="0.2" height="15.0" fill="rgb(207,203,26)" rx="2" ry="2" />
<text  x="828.07" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (8 samples, 0.13%)</title><rect x="577.9" y="2005" width="1.6" height="15.0" fill="rgb(223,190,46)" rx="2" ry="2" />
<text  x="580.95" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="388.0" y="1781" width="0.2" height="15.0" fill="rgb(206,55,31)" rx="2" ry="2" />
<text  x="391.04" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (63 samples, 1.06%)</title><rect x="1152.5" y="1989" width="12.5" height="15.0" fill="rgb(220,192,40)" rx="2" ry="2" />
<text  x="1155.45" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (11 samples, 0.19%)</title><rect x="80.3" y="1957" width="2.2" height="15.0" fill="rgb(247,222,14)" rx="2" ry="2" />
<text  x="83.32" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (9 samples, 0.15%)</title><rect x="10.6" y="1845" width="1.8" height="15.0" fill="rgb(227,122,36)" rx="2" ry="2" />
<text  x="13.60" y="1855.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="300.0" y="1333" width="0.2" height="15.0" fill="rgb(232,170,6)" rx="2" ry="2" />
<text  x="303.03" y="1343.5" ></text>
</g>
<g >
<title>skb_free_head (19 samples, 0.32%)</title><rect x="1079.5" y="1877" width="3.8" height="15.0" fill="rgb(209,34,26)" rx="2" ry="2" />
<text  x="1082.55" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="484.0" y="1909" width="0.2" height="15.0" fill="rgb(219,113,16)" rx="2" ry="2" />
<text  x="486.99" y="1919.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 0.15%)</title><rect x="10.6" y="1957" width="1.8" height="15.0" fill="rgb(219,96,44)" rx="2" ry="2" />
<text  x="13.60" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="119.1" y="69" width="0.2" height="15.0" fill="rgb(226,115,1)" rx="2" ry="2" />
<text  x="122.06" y="79.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1082.9" y="1749" width="0.2" height="15.0" fill="rgb(244,177,25)" rx="2" ry="2" />
<text  x="1085.93" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (3 samples, 0.05%)</title><rect x="106.1" y="37" width="0.6" height="15.0" fill="rgb(225,120,12)" rx="2" ry="2" />
<text  x="109.15" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1039.0" y="2021" width="0.2" height="15.0" fill="rgb(246,97,31)" rx="2" ry="2" />
<text  x="1042.02" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="483.0" y="1909" width="0.2" height="15.0" fill="rgb(243,208,6)" rx="2" ry="2" />
<text  x="485.99" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="159.6" y="1701" width="0.2" height="15.0" fill="rgb(245,192,2)" rx="2" ry="2" />
<text  x="162.59" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="279.8" y="1765" width="0.2" height="15.0" fill="rgb(209,48,23)" rx="2" ry="2" />
<text  x="282.77" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1063.1" y="1957" width="0.2" height="15.0" fill="rgb(238,167,48)" rx="2" ry="2" />
<text  x="1066.06" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="849.1" y="1893" width="0.6" height="15.0" fill="rgb(218,216,38)" rx="2" ry="2" />
<text  x="852.11" y="1903.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="698.9" y="1957" width="0.2" height="15.0" fill="rgb(217,171,20)" rx="2" ry="2" />
<text  x="701.93" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="127.6" y="1973" width="0.2" height="15.0" fill="rgb(237,37,2)" rx="2" ry="2" />
<text  x="130.60" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.2" y="1765" width="0.2" height="15.0" fill="rgb(235,55,21)" rx="2" ry="2" />
<text  x="281.18" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (98 samples, 1.65%)</title><rect x="496.7" y="2005" width="19.5" height="15.0" fill="rgb(219,27,35)" rx="2" ry="2" />
<text  x="499.70" y="2015.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (4 samples, 0.07%)</title><rect x="237.7" y="2037" width="0.8" height="15.0" fill="rgb(236,166,7)" rx="2" ry="2" />
<text  x="240.66" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.0" y="1877" width="0.2" height="15.0" fill="rgb(252,11,21)" rx="2" ry="2" />
<text  x="128.02" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="514.8" y="1589" width="0.2" height="15.0" fill="rgb(236,156,0)" rx="2" ry="2" />
<text  x="517.78" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="571.0" y="1749" width="0.2" height="15.0" fill="rgb(249,229,31)" rx="2" ry="2" />
<text  x="574.00" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="574.2" y="1941" width="0.2" height="15.0" fill="rgb(219,29,3)" rx="2" ry="2" />
<text  x="577.18" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="536.2" y="1893" width="0.2" height="15.0" fill="rgb(222,164,51)" rx="2" ry="2" />
<text  x="539.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="853" width="14.3" height="15.0" fill="rgb(215,136,23)" rx="2" ry="2" />
<text  x="108.75" y="863.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="501" width="13.5" height="15.0" fill="rgb(231,8,2)" rx="2" ry="2" />
<text  x="108.75" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1032.7" y="2037" width="0.2" height="15.0" fill="rgb(219,39,27)" rx="2" ry="2" />
<text  x="1035.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="578.3" y="1973" width="0.2" height="15.0" fill="rgb(227,91,34)" rx="2" ry="2" />
<text  x="581.35" y="1983.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="317.3" y="1541" width="0.2" height="15.0" fill="rgb(248,98,43)" rx="2" ry="2" />
<text  x="320.32" y="1551.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="857.1" y="1909" width="0.2" height="15.0" fill="rgb(231,88,46)" rx="2" ry="2" />
<text  x="860.06" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="571.8" y="1813" width="0.2" height="15.0" fill="rgb(246,77,37)" rx="2" ry="2" />
<text  x="574.79" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="1148.7" y="1925" width="0.2" height="15.0" fill="rgb(208,23,6)" rx="2" ry="2" />
<text  x="1151.68" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="751.0" y="1701" width="0.2" height="15.0" fill="rgb(223,77,48)" rx="2" ry="2" />
<text  x="753.98" y="1711.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="553.9" y="1957" width="0.4" height="15.0" fill="rgb(243,57,37)" rx="2" ry="2" />
<text  x="556.91" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="208.1" y="1957" width="0.2" height="15.0" fill="rgb(222,200,18)" rx="2" ry="2" />
<text  x="211.06" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="672.5" y="1605" width="0.2" height="15.0" fill="rgb(233,115,10)" rx="2" ry="2" />
<text  x="675.51" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1033.5" y="1829" width="0.2" height="15.0" fill="rgb(236,144,48)" rx="2" ry="2" />
<text  x="1036.46" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="556.7" y="1893" width="0.2" height="15.0" fill="rgb(211,196,35)" rx="2" ry="2" />
<text  x="559.69" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="74.4" y="1909" width="0.2" height="15.0" fill="rgb(221,25,3)" rx="2" ry="2" />
<text  x="77.36" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="173.3" y="1941" width="0.4" height="15.0" fill="rgb(253,151,32)" rx="2" ry="2" />
<text  x="176.29" y="1951.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2 samples, 0.03%)</title><rect x="889.8" y="1941" width="0.4" height="15.0" fill="rgb(251,179,27)" rx="2" ry="2" />
<text  x="892.84" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="150.8" y="1893" width="0.2" height="15.0" fill="rgb(248,19,19)" rx="2" ry="2" />
<text  x="153.85" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1033.5" y="1781" width="0.2" height="15.0" fill="rgb(250,227,42)" rx="2" ry="2" />
<text  x="1036.46" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="483.0" y="1797" width="0.2" height="15.0" fill="rgb(217,208,10)" rx="2" ry="2" />
<text  x="485.99" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="253.0" y="1909" width="0.5" height="15.0" fill="rgb(230,92,9)" rx="2" ry="2" />
<text  x="255.95" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="635.6" y="1701" width="0.2" height="15.0" fill="rgb(206,40,50)" rx="2" ry="2" />
<text  x="638.56" y="1711.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="519.7" y="1989" width="0.6" height="15.0" fill="rgb(219,227,47)" rx="2" ry="2" />
<text  x="522.74" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1063.3" y="1957" width="0.4" height="15.0" fill="rgb(221,210,39)" rx="2" ry="2" />
<text  x="1066.26" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="412.7" y="1637" width="0.2" height="15.0" fill="rgb(212,196,29)" rx="2" ry="2" />
<text  x="415.67" y="1647.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="392.0" y="1957" width="0.4" height="15.0" fill="rgb(228,214,51)" rx="2" ry="2" />
<text  x="395.01" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="899.0" y="1989" width="0.2" height="15.0" fill="rgb(224,170,30)" rx="2" ry="2" />
<text  x="901.97" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="175.7" y="1973" width="0.2" height="15.0" fill="rgb(239,40,2)" rx="2" ry="2" />
<text  x="178.68" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="281.6" y="1749" width="0.2" height="15.0" fill="rgb(211,61,16)" rx="2" ry="2" />
<text  x="284.56" y="1759.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="181.0" y="1957" width="0.2" height="15.0" fill="rgb(226,27,51)" rx="2" ry="2" />
<text  x="184.04" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="72.0" y="1813" width="0.2" height="15.0" fill="rgb(206,37,37)" rx="2" ry="2" />
<text  x="74.98" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1004.7" y="1861" width="0.2" height="15.0" fill="rgb(222,204,26)" rx="2" ry="2" />
<text  x="1007.66" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="65.4" y="1973" width="0.4" height="15.0" fill="rgb(207,119,8)" rx="2" ry="2" />
<text  x="68.42" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="530.5" y="1989" width="1.4" height="15.0" fill="rgb(230,149,47)" rx="2" ry="2" />
<text  x="533.47" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="228.1" y="1877" width="0.4" height="15.0" fill="rgb(232,128,11)" rx="2" ry="2" />
<text  x="231.12" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="773.2" y="1509" width="0.4" height="15.0" fill="rgb(254,211,17)" rx="2" ry="2" />
<text  x="776.23" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="1152.9" y="1973" width="0.2" height="15.0" fill="rgb(216,17,7)" rx="2" ry="2" />
<text  x="1155.85" y="1983.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1064.3" y="1941" width="0.2" height="15.0" fill="rgb(251,71,37)" rx="2" ry="2" />
<text  x="1067.25" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="513.4" y="1733" width="0.2" height="15.0" fill="rgb(240,13,8)" rx="2" ry="2" />
<text  x="516.39" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="1034.3" y="1973" width="0.2" height="15.0" fill="rgb(215,120,40)" rx="2" ry="2" />
<text  x="1037.26" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="356.5" y="1973" width="0.1" height="15.0" fill="rgb(230,66,53)" rx="2" ry="2" />
<text  x="359.45" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (1 samples, 0.02%)</title><rect x="95.8" y="2005" width="0.2" height="15.0" fill="rgb(240,28,30)" rx="2" ry="2" />
<text  x="98.82" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="183.8" y="1973" width="1.2" height="15.0" fill="rgb(229,155,1)" rx="2" ry="2" />
<text  x="186.82" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="349.1" y="1829" width="0.4" height="15.0" fill="rgb(253,190,19)" rx="2" ry="2" />
<text  x="352.10" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="930.4" y="1909" width="0.4" height="15.0" fill="rgb(205,177,42)" rx="2" ry="2" />
<text  x="933.36" y="1919.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="1031.3" y="2037" width="0.6" height="15.0" fill="rgb(254,146,23)" rx="2" ry="2" />
<text  x="1034.28" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="931.0" y="1893" width="0.2" height="15.0" fill="rgb(245,68,46)" rx="2" ry="2" />
<text  x="933.96" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="671.9" y="1845" width="0.2" height="15.0" fill="rgb(205,81,28)" rx="2" ry="2" />
<text  x="674.91" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="497.7" y="1717" width="0.2" height="15.0" fill="rgb(242,159,40)" rx="2" ry="2" />
<text  x="500.69" y="1727.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="917.6" y="1989" width="0.2" height="15.0" fill="rgb(227,98,8)" rx="2" ry="2" />
<text  x="920.65" y="1999.5" ></text>
</g>
<g >
<title>sock_close (400 samples, 6.73%)</title><rect x="743.6" y="1797" width="79.5" height="15.0" fill="rgb(252,41,51)" rx="2" ry="2" />
<text  x="746.63" y="1807.5" >sock_close</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="545.6" y="1893" width="0.2" height="15.0" fill="rgb(211,216,18)" rx="2" ry="2" />
<text  x="548.57" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="417.0" y="1829" width="0.4" height="15.0" fill="rgb(250,38,46)" rx="2" ry="2" />
<text  x="420.04" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="22.9" y="1637" width="0.2" height="15.0" fill="rgb(205,77,30)" rx="2" ry="2" />
<text  x="25.91" y="1647.5" ></text>
</g>
<g >
<title>__close_fd (26 samples, 0.44%)</title><rect x="825.5" y="1845" width="5.1" height="15.0" fill="rgb(231,27,34)" rx="2" ry="2" />
<text  x="828.47" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (5 samples, 0.08%)</title><rect x="887.5" y="1893" width="0.9" height="15.0" fill="rgb(221,215,28)" rx="2" ry="2" />
<text  x="890.45" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (14 samples, 0.24%)</title><rect x="937.1" y="1893" width="2.8" height="15.0" fill="rgb(250,198,50)" rx="2" ry="2" />
<text  x="940.11" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (4 samples, 0.07%)</title><rect x="1011.0" y="2005" width="0.8" height="15.0" fill="rgb(239,200,2)" rx="2" ry="2" />
<text  x="1014.01" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="921.6" y="2021" width="1.2" height="15.0" fill="rgb(214,72,50)" rx="2" ry="2" />
<text  x="924.62" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="621.1" y="2005" width="0.2" height="15.0" fill="rgb(208,10,46)" rx="2" ry="2" />
<text  x="624.06" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="865.6" y="1925" width="0.2" height="15.0" fill="rgb(249,106,29)" rx="2" ry="2" />
<text  x="868.60" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="672.7" y="1861" width="1.2" height="15.0" fill="rgb(220,40,24)" rx="2" ry="2" />
<text  x="675.71" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="172.1" y="1989" width="0.2" height="15.0" fill="rgb(247,169,7)" rx="2" ry="2" />
<text  x="175.10" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="281.2" y="1781" width="0.2" height="15.0" fill="rgb(230,22,38)" rx="2" ry="2" />
<text  x="284.16" y="1791.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="1059.7" y="1701" width="0.2" height="15.0" fill="rgb(219,9,36)" rx="2" ry="2" />
<text  x="1062.68" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="281.2" y="1653" width="0.2" height="15.0" fill="rgb(239,23,14)" rx="2" ry="2" />
<text  x="284.16" y="1663.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="1121.1" y="1909" width="0.4" height="15.0" fill="rgb(236,64,43)" rx="2" ry="2" />
<text  x="1124.07" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="73.0" y="1685" width="0.2" height="15.0" fill="rgb(231,121,13)" rx="2" ry="2" />
<text  x="75.97" y="1695.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="252.0" y="1909" width="0.8" height="15.0" fill="rgb(238,51,35)" rx="2" ry="2" />
<text  x="254.96" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="497.7" y="1797" width="0.2" height="15.0" fill="rgb(218,6,30)" rx="2" ry="2" />
<text  x="500.69" y="1807.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (11 samples, 0.19%)</title><rect x="1119.3" y="1957" width="2.2" height="15.0" fill="rgb(205,163,13)" rx="2" ry="2" />
<text  x="1122.28" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="565.0" y="1765" width="0.2" height="15.0" fill="rgb(241,81,0)" rx="2" ry="2" />
<text  x="568.04" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="55.3" y="1877" width="0.2" height="15.0" fill="rgb(250,193,50)" rx="2" ry="2" />
<text  x="58.29" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="604.8" y="1925" width="0.2" height="15.0" fill="rgb(224,154,18)" rx="2" ry="2" />
<text  x="607.77" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="54.9" y="1909" width="0.6" height="15.0" fill="rgb(235,182,45)" rx="2" ry="2" />
<text  x="57.90" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.8" y="1861" width="0.2" height="15.0" fill="rgb(213,154,20)" rx="2" ry="2" />
<text  x="160.80" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="748.8" y="1669" width="0.2" height="15.0" fill="rgb(226,188,23)" rx="2" ry="2" />
<text  x="751.79" y="1679.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="887.8" y="1525" width="0.2" height="15.0" fill="rgb(214,192,1)" rx="2" ry="2" />
<text  x="890.85" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1102.8" y="1845" width="0.2" height="15.0" fill="rgb(244,36,0)" rx="2" ry="2" />
<text  x="1105.79" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="51.1" y="1781" width="0.2" height="15.0" fill="rgb(208,65,10)" rx="2" ry="2" />
<text  x="54.12" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (4 samples, 0.07%)</title><rect x="621.7" y="2037" width="0.7" height="15.0" fill="rgb(228,90,50)" rx="2" ry="2" />
<text  x="624.65" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="556.7" y="1829" width="0.2" height="15.0" fill="rgb(213,193,40)" rx="2" ry="2" />
<text  x="559.69" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="525.1" y="1973" width="0.4" height="15.0" fill="rgb(223,33,51)" rx="2" ry="2" />
<text  x="528.11" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="661.6" y="1893" width="0.2" height="15.0" fill="rgb(214,155,11)" rx="2" ry="2" />
<text  x="664.58" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="116.7" y="69" width="0.2" height="15.0" fill="rgb(215,7,11)" rx="2" ry="2" />
<text  x="119.68" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (63 samples, 1.06%)</title><rect x="1152.5" y="2053" width="12.5" height="15.0" fill="rgb(232,83,42)" rx="2" ry="2" />
<text  x="1155.45" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="49.5" y="1941" width="0.2" height="15.0" fill="rgb(240,53,8)" rx="2" ry="2" />
<text  x="52.53" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="100.8" y="1989" width="0.2" height="15.0" fill="rgb(241,1,31)" rx="2" ry="2" />
<text  x="103.78" y="1999.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="483.0" y="1621" width="0.2" height="15.0" fill="rgb(243,63,0)" rx="2" ry="2" />
<text  x="485.99" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="543.0" y="1957" width="0.2" height="15.0" fill="rgb(252,224,31)" rx="2" ry="2" />
<text  x="545.99" y="1967.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (10 samples, 0.17%)</title><rect x="12.6" y="1957" width="2.0" height="15.0" fill="rgb(217,180,53)" rx="2" ry="2" />
<text  x="15.58" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="388.0" y="1797" width="0.2" height="15.0" fill="rgb(214,84,24)" rx="2" ry="2" />
<text  x="391.04" y="1807.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="569.6" y="1749" width="0.2" height="15.0" fill="rgb(247,80,19)" rx="2" ry="2" />
<text  x="572.61" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="355.3" y="2037" width="0.2" height="15.0" fill="rgb(220,36,26)" rx="2" ry="2" />
<text  x="358.26" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (7 samples, 0.12%)</title><rect x="1127.8" y="1973" width="1.4" height="15.0" fill="rgb(215,64,16)" rx="2" ry="2" />
<text  x="1130.82" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="281.8" y="1813" width="0.2" height="15.0" fill="rgb(238,25,43)" rx="2" ry="2" />
<text  x="284.76" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="166.1" y="2005" width="0.4" height="15.0" fill="rgb(209,9,6)" rx="2" ry="2" />
<text  x="169.14" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="167.3" y="2021" width="0.4" height="15.0" fill="rgb(217,182,40)" rx="2" ry="2" />
<text  x="170.33" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="144.3" y="1909" width="0.2" height="15.0" fill="rgb(222,48,35)" rx="2" ry="2" />
<text  x="147.29" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.6" y="1845" width="0.2" height="15.0" fill="rgb(249,163,24)" rx="2" ry="2" />
<text  x="65.64" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="51.3" y="1925" width="0.2" height="15.0" fill="rgb(224,7,24)" rx="2" ry="2" />
<text  x="54.32" y="1935.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="848.7" y="1637" width="0.2" height="15.0" fill="rgb(214,2,5)" rx="2" ry="2" />
<text  x="851.71" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="910.9" y="1989" width="1.8" height="15.0" fill="rgb(220,223,1)" rx="2" ry="2" />
<text  x="913.89" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="865.6" y="1909" width="0.2" height="15.0" fill="rgb(239,191,10)" rx="2" ry="2" />
<text  x="868.60" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="866.4" y="1925" width="0.2" height="15.0" fill="rgb(253,159,2)" rx="2" ry="2" />
<text  x="869.39" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (18 samples, 0.30%)</title><rect x="357.4" y="2021" width="3.6" height="15.0" fill="rgb(220,172,11)" rx="2" ry="2" />
<text  x="360.44" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="407.9" y="1909" width="0.2" height="15.0" fill="rgb(246,64,12)" rx="2" ry="2" />
<text  x="410.90" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="75.6" y="1941" width="0.4" height="15.0" fill="rgb(246,205,23)" rx="2" ry="2" />
<text  x="78.56" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (2 samples, 0.03%)</title><rect x="215.8" y="1941" width="0.4" height="15.0" fill="rgb(236,119,4)" rx="2" ry="2" />
<text  x="218.80" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="556.7" y="1941" width="0.2" height="15.0" fill="rgb(245,180,46)" rx="2" ry="2" />
<text  x="559.69" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="514.8" y="1813" width="0.2" height="15.0" fill="rgb(225,183,12)" rx="2" ry="2" />
<text  x="517.78" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (30 samples, 0.51%)</title><rect x="305.6" y="1685" width="6.0" height="15.0" fill="rgb(225,83,16)" rx="2" ry="2" />
<text  x="308.60" y="1695.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="944.1" y="1925" width="0.2" height="15.0" fill="rgb(231,225,8)" rx="2" ry="2" />
<text  x="947.07" y="1935.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="327.1" y="1685" width="0.1" height="15.0" fill="rgb(221,6,3)" rx="2" ry="2" />
<text  x="330.05" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="160.2" y="1765" width="0.2" height="15.0" fill="rgb(239,227,38)" rx="2" ry="2" />
<text  x="163.18" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="845.5" y="1925" width="1.0" height="15.0" fill="rgb(234,197,25)" rx="2" ry="2" />
<text  x="848.54" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="298.8" y="1493" width="0.6" height="15.0" fill="rgb(252,194,20)" rx="2" ry="2" />
<text  x="301.84" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="73.0" y="1829" width="0.2" height="15.0" fill="rgb(229,140,51)" rx="2" ry="2" />
<text  x="75.97" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1183.0" y="1973" width="0.2" height="15.0" fill="rgb(232,78,12)" rx="2" ry="2" />
<text  x="1186.05" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1083.1" y="1797" width="0.2" height="15.0" fill="rgb(236,104,37)" rx="2" ry="2" />
<text  x="1086.12" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="70.2" y="1829" width="0.2" height="15.0" fill="rgb(207,144,26)" rx="2" ry="2" />
<text  x="73.19" y="1839.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="798.3" y="1669" width="0.2" height="15.0" fill="rgb(251,68,38)" rx="2" ry="2" />
<text  x="801.26" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="732.7" y="1685" width="0.2" height="15.0" fill="rgb(223,109,40)" rx="2" ry="2" />
<text  x="735.70" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="388.0" y="1717" width="0.2" height="15.0" fill="rgb(229,168,15)" rx="2" ry="2" />
<text  x="391.04" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="757.5" y="1653" width="0.2" height="15.0" fill="rgb(218,19,39)" rx="2" ry="2" />
<text  x="760.53" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="923.2" y="2037" width="0.2" height="15.0" fill="rgb(236,130,18)" rx="2" ry="2" />
<text  x="926.21" y="2047.5" ></text>
</g>
<g >
<title>SYSC_getpeername (17 samples, 0.29%)</title><rect x="670.5" y="1877" width="3.4" height="15.0" fill="rgb(250,22,14)" rx="2" ry="2" />
<text  x="673.52" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="386.2" y="1797" width="0.2" height="15.0" fill="rgb(243,161,42)" rx="2" ry="2" />
<text  x="389.25" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="232.1" y="1925" width="0.4" height="15.0" fill="rgb(231,217,44)" rx="2" ry="2" />
<text  x="235.09" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="220.2" y="1909" width="1.4" height="15.0" fill="rgb(241,189,12)" rx="2" ry="2" />
<text  x="223.18" y="1919.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="889.6" y="1829" width="0.2" height="15.0" fill="rgb(215,217,2)" rx="2" ry="2" />
<text  x="892.64" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="63.0" y="1861" width="0.2" height="15.0" fill="rgb(208,155,23)" rx="2" ry="2" />
<text  x="66.04" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="292.9" y="1797" width="0.2" height="15.0" fill="rgb(224,127,48)" rx="2" ry="2" />
<text  x="295.88" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="845.1" y="1701" width="0.2" height="15.0" fill="rgb(227,126,36)" rx="2" ry="2" />
<text  x="848.14" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="468.3" y="1941" width="0.2" height="15.0" fill="rgb(208,197,36)" rx="2" ry="2" />
<text  x="471.29" y="1951.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="188.2" y="1909" width="0.2" height="15.0" fill="rgb(214,5,19)" rx="2" ry="2" />
<text  x="191.19" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="157.8" y="1829" width="0.2" height="15.0" fill="rgb(230,223,44)" rx="2" ry="2" />
<text  x="160.80" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (120 samples, 2.02%)</title><rect x="873.7" y="1989" width="23.9" height="15.0" fill="rgb(231,175,47)" rx="2" ry="2" />
<text  x="876.74" y="1999.5" >f..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1105.2" y="1701" width="0.2" height="15.0" fill="rgb(253,25,46)" rx="2" ry="2" />
<text  x="1108.18" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1059.7" y="1813" width="0.4" height="15.0" fill="rgb(208,14,44)" rx="2" ry="2" />
<text  x="1062.68" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="489.9" y="1973" width="0.2" height="15.0" fill="rgb(248,114,1)" rx="2" ry="2" />
<text  x="492.95" y="1983.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="391.6" y="1957" width="0.2" height="15.0" fill="rgb(254,103,1)" rx="2" ry="2" />
<text  x="394.61" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="144.1" y="1893" width="0.2" height="15.0" fill="rgb(207,26,29)" rx="2" ry="2" />
<text  x="147.09" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="912.9" y="1989" width="0.2" height="15.0" fill="rgb(206,197,54)" rx="2" ry="2" />
<text  x="915.88" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="862.4" y="1797" width="0.2" height="15.0" fill="rgb(234,110,26)" rx="2" ry="2" />
<text  x="865.42" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1127.2" y="1925" width="0.2" height="15.0" fill="rgb(240,70,53)" rx="2" ry="2" />
<text  x="1130.23" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="835.0" y="1829" width="0.2" height="15.0" fill="rgb(227,4,41)" rx="2" ry="2" />
<text  x="838.01" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="198.3" y="1957" width="0.2" height="15.0" fill="rgb(242,26,17)" rx="2" ry="2" />
<text  x="201.32" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="659.4" y="1973" width="0.6" height="15.0" fill="rgb(251,107,23)" rx="2" ry="2" />
<text  x="662.40" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="864.0" y="1989" width="1.4" height="15.0" fill="rgb(243,8,25)" rx="2" ry="2" />
<text  x="867.01" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (47 samples, 0.79%)</title><rect x="1108.2" y="1781" width="9.3" height="15.0" fill="rgb(220,95,51)" rx="2" ry="2" />
<text  x="1111.15" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1031.7" y="1893" width="0.2" height="15.0" fill="rgb(244,219,12)" rx="2" ry="2" />
<text  x="1034.67" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="227.5" y="1861" width="0.2" height="15.0" fill="rgb(254,132,42)" rx="2" ry="2" />
<text  x="230.53" y="1871.5" ></text>
</g>
<g >
<title>d_flags_for_inode (3 samples, 0.05%)</title><rect x="413.9" y="1909" width="0.6" height="15.0" fill="rgb(254,227,22)" rx="2" ry="2" />
<text  x="416.86" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1102.8" y="1781" width="0.2" height="15.0" fill="rgb(253,15,43)" rx="2" ry="2" />
<text  x="1105.79" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="514.8" y="1749" width="0.2" height="15.0" fill="rgb(240,66,1)" rx="2" ry="2" />
<text  x="517.78" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="819.3" y="1653" width="0.2" height="15.0" fill="rgb(229,56,29)" rx="2" ry="2" />
<text  x="822.31" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="939.1" y="1861" width="0.4" height="15.0" fill="rgb(238,122,35)" rx="2" ry="2" />
<text  x="942.10" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.3" y="1845" width="0.2" height="15.0" fill="rgb(249,61,46)" rx="2" ry="2" />
<text  x="64.25" y="1855.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1117.7" y="1733" width="0.2" height="15.0" fill="rgb(210,84,33)" rx="2" ry="2" />
<text  x="1120.69" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="573.2" y="1845" width="0.2" height="15.0" fill="rgb(237,93,28)" rx="2" ry="2" />
<text  x="576.18" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (2 samples, 0.03%)</title><rect x="570.6" y="1925" width="0.4" height="15.0" fill="rgb(217,180,43)" rx="2" ry="2" />
<text  x="573.60" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="830.8" y="1861" width="0.2" height="15.0" fill="rgb(212,127,35)" rx="2" ry="2" />
<text  x="833.84" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.13%)</title><rect x="12.8" y="1861" width="1.6" height="15.0" fill="rgb(205,206,54)" rx="2" ry="2" />
<text  x="15.78" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="437" width="13.5" height="15.0" fill="rgb(244,73,45)" rx="2" ry="2" />
<text  x="108.75" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="1033.1" y="2037" width="0.6" height="15.0" fill="rgb(228,152,0)" rx="2" ry="2" />
<text  x="1036.06" y="2047.5" ></text>
</g>
<g >
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="797.7" y="1637" width="0.6" height="15.0" fill="rgb(247,190,2)" rx="2" ry="2" />
<text  x="800.66" y="1647.5" ></text>
</g>
<g >
<title>sys_gettid (4 samples, 0.07%)</title><rect x="1161.0" y="1925" width="0.8" height="15.0" fill="rgb(252,135,26)" rx="2" ry="2" />
<text  x="1164.00" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="62.6" y="1813" width="0.2" height="15.0" fill="rgb(246,133,8)" rx="2" ry="2" />
<text  x="65.64" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (70 samples, 1.18%)</title><rect x="631.2" y="2037" width="13.9" height="15.0" fill="rgb(225,158,27)" rx="2" ry="2" />
<text  x="634.19" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="507.0" y="1813" width="0.2" height="15.0" fill="rgb(227,45,51)" rx="2" ry="2" />
<text  x="510.03" y="1823.5" ></text>
</g>
<g >
<title>__GI___getsockname (93 samples, 1.57%)</title><rect x="586.3" y="1941" width="18.5" height="15.0" fill="rgb(240,136,21)" rx="2" ry="2" />
<text  x="589.29" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="513.4" y="1813" width="0.2" height="15.0" fill="rgb(253,59,50)" rx="2" ry="2" />
<text  x="516.39" y="1823.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="126.6" y="1957" width="0.2" height="15.0" fill="rgb(252,38,41)" rx="2" ry="2" />
<text  x="129.61" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="27.3" y="1957" width="0.2" height="15.0" fill="rgb(235,100,16)" rx="2" ry="2" />
<text  x="30.28" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (51 samples, 0.86%)</title><rect x="1107.8" y="1893" width="10.1" height="15.0" fill="rgb(239,125,36)" rx="2" ry="2" />
<text  x="1110.76" y="1903.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="113.5" y="53" width="0.4" height="15.0" fill="rgb(254,114,31)" rx="2" ry="2" />
<text  x="116.50" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="862.4" y="1877" width="0.2" height="15.0" fill="rgb(211,65,28)" rx="2" ry="2" />
<text  x="865.42" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="65.4" y="1941" width="0.4" height="15.0" fill="rgb(208,186,47)" rx="2" ry="2" />
<text  x="68.42" y="1951.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="893.2" y="1957" width="0.2" height="15.0" fill="rgb(219,93,15)" rx="2" ry="2" />
<text  x="896.21" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (23 samples, 0.39%)</title><rect x="694.8" y="2021" width="4.5" height="15.0" fill="rgb(220,53,43)" rx="2" ry="2" />
<text  x="697.76" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1035.2" y="2037" width="0.2" height="15.0" fill="rgb(231,167,27)" rx="2" ry="2" />
<text  x="1038.25" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.7" y="645" width="0.2" height="15.0" fill="rgb(245,199,38)" rx="2" ry="2" />
<text  x="122.66" y="655.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="116.5" y="69" width="0.2" height="15.0" fill="rgb(206,55,51)" rx="2" ry="2" />
<text  x="119.48" y="79.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="334.0" y="1365" width="0.2" height="15.0" fill="rgb(240,87,51)" rx="2" ry="2" />
<text  x="337.00" y="1375.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="103.0" y="1989" width="0.2" height="15.0" fill="rgb(230,25,17)" rx="2" ry="2" />
<text  x="105.97" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="218.0" y="1909" width="0.2" height="15.0" fill="rgb(218,134,0)" rx="2" ry="2" />
<text  x="220.99" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="772.8" y="1589" width="0.2" height="15.0" fill="rgb(215,49,26)" rx="2" ry="2" />
<text  x="775.83" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="868.8" y="2005" width="0.2" height="15.0" fill="rgb(227,186,21)" rx="2" ry="2" />
<text  x="871.78" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="10.4" y="2037" width="0.2" height="15.0" fill="rgb(209,2,2)" rx="2" ry="2" />
<text  x="13.40" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="879.3" y="1957" width="0.4" height="15.0" fill="rgb(241,74,6)" rx="2" ry="2" />
<text  x="882.31" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="901" width="14.3" height="15.0" fill="rgb(212,177,21)" rx="2" ry="2" />
<text  x="108.75" y="911.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="1137.2" y="2053" width="0.2" height="15.0" fill="rgb(227,54,26)" rx="2" ry="2" />
<text  x="1140.16" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="159.6" y="1765" width="0.2" height="15.0" fill="rgb(214,42,49)" rx="2" ry="2" />
<text  x="162.59" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="656.0" y="2037" width="0.4" height="15.0" fill="rgb(234,83,15)" rx="2" ry="2" />
<text  x="659.02" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1150.5" y="1973" width="0.2" height="15.0" fill="rgb(238,85,1)" rx="2" ry="2" />
<text  x="1153.47" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1011.8" y="2005" width="0.2" height="15.0" fill="rgb(227,218,53)" rx="2" ry="2" />
<text  x="1014.81" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="655.2" y="2021" width="0.2" height="15.0" fill="rgb(208,15,20)" rx="2" ry="2" />
<text  x="658.23" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="574.2" y="1717" width="0.2" height="15.0" fill="rgb(221,9,8)" rx="2" ry="2" />
<text  x="577.18" y="1727.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="488.0" y="1861" width="0.2" height="15.0" fill="rgb(241,64,49)" rx="2" ry="2" />
<text  x="490.96" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.12%)</title><rect x="13.0" y="1829" width="1.4" height="15.0" fill="rgb(205,49,41)" rx="2" ry="2" />
<text  x="15.98" y="1839.5" ></text>
</g>
<g >
<title>security_file_alloc (12 samples, 0.20%)</title><rect x="408.1" y="1909" width="2.4" height="15.0" fill="rgb(243,132,45)" rx="2" ry="2" />
<text  x="411.10" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1139.9" y="2005" width="0.2" height="15.0" fill="rgb(207,173,12)" rx="2" ry="2" />
<text  x="1142.94" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="208.1" y="1797" width="0.2" height="15.0" fill="rgb(231,105,36)" rx="2" ry="2" />
<text  x="211.06" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1205" width="14.7" height="15.0" fill="rgb(239,113,46)" rx="2" ry="2" />
<text  x="108.35" y="1215.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="1109.7" y="1477" width="1.0" height="15.0" fill="rgb(209,64,27)" rx="2" ry="2" />
<text  x="1112.74" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="536.2" y="1637" width="0.2" height="15.0" fill="rgb(229,159,8)" rx="2" ry="2" />
<text  x="539.23" y="1647.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="97.0" y="2005" width="0.2" height="15.0" fill="rgb(239,81,37)" rx="2" ry="2" />
<text  x="100.01" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1177.1" y="1989" width="0.4" height="15.0" fill="rgb(237,197,14)" rx="2" ry="2" />
<text  x="1180.09" y="1999.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="574.2" y="1621" width="0.2" height="15.0" fill="rgb(209,206,41)" rx="2" ry="2" />
<text  x="577.18" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="905.1" y="2005" width="0.2" height="15.0" fill="rgb(236,9,47)" rx="2" ry="2" />
<text  x="908.13" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="65.4" y="1829" width="0.4" height="15.0" fill="rgb(207,217,21)" rx="2" ry="2" />
<text  x="68.42" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="895.2" y="1845" width="0.4" height="15.0" fill="rgb(251,11,19)" rx="2" ry="2" />
<text  x="898.20" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="114.5" y="53" width="1.2" height="15.0" fill="rgb(227,37,0)" rx="2" ry="2" />
<text  x="117.49" y="63.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="296.1" y="1653" width="0.2" height="15.0" fill="rgb(207,1,49)" rx="2" ry="2" />
<text  x="299.06" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="178.9" y="1941" width="0.2" height="15.0" fill="rgb(222,37,20)" rx="2" ry="2" />
<text  x="181.86" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.58%)</title><rect x="104.6" y="1749" width="18.6" height="15.0" fill="rgb(214,185,12)" rx="2" ry="2" />
<text  x="107.56" y="1759.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="733.9" y="1669" width="0.2" height="15.0" fill="rgb(231,158,21)" rx="2" ry="2" />
<text  x="736.89" y="1679.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="373.7" y="1909" width="0.2" height="15.0" fill="rgb(251,120,22)" rx="2" ry="2" />
<text  x="376.73" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (13 samples, 0.22%)</title><rect x="893.8" y="1957" width="2.6" height="15.0" fill="rgb(208,128,50)" rx="2" ry="2" />
<text  x="896.81" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.8" y="1685" width="0.2" height="15.0" fill="rgb(222,47,52)" rx="2" ry="2" />
<text  x="125.84" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (2 samples, 0.03%)</title><rect x="651.3" y="2005" width="0.3" height="15.0" fill="rgb(246,171,23)" rx="2" ry="2" />
<text  x="654.25" y="2015.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="484.0" y="1845" width="0.2" height="15.0" fill="rgb(223,74,19)" rx="2" ry="2" />
<text  x="486.99" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="245.8" y="2005" width="0.2" height="15.0" fill="rgb(249,111,38)" rx="2" ry="2" />
<text  x="248.80" y="2015.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1031.7" y="1733" width="0.2" height="15.0" fill="rgb(218,39,22)" rx="2" ry="2" />
<text  x="1034.67" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="550.1" y="1861" width="0.2" height="15.0" fill="rgb(241,229,9)" rx="2" ry="2" />
<text  x="553.14" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="887.8" y="1717" width="0.2" height="15.0" fill="rgb(232,47,41)" rx="2" ry="2" />
<text  x="890.85" y="1727.5" ></text>
</g>
<g >
<title>memchr@plt (2 samples, 0.03%)</title><rect x="1030.7" y="2037" width="0.4" height="15.0" fill="rgb(244,12,49)" rx="2" ry="2" />
<text  x="1033.68" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="783.2" y="1525" width="0.2" height="15.0" fill="rgb(208,51,36)" rx="2" ry="2" />
<text  x="786.16" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="299.6" y="1397" width="0.6" height="15.0" fill="rgb(205,156,34)" rx="2" ry="2" />
<text  x="302.64" y="1407.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (10 samples, 0.17%)</title><rect x="996.7" y="1909" width="2.0" height="15.0" fill="rgb(211,75,47)" rx="2" ry="2" />
<text  x="999.71" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="629.6" y="1989" width="1.0" height="15.0" fill="rgb(239,117,27)" rx="2" ry="2" />
<text  x="632.60" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="105.8" y="581" width="13.7" height="15.0" fill="rgb(208,119,37)" rx="2" ry="2" />
<text  x="108.75" y="591.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="118.3" y="85" width="0.2" height="15.0" fill="rgb(233,1,47)" rx="2" ry="2" />
<text  x="121.27" y="95.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="997" width="14.7" height="15.0" fill="rgb(247,123,33)" rx="2" ry="2" />
<text  x="108.35" y="1007.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="14.6" y="1909" width="0.2" height="15.0" fill="rgb(215,1,33)" rx="2" ry="2" />
<text  x="17.57" y="1919.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="569.6" y="1781" width="0.2" height="15.0" fill="rgb(213,57,46)" rx="2" ry="2" />
<text  x="572.61" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="33.8" y="2005" width="0.2" height="15.0" fill="rgb(248,45,44)" rx="2" ry="2" />
<text  x="36.84" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="441.5" y="1797" width="0.2" height="15.0" fill="rgb(231,156,50)" rx="2" ry="2" />
<text  x="444.47" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (647 samples, 10.89%)</title><rect x="713.2" y="1941" width="128.6" height="15.0" fill="rgb(228,17,2)" rx="2" ry="2" />
<text  x="716.23" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="372.9" y="1925" width="0.2" height="15.0" fill="rgb(219,185,20)" rx="2" ry="2" />
<text  x="375.94" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="748.8" y="1509" width="0.2" height="15.0" fill="rgb(211,72,41)" rx="2" ry="2" />
<text  x="751.79" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="489.0" y="1909" width="0.4" height="15.0" fill="rgb(230,127,15)" rx="2" ry="2" />
<text  x="491.95" y="1919.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="52.9" y="1941" width="0.4" height="15.0" fill="rgb(234,11,6)" rx="2" ry="2" />
<text  x="55.91" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::default_header_holder (1 samples, 0.02%)</title><rect x="145.7" y="1877" width="0.2" height="15.0" fill="rgb(243,184,46)" rx="2" ry="2" />
<text  x="148.68" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="713.0" y="1669" width="0.2" height="15.0" fill="rgb(228,194,22)" rx="2" ry="2" />
<text  x="716.03" y="1679.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="1136.8" y="2053" width="0.4" height="15.0" fill="rgb(228,207,38)" rx="2" ry="2" />
<text  x="1139.76" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="327.1" y="1781" width="0.3" height="15.0" fill="rgb(238,162,3)" rx="2" ry="2" />
<text  x="330.05" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (2 samples, 0.03%)</title><rect x="145.9" y="1925" width="0.4" height="15.0" fill="rgb(254,218,48)" rx="2" ry="2" />
<text  x="148.88" y="1935.5" ></text>
</g>
<g >
<title>get_empty_filp (1 samples, 0.02%)</title><rect x="414.5" y="1941" width="0.2" height="15.0" fill="rgb(242,114,10)" rx="2" ry="2" />
<text  x="417.46" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="897.4" y="1973" width="0.2" height="15.0" fill="rgb(243,141,28)" rx="2" ry="2" />
<text  x="900.38" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (8 samples, 0.13%)</title><rect x="705.9" y="1941" width="1.6" height="15.0" fill="rgb(239,203,0)" rx="2" ry="2" />
<text  x="708.88" y="1951.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="650.5" y="1989" width="0.2" height="15.0" fill="rgb(217,220,26)" rx="2" ry="2" />
<text  x="653.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (13 samples, 0.22%)</title><rect x="869.0" y="2005" width="2.6" height="15.0" fill="rgb(239,79,24)" rx="2" ry="2" />
<text  x="871.98" y="2015.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="674.3" y="1909" width="0.2" height="15.0" fill="rgb(233,152,1)" rx="2" ry="2" />
<text  x="677.30" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="919.8" y="2005" width="0.4" height="15.0" fill="rgb(245,115,2)" rx="2" ry="2" />
<text  x="922.83" y="2015.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="262.9" y="1893" width="0.2" height="15.0" fill="rgb(212,201,0)" rx="2" ry="2" />
<text  x="265.89" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="600.4" y="1925" width="0.4" height="15.0" fill="rgb(244,182,52)" rx="2" ry="2" />
<text  x="603.40" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="72.8" y="1941" width="0.2" height="15.0" fill="rgb(207,161,54)" rx="2" ry="2" />
<text  x="75.77" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="405.7" y="1893" width="0.6" height="15.0" fill="rgb(254,8,51)" rx="2" ry="2" />
<text  x="408.72" y="1903.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="100.8" y="1877" width="0.2" height="15.0" fill="rgb(233,26,44)" rx="2" ry="2" />
<text  x="103.78" y="1887.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1019.8" y="1893" width="0.7" height="15.0" fill="rgb(206,44,6)" rx="2" ry="2" />
<text  x="1022.75" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="920.4" y="2037" width="0.2" height="15.0" fill="rgb(240,83,32)" rx="2" ry="2" />
<text  x="923.43" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="63.0" y="1893" width="0.2" height="15.0" fill="rgb(234,140,2)" rx="2" ry="2" />
<text  x="66.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="578.1" y="1973" width="0.2" height="15.0" fill="rgb(223,215,11)" rx="2" ry="2" />
<text  x="581.15" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="497.5" y="1909" width="0.4" height="15.0" fill="rgb(212,20,52)" rx="2" ry="2" />
<text  x="500.49" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1059.9" y="1765" width="0.2" height="15.0" fill="rgb(208,115,6)" rx="2" ry="2" />
<text  x="1062.88" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="884.5" y="1637" width="0.2" height="15.0" fill="rgb(221,76,53)" rx="2" ry="2" />
<text  x="887.47" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (1 samples, 0.02%)</title><rect x="856.3" y="1957" width="0.2" height="15.0" fill="rgb(246,103,21)" rx="2" ry="2" />
<text  x="859.26" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (5 samples, 0.08%)</title><rect x="160.4" y="1909" width="1.0" height="15.0" fill="rgb(249,97,42)" rx="2" ry="2" />
<text  x="163.38" y="1919.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="998.5" y="1893" width="0.2" height="15.0" fill="rgb(217,198,24)" rx="2" ry="2" />
<text  x="1001.50" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (28 samples, 0.47%)</title><rect x="154.4" y="1909" width="5.6" height="15.0" fill="rgb(247,125,38)" rx="2" ry="2" />
<text  x="157.42" y="1919.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="635.6" y="1605" width="0.2" height="15.0" fill="rgb(224,54,29)" rx="2" ry="2" />
<text  x="638.56" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="580.7" y="1957" width="0.2" height="15.0" fill="rgb(219,46,4)" rx="2" ry="2" />
<text  x="583.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="699.7" y="2037" width="0.2" height="15.0" fill="rgb(207,53,1)" rx="2" ry="2" />
<text  x="702.72" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (5 samples, 0.08%)</title><rect x="1018.6" y="1989" width="1.0" height="15.0" fill="rgb(237,112,45)" rx="2" ry="2" />
<text  x="1021.56" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="281.8" y="1829" width="0.2" height="15.0" fill="rgb(226,93,7)" rx="2" ry="2" />
<text  x="284.76" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="639.1" y="1925" width="0.4" height="15.0" fill="rgb(247,156,38)" rx="2" ry="2" />
<text  x="642.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="631.2" y="2005" width="13.7" height="15.0" fill="rgb(245,45,22)" rx="2" ry="2" />
<text  x="634.19" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="333.8" y="1573" width="0.4" height="15.0" fill="rgb(215,80,35)" rx="2" ry="2" />
<text  x="336.80" y="1583.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="996.3" y="1893" width="0.4" height="15.0" fill="rgb(244,100,24)" rx="2" ry="2" />
<text  x="999.31" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (9 samples, 0.15%)</title><rect x="705.9" y="1989" width="1.8" height="15.0" fill="rgb(231,22,2)" rx="2" ry="2" />
<text  x="708.88" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1059.7" y="1781" width="0.4" height="15.0" fill="rgb(206,158,47)" rx="2" ry="2" />
<text  x="1062.68" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (47 samples, 0.79%)</title><rect x="221.6" y="1893" width="9.3" height="15.0" fill="rgb(209,59,47)" rx="2" ry="2" />
<text  x="224.57" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="555.1" y="1893" width="0.2" height="15.0" fill="rgb(245,104,0)" rx="2" ry="2" />
<text  x="558.10" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.13%)</title><rect x="12.8" y="1877" width="1.6" height="15.0" fill="rgb(245,11,27)" rx="2" ry="2" />
<text  x="15.78" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="820.1" y="1701" width="0.2" height="15.0" fill="rgb(230,58,14)" rx="2" ry="2" />
<text  x="823.11" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="514.8" y="1717" width="0.2" height="15.0" fill="rgb(215,3,26)" rx="2" ry="2" />
<text  x="517.78" y="1727.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="745.2" y="1749" width="0.2" height="15.0" fill="rgb(235,176,50)" rx="2" ry="2" />
<text  x="748.22" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="45.0" y="1957" width="0.4" height="15.0" fill="rgb(253,228,12)" rx="2" ry="2" />
<text  x="47.96" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="959.0" y="1989" width="1.8" height="15.0" fill="rgb(228,7,8)" rx="2" ry="2" />
<text  x="961.97" y="1999.5" ></text>
</g>
<g >
<title>get_random_u32 (1 samples, 0.02%)</title><rect x="277.8" y="1765" width="0.2" height="15.0" fill="rgb(230,209,24)" rx="2" ry="2" />
<text  x="280.78" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="64.8" y="1957" width="0.2" height="15.0" fill="rgb(251,70,14)" rx="2" ry="2" />
<text  x="67.83" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="208.1" y="1749" width="0.2" height="15.0" fill="rgb(230,38,17)" rx="2" ry="2" />
<text  x="211.06" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="627.2" y="2005" width="0.2" height="15.0" fill="rgb(241,112,15)" rx="2" ry="2" />
<text  x="630.22" y="2015.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.4" y="1925" width="0.2" height="15.0" fill="rgb(214,53,23)" rx="2" ry="2" />
<text  x="128.42" y="1935.5" ></text>
</g>
<g >
<title>alloc_inode (31 samples, 0.52%)</title><rect x="397.0" y="1925" width="6.1" height="15.0" fill="rgb(249,155,41)" rx="2" ry="2" />
<text  x="399.98" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="635.6" y="1717" width="0.2" height="15.0" fill="rgb(254,93,28)" rx="2" ry="2" />
<text  x="638.56" y="1727.5" ></text>
</g>
<g >
<title>page_frag_free (2 samples, 0.03%)</title><rect x="1079.2" y="1877" width="0.3" height="15.0" fill="rgb(210,66,39)" rx="2" ry="2" />
<text  x="1082.15" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="912.1" y="1941" width="0.2" height="15.0" fill="rgb(252,175,34)" rx="2" ry="2" />
<text  x="915.08" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="148.1" y="1829" width="0.2" height="15.0" fill="rgb(226,61,5)" rx="2" ry="2" />
<text  x="151.06" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (3 samples, 0.05%)</title><rect x="60.9" y="1909" width="0.6" height="15.0" fill="rgb(235,218,5)" rx="2" ry="2" />
<text  x="63.86" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="535.0" y="1909" width="0.2" height="15.0" fill="rgb(222,57,35)" rx="2" ry="2" />
<text  x="538.04" y="1919.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="440.9" y="1989" width="0.2" height="15.0" fill="rgb(226,203,2)" rx="2" ry="2" />
<text  x="443.88" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="907.3" y="2021" width="1.4" height="15.0" fill="rgb(213,103,7)" rx="2" ry="2" />
<text  x="910.32" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="556.7" y="1909" width="0.2" height="15.0" fill="rgb(211,195,29)" rx="2" ry="2" />
<text  x="559.69" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="783.0" y="1525" width="0.2" height="15.0" fill="rgb(205,8,38)" rx="2" ry="2" />
<text  x="785.96" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="208.1" y="1925" width="0.2" height="15.0" fill="rgb(210,174,36)" rx="2" ry="2" />
<text  x="211.06" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="907.7" y="2005" width="0.2" height="15.0" fill="rgb(248,34,30)" rx="2" ry="2" />
<text  x="910.71" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="623.4" y="2005" width="0.4" height="15.0" fill="rgb(228,160,12)" rx="2" ry="2" />
<text  x="626.44" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (95 samples, 1.60%)</title><rect x="659.0" y="2021" width="18.9" height="15.0" fill="rgb(232,86,52)" rx="2" ry="2" />
<text  x="662.00" y="2031.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="480.4" y="1781" width="0.2" height="15.0" fill="rgb(240,80,21)" rx="2" ry="2" />
<text  x="483.41" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.13%)</title><rect x="541.4" y="1973" width="1.6" height="15.0" fill="rgb(239,132,35)" rx="2" ry="2" />
<text  x="544.40" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="281.6" y="1781" width="0.2" height="15.0" fill="rgb(226,136,35)" rx="2" ry="2" />
<text  x="284.56" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="897.6" y="1989" width="0.2" height="15.0" fill="rgb(233,49,44)" rx="2" ry="2" />
<text  x="900.58" y="1999.5" ></text>
</g>
<g >
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="257.3" y="1941" width="0.4" height="15.0" fill="rgb(243,18,50)" rx="2" ry="2" />
<text  x="260.32" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="884.5" y="1653" width="0.2" height="15.0" fill="rgb(240,69,36)" rx="2" ry="2" />
<text  x="887.47" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1004.7" y="1989" width="0.2" height="15.0" fill="rgb(232,160,7)" rx="2" ry="2" />
<text  x="1007.66" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="337.0" y="1509" width="0.2" height="15.0" fill="rgb(218,112,17)" rx="2" ry="2" />
<text  x="339.98" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="659.4" y="1989" width="0.6" height="15.0" fill="rgb(222,217,16)" rx="2" ry="2" />
<text  x="662.40" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1142.9" y="2021" width="0.2" height="15.0" fill="rgb(228,21,32)" rx="2" ry="2" />
<text  x="1145.92" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="923.4" y="2037" width="1.4" height="15.0" fill="rgb(235,176,20)" rx="2" ry="2" />
<text  x="926.41" y="2047.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (40 samples, 0.67%)</title><rect x="1169.7" y="2053" width="8.0" height="15.0" fill="rgb(222,163,14)" rx="2" ry="2" />
<text  x="1172.74" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1045" width="14.7" height="15.0" fill="rgb(214,191,42)" rx="2" ry="2" />
<text  x="108.35" y="1055.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="887.8" y="1573" width="0.2" height="15.0" fill="rgb(222,152,7)" rx="2" ry="2" />
<text  x="890.85" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="334.0" y="1269" width="0.2" height="15.0" fill="rgb(236,50,6)" rx="2" ry="2" />
<text  x="337.00" y="1279.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (45 samples, 0.76%)</title><rect x="46.8" y="1973" width="8.9" height="15.0" fill="rgb(236,180,17)" rx="2" ry="2" />
<text  x="49.75" y="1983.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="565.0" y="1541" width="0.2" height="15.0" fill="rgb(210,81,3)" rx="2" ry="2" />
<text  x="568.04" y="1551.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="417.4" y="2005" width="0.2" height="15.0" fill="rgb(249,86,8)" rx="2" ry="2" />
<text  x="420.44" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (5 samples, 0.08%)</title><rect x="73.6" y="1957" width="1.0" height="15.0" fill="rgb(249,107,0)" rx="2" ry="2" />
<text  x="76.57" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="960.6" y="1941" width="0.2" height="15.0" fill="rgb(226,29,15)" rx="2" ry="2" />
<text  x="963.56" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="243.4" y="2021" width="0.2" height="15.0" fill="rgb(228,201,14)" rx="2" ry="2" />
<text  x="246.42" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="569.6" y="1829" width="0.2" height="15.0" fill="rgb(223,188,28)" rx="2" ry="2" />
<text  x="572.61" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="855.3" y="1941" width="0.4" height="15.0" fill="rgb(222,142,52)" rx="2" ry="2" />
<text  x="858.27" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="616.3" y="1893" width="0.2" height="15.0" fill="rgb(223,198,12)" rx="2" ry="2" />
<text  x="619.29" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="222.6" y="1605" width="0.2" height="15.0" fill="rgb(219,51,53)" rx="2" ry="2" />
<text  x="225.56" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="54.9" y="1893" width="0.2" height="15.0" fill="rgb(227,222,15)" rx="2" ry="2" />
<text  x="57.90" y="1903.5" ></text>
</g>
<g >
<title>expand_files (1 samples, 0.02%)</title><rect x="372.7" y="1925" width="0.2" height="15.0" fill="rgb(208,155,18)" rx="2" ry="2" />
<text  x="375.74" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="901.4" y="1941" width="0.2" height="15.0" fill="rgb(254,205,15)" rx="2" ry="2" />
<text  x="904.36" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1160.8" y="1797" width="0.2" height="15.0" fill="rgb(249,189,16)" rx="2" ry="2" />
<text  x="1163.80" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="281.8" y="1781" width="0.2" height="15.0" fill="rgb(212,164,13)" rx="2" ry="2" />
<text  x="284.76" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="116.9" y="37" width="0.2" height="15.0" fill="rgb(235,124,49)" rx="2" ry="2" />
<text  x="119.88" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1169.3" y="2037" width="0.4" height="15.0" fill="rgb(250,218,4)" rx="2" ry="2" />
<text  x="1172.34" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="118.5" y="69" width="0.4" height="15.0" fill="rgb(207,95,51)" rx="2" ry="2" />
<text  x="121.46" y="79.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="884.5" y="1909" width="0.6" height="15.0" fill="rgb(233,205,32)" rx="2" ry="2" />
<text  x="887.47" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (277 samples, 4.66%)</title><rect x="361.4" y="2005" width="55.0" height="15.0" fill="rgb(251,147,43)" rx="2" ry="2" />
<text  x="364.42" y="2015.5" >do_sy..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="573.2" y="1797" width="0.2" height="15.0" fill="rgb(245,209,42)" rx="2" ry="2" />
<text  x="576.18" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="848.7" y="1701" width="0.2" height="15.0" fill="rgb(214,51,50)" rx="2" ry="2" />
<text  x="851.71" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="738.3" y="1621" width="0.2" height="15.0" fill="rgb(230,172,33)" rx="2" ry="2" />
<text  x="741.26" y="1631.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.03%)</title><rect x="426.0" y="2021" width="0.4" height="15.0" fill="rgb(228,80,48)" rx="2" ry="2" />
<text  x="428.98" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="520.7" y="1973" width="0.8" height="15.0" fill="rgb(221,128,26)" rx="2" ry="2" />
<text  x="523.74" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="860.6" y="1973" width="0.4" height="15.0" fill="rgb(250,176,51)" rx="2" ry="2" />
<text  x="863.63" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="441.5" y="1861" width="0.2" height="15.0" fill="rgb(250,187,4)" rx="2" ry="2" />
<text  x="444.47" y="1871.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="253.4" y="1781" width="0.1" height="15.0" fill="rgb(210,228,15)" rx="2" ry="2" />
<text  x="256.35" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="388.0" y="1749" width="0.2" height="15.0" fill="rgb(208,201,30)" rx="2" ry="2" />
<text  x="391.04" y="1759.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="219.0" y="1845" width="0.2" height="15.0" fill="rgb(219,187,1)" rx="2" ry="2" />
<text  x="221.98" y="1855.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="416.8" y="1909" width="0.2" height="15.0" fill="rgb(244,50,45)" rx="2" ry="2" />
<text  x="419.84" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (83 samples, 1.40%)</title><rect x="660.2" y="1973" width="16.5" height="15.0" fill="rgb(220,167,11)" rx="2" ry="2" />
<text  x="663.19" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="819.3" y="1493" width="0.2" height="15.0" fill="rgb(247,178,38)" rx="2" ry="2" />
<text  x="822.31" y="1503.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="569.6" y="1813" width="0.2" height="15.0" fill="rgb(214,111,3)" rx="2" ry="2" />
<text  x="572.61" y="1823.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="316.7" y="1637" width="0.2" height="15.0" fill="rgb(214,209,6)" rx="2" ry="2" />
<text  x="319.72" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="295.1" y="1685" width="0.2" height="15.0" fill="rgb(248,33,29)" rx="2" ry="2" />
<text  x="298.07" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="792.5" y="1653" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="795.49" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="392.4" y="1733" width="0.2" height="15.0" fill="rgb(249,150,54)" rx="2" ry="2" />
<text  x="395.41" y="1743.5" ></text>
</g>
<g >
<title>event_del_nolock_ (3 samples, 0.05%)</title><rect x="1138.9" y="2053" width="0.6" height="15.0" fill="rgb(217,170,11)" rx="2" ry="2" />
<text  x="1141.95" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1033.5" y="1749" width="0.2" height="15.0" fill="rgb(205,207,18)" rx="2" ry="2" />
<text  x="1036.46" y="1759.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="901.4" y="1925" width="0.2" height="15.0" fill="rgb(234,54,37)" rx="2" ry="2" />
<text  x="904.36" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="57.5" y="1909" width="0.2" height="15.0" fill="rgb(205,109,12)" rx="2" ry="2" />
<text  x="60.48" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (3 samples, 0.05%)</title><rect x="904.5" y="2037" width="0.6" height="15.0" fill="rgb(231,195,49)" rx="2" ry="2" />
<text  x="907.54" y="2047.5" ></text>
</g>
<g >
<title>epoll_ctl (387 samples, 6.52%)</title><rect x="419.2" y="2037" width="76.9" height="15.0" fill="rgb(218,129,28)" rx="2" ry="2" />
<text  x="422.23" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="691.2" y="1637" width="0.2" height="15.0" fill="rgb(241,177,15)" rx="2" ry="2" />
<text  x="694.18" y="1647.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="136.5" y="1957" width="0.2" height="15.0" fill="rgb(226,186,46)" rx="2" ry="2" />
<text  x="139.54" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="497.7" y="1765" width="0.2" height="15.0" fill="rgb(227,98,29)" rx="2" ry="2" />
<text  x="500.69" y="1775.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1004.7" y="1781" width="0.2" height="15.0" fill="rgb(251,61,54)" rx="2" ry="2" />
<text  x="1007.66" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="1149.1" y="1957" width="0.2" height="15.0" fill="rgb(230,24,28)" rx="2" ry="2" />
<text  x="1152.08" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="523.5" y="1925" width="0.2" height="15.0" fill="rgb(250,57,16)" rx="2" ry="2" />
<text  x="526.52" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="879.3" y="1925" width="0.2" height="15.0" fill="rgb(245,132,26)" rx="2" ry="2" />
<text  x="882.31" y="1935.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="332.8" y="1749" width="0.2" height="15.0" fill="rgb(221,45,24)" rx="2" ry="2" />
<text  x="335.81" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="838.0" y="1909" width="0.2" height="15.0" fill="rgb(226,10,36)" rx="2" ry="2" />
<text  x="840.99" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="127.8" y="1973" width="0.2" height="15.0" fill="rgb(248,6,32)" rx="2" ry="2" />
<text  x="130.80" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="15.0" y="1845" width="0.8" height="15.0" fill="rgb(209,178,10)" rx="2" ry="2" />
<text  x="17.97" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="270.0" y="1781" width="0.2" height="15.0" fill="rgb(233,16,17)" rx="2" ry="2" />
<text  x="273.04" y="1791.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="159.6" y="1589" width="0.2" height="15.0" fill="rgb(253,121,2)" rx="2" ry="2" />
<text  x="162.59" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.8" y="1797" width="0.2" height="15.0" fill="rgb(217,22,45)" rx="2" ry="2" />
<text  x="890.85" y="1807.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="1001.3" y="1989" width="0.4" height="15.0" fill="rgb(239,181,31)" rx="2" ry="2" />
<text  x="1004.28" y="1999.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="148.1" y="1765" width="0.2" height="15.0" fill="rgb(222,202,17)" rx="2" ry="2" />
<text  x="151.06" y="1775.5" ></text>
</g>
<g >
<title>__slab_free (21 samples, 0.35%)</title><rect x="381.9" y="1909" width="4.2" height="15.0" fill="rgb(249,132,23)" rx="2" ry="2" />
<text  x="384.88" y="1919.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="392.4" y="1717" width="0.2" height="15.0" fill="rgb(227,162,40)" rx="2" ry="2" />
<text  x="395.41" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.5" y="37" width="0.2" height="15.0" fill="rgb(250,17,51)" rx="2" ry="2" />
<text  x="114.51" y="47.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="900.6" y="1957" width="0.2" height="15.0" fill="rgb(225,137,48)" rx="2" ry="2" />
<text  x="903.56" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="745.0" y="1733" width="0.2" height="15.0" fill="rgb(251,86,11)" rx="2" ry="2" />
<text  x="748.02" y="1743.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (3 samples, 0.05%)</title><rect x="976.6" y="2037" width="0.6" height="15.0" fill="rgb(213,108,38)" rx="2" ry="2" />
<text  x="979.65" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="337.4" y="1701" width="0.2" height="15.0" fill="rgb(253,196,36)" rx="2" ry="2" />
<text  x="340.38" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="497.5" y="1941" width="0.4" height="15.0" fill="rgb(221,139,47)" rx="2" ry="2" />
<text  x="500.49" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="193.2" y="1989" width="0.2" height="15.0" fill="rgb(227,180,23)" rx="2" ry="2" />
<text  x="196.16" y="1999.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="253.4" y="1797" width="0.1" height="15.0" fill="rgb(219,43,28)" rx="2" ry="2" />
<text  x="256.35" y="1807.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="959.8" y="1973" width="0.2" height="15.0" fill="rgb(242,20,37)" rx="2" ry="2" />
<text  x="962.76" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="969.7" y="1893" width="0.2" height="15.0" fill="rgb(250,137,13)" rx="2" ry="2" />
<text  x="972.69" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="916.5" y="1989" width="0.6" height="15.0" fill="rgb(214,115,3)" rx="2" ry="2" />
<text  x="919.45" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (4 samples, 0.07%)</title><rect x="528.1" y="1973" width="0.8" height="15.0" fill="rgb(208,140,5)" rx="2" ry="2" />
<text  x="531.09" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (4 samples, 0.07%)</title><rect x="862.6" y="1989" width="0.8" height="15.0" fill="rgb(249,15,47)" rx="2" ry="2" />
<text  x="865.62" y="1999.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="808.0" y="1669" width="0.2" height="15.0" fill="rgb(236,136,46)" rx="2" ry="2" />
<text  x="810.99" y="1679.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="605.0" y="1941" width="0.2" height="15.0" fill="rgb(224,121,11)" rx="2" ry="2" />
<text  x="607.97" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="941.9" y="1957" width="0.6" height="15.0" fill="rgb(209,39,41)" rx="2" ry="2" />
<text  x="944.88" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1027.3" y="1765" width="0.2" height="15.0" fill="rgb(206,56,16)" rx="2" ry="2" />
<text  x="1030.30" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1009.6" y="1957" width="0.2" height="15.0" fill="rgb(247,221,20)" rx="2" ry="2" />
<text  x="1012.62" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="757.5" y="1637" width="0.2" height="15.0" fill="rgb(234,67,44)" rx="2" ry="2" />
<text  x="760.53" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="901.6" y="1877" width="0.2" height="15.0" fill="rgb(239,122,4)" rx="2" ry="2" />
<text  x="904.56" y="1887.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1189.6" y="2021" width="0.2" height="15.0" fill="rgb(226,82,46)" rx="2" ry="2" />
<text  x="1192.60" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="829.6" y="1749" width="0.2" height="15.0" fill="rgb(207,113,44)" rx="2" ry="2" />
<text  x="832.64" y="1759.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (2 samples, 0.03%)</title><rect x="392.6" y="1925" width="0.4" height="15.0" fill="rgb(249,186,32)" rx="2" ry="2" />
<text  x="395.61" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="980.0" y="2021" width="0.4" height="15.0" fill="rgb(212,140,29)" rx="2" ry="2" />
<text  x="983.02" y="2031.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="697.5" y="1685" width="0.2" height="15.0" fill="rgb(231,42,38)" rx="2" ry="2" />
<text  x="700.54" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="32.6" y="1989" width="0.4" height="15.0" fill="rgb(239,97,50)" rx="2" ry="2" />
<text  x="35.65" y="1999.5" ></text>
</g>
<g >
<title>__inet_inherit_port (1 samples, 0.02%)</title><rect x="691.2" y="1605" width="0.2" height="15.0" fill="rgb(247,183,37)" rx="2" ry="2" />
<text  x="694.18" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="159.6" y="1797" width="0.2" height="15.0" fill="rgb(248,123,38)" rx="2" ry="2" />
<text  x="162.59" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="160.0" y="1909" width="0.4" height="15.0" fill="rgb(239,157,42)" rx="2" ry="2" />
<text  x="162.98" y="1919.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="295.9" y="1749" width="0.4" height="15.0" fill="rgb(210,151,34)" rx="2" ry="2" />
<text  x="298.86" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="412.7" y="1749" width="0.2" height="15.0" fill="rgb(254,128,14)" rx="2" ry="2" />
<text  x="415.67" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="571.8" y="1717" width="0.2" height="15.0" fill="rgb(223,93,10)" rx="2" ry="2" />
<text  x="574.79" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="348.7" y="1989" width="0.8" height="15.0" fill="rgb(227,189,38)" rx="2" ry="2" />
<text  x="351.70" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="819.5" y="1701" width="0.6" height="15.0" fill="rgb(247,133,51)" rx="2" ry="2" />
<text  x="822.51" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="129.8" y="1989" width="0.4" height="15.0" fill="rgb(232,112,44)" rx="2" ry="2" />
<text  x="132.79" y="1999.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="912.5" y="1973" width="0.2" height="15.0" fill="rgb(249,109,31)" rx="2" ry="2" />
<text  x="915.48" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (2 samples, 0.03%)</title><rect x="651.6" y="2005" width="0.4" height="15.0" fill="rgb(217,30,14)" rx="2" ry="2" />
<text  x="654.65" y="2015.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.10%)</title><rect x="14.6" y="1989" width="1.2" height="15.0" fill="rgb(206,49,0)" rx="2" ry="2" />
<text  x="17.57" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="757.7" y="1701" width="0.2" height="15.0" fill="rgb(254,65,27)" rx="2" ry="2" />
<text  x="760.73" y="1711.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="874.3" y="1893" width="1.0" height="15.0" fill="rgb(252,110,10)" rx="2" ry="2" />
<text  x="877.34" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (6 samples, 0.10%)</title><rect x="984.8" y="2005" width="1.2" height="15.0" fill="rgb(239,25,47)" rx="2" ry="2" />
<text  x="987.79" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_xmit (270 samples, 4.55%)</title><rect x="285.1" y="1845" width="53.7" height="15.0" fill="rgb(224,218,20)" rx="2" ry="2" />
<text  x="288.13" y="1855.5" >tcp_w..</text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="300.0" y="1349" width="0.2" height="15.0" fill="rgb(230,124,50)" rx="2" ry="2" />
<text  x="303.03" y="1359.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (37 samples, 0.62%)</title><rect x="1109.5" y="1525" width="7.4" height="15.0" fill="rgb(222,222,27)" rx="2" ry="2" />
<text  x="1112.55" y="1535.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="386.2" y="1621" width="0.2" height="15.0" fill="rgb(207,95,16)" rx="2" ry="2" />
<text  x="389.25" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (3 samples, 0.05%)</title><rect x="167.7" y="2021" width="0.6" height="15.0" fill="rgb(229,143,46)" rx="2" ry="2" />
<text  x="170.73" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="70.6" y="1717" width="0.2" height="15.0" fill="rgb(236,7,34)" rx="2" ry="2" />
<text  x="73.59" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (3 samples, 0.05%)</title><rect x="704.1" y="1973" width="0.6" height="15.0" fill="rgb(210,179,50)" rx="2" ry="2" />
<text  x="707.09" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="604.8" y="1909" width="0.2" height="15.0" fill="rgb(233,220,24)" rx="2" ry="2" />
<text  x="607.77" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="278.2" y="1781" width="0.2" height="15.0" fill="rgb(218,148,27)" rx="2" ry="2" />
<text  x="281.18" y="1791.5" ></text>
</g>
<g >
<title>sys_getsockname (25 samples, 0.42%)</title><rect x="595.0" y="1893" width="5.0" height="15.0" fill="rgb(248,56,16)" rx="2" ry="2" />
<text  x="598.03" y="1903.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="182.2" y="1941" width="0.2" height="15.0" fill="rgb(231,174,0)" rx="2" ry="2" />
<text  x="185.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="489.2" y="1733" width="0.2" height="15.0" fill="rgb(223,60,1)" rx="2" ry="2" />
<text  x="492.15" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="259.7" y="1893" width="0.2" height="15.0" fill="rgb(214,174,46)" rx="2" ry="2" />
<text  x="262.71" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="402.7" y="1877" width="0.2" height="15.0" fill="rgb(240,83,1)" rx="2" ry="2" />
<text  x="405.74" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_free (16 samples, 0.27%)</title><rect x="1073.0" y="1893" width="3.2" height="15.0" fill="rgb(227,1,46)" rx="2" ry="2" />
<text  x="1075.99" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="467.1" y="1893" width="0.2" height="15.0" fill="rgb(228,91,9)" rx="2" ry="2" />
<text  x="470.10" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="507.0" y="1781" width="0.2" height="15.0" fill="rgb(216,26,45)" rx="2" ry="2" />
<text  x="510.03" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="412.7" y="1845" width="0.2" height="15.0" fill="rgb(214,72,47)" rx="2" ry="2" />
<text  x="415.67" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="441.5" y="1845" width="0.2" height="15.0" fill="rgb(244,70,32)" rx="2" ry="2" />
<text  x="444.47" y="1855.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="629.2" y="1957" width="0.2" height="15.0" fill="rgb(222,59,7)" rx="2" ry="2" />
<text  x="632.20" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1000.1" y="1989" width="0.2" height="15.0" fill="rgb(252,213,14)" rx="2" ry="2" />
<text  x="1003.09" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="163.4" y="2005" width="0.4" height="15.0" fill="rgb(249,12,35)" rx="2" ry="2" />
<text  x="166.36" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="465.1" y="1893" width="0.2" height="15.0" fill="rgb(248,170,43)" rx="2" ry="2" />
<text  x="468.11" y="1903.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="1125.8" y="1989" width="0.2" height="15.0" fill="rgb(247,208,23)" rx="2" ry="2" />
<text  x="1128.84" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="163.2" y="1765" width="0.2" height="15.0" fill="rgb(210,147,6)" rx="2" ry="2" />
<text  x="166.16" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="134.8" y="1909" width="0.2" height="15.0" fill="rgb(218,188,0)" rx="2" ry="2" />
<text  x="137.75" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1033.5" y="1909" width="0.2" height="15.0" fill="rgb(248,133,1)" rx="2" ry="2" />
<text  x="1036.46" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="281.4" y="1829" width="0.4" height="15.0" fill="rgb(244,64,31)" rx="2" ry="2" />
<text  x="284.36" y="1839.5" ></text>
</g>
<g >
<title>sock_poll (75 samples, 1.26%)</title><rect x="500.1" y="1909" width="14.9" height="15.0" fill="rgb(216,215,1)" rx="2" ry="2" />
<text  x="503.08" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="887.8" y="1765" width="0.2" height="15.0" fill="rgb(234,147,45)" rx="2" ry="2" />
<text  x="890.85" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (515 samples, 8.67%)</title><rect x="246.0" y="2005" width="102.3" height="15.0" fill="rgb(232,185,22)" rx="2" ry="2" />
<text  x="249.00" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.05%)</title><rect x="615.3" y="1893" width="0.6" height="15.0" fill="rgb(222,71,16)" rx="2" ry="2" />
<text  x="618.30" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="536.2" y="1733" width="0.2" height="15.0" fill="rgb(239,163,35)" rx="2" ry="2" />
<text  x="539.23" y="1743.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="885.3" y="1861" width="0.2" height="15.0" fill="rgb(244,158,1)" rx="2" ry="2" />
<text  x="888.27" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="412.7" y="1605" width="0.2" height="15.0" fill="rgb(215,12,31)" rx="2" ry="2" />
<text  x="415.67" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="489.7" y="1893" width="0.2" height="15.0" fill="rgb(210,103,47)" rx="2" ry="2" />
<text  x="492.75" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="59.7" y="1893" width="0.2" height="15.0" fill="rgb(230,52,26)" rx="2" ry="2" />
<text  x="62.66" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (53 samples, 0.89%)</title><rect x="607.2" y="2005" width="10.5" height="15.0" fill="rgb(241,1,24)" rx="2" ry="2" />
<text  x="610.15" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="130.4" y="1957" width="1.4" height="15.0" fill="rgb(224,120,34)" rx="2" ry="2" />
<text  x="133.38" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1011.0" y="1877" width="0.8" height="15.0" fill="rgb(220,25,12)" rx="2" ry="2" />
<text  x="1014.01" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="85.5" y="1925" width="0.2" height="15.0" fill="rgb(232,222,35)" rx="2" ry="2" />
<text  x="88.49" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="39.6" y="1957" width="0.2" height="15.0" fill="rgb(253,213,39)" rx="2" ry="2" />
<text  x="42.60" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (91 samples, 1.53%)</title><rect x="773.6" y="1573" width="18.1" height="15.0" fill="rgb(236,111,34)" rx="2" ry="2" />
<text  x="776.62" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="902.5" y="1893" width="0.2" height="15.0" fill="rgb(217,186,24)" rx="2" ry="2" />
<text  x="905.55" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="702.1" y="2021" width="0.2" height="15.0" fill="rgb(212,40,48)" rx="2" ry="2" />
<text  x="705.11" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="281.2" y="1621" width="0.2" height="15.0" fill="rgb(230,224,1)" rx="2" ry="2" />
<text  x="284.16" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="130.4" y="1941" width="0.8" height="15.0" fill="rgb(217,154,42)" rx="2" ry="2" />
<text  x="133.38" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="976.1" y="2037" width="0.1" height="15.0" fill="rgb(205,57,3)" rx="2" ry="2" />
<text  x="979.05" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1144.3" y="2005" width="0.2" height="15.0" fill="rgb(250,72,29)" rx="2" ry="2" />
<text  x="1147.31" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="281.2" y="1701" width="0.2" height="15.0" fill="rgb(223,37,42)" rx="2" ry="2" />
<text  x="284.16" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1102.8" y="1733" width="0.2" height="15.0" fill="rgb(214,27,26)" rx="2" ry="2" />
<text  x="1105.79" y="1743.5" ></text>
</g>
<g >
<title>__alloc_fd (8 samples, 0.13%)</title><rect x="371.5" y="1941" width="1.6" height="15.0" fill="rgb(239,78,49)" rx="2" ry="2" />
<text  x="374.55" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.14%)</title><rect x="105.8" y="373" width="13.5" height="15.0" fill="rgb(248,17,41)" rx="2" ry="2" />
<text  x="108.75" y="383.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="672.5" y="1637" width="0.2" height="15.0" fill="rgb(240,22,31)" rx="2" ry="2" />
<text  x="675.51" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="677.7" y="1925" width="0.2" height="15.0" fill="rgb(229,136,52)" rx="2" ry="2" />
<text  x="680.67" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="893.4" y="1877" width="0.2" height="15.0" fill="rgb(223,111,35)" rx="2" ry="2" />
<text  x="896.41" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (1 samples, 0.02%)</title><rect x="99.6" y="1989" width="0.2" height="15.0" fill="rgb(221,201,33)" rx="2" ry="2" />
<text  x="102.59" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="527.9" y="1957" width="0.2" height="15.0" fill="rgb(216,87,29)" rx="2" ry="2" />
<text  x="530.89" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="57.9" y="1909" width="0.4" height="15.0" fill="rgb(219,127,21)" rx="2" ry="2" />
<text  x="60.88" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="958.6" y="2005" width="0.2" height="15.0" fill="rgb(241,211,49)" rx="2" ry="2" />
<text  x="961.57" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="497.5" y="1877" width="0.4" height="15.0" fill="rgb(244,168,37)" rx="2" ry="2" />
<text  x="500.49" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="326.7" y="1717" width="0.4" height="15.0" fill="rgb(217,139,40)" rx="2" ry="2" />
<text  x="329.65" y="1727.5" ></text>
</g>
<g >
<title>mod_timer (33 samples, 0.56%)</title><rect x="330.8" y="1765" width="6.6" height="15.0" fill="rgb(251,40,5)" rx="2" ry="2" />
<text  x="333.82" y="1775.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="484.0" y="1813" width="0.2" height="15.0" fill="rgb(208,104,51)" rx="2" ry="2" />
<text  x="486.99" y="1823.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="68.6" y="1845" width="0.2" height="15.0" fill="rgb(221,142,6)" rx="2" ry="2" />
<text  x="71.60" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (5 samples, 0.08%)</title><rect x="572.8" y="1989" width="1.0" height="15.0" fill="rgb(246,119,16)" rx="2" ry="2" />
<text  x="575.78" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="233.7" y="1941" width="0.8" height="15.0" fill="rgb(231,95,22)" rx="2" ry="2" />
<text  x="236.68" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1148.7" y="1941" width="0.2" height="15.0" fill="rgb(223,221,10)" rx="2" ry="2" />
<text  x="1151.68" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.03%)</title><rect x="163.0" y="1957" width="0.4" height="15.0" fill="rgb(205,118,47)" rx="2" ry="2" />
<text  x="165.96" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="480.4" y="1925" width="0.2" height="15.0" fill="rgb(228,34,49)" rx="2" ry="2" />
<text  x="483.41" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="691.2" y="1701" width="0.2" height="15.0" fill="rgb(206,186,45)" rx="2" ry="2" />
<text  x="694.18" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="618.1" y="1861" width="0.2" height="15.0" fill="rgb(238,37,45)" rx="2" ry="2" />
<text  x="621.08" y="1871.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="349.3" y="1733" width="0.2" height="15.0" fill="rgb(250,50,51)" rx="2" ry="2" />
<text  x="352.30" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="622.8" y="2005" width="0.4" height="15.0" fill="rgb(222,224,45)" rx="2" ry="2" />
<text  x="625.85" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="74.4" y="1733" width="0.2" height="15.0" fill="rgb(229,111,25)" rx="2" ry="2" />
<text  x="77.36" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="53.5" y="1925" width="0.2" height="15.0" fill="rgb(224,22,53)" rx="2" ry="2" />
<text  x="56.51" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="417.0" y="1749" width="0.2" height="15.0" fill="rgb(251,136,28)" rx="2" ry="2" />
<text  x="420.04" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="623.8" y="2005" width="1.2" height="15.0" fill="rgb(207,192,2)" rx="2" ry="2" />
<text  x="626.84" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (9 samples, 0.15%)</title><rect x="1119.7" y="1925" width="1.8" height="15.0" fill="rgb(237,175,18)" rx="2" ry="2" />
<text  x="1122.68" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (4 samples, 0.07%)</title><rect x="654.4" y="2021" width="0.8" height="15.0" fill="rgb(217,104,46)" rx="2" ry="2" />
<text  x="657.43" y="2031.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1139.9" y="1749" width="0.2" height="15.0" fill="rgb(249,42,29)" rx="2" ry="2" />
<text  x="1142.94" y="1759.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="488.0" y="1909" width="0.2" height="15.0" fill="rgb(207,210,9)" rx="2" ry="2" />
<text  x="490.96" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="622.4" y="2021" width="1.0" height="15.0" fill="rgb(248,199,26)" rx="2" ry="2" />
<text  x="625.45" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="14.4" y="1877" width="0.2" height="15.0" fill="rgb(214,34,4)" rx="2" ry="2" />
<text  x="17.37" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1174.7" y="1973" width="0.2" height="15.0" fill="rgb(228,82,20)" rx="2" ry="2" />
<text  x="1177.70" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="151.0" y="1909" width="0.2" height="15.0" fill="rgb(254,186,0)" rx="2" ry="2" />
<text  x="154.04" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::socketToFd (2 samples, 0.03%)</title><rect x="28.1" y="1973" width="0.4" height="15.0" fill="rgb(232,165,6)" rx="2" ry="2" />
<text  x="31.08" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="848.7" y="1749" width="0.2" height="15.0" fill="rgb(228,57,53)" rx="2" ry="2" />
<text  x="851.71" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="174.5" y="2021" width="0.2" height="15.0" fill="rgb(207,111,51)" rx="2" ry="2" />
<text  x="177.48" y="2031.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="116.1" y="69" width="0.4" height="15.0" fill="rgb(238,37,48)" rx="2" ry="2" />
<text  x="119.08" y="79.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="807.6" y="1685" width="0.2" height="15.0" fill="rgb(228,56,21)" rx="2" ry="2" />
<text  x="810.59" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="513.4" y="1605" width="0.2" height="15.0" fill="rgb(233,196,28)" rx="2" ry="2" />
<text  x="516.39" y="1615.5" ></text>
</g>
<g >
<title>ip_queue_xmit (51 samples, 0.86%)</title><rect x="1107.8" y="1861" width="10.1" height="15.0" fill="rgb(218,101,10)" rx="2" ry="2" />
<text  x="1110.76" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (67 samples, 1.13%)</title><rect x="105.8" y="101" width="13.3" height="15.0" fill="rgb(236,184,13)" rx="2" ry="2" />
<text  x="108.75" y="111.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="556.7" y="1845" width="0.2" height="15.0" fill="rgb(210,89,34)" rx="2" ry="2" />
<text  x="559.69" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="388.0" y="1861" width="0.2" height="15.0" fill="rgb(210,187,30)" rx="2" ry="2" />
<text  x="391.04" y="1871.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="484.0" y="1829" width="0.2" height="15.0" fill="rgb(253,183,49)" rx="2" ry="2" />
<text  x="486.99" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="417.2" y="1685" width="0.2" height="15.0" fill="rgb(207,47,31)" rx="2" ry="2" />
<text  x="420.24" y="1695.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="171.7" y="1685" width="0.2" height="15.0" fill="rgb(226,222,25)" rx="2" ry="2" />
<text  x="174.70" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="713.0" y="1797" width="0.2" height="15.0" fill="rgb(251,109,18)" rx="2" ry="2" />
<text  x="716.03" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="545.2" y="1845" width="0.2" height="15.0" fill="rgb(241,68,32)" rx="2" ry="2" />
<text  x="548.17" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="74.4" y="1781" width="0.2" height="15.0" fill="rgb(210,229,31)" rx="2" ry="2" />
<text  x="77.36" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="118.5" y="53" width="0.2" height="15.0" fill="rgb(233,127,13)" rx="2" ry="2" />
<text  x="121.46" y="63.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="565.0" y="1749" width="0.2" height="15.0" fill="rgb(240,76,35)" rx="2" ry="2" />
<text  x="568.04" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="61.1" y="1861" width="0.4" height="15.0" fill="rgb(209,33,39)" rx="2" ry="2" />
<text  x="64.05" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="153.4" y="1877" width="1.0" height="15.0" fill="rgb(209,2,38)" rx="2" ry="2" />
<text  x="156.43" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="896.6" y="1813" width="0.2" height="15.0" fill="rgb(241,59,2)" rx="2" ry="2" />
<text  x="899.59" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="321.9" y="1701" width="0.4" height="15.0" fill="rgb(208,71,3)" rx="2" ry="2" />
<text  x="324.89" y="1711.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.13%)</title><rect x="12.8" y="1893" width="1.6" height="15.0" fill="rgb(214,98,36)" rx="2" ry="2" />
<text  x="15.78" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="893.4" y="1941" width="0.2" height="15.0" fill="rgb(232,216,40)" rx="2" ry="2" />
<text  x="896.41" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="600.8" y="1925" width="0.2" height="15.0" fill="rgb(232,187,43)" rx="2" ry="2" />
<text  x="603.79" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="28.7" y="1989" width="2.0" height="15.0" fill="rgb(252,30,20)" rx="2" ry="2" />
<text  x="31.67" y="1999.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="848.7" y="1573" width="0.2" height="15.0" fill="rgb(251,6,38)" rx="2" ry="2" />
<text  x="851.71" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="866.4" y="1893" width="0.2" height="15.0" fill="rgb(241,79,43)" rx="2" ry="2" />
<text  x="869.39" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1027.3" y="1909" width="0.4" height="15.0" fill="rgb(253,123,39)" rx="2" ry="2" />
<text  x="1030.30" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="565.0" y="1733" width="0.2" height="15.0" fill="rgb(208,90,54)" rx="2" ry="2" />
<text  x="568.04" y="1743.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="824.9" y="1717" width="0.2" height="15.0" fill="rgb(247,9,48)" rx="2" ry="2" />
<text  x="827.88" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="988.6" y="1973" width="0.4" height="15.0" fill="rgb(216,50,22)" rx="2" ry="2" />
<text  x="991.57" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.70%)</title><rect x="104.4" y="1829" width="20.0" height="15.0" fill="rgb(239,173,15)" rx="2" ry="2" />
<text  x="107.36" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="919.4" y="2005" width="0.2" height="15.0" fill="rgb(245,163,40)" rx="2" ry="2" />
<text  x="922.43" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="738.3" y="1653" width="0.2" height="15.0" fill="rgb(233,66,6)" rx="2" ry="2" />
<text  x="741.26" y="1663.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="516.0" y="1909" width="0.2" height="15.0" fill="rgb(216,123,13)" rx="2" ry="2" />
<text  x="518.97" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="879.1" y="1957" width="0.2" height="15.0" fill="rgb(238,30,20)" rx="2" ry="2" />
<text  x="882.11" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="497.7" y="1829" width="0.2" height="15.0" fill="rgb(252,80,26)" rx="2" ry="2" />
<text  x="500.69" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="135.5" y="1925" width="0.2" height="15.0" fill="rgb(210,143,40)" rx="2" ry="2" />
<text  x="138.55" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="819.3" y="1589" width="0.2" height="15.0" fill="rgb(224,64,16)" rx="2" ry="2" />
<text  x="822.31" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="22.9" y="1781" width="0.2" height="15.0" fill="rgb(238,32,27)" rx="2" ry="2" />
<text  x="25.91" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="968.5" y="2021" width="0.8" height="15.0" fill="rgb(241,82,49)" rx="2" ry="2" />
<text  x="971.50" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="543.6" y="1989" width="0.2" height="15.0" fill="rgb(241,135,22)" rx="2" ry="2" />
<text  x="546.58" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="513.4" y="1701" width="0.2" height="15.0" fill="rgb(240,207,23)" rx="2" ry="2" />
<text  x="516.39" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="105.0" y="1541" width="16.4" height="15.0" fill="rgb(252,88,53)" rx="2" ry="2" />
<text  x="107.96" y="1551.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="356.5" y="1781" width="0.1" height="15.0" fill="rgb(213,74,23)" rx="2" ry="2" />
<text  x="359.45" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (279 samples, 4.70%)</title><rect x="361.0" y="2021" width="55.4" height="15.0" fill="rgb(206,28,11)" rx="2" ry="2" />
<text  x="364.02" y="2031.5" >entry..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="281.2" y="1813" width="0.2" height="15.0" fill="rgb(208,12,16)" rx="2" ry="2" />
<text  x="284.16" y="1823.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="618.3" y="1941" width="0.2" height="15.0" fill="rgb(250,28,42)" rx="2" ry="2" />
<text  x="621.28" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="55.1" y="1893" width="0.4" height="15.0" fill="rgb(252,163,54)" rx="2" ry="2" />
<text  x="58.09" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="63.0" y="1877" width="0.2" height="15.0" fill="rgb(226,9,34)" rx="2" ry="2" />
<text  x="66.04" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="1141" width="14.7" height="15.0" fill="rgb(253,104,11)" rx="2" ry="2" />
<text  x="108.35" y="1151.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1161.8" y="1909" width="0.2" height="15.0" fill="rgb(236,114,37)" rx="2" ry="2" />
<text  x="1164.79" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1035.4" y="2037" width="0.2" height="15.0" fill="rgb(217,30,4)" rx="2" ry="2" />
<text  x="1038.45" y="2047.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="177.9" y="1829" width="0.2" height="15.0" fill="rgb(209,84,52)" rx="2" ry="2" />
<text  x="180.86" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="120.1" y="1189" width="0.2" height="15.0" fill="rgb(229,150,21)" rx="2" ry="2" />
<text  x="123.05" y="1199.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="893.4" y="1845" width="0.2" height="15.0" fill="rgb(221,42,9)" rx="2" ry="2" />
<text  x="896.41" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.32%)</title><rect x="963.9" y="2005" width="3.8" height="15.0" fill="rgb(216,214,18)" rx="2" ry="2" />
<text  x="966.93" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1012.2" y="1893" width="0.2" height="15.0" fill="rgb(205,152,50)" rx="2" ry="2" />
<text  x="1015.21" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="60.1" y="1925" width="0.2" height="15.0" fill="rgb(245,212,33)" rx="2" ry="2" />
<text  x="63.06" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="339.4" y="1813" width="0.2" height="15.0" fill="rgb(228,211,51)" rx="2" ry="2" />
<text  x="342.37" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="660.4" y="1957" width="2.0" height="15.0" fill="rgb(234,145,1)" rx="2" ry="2" />
<text  x="663.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="963.5" y="2037" width="0.2" height="15.0" fill="rgb(211,41,3)" rx="2" ry="2" />
<text  x="966.54" y="2047.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="235.7" y="1669" width="0.2" height="15.0" fill="rgb(206,11,38)" rx="2" ry="2" />
<text  x="238.67" y="1679.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1072.6" y="1893" width="0.4" height="15.0" fill="rgb(250,221,37)" rx="2" ry="2" />
<text  x="1075.60" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="281.2" y="1573" width="0.2" height="15.0" fill="rgb(217,107,26)" rx="2" ry="2" />
<text  x="284.16" y="1583.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1082.9" y="1765" width="0.2" height="15.0" fill="rgb(238,67,7)" rx="2" ry="2" />
<text  x="1085.93" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1161.8" y="1957" width="0.2" height="15.0" fill="rgb(218,187,13)" rx="2" ry="2" />
<text  x="1164.79" y="1967.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="269.6" y="1861" width="0.4" height="15.0" fill="rgb(230,115,41)" rx="2" ry="2" />
<text  x="272.64" y="1871.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="356.3" y="2037" width="0.2" height="15.0" fill="rgb(244,14,16)" rx="2" ry="2" />
<text  x="359.25" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="532.1" y="1973" width="0.4" height="15.0" fill="rgb(244,217,11)" rx="2" ry="2" />
<text  x="535.06" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1128.8" y="1797" width="0.2" height="15.0" fill="rgb(222,97,8)" rx="2" ry="2" />
<text  x="1131.81" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="906.9" y="1957" width="0.2" height="15.0" fill="rgb(233,169,39)" rx="2" ry="2" />
<text  x="909.92" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="748.8" y="1621" width="0.2" height="15.0" fill="rgb(234,50,19)" rx="2" ry="2" />
<text  x="751.79" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="32.4" y="1957" width="0.2" height="15.0" fill="rgb(248,68,32)" rx="2" ry="2" />
<text  x="35.45" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="535.8" y="1845" width="0.2" height="15.0" fill="rgb(228,174,50)" rx="2" ry="2" />
<text  x="538.84" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="386.2" y="1861" width="0.2" height="15.0" fill="rgb(219,1,10)" rx="2" ry="2" />
<text  x="389.25" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="252.0" y="1941" width="0.8" height="15.0" fill="rgb(208,157,11)" rx="2" ry="2" />
<text  x="254.96" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="699.7" y="2021" width="0.2" height="15.0" fill="rgb(218,156,11)" rx="2" ry="2" />
<text  x="702.72" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="1117.1" y="1573" width="0.2" height="15.0" fill="rgb(239,149,4)" rx="2" ry="2" />
<text  x="1120.09" y="1583.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="868.4" y="1989" width="0.2" height="15.0" fill="rgb(214,168,35)" rx="2" ry="2" />
<text  x="871.38" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="906.5" y="1925" width="0.4" height="15.0" fill="rgb(208,15,22)" rx="2" ry="2" />
<text  x="909.52" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="895.2" y="1861" width="0.4" height="15.0" fill="rgb(213,155,2)" rx="2" ry="2" />
<text  x="898.20" y="1871.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (2 samples, 0.03%)</title><rect x="878.1" y="1909" width="0.4" height="15.0" fill="rgb(223,53,53)" rx="2" ry="2" />
<text  x="881.11" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="126.4" y="1941" width="0.2" height="15.0" fill="rgb(217,202,54)" rx="2" ry="2" />
<text  x="129.41" y="1951.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (4 samples, 0.07%)</title><rect x="1170.1" y="2021" width="0.8" height="15.0" fill="rgb(228,128,17)" rx="2" ry="2" />
<text  x="1173.13" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="281.6" y="1765" width="0.2" height="15.0" fill="rgb(251,63,8)" rx="2" ry="2" />
<text  x="284.56" y="1775.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (2 samples, 0.03%)</title><rect x="735.3" y="1637" width="0.4" height="15.0" fill="rgb(231,85,18)" rx="2" ry="2" />
<text  x="738.28" y="1647.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="490.1" y="2005" width="0.2" height="15.0" fill="rgb(225,204,34)" rx="2" ry="2" />
<text  x="493.14" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="573.8" y="2005" width="0.2" height="15.0" fill="rgb(215,65,23)" rx="2" ry="2" />
<text  x="576.78" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (20 samples, 0.34%)</title><rect x="928.6" y="1957" width="3.9" height="15.0" fill="rgb(248,103,9)" rx="2" ry="2" />
<text  x="931.57" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="28.5" y="1989" width="0.2" height="15.0" fill="rgb(208,145,46)" rx="2" ry="2" />
<text  x="31.47" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (10 samples, 0.17%)</title><rect x="541.2" y="1989" width="2.0" height="15.0" fill="rgb(212,130,26)" rx="2" ry="2" />
<text  x="544.20" y="1999.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="58.1" y="1893" width="0.2" height="15.0" fill="rgb(243,101,44)" rx="2" ry="2" />
<text  x="61.07" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="550.1" y="1909" width="0.2" height="15.0" fill="rgb(238,122,36)" rx="2" ry="2" />
<text  x="553.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="299.0" y="1445" width="0.2" height="15.0" fill="rgb(205,14,8)" rx="2" ry="2" />
<text  x="302.04" y="1455.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (4 samples, 0.07%)</title><rect x="648.3" y="1989" width="0.8" height="15.0" fill="rgb(215,37,51)" rx="2" ry="2" />
<text  x="651.27" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.4" y="1829" width="0.2" height="15.0" fill="rgb(234,218,6)" rx="2" ry="2" />
<text  x="127.42" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="299.6" y="1525" width="0.6" height="15.0" fill="rgb(218,192,33)" rx="2" ry="2" />
<text  x="302.64" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (179 samples, 3.01%)</title><rect x="925.6" y="2037" width="35.6" height="15.0" fill="rgb(244,118,9)" rx="2" ry="2" />
<text  x="928.59" y="2047.5" >fac..</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (4 samples, 0.07%)</title><rect x="77.3" y="1941" width="0.8" height="15.0" fill="rgb(230,184,13)" rx="2" ry="2" />
<text  x="80.34" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (47 samples, 0.79%)</title><rect x="607.2" y="1957" width="9.3" height="15.0" fill="rgb(215,28,10)" rx="2" ry="2" />
<text  x="610.15" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="233.7" y="1813" width="0.8" height="15.0" fill="rgb(253,117,38)" rx="2" ry="2" />
<text  x="236.68" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="907.9" y="1989" width="0.2" height="15.0" fill="rgb(251,174,37)" rx="2" ry="2" />
<text  x="910.91" y="1999.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="397.0" y="1909" width="0.2" height="15.0" fill="rgb(220,202,49)" rx="2" ry="2" />
<text  x="399.98" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="655.6" y="2005" width="0.2" height="15.0" fill="rgb(217,9,20)" rx="2" ry="2" />
<text  x="658.62" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="901.6" y="1941" width="0.2" height="15.0" fill="rgb(212,90,25)" rx="2" ry="2" />
<text  x="904.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (3 samples, 0.05%)</title><rect x="84.9" y="1925" width="0.6" height="15.0" fill="rgb(253,216,22)" rx="2" ry="2" />
<text  x="87.89" y="1935.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="340.8" y="1861" width="0.2" height="15.0" fill="rgb(212,170,30)" rx="2" ry="2" />
<text  x="343.76" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="157.8" y="1781" width="0.2" height="15.0" fill="rgb(243,56,49)" rx="2" ry="2" />
<text  x="160.80" y="1791.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="401.5" y="1877" width="0.4" height="15.0" fill="rgb(248,10,9)" rx="2" ry="2" />
<text  x="404.55" y="1887.5" ></text>
</g>
<g >
<title>tcp_synack_rtt_meas (1 samples, 0.02%)</title><rect x="697.5" y="1701" width="0.2" height="15.0" fill="rgb(242,20,39)" rx="2" ry="2" />
<text  x="700.54" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="417.0" y="1925" width="0.4" height="15.0" fill="rgb(208,183,4)" rx="2" ry="2" />
<text  x="420.04" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="262.3" y="1829" width="0.2" height="15.0" fill="rgb(206,207,19)" rx="2" ry="2" />
<text  x="265.29" y="1839.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (5 samples, 0.08%)</title><rect x="334.2" y="1749" width="1.0" height="15.0" fill="rgb(214,112,11)" rx="2" ry="2" />
<text  x="337.20" y="1759.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="600.4" y="1893" width="0.2" height="15.0" fill="rgb(237,225,26)" rx="2" ry="2" />
<text  x="603.40" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="64.8" y="1941" width="0.2" height="15.0" fill="rgb(225,187,8)" rx="2" ry="2" />
<text  x="67.83" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="490.1" y="2021" width="0.2" height="15.0" fill="rgb(214,149,16)" rx="2" ry="2" />
<text  x="493.14" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="65.4" y="1877" width="0.4" height="15.0" fill="rgb(229,189,4)" rx="2" ry="2" />
<text  x="68.42" y="1887.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="334.0" y="1413" width="0.2" height="15.0" fill="rgb(240,189,51)" rx="2" ry="2" />
<text  x="337.00" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="892.4" y="1797" width="0.2" height="15.0" fill="rgb(211,50,45)" rx="2" ry="2" />
<text  x="895.42" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="713.0" y="1893" width="0.2" height="15.0" fill="rgb(238,46,29)" rx="2" ry="2" />
<text  x="716.03" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="569.6" y="1957" width="0.2" height="15.0" fill="rgb(252,114,53)" rx="2" ry="2" />
<text  x="572.61" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="373.7" y="1829" width="0.2" height="15.0" fill="rgb(240,147,34)" rx="2" ry="2" />
<text  x="376.73" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="296.1" y="1685" width="0.2" height="15.0" fill="rgb(208,127,7)" rx="2" ry="2" />
<text  x="299.06" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="533.3" y="1973" width="0.3" height="15.0" fill="rgb(207,198,36)" rx="2" ry="2" />
<text  x="536.25" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (228 samples, 3.84%)</title><rect x="536.6" y="2037" width="45.3" height="15.0" fill="rgb(240,12,54)" rx="2" ry="2" />
<text  x="539.63" y="2047.5" >face..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="960.6" y="1957" width="0.2" height="15.0" fill="rgb(210,81,33)" rx="2" ry="2" />
<text  x="963.56" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="843.4" y="1925" width="1.7" height="15.0" fill="rgb(224,90,14)" rx="2" ry="2" />
<text  x="846.35" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="534.6" y="2021" width="2.0" height="15.0" fill="rgb(228,30,52)" rx="2" ry="2" />
<text  x="537.64" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (5 samples, 0.08%)</title><rect x="575.6" y="1973" width="1.0" height="15.0" fill="rgb(219,167,49)" rx="2" ry="2" />
<text  x="578.57" y="1983.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="740.6" y="1765" width="0.2" height="15.0" fill="rgb(228,187,47)" rx="2" ry="2" />
<text  x="743.65" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (14 samples, 0.24%)</title><rect x="82.9" y="1941" width="2.8" height="15.0" fill="rgb(222,142,15)" rx="2" ry="2" />
<text  x="85.91" y="1951.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="726.3" y="1781" width="0.4" height="15.0" fill="rgb(246,208,13)" rx="2" ry="2" />
<text  x="729.34" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (7 samples, 0.12%)</title><rect x="518.4" y="1989" width="1.3" height="15.0" fill="rgb(243,156,9)" rx="2" ry="2" />
<text  x="521.35" y="1999.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="73.0" y="1605" width="0.2" height="15.0" fill="rgb(219,28,53)" rx="2" ry="2" />
<text  x="75.97" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (27 samples, 0.45%)</title><rect x="994.5" y="1957" width="5.4" height="15.0" fill="rgb(222,4,50)" rx="2" ry="2" />
<text  x="997.53" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="631.2" y="1989" width="0.2" height="15.0" fill="rgb(214,154,28)" rx="2" ry="2" />
<text  x="634.19" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="72.4" y="1925" width="0.2" height="15.0" fill="rgb(221,139,36)" rx="2" ry="2" />
<text  x="75.38" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="514.8" y="1685" width="0.2" height="15.0" fill="rgb(243,58,17)" rx="2" ry="2" />
<text  x="517.78" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="1141.1" y="2021" width="0.2" height="15.0" fill="rgb(232,118,33)" rx="2" ry="2" />
<text  x="1144.13" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="918.0" y="2005" width="0.6" height="15.0" fill="rgb(238,187,51)" rx="2" ry="2" />
<text  x="921.04" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="441.5" y="1877" width="0.2" height="15.0" fill="rgb(233,75,26)" rx="2" ry="2" />
<text  x="444.47" y="1887.5" ></text>
</g>
<g >
<title>event_add_nolock_ (3 samples, 0.05%)</title><rect x="1137.4" y="2053" width="0.6" height="15.0" fill="rgb(212,116,39)" rx="2" ry="2" />
<text  x="1140.36" y="2063.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="547.6" y="1957" width="0.2" height="15.0" fill="rgb(210,170,27)" rx="2" ry="2" />
<text  x="550.56" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="62.8" y="1909" width="0.2" height="15.0" fill="rgb(206,42,32)" rx="2" ry="2" />
<text  x="65.84" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="978.4" y="2037" width="0.2" height="15.0" fill="rgb(251,140,40)" rx="2" ry="2" />
<text  x="981.43" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="393.2" y="1925" width="0.2" height="15.0" fill="rgb(214,29,51)" rx="2" ry="2" />
<text  x="396.20" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="578.1" y="1989" width="1.2" height="15.0" fill="rgb(208,122,0)" rx="2" ry="2" />
<text  x="581.15" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (63 samples, 1.06%)</title><rect x="1152.5" y="2021" width="12.5" height="15.0" fill="rgb(218,151,35)" rx="2" ry="2" />
<text  x="1155.45" y="2031.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="337.8" y="1829" width="0.2" height="15.0" fill="rgb(216,93,21)" rx="2" ry="2" />
<text  x="340.78" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="943.5" y="1941" width="0.2" height="15.0" fill="rgb(209,119,32)" rx="2" ry="2" />
<text  x="946.47" y="1951.5" ></text>
</g>
<g >
<title>__fget (15 samples, 0.25%)</title><rect x="1122.7" y="1925" width="2.9" height="15.0" fill="rgb(227,169,10)" rx="2" ry="2" />
<text  x="1125.66" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1008.0" y="1973" width="0.2" height="15.0" fill="rgb(245,52,38)" rx="2" ry="2" />
<text  x="1011.03" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="252.2" y="1861" width="0.6" height="15.0" fill="rgb(227,124,22)" rx="2" ry="2" />
<text  x="255.16" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1011.0" y="1957" width="0.8" height="15.0" fill="rgb(240,53,25)" rx="2" ry="2" />
<text  x="1014.01" y="1967.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (241 samples, 4.06%)</title><rect x="441.7" y="1989" width="47.8" height="15.0" fill="rgb(239,108,29)" rx="2" ry="2" />
<text  x="444.67" y="1999.5" >sys_..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="291.1" y="1685" width="0.2" height="15.0" fill="rgb(222,144,23)" rx="2" ry="2" />
<text  x="294.09" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (12 samples, 0.20%)</title><rect x="548.0" y="1957" width="2.3" height="15.0" fill="rgb(209,116,10)" rx="2" ry="2" />
<text  x="550.95" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="957.8" y="1989" width="0.4" height="15.0" fill="rgb(207,45,42)" rx="2" ry="2" />
<text  x="960.77" y="1999.5" ></text>
</g>
<g >
<title>ip_send_check (16 samples, 0.27%)</title><rect x="766.5" y="1621" width="3.1" height="15.0" fill="rgb(245,167,22)" rx="2" ry="2" />
<text  x="769.47" y="1631.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.15%)</title><rect x="10.6" y="1877" width="1.8" height="15.0" fill="rgb(244,163,17)" rx="2" ry="2" />
<text  x="13.60" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="141.1" y="1813" width="0.2" height="15.0" fill="rgb(224,229,16)" rx="2" ry="2" />
<text  x="144.11" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="862.4" y="1941" width="0.2" height="15.0" fill="rgb(217,160,7)" rx="2" ry="2" />
<text  x="865.42" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (5 samples, 0.08%)</title><rect x="835.8" y="1925" width="1.0" height="15.0" fill="rgb(225,180,15)" rx="2" ry="2" />
<text  x="838.80" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="513.4" y="1845" width="0.2" height="15.0" fill="rgb(239,209,1)" rx="2" ry="2" />
<text  x="516.39" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="373.7" y="1669" width="0.2" height="15.0" fill="rgb(250,208,46)" rx="2" ry="2" />
<text  x="376.73" y="1679.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="516.0" y="1877" width="0.2" height="15.0" fill="rgb(250,169,40)" rx="2" ry="2" />
<text  x="518.97" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1125.2" y="1909" width="0.4" height="15.0" fill="rgb(207,192,29)" rx="2" ry="2" />
<text  x="1128.24" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="160.2" y="1797" width="0.2" height="15.0" fill="rgb(242,161,0)" rx="2" ry="2" />
<text  x="163.18" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="713.0" y="1765" width="0.2" height="15.0" fill="rgb(227,103,17)" rx="2" ry="2" />
<text  x="716.03" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="707.3" y="1925" width="0.2" height="15.0" fill="rgb(231,188,51)" rx="2" ry="2" />
<text  x="710.27" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="271.2" y="1845" width="0.2" height="15.0" fill="rgb(241,166,4)" rx="2" ry="2" />
<text  x="274.23" y="1855.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="698.7" y="1957" width="0.2" height="15.0" fill="rgb(249,121,47)" rx="2" ry="2" />
<text  x="701.73" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="295.1" y="1749" width="0.2" height="15.0" fill="rgb(213,33,10)" rx="2" ry="2" />
<text  x="298.07" y="1759.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="125.6" y="1781" width="0.8" height="15.0" fill="rgb(210,9,38)" rx="2" ry="2" />
<text  x="128.62" y="1791.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="233.7" y="1861" width="0.8" height="15.0" fill="rgb(231,176,16)" rx="2" ry="2" />
<text  x="236.68" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="104.6" y="1717" width="18.4" height="15.0" fill="rgb(247,80,48)" rx="2" ry="2" />
<text  x="107.56" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="839.2" y="1909" width="0.2" height="15.0" fill="rgb(250,37,46)" rx="2" ry="2" />
<text  x="842.18" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="574.2" y="1957" width="0.2" height="15.0" fill="rgb(251,108,0)" rx="2" ry="2" />
<text  x="577.18" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="987.6" y="1989" width="0.2" height="15.0" fill="rgb(241,24,37)" rx="2" ry="2" />
<text  x="990.57" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="534.0" y="1973" width="0.4" height="15.0" fill="rgb(206,22,15)" rx="2" ry="2" />
<text  x="537.05" y="1983.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="489.2" y="1701" width="0.2" height="15.0" fill="rgb(212,171,0)" rx="2" ry="2" />
<text  x="492.15" y="1711.5" ></text>
</g>
<g >
<title>sys_close (27 samples, 0.45%)</title><rect x="825.3" y="1861" width="5.3" height="15.0" fill="rgb(227,178,24)" rx="2" ry="2" />
<text  x="828.27" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="73.0" y="1861" width="0.2" height="15.0" fill="rgb(209,12,10)" rx="2" ry="2" />
<text  x="75.97" y="1871.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="1059.7" y="1749" width="0.2" height="15.0" fill="rgb(244,218,10)" rx="2" ry="2" />
<text  x="1062.68" y="1759.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="838.6" y="1909" width="0.4" height="15.0" fill="rgb(239,1,15)" rx="2" ry="2" />
<text  x="841.58" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="296.1" y="1717" width="0.2" height="15.0" fill="rgb(249,136,24)" rx="2" ry="2" />
<text  x="299.06" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="507.0" y="1717" width="0.2" height="15.0" fill="rgb(227,47,7)" rx="2" ry="2" />
<text  x="510.03" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="639.9" y="1957" width="0.2" height="15.0" fill="rgb(210,157,26)" rx="2" ry="2" />
<text  x="642.93" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1059.7" y="1973" width="0.4" height="15.0" fill="rgb(208,162,1)" rx="2" ry="2" />
<text  x="1062.68" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="145.9" y="1877" width="0.4" height="15.0" fill="rgb(246,192,48)" rx="2" ry="2" />
<text  x="148.88" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (46 samples, 0.77%)</title><rect x="607.2" y="1941" width="9.1" height="15.0" fill="rgb(213,201,26)" rx="2" ry="2" />
<text  x="610.15" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="105.4" y="981" width="14.7" height="15.0" fill="rgb(220,59,13)" rx="2" ry="2" />
<text  x="108.35" y="991.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1717" width="0.2" height="15.0" fill="rgb(211,149,39)" rx="2" ry="2" />
<text  x="238.67" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="843.9" y="1909" width="0.6" height="15.0" fill="rgb(212,71,3)" rx="2" ry="2" />
<text  x="846.95" y="1919.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="466.9" y="1861" width="0.2" height="15.0" fill="rgb(243,37,5)" rx="2" ry="2" />
<text  x="469.90" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1033.5" y="1861" width="0.2" height="15.0" fill="rgb(246,84,6)" rx="2" ry="2" />
<text  x="1036.46" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (3 samples, 0.05%)</title><rect x="656.4" y="2037" width="0.6" height="15.0" fill="rgb(209,7,48)" rx="2" ry="2" />
<text  x="659.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="1034.5" y="2037" width="0.2" height="15.0" fill="rgb(246,142,48)" rx="2" ry="2" />
<text  x="1037.45" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="158.6" y="1829" width="0.2" height="15.0" fill="rgb(248,55,20)" rx="2" ry="2" />
<text  x="161.59" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (5 samples, 0.08%)</title><rect x="299.4" y="1637" width="1.0" height="15.0" fill="rgb(237,79,12)" rx="2" ry="2" />
<text  x="302.44" y="1647.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="740.4" y="1765" width="0.2" height="15.0" fill="rgb(218,162,52)" rx="2" ry="2" />
<text  x="743.45" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="321.9" y="1669" width="0.4" height="15.0" fill="rgb(219,74,0)" rx="2" ry="2" />
<text  x="324.89" y="1679.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="296.1" y="1701" width="0.2" height="15.0" fill="rgb(237,48,21)" rx="2" ry="2" />
<text  x="299.06" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="791.9" y="1605" width="0.2" height="15.0" fill="rgb(216,15,22)" rx="2" ry="2" />
<text  x="794.90" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1059.7" y="1845" width="0.4" height="15.0" fill="rgb(235,111,20)" rx="2" ry="2" />
<text  x="1062.68" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="625.8" y="1957" width="0.2" height="15.0" fill="rgb(239,157,4)" rx="2" ry="2" />
<text  x="628.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (2 samples, 0.03%)</title><rect x="625.2" y="2037" width="0.4" height="15.0" fill="rgb(208,19,16)" rx="2" ry="2" />
<text  x="628.23" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="60.1" y="1893" width="0.2" height="15.0" fill="rgb(208,0,28)" rx="2" ry="2" />
<text  x="63.06" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="81.5" y="1877" width="0.2" height="15.0" fill="rgb(217,87,51)" rx="2" ry="2" />
<text  x="84.52" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (12 samples, 0.20%)</title><rect x="850.5" y="1925" width="2.4" height="15.0" fill="rgb(241,149,20)" rx="2" ry="2" />
<text  x="853.50" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="349.1" y="1877" width="0.4" height="15.0" fill="rgb(213,197,17)" rx="2" ry="2" />
<text  x="352.10" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 2.00%)</title><rect x="104.2" y="1989" width="23.6" height="15.0" fill="rgb(223,44,17)" rx="2" ry="2" />
<text  x="107.16" y="1999.5" >[..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="137.7" y="1973" width="0.4" height="15.0" fill="rgb(235,176,21)" rx="2" ry="2" />
<text  x="140.73" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="574.2" y="1877" width="0.2" height="15.0" fill="rgb(232,217,48)" rx="2" ry="2" />
<text  x="577.18" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="528.5" y="1941" width="0.4" height="15.0" fill="rgb(228,227,27)" rx="2" ry="2" />
<text  x="531.48" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="892.4" y="1685" width="0.2" height="15.0" fill="rgb(233,141,8)" rx="2" ry="2" />
<text  x="895.42" y="1695.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="458.8" y="1973" width="0.2" height="15.0" fill="rgb(231,172,51)" rx="2" ry="2" />
<text  x="461.76" y="1983.5" ></text>
</g>
<g >
<title>netdev_pick_tx (5 samples, 0.08%)</title><rect x="776.2" y="1557" width="1.0" height="15.0" fill="rgb(216,206,6)" rx="2" ry="2" />
<text  x="779.21" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="163.2" y="1941" width="0.2" height="15.0" fill="rgb(252,0,46)" rx="2" ry="2" />
<text  x="166.16" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="980.8" y="2037" width="0.2" height="15.0" fill="rgb(244,110,20)" rx="2" ry="2" />
<text  x="983.82" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="299.6" y="1445" width="0.6" height="15.0" fill="rgb(219,198,15)" rx="2" ry="2" />
<text  x="302.64" y="1455.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="199.1" y="2021" width="0.2" height="15.0" fill="rgb(227,194,11)" rx="2" ry="2" />
<text  x="202.12" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="105.8" y="805" width="14.3" height="15.0" fill="rgb(214,211,19)" rx="2" ry="2" />
<text  x="108.75" y="815.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (4 samples, 0.07%)</title><rect x="89.7" y="1957" width="0.8" height="15.0" fill="rgb(249,199,32)" rx="2" ry="2" />
<text  x="92.66" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="252.8" y="1973" width="0.7" height="15.0" fill="rgb(244,2,23)" rx="2" ry="2" />
<text  x="255.75" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1083.1" y="1781" width="0.2" height="15.0" fill="rgb(229,218,25)" rx="2" ry="2" />
<text  x="1086.12" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="534.2" y="1941" width="0.2" height="15.0" fill="rgb(231,127,12)" rx="2" ry="2" />
<text  x="537.25" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlagsImpl (1 samples, 0.02%)</title><rect x="884.1" y="1925" width="0.2" height="15.0" fill="rgb(220,218,10)" rx="2" ry="2" />
<text  x="887.07" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="525.9" y="1941" width="0.2" height="15.0" fill="rgb(206,137,36)" rx="2" ry="2" />
<text  x="528.90" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="889.6" y="1861" width="0.2" height="15.0" fill="rgb(213,212,5)" rx="2" ry="2" />
<text  x="892.64" y="1871.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="59.3" y="1877" width="0.4" height="15.0" fill="rgb(254,118,45)" rx="2" ry="2" />
<text  x="62.27" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="677.5" y="2005" width="0.2" height="15.0" fill="rgb(229,40,27)" rx="2" ry="2" />
<text  x="680.47" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1909" width="0.8" height="15.0" fill="rgb(229,64,35)" rx="2" ry="2" />
<text  x="538.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="334.0" y="1493" width="0.2" height="15.0" fill="rgb(211,75,36)" rx="2" ry="2" />
<text  x="337.00" y="1503.5" ></text>
</g>
</g>
</svg>
