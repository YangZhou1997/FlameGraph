<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="584.2" y="1989" width="0.4" height="15.0" fill="rgb(221,120,18)" rx="2" ry="2" />
<text  x="587.19" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="460.7" y="1989" width="0.3" height="15.0" fill="rgb(243,114,41)" rx="2" ry="2" />
<text  x="463.65" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1147.9" y="1989" width="0.4" height="15.0" fill="rgb(237,229,31)" rx="2" ry="2" />
<text  x="1150.90" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="576.9" y="1989" width="0.4" height="15.0" fill="rgb(219,124,51)" rx="2" ry="2" />
<text  x="579.87" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="960.5" y="1893" width="1.0" height="15.0" fill="rgb(225,17,6)" rx="2" ry="2" />
<text  x="963.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (6 samples, 0.10%)</title><rect x="212.0" y="2021" width="1.2" height="15.0" fill="rgb(251,36,33)" rx="2" ry="2" />
<text  x="215.00" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="1142.0" y="1973" width="0.4" height="15.0" fill="rgb(213,29,23)" rx="2" ry="2" />
<text  x="1144.97" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (232 samples, 3.89%)</title><rect x="539.7" y="2005" width="45.9" height="15.0" fill="rgb(233,47,22)" rx="2" ry="2" />
<text  x="542.72" y="2015.5" >[unk..</text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1119.2" y="2053" width="0.2" height="15.0" fill="rgb(253,168,12)" rx="2" ry="2" />
<text  x="1122.24" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="355.3" y="1941" width="0.6" height="15.0" fill="rgb(224,38,19)" rx="2" ry="2" />
<text  x="358.30" y="1951.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="764.8" y="1973" width="0.4" height="15.0" fill="rgb(207,74,40)" rx="2" ry="2" />
<text  x="767.84" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="26.8" y="1957" width="0.2" height="15.0" fill="rgb(224,85,53)" rx="2" ry="2" />
<text  x="29.80" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1128.3" y="1973" width="0.2" height="15.0" fill="rgb(248,1,51)" rx="2" ry="2" />
<text  x="1131.33" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.59%)</title><rect x="1007.8" y="2021" width="6.9" height="15.0" fill="rgb(226,194,46)" rx="2" ry="2" />
<text  x="1010.76" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1155.8" y="2053" width="0.2" height="15.0" fill="rgb(219,73,29)" rx="2" ry="2" />
<text  x="1158.81" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="960.3" y="1893" width="0.2" height="15.0" fill="rgb(249,210,40)" rx="2" ry="2" />
<text  x="963.32" y="1903.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (37 samples, 0.62%)</title><rect x="232.0" y="2021" width="7.3" height="15.0" fill="rgb(239,24,10)" rx="2" ry="2" />
<text  x="234.97" y="2031.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (66 samples, 1.11%)</title><rect x="54.7" y="2037" width="13.0" height="15.0" fill="rgb(233,55,36)" rx="2" ry="2" />
<text  x="57.67" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (3 samples, 0.05%)</title><rect x="105.3" y="37" width="0.6" height="15.0" fill="rgb(244,194,49)" rx="2" ry="2" />
<text  x="108.27" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="867.4" y="1989" width="0.6" height="15.0" fill="rgb(206,158,8)" rx="2" ry="2" />
<text  x="870.43" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="166.7" y="1973" width="1.0" height="15.0" fill="rgb(210,120,4)" rx="2" ry="2" />
<text  x="169.74" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="607.3" y="1909" width="0.2" height="15.0" fill="rgb(213,122,17)" rx="2" ry="2" />
<text  x="610.31" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="599.4" y="1973" width="0.2" height="15.0" fill="rgb(227,202,20)" rx="2" ry="2" />
<text  x="602.41" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="825.3" y="1973" width="0.2" height="15.0" fill="rgb(217,128,37)" rx="2" ry="2" />
<text  x="828.33" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (50 samples, 0.84%)</title><rect x="589.9" y="1989" width="9.9" height="15.0" fill="rgb(211,103,20)" rx="2" ry="2" />
<text  x="592.92" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="864.5" y="1989" width="2.3" height="15.0" fill="rgb(219,76,6)" rx="2" ry="2" />
<text  x="867.46" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="742.3" y="1893" width="1.2" height="15.0" fill="rgb(216,85,31)" rx="2" ry="2" />
<text  x="745.31" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="913.1" y="1973" width="0.2" height="15.0" fill="rgb(208,12,27)" rx="2" ry="2" />
<text  x="916.09" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="966.3" y="1909" width="0.3" height="15.0" fill="rgb(218,71,5)" rx="2" ry="2" />
<text  x="969.25" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="418.2" y="1973" width="4.3" height="15.0" fill="rgb(222,77,26)" rx="2" ry="2" />
<text  x="421.16" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="94.8" y="37" width="0.2" height="15.0" fill="rgb(211,134,37)" rx="2" ry="2" />
<text  x="97.79" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="376.3" y="1973" width="0.2" height="15.0" fill="rgb(225,69,49)" rx="2" ry="2" />
<text  x="379.25" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="299.4" y="1845" width="0.6" height="15.0" fill="rgb(234,0,23)" rx="2" ry="2" />
<text  x="302.37" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="865.6" y="1973" width="1.2" height="15.0" fill="rgb(251,159,1)" rx="2" ry="2" />
<text  x="868.65" y="1983.5" ></text>
</g>
<g >
<title>plist_del (1 samples, 0.02%)</title><rect x="11.2" y="1941" width="0.2" height="15.0" fill="rgb(254,205,37)" rx="2" ry="2" />
<text  x="14.19" y="1951.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="317.7" y="2037" width="0.2" height="15.0" fill="rgb(243,24,37)" rx="2" ry="2" />
<text  x="320.75" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1035.0" y="1893" width="0.4" height="15.0" fill="rgb(215,42,21)" rx="2" ry="2" />
<text  x="1038.04" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (47 samples, 0.79%)</title><rect x="19.3" y="2005" width="9.3" height="15.0" fill="rgb(224,180,12)" rx="2" ry="2" />
<text  x="22.29" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="431.8" y="1989" width="0.2" height="15.0" fill="rgb(216,19,28)" rx="2" ry="2" />
<text  x="434.80" y="1999.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="723.5" y="1893" width="0.2" height="15.0" fill="rgb(222,32,34)" rx="2" ry="2" />
<text  x="726.53" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="493.7" y="1925" width="1.3" height="15.0" fill="rgb(212,191,31)" rx="2" ry="2" />
<text  x="496.66" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.5" y="69" width="0.2" height="15.0" fill="rgb(226,10,29)" rx="2" ry="2" />
<text  x="121.51" y="79.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (36 samples, 0.60%)</title><rect x="843.5" y="1973" width="7.1" height="15.0" fill="rgb(220,56,20)" rx="2" ry="2" />
<text  x="846.51" y="1983.5" ></text>
</g>
<g >
<title>tcp_current_mss (10 samples, 0.17%)</title><rect x="298.4" y="1861" width="2.0" height="15.0" fill="rgb(229,195,53)" rx="2" ry="2" />
<text  x="301.38" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="821.8" y="2005" width="0.2" height="15.0" fill="rgb(240,26,43)" rx="2" ry="2" />
<text  x="824.77" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="643.3" y="2005" width="0.2" height="15.0" fill="rgb(213,180,34)" rx="2" ry="2" />
<text  x="646.29" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (40 samples, 0.67%)</title><rect x="231.4" y="2037" width="7.9" height="15.0" fill="rgb(239,48,48)" rx="2" ry="2" />
<text  x="234.37" y="2047.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (71 samples, 1.19%)</title><rect x="1093.5" y="1893" width="14.1" height="15.0" fill="rgb(253,223,20)" rx="2" ry="2" />
<text  x="1096.54" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (36 samples, 0.60%)</title><rect x="327.6" y="1957" width="7.1" height="15.0" fill="rgb(214,215,50)" rx="2" ry="2" />
<text  x="330.63" y="1967.5" ></text>
</g>
<g >
<title>ep_poll_callback (4 samples, 0.07%)</title><rect x="279.2" y="1429" width="0.8" height="15.0" fill="rgb(238,211,35)" rx="2" ry="2" />
<text  x="282.21" y="1439.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="10.4" y="1957" width="0.8" height="15.0" fill="rgb(249,126,24)" rx="2" ry="2" />
<text  x="13.40" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="658.7" y="1989" width="0.2" height="15.0" fill="rgb(233,227,14)" rx="2" ry="2" />
<text  x="661.70" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (23 samples, 0.39%)</title><rect x="77.0" y="37" width="4.6" height="15.0" fill="rgb(225,113,24)" rx="2" ry="2" />
<text  x="80.01" y="47.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (65 samples, 1.09%)</title><rect x="1094.5" y="1525" width="12.9" height="15.0" fill="rgb(219,35,51)" rx="2" ry="2" />
<text  x="1097.53" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="1013.5" y="1989" width="0.2" height="15.0" fill="rgb(238,209,46)" rx="2" ry="2" />
<text  x="1016.49" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (11 samples, 0.18%)</title><rect x="368.9" y="1989" width="2.2" height="15.0" fill="rgb(242,125,39)" rx="2" ry="2" />
<text  x="371.94" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="208.1" y="1909" width="0.1" height="15.0" fill="rgb(208,148,0)" rx="2" ry="2" />
<text  x="211.05" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (518 samples, 8.68%)</title><rect x="888.2" y="2021" width="102.4" height="15.0" fill="rgb(223,54,8)" rx="2" ry="2" />
<text  x="891.18" y="2031.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1125" width="49.6" height="15.0" fill="rgb(217,140,48)" rx="2" ry="2" />
<text  x="72.49" y="1135.5" >[unkn..</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (145 samples, 2.43%)</title><rect x="939.0" y="1957" width="28.6" height="15.0" fill="rgb(253,186,25)" rx="2" ry="2" />
<text  x="941.98" y="1967.5" >fo..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (9 samples, 0.15%)</title><rect x="958.5" y="1893" width="1.8" height="15.0" fill="rgb(243,64,36)" rx="2" ry="2" />
<text  x="961.55" y="1903.5" ></text>
</g>
<g >
<title>skb_free_head (37 samples, 0.62%)</title><rect x="1040.2" y="1877" width="7.3" height="15.0" fill="rgb(237,88,30)" rx="2" ry="2" />
<text  x="1043.18" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (8 samples, 0.13%)</title><rect x="1161.7" y="2053" width="1.6" height="15.0" fill="rgb(249,128,26)" rx="2" ry="2" />
<text  x="1164.74" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="864.3" y="2005" width="0.2" height="15.0" fill="rgb(211,65,3)" rx="2" ry="2" />
<text  x="867.26" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1147.7" y="1957" width="0.2" height="15.0" fill="rgb(235,185,41)" rx="2" ry="2" />
<text  x="1150.70" y="1967.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="1010.9" y="2005" width="0.4" height="15.0" fill="rgb(234,2,20)" rx="2" ry="2" />
<text  x="1013.92" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (266 samples, 4.46%)</title><rect x="699.8" y="1957" width="52.6" height="15.0" fill="rgb(222,208,50)" rx="2" ry="2" />
<text  x="702.82" y="1967.5" >folly..</text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="169.9" y="1957" width="0.6" height="15.0" fill="rgb(245,60,31)" rx="2" ry="2" />
<text  x="172.90" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (471 samples, 7.89%)</title><rect x="1019.2" y="2021" width="93.1" height="15.0" fill="rgb(209,198,22)" rx="2" ry="2" />
<text  x="1022.23" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="207.5" y="1893" width="0.2" height="15.0" fill="rgb(216,225,40)" rx="2" ry="2" />
<text  x="210.46" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (4 samples, 0.07%)</title><rect x="402.9" y="2037" width="0.8" height="15.0" fill="rgb(206,46,49)" rx="2" ry="2" />
<text  x="405.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1909" width="50.0" height="15.0" fill="rgb(221,98,34)" rx="2" ry="2" />
<text  x="72.49" y="1919.5" >[unkn..</text>
</g>
<g >
<title>futex_wait (25 samples, 0.42%)</title><rect x="12.4" y="1973" width="4.9" height="15.0" fill="rgb(215,32,19)" rx="2" ry="2" />
<text  x="15.37" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(233,141,34)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="272.5" y="1829" width="0.4" height="15.0" fill="rgb(254,150,18)" rx="2" ry="2" />
<text  x="275.49" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="210.6" y="1893" width="0.4" height="15.0" fill="rgb(231,192,18)" rx="2" ry="2" />
<text  x="213.62" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="453.1" y="2005" width="0.2" height="15.0" fill="rgb(208,107,0)" rx="2" ry="2" />
<text  x="456.14" y="2015.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="254.5" y="1893" width="0.4" height="15.0" fill="rgb(225,175,49)" rx="2" ry="2" />
<text  x="257.50" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (10 samples, 0.17%)</title><rect x="93.0" y="53" width="2.0" height="15.0" fill="rgb(234,114,51)" rx="2" ry="2" />
<text  x="96.02" y="63.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="1004.2" y="2037" width="0.4" height="15.0" fill="rgb(223,205,42)" rx="2" ry="2" />
<text  x="1007.20" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="181.0" y="2021" width="0.4" height="15.0" fill="rgb(233,125,36)" rx="2" ry="2" />
<text  x="183.97" y="2031.5" ></text>
</g>
<g >
<title>__release_sock (36 samples, 0.60%)</title><rect x="1066.1" y="1909" width="7.1" height="15.0" fill="rgb(242,129,25)" rx="2" ry="2" />
<text  x="1069.07" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="1176.0" y="2021" width="1.2" height="15.0" fill="rgb(209,169,40)" rx="2" ry="2" />
<text  x="1178.97" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (10 samples, 0.17%)</title><rect x="643.5" y="2005" width="2.0" height="15.0" fill="rgb(226,198,28)" rx="2" ry="2" />
<text  x="646.48" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1653" width="49.8" height="15.0" fill="rgb(232,173,2)" rx="2" ry="2" />
<text  x="72.49" y="1663.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="832.0" y="2005" width="0.4" height="15.0" fill="rgb(254,80,25)" rx="2" ry="2" />
<text  x="835.05" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.59%)</title><rect x="310.8" y="2005" width="6.9" height="15.0" fill="rgb(232,188,35)" rx="2" ry="2" />
<text  x="313.83" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15 samples, 0.25%)</title><rect x="343.4" y="1973" width="3.0" height="15.0" fill="rgb(238,43,31)" rx="2" ry="2" />
<text  x="346.44" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.15%)</title><rect x="1112.9" y="2037" width="1.8" height="15.0" fill="rgb(219,104,27)" rx="2" ry="2" />
<text  x="1115.91" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output (80 samples, 1.34%)</title><rect x="277.0" y="1765" width="15.8" height="15.0" fill="rgb(218,104,54)" rx="2" ry="2" />
<text  x="280.03" y="1775.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="295.6" y="1829" width="0.2" height="15.0" fill="rgb(235,23,30)" rx="2" ry="2" />
<text  x="298.61" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (12 samples, 0.20%)</title><rect x="1163.3" y="2053" width="2.4" height="15.0" fill="rgb(214,87,51)" rx="2" ry="2" />
<text  x="1166.32" y="2063.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="748.8" y="1909" width="0.2" height="15.0" fill="rgb(241,134,13)" rx="2" ry="2" />
<text  x="751.83" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (4 samples, 0.07%)</title><rect x="117.3" y="53" width="0.8" height="15.0" fill="rgb(217,54,13)" rx="2" ry="2" />
<text  x="120.33" y="63.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="259.2" y="1877" width="0.4" height="15.0" fill="rgb(238,26,36)" rx="2" ry="2" />
<text  x="262.24" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (6 samples, 0.10%)</title><rect x="192.8" y="2021" width="1.2" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="195.83" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="216.2" y="2021" width="0.2" height="15.0" fill="rgb(211,23,10)" rx="2" ry="2" />
<text  x="219.15" y="2031.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="766.0" y="1989" width="0.2" height="15.0" fill="rgb(253,87,3)" rx="2" ry="2" />
<text  x="769.03" y="1999.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="973.2" y="1989" width="0.4" height="15.0" fill="rgb(222,107,8)" rx="2" ry="2" />
<text  x="976.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (9 samples, 0.15%)</title><rect x="634.0" y="1989" width="1.8" height="15.0" fill="rgb(206,82,54)" rx="2" ry="2" />
<text  x="637.00" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (19 samples, 0.32%)</title><rect x="1144.1" y="1989" width="3.8" height="15.0" fill="rgb(225,43,41)" rx="2" ry="2" />
<text  x="1147.14" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1007.0" y="2037" width="0.2" height="15.0" fill="rgb(224,209,9)" rx="2" ry="2" />
<text  x="1009.97" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="835.2" y="2005" width="0.4" height="15.0" fill="rgb(237,173,6)" rx="2" ry="2" />
<text  x="838.21" y="2015.5" ></text>
</g>
<g >
<title>do_futex (25 samples, 0.42%)</title><rect x="12.4" y="1989" width="4.9" height="15.0" fill="rgb(216,58,6)" rx="2" ry="2" />
<text  x="15.37" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1525" width="49.8" height="15.0" fill="rgb(224,91,5)" rx="2" ry="2" />
<text  x="72.49" y="1535.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1813" width="49.8" height="15.0" fill="rgb(206,27,45)" rx="2" ry="2" />
<text  x="72.49" y="1823.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="420.9" y="1893" width="0.2" height="15.0" fill="rgb(230,212,24)" rx="2" ry="2" />
<text  x="423.92" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1413" width="49.6" height="15.0" fill="rgb(208,108,9)" rx="2" ry="2" />
<text  x="72.49" y="1423.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (35 samples, 0.59%)</title><rect x="1170.2" y="2053" width="7.0" height="15.0" fill="rgb(253,174,33)" rx="2" ry="2" />
<text  x="1173.23" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (22 samples, 0.37%)</title><rect x="151.3" y="1957" width="4.4" height="15.0" fill="rgb(245,197,28)" rx="2" ry="2" />
<text  x="154.32" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="726.7" y="1861" width="0.2" height="15.0" fill="rgb(208,151,36)" rx="2" ry="2" />
<text  x="729.70" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="1014.5" y="1957" width="0.2" height="15.0" fill="rgb(247,110,32)" rx="2" ry="2" />
<text  x="1017.48" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (3 samples, 0.05%)</title><rect x="489.9" y="1909" width="0.6" height="15.0" fill="rgb(229,71,37)" rx="2" ry="2" />
<text  x="492.91" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (193 samples, 3.23%)</title><rect x="430.8" y="2037" width="38.2" height="15.0" fill="rgb(212,13,54)" rx="2" ry="2" />
<text  x="433.81" y="2047.5" >fac..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="25.0" y="1877" width="0.2" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="28.02" y="1887.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.4" y="1941" width="0.8" height="15.0" fill="rgb(216,185,28)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (36 samples, 0.60%)</title><rect x="279.0" y="1509" width="7.1" height="15.0" fill="rgb(205,48,32)" rx="2" ry="2" />
<text  x="282.01" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="609.5" y="1989" width="1.0" height="15.0" fill="rgb(249,132,1)" rx="2" ry="2" />
<text  x="612.49" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (174 samples, 2.91%)</title><rect x="711.9" y="1909" width="34.4" height="15.0" fill="rgb(247,145,26)" rx="2" ry="2" />
<text  x="714.87" y="1919.5" >fo..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1151.9" y="1989" width="0.2" height="15.0" fill="rgb(250,73,14)" rx="2" ry="2" />
<text  x="1154.85" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (11 samples, 0.18%)</title><rect x="337.7" y="1973" width="2.2" height="15.0" fill="rgb(242,198,19)" rx="2" ry="2" />
<text  x="340.71" y="1983.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="101.3" y="37" width="0.2" height="15.0" fill="rgb(224,50,44)" rx="2" ry="2" />
<text  x="104.32" y="47.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="757" width="49.6" height="15.0" fill="rgb(214,106,36)" rx="2" ry="2" />
<text  x="72.49" y="767.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (7 samples, 0.12%)</title><rect x="610.5" y="2005" width="1.4" height="15.0" fill="rgb(224,221,1)" rx="2" ry="2" />
<text  x="613.48" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (3 samples, 0.05%)</title><rect x="349.2" y="1989" width="0.6" height="15.0" fill="rgb(229,0,6)" rx="2" ry="2" />
<text  x="352.18" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (9 samples, 0.15%)</title><rect x="359.5" y="1941" width="1.7" height="15.0" fill="rgb(249,25,15)" rx="2" ry="2" />
<text  x="362.45" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (37 samples, 0.62%)</title><rect x="279.0" y="1589" width="7.3" height="15.0" fill="rgb(230,175,34)" rx="2" ry="2" />
<text  x="282.01" y="1599.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="391.9" y="2005" width="0.2" height="15.0" fill="rgb(219,55,52)" rx="2" ry="2" />
<text  x="394.87" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="495.8" y="1893" width="0.2" height="15.0" fill="rgb(236,120,13)" rx="2" ry="2" />
<text  x="498.84" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.32%)</title><rect x="658.5" y="2021" width="3.8" height="15.0" fill="rgb(236,105,9)" rx="2" ry="2" />
<text  x="661.51" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="418.9" y="1941" width="0.6" height="15.0" fill="rgb(209,191,4)" rx="2" ry="2" />
<text  x="421.95" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (11 samples, 0.18%)</title><rect x="227.2" y="2037" width="2.2" height="15.0" fill="rgb(219,0,47)" rx="2" ry="2" />
<text  x="230.22" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="95.4" y="37" width="0.4" height="15.0" fill="rgb(226,26,2)" rx="2" ry="2" />
<text  x="98.39" y="47.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="635.2" y="1973" width="0.2" height="15.0" fill="rgb(237,68,6)" rx="2" ry="2" />
<text  x="638.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (25 samples, 0.42%)</title><rect x="406.9" y="2005" width="4.9" height="15.0" fill="rgb(214,71,3)" rx="2" ry="2" />
<text  x="409.89" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (140 samples, 2.35%)</title><rect x="939.0" y="1925" width="27.6" height="15.0" fill="rgb(230,69,12)" rx="2" ry="2" />
<text  x="941.98" y="1935.5" >f..</text>
</g>
<g >
<title>folly::RequestContext::setContext (8 samples, 0.13%)</title><rect x="209.6" y="1925" width="1.6" height="15.0" fill="rgb(221,110,14)" rx="2" ry="2" />
<text  x="212.63" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (19 samples, 0.32%)</title><rect x="453.3" y="2005" width="3.8" height="15.0" fill="rgb(224,111,3)" rx="2" ry="2" />
<text  x="456.34" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.3" y="53" width="0.2" height="15.0" fill="rgb(232,52,4)" rx="2" ry="2" />
<text  x="121.31" y="63.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1173" width="49.6" height="15.0" fill="rgb(209,81,40)" rx="2" ry="2" />
<text  x="72.49" y="1183.5" >[unkn..</text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.05%)</title><rect x="762.5" y="1941" width="0.6" height="15.0" fill="rgb(248,218,14)" rx="2" ry="2" />
<text  x="765.47" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="597.0" y="1877" width="0.2" height="15.0" fill="rgb(223,108,19)" rx="2" ry="2" />
<text  x="600.04" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1070.4" y="1829" width="0.2" height="15.0" fill="rgb(235,103,6)" rx="2" ry="2" />
<text  x="1073.42" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="381.6" y="1973" width="0.6" height="15.0" fill="rgb(230,5,46)" rx="2" ry="2" />
<text  x="384.59" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="502.6" y="1973" width="0.2" height="15.0" fill="rgb(219,53,19)" rx="2" ry="2" />
<text  x="505.56" y="1983.5" ></text>
</g>
<g >
<title>netdev_pick_tx (4 samples, 0.07%)</title><rect x="286.9" y="1701" width="0.8" height="15.0" fill="rgb(231,80,12)" rx="2" ry="2" />
<text  x="289.91" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (25 samples, 0.42%)</title><rect x="375.9" y="1989" width="4.9" height="15.0" fill="rgb(233,98,34)" rx="2" ry="2" />
<text  x="378.86" y="1999.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (2 samples, 0.03%)</title><rect x="1037.6" y="1845" width="0.4" height="15.0" fill="rgb(254,113,28)" rx="2" ry="2" />
<text  x="1040.61" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="529.2" y="2005" width="0.2" height="15.0" fill="rgb(225,79,38)" rx="2" ry="2" />
<text  x="532.24" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (5 samples, 0.08%)</title><rect x="447.0" y="2005" width="1.0" height="15.0" fill="rgb(206,8,9)" rx="2" ry="2" />
<text  x="450.02" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="1142.4" y="1973" width="1.0" height="15.0" fill="rgb(237,154,21)" rx="2" ry="2" />
<text  x="1145.37" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (23 samples, 0.39%)</title><rect x="12.8" y="1893" width="4.5" height="15.0" fill="rgb(243,221,21)" rx="2" ry="2" />
<text  x="15.77" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="172.5" y="1973" width="0.2" height="15.0" fill="rgb(253,68,52)" rx="2" ry="2" />
<text  x="175.47" y="1983.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="616.6" y="1973" width="0.4" height="15.0" fill="rgb(225,169,54)" rx="2" ry="2" />
<text  x="619.60" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (7 samples, 0.12%)</title><rect x="569.4" y="1989" width="1.3" height="15.0" fill="rgb(213,125,6)" rx="2" ry="2" />
<text  x="572.36" y="1999.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1047.3" y="1813" width="0.2" height="15.0" fill="rgb(225,146,6)" rx="2" ry="2" />
<text  x="1050.29" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (77 samples, 1.29%)</title><rect x="518.8" y="2037" width="15.2" height="15.0" fill="rgb(249,59,15)" rx="2" ry="2" />
<text  x="521.76" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.10%)</title><rect x="1071.4" y="1845" width="1.2" height="15.0" fill="rgb(214,65,6)" rx="2" ry="2" />
<text  x="1074.41" y="1855.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="300.8" y="1893" width="0.9" height="15.0" fill="rgb(224,118,23)" rx="2" ry="2" />
<text  x="303.75" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="869" width="49.6" height="15.0" fill="rgb(235,68,24)" rx="2" ry="2" />
<text  x="72.49" y="879.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="611.9" y="2005" width="0.2" height="15.0" fill="rgb(230,11,30)" rx="2" ry="2" />
<text  x="614.86" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="972.2" y="1973" width="0.6" height="15.0" fill="rgb(237,138,22)" rx="2" ry="2" />
<text  x="975.18" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="88.5" y="37" width="0.2" height="15.0" fill="rgb(206,79,3)" rx="2" ry="2" />
<text  x="91.47" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="485.0" y="1941" width="0.2" height="15.0" fill="rgb(211,220,48)" rx="2" ry="2" />
<text  x="487.96" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="488.3" y="1909" width="0.6" height="15.0" fill="rgb(220,80,50)" rx="2" ry="2" />
<text  x="491.32" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="613.8" y="2021" width="0.2" height="15.0" fill="rgb(219,143,15)" rx="2" ry="2" />
<text  x="616.84" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="655.5" y="2037" width="0.2" height="15.0" fill="rgb(208,186,36)" rx="2" ry="2" />
<text  x="658.54" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="428.6" y="2037" width="0.2" height="15.0" fill="rgb(243,78,49)" rx="2" ry="2" />
<text  x="431.63" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (14 samples, 0.23%)</title><rect x="198.2" y="1973" width="2.7" height="15.0" fill="rgb(220,123,10)" rx="2" ry="2" />
<text  x="201.17" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="1071.4" y="1813" width="0.8" height="15.0" fill="rgb(242,122,36)" rx="2" ry="2" />
<text  x="1074.41" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="917" width="49.6" height="15.0" fill="rgb(225,171,13)" rx="2" ry="2" />
<text  x="72.49" y="927.5" >[unkn..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(249,227,26)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="287.1" y="1685" width="0.6" height="15.0" fill="rgb(227,127,39)" rx="2" ry="2" />
<text  x="290.11" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="431.8" y="1957" width="0.2" height="15.0" fill="rgb(248,114,28)" rx="2" ry="2" />
<text  x="434.80" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="953.4" y="1909" width="0.2" height="15.0" fill="rgb(219,40,46)" rx="2" ry="2" />
<text  x="956.41" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (4 samples, 0.07%)</title><rect x="614.4" y="2005" width="0.8" height="15.0" fill="rgb(248,203,19)" rx="2" ry="2" />
<text  x="617.43" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="381.8" y="1957" width="0.4" height="15.0" fill="rgb(253,193,41)" rx="2" ry="2" />
<text  x="384.79" y="1967.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (4 samples, 0.07%)</title><rect x="310.0" y="2037" width="0.8" height="15.0" fill="rgb(234,167,29)" rx="2" ry="2" />
<text  x="313.04" y="2047.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (25 samples, 0.42%)</title><rect x="12.4" y="2053" width="4.9" height="15.0" fill="rgb(231,179,26)" rx="2" ry="2" />
<text  x="15.37" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="184.9" y="1989" width="0.2" height="15.0" fill="rgb(222,213,16)" rx="2" ry="2" />
<text  x="187.92" y="1999.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr (1 samples, 0.02%)</title><rect x="747.8" y="1909" width="0.2" height="15.0" fill="rgb(249,209,23)" rx="2" ry="2" />
<text  x="750.85" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="475.5" y="1973" width="0.2" height="15.0" fill="rgb(249,48,8)" rx="2" ry="2" />
<text  x="478.48" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="197.0" y="1973" width="0.2" height="15.0" fill="rgb(238,48,41)" rx="2" ry="2" />
<text  x="199.98" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="914.3" y="1957" width="1.6" height="15.0" fill="rgb(210,120,4)" rx="2" ry="2" />
<text  x="917.27" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="692.1" y="1909" width="0.8" height="15.0" fill="rgb(242,176,46)" rx="2" ry="2" />
<text  x="695.11" y="1919.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="269.3" y="1877" width="0.4" height="15.0" fill="rgb(208,79,3)" rx="2" ry="2" />
<text  x="272.32" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="638.5" y="1989" width="0.2" height="15.0" fill="rgb(243,160,9)" rx="2" ry="2" />
<text  x="641.54" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="505.3" y="1973" width="0.4" height="15.0" fill="rgb(231,57,1)" rx="2" ry="2" />
<text  x="508.32" y="1983.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="497.0" y="1909" width="0.8" height="15.0" fill="rgb(245,13,34)" rx="2" ry="2" />
<text  x="500.02" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="133.3" y="1957" width="0.6" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="136.34" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="411.8" y="2005" width="0.2" height="15.0" fill="rgb(228,42,21)" rx="2" ry="2" />
<text  x="414.83" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="196.0" y="1989" width="0.2" height="15.0" fill="rgb(211,164,9)" rx="2" ry="2" />
<text  x="198.99" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="889.8" y="2005" width="0.2" height="15.0" fill="rgb(237,186,47)" rx="2" ry="2" />
<text  x="892.76" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (1 samples, 0.02%)</title><rect x="470.9" y="1989" width="0.2" height="15.0" fill="rgb(208,177,44)" rx="2" ry="2" />
<text  x="473.93" y="1999.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (6 samples, 0.10%)</title><rect x="296.0" y="1813" width="1.2" height="15.0" fill="rgb(230,179,38)" rx="2" ry="2" />
<text  x="299.01" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="177.8" y="2005" width="0.2" height="15.0" fill="rgb(205,201,13)" rx="2" ry="2" />
<text  x="180.81" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="972.8" y="1989" width="0.4" height="15.0" fill="rgb(238,146,19)" rx="2" ry="2" />
<text  x="975.78" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1621" width="49.8" height="15.0" fill="rgb(250,86,23)" rx="2" ry="2" />
<text  x="72.49" y="1631.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="581" width="49.6" height="15.0" fill="rgb(207,150,44)" rx="2" ry="2" />
<text  x="72.49" y="591.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (195 samples, 3.27%)</title><rect x="710.3" y="1925" width="38.5" height="15.0" fill="rgb(208,87,49)" rx="2" ry="2" />
<text  x="713.29" y="1935.5" >fol..</text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="1064.3" y="1925" width="0.4" height="15.0" fill="rgb(221,0,6)" rx="2" ry="2" />
<text  x="1067.29" y="1935.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="268.5" y="1877" width="0.2" height="15.0" fill="rgb(223,99,27)" rx="2" ry="2" />
<text  x="271.53" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="94.4" y="37" width="0.2" height="15.0" fill="rgb(243,182,38)" rx="2" ry="2" />
<text  x="97.40" y="47.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1493" width="49.6" height="15.0" fill="rgb(210,114,23)" rx="2" ry="2" />
<text  x="72.49" y="1503.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (154 samples, 2.58%)</title><rect x="616.6" y="2021" width="30.4" height="15.0" fill="rgb(249,51,51)" rx="2" ry="2" />
<text  x="619.60" y="2031.5" >[u..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="394.6" y="1925" width="0.2" height="15.0" fill="rgb(232,220,39)" rx="2" ry="2" />
<text  x="397.64" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="649.4" y="2037" width="0.4" height="15.0" fill="rgb(246,186,46)" rx="2" ry="2" />
<text  x="652.41" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="773" width="49.6" height="15.0" fill="rgb(225,7,15)" rx="2" ry="2" />
<text  x="72.49" y="783.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="685.2" y="1909" width="0.2" height="15.0" fill="rgb(231,192,38)" rx="2" ry="2" />
<text  x="688.19" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="1125.8" y="2021" width="0.2" height="15.0" fill="rgb(235,159,31)" rx="2" ry="2" />
<text  x="1128.76" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (31 samples, 0.52%)</title><rect x="1041.4" y="1845" width="6.1" height="15.0" fill="rgb(247,196,14)" rx="2" ry="2" />
<text  x="1044.36" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="381.0" y="1989" width="0.6" height="15.0" fill="rgb(223,36,29)" rx="2" ry="2" />
<text  x="384.00" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1018.2" y="2037" width="0.4" height="15.0" fill="rgb(249,163,49)" rx="2" ry="2" />
<text  x="1021.24" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="214.4" y="2021" width="0.2" height="15.0" fill="rgb(216,47,12)" rx="2" ry="2" />
<text  x="217.38" y="2031.5" ></text>
</g>
<g >
<title>nmi_restore (2 samples, 0.03%)</title><rect x="16.9" y="1829" width="0.4" height="15.0" fill="rgb(216,203,16)" rx="2" ry="2" />
<text  x="19.92" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="29.4" y="2021" width="0.2" height="15.0" fill="rgb(227,58,43)" rx="2" ry="2" />
<text  x="32.37" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (9 samples, 0.15%)</title><rect x="696.3" y="1925" width="1.7" height="15.0" fill="rgb(217,138,47)" rx="2" ry="2" />
<text  x="699.26" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="213" width="49.6" height="15.0" fill="rgb(218,150,9)" rx="2" ry="2" />
<text  x="72.49" y="223.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (32 samples, 0.54%)</title><rect x="434.2" y="2005" width="6.3" height="15.0" fill="rgb(208,160,46)" rx="2" ry="2" />
<text  x="437.17" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="1189.2" y="2053" width="0.4" height="15.0" fill="rgb(248,59,20)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (28 samples, 0.47%)</title><rect x="186.1" y="1973" width="5.5" height="15.0" fill="rgb(214,19,26)" rx="2" ry="2" />
<text  x="189.11" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="592.7" y="1909" width="0.4" height="15.0" fill="rgb(241,127,24)" rx="2" ry="2" />
<text  x="595.69" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (19 samples, 0.32%)</title><rect x="723.7" y="1893" width="3.8" height="15.0" fill="rgb(254,60,45)" rx="2" ry="2" />
<text  x="726.73" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (2 samples, 0.03%)</title><rect x="1153.2" y="2053" width="0.4" height="15.0" fill="rgb(217,31,8)" rx="2" ry="2" />
<text  x="1156.24" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1141" width="49.6" height="15.0" fill="rgb(231,97,28)" rx="2" ry="2" />
<text  x="72.49" y="1151.5" >[unkn..</text>
</g>
<g >
<title>__kfree_skb (17 samples, 0.28%)</title><rect x="281.4" y="1461" width="3.3" height="15.0" fill="rgb(208,185,32)" rx="2" ry="2" />
<text  x="284.38" y="1471.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="262.2" y="1861" width="0.4" height="15.0" fill="rgb(220,59,51)" rx="2" ry="2" />
<text  x="265.21" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="928.5" y="1941" width="0.4" height="15.0" fill="rgb(214,87,11)" rx="2" ry="2" />
<text  x="931.50" y="1951.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="272.3" y="1717" width="0.2" height="15.0" fill="rgb(231,228,54)" rx="2" ry="2" />
<text  x="275.29" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="159.2" y="1973" width="0.4" height="15.0" fill="rgb(234,199,51)" rx="2" ry="2" />
<text  x="162.23" y="1983.5" ></text>
</g>
<g >
<title>sock_poll (22 samples, 0.37%)</title><rect x="313.2" y="1909" width="4.4" height="15.0" fill="rgb(209,77,39)" rx="2" ry="2" />
<text  x="316.20" y="1919.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.20%)</title><rect x="223.3" y="2021" width="2.3" height="15.0" fill="rgb(212,190,33)" rx="2" ry="2" />
<text  x="226.27" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="341.3" y="1941" width="0.2" height="15.0" fill="rgb(215,219,47)" rx="2" ry="2" />
<text  x="344.27" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (39 samples, 0.65%)</title><rect x="395.2" y="2037" width="7.7" height="15.0" fill="rgb(238,215,32)" rx="2" ry="2" />
<text  x="398.23" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (7 samples, 0.12%)</title><rect x="683.6" y="1925" width="1.4" height="15.0" fill="rgb(237,108,5)" rx="2" ry="2" />
<text  x="686.61" y="1935.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="279.4" y="1317" width="0.2" height="15.0" fill="rgb(252,1,8)" rx="2" ry="2" />
<text  x="282.40" y="1327.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="309.1" y="2037" width="0.3" height="15.0" fill="rgb(225,21,39)" rx="2" ry="2" />
<text  x="312.05" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="417.6" y="1957" width="0.4" height="15.0" fill="rgb(234,135,16)" rx="2" ry="2" />
<text  x="420.56" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="390.5" y="1973" width="0.2" height="15.0" fill="rgb(216,131,37)" rx="2" ry="2" />
<text  x="393.49" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="666.6" y="1973" width="0.6" height="15.0" fill="rgb(218,213,18)" rx="2" ry="2" />
<text  x="669.61" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="116.1" y="53" width="1.0" height="15.0" fill="rgb(233,223,39)" rx="2" ry="2" />
<text  x="119.14" y="63.5" ></text>
</g>
<g >
<title>new_slab (4 samples, 0.07%)</title><rect x="271.7" y="1781" width="0.8" height="15.0" fill="rgb(239,225,7)" rx="2" ry="2" />
<text  x="274.70" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1573" width="49.8" height="15.0" fill="rgb(217,40,43)" rx="2" ry="2" />
<text  x="72.49" y="1583.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (12 samples, 0.20%)</title><rect x="509.3" y="1957" width="2.3" height="15.0" fill="rgb(240,24,27)" rx="2" ry="2" />
<text  x="512.28" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (241 samples, 4.04%)</title><rect x="701.4" y="1941" width="47.6" height="15.0" fill="rgb(249,32,30)" rx="2" ry="2" />
<text  x="704.40" y="1951.5" >foll..</text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="393.1" y="1973" width="0.2" height="15.0" fill="rgb(250,100,32)" rx="2" ry="2" />
<text  x="396.06" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="297.0" y="1733" width="0.2" height="15.0" fill="rgb(232,91,25)" rx="2" ry="2" />
<text  x="299.99" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (105 samples, 1.76%)</title><rect x="677.3" y="1973" width="20.7" height="15.0" fill="rgb(230,117,46)" rx="2" ry="2" />
<text  x="680.28" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="378.0" y="1941" width="0.2" height="15.0" fill="rgb(208,73,34)" rx="2" ry="2" />
<text  x="381.03" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="857.1" y="1973" width="0.2" height="15.0" fill="rgb(213,46,22)" rx="2" ry="2" />
<text  x="860.15" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="261" width="49.6" height="15.0" fill="rgb(237,211,51)" rx="2" ry="2" />
<text  x="72.49" y="271.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (10 samples, 0.17%)</title><rect x="423.7" y="2037" width="2.0" height="15.0" fill="rgb(231,21,18)" rx="2" ry="2" />
<text  x="426.69" y="2047.5" ></text>
</g>
<g >
<title>__clock_gettime (6 samples, 0.10%)</title><rect x="1015.3" y="2053" width="1.2" height="15.0" fill="rgb(248,143,24)" rx="2" ry="2" />
<text  x="1018.27" y="2063.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1007.2" y="2037" width="0.2" height="15.0" fill="rgb(244,9,0)" rx="2" ry="2" />
<text  x="1010.17" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="693" width="49.6" height="15.0" fill="rgb(218,226,34)" rx="2" ry="2" />
<text  x="72.49" y="703.5" >[unkn..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (54 samples, 0.90%)</title><rect x="799.6" y="1973" width="10.7" height="15.0" fill="rgb(236,209,41)" rx="2" ry="2" />
<text  x="802.63" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="842.5" y="1973" width="1.0" height="15.0" fill="rgb(253,71,20)" rx="2" ry="2" />
<text  x="845.52" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (5 samples, 0.08%)</title><rect x="73.4" y="37" width="1.0" height="15.0" fill="rgb(232,125,0)" rx="2" ry="2" />
<text  x="76.45" y="47.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (11 samples, 0.18%)</title><rect x="363.4" y="1941" width="2.2" height="15.0" fill="rgb(205,57,6)" rx="2" ry="2" />
<text  x="366.41" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (36 samples, 0.60%)</title><rect x="279.0" y="1541" width="7.1" height="15.0" fill="rgb(231,5,2)" rx="2" ry="2" />
<text  x="282.01" y="1551.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.23%)</title><rect x="240.1" y="2021" width="2.7" height="15.0" fill="rgb(242,80,47)" rx="2" ry="2" />
<text  x="243.07" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="626.5" y="1973" width="0.4" height="15.0" fill="rgb(253,30,45)" rx="2" ry="2" />
<text  x="629.49" y="1983.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="1111.7" y="1973" width="0.6" height="15.0" fill="rgb(254,15,34)" rx="2" ry="2" />
<text  x="1114.73" y="1983.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1002.8" y="2037" width="0.2" height="15.0" fill="rgb(245,49,0)" rx="2" ry="2" />
<text  x="1005.82" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (4 samples, 0.07%)</title><rect x="659.7" y="1989" width="0.8" height="15.0" fill="rgb(220,79,23)" rx="2" ry="2" />
<text  x="662.69" y="1999.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="866.8" y="2005" width="0.2" height="15.0" fill="rgb(242,192,0)" rx="2" ry="2" />
<text  x="869.83" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="396.4" y="1893" width="0.4" height="15.0" fill="rgb(234,48,21)" rx="2" ry="2" />
<text  x="399.42" y="1903.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (44 samples, 0.74%)</title><rect x="259.8" y="1877" width="8.7" height="15.0" fill="rgb(228,64,17)" rx="2" ry="2" />
<text  x="262.84" y="1887.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="272.3" y="1765" width="0.2" height="15.0" fill="rgb(219,115,45)" rx="2" ry="2" />
<text  x="275.29" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1717" width="49.8" height="15.0" fill="rgb(206,196,15)" rx="2" ry="2" />
<text  x="72.49" y="1727.5" >[unkn..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="620.8" y="1941" width="0.3" height="15.0" fill="rgb(210,77,48)" rx="2" ry="2" />
<text  x="623.75" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (20 samples, 0.34%)</title><rect x="397.6" y="1925" width="4.0" height="15.0" fill="rgb(233,86,13)" rx="2" ry="2" />
<text  x="400.60" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (3 samples, 0.05%)</title><rect x="857.0" y="2005" width="0.5" height="15.0" fill="rgb(210,152,32)" rx="2" ry="2" />
<text  x="859.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="98.0" y="37" width="0.5" height="15.0" fill="rgb(251,47,33)" rx="2" ry="2" />
<text  x="100.96" y="47.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="497.0" y="1829" width="0.8" height="15.0" fill="rgb(232,33,26)" rx="2" ry="2" />
<text  x="500.02" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="667.2" y="1957" width="0.2" height="15.0" fill="rgb(232,226,7)" rx="2" ry="2" />
<text  x="670.20" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1973" width="50.0" height="15.0" fill="rgb(242,190,38)" rx="2" ry="2" />
<text  x="72.49" y="1983.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="511.6" y="1957" width="1.4" height="15.0" fill="rgb(242,21,2)" rx="2" ry="2" />
<text  x="514.65" y="1967.5" ></text>
</g>
<g >
<title>_warn_unseeded_randomness (1 samples, 0.02%)</title><rect x="272.1" y="1765" width="0.2" height="15.0" fill="rgb(249,220,34)" rx="2" ry="2" />
<text  x="275.09" y="1775.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (4 samples, 0.07%)</title><rect x="366.2" y="1957" width="0.8" height="15.0" fill="rgb(243,65,52)" rx="2" ry="2" />
<text  x="369.17" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (4 samples, 0.07%)</title><rect x="872.6" y="2037" width="0.8" height="15.0" fill="rgb(230,21,48)" rx="2" ry="2" />
<text  x="875.57" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="685.0" y="1925" width="0.4" height="15.0" fill="rgb(236,29,28)" rx="2" ry="2" />
<text  x="687.99" y="1935.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="1037.6" y="1861" width="0.4" height="15.0" fill="rgb(228,42,9)" rx="2" ry="2" />
<text  x="1040.61" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="635.4" y="1973" width="0.4" height="15.0" fill="rgb(240,99,24)" rx="2" ry="2" />
<text  x="638.38" y="1983.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="582.4" y="1989" width="0.2" height="15.0" fill="rgb(235,41,28)" rx="2" ry="2" />
<text  x="585.41" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::runNoInline&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="938.6" y="1989" width="0.2" height="15.0" fill="rgb(221,2,31)" rx="2" ry="2" />
<text  x="941.58" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (20 samples, 0.34%)</title><rect x="397.6" y="1941" width="4.0" height="15.0" fill="rgb(228,7,6)" rx="2" ry="2" />
<text  x="400.60" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="610.3" y="1973" width="0.2" height="15.0" fill="rgb(218,218,11)" rx="2" ry="2" />
<text  x="613.28" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (109 samples, 1.83%)</title><rect x="137.5" y="1973" width="21.5" height="15.0" fill="rgb(215,110,9)" rx="2" ry="2" />
<text  x="140.49" y="1983.5" >f..</text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="700.0" y="1941" width="0.2" height="15.0" fill="rgb(225,83,15)" rx="2" ry="2" />
<text  x="703.01" y="1951.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1147.7" y="1893" width="0.2" height="15.0" fill="rgb(214,41,26)" rx="2" ry="2" />
<text  x="1150.70" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="740.1" y="1877" width="0.2" height="15.0" fill="rgb(243,124,51)" rx="2" ry="2" />
<text  x="743.14" y="1887.5" ></text>
</g>
<g >
<title>sock_def_readable (4 samples, 0.07%)</title><rect x="279.2" y="1493" width="0.8" height="15.0" fill="rgb(252,31,48)" rx="2" ry="2" />
<text  x="282.21" y="1503.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (3 samples, 0.05%)</title><rect x="367.2" y="1957" width="0.6" height="15.0" fill="rgb(253,89,10)" rx="2" ry="2" />
<text  x="370.16" y="1967.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="299.8" y="1829" width="0.2" height="15.0" fill="rgb(246,216,53)" rx="2" ry="2" />
<text  x="302.76" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="370.3" y="1973" width="0.8" height="15.0" fill="rgb(245,214,35)" rx="2" ry="2" />
<text  x="373.32" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="885" width="49.6" height="15.0" fill="rgb(228,139,23)" rx="2" ry="2" />
<text  x="72.49" y="895.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="118.7" y="37" width="0.4" height="15.0" fill="rgb(213,46,21)" rx="2" ry="2" />
<text  x="121.71" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="421.1" y="1909" width="0.2" height="15.0" fill="rgb(254,189,50)" rx="2" ry="2" />
<text  x="424.12" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="597.8" y="1925" width="0.2" height="15.0" fill="rgb(254,21,36)" rx="2" ry="2" />
<text  x="600.83" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1166.9" y="2053" width="0.2" height="15.0" fill="rgb(250,100,38)" rx="2" ry="2" />
<text  x="1169.87" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="1160.0" y="2053" width="0.4" height="15.0" fill="rgb(231,203,7)" rx="2" ry="2" />
<text  x="1162.96" y="2063.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="272.3" y="1733" width="0.2" height="15.0" fill="rgb(237,115,24)" rx="2" ry="2" />
<text  x="275.29" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="606.7" y="1909" width="0.2" height="15.0" fill="rgb(235,171,53)" rx="2" ry="2" />
<text  x="609.72" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="974.6" y="2005" width="0.2" height="15.0" fill="rgb(240,195,41)" rx="2" ry="2" />
<text  x="977.56" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1142.6" y="1957" width="0.2" height="15.0" fill="rgb(216,147,31)" rx="2" ry="2" />
<text  x="1145.56" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="98.5" y="37" width="0.6" height="15.0" fill="rgb(218,43,32)" rx="2" ry="2" />
<text  x="101.55" y="47.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (26 samples, 0.44%)</title><rect x="248.0" y="1941" width="5.1" height="15.0" fill="rgb(237,190,36)" rx="2" ry="2" />
<text  x="250.98" y="1951.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1025.7" y="1957" width="0.2" height="15.0" fill="rgb(240,1,28)" rx="2" ry="2" />
<text  x="1028.75" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (35 samples, 0.59%)</title><rect x="185.1" y="2005" width="6.9" height="15.0" fill="rgb(225,219,20)" rx="2" ry="2" />
<text  x="188.12" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="211.4" y="1957" width="0.2" height="15.0" fill="rgb(254,4,36)" rx="2" ry="2" />
<text  x="214.41" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1269" width="49.6" height="15.0" fill="rgb(220,123,21)" rx="2" ry="2" />
<text  x="72.49" y="1279.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="609.3" y="1989" width="0.2" height="15.0" fill="rgb(206,81,10)" rx="2" ry="2" />
<text  x="612.29" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="958.0" y="1877" width="0.3" height="15.0" fill="rgb(232,78,38)" rx="2" ry="2" />
<text  x="960.95" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="684.4" y="1909" width="0.6" height="15.0" fill="rgb(229,196,46)" rx="2" ry="2" />
<text  x="687.40" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (126 samples, 2.11%)</title><rect x="475.9" y="1973" width="24.9" height="15.0" fill="rgb(232,0,54)" rx="2" ry="2" />
<text  x="478.87" y="1983.5" >f..</text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="639.9" y="1989" width="0.2" height="15.0" fill="rgb(216,157,24)" rx="2" ry="2" />
<text  x="642.93" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="725" width="49.6" height="15.0" fill="rgb(251,181,0)" rx="2" ry="2" />
<text  x="72.49" y="735.5" >[unkn..</text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (5 samples, 0.08%)</title><rect x="583.2" y="1989" width="1.0" height="15.0" fill="rgb(232,85,29)" rx="2" ry="2" />
<text  x="586.20" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="26.0" y="1973" width="0.4" height="15.0" fill="rgb(227,167,18)" rx="2" ry="2" />
<text  x="29.01" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (12 samples, 0.20%)</title><rect x="106.7" y="69" width="2.3" height="15.0" fill="rgb(237,78,27)" rx="2" ry="2" />
<text  x="109.65" y="79.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (24 samples, 0.40%)</title><rect x="336.9" y="1989" width="4.8" height="15.0" fill="rgb(210,129,29)" rx="2" ry="2" />
<text  x="339.92" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="11.4" y="1909" width="1.0" height="15.0" fill="rgb(228,18,28)" rx="2" ry="2" />
<text  x="14.38" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (70 samples, 1.17%)</title><rect x="1093.7" y="1845" width="13.9" height="15.0" fill="rgb(253,1,13)" rx="2" ry="2" />
<text  x="1096.74" y="1855.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="497.0" y="1893" width="0.8" height="15.0" fill="rgb(248,63,53)" rx="2" ry="2" />
<text  x="500.02" y="1903.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="69.3" y="1989" width="0.2" height="15.0" fill="rgb(222,126,10)" rx="2" ry="2" />
<text  x="72.30" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (57 samples, 0.95%)</title><rect x="915.9" y="1973" width="11.2" height="15.0" fill="rgb(218,23,42)" rx="2" ry="2" />
<text  x="918.85" y="1983.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="598.4" y="1909" width="0.2" height="15.0" fill="rgb(216,118,48)" rx="2" ry="2" />
<text  x="601.42" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="744.3" y="1893" width="0.2" height="15.0" fill="rgb(235,22,24)" rx="2" ry="2" />
<text  x="747.29" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="202.7" y="1957" width="0.8" height="15.0" fill="rgb(218,194,40)" rx="2" ry="2" />
<text  x="205.71" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="399.6" y="1861" width="1.2" height="15.0" fill="rgb(249,108,0)" rx="2" ry="2" />
<text  x="402.58" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="26.6" y="1989" width="1.8" height="15.0" fill="rgb(243,180,27)" rx="2" ry="2" />
<text  x="29.60" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::Data::Data (1 samples, 0.02%)</title><rect x="709.7" y="1893" width="0.2" height="15.0" fill="rgb(232,76,36)" rx="2" ry="2" />
<text  x="712.70" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="215.8" y="2021" width="0.2" height="15.0" fill="rgb(223,207,32)" rx="2" ry="2" />
<text  x="218.76" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (7 samples, 0.12%)</title><rect x="393.5" y="2005" width="1.3" height="15.0" fill="rgb(226,154,46)" rx="2" ry="2" />
<text  x="396.45" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="547.8" y="1989" width="0.2" height="15.0" fill="rgb(245,29,1)" rx="2" ry="2" />
<text  x="550.82" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1007.2" y="2005" width="0.2" height="15.0" fill="rgb(249,137,11)" rx="2" ry="2" />
<text  x="1010.17" y="2015.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="255.5" y="1893" width="0.6" height="15.0" fill="rgb(210,140,41)" rx="2" ry="2" />
<text  x="258.49" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (22 samples, 0.37%)</title><rect x="13.0" y="1845" width="4.3" height="15.0" fill="rgb(244,189,13)" rx="2" ry="2" />
<text  x="15.96" y="1855.5" ></text>
</g>
<g >
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(220,134,15)" rx="2" ry="2" />
<text  x="14.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="117.1" y="85" width="0.2" height="15.0" fill="rgb(216,6,25)" rx="2" ry="2" />
<text  x="120.13" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="352.9" y="1941" width="0.4" height="15.0" fill="rgb(254,0,32)" rx="2" ry="2" />
<text  x="355.93" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1925" width="50.0" height="15.0" fill="rgb(215,181,27)" rx="2" ry="2" />
<text  x="72.49" y="1935.5" >[unkn..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="497.0" y="1749" width="0.8" height="15.0" fill="rgb(244,182,10)" rx="2" ry="2" />
<text  x="500.02" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="614.2" y="2021" width="1.0" height="15.0" fill="rgb(247,225,22)" rx="2" ry="2" />
<text  x="617.23" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="658.9" y="1989" width="0.2" height="15.0" fill="rgb(242,153,32)" rx="2" ry="2" />
<text  x="661.90" y="1999.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="711.7" y="1909" width="0.2" height="15.0" fill="rgb(226,134,31)" rx="2" ry="2" />
<text  x="714.68" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (37 samples, 0.62%)</title><rect x="279.0" y="1701" width="7.3" height="15.0" fill="rgb(209,72,16)" rx="2" ry="2" />
<text  x="282.01" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="485.2" y="1941" width="0.2" height="15.0" fill="rgb(241,167,25)" rx="2" ry="2" />
<text  x="488.16" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="862.9" y="1989" width="0.4" height="15.0" fill="rgb(236,226,7)" rx="2" ry="2" />
<text  x="865.88" y="1999.5" ></text>
</g>
<g >
<title>tcp_poll (9 samples, 0.15%)</title><rect x="314.8" y="1893" width="1.8" height="15.0" fill="rgb(242,170,49)" rx="2" ry="2" />
<text  x="317.78" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="215.2" y="2021" width="0.2" height="15.0" fill="rgb(249,217,24)" rx="2" ry="2" />
<text  x="218.17" y="2031.5" ></text>
</g>
<g >
<title>sys_futex (25 samples, 0.42%)</title><rect x="12.4" y="2005" width="4.9" height="15.0" fill="rgb(207,219,2)" rx="2" ry="2" />
<text  x="15.37" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="531.8" y="2005" width="0.6" height="15.0" fill="rgb(208,38,50)" rx="2" ry="2" />
<text  x="534.81" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="746.3" y="1909" width="0.2" height="15.0" fill="rgb(235,192,47)" rx="2" ry="2" />
<text  x="749.26" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (50 samples, 0.84%)</title><rect x="326.2" y="1989" width="9.9" height="15.0" fill="rgb(218,66,35)" rx="2" ry="2" />
<text  x="329.25" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.4" y="1989" width="0.2" height="15.0" fill="rgb(207,26,49)" rx="2" ry="2" />
<text  x="941.39" y="1999.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="10.4" y="1989" width="0.8" height="15.0" fill="rgb(245,72,28)" rx="2" ry="2" />
<text  x="13.40" y="1999.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="285.5" y="1461" width="0.2" height="15.0" fill="rgb(230,100,33)" rx="2" ry="2" />
<text  x="288.53" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1189" width="49.6" height="15.0" fill="rgb(217,217,51)" rx="2" ry="2" />
<text  x="72.49" y="1199.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="537.1" y="2037" width="0.2" height="15.0" fill="rgb(221,212,5)" rx="2" ry="2" />
<text  x="540.15" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (3 samples, 0.05%)</title><rect x="605.9" y="1925" width="0.6" height="15.0" fill="rgb(244,132,35)" rx="2" ry="2" />
<text  x="608.93" y="1935.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (2 samples, 0.03%)</title><rect x="360.8" y="1925" width="0.4" height="15.0" fill="rgb(245,30,15)" rx="2" ry="2" />
<text  x="363.84" y="1935.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="252.7" y="1893" width="0.2" height="15.0" fill="rgb(232,131,46)" rx="2" ry="2" />
<text  x="255.72" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="749.2" y="1925" width="0.2" height="15.0" fill="rgb(211,148,37)" rx="2" ry="2" />
<text  x="752.23" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1157" width="49.6" height="15.0" fill="rgb(229,124,5)" rx="2" ry="2" />
<text  x="72.49" y="1167.5" >[unkn..</text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="211.0" y="1893" width="0.2" height="15.0" fill="rgb(236,186,5)" rx="2" ry="2" />
<text  x="214.02" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (3 samples, 0.05%)</title><rect x="1159.4" y="2053" width="0.6" height="15.0" fill="rgb(238,206,34)" rx="2" ry="2" />
<text  x="1162.36" y="2063.5" ></text>
</g>
<g >
<title>__libc_sendmsg (340 samples, 5.70%)</title><rect x="239.3" y="2037" width="67.2" height="15.0" fill="rgb(242,211,28)" rx="2" ry="2" />
<text  x="242.28" y="2047.5" >__libc_..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="740.7" y="1877" width="1.2" height="15.0" fill="rgb(251,7,10)" rx="2" ry="2" />
<text  x="743.73" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1509" width="49.8" height="15.0" fill="rgb(217,224,27)" rx="2" ry="2" />
<text  x="72.49" y="1519.5" >[unkn..</text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="197.8" y="1941" width="0.4" height="15.0" fill="rgb(229,82,39)" rx="2" ry="2" />
<text  x="200.77" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="168.1" y="1957" width="0.2" height="15.0" fill="rgb(226,135,5)" rx="2" ry="2" />
<text  x="171.12" y="1967.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="119.5" y="1989" width="0.2" height="15.0" fill="rgb(206,84,39)" rx="2" ry="2" />
<text  x="122.50" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1107.4" y="1605" width="0.2" height="15.0" fill="rgb(208,224,52)" rx="2" ry="2" />
<text  x="1110.38" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (56 samples, 0.94%)</title><rect x="18.5" y="2037" width="11.1" height="15.0" fill="rgb(239,130,53)" rx="2" ry="2" />
<text  x="21.50" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="371.9" y="1973" width="1.0" height="15.0" fill="rgb(234,140,35)" rx="2" ry="2" />
<text  x="374.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="285.9" y="1493" width="0.2" height="15.0" fill="rgb(232,126,24)" rx="2" ry="2" />
<text  x="288.93" y="1503.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2 samples, 0.03%)</title><rect x="397.2" y="1893" width="0.4" height="15.0" fill="rgb(227,76,31)" rx="2" ry="2" />
<text  x="400.21" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (8 samples, 0.13%)</title><rect x="1151.1" y="2037" width="1.5" height="15.0" fill="rgb(245,208,35)" rx="2" ry="2" />
<text  x="1154.06" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="967.6" y="1989" width="0.2" height="15.0" fill="rgb(233,83,8)" rx="2" ry="2" />
<text  x="970.64" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (86 samples, 1.44%)</title><rect x="835.6" y="2005" width="17.0" height="15.0" fill="rgb(241,85,15)" rx="2" ry="2" />
<text  x="838.60" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="962.5" y="1893" width="0.2" height="15.0" fill="rgb(226,66,32)" rx="2" ry="2" />
<text  x="965.50" y="1903.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (5 samples, 0.08%)</title><rect x="300.8" y="1925" width="0.9" height="15.0" fill="rgb(247,83,28)" rx="2" ry="2" />
<text  x="303.75" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (37 samples, 0.62%)</title><rect x="279.0" y="1685" width="7.3" height="15.0" fill="rgb(219,72,27)" rx="2" ry="2" />
<text  x="282.01" y="1695.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (24 samples, 0.40%)</title><rect x="248.4" y="1909" width="4.7" height="15.0" fill="rgb(220,129,29)" rx="2" ry="2" />
<text  x="251.37" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (15 samples, 0.25%)</title><rect x="923.0" y="1941" width="2.9" height="15.0" fill="rgb(208,127,7)" rx="2" ry="2" />
<text  x="925.97" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (6 samples, 0.10%)</title><rect x="866.8" y="2037" width="1.2" height="15.0" fill="rgb(242,93,38)" rx="2" ry="2" />
<text  x="869.83" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="341.5" y="1973" width="0.2" height="15.0" fill="rgb(219,180,37)" rx="2" ry="2" />
<text  x="344.47" y="1983.5" ></text>
</g>
<g >
<title>cpu_needs_another_gp (1 samples, 0.02%)</title><rect x="689.1" y="1829" width="0.2" height="15.0" fill="rgb(254,76,19)" rx="2" ry="2" />
<text  x="692.14" y="1839.5" ></text>
</g>
<g >
<title>sock_sendmsg (246 samples, 4.12%)</title><rect x="253.1" y="1941" width="48.6" height="15.0" fill="rgb(219,71,40)" rx="2" ry="2" />
<text  x="256.12" y="1951.5" >sock..</text>
</g>
<g >
<title>sys_recvfrom (3 samples, 0.05%)</title><rect x="1112.3" y="2021" width="0.6" height="15.0" fill="rgb(224,119,20)" rx="2" ry="2" />
<text  x="1115.32" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="866.8" y="2021" width="1.2" height="15.0" fill="rgb(225,144,6)" rx="2" ry="2" />
<text  x="869.83" y="2031.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (5 samples, 0.08%)</title><rect x="366.0" y="1973" width="1.0" height="15.0" fill="rgb(208,154,7)" rx="2" ry="2" />
<text  x="368.98" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="396.8" y="1909" width="0.4" height="15.0" fill="rgb(248,222,16)" rx="2" ry="2" />
<text  x="399.81" y="1919.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="382.2" y="1989" width="0.2" height="15.0" fill="rgb(231,17,50)" rx="2" ry="2" />
<text  x="385.18" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1957" width="50.0" height="15.0" fill="rgb(231,170,38)" rx="2" ry="2" />
<text  x="72.49" y="1967.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::Baton (7 samples, 0.12%)</title><rect x="176.4" y="2005" width="1.4" height="15.0" fill="rgb(237,147,17)" rx="2" ry="2" />
<text  x="179.43" y="2015.5" ></text>
</g>
<g >
<title>malloc (52 samples, 0.87%)</title><rect x="1178.9" y="2053" width="10.3" height="15.0" fill="rgb(213,60,8)" rx="2" ry="2" />
<text  x="1181.93" y="2063.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="502.4" y="1973" width="0.2" height="15.0" fill="rgb(216,39,48)" rx="2" ry="2" />
<text  x="505.36" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="311.2" y="1941" width="0.2" height="15.0" fill="rgb(252,83,4)" rx="2" ry="2" />
<text  x="314.23" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="872.0" y="2037" width="0.2" height="15.0" fill="rgb(220,131,48)" rx="2" ry="2" />
<text  x="874.97" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (3 samples, 0.05%)</title><rect x="967.8" y="1989" width="0.6" height="15.0" fill="rgb(248,46,11)" rx="2" ry="2" />
<text  x="970.84" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="167.1" y="1925" width="0.4" height="15.0" fill="rgb(243,49,36)" rx="2" ry="2" />
<text  x="170.14" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="355.9" y="1957" width="0.2" height="15.0" fill="rgb(216,16,14)" rx="2" ry="2" />
<text  x="358.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1733" width="49.8" height="15.0" fill="rgb(250,12,29)" rx="2" ry="2" />
<text  x="72.49" y="1743.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="422.5" y="2005" width="0.6" height="15.0" fill="rgb(235,76,24)" rx="2" ry="2" />
<text  x="425.51" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (3 samples, 0.05%)</title><rect x="827.9" y="2005" width="0.6" height="15.0" fill="rgb(234,1,44)" rx="2" ry="2" />
<text  x="830.90" y="2015.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="25.2" y="1941" width="0.2" height="15.0" fill="rgb(212,134,50)" rx="2" ry="2" />
<text  x="28.22" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="171.1" y="1957" width="0.4" height="15.0" fill="rgb(253,163,28)" rx="2" ry="2" />
<text  x="174.09" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="602.4" y="2037" width="0.2" height="15.0" fill="rgb(251,4,0)" rx="2" ry="2" />
<text  x="605.37" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="603.2" y="1989" width="0.8" height="15.0" fill="rgb(224,116,8)" rx="2" ry="2" />
<text  x="606.16" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="1046.5" y="1829" width="0.8" height="15.0" fill="rgb(254,214,47)" rx="2" ry="2" />
<text  x="1049.50" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="191.2" y="1957" width="0.4" height="15.0" fill="rgb(254,216,37)" rx="2" ry="2" />
<text  x="194.25" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="320.5" y="2005" width="0.4" height="15.0" fill="rgb(232,190,5)" rx="2" ry="2" />
<text  x="323.52" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (3 samples, 0.05%)</title><rect x="1142.8" y="1957" width="0.6" height="15.0" fill="rgb(230,64,22)" rx="2" ry="2" />
<text  x="1145.76" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="419.3" y="1909" width="0.2" height="15.0" fill="rgb(232,21,43)" rx="2" ry="2" />
<text  x="422.34" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1557" width="49.8" height="15.0" fill="rgb(252,127,37)" rx="2" ry="2" />
<text  x="72.49" y="1567.5" >[unkn..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="172.1" y="1957" width="0.4" height="15.0" fill="rgb(205,98,5)" rx="2" ry="2" />
<text  x="175.08" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (37 samples, 0.62%)</title><rect x="279.0" y="1669" width="7.3" height="15.0" fill="rgb(243,36,13)" rx="2" ry="2" />
<text  x="282.01" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="1167.1" y="2053" width="1.2" height="15.0" fill="rgb(215,106,41)" rx="2" ry="2" />
<text  x="1170.07" y="2063.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="160.0" y="1973" width="0.2" height="15.0" fill="rgb(207,210,43)" rx="2" ry="2" />
<text  x="163.02" y="1983.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="205.9" y="1941" width="0.2" height="15.0" fill="rgb(221,177,45)" rx="2" ry="2" />
<text  x="208.88" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (12 samples, 0.20%)</title><rect x="814.9" y="1989" width="2.3" height="15.0" fill="rgb(214,164,12)" rx="2" ry="2" />
<text  x="817.85" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="597.6" y="1941" width="1.0" height="15.0" fill="rgb(212,53,3)" rx="2" ry="2" />
<text  x="600.63" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (75 samples, 1.26%)</title><rect x="727.5" y="1893" width="14.8" height="15.0" fill="rgb(225,30,30)" rx="2" ry="2" />
<text  x="730.49" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (47 samples, 0.79%)</title><rect x="194.4" y="2021" width="9.3" height="15.0" fill="rgb(212,50,1)" rx="2" ry="2" />
<text  x="197.41" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="533.2" y="2005" width="0.6" height="15.0" fill="rgb(215,125,17)" rx="2" ry="2" />
<text  x="536.19" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (1 samples, 0.02%)</title><rect x="662.7" y="1989" width="0.2" height="15.0" fill="rgb(208,128,18)" rx="2" ry="2" />
<text  x="665.66" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="602.6" y="2037" width="0.2" height="15.0" fill="rgb(237,219,21)" rx="2" ry="2" />
<text  x="605.57" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (5 samples, 0.08%)</title><rect x="457.1" y="2005" width="1.0" height="15.0" fill="rgb(222,30,29)" rx="2" ry="2" />
<text  x="460.10" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="759.1" y="1957" width="0.4" height="15.0" fill="rgb(239,158,49)" rx="2" ry="2" />
<text  x="762.11" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (6 samples, 0.10%)</title><rect x="1095.1" y="1493" width="1.2" height="15.0" fill="rgb(248,183,27)" rx="2" ry="2" />
<text  x="1098.13" y="1503.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (6 samples, 0.10%)</title><rect x="417.0" y="1989" width="1.2" height="15.0" fill="rgb(209,213,25)" rx="2" ry="2" />
<text  x="419.97" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (95 samples, 1.59%)</title><rect x="481.2" y="1957" width="18.8" height="15.0" fill="rgb(209,40,1)" rx="2" ry="2" />
<text  x="484.21" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (14 samples, 0.23%)</title><rect x="358.5" y="1973" width="2.7" height="15.0" fill="rgb(228,15,2)" rx="2" ry="2" />
<text  x="361.47" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (4 samples, 0.07%)</title><rect x="394.0" y="1957" width="0.8" height="15.0" fill="rgb(219,146,42)" rx="2" ry="2" />
<text  x="397.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="430.6" y="2037" width="0.2" height="15.0" fill="rgb(248,9,48)" rx="2" ry="2" />
<text  x="433.61" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="469" width="49.6" height="15.0" fill="rgb(253,109,10)" rx="2" ry="2" />
<text  x="72.49" y="479.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="648.6" y="2037" width="0.8" height="15.0" fill="rgb(251,88,39)" rx="2" ry="2" />
<text  x="651.62" y="2047.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (2 samples, 0.03%)</title><rect x="1116.9" y="2037" width="0.4" height="15.0" fill="rgb(241,221,11)" rx="2" ry="2" />
<text  x="1119.87" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="836.6" y="1989" width="0.4" height="15.0" fill="rgb(238,75,27)" rx="2" ry="2" />
<text  x="839.59" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (11 samples, 0.18%)</title><rect x="363.4" y="1925" width="2.2" height="15.0" fill="rgb(252,105,53)" rx="2" ry="2" />
<text  x="366.41" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="111.6" y="37" width="0.2" height="15.0" fill="rgb(253,170,11)" rx="2" ry="2" />
<text  x="114.59" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (20 samples, 0.34%)</title><rect x="651.6" y="2037" width="3.9" height="15.0" fill="rgb(229,113,1)" rx="2" ry="2" />
<text  x="654.59" y="2047.5" ></text>
</g>
<g >
<title>__strlen_avx2 (6 samples, 0.10%)</title><rect x="179.8" y="2021" width="1.2" height="15.0" fill="rgb(209,154,15)" rx="2" ry="2" />
<text  x="182.79" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (8 samples, 0.13%)</title><rect x="599.8" y="2005" width="1.6" height="15.0" fill="rgb(211,67,39)" rx="2" ry="2" />
<text  x="602.80" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="598.8" y="1941" width="0.2" height="15.0" fill="rgb(206,40,30)" rx="2" ry="2" />
<text  x="601.81" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (16 samples, 0.27%)</title><rect x="955.4" y="1893" width="3.1" height="15.0" fill="rgb(215,89,49)" rx="2" ry="2" />
<text  x="958.38" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (36 samples, 0.60%)</title><rect x="204.7" y="1989" width="7.1" height="15.0" fill="rgb(245,61,53)" rx="2" ry="2" />
<text  x="207.69" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="271.7" y="1797" width="0.8" height="15.0" fill="rgb(228,178,49)" rx="2" ry="2" />
<text  x="274.70" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="101.5" y="37" width="0.8" height="15.0" fill="rgb(222,160,18)" rx="2" ry="2" />
<text  x="104.51" y="47.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (10 samples, 0.17%)</title><rect x="707.9" y="1909" width="2.0" height="15.0" fill="rgb(230,21,36)" rx="2" ry="2" />
<text  x="710.92" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (10 samples, 0.17%)</title><rect x="516.8" y="2005" width="2.0" height="15.0" fill="rgb(212,190,42)" rx="2" ry="2" />
<text  x="519.79" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="505.7" y="1973" width="0.2" height="15.0" fill="rgb(206,191,49)" rx="2" ry="2" />
<text  x="508.72" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="380.8" y="1989" width="0.2" height="15.0" fill="rgb(218,143,38)" rx="2" ry="2" />
<text  x="383.80" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (71 samples, 1.19%)</title><rect x="1093.5" y="1877" width="14.1" height="15.0" fill="rgb(233,34,5)" rx="2" ry="2" />
<text  x="1096.54" y="1887.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="281.6" y="1445" width="0.4" height="15.0" fill="rgb(207,37,20)" rx="2" ry="2" />
<text  x="284.58" y="1455.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="168.1" y="1941" width="0.2" height="15.0" fill="rgb(226,229,31)" rx="2" ry="2" />
<text  x="171.12" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_mss (13 samples, 0.22%)</title><rect x="297.8" y="1877" width="2.6" height="15.0" fill="rgb(232,82,26)" rx="2" ry="2" />
<text  x="300.79" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="279.4" y="1349" width="0.2" height="15.0" fill="rgb(233,144,25)" rx="2" ry="2" />
<text  x="282.40" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (3 samples, 0.05%)</title><rect x="598.8" y="1957" width="0.6" height="15.0" fill="rgb(240,76,8)" rx="2" ry="2" />
<text  x="601.81" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="460.1" y="1989" width="0.6" height="15.0" fill="rgb(221,143,13)" rx="2" ry="2" />
<text  x="463.06" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="969.2" y="1989" width="0.2" height="15.0" fill="rgb(230,139,49)" rx="2" ry="2" />
<text  x="972.22" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="789" width="49.6" height="15.0" fill="rgb(209,225,23)" rx="2" ry="2" />
<text  x="72.49" y="799.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="857.3" y="1973" width="0.2" height="15.0" fill="rgb(212,176,30)" rx="2" ry="2" />
<text  x="860.35" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="661" width="49.6" height="15.0" fill="rgb(212,14,9)" rx="2" ry="2" />
<text  x="72.49" y="671.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (14 samples, 0.23%)</title><rect x="640.5" y="2005" width="2.8" height="15.0" fill="rgb(229,52,22)" rx="2" ry="2" />
<text  x="643.52" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (23 samples, 0.39%)</title><rect x="385.7" y="1957" width="4.6" height="15.0" fill="rgb(234,98,22)" rx="2" ry="2" />
<text  x="388.74" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (23 samples, 0.39%)</title><rect x="361.4" y="1973" width="4.6" height="15.0" fill="rgb(226,31,41)" rx="2" ry="2" />
<text  x="364.43" y="1983.5" ></text>
</g>
<g >
<title>malloc (21 samples, 0.35%)</title><rect x="998.7" y="2037" width="4.1" height="15.0" fill="rgb(245,101,6)" rx="2" ry="2" />
<text  x="1001.67" y="2047.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="1064.7" y="1925" width="0.8" height="15.0" fill="rgb(235,190,10)" rx="2" ry="2" />
<text  x="1067.69" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (31 samples, 0.52%)</title><rect x="558.5" y="1989" width="6.1" height="15.0" fill="rgb(254,48,27)" rx="2" ry="2" />
<text  x="561.49" y="1999.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="622.1" y="1973" width="0.6" height="15.0" fill="rgb(227,54,17)" rx="2" ry="2" />
<text  x="625.14" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (8 samples, 0.13%)</title><rect x="410.3" y="1973" width="1.5" height="15.0" fill="rgb(217,219,26)" rx="2" ry="2" />
<text  x="413.25" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (8 samples, 0.13%)</title><rect x="663.4" y="2037" width="1.6" height="15.0" fill="rgb(238,170,48)" rx="2" ry="2" />
<text  x="666.45" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (8 samples, 0.13%)</title><rect x="114.4" y="53" width="1.5" height="15.0" fill="rgb(218,54,8)" rx="2" ry="2" />
<text  x="117.36" y="63.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1092.8" y="1893" width="0.2" height="15.0" fill="rgb(224,109,22)" rx="2" ry="2" />
<text  x="1095.75" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (18 samples, 0.30%)</title><rect x="397.6" y="1909" width="3.6" height="15.0" fill="rgb(238,177,14)" rx="2" ry="2" />
<text  x="400.60" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (22 samples, 0.37%)</title><rect x="608.9" y="2037" width="4.3" height="15.0" fill="rgb(213,5,29)" rx="2" ry="2" />
<text  x="611.89" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="372.9" y="1973" width="0.4" height="15.0" fill="rgb(252,218,3)" rx="2" ry="2" />
<text  x="375.89" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="279.2" y="1445" width="0.8" height="15.0" fill="rgb(208,102,32)" rx="2" ry="2" />
<text  x="282.21" y="1455.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="497.0" y="1781" width="0.8" height="15.0" fill="rgb(208,137,39)" rx="2" ry="2" />
<text  x="500.02" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="172.7" y="1989" width="0.2" height="15.0" fill="rgb(252,82,49)" rx="2" ry="2" />
<text  x="175.67" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="25.4" y="1957" width="0.2" height="15.0" fill="rgb(231,1,34)" rx="2" ry="2" />
<text  x="28.42" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="861.9" y="1973" width="1.0" height="15.0" fill="rgb(221,147,29)" rx="2" ry="2" />
<text  x="864.89" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="763.5" y="1941" width="0.2" height="15.0" fill="rgb(229,51,40)" rx="2" ry="2" />
<text  x="766.46" y="1951.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="292.6" y="1669" width="0.2" height="15.0" fill="rgb(252,94,24)" rx="2" ry="2" />
<text  x="295.65" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (11 samples, 0.18%)</title><rect x="152.7" y="1941" width="2.2" height="15.0" fill="rgb(240,104,25)" rx="2" ry="2" />
<text  x="155.71" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::multiOpEnd (1 samples, 0.02%)</title><rect x="616.4" y="2037" width="0.2" height="15.0" fill="rgb(228,98,51)" rx="2" ry="2" />
<text  x="619.41" y="2047.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="990.6" y="2037" width="0.2" height="15.0" fill="rgb(246,129,48)" rx="2" ry="2" />
<text  x="993.57" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="23.2" y="1941" width="0.2" height="15.0" fill="rgb(211,39,1)" rx="2" ry="2" />
<text  x="26.24" y="1951.5" ></text>
</g>
<g >
<title>native_sched_clock (7 samples, 0.12%)</title><rect x="1108.8" y="1877" width="1.3" height="15.0" fill="rgb(222,187,47)" rx="2" ry="2" />
<text  x="1111.76" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (4 samples, 0.07%)</title><rect x="70.9" y="37" width="0.8" height="15.0" fill="rgb(249,186,1)" rx="2" ry="2" />
<text  x="73.88" y="47.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="231.8" y="2021" width="0.2" height="15.0" fill="rgb(209,165,48)" rx="2" ry="2" />
<text  x="234.77" y="2031.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="748.8" y="1925" width="0.2" height="15.0" fill="rgb(240,157,9)" rx="2" ry="2" />
<text  x="751.83" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="592.7" y="1957" width="0.4" height="15.0" fill="rgb(211,77,18)" rx="2" ry="2" />
<text  x="595.69" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="379.8" y="1973" width="0.8" height="15.0" fill="rgb(252,173,0)" rx="2" ry="2" />
<text  x="382.81" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="181" width="49.6" height="15.0" fill="rgb(228,45,17)" rx="2" ry="2" />
<text  x="72.49" y="191.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="536.0" y="2037" width="0.2" height="15.0" fill="rgb(238,222,44)" rx="2" ry="2" />
<text  x="538.96" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.07%)</title><rect x="279.2" y="1461" width="0.8" height="15.0" fill="rgb(241,112,22)" rx="2" ry="2" />
<text  x="282.21" y="1471.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (42 samples, 0.70%)</title><rect x="930.1" y="1973" width="8.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="933.08" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (13 samples, 0.22%)</title><rect x="1126.2" y="2005" width="2.5" height="15.0" fill="rgb(253,127,18)" rx="2" ry="2" />
<text  x="1129.16" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="205.9" y="1957" width="0.2" height="15.0" fill="rgb(206,201,19)" rx="2" ry="2" />
<text  x="208.88" y="1967.5" ></text>
</g>
<g >
<title>sched_clock (8 samples, 0.13%)</title><rect x="1108.6" y="1893" width="1.5" height="15.0" fill="rgb(216,216,50)" rx="2" ry="2" />
<text  x="1111.57" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (2 samples, 0.03%)</title><rect x="656.7" y="2037" width="0.4" height="15.0" fill="rgb(230,139,48)" rx="2" ry="2" />
<text  x="659.73" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="365.4" y="1909" width="0.2" height="15.0" fill="rgb(233,22,54)" rx="2" ry="2" />
<text  x="368.38" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (46 samples, 0.77%)</title><rect x="953.6" y="1909" width="9.1" height="15.0" fill="rgb(236,66,46)" rx="2" ry="2" />
<text  x="956.60" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1166.3" y="2053" width="0.2" height="15.0" fill="rgb(245,112,47)" rx="2" ry="2" />
<text  x="1169.28" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (66 samples, 1.11%)</title><rect x="1094.3" y="1573" width="13.1" height="15.0" fill="rgb(215,187,42)" rx="2" ry="2" />
<text  x="1097.34" y="1583.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="296.8" y="1749" width="0.2" height="15.0" fill="rgb(235,169,40)" rx="2" ry="2" />
<text  x="299.80" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="87.3" y="37" width="0.2" height="15.0" fill="rgb(229,175,11)" rx="2" ry="2" />
<text  x="90.28" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="20.1" y="1941" width="0.2" height="15.0" fill="rgb(244,89,29)" rx="2" ry="2" />
<text  x="23.08" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (14 samples, 0.23%)</title><rect x="398.0" y="1877" width="2.8" height="15.0" fill="rgb(252,145,28)" rx="2" ry="2" />
<text  x="401.00" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (19 samples, 0.32%)</title><rect x="501.2" y="1989" width="3.7" height="15.0" fill="rgb(209,59,13)" rx="2" ry="2" />
<text  x="504.17" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="873.8" y="2021" width="0.1" height="15.0" fill="rgb(227,89,49)" rx="2" ry="2" />
<text  x="876.75" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (43 samples, 0.72%)</title><rect x="1121.0" y="2053" width="8.5" height="15.0" fill="rgb(227,226,27)" rx="2" ry="2" />
<text  x="1124.02" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (45 samples, 0.75%)</title><rect x="1140.0" y="2005" width="8.9" height="15.0" fill="rgb(234,38,21)" rx="2" ry="2" />
<text  x="1142.99" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (17 samples, 0.28%)</title><rect x="668.0" y="2005" width="3.4" height="15.0" fill="rgb(243,44,31)" rx="2" ry="2" />
<text  x="670.99" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="349.0" y="1973" width="0.2" height="15.0" fill="rgb(215,67,23)" rx="2" ry="2" />
<text  x="351.98" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (33 samples, 0.55%)</title><rect x="286.3" y="1717" width="6.5" height="15.0" fill="rgb(231,6,53)" rx="2" ry="2" />
<text  x="289.32" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="199.0" y="1957" width="0.2" height="15.0" fill="rgb(213,130,1)" rx="2" ry="2" />
<text  x="201.96" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="612.1" y="1989" width="1.1" height="15.0" fill="rgb(210,125,29)" rx="2" ry="2" />
<text  x="615.06" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="658.5" y="2005" width="2.0" height="15.0" fill="rgb(231,83,10)" rx="2" ry="2" />
<text  x="661.51" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="499.6" y="1925" width="0.4" height="15.0" fill="rgb(208,98,49)" rx="2" ry="2" />
<text  x="502.59" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (5 samples, 0.08%)</title><rect x="427.2" y="2037" width="1.0" height="15.0" fill="rgb(237,39,6)" rx="2" ry="2" />
<text  x="430.25" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="373.9" y="1989" width="0.2" height="15.0" fill="rgb(217,178,5)" rx="2" ry="2" />
<text  x="376.88" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (74 samples, 1.24%)</title><rect x="278.2" y="1749" width="14.6" height="15.0" fill="rgb(229,95,10)" rx="2" ry="2" />
<text  x="281.22" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="825.7" y="2005" width="2.2" height="15.0" fill="rgb(228,113,43)" rx="2" ry="2" />
<text  x="828.72" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="602.6" y="2021" width="0.2" height="15.0" fill="rgb(205,53,42)" rx="2" ry="2" />
<text  x="605.57" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="549" width="49.6" height="15.0" fill="rgb(222,135,6)" rx="2" ry="2" />
<text  x="72.49" y="559.5" >[unkn..</text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (5 samples, 0.08%)</title><rect x="431.0" y="2005" width="1.0" height="15.0" fill="rgb(229,173,1)" rx="2" ry="2" />
<text  x="434.01" y="2015.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="286.1" y="1573" width="0.2" height="15.0" fill="rgb(248,193,17)" rx="2" ry="2" />
<text  x="289.12" y="1583.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="743.5" y="1893" width="0.4" height="15.0" fill="rgb(222,30,47)" rx="2" ry="2" />
<text  x="746.50" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="857.1" y="1941" width="0.2" height="15.0" fill="rgb(212,3,17)" rx="2" ry="2" />
<text  x="860.15" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (6 samples, 0.10%)</title><rect x="935.2" y="1893" width="1.2" height="15.0" fill="rgb(215,64,9)" rx="2" ry="2" />
<text  x="938.22" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="365.4" y="1877" width="0.2" height="15.0" fill="rgb(206,70,49)" rx="2" ry="2" />
<text  x="368.38" y="1887.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="119.3" y="1861" width="0.2" height="15.0" fill="rgb(217,146,15)" rx="2" ry="2" />
<text  x="122.30" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="25.4" y="1941" width="0.2" height="15.0" fill="rgb(235,71,3)" rx="2" ry="2" />
<text  x="28.42" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="318.3" y="2037" width="0.4" height="15.0" fill="rgb(220,200,25)" rx="2" ry="2" />
<text  x="321.34" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (13 samples, 0.22%)</title><rect x="823.0" y="2005" width="2.5" height="15.0" fill="rgb(236,178,16)" rx="2" ry="2" />
<text  x="825.95" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="1064.7" y="1909" width="0.8" height="15.0" fill="rgb(220,130,19)" rx="2" ry="2" />
<text  x="1067.69" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (38 samples, 0.64%)</title><rect x="732.6" y="1877" width="7.5" height="15.0" fill="rgb(224,202,7)" rx="2" ry="2" />
<text  x="735.63" y="1887.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (3 samples, 0.05%)</title><rect x="54.1" y="2037" width="0.6" height="15.0" fill="rgb(206,93,38)" rx="2" ry="2" />
<text  x="57.08" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="892.9" y="2005" width="0.4" height="15.0" fill="rgb(215,209,38)" rx="2" ry="2" />
<text  x="895.92" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="596.8" y="1909" width="0.4" height="15.0" fill="rgb(222,166,49)" rx="2" ry="2" />
<text  x="599.84" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (8 samples, 0.13%)</title><rect x="725.9" y="1877" width="1.6" height="15.0" fill="rgb(240,161,43)" rx="2" ry="2" />
<text  x="728.91" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="740.3" y="1877" width="0.2" height="15.0" fill="rgb(222,3,17)" rx="2" ry="2" />
<text  x="743.34" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1333" width="49.6" height="15.0" fill="rgb(241,56,36)" rx="2" ry="2" />
<text  x="72.49" y="1343.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="533.6" y="1989" width="0.2" height="15.0" fill="rgb(215,95,17)" rx="2" ry="2" />
<text  x="536.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="617.6" y="1973" width="0.8" height="15.0" fill="rgb(233,190,20)" rx="2" ry="2" />
<text  x="620.59" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="168.5" y="1957" width="0.2" height="15.0" fill="rgb(211,128,20)" rx="2" ry="2" />
<text  x="171.52" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (6 samples, 0.10%)</title><rect x="873.4" y="2037" width="1.1" height="15.0" fill="rgb(254,12,2)" rx="2" ry="2" />
<text  x="876.36" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="492.3" y="1909" width="0.8" height="15.0" fill="rgb(241,100,31)" rx="2" ry="2" />
<text  x="495.28" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="348.0" y="1941" width="0.2" height="15.0" fill="rgb(245,148,29)" rx="2" ry="2" />
<text  x="350.99" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (9 samples, 0.15%)</title><rect x="927.1" y="1973" width="1.8" height="15.0" fill="rgb(244,38,11)" rx="2" ry="2" />
<text  x="930.12" y="1983.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="711.5" y="1909" width="0.2" height="15.0" fill="rgb(221,24,15)" rx="2" ry="2" />
<text  x="714.48" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="528.1" y="2005" width="1.1" height="15.0" fill="rgb(227,96,38)" rx="2" ry="2" />
<text  x="531.05" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (38 samples, 0.64%)</title><rect x="918.4" y="1957" width="7.5" height="15.0" fill="rgb(226,123,9)" rx="2" ry="2" />
<text  x="921.42" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (12 samples, 0.20%)</title><rect x="737.4" y="1861" width="2.3" height="15.0" fill="rgb(218,118,25)" rx="2" ry="2" />
<text  x="740.37" y="1871.5" ></text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="365.4" y="1765" width="0.2" height="15.0" fill="rgb(244,4,36)" rx="2" ry="2" />
<text  x="368.38" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="206.5" y="1941" width="1.9" height="15.0" fill="rgb(250,8,44)" rx="2" ry="2" />
<text  x="209.47" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9 samples, 0.15%)</title><rect x="387.3" y="1941" width="1.8" height="15.0" fill="rgb(241,179,7)" rx="2" ry="2" />
<text  x="390.32" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="964.9" y="1909" width="0.8" height="15.0" fill="rgb(226,121,18)" rx="2" ry="2" />
<text  x="967.87" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="166.9" y="1941" width="0.6" height="15.0" fill="rgb(234,55,15)" rx="2" ry="2" />
<text  x="169.94" y="1951.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="1111.9" y="1925" width="0.4" height="15.0" fill="rgb(221,58,17)" rx="2" ry="2" />
<text  x="1114.93" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="204.9" y="1957" width="0.2" height="15.0" fill="rgb(232,187,34)" rx="2" ry="2" />
<text  x="207.89" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (8 samples, 0.13%)</title><rect x="813.3" y="1989" width="1.6" height="15.0" fill="rgb(215,143,13)" rx="2" ry="2" />
<text  x="816.27" y="1999.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="295.4" y="1829" width="0.2" height="15.0" fill="rgb(235,113,35)" rx="2" ry="2" />
<text  x="298.41" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (5 samples, 0.08%)</title><rect x="412.8" y="2005" width="1.0" height="15.0" fill="rgb(249,175,47)" rx="2" ry="2" />
<text  x="415.82" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (18 samples, 0.30%)</title><rect x="755.0" y="1973" width="3.5" height="15.0" fill="rgb(222,126,31)" rx="2" ry="2" />
<text  x="757.96" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1109" width="49.6" height="15.0" fill="rgb(217,62,6)" rx="2" ry="2" />
<text  x="72.49" y="1119.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="629.3" y="1973" width="0.2" height="15.0" fill="rgb(250,91,40)" rx="2" ry="2" />
<text  x="632.25" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="28.4" y="1989" width="0.2" height="15.0" fill="rgb(244,119,32)" rx="2" ry="2" />
<text  x="31.38" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="576.5" y="1941" width="0.4" height="15.0" fill="rgb(244,32,1)" rx="2" ry="2" />
<text  x="579.48" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="640.1" y="1989" width="0.2" height="15.0" fill="rgb(243,79,50)" rx="2" ry="2" />
<text  x="643.12" y="1999.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(213,223,46)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (5 samples, 0.08%)</title><rect x="651.6" y="1989" width="1.0" height="15.0" fill="rgb(241,89,22)" rx="2" ry="2" />
<text  x="654.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (806 samples, 13.50%)</title><rect x="67.7" y="2037" width="159.3" height="15.0" fill="rgb(249,184,7)" rx="2" ry="2" />
<text  x="70.72" y="2047.5" >[unknown]</text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="250.9" y="1893" width="0.6" height="15.0" fill="rgb(220,81,35)" rx="2" ry="2" />
<text  x="253.94" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (2 samples, 0.03%)</title><rect x="317.9" y="2037" width="0.4" height="15.0" fill="rgb(212,190,17)" rx="2" ry="2" />
<text  x="320.95" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (13 samples, 0.22%)</title><rect x="943.9" y="1909" width="2.6" height="15.0" fill="rgb(211,156,35)" rx="2" ry="2" />
<text  x="946.92" y="1919.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.08%)</title><rect x="307.5" y="2037" width="1.0" height="15.0" fill="rgb(205,84,9)" rx="2" ry="2" />
<text  x="310.47" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="621.3" y="1941" width="0.8" height="15.0" fill="rgb(240,37,42)" rx="2" ry="2" />
<text  x="624.35" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="974.8" y="2005" width="0.2" height="15.0" fill="rgb(241,87,54)" rx="2" ry="2" />
<text  x="977.75" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="191.8" y="1989" width="0.2" height="15.0" fill="rgb(224,144,0)" rx="2" ry="2" />
<text  x="194.84" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (27 samples, 0.45%)</title><rect x="1067.8" y="1877" width="5.4" height="15.0" fill="rgb(206,62,18)" rx="2" ry="2" />
<text  x="1070.85" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="132.7" y="1973" width="1.2" height="15.0" fill="rgb(205,3,41)" rx="2" ry="2" />
<text  x="135.74" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="607.7" y="1925" width="0.2" height="15.0" fill="rgb(213,227,39)" rx="2" ry="2" />
<text  x="610.71" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="208.6" y="1909" width="0.2" height="15.0" fill="rgb(233,165,4)" rx="2" ry="2" />
<text  x="211.64" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="864.5" y="2005" width="2.3" height="15.0" fill="rgb(224,225,53)" rx="2" ry="2" />
<text  x="867.46" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (4 samples, 0.07%)</title><rect x="854.2" y="1957" width="0.8" height="15.0" fill="rgb(249,86,25)" rx="2" ry="2" />
<text  x="857.18" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="691.5" y="1925" width="0.2" height="15.0" fill="rgb(232,218,46)" rx="2" ry="2" />
<text  x="694.51" y="1935.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.08%)</title><rect x="1003.2" y="2037" width="1.0" height="15.0" fill="rgb(229,212,33)" rx="2" ry="2" />
<text  x="1006.22" y="2047.5" ></text>
</g>
<g >
<title>skb_release_all (14 samples, 0.23%)</title><rect x="282.0" y="1445" width="2.7" height="15.0" fill="rgb(253,118,11)" rx="2" ry="2" />
<text  x="284.97" y="1455.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="708.7" y="1893" width="1.0" height="15.0" fill="rgb(242,143,24)" rx="2" ry="2" />
<text  x="711.71" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="495.6" y="1909" width="0.4" height="15.0" fill="rgb(210,29,36)" rx="2" ry="2" />
<text  x="498.64" y="1919.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (6 samples, 0.10%)</title><rect x="333.6" y="1941" width="1.1" height="15.0" fill="rgb(220,92,11)" rx="2" ry="2" />
<text  x="336.56" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (317 samples, 5.31%)</title><rect x="539.7" y="2037" width="62.7" height="15.0" fill="rgb(233,82,18)" rx="2" ry="2" />
<text  x="542.72" y="2047.5" >facebo..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="254.3" y="1877" width="0.2" height="15.0" fill="rgb(231,49,37)" rx="2" ry="2" />
<text  x="257.30" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="751.2" y="1909" width="0.4" height="15.0" fill="rgb(240,187,25)" rx="2" ry="2" />
<text  x="754.21" y="1919.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1092.6" y="1893" width="0.2" height="15.0" fill="rgb(234,192,43)" rx="2" ry="2" />
<text  x="1095.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="133" width="49.6" height="15.0" fill="rgb(252,174,52)" rx="2" ry="2" />
<text  x="72.49" y="143.5" >[unkn..</text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="598.0" y="1909" width="0.2" height="15.0" fill="rgb(209,17,47)" rx="2" ry="2" />
<text  x="601.02" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (7 samples, 0.12%)</title><rect x="1160.4" y="2053" width="1.3" height="15.0" fill="rgb(228,21,34)" rx="2" ry="2" />
<text  x="1163.35" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="818.2" y="1973" width="0.8" height="15.0" fill="rgb(217,21,31)" rx="2" ry="2" />
<text  x="821.21" y="1983.5" ></text>
</g>
<g >
<title>copy_page_to_iter (13 samples, 0.22%)</title><rect x="1090.4" y="1909" width="2.6" height="15.0" fill="rgb(206,74,24)" rx="2" ry="2" />
<text  x="1093.38" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (69 samples, 1.16%)</title><rect x="1093.9" y="1765" width="13.7" height="15.0" fill="rgb(220,65,54)" rx="2" ry="2" />
<text  x="1096.94" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (3 samples, 0.05%)</title><rect x="1004.6" y="2037" width="0.6" height="15.0" fill="rgb(219,113,6)" rx="2" ry="2" />
<text  x="1007.60" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1040.2" y="1861" width="0.2" height="15.0" fill="rgb(241,205,39)" rx="2" ry="2" />
<text  x="1043.18" y="1871.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="609.1" y="1989" width="0.2" height="15.0" fill="rgb(221,58,0)" rx="2" ry="2" />
<text  x="612.09" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (8 samples, 0.13%)</title><rect x="425.7" y="2037" width="1.5" height="15.0" fill="rgb(248,154,7)" rx="2" ry="2" />
<text  x="428.67" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (23 samples, 0.39%)</title><rect x="932.5" y="1909" width="4.5" height="15.0" fill="rgb(221,220,35)" rx="2" ry="2" />
<text  x="935.46" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (8 samples, 0.13%)</title><rect x="1007.8" y="2005" width="1.5" height="15.0" fill="rgb(248,34,32)" rx="2" ry="2" />
<text  x="1010.76" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="616.6" y="1989" width="6.1" height="15.0" fill="rgb(208,17,5)" rx="2" ry="2" />
<text  x="619.60" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="204.5" y="2021" width="0.2" height="15.0" fill="rgb(223,63,32)" rx="2" ry="2" />
<text  x="207.49" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="1129.3" y="2021" width="0.2" height="15.0" fill="rgb(253,55,38)" rx="2" ry="2" />
<text  x="1132.32" y="2031.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="1087.0" y="1909" width="0.6" height="15.0" fill="rgb(254,166,43)" rx="2" ry="2" />
<text  x="1090.02" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1127.9" y="1989" width="0.2" height="15.0" fill="rgb(254,144,40)" rx="2" ry="2" />
<text  x="1130.94" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="597.6" y="1957" width="1.0" height="15.0" fill="rgb(208,145,23)" rx="2" ry="2" />
<text  x="600.63" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (5 samples, 0.08%)</title><rect x="867.0" y="2005" width="1.0" height="15.0" fill="rgb(226,167,44)" rx="2" ry="2" />
<text  x="870.03" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="185.9" y="1973" width="0.2" height="15.0" fill="rgb(246,59,48)" rx="2" ry="2" />
<text  x="188.91" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (19 samples, 0.32%)</title><rect x="362.2" y="1957" width="3.8" height="15.0" fill="rgb(242,143,4)" rx="2" ry="2" />
<text  x="365.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1061" width="49.6" height="15.0" fill="rgb(218,207,27)" rx="2" ry="2" />
<text  x="72.49" y="1071.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (63 samples, 1.06%)</title><rect x="485.6" y="1941" width="12.4" height="15.0" fill="rgb(244,118,52)" rx="2" ry="2" />
<text  x="488.56" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="365.4" y="1893" width="0.2" height="15.0" fill="rgb(219,29,34)" rx="2" ry="2" />
<text  x="368.38" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (69 samples, 1.16%)</title><rect x="1093.9" y="1781" width="13.7" height="15.0" fill="rgb(249,176,9)" rx="2" ry="2" />
<text  x="1096.94" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (40 samples, 0.67%)</title><rect x="880.3" y="2037" width="7.9" height="15.0" fill="rgb(245,171,2)" rx="2" ry="2" />
<text  x="883.27" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (4 samples, 0.07%)</title><rect x="888.2" y="2005" width="0.8" height="15.0" fill="rgb(237,46,15)" rx="2" ry="2" />
<text  x="891.18" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="494.8" y="1909" width="0.2" height="15.0" fill="rgb(244,98,47)" rx="2" ry="2" />
<text  x="497.85" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="549.4" y="1989" width="0.4" height="15.0" fill="rgb(243,96,54)" rx="2" ry="2" />
<text  x="552.40" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="857.1" y="1925" width="0.2" height="15.0" fill="rgb(253,170,31)" rx="2" ry="2" />
<text  x="860.15" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="765.6" y="1989" width="0.2" height="15.0" fill="rgb(222,222,19)" rx="2" ry="2" />
<text  x="768.63" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (2 samples, 0.03%)</title><rect x="1130.9" y="2053" width="0.4" height="15.0" fill="rgb(220,194,23)" rx="2" ry="2" />
<text  x="1133.90" y="2063.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1110.1" y="1925" width="0.2" height="15.0" fill="rgb(214,116,1)" rx="2" ry="2" />
<text  x="1113.15" y="1935.5" ></text>
</g>
<g >
<title>free (9 samples, 0.15%)</title><rect x="1177.2" y="2053" width="1.7" height="15.0" fill="rgb(214,158,22)" rx="2" ry="2" />
<text  x="1180.15" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="54.1" y="2021" width="0.6" height="15.0" fill="rgb(228,55,44)" rx="2" ry="2" />
<text  x="57.08" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="666.6" y="1957" width="0.6" height="15.0" fill="rgb(226,170,25)" rx="2" ry="2" />
<text  x="669.61" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="765.0" y="1957" width="0.2" height="15.0" fill="rgb(243,204,24)" rx="2" ry="2" />
<text  x="768.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (3 samples, 0.05%)</title><rect x="548.8" y="1989" width="0.6" height="15.0" fill="rgb(228,82,7)" rx="2" ry="2" />
<text  x="551.81" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="303.3" y="1941" width="0.4" height="15.0" fill="rgb(254,4,20)" rx="2" ry="2" />
<text  x="306.32" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="326.1" y="1989" width="0.1" height="15.0" fill="rgb(209,180,47)" rx="2" ry="2" />
<text  x="329.05" y="1999.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="277.8" y="1749" width="0.4" height="15.0" fill="rgb(211,133,21)" rx="2" ry="2" />
<text  x="280.82" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="551.6" y="1957" width="1.2" height="15.0" fill="rgb(223,112,30)" rx="2" ry="2" />
<text  x="554.57" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (2 samples, 0.03%)</title><rect x="428.8" y="2037" width="0.4" height="15.0" fill="rgb(232,181,26)" rx="2" ry="2" />
<text  x="431.83" y="2047.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (3 samples, 0.05%)</title><rect x="1116.3" y="2037" width="0.6" height="15.0" fill="rgb(219,132,52)" rx="2" ry="2" />
<text  x="1119.27" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="663.1" y="1989" width="0.3" height="15.0" fill="rgb(243,21,32)" rx="2" ry="2" />
<text  x="666.05" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="1128.1" y="1925" width="0.2" height="15.0" fill="rgb(225,104,12)" rx="2" ry="2" />
<text  x="1131.13" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (12 samples, 0.20%)</title><rect x="577.5" y="1989" width="2.3" height="15.0" fill="rgb(205,197,36)" rx="2" ry="2" />
<text  x="580.47" y="1999.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1070.6" y="1861" width="0.2" height="15.0" fill="rgb(226,191,38)" rx="2" ry="2" />
<text  x="1073.62" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="872.2" y="2037" width="0.2" height="15.0" fill="rgb(218,183,0)" rx="2" ry="2" />
<text  x="875.17" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="612.1" y="2005" width="1.1" height="15.0" fill="rgb(229,74,12)" rx="2" ry="2" />
<text  x="615.06" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="27.2" y="1941" width="0.2" height="15.0" fill="rgb(245,170,45)" rx="2" ry="2" />
<text  x="30.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="539.3" y="2037" width="0.2" height="15.0" fill="rgb(234,132,27)" rx="2" ry="2" />
<text  x="542.32" y="2047.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(230,158,17)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="534.0" y="2037" width="0.4" height="15.0" fill="rgb(221,56,30)" rx="2" ry="2" />
<text  x="536.98" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="425.3" y="2005" width="0.2" height="15.0" fill="rgb(217,143,24)" rx="2" ry="2" />
<text  x="428.27" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (38 samples, 0.64%)</title><rect x="930.3" y="1957" width="7.5" height="15.0" fill="rgb(220,130,24)" rx="2" ry="2" />
<text  x="933.28" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="497.0" y="1733" width="0.8" height="15.0" fill="rgb(248,129,11)" rx="2" ry="2" />
<text  x="500.02" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (135 samples, 2.26%)</title><rect x="133.9" y="1989" width="26.7" height="15.0" fill="rgb(249,130,28)" rx="2" ry="2" />
<text  x="136.93" y="1999.5" >f..</text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (8 samples, 0.13%)</title><rect x="102.3" y="37" width="1.6" height="15.0" fill="rgb(207,55,38)" rx="2" ry="2" />
<text  x="105.30" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="424.9" y="1973" width="0.2" height="15.0" fill="rgb(207,110,1)" rx="2" ry="2" />
<text  x="427.88" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="118.7" y="69" width="0.4" height="15.0" fill="rgb(229,187,20)" rx="2" ry="2" />
<text  x="121.71" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="417.2" y="1957" width="0.4" height="15.0" fill="rgb(227,58,30)" rx="2" ry="2" />
<text  x="420.17" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="358.1" y="1957" width="0.2" height="15.0" fill="rgb(251,190,33)" rx="2" ry="2" />
<text  x="361.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (8 samples, 0.13%)</title><rect x="1151.1" y="2053" width="1.5" height="15.0" fill="rgb(223,144,16)" rx="2" ry="2" />
<text  x="1154.06" y="2063.5" ></text>
</g>
<g >
<title>sk_reset_timer (6 samples, 0.10%)</title><rect x="296.0" y="1781" width="1.2" height="15.0" fill="rgb(211,73,51)" rx="2" ry="2" />
<text  x="299.01" y="1791.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="279.2" y="1397" width="0.8" height="15.0" fill="rgb(219,73,6)" rx="2" ry="2" />
<text  x="282.21" y="1407.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1128.3" y="1989" width="0.2" height="15.0" fill="rgb(238,22,2)" rx="2" ry="2" />
<text  x="1131.33" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="191.8" y="1973" width="0.2" height="15.0" fill="rgb(209,128,45)" rx="2" ry="2" />
<text  x="194.84" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (11 samples, 0.18%)</title><rect x="395.4" y="1941" width="2.2" height="15.0" fill="rgb(209,92,52)" rx="2" ry="2" />
<text  x="398.43" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="216.0" y="2021" width="0.2" height="15.0" fill="rgb(218,203,35)" rx="2" ry="2" />
<text  x="218.96" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="1156.0" y="2053" width="0.2" height="15.0" fill="rgb(236,87,52)" rx="2" ry="2" />
<text  x="1159.00" y="2063.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="1111.9" y="1941" width="0.4" height="15.0" fill="rgb(227,221,53)" rx="2" ry="2" />
<text  x="1114.93" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (20 samples, 0.34%)</title><rect x="572.9" y="1957" width="4.0" height="15.0" fill="rgb(223,157,13)" rx="2" ry="2" />
<text  x="575.92" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (3 samples, 0.05%)</title><rect x="874.5" y="2037" width="0.6" height="15.0" fill="rgb(226,8,40)" rx="2" ry="2" />
<text  x="877.54" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="199.2" y="1957" width="0.2" height="15.0" fill="rgb(213,19,45)" rx="2" ry="2" />
<text  x="202.16" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="872.4" y="2037" width="0.2" height="15.0" fill="rgb(250,125,32)" rx="2" ry="2" />
<text  x="875.37" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="197.8" y="1957" width="0.4" height="15.0" fill="rgb(220,193,6)" rx="2" ry="2" />
<text  x="200.77" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="678.9" y="1957" width="0.2" height="15.0" fill="rgb(233,180,33)" rx="2" ry="2" />
<text  x="681.86" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="647.0" y="2037" width="0.4" height="15.0" fill="rgb(247,89,21)" rx="2" ry="2" />
<text  x="650.04" y="2047.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(219,196,10)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="634.8" y="1973" width="0.4" height="15.0" fill="rgb(253,53,49)" rx="2" ry="2" />
<text  x="637.79" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="405" width="49.6" height="15.0" fill="rgb(225,5,0)" rx="2" ry="2" />
<text  x="72.49" y="415.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="689.3" y="1925" width="1.2" height="15.0" fill="rgb(248,77,33)" rx="2" ry="2" />
<text  x="692.34" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="401.2" y="1893" width="0.2" height="15.0" fill="rgb(243,184,12)" rx="2" ry="2" />
<text  x="404.16" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (5 samples, 0.08%)</title><rect x="490.9" y="1909" width="1.0" height="15.0" fill="rgb(207,152,11)" rx="2" ry="2" />
<text  x="493.89" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="1014.1" y="1973" width="0.6" height="15.0" fill="rgb(214,225,2)" rx="2" ry="2" />
<text  x="1017.09" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="608.3" y="1957" width="0.2" height="15.0" fill="rgb(238,130,44)" rx="2" ry="2" />
<text  x="611.30" y="1967.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.02%)</title><rect x="273.1" y="1877" width="0.2" height="15.0" fill="rgb(210,34,42)" rx="2" ry="2" />
<text  x="276.08" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (37 samples, 0.62%)</title><rect x="416.4" y="2021" width="7.3" height="15.0" fill="rgb(253,38,25)" rx="2" ry="2" />
<text  x="419.38" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="819.0" y="1973" width="0.2" height="15.0" fill="rgb(227,98,21)" rx="2" ry="2" />
<text  x="822.00" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (68 samples, 1.14%)</title><rect x="1094.1" y="1653" width="13.5" height="15.0" fill="rgb(228,125,22)" rx="2" ry="2" />
<text  x="1097.14" y="1663.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="23.2" y="1909" width="0.2" height="15.0" fill="rgb(239,135,1)" rx="2" ry="2" />
<text  x="26.24" y="1919.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="308.7" y="2037" width="0.4" height="15.0" fill="rgb(252,82,34)" rx="2" ry="2" />
<text  x="311.66" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (15 samples, 0.25%)</title><rect x="529.6" y="2021" width="3.0" height="15.0" fill="rgb(215,209,47)" rx="2" ry="2" />
<text  x="532.63" y="2031.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="597.4" y="1941" width="0.2" height="15.0" fill="rgb(221,94,32)" rx="2" ry="2" />
<text  x="600.43" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 4.04%)</title><rect x="469.0" y="2005" width="47.6" height="15.0" fill="rgb(235,14,44)" rx="2" ry="2" />
<text  x="471.95" y="2015.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="855.4" y="1989" width="1.0" height="15.0" fill="rgb(237,60,31)" rx="2" ry="2" />
<text  x="858.37" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="254.3" y="1893" width="0.2" height="15.0" fill="rgb(205,92,36)" rx="2" ry="2" />
<text  x="257.30" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="375.5" y="1973" width="0.2" height="15.0" fill="rgb(219,141,42)" rx="2" ry="2" />
<text  x="378.46" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="205.7" y="1909" width="0.2" height="15.0" fill="rgb(221,126,18)" rx="2" ry="2" />
<text  x="208.68" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1130.7" y="2053" width="0.2" height="15.0" fill="rgb(224,21,25)" rx="2" ry="2" />
<text  x="1133.70" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="598.8" y="1925" width="0.2" height="15.0" fill="rgb(227,69,1)" rx="2" ry="2" />
<text  x="601.81" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (225 samples, 3.77%)</title><rect x="256.3" y="1893" width="44.5" height="15.0" fill="rgb(237,77,29)" rx="2" ry="2" />
<text  x="259.28" y="1903.5" >tcp_..</text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="27.8" y="1941" width="0.2" height="15.0" fill="rgb(216,143,32)" rx="2" ry="2" />
<text  x="30.79" y="1951.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1147.7" y="1925" width="0.2" height="15.0" fill="rgb(233,118,15)" rx="2" ry="2" />
<text  x="1150.70" y="1935.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="303.9" y="2005" width="0.2" height="15.0" fill="rgb(211,130,32)" rx="2" ry="2" />
<text  x="306.91" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="115.9" y="37" width="0.2" height="15.0" fill="rgb(230,79,39)" rx="2" ry="2" />
<text  x="118.94" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (2 samples, 0.03%)</title><rect x="500.0" y="1957" width="0.4" height="15.0" fill="rgb(216,185,9)" rx="2" ry="2" />
<text  x="502.99" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="215.4" y="2021" width="0.4" height="15.0" fill="rgb(251,98,4)" rx="2" ry="2" />
<text  x="218.36" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1093" width="49.6" height="15.0" fill="rgb(221,136,12)" rx="2" ry="2" />
<text  x="72.49" y="1103.5" >[unkn..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="513.0" y="1989" width="3.6" height="15.0" fill="rgb(229,170,0)" rx="2" ry="2" />
<text  x="516.03" y="1999.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="308.5" y="2037" width="0.2" height="15.0" fill="rgb(213,1,25)" rx="2" ry="2" />
<text  x="311.46" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (12 samples, 0.20%)</title><rect x="290.3" y="1685" width="2.3" height="15.0" fill="rgb(219,52,53)" rx="2" ry="2" />
<text  x="293.27" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (7 samples, 0.12%)</title><rect x="416.8" y="2005" width="1.4" height="15.0" fill="rgb(244,121,4)" rx="2" ry="2" />
<text  x="419.77" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="691.9" y="1893" width="0.2" height="15.0" fill="rgb(246,17,18)" rx="2" ry="2" />
<text  x="694.91" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="184.1" y="2005" width="0.2" height="15.0" fill="rgb(205,82,21)" rx="2" ry="2" />
<text  x="187.13" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (5 samples, 0.08%)</title><rect x="655.7" y="2037" width="1.0" height="15.0" fill="rgb(206,178,7)" rx="2" ry="2" />
<text  x="658.74" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="394.0" y="1973" width="0.8" height="15.0" fill="rgb(241,36,29)" rx="2" ry="2" />
<text  x="397.04" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="756.7" y="1941" width="1.2" height="15.0" fill="rgb(228,112,4)" rx="2" ry="2" />
<text  x="759.74" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="194.0" y="2021" width="0.4" height="15.0" fill="rgb(210,168,13)" rx="2" ry="2" />
<text  x="197.02" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="873.9" y="2021" width="0.6" height="15.0" fill="rgb(223,23,9)" rx="2" ry="2" />
<text  x="876.95" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.23%)</title><rect x="111.6" y="53" width="2.8" height="15.0" fill="rgb(207,143,37)" rx="2" ry="2" />
<text  x="114.59" y="63.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="199.4" y="1957" width="0.3" height="15.0" fill="rgb(229,130,48)" rx="2" ry="2" />
<text  x="202.35" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (6 samples, 0.10%)</title><rect x="700.2" y="1941" width="1.2" height="15.0" fill="rgb(253,19,46)" rx="2" ry="2" />
<text  x="703.21" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="674.9" y="1989" width="0.4" height="15.0" fill="rgb(209,144,19)" rx="2" ry="2" />
<text  x="677.91" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="356.1" y="1957" width="2.0" height="15.0" fill="rgb(206,229,34)" rx="2" ry="2" />
<text  x="359.09" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="300.0" y="1845" width="0.4" height="15.0" fill="rgb(218,102,24)" rx="2" ry="2" />
<text  x="302.96" y="1855.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="421.5" y="1909" width="0.4" height="15.0" fill="rgb(209,70,30)" rx="2" ry="2" />
<text  x="424.52" y="1919.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1110.7" y="1925" width="0.2" height="15.0" fill="rgb(211,42,4)" rx="2" ry="2" />
<text  x="1113.74" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="401.6" y="1941" width="0.3" height="15.0" fill="rgb(214,14,30)" rx="2" ry="2" />
<text  x="404.55" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="333.2" y="1941" width="0.4" height="15.0" fill="rgb(220,62,17)" rx="2" ry="2" />
<text  x="336.17" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (3 samples, 0.05%)</title><rect x="230.8" y="2021" width="0.6" height="15.0" fill="rgb(208,28,18)" rx="2" ry="2" />
<text  x="233.78" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="970.0" y="1973" width="0.2" height="15.0" fill="rgb(216,20,43)" rx="2" ry="2" />
<text  x="973.01" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (12 samples, 0.20%)</title><rect x="852.8" y="2005" width="2.4" height="15.0" fill="rgb(239,174,24)" rx="2" ry="2" />
<text  x="855.80" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="763.3" y="1941" width="0.2" height="15.0" fill="rgb(248,165,50)" rx="2" ry="2" />
<text  x="766.26" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="595.8" y="1909" width="0.2" height="15.0" fill="rgb(235,137,29)" rx="2" ry="2" />
<text  x="598.85" y="1919.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (6 samples, 0.10%)</title><rect x="296.0" y="1797" width="1.2" height="15.0" fill="rgb(205,71,6)" rx="2" ry="2" />
<text  x="299.01" y="1807.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="302.1" y="1941" width="1.2" height="15.0" fill="rgb(208,225,4)" rx="2" ry="2" />
<text  x="305.13" y="1951.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="292.8" y="1781" width="0.2" height="15.0" fill="rgb(207,190,9)" rx="2" ry="2" />
<text  x="295.84" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="206.7" y="1909" width="0.4" height="15.0" fill="rgb(226,30,31)" rx="2" ry="2" />
<text  x="209.67" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.2" y="2005" width="0.2" height="15.0" fill="rgb(229,132,20)" rx="2" ry="2" />
<text  x="232.20" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="612.8" y="1973" width="0.4" height="15.0" fill="rgb(218,42,19)" rx="2" ry="2" />
<text  x="615.85" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="417.6" y="1925" width="0.2" height="15.0" fill="rgb(225,174,25)" rx="2" ry="2" />
<text  x="420.56" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="292.6" y="1685" width="0.2" height="15.0" fill="rgb(214,22,41)" rx="2" ry="2" />
<text  x="295.65" y="1695.5" ></text>
</g>
<g >
<title>epoll_wait (35 samples, 0.59%)</title><rect x="310.8" y="2037" width="6.9" height="15.0" fill="rgb(218,198,38)" rx="2" ry="2" />
<text  x="313.83" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="595.8" y="1893" width="0.2" height="15.0" fill="rgb(229,108,35)" rx="2" ry="2" />
<text  x="598.85" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (32 samples, 0.54%)</title><rect x="145.0" y="1941" width="6.3" height="15.0" fill="rgb(221,224,36)" rx="2" ry="2" />
<text  x="148.00" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="272.9" y="1829" width="0.2" height="15.0" fill="rgb(245,135,11)" rx="2" ry="2" />
<text  x="275.88" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="595.8" y="1925" width="0.2" height="15.0" fill="rgb(245,192,17)" rx="2" ry="2" />
<text  x="598.85" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (8 samples, 0.13%)</title><rect x="853.6" y="1989" width="1.6" height="15.0" fill="rgb(228,185,25)" rx="2" ry="2" />
<text  x="856.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="118.5" y="101" width="0.2" height="15.0" fill="rgb(234,16,24)" rx="2" ry="2" />
<text  x="121.51" y="111.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="182.6" y="2021" width="0.3" height="15.0" fill="rgb(219,45,1)" rx="2" ry="2" />
<text  x="185.55" y="2031.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (6 samples, 0.10%)</title><rect x="271.3" y="1845" width="1.2" height="15.0" fill="rgb(236,104,12)" rx="2" ry="2" />
<text  x="274.30" y="1855.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="1149.9" y="1989" width="0.6" height="15.0" fill="rgb(232,178,11)" rx="2" ry="2" />
<text  x="1152.88" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (7 samples, 0.12%)</title><rect x="1154.4" y="2053" width="1.4" height="15.0" fill="rgb(218,56,28)" rx="2" ry="2" />
<text  x="1157.42" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (226 samples, 3.79%)</title><rect x="120.9" y="2005" width="44.7" height="15.0" fill="rgb(224,77,44)" rx="2" ry="2" />
<text  x="123.88" y="2015.5" >face..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="495.0" y="1925" width="0.2" height="15.0" fill="rgb(235,212,52)" rx="2" ry="2" />
<text  x="498.05" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (17 samples, 0.28%)</title><rect x="169.1" y="1973" width="3.4" height="15.0" fill="rgb(242,172,34)" rx="2" ry="2" />
<text  x="172.11" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (6 samples, 0.10%)</title><rect x="347.8" y="1957" width="1.2" height="15.0" fill="rgb(236,7,10)" rx="2" ry="2" />
<text  x="350.79" y="1967.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.18%)</title><rect x="1060.7" y="1877" width="2.2" height="15.0" fill="rgb(245,116,21)" rx="2" ry="2" />
<text  x="1063.73" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="391.7" y="1973" width="0.2" height="15.0" fill="rgb(248,41,1)" rx="2" ry="2" />
<text  x="394.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="666.6" y="1989" width="0.6" height="15.0" fill="rgb(211,224,15)" rx="2" ry="2" />
<text  x="669.61" y="1999.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="287.3" y="1669" width="0.4" height="15.0" fill="rgb(233,116,11)" rx="2" ry="2" />
<text  x="290.31" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1128.1" y="1957" width="0.2" height="15.0" fill="rgb(214,58,41)" rx="2" ry="2" />
<text  x="1131.13" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="302.1" y="1957" width="1.6" height="15.0" fill="rgb(207,178,39)" rx="2" ry="2" />
<text  x="305.13" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="856.4" y="2005" width="0.2" height="15.0" fill="rgb(219,196,17)" rx="2" ry="2" />
<text  x="859.36" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="205.7" y="1893" width="0.2" height="15.0" fill="rgb(234,123,38)" rx="2" ry="2" />
<text  x="208.68" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="864.3" y="1989" width="0.2" height="15.0" fill="rgb(225,123,25)" rx="2" ry="2" />
<text  x="867.26" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1989" width="50.0" height="15.0" fill="rgb(246,204,17)" rx="2" ry="2" />
<text  x="72.49" y="1999.5" >[unkn..</text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="309.4" y="2037" width="0.2" height="15.0" fill="rgb(214,80,20)" rx="2" ry="2" />
<text  x="312.45" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (15 samples, 0.25%)</title><rect x="1011.7" y="2005" width="3.0" height="15.0" fill="rgb(218,4,19)" rx="2" ry="2" />
<text  x="1014.72" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="662.3" y="2021" width="0.6" height="15.0" fill="rgb(208,64,31)" rx="2" ry="2" />
<text  x="665.26" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (39 samples, 0.65%)</title><rect x="416.0" y="2037" width="7.7" height="15.0" fill="rgb(206,130,1)" rx="2" ry="2" />
<text  x="418.98" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="207.1" y="1925" width="0.2" height="15.0" fill="rgb(224,24,16)" rx="2" ry="2" />
<text  x="210.06" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="602.8" y="2021" width="6.1" height="15.0" fill="rgb(232,58,42)" rx="2" ry="2" />
<text  x="605.77" y="2031.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (7 samples, 0.12%)</title><rect x="67.7" y="2021" width="1.4" height="15.0" fill="rgb(208,19,13)" rx="2" ry="2" />
<text  x="70.72" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1128.1" y="1909" width="0.2" height="15.0" fill="rgb(245,202,50)" rx="2" ry="2" />
<text  x="1131.13" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="393.6" y="1989" width="0.2" height="15.0" fill="rgb(244,120,25)" rx="2" ry="2" />
<text  x="396.65" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="425.5" y="2005" width="0.2" height="15.0" fill="rgb(236,229,26)" rx="2" ry="2" />
<text  x="428.47" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1301" width="49.6" height="15.0" fill="rgb(252,196,36)" rx="2" ry="2" />
<text  x="72.49" y="1311.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (7 samples, 0.12%)</title><rect x="356.7" y="1925" width="1.4" height="15.0" fill="rgb(235,1,21)" rx="2" ry="2" />
<text  x="359.69" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="175.4" y="2005" width="0.8" height="15.0" fill="rgb(241,69,44)" rx="2" ry="2" />
<text  x="178.44" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="379.2" y="1909" width="0.2" height="15.0" fill="rgb(239,219,17)" rx="2" ry="2" />
<text  x="382.22" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="857.1" y="1957" width="0.2" height="15.0" fill="rgb(251,37,8)" rx="2" ry="2" />
<text  x="860.15" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="686.8" y="1909" width="0.4" height="15.0" fill="rgb(224,18,12)" rx="2" ry="2" />
<text  x="689.77" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(209,194,42)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (5 samples, 0.08%)</title><rect x="414.6" y="2005" width="1.0" height="15.0" fill="rgb(252,109,36)" rx="2" ry="2" />
<text  x="417.60" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="110.6" y="37" width="0.2" height="15.0" fill="rgb(251,67,8)" rx="2" ry="2" />
<text  x="113.61" y="47.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (10 samples, 0.17%)</title><rect x="1168.3" y="2053" width="1.9" height="15.0" fill="rgb(252,18,53)" rx="2" ry="2" />
<text  x="1171.26" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (7 samples, 0.12%)</title><rect x="956.6" y="1877" width="1.4" height="15.0" fill="rgb(253,104,9)" rx="2" ry="2" />
<text  x="959.57" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (38 samples, 0.64%)</title><rect x="278.8" y="1733" width="7.5" height="15.0" fill="rgb(217,215,32)" rx="2" ry="2" />
<text  x="281.81" y="1743.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.4" y="1829" width="0.8" height="15.0" fill="rgb(239,121,3)" rx="2" ry="2" />
<text  x="14.38" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (12 samples, 0.20%)</title><rect x="749.2" y="1941" width="2.4" height="15.0" fill="rgb(244,179,29)" rx="2" ry="2" />
<text  x="752.23" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1152.4" y="2005" width="0.2" height="15.0" fill="rgb(243,58,23)" rx="2" ry="2" />
<text  x="1155.45" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (24 samples, 0.40%)</title><rect x="12.6" y="1957" width="4.7" height="15.0" fill="rgb(219,31,47)" rx="2" ry="2" />
<text  x="15.57" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (4 samples, 0.07%)</title><rect x="1009.3" y="2005" width="0.8" height="15.0" fill="rgb(239,193,48)" rx="2" ry="2" />
<text  x="1012.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (18 samples, 0.30%)</title><rect x="553.2" y="1989" width="3.5" height="15.0" fill="rgb(246,186,50)" rx="2" ry="2" />
<text  x="556.16" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="593.1" y="1957" width="0.2" height="15.0" fill="rgb(225,11,6)" rx="2" ry="2" />
<text  x="596.08" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1285" width="49.6" height="15.0" fill="rgb(251,144,3)" rx="2" ry="2" />
<text  x="72.49" y="1295.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (274 samples, 4.59%)</title><rect x="698.2" y="1973" width="54.2" height="15.0" fill="rgb(208,118,33)" rx="2" ry="2" />
<text  x="701.23" y="1983.5" >folly..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="964.3" y="1909" width="0.4" height="15.0" fill="rgb(214,132,1)" rx="2" ry="2" />
<text  x="967.28" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 4.15%)</title><rect x="69.5" y="101" width="49.0" height="15.0" fill="rgb(211,173,4)" rx="2" ry="2" />
<text  x="72.49" y="111.5" >[unk..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="23.2" y="1957" width="0.6" height="15.0" fill="rgb(241,4,43)" rx="2" ry="2" />
<text  x="26.24" y="1967.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="210.0" y="1909" width="0.2" height="15.0" fill="rgb(223,120,16)" rx="2" ry="2" />
<text  x="213.03" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (70 samples, 1.17%)</title><rect x="1093.7" y="1797" width="13.9" height="15.0" fill="rgb(253,167,29)" rx="2" ry="2" />
<text  x="1096.74" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="207.3" y="1925" width="0.9" height="15.0" fill="rgb(215,106,42)" rx="2" ry="2" />
<text  x="210.26" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="432.2" y="2005" width="0.4" height="15.0" fill="rgb(238,99,51)" rx="2" ry="2" />
<text  x="435.19" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="606.5" y="1925" width="0.4" height="15.0" fill="rgb(227,76,8)" rx="2" ry="2" />
<text  x="609.52" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (12 samples, 0.20%)</title><rect x="579.8" y="1989" width="2.4" height="15.0" fill="rgb(245,5,6)" rx="2" ry="2" />
<text  x="582.84" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (4 samples, 0.07%)</title><rect x="931.7" y="1909" width="0.8" height="15.0" fill="rgb(245,66,15)" rx="2" ry="2" />
<text  x="934.66" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (35 samples, 0.59%)</title><rect x="185.1" y="2021" width="6.9" height="15.0" fill="rgb(216,77,4)" rx="2" ry="2" />
<text  x="188.12" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="964.7" y="1909" width="0.2" height="15.0" fill="rgb(244,121,0)" rx="2" ry="2" />
<text  x="967.67" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1477" width="49.6" height="15.0" fill="rgb(221,211,53)" rx="2" ry="2" />
<text  x="72.49" y="1487.5" >[unkn..</text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="285.7" y="1477" width="0.2" height="15.0" fill="rgb(212,41,32)" rx="2" ry="2" />
<text  x="288.73" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 3.15%)</title><rect x="69.5" y="69" width="37.2" height="15.0" fill="rgb(234,98,17)" rx="2" ry="2" />
<text  x="72.49" y="79.5" >[un..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (6 samples, 0.10%)</title><rect x="390.7" y="1989" width="1.2" height="15.0" fill="rgb(205,186,46)" rx="2" ry="2" />
<text  x="393.68" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (37 samples, 0.62%)</title><rect x="279.0" y="1717" width="7.3" height="15.0" fill="rgb(249,21,45)" rx="2" ry="2" />
<text  x="282.01" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="71.7" y="37" width="0.6" height="15.0" fill="rgb(218,40,9)" rx="2" ry="2" />
<text  x="74.67" y="47.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::unlock (1 samples, 0.02%)</title><rect x="618.8" y="1973" width="0.2" height="15.0" fill="rgb(219,63,14)" rx="2" ry="2" />
<text  x="621.78" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="365.4" y="1829" width="0.2" height="15.0" fill="rgb(228,82,9)" rx="2" ry="2" />
<text  x="368.38" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="592.7" y="1941" width="0.4" height="15.0" fill="rgb(229,110,40)" rx="2" ry="2" />
<text  x="595.69" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="117.3" y="37" width="0.8" height="15.0" fill="rgb(251,77,28)" rx="2" ry="2" />
<text  x="120.33" y="47.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="973.6" y="1989" width="0.8" height="15.0" fill="rgb(225,227,19)" rx="2" ry="2" />
<text  x="976.57" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="373.5" y="1989" width="0.2" height="15.0" fill="rgb(227,39,41)" rx="2" ry="2" />
<text  x="376.49" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="114.4" y="37" width="0.2" height="15.0" fill="rgb(247,79,54)" rx="2" ry="2" />
<text  x="117.36" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1170.6" y="2037" width="0.2" height="15.0" fill="rgb(234,177,17)" rx="2" ry="2" />
<text  x="1173.63" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.5" y="53" width="0.2" height="15.0" fill="rgb(218,89,26)" rx="2" ry="2" />
<text  x="121.51" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (32 samples, 0.54%)</title><rect x="185.3" y="1989" width="6.3" height="15.0" fill="rgb(228,178,30)" rx="2" ry="2" />
<text  x="188.32" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1129.1" y="1989" width="0.2" height="15.0" fill="rgb(242,62,28)" rx="2" ry="2" />
<text  x="1132.12" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="396.2" y="1877" width="0.2" height="15.0" fill="rgb(254,52,24)" rx="2" ry="2" />
<text  x="399.22" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="211.6" y="1973" width="0.2" height="15.0" fill="rgb(253,49,22)" rx="2" ry="2" />
<text  x="214.61" y="1983.5" ></text>
</g>
<g >
<title>std::current_exception@plt (1 samples, 0.02%)</title><rect x="748.6" y="1909" width="0.2" height="15.0" fill="rgb(244,110,33)" rx="2" ry="2" />
<text  x="751.64" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="389" width="49.6" height="15.0" fill="rgb(205,41,19)" rx="2" ry="2" />
<text  x="72.49" y="399.5" >[unkn..</text>
</g>
<g >
<title>sys_sendmsg (286 samples, 4.79%)</title><rect x="247.4" y="1989" width="56.5" height="15.0" fill="rgb(239,224,49)" rx="2" ry="2" />
<text  x="250.38" y="1999.5" >sys_s..</text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (9 samples, 0.15%)</title><rect x="878.3" y="2037" width="1.8" height="15.0" fill="rgb(249,83,48)" rx="2" ry="2" />
<text  x="881.30" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="379.6" y="1957" width="0.2" height="15.0" fill="rgb(217,52,47)" rx="2" ry="2" />
<text  x="382.61" y="1967.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="602.6" y="2005" width="0.2" height="15.0" fill="rgb(215,206,15)" rx="2" ry="2" />
<text  x="605.57" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="100.9" y="37" width="0.4" height="15.0" fill="rgb(211,172,17)" rx="2" ry="2" />
<text  x="103.92" y="47.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (124 samples, 2.08%)</title><rect x="273.3" y="1861" width="24.5" height="15.0" fill="rgb(211,30,51)" rx="2" ry="2" />
<text  x="276.28" y="1871.5" >_..</text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (13 samples, 0.22%)</title><rect x="752.4" y="1973" width="2.6" height="15.0" fill="rgb(247,40,30)" rx="2" ry="2" />
<text  x="755.39" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="500.4" y="1957" width="0.4" height="15.0" fill="rgb(244,78,52)" rx="2" ry="2" />
<text  x="503.38" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="418.0" y="1973" width="0.2" height="15.0" fill="rgb(215,109,34)" rx="2" ry="2" />
<text  x="420.96" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_free (13 samples, 0.22%)</title><rect x="1035.4" y="1893" width="2.6" height="15.0" fill="rgb(241,5,2)" rx="2" ry="2" />
<text  x="1038.43" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="345.0" y="1941" width="0.4" height="15.0" fill="rgb(251,110,29)" rx="2" ry="2" />
<text  x="348.03" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (1 samples, 0.02%)</title><rect x="878.1" y="2037" width="0.2" height="15.0" fill="rgb(207,171,39)" rx="2" ry="2" />
<text  x="881.10" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1797" width="49.8" height="15.0" fill="rgb(229,192,32)" rx="2" ry="2" />
<text  x="72.49" y="1807.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="167.5" y="1941" width="0.2" height="15.0" fill="rgb(252,189,42)" rx="2" ry="2" />
<text  x="170.53" y="1951.5" ></text>
</g>
<g >
<title>sock_recvmsg (435 samples, 7.29%)</title><rect x="1025.7" y="1973" width="86.0" height="15.0" fill="rgb(231,82,18)" rx="2" ry="2" />
<text  x="1028.75" y="1983.5" >sock_recvmsg</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="277" width="49.6" height="15.0" fill="rgb(246,45,40)" rx="2" ry="2" />
<text  x="72.49" y="287.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="636.4" y="1973" width="1.0" height="15.0" fill="rgb(208,49,13)" rx="2" ry="2" />
<text  x="639.37" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (93 samples, 1.56%)</title><rect x="1132.7" y="2053" width="18.4" height="15.0" fill="rgb(231,30,38)" rx="2" ry="2" />
<text  x="1135.68" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="901" width="49.6" height="15.0" fill="rgb(213,13,15)" rx="2" ry="2" />
<text  x="72.49" y="911.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="662.3" y="2005" width="0.6" height="15.0" fill="rgb(237,199,50)" rx="2" ry="2" />
<text  x="665.26" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="297.8" y="1861" width="0.2" height="15.0" fill="rgb(230,172,23)" rx="2" ry="2" />
<text  x="300.79" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="167.5" y="1925" width="0.2" height="15.0" fill="rgb(253,22,17)" rx="2" ry="2" />
<text  x="170.53" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="28.0" y="1973" width="0.4" height="15.0" fill="rgb(206,96,50)" rx="2" ry="2" />
<text  x="30.99" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (5 samples, 0.08%)</title><rect x="1131.3" y="2053" width="1.0" height="15.0" fill="rgb(237,28,45)" rx="2" ry="2" />
<text  x="1134.30" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="879.9" y="2005" width="0.2" height="15.0" fill="rgb(236,114,38)" rx="2" ry="2" />
<text  x="882.88" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="1069.8" y="1861" width="0.8" height="15.0" fill="rgb(231,218,24)" rx="2" ry="2" />
<text  x="1072.83" y="1871.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="279.4" y="1381" width="0.6" height="15.0" fill="rgb(213,38,5)" rx="2" ry="2" />
<text  x="282.40" y="1391.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="965.7" y="1909" width="0.6" height="15.0" fill="rgb(235,106,1)" rx="2" ry="2" />
<text  x="968.66" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="671.0" y="1973" width="0.4" height="15.0" fill="rgb(210,214,9)" rx="2" ry="2" />
<text  x="673.96" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="201.3" y="1973" width="0.2" height="15.0" fill="rgb(213,5,4)" rx="2" ry="2" />
<text  x="204.33" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="118.3" y="37" width="0.2" height="15.0" fill="rgb(227,25,18)" rx="2" ry="2" />
<text  x="121.31" y="47.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1781" width="49.8" height="15.0" fill="rgb(249,124,17)" rx="2" ry="2" />
<text  x="72.49" y="1791.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (241 samples, 4.04%)</title><rect x="69.5" y="85" width="47.6" height="15.0" fill="rgb(241,122,53)" rx="2" ry="2" />
<text  x="72.49" y="95.5" >[unk..</text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (32 samples, 0.54%)</title><rect x="311.2" y="1957" width="6.4" height="15.0" fill="rgb(208,172,27)" rx="2" ry="2" />
<text  x="314.23" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (3 samples, 0.05%)</title><rect x="374.9" y="1973" width="0.6" height="15.0" fill="rgb(209,227,42)" rx="2" ry="2" />
<text  x="377.87" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1152.2" y="2005" width="0.2" height="15.0" fill="rgb(252,104,26)" rx="2" ry="2" />
<text  x="1155.25" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="193.2" y="1989" width="0.8" height="15.0" fill="rgb(220,170,43)" rx="2" ry="2" />
<text  x="196.23" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (4 samples, 0.07%)</title><rect x="279.2" y="1477" width="0.8" height="15.0" fill="rgb(248,113,14)" rx="2" ry="2" />
<text  x="282.21" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="417.6" y="1941" width="0.2" height="15.0" fill="rgb(245,50,14)" rx="2" ry="2" />
<text  x="420.56" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="490.5" y="1909" width="0.2" height="15.0" fill="rgb(227,215,37)" rx="2" ry="2" />
<text  x="493.50" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (69 samples, 1.16%)</title><rect x="1093.9" y="1733" width="13.7" height="15.0" fill="rgb(247,169,10)" rx="2" ry="2" />
<text  x="1096.94" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="393.3" y="2005" width="0.2" height="15.0" fill="rgb(254,69,25)" rx="2" ry="2" />
<text  x="396.25" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="533" width="49.6" height="15.0" fill="rgb(240,106,35)" rx="2" ry="2" />
<text  x="72.49" y="543.5" >[unkn..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (35 samples, 0.59%)</title><rect x="127.0" y="1989" width="6.9" height="15.0" fill="rgb(214,140,22)" rx="2" ry="2" />
<text  x="130.01" y="1999.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="709.5" y="1877" width="0.2" height="15.0" fill="rgb(244,151,39)" rx="2" ry="2" />
<text  x="712.50" y="1887.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1087.4" y="1893" width="0.2" height="15.0" fill="rgb(217,36,8)" rx="2" ry="2" />
<text  x="1090.42" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (24 samples, 0.40%)</title><rect x="12.6" y="1925" width="4.7" height="15.0" fill="rgb(224,150,46)" rx="2" ry="2" />
<text  x="15.57" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="293.0" y="1797" width="0.2" height="15.0" fill="rgb(215,82,54)" rx="2" ry="2" />
<text  x="296.04" y="1807.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.02%)</title><rect x="1015.1" y="2053" width="0.2" height="15.0" fill="rgb(213,60,34)" rx="2" ry="2" />
<text  x="1018.08" y="2063.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="267.3" y="1861" width="0.4" height="15.0" fill="rgb(220,2,17)" rx="2" ry="2" />
<text  x="270.35" y="1871.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="298.0" y="1861" width="0.4" height="15.0" fill="rgb(242,9,34)" rx="2" ry="2" />
<text  x="300.98" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="107.6" y="37" width="1.4" height="15.0" fill="rgb(209,102,24)" rx="2" ry="2" />
<text  x="110.64" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="425.1" y="2005" width="0.2" height="15.0" fill="rgb(235,20,18)" rx="2" ry="2" />
<text  x="428.08" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1171.2" y="2037" width="0.2" height="15.0" fill="rgb(213,87,44)" rx="2" ry="2" />
<text  x="1174.22" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="689.1" y="1845" width="0.2" height="15.0" fill="rgb(245,36,11)" rx="2" ry="2" />
<text  x="692.14" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (11 samples, 0.18%)</title><rect x="875.1" y="2037" width="2.2" height="15.0" fill="rgb(248,131,53)" rx="2" ry="2" />
<text  x="878.14" y="2047.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (1 samples, 0.02%)</title><rect x="311.4" y="1941" width="0.2" height="15.0" fill="rgb(212,62,50)" rx="2" ry="2" />
<text  x="314.42" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1637" width="49.8" height="15.0" fill="rgb(243,129,34)" rx="2" ry="2" />
<text  x="72.49" y="1647.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="190.5" y="1925" width="0.7" height="15.0" fill="rgb(241,66,44)" rx="2" ry="2" />
<text  x="193.46" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (53 samples, 0.89%)</title><rect x="623.5" y="1989" width="10.5" height="15.0" fill="rgb(225,199,49)" rx="2" ry="2" />
<text  x="626.52" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="197.0" y="1957" width="0.2" height="15.0" fill="rgb(205,172,53)" rx="2" ry="2" />
<text  x="199.98" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="203.1" y="1941" width="0.4" height="15.0" fill="rgb(230,81,51)" rx="2" ry="2" />
<text  x="206.11" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="532.4" y="2005" width="0.2" height="15.0" fill="rgb(244,119,39)" rx="2" ry="2" />
<text  x="535.40" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="860.9" y="1973" width="1.0" height="15.0" fill="rgb(234,44,44)" rx="2" ry="2" />
<text  x="863.90" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (66 samples, 1.11%)</title><rect x="1094.3" y="1557" width="13.1" height="15.0" fill="rgb(252,130,44)" rx="2" ry="2" />
<text  x="1097.34" y="1567.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.4" y="1861" width="0.8" height="15.0" fill="rgb(213,49,40)" rx="2" ry="2" />
<text  x="14.38" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1007.2" y="2021" width="0.2" height="15.0" fill="rgb(218,201,30)" rx="2" ry="2" />
<text  x="1010.17" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="349.4" y="1941" width="0.4" height="15.0" fill="rgb(225,74,29)" rx="2" ry="2" />
<text  x="352.37" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1749" width="49.8" height="15.0" fill="rgb(246,206,2)" rx="2" ry="2" />
<text  x="72.49" y="1759.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (5 samples, 0.08%)</title><rect x="189.5" y="1909" width="1.0" height="15.0" fill="rgb(215,98,34)" rx="2" ry="2" />
<text  x="192.47" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.42%)</title><rect x="12.4" y="2021" width="4.9" height="15.0" fill="rgb(234,198,31)" rx="2" ry="2" />
<text  x="15.37" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="197.2" y="1973" width="0.4" height="15.0" fill="rgb(244,159,46)" rx="2" ry="2" />
<text  x="200.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (387 samples, 6.48%)</title><rect x="318.7" y="2037" width="76.5" height="15.0" fill="rgb(246,175,40)" rx="2" ry="2" />
<text  x="321.74" y="2047.5" >facebook..</text>
</g>
<g >
<title>jump_fcontext (5 samples, 0.08%)</title><rect x="961.5" y="1893" width="1.0" height="15.0" fill="rgb(247,78,48)" rx="2" ry="2" />
<text  x="964.51" y="1903.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="1010.3" y="2005" width="0.6" height="15.0" fill="rgb(205,223,21)" rx="2" ry="2" />
<text  x="1013.33" y="2015.5" ></text>
</g>
<g >
<title>inet_sendmsg (239 samples, 4.00%)</title><rect x="253.5" y="1925" width="47.3" height="15.0" fill="rgb(224,214,27)" rx="2" ry="2" />
<text  x="256.51" y="1935.5" >inet..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1445" width="49.6" height="15.0" fill="rgb(245,12,35)" rx="2" ry="2" />
<text  x="72.49" y="1455.5" >[unkn..</text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1119.4" y="2053" width="0.2" height="15.0" fill="rgb(206,122,3)" rx="2" ry="2" />
<text  x="1122.44" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="606.9" y="1925" width="0.4" height="15.0" fill="rgb(220,92,1)" rx="2" ry="2" />
<text  x="609.92" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.18%)</title><rect x="749.4" y="1925" width="2.2" height="15.0" fill="rgb(222,70,40)" rx="2" ry="2" />
<text  x="752.43" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="110.8" y="37" width="0.4" height="15.0" fill="rgb(245,194,33)" rx="2" ry="2" />
<text  x="113.80" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="402.1" y="1925" width="0.2" height="15.0" fill="rgb(207,124,4)" rx="2" ry="2" />
<text  x="405.15" y="1935.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1150.5" y="2005" width="0.2" height="15.0" fill="rgb(241,206,33)" rx="2" ry="2" />
<text  x="1153.47" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="22.6" y="1973" width="0.2" height="15.0" fill="rgb(252,162,21)" rx="2" ry="2" />
<text  x="25.65" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (29 samples, 0.49%)</title><rect x="1067.5" y="1893" width="5.7" height="15.0" fill="rgb(227,18,27)" rx="2" ry="2" />
<text  x="1070.45" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="614.0" y="2037" width="0.2" height="15.0" fill="rgb(252,205,53)" rx="2" ry="2" />
<text  x="617.03" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="533.8" y="2021" width="0.2" height="15.0" fill="rgb(219,214,38)" rx="2" ry="2" />
<text  x="536.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1829" width="49.8" height="15.0" fill="rgb(250,83,8)" rx="2" ry="2" />
<text  x="72.49" y="1839.5" >[unkn..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="857.0" y="1957" width="0.1" height="15.0" fill="rgb(219,128,7)" rx="2" ry="2" />
<text  x="859.95" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="637.4" y="1989" width="1.1" height="15.0" fill="rgb(211,157,25)" rx="2" ry="2" />
<text  x="640.36" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="292.3" y="1637" width="0.1" height="15.0" fill="rgb(248,162,3)" rx="2" ry="2" />
<text  x="295.25" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="395.8" y="1877" width="0.2" height="15.0" fill="rgb(233,163,28)" rx="2" ry="2" />
<text  x="398.82" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (3 samples, 0.05%)</title><rect x="394.2" y="1941" width="0.6" height="15.0" fill="rgb(232,84,48)" rx="2" ry="2" />
<text  x="397.24" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (28 samples, 0.47%)</title><rect x="571.3" y="1989" width="5.6" height="15.0" fill="rgb(251,145,54)" rx="2" ry="2" />
<text  x="574.34" y="1999.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="608.5" y="1989" width="0.2" height="15.0" fill="rgb(229,85,43)" rx="2" ry="2" />
<text  x="611.50" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1221" width="49.6" height="15.0" fill="rgb(236,135,39)" rx="2" ry="2" />
<text  x="72.49" y="1231.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="402.9" y="2005" width="0.2" height="15.0" fill="rgb(230,24,1)" rx="2" ry="2" />
<text  x="405.94" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="746.5" y="1909" width="0.6" height="15.0" fill="rgb(233,50,47)" rx="2" ry="2" />
<text  x="749.46" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="132.5" y="1957" width="0.2" height="15.0" fill="rgb(219,47,8)" rx="2" ry="2" />
<text  x="135.55" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="208.2" y="1925" width="0.2" height="15.0" fill="rgb(215,124,38)" rx="2" ry="2" />
<text  x="211.25" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (124 samples, 2.08%)</title><rect x="29.6" y="2053" width="24.5" height="15.0" fill="rgb(237,184,26)" rx="2" ry="2" />
<text  x="32.57" y="2063.5" >[..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="229.2" y="2021" width="0.2" height="15.0" fill="rgb(230,113,12)" rx="2" ry="2" />
<text  x="232.20" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (32 samples, 0.54%)</title><rect x="20.3" y="1989" width="6.3" height="15.0" fill="rgb(212,145,54)" rx="2" ry="2" />
<text  x="23.28" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (41 samples, 0.69%)</title><rect x="195.6" y="2005" width="8.1" height="15.0" fill="rgb(207,99,46)" rx="2" ry="2" />
<text  x="198.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1765" width="49.8" height="15.0" fill="rgb(220,18,24)" rx="2" ry="2" />
<text  x="72.49" y="1775.5" >[unkn..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="592.7" y="1893" width="0.4" height="15.0" fill="rgb(241,162,34)" rx="2" ry="2" />
<text  x="595.69" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (8 samples, 0.13%)</title><rect x="1151.1" y="2021" width="1.5" height="15.0" fill="rgb(252,1,18)" rx="2" ry="2" />
<text  x="1154.06" y="2031.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="259.6" y="1877" width="0.2" height="15.0" fill="rgb(253,31,38)" rx="2" ry="2" />
<text  x="262.64" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (11 samples, 0.18%)</title><rect x="440.5" y="2005" width="2.2" height="15.0" fill="rgb(239,201,2)" rx="2" ry="2" />
<text  x="443.49" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="117.3" y="85" width="1.2" height="15.0" fill="rgb(225,169,6)" rx="2" ry="2" />
<text  x="120.33" y="95.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (21 samples, 0.35%)</title><rect x="946.5" y="1909" width="4.1" height="15.0" fill="rgb(220,115,28)" rx="2" ry="2" />
<text  x="949.49" y="1919.5" ></text>
</g>
<g >
<title>import_iovec (25 samples, 0.42%)</title><rect x="248.2" y="1925" width="4.9" height="15.0" fill="rgb(251,83,21)" rx="2" ry="2" />
<text  x="251.17" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="20.1" y="1973" width="0.2" height="15.0" fill="rgb(209,49,34)" rx="2" ry="2" />
<text  x="23.08" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="833.0" y="2005" width="0.4" height="15.0" fill="rgb(221,209,49)" rx="2" ry="2" />
<text  x="836.04" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="852.6" y="2005" width="0.2" height="15.0" fill="rgb(243,65,0)" rx="2" ry="2" />
<text  x="855.60" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (151 samples, 2.53%)</title><rect x="1033.9" y="1925" width="29.8" height="15.0" fill="rgb(215,128,54)" rx="2" ry="2" />
<text  x="1036.85" y="1935.5" >__..</text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="577.3" y="1989" width="0.2" height="15.0" fill="rgb(222,179,41)" rx="2" ry="2" />
<text  x="580.27" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (6 samples, 0.10%)</title><rect x="208.4" y="1925" width="1.2" height="15.0" fill="rgb(215,115,19)" rx="2" ry="2" />
<text  x="211.45" y="1935.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="296.0" y="1765" width="0.2" height="15.0" fill="rgb(239,41,11)" rx="2" ry="2" />
<text  x="299.01" y="1775.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (10 samples, 0.17%)</title><rect x="229.4" y="2037" width="2.0" height="15.0" fill="rgb(216,132,1)" rx="2" ry="2" />
<text  x="232.40" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="493.1" y="1909" width="0.6" height="15.0" fill="rgb(236,157,0)" rx="2" ry="2" />
<text  x="496.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="997" width="49.6" height="15.0" fill="rgb(246,164,40)" rx="2" ry="2" />
<text  x="72.49" y="1007.5" >[unkn..</text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="304.1" y="2021" width="2.4" height="15.0" fill="rgb(222,19,2)" rx="2" ry="2" />
<text  x="307.11" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="94.6" y="37" width="0.2" height="15.0" fill="rgb(225,166,40)" rx="2" ry="2" />
<text  x="97.60" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="930.9" y="1925" width="0.2" height="15.0" fill="rgb(226,174,10)" rx="2" ry="2" />
<text  x="933.87" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (943 samples, 15.80%)</title><rect x="666.4" y="2037" width="186.4" height="15.0" fill="rgb(235,228,0)" rx="2" ry="2" />
<text  x="669.41" y="2047.5" >facebook::memcache::thri..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="95.2" y="37" width="0.2" height="15.0" fill="rgb(224,194,27)" rx="2" ry="2" />
<text  x="98.19" y="47.5" ></text>
</g>
<g >
<title>__libc_recv (497 samples, 8.32%)</title><rect x="1016.5" y="2053" width="98.2" height="15.0" fill="rgb(232,94,18)" rx="2" ry="2" />
<text  x="1019.46" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>copy_user_generic_unrolled (24 samples, 0.40%)</title><rect x="262.6" y="1861" width="4.7" height="15.0" fill="rgb(216,25,29)" rx="2" ry="2" />
<text  x="265.60" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="546.4" y="1973" width="0.8" height="15.0" fill="rgb(240,39,20)" rx="2" ry="2" />
<text  x="549.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="659.1" y="1989" width="0.2" height="15.0" fill="rgb(241,86,31)" rx="2" ry="2" />
<text  x="662.10" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="254.7" y="1877" width="0.2" height="15.0" fill="rgb(244,185,4)" rx="2" ry="2" />
<text  x="257.70" y="1887.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="622.7" y="1989" width="0.4" height="15.0" fill="rgb(233,38,52)" rx="2" ry="2" />
<text  x="625.73" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="529.4" y="2021" width="0.2" height="15.0" fill="rgb(240,138,6)" rx="2" ry="2" />
<text  x="532.44" y="2031.5" ></text>
</g>
<g >
<title>std::operator&amp; (5 samples, 0.08%)</title><rect x="150.3" y="1925" width="1.0" height="15.0" fill="rgb(244,168,39)" rx="2" ry="2" />
<text  x="153.34" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="207.9" y="1893" width="0.2" height="15.0" fill="rgb(225,13,39)" rx="2" ry="2" />
<text  x="210.85" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="403.7" y="2037" width="0.2" height="15.0" fill="rgb(247,22,47)" rx="2" ry="2" />
<text  x="406.73" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="415.6" y="2005" width="0.4" height="15.0" fill="rgb(211,42,41)" rx="2" ry="2" />
<text  x="418.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="547.2" y="1973" width="0.2" height="15.0" fill="rgb(251,73,38)" rx="2" ry="2" />
<text  x="550.23" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="494.5" y="1893" width="0.3" height="15.0" fill="rgb(218,67,2)" rx="2" ry="2" />
<text  x="497.45" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1014.9" y="2037" width="0.2" height="15.0" fill="rgb(217,184,10)" rx="2" ry="2" />
<text  x="1017.88" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="890.0" y="2005" width="1.1" height="15.0" fill="rgb(248,143,17)" rx="2" ry="2" />
<text  x="892.96" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (66 samples, 1.11%)</title><rect x="1094.3" y="1541" width="13.1" height="15.0" fill="rgb(214,10,51)" rx="2" ry="2" />
<text  x="1097.34" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="689.3" y="1909" width="1.2" height="15.0" fill="rgb(218,23,24)" rx="2" ry="2" />
<text  x="692.34" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="857.1" y="1909" width="0.2" height="15.0" fill="rgb(249,90,54)" rx="2" ry="2" />
<text  x="860.15" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="202.1" y="1973" width="1.4" height="15.0" fill="rgb(230,198,4)" rx="2" ry="2" />
<text  x="205.12" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="504.5" y="1957" width="0.4" height="15.0" fill="rgb(247,201,52)" rx="2" ry="2" />
<text  x="507.53" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="691.7" y="1925" width="1.2" height="15.0" fill="rgb(253,50,50)" rx="2" ry="2" />
<text  x="694.71" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="325" width="49.6" height="15.0" fill="rgb(227,207,24)" rx="2" ry="2" />
<text  x="72.49" y="335.5" >[unkn..</text>
</g>
<g >
<title>[[vdso]] (17 samples, 0.28%)</title><rect x="235.9" y="2005" width="3.4" height="15.0" fill="rgb(216,76,26)" rx="2" ry="2" />
<text  x="238.92" y="2015.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="1111.9" y="1957" width="0.4" height="15.0" fill="rgb(249,109,42)" rx="2" ry="2" />
<text  x="1114.93" y="1967.5" ></text>
</g>
<g >
<title>inet_recvmsg (428 samples, 7.17%)</title><rect x="1025.9" y="1957" width="84.6" height="15.0" fill="rgb(253,146,6)" rx="2" ry="2" />
<text  x="1028.95" y="1967.5" >inet_recv..</text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="936.4" y="1893" width="0.6" height="15.0" fill="rgb(233,11,30)" rx="2" ry="2" />
<text  x="939.41" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="392.9" y="1989" width="0.4" height="15.0" fill="rgb(207,51,14)" rx="2" ry="2" />
<text  x="395.86" y="1999.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(214,50,5)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1397" width="49.6" height="15.0" fill="rgb(213,115,46)" rx="2" ry="2" />
<text  x="72.49" y="1407.5" >[unkn..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="637.9" y="1957" width="0.6" height="15.0" fill="rgb(243,18,28)" rx="2" ry="2" />
<text  x="640.95" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="646.8" y="2005" width="0.2" height="15.0" fill="rgb(221,67,2)" rx="2" ry="2" />
<text  x="649.84" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="421" width="49.6" height="15.0" fill="rgb(234,2,0)" rx="2" ry="2" />
<text  x="72.49" y="431.5" >[unkn..</text>
</g>
<g >
<title>free (40 samples, 0.67%)</title><rect x="990.8" y="2037" width="7.9" height="15.0" fill="rgb(215,103,53)" rx="2" ry="2" />
<text  x="993.76" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="608.1" y="1973" width="0.4" height="15.0" fill="rgb(237,213,31)" rx="2" ry="2" />
<text  x="611.10" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="272.5" y="1845" width="0.6" height="15.0" fill="rgb(253,198,14)" rx="2" ry="2" />
<text  x="275.49" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (9 samples, 0.15%)</title><rect x="491.9" y="1925" width="1.8" height="15.0" fill="rgb(251,71,6)" rx="2" ry="2" />
<text  x="494.88" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (6 samples, 0.10%)</title><rect x="565.4" y="1973" width="1.2" height="15.0" fill="rgb(219,134,12)" rx="2" ry="2" />
<text  x="568.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (23 samples, 0.39%)</title><rect x="160.6" y="1989" width="4.6" height="15.0" fill="rgb(205,191,25)" rx="2" ry="2" />
<text  x="163.61" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (12 samples, 0.20%)</title><rect x="419.9" y="1941" width="2.4" height="15.0" fill="rgb(247,30,9)" rx="2" ry="2" />
<text  x="422.94" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="971.6" y="1957" width="0.6" height="15.0" fill="rgb(246,79,19)" rx="2" ry="2" />
<text  x="974.59" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="27.4" y="1957" width="0.2" height="15.0" fill="rgb(227,26,45)" rx="2" ry="2" />
<text  x="30.39" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="242.8" y="2021" width="0.2" height="15.0" fill="rgb(232,192,22)" rx="2" ry="2" />
<text  x="245.84" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="117.1" y="37" width="0.2" height="15.0" fill="rgb(254,82,29)" rx="2" ry="2" />
<text  x="120.13" y="47.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="297.2" y="1829" width="0.6" height="15.0" fill="rgb(230,133,6)" rx="2" ry="2" />
<text  x="300.19" y="1839.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="271.5" y="1829" width="1.0" height="15.0" fill="rgb(220,22,0)" rx="2" ry="2" />
<text  x="274.50" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="396.4" y="1861" width="0.4" height="15.0" fill="rgb(214,14,7)" rx="2" ry="2" />
<text  x="399.42" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="500.8" y="1989" width="0.4" height="15.0" fill="rgb(218,161,20)" rx="2" ry="2" />
<text  x="503.78" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1013" width="49.6" height="15.0" fill="rgb(233,96,6)" rx="2" ry="2" />
<text  x="72.49" y="1023.5" >[unkn..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (38 samples, 0.64%)</title><rect x="341.7" y="1989" width="7.5" height="15.0" fill="rgb(238,83,19)" rx="2" ry="2" />
<text  x="344.66" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="155.7" y="1957" width="1.0" height="15.0" fill="rgb(212,78,7)" rx="2" ry="2" />
<text  x="158.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (4 samples, 0.07%)</title><rect x="76.2" y="37" width="0.8" height="15.0" fill="rgb(238,106,27)" rx="2" ry="2" />
<text  x="79.21" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="92.2" y="37" width="0.8" height="15.0" fill="rgb(228,144,29)" rx="2" ry="2" />
<text  x="95.22" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="401.2" y="1909" width="0.2" height="15.0" fill="rgb(250,83,28)" rx="2" ry="2" />
<text  x="404.16" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.59%)</title><rect x="310.8" y="2021" width="6.9" height="15.0" fill="rgb(245,209,45)" rx="2" ry="2" />
<text  x="313.83" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (96 samples, 1.61%)</title><rect x="274.9" y="1813" width="18.9" height="15.0" fill="rgb(222,84,31)" rx="2" ry="2" />
<text  x="277.86" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 0.64%)</title><rect x="395.2" y="2005" width="7.5" height="15.0" fill="rgb(222,68,19)" rx="2" ry="2" />
<text  x="398.23" y="2015.5" ></text>
</g>
<g >
<title>ip_output (70 samples, 1.17%)</title><rect x="1093.7" y="1829" width="13.9" height="15.0" fill="rgb(219,98,28)" rx="2" ry="2" />
<text  x="1096.74" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;void  (26 samples, 0.44%)</title><rect x="759.5" y="1957" width="5.1" height="15.0" fill="rgb(231,180,13)" rx="2" ry="2" />
<text  x="762.51" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="667.2" y="1989" width="0.2" height="15.0" fill="rgb(242,181,18)" rx="2" ry="2" />
<text  x="670.20" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (518 samples, 8.68%)</title><rect x="888.2" y="2037" width="102.4" height="15.0" fill="rgb(231,164,36)" rx="2" ry="2" />
<text  x="891.18" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (5 samples, 0.08%)</title><rect x="657.5" y="2037" width="1.0" height="15.0" fill="rgb(224,6,9)" rx="2" ry="2" />
<text  x="660.52" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="596.8" y="1893" width="0.4" height="15.0" fill="rgb(227,154,2)" rx="2" ry="2" />
<text  x="599.84" y="1903.5" ></text>
</g>
<g >
<title>skb_release_data (13 samples, 0.22%)</title><rect x="282.0" y="1429" width="2.5" height="15.0" fill="rgb(244,35,51)" rx="2" ry="2" />
<text  x="284.97" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="607.3" y="1925" width="0.2" height="15.0" fill="rgb(247,9,26)" rx="2" ry="2" />
<text  x="610.31" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="25.0" y="1909" width="0.2" height="15.0" fill="rgb(242,137,33)" rx="2" ry="2" />
<text  x="28.02" y="1919.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="256.1" y="1893" width="0.2" height="15.0" fill="rgb(249,129,4)" rx="2" ry="2" />
<text  x="259.08" y="1903.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="248.0" y="1925" width="0.2" height="15.0" fill="rgb(214,78,26)" rx="2" ry="2" />
<text  x="250.98" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="197.6" y="1973" width="0.6" height="15.0" fill="rgb(224,212,6)" rx="2" ry="2" />
<text  x="200.57" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (12 samples, 0.20%)</title><rect x="489.5" y="1925" width="2.4" height="15.0" fill="rgb(233,45,42)" rx="2" ry="2" />
<text  x="492.51" y="1935.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.10%)</title><rect x="11.2" y="1989" width="1.2" height="15.0" fill="rgb(250,74,13)" rx="2" ry="2" />
<text  x="14.19" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="207.9" y="1909" width="0.2" height="15.0" fill="rgb(223,193,9)" rx="2" ry="2" />
<text  x="210.85" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (4 samples, 0.07%)</title><rect x="412.0" y="2005" width="0.8" height="15.0" fill="rgb(207,47,9)" rx="2" ry="2" />
<text  x="415.03" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="637.4" y="1973" width="1.1" height="15.0" fill="rgb(214,80,45)" rx="2" ry="2" />
<text  x="640.36" y="1983.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="283.9" y="1397" width="0.6" height="15.0" fill="rgb(232,214,11)" rx="2" ry="2" />
<text  x="286.95" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="396.4" y="1909" width="0.4" height="15.0" fill="rgb(236,115,22)" rx="2" ry="2" />
<text  x="399.42" y="1919.5" ></text>
</g>
<g >
<title>copyin (3 samples, 0.05%)</title><rect x="268.7" y="1877" width="0.6" height="15.0" fill="rgb(238,222,18)" rx="2" ry="2" />
<text  x="271.73" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1147.7" y="1909" width="0.2" height="15.0" fill="rgb(249,32,8)" rx="2" ry="2" />
<text  x="1150.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="863.7" y="2005" width="0.6" height="15.0" fill="rgb(218,107,32)" rx="2" ry="2" />
<text  x="866.67" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="531.4" y="2005" width="0.4" height="15.0" fill="rgb(252,10,39)" rx="2" ry="2" />
<text  x="534.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="607.9" y="1989" width="0.2" height="15.0" fill="rgb(244,10,14)" rx="2" ry="2" />
<text  x="610.91" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="417.8" y="1941" width="0.2" height="15.0" fill="rgb(246,172,6)" rx="2" ry="2" />
<text  x="420.76" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (68 samples, 1.14%)</title><rect x="1094.1" y="1621" width="13.5" height="15.0" fill="rgb(235,219,48)" rx="2" ry="2" />
<text  x="1097.14" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="401.9" y="1941" width="0.2" height="15.0" fill="rgb(246,193,13)" rx="2" ry="2" />
<text  x="404.95" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="502.8" y="1973" width="0.2" height="15.0" fill="rgb(240,14,17)" rx="2" ry="2" />
<text  x="505.75" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="598.0" y="1925" width="0.2" height="15.0" fill="rgb(235,89,35)" rx="2" ry="2" />
<text  x="601.02" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="200.9" y="1973" width="0.2" height="15.0" fill="rgb(237,141,17)" rx="2" ry="2" />
<text  x="203.93" y="1983.5" ></text>
</g>
<g >
<title>vfprintf (8 samples, 0.13%)</title><rect x="1117.7" y="2037" width="1.5" height="15.0" fill="rgb(225,175,39)" rx="2" ry="2" />
<text  x="1120.66" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="853.8" y="1973" width="1.2" height="15.0" fill="rgb(250,30,30)" rx="2" ry="2" />
<text  x="856.79" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (6 samples, 0.10%)</title><rect x="332.0" y="1909" width="1.2" height="15.0" fill="rgb(218,96,24)" rx="2" ry="2" />
<text  x="334.98" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.13%)</title><rect x="498.4" y="1941" width="1.6" height="15.0" fill="rgb(243,190,44)" rx="2" ry="2" />
<text  x="501.41" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1149.1" y="2005" width="0.2" height="15.0" fill="rgb(235,203,48)" rx="2" ry="2" />
<text  x="1152.09" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="599.2" y="1909" width="0.2" height="15.0" fill="rgb(242,195,2)" rx="2" ry="2" />
<text  x="602.21" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (37 samples, 0.62%)</title><rect x="1007.4" y="2037" width="7.3" height="15.0" fill="rgb(245,177,52)" rx="2" ry="2" />
<text  x="1010.37" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="401.0" y="1877" width="0.2" height="15.0" fill="rgb(212,111,47)" rx="2" ry="2" />
<text  x="403.96" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="597.8" y="1909" width="0.2" height="15.0" fill="rgb(239,197,27)" rx="2" ry="2" />
<text  x="600.83" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="361.2" y="1973" width="0.2" height="15.0" fill="rgb(240,90,50)" rx="2" ry="2" />
<text  x="364.23" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.28%)</title><rect x="651.6" y="2005" width="3.3" height="15.0" fill="rgb(208,71,8)" rx="2" ry="2" />
<text  x="654.59" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="458.1" y="2005" width="0.2" height="15.0" fill="rgb(220,163,21)" rx="2" ry="2" />
<text  x="461.08" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="117.1" y="53" width="0.2" height="15.0" fill="rgb(243,41,9)" rx="2" ry="2" />
<text  x="120.13" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="81.6" y="37" width="1.5" height="15.0" fill="rgb(241,103,41)" rx="2" ry="2" />
<text  x="84.55" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="597.0" y="1861" width="0.2" height="15.0" fill="rgb(224,103,32)" rx="2" ry="2" />
<text  x="600.04" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (252 samples, 4.22%)</title><rect x="469.0" y="2037" width="49.8" height="15.0" fill="rgb(229,47,21)" rx="2" ry="2" />
<text  x="471.95" y="2047.5" >faceb..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (33 samples, 0.55%)</title><rect x="930.5" y="1941" width="6.5" height="15.0" fill="rgb(218,213,38)" rx="2" ry="2" />
<text  x="933.48" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="974.4" y="1989" width="0.2" height="15.0" fill="rgb(208,163,25)" rx="2" ry="2" />
<text  x="977.36" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (10 samples, 0.17%)</title><rect x="564.6" y="1989" width="2.0" height="15.0" fill="rgb(227,72,39)" rx="2" ry="2" />
<text  x="567.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="536.2" y="2037" width="0.2" height="15.0" fill="rgb(252,70,29)" rx="2" ry="2" />
<text  x="539.16" y="2047.5" ></text>
</g>
<g >
<title>skb_free_head (39 samples, 0.65%)</title><rect x="1097.5" y="1461" width="7.7" height="15.0" fill="rgb(244,170,42)" rx="2" ry="2" />
<text  x="1100.50" y="1471.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (190 samples, 3.18%)</title><rect x="775.7" y="1989" width="37.6" height="15.0" fill="rgb(206,125,16)" rx="2" ry="2" />
<text  x="778.72" y="1999.5" >fol..</text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="1071.6" y="1797" width="0.6" height="15.0" fill="rgb(225,194,46)" rx="2" ry="2" />
<text  x="1074.60" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="402.7" y="2005" width="0.2" height="15.0" fill="rgb(242,0,35)" rx="2" ry="2" />
<text  x="405.74" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="155.5" y="1941" width="0.2" height="15.0" fill="rgb(220,55,54)" rx="2" ry="2" />
<text  x="158.47" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="357" width="49.6" height="15.0" fill="rgb(218,70,46)" rx="2" ry="2" />
<text  x="72.49" y="367.5" >[unkn..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="592.9" y="1877" width="0.2" height="15.0" fill="rgb(211,198,36)" rx="2" ry="2" />
<text  x="595.88" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (68 samples, 1.14%)</title><rect x="1094.1" y="1637" width="13.5" height="15.0" fill="rgb(214,81,43)" rx="2" ry="2" />
<text  x="1097.14" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="874.1" y="2005" width="0.4" height="15.0" fill="rgb(205,132,4)" rx="2" ry="2" />
<text  x="877.15" y="2015.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="1025.4" y="1973" width="0.3" height="15.0" fill="rgb(236,222,32)" rx="2" ry="2" />
<text  x="1028.35" y="1983.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(231,56,9)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="205.7" y="1941" width="0.2" height="15.0" fill="rgb(249,103,47)" rx="2" ry="2" />
<text  x="208.68" y="1951.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (6 samples, 0.10%)</title><rect x="392.1" y="2005" width="1.2" height="15.0" fill="rgb(233,207,24)" rx="2" ry="2" />
<text  x="395.07" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (44 samples, 0.74%)</title><rect x="1038.8" y="1893" width="8.7" height="15.0" fill="rgb(232,61,5)" rx="2" ry="2" />
<text  x="1041.79" y="1903.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="252.9" y="1893" width="0.2" height="15.0" fill="rgb(242,226,7)" rx="2" ry="2" />
<text  x="255.92" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="118.5" y="37" width="0.2" height="15.0" fill="rgb(243,9,13)" rx="2" ry="2" />
<text  x="121.51" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (25 samples, 0.42%)</title><rect x="541.5" y="1973" width="4.9" height="15.0" fill="rgb(221,79,36)" rx="2" ry="2" />
<text  x="544.49" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="965" width="49.6" height="15.0" fill="rgb(220,89,18)" rx="2" ry="2" />
<text  x="72.49" y="975.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="424.9" y="1989" width="0.2" height="15.0" fill="rgb(210,81,11)" rx="2" ry="2" />
<text  x="427.88" y="1999.5" ></text>
</g>
<g >
<title>kfree (36 samples, 0.60%)</title><rect x="1040.4" y="1861" width="7.1" height="15.0" fill="rgb(216,225,42)" rx="2" ry="2" />
<text  x="1043.38" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (14 samples, 0.23%)</title><rect x="969.4" y="1989" width="2.8" height="15.0" fill="rgb(243,137,1)" rx="2" ry="2" />
<text  x="972.42" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="856.8" y="1989" width="0.2" height="15.0" fill="rgb(234,152,19)" rx="2" ry="2" />
<text  x="859.75" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="210.8" y="1877" width="0.2" height="15.0" fill="rgb(243,52,38)" rx="2" ry="2" />
<text  x="213.82" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="607.1" y="1909" width="0.2" height="15.0" fill="rgb(253,78,34)" rx="2" ry="2" />
<text  x="610.12" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="193.2" y="2005" width="0.8" height="15.0" fill="rgb(245,47,40)" rx="2" ry="2" />
<text  x="196.23" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.12%)</title><rect x="338.3" y="1957" width="1.4" height="15.0" fill="rgb(244,64,8)" rx="2" ry="2" />
<text  x="341.30" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (2 samples, 0.03%)</title><rect x="1132.3" y="2053" width="0.4" height="15.0" fill="rgb(231,94,7)" rx="2" ry="2" />
<text  x="1135.28" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 0.64%)</title><rect x="395.2" y="1989" width="7.5" height="15.0" fill="rgb(212,138,28)" rx="2" ry="2" />
<text  x="398.23" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="23.2" y="1877" width="0.2" height="15.0" fill="rgb(235,130,48)" rx="2" ry="2" />
<text  x="26.24" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (6 samples, 0.10%)</title><rect x="575.3" y="1941" width="1.2" height="15.0" fill="rgb(232,67,37)" rx="2" ry="2" />
<text  x="578.29" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_xmit (123 samples, 2.06%)</title><rect x="273.5" y="1845" width="24.3" height="15.0" fill="rgb(212,30,34)" rx="2" ry="2" />
<text  x="276.47" y="1855.5" >t..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="495.2" y="1925" width="0.2" height="15.0" fill="rgb(205,193,48)" rx="2" ry="2" />
<text  x="498.24" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="747.3" y="1909" width="0.5" height="15.0" fill="rgb(213,54,1)" rx="2" ry="2" />
<text  x="750.25" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.65%)</title><rect x="395.2" y="2021" width="7.7" height="15.0" fill="rgb(217,104,25)" rx="2" ry="2" />
<text  x="398.23" y="2031.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="292.4" y="1653" width="0.2" height="15.0" fill="rgb(248,65,30)" rx="2" ry="2" />
<text  x="295.45" y="1663.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="670.0" y="1973" width="1.0" height="15.0" fill="rgb(247,56,44)" rx="2" ry="2" />
<text  x="672.97" y="1983.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="381.6" y="1989" width="0.6" height="15.0" fill="rgb(241,167,53)" rx="2" ry="2" />
<text  x="384.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (31 samples, 0.52%)</title><rect x="602.8" y="2037" width="6.1" height="15.0" fill="rgb(224,119,45)" rx="2" ry="2" />
<text  x="605.77" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="855.0" y="1973" width="0.2" height="15.0" fill="rgb(229,223,25)" rx="2" ry="2" />
<text  x="857.97" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (1 samples, 0.02%)</title><rect x="20.1" y="1989" width="0.2" height="15.0" fill="rgb(242,42,40)" rx="2" ry="2" />
<text  x="23.08" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="319.9" y="2005" width="0.6" height="15.0" fill="rgb(206,198,24)" rx="2" ry="2" />
<text  x="322.92" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1253" width="49.6" height="15.0" fill="rgb(250,67,0)" rx="2" ry="2" />
<text  x="72.49" y="1263.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (43 samples, 0.72%)</title><rect x="142.8" y="1957" width="8.5" height="15.0" fill="rgb(222,27,23)" rx="2" ry="2" />
<text  x="145.82" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="585.4" y="1989" width="0.2" height="15.0" fill="rgb(231,114,35)" rx="2" ry="2" />
<text  x="588.37" y="1999.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="744.1" y="1893" width="0.2" height="15.0" fill="rgb(254,210,9)" rx="2" ry="2" />
<text  x="747.09" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (72 samples, 1.21%)</title><rect x="585.6" y="2005" width="14.2" height="15.0" fill="rgb(222,98,45)" rx="2" ry="2" />
<text  x="588.57" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (12 samples, 0.20%)</title><rect x="409.5" y="1989" width="2.3" height="15.0" fill="rgb(215,31,42)" rx="2" ry="2" />
<text  x="412.46" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="597.2" y="1941" width="0.2" height="15.0" fill="rgb(228,193,28)" rx="2" ry="2" />
<text  x="600.23" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (10 samples, 0.17%)</title><rect x="850.6" y="1973" width="2.0" height="15.0" fill="rgb(252,179,37)" rx="2" ry="2" />
<text  x="853.63" y="1983.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="1117.5" y="2037" width="0.2" height="15.0" fill="rgb(216,202,28)" rx="2" ry="2" />
<text  x="1120.46" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.4" y="1893" width="0.8" height="15.0" fill="rgb(225,143,18)" rx="2" ry="2" />
<text  x="14.38" y="1903.5" ></text>
</g>
<g >
<title>tcp_push (124 samples, 2.08%)</title><rect x="273.3" y="1877" width="24.5" height="15.0" fill="rgb(213,27,47)" rx="2" ry="2" />
<text  x="276.28" y="1887.5" >t..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (33 samples, 0.55%)</title><rect x="351.9" y="1973" width="6.6" height="15.0" fill="rgb(218,117,44)" rx="2" ry="2" />
<text  x="354.94" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="585.0" y="1989" width="0.4" height="15.0" fill="rgb(244,171,29)" rx="2" ry="2" />
<text  x="587.98" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (36 samples, 0.60%)</title><rect x="204.7" y="2021" width="7.1" height="15.0" fill="rgb(251,220,3)" rx="2" ry="2" />
<text  x="207.69" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (11 samples, 0.18%)</title><rect x="162.8" y="1973" width="2.2" height="15.0" fill="rgb(205,4,47)" rx="2" ry="2" />
<text  x="165.79" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="428.4" y="2037" width="0.2" height="15.0" fill="rgb(245,222,26)" rx="2" ry="2" />
<text  x="431.44" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1317" width="49.6" height="15.0" fill="rgb(241,213,47)" rx="2" ry="2" />
<text  x="72.49" y="1327.5" >[unkn..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="198.2" y="1989" width="2.9" height="15.0" fill="rgb(250,222,47)" rx="2" ry="2" />
<text  x="201.17" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="196.2" y="1989" width="1.0" height="15.0" fill="rgb(221,186,45)" rx="2" ry="2" />
<text  x="199.19" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="891.3" y="2005" width="0.4" height="15.0" fill="rgb(246,218,21)" rx="2" ry="2" />
<text  x="894.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (8 samples, 0.13%)</title><rect x="649.8" y="2037" width="1.6" height="15.0" fill="rgb(227,172,30)" rx="2" ry="2" />
<text  x="652.81" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="824.9" y="1989" width="0.4" height="15.0" fill="rgb(226,90,21)" rx="2" ry="2" />
<text  x="827.93" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="541.3" y="1973" width="0.2" height="15.0" fill="rgb(244,87,43)" rx="2" ry="2" />
<text  x="544.30" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (309 samples, 5.18%)</title><rect x="243.0" y="2021" width="61.1" height="15.0" fill="rgb(217,175,53)" rx="2" ry="2" />
<text  x="246.04" y="2031.5" >entry_..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (6 samples, 0.10%)</title><rect x="181.4" y="2021" width="1.2" height="15.0" fill="rgb(243,77,7)" rx="2" ry="2" />
<text  x="184.37" y="2031.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="423.7" y="2005" width="0.4" height="15.0" fill="rgb(210,68,18)" rx="2" ry="2" />
<text  x="426.69" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (258 samples, 4.32%)</title><rect x="766.2" y="2005" width="51.0" height="15.0" fill="rgb(252,137,16)" rx="2" ry="2" />
<text  x="769.23" y="2015.5" >faceb..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (38 samples, 0.64%)</title><rect x="395.2" y="1957" width="7.5" height="15.0" fill="rgb(234,58,51)" rx="2" ry="2" />
<text  x="398.23" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.20%)</title><rect x="605.5" y="1957" width="2.4" height="15.0" fill="rgb(245,142,41)" rx="2" ry="2" />
<text  x="608.53" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="927.5" y="1957" width="1.4" height="15.0" fill="rgb(249,222,54)" rx="2" ry="2" />
<text  x="930.51" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="458.7" y="2005" width="0.2" height="15.0" fill="rgb(246,205,52)" rx="2" ry="2" />
<text  x="461.68" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="302.1" y="1925" width="1.2" height="15.0" fill="rgb(205,50,38)" rx="2" ry="2" />
<text  x="305.13" y="1935.5" ></text>
</g>
<g >
<title>rb_erase (7 samples, 0.12%)</title><rect x="1105.6" y="1509" width="1.4" height="15.0" fill="rgb(233,7,32)" rx="2" ry="2" />
<text  x="1108.60" y="1519.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="184.3" y="2005" width="0.6" height="15.0" fill="rgb(243,151,1)" rx="2" ry="2" />
<text  x="187.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="192.4" y="2021" width="0.4" height="15.0" fill="rgb(247,160,36)" rx="2" ry="2" />
<text  x="195.44" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.10%)</title><rect x="1071.4" y="1829" width="1.2" height="15.0" fill="rgb(213,219,50)" rx="2" ry="2" />
<text  x="1074.41" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="874.9" y="2005" width="0.2" height="15.0" fill="rgb(219,56,6)" rx="2" ry="2" />
<text  x="877.94" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="28.8" y="2005" width="0.4" height="15.0" fill="rgb(244,158,32)" rx="2" ry="2" />
<text  x="31.78" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (44 samples, 0.74%)</title><rect x="590.7" y="1973" width="8.7" height="15.0" fill="rgb(243,89,30)" rx="2" ry="2" />
<text  x="593.71" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="464.4" y="1973" width="0.2" height="15.0" fill="rgb(216,94,29)" rx="2" ry="2" />
<text  x="467.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="608.1" y="1989" width="0.4" height="15.0" fill="rgb(243,115,11)" rx="2" ry="2" />
<text  x="611.10" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="448.2" y="2005" width="0.6" height="15.0" fill="rgb(215,165,31)" rx="2" ry="2" />
<text  x="451.20" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="348.8" y="1909" width="0.2" height="15.0" fill="rgb(239,35,52)" rx="2" ry="2" />
<text  x="351.78" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="343.2" y="1973" width="0.2" height="15.0" fill="rgb(213,159,32)" rx="2" ry="2" />
<text  x="346.25" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (37 samples, 0.62%)</title><rect x="279.0" y="1621" width="7.3" height="15.0" fill="rgb(248,178,38)" rx="2" ry="2" />
<text  x="282.01" y="1631.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="667.8" y="2005" width="0.2" height="15.0" fill="rgb(244,90,5)" rx="2" ry="2" />
<text  x="670.80" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (2 samples, 0.03%)</title><rect x="763.7" y="1941" width="0.4" height="15.0" fill="rgb(252,119,53)" rx="2" ry="2" />
<text  x="766.66" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="187.3" y="1941" width="0.4" height="15.0" fill="rgb(251,7,39)" rx="2" ry="2" />
<text  x="190.30" y="1951.5" ></text>
</g>
<g >
<title>sock_rfree (3 samples, 0.05%)</title><rect x="1062.9" y="1893" width="0.6" height="15.0" fill="rgb(241,24,0)" rx="2" ry="2" />
<text  x="1065.91" y="1903.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1107.2" y="1509" width="0.2" height="15.0" fill="rgb(219,28,26)" rx="2" ry="2" />
<text  x="1110.18" y="1519.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="1147.7" y="1861" width="0.2" height="15.0" fill="rgb(239,104,41)" rx="2" ry="2" />
<text  x="1150.70" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="211.2" y="1957" width="0.2" height="15.0" fill="rgb(227,60,40)" rx="2" ry="2" />
<text  x="214.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (2 samples, 0.03%)</title><rect x="206.7" y="1925" width="0.4" height="15.0" fill="rgb(210,154,24)" rx="2" ry="2" />
<text  x="209.67" y="1935.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.6" y="1941" width="0.2" height="15.0" fill="rgb(207,193,18)" rx="2" ry="2" />
<text  x="940.59" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="365.4" y="1861" width="0.2" height="15.0" fill="rgb(231,114,6)" rx="2" ry="2" />
<text  x="368.38" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="348.4" y="1925" width="0.6" height="15.0" fill="rgb(220,7,8)" rx="2" ry="2" />
<text  x="351.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (68 samples, 1.14%)</title><rect x="1094.1" y="1685" width="13.5" height="15.0" fill="rgb(230,26,14)" rx="2" ry="2" />
<text  x="1097.14" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="396.0" y="1877" width="0.2" height="15.0" fill="rgb(237,169,14)" rx="2" ry="2" />
<text  x="399.02" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (15 samples, 0.25%)</title><rect x="549.8" y="1989" width="3.0" height="15.0" fill="rgb(214,38,47)" rx="2" ry="2" />
<text  x="552.80" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (10 samples, 0.17%)</title><rect x="537.3" y="2037" width="2.0" height="15.0" fill="rgb(242,193,9)" rx="2" ry="2" />
<text  x="540.34" y="2047.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="951.2" y="1877" width="0.4" height="15.0" fill="rgb(233,57,21)" rx="2" ry="2" />
<text  x="954.23" y="1887.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.10%)</title><rect x="11.2" y="1973" width="1.2" height="15.0" fill="rgb(242,110,33)" rx="2" ry="2" />
<text  x="14.19" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_locked (4 samples, 0.07%)</title><rect x="279.2" y="1413" width="0.8" height="15.0" fill="rgb(210,108,18)" rx="2" ry="2" />
<text  x="282.21" y="1423.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1117.3" y="2037" width="0.2" height="15.0" fill="rgb(211,228,35)" rx="2" ry="2" />
<text  x="1120.26" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="166.7" y="1957" width="1.0" height="15.0" fill="rgb(252,227,28)" rx="2" ry="2" />
<text  x="169.74" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="132.2" y="1973" width="0.5" height="15.0" fill="rgb(222,5,49)" rx="2" ry="2" />
<text  x="135.15" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="229" width="49.6" height="15.0" fill="rgb(226,213,30)" rx="2" ry="2" />
<text  x="72.49" y="239.5" >[unkn..</text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="295.0" y="1813" width="0.2" height="15.0" fill="rgb(243,197,40)" rx="2" ry="2" />
<text  x="298.02" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="205.7" y="1877" width="0.2" height="15.0" fill="rgb(236,11,4)" rx="2" ry="2" />
<text  x="208.68" y="1887.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (39 samples, 0.65%)</title><rect x="539.7" y="1989" width="7.7" height="15.0" fill="rgb(223,41,0)" rx="2" ry="2" />
<text  x="542.72" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="691.7" y="1909" width="0.4" height="15.0" fill="rgb(215,148,26)" rx="2" ry="2" />
<text  x="694.71" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (24 samples, 0.40%)</title><rect x="12.6" y="1909" width="4.7" height="15.0" fill="rgb(253,151,0)" rx="2" ry="2" />
<text  x="15.57" y="1919.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="303.7" y="1973" width="0.2" height="15.0" fill="rgb(205,21,7)" rx="2" ry="2" />
<text  x="306.72" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="382.4" y="1989" width="0.6" height="15.0" fill="rgb(220,2,8)" rx="2" ry="2" />
<text  x="385.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1605" width="49.8" height="15.0" fill="rgb(238,132,49)" rx="2" ry="2" />
<text  x="72.49" y="1615.5" >[unkn..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1072.4" y="1813" width="0.2" height="15.0" fill="rgb(241,51,26)" rx="2" ry="2" />
<text  x="1075.40" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.34%)</title><rect x="852.8" y="2021" width="4.0" height="15.0" fill="rgb(212,136,26)" rx="2" ry="2" />
<text  x="855.80" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="339.7" y="1957" width="0.2" height="15.0" fill="rgb(222,159,1)" rx="2" ry="2" />
<text  x="342.69" y="1967.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (72 samples, 1.21%)</title><rect x="1093.3" y="1925" width="14.3" height="15.0" fill="rgb(227,24,8)" rx="2" ry="2" />
<text  x="1096.35" y="1935.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="505.1" y="1973" width="0.2" height="15.0" fill="rgb(213,202,44)" rx="2" ry="2" />
<text  x="508.13" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="819.2" y="2005" width="0.4" height="15.0" fill="rgb(251,162,37)" rx="2" ry="2" />
<text  x="822.20" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (19 samples, 0.32%)</title><rect x="128.4" y="1957" width="3.8" height="15.0" fill="rgb(205,201,34)" rx="2" ry="2" />
<text  x="131.40" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="109.0" y="37" width="0.6" height="15.0" fill="rgb(240,174,52)" rx="2" ry="2" />
<text  x="112.03" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (15 samples, 0.25%)</title><rect x="89.3" y="37" width="2.9" height="15.0" fill="rgb(250,88,25)" rx="2" ry="2" />
<text  x="92.26" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="196.8" y="1957" width="0.2" height="15.0" fill="rgb(215,96,11)" rx="2" ry="2" />
<text  x="199.78" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="209.2" y="1893" width="0.4" height="15.0" fill="rgb(237,123,8)" rx="2" ry="2" />
<text  x="212.24" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (2 samples, 0.03%)</title><rect x="1150.7" y="2037" width="0.4" height="15.0" fill="rgb(214,218,50)" rx="2" ry="2" />
<text  x="1153.67" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (457 samples, 7.65%)</title><rect x="675.3" y="1989" width="90.3" height="15.0" fill="rgb(243,97,31)" rx="2" ry="2" />
<text  x="678.31" y="1999.5" >folly::fib..</text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (6 samples, 0.10%)</title><rect x="615.2" y="2037" width="1.2" height="15.0" fill="rgb(235,166,45)" rx="2" ry="2" />
<text  x="618.22" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (11 samples, 0.18%)</title><rect x="290.5" y="1669" width="2.1" height="15.0" fill="rgb(251,49,22)" rx="2" ry="2" />
<text  x="293.47" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="448.0" y="2005" width="0.2" height="15.0" fill="rgb(206,73,30)" rx="2" ry="2" />
<text  x="451.00" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (6 samples, 0.10%)</title><rect x="389.1" y="1941" width="1.2" height="15.0" fill="rgb(221,40,52)" rx="2" ry="2" />
<text  x="392.10" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="617.4" y="1973" width="0.2" height="15.0" fill="rgb(253,58,21)" rx="2" ry="2" />
<text  x="620.39" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="933" width="49.6" height="15.0" fill="rgb(218,33,9)" rx="2" ry="2" />
<text  x="72.49" y="943.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="417.2" y="1973" width="0.4" height="15.0" fill="rgb(223,159,4)" rx="2" ry="2" />
<text  x="420.17" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (9 samples, 0.15%)</title><rect x="487.7" y="1925" width="1.8" height="15.0" fill="rgb(247,11,25)" rx="2" ry="2" />
<text  x="490.73" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (11 samples, 0.18%)</title><rect x="371.1" y="1989" width="2.2" height="15.0" fill="rgb(226,7,19)" rx="2" ry="2" />
<text  x="374.12" y="1999.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (14 samples, 0.23%)</title><rect x="103.9" y="53" width="2.8" height="15.0" fill="rgb(242,47,46)" rx="2" ry="2" />
<text  x="106.89" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (12 samples, 0.20%)</title><rect x="690.5" y="1941" width="2.4" height="15.0" fill="rgb(225,180,52)" rx="2" ry="2" />
<text  x="693.53" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (18 samples, 0.30%)</title><rect x="828.5" y="2005" width="3.5" height="15.0" fill="rgb(234,108,19)" rx="2" ry="2" />
<text  x="831.49" y="2015.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (4 samples, 0.07%)</title><rect x="367.8" y="1973" width="0.7" height="15.0" fill="rgb(215,167,0)" rx="2" ry="2" />
<text  x="370.76" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="422.9" y="1973" width="0.2" height="15.0" fill="rgb(205,200,27)" rx="2" ry="2" />
<text  x="425.90" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (4 samples, 0.07%)</title><rect x="646.1" y="2005" width="0.7" height="15.0" fill="rgb(214,228,49)" rx="2" ry="2" />
<text  x="649.05" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="160.2" y="1973" width="0.4" height="15.0" fill="rgb(243,111,28)" rx="2" ry="2" />
<text  x="163.22" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (3 samples, 0.05%)</title><rect x="214.6" y="2021" width="0.6" height="15.0" fill="rgb(233,13,44)" rx="2" ry="2" />
<text  x="217.57" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="29.2" y="2005" width="0.2" height="15.0" fill="rgb(237,138,44)" rx="2" ry="2" />
<text  x="32.17" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="24.8" y="1957" width="0.4" height="15.0" fill="rgb(234,133,52)" rx="2" ry="2" />
<text  x="27.82" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="891.1" y="2005" width="0.2" height="15.0" fill="rgb(252,43,17)" rx="2" ry="2" />
<text  x="894.15" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (20 samples, 0.34%)</title><rect x="685.4" y="1925" width="3.9" height="15.0" fill="rgb(248,161,39)" rx="2" ry="2" />
<text  x="688.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1148.9" y="2005" width="0.2" height="15.0" fill="rgb(245,37,41)" rx="2" ry="2" />
<text  x="1151.89" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.5" y="85" width="0.2" height="15.0" fill="rgb(237,105,20)" rx="2" ry="2" />
<text  x="121.51" y="95.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1045" width="49.6" height="15.0" fill="rgb(210,61,33)" rx="2" ry="2" />
<text  x="72.49" y="1055.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (2 samples, 0.03%)</title><rect x="192.0" y="2021" width="0.4" height="15.0" fill="rgb(216,122,0)" rx="2" ry="2" />
<text  x="195.04" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="619.8" y="1957" width="2.3" height="15.0" fill="rgb(229,104,24)" rx="2" ry="2" />
<text  x="622.77" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (2 samples, 0.03%)</title><rect x="599.0" y="1941" width="0.4" height="15.0" fill="rgb(211,36,20)" rx="2" ry="2" />
<text  x="602.01" y="1951.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="279.4" y="1365" width="0.6" height="15.0" fill="rgb(229,107,0)" rx="2" ry="2" />
<text  x="282.40" y="1375.5" ></text>
</g>
<g >
<title>process_backlog (37 samples, 0.62%)</title><rect x="279.0" y="1653" width="7.3" height="15.0" fill="rgb(219,201,23)" rx="2" ry="2" />
<text  x="282.01" y="1663.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="422.3" y="1941" width="0.2" height="15.0" fill="rgb(208,153,53)" rx="2" ry="2" />
<text  x="425.31" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (3 samples, 0.05%)</title><rect x="1148.3" y="1989" width="0.6" height="15.0" fill="rgb(222,209,39)" rx="2" ry="2" />
<text  x="1151.29" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (46 samples, 0.77%)</title><rect x="1096.3" y="1493" width="9.1" height="15.0" fill="rgb(214,178,41)" rx="2" ry="2" />
<text  x="1099.31" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="358.3" y="1957" width="0.2" height="15.0" fill="rgb(209,200,49)" rx="2" ry="2" />
<text  x="361.27" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (2 samples, 0.03%)</title><rect x="320.9" y="2005" width="0.4" height="15.0" fill="rgb(209,166,51)" rx="2" ry="2" />
<text  x="323.91" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="23.2" y="1893" width="0.2" height="15.0" fill="rgb(220,217,47)" rx="2" ry="2" />
<text  x="26.24" y="1903.5" ></text>
</g>
<g >
<title>free (35 samples, 0.59%)</title><rect x="216.4" y="2021" width="6.9" height="15.0" fill="rgb(225,141,3)" rx="2" ry="2" />
<text  x="219.35" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (317 samples, 5.31%)</title><rect x="539.7" y="2021" width="62.7" height="15.0" fill="rgb(244,228,27)" rx="2" ry="2" />
<text  x="542.72" y="2031.5" >[unkno..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (38 samples, 0.64%)</title><rect x="395.2" y="1973" width="7.5" height="15.0" fill="rgb(225,105,51)" rx="2" ry="2" />
<text  x="398.23" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5 samples, 0.08%)</title><rect x="344.4" y="1957" width="1.0" height="15.0" fill="rgb(206,139,21)" rx="2" ry="2" />
<text  x="347.43" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="509.1" y="1957" width="0.2" height="15.0" fill="rgb(238,48,34)" rx="2" ry="2" />
<text  x="512.08" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="501" width="49.6" height="15.0" fill="rgb(215,32,11)" rx="2" ry="2" />
<text  x="72.49" y="511.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (5 samples, 0.08%)</title><rect x="614.2" y="2037" width="1.0" height="15.0" fill="rgb(254,138,2)" rx="2" ry="2" />
<text  x="617.23" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (58 samples, 0.97%)</title><rect x="404.5" y="2037" width="11.5" height="15.0" fill="rgb(220,215,44)" rx="2" ry="2" />
<text  x="407.52" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="682.4" y="1941" width="0.4" height="15.0" fill="rgb(243,205,11)" rx="2" ry="2" />
<text  x="685.42" y="1951.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="69.5" y="37" width="1.0" height="15.0" fill="rgb(205,71,1)" rx="2" ry="2" />
<text  x="72.49" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="871.4" y="2005" width="0.4" height="15.0" fill="rgb(226,169,25)" rx="2" ry="2" />
<text  x="874.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="603.0" y="1989" width="0.2" height="15.0" fill="rgb(233,205,40)" rx="2" ry="2" />
<text  x="605.96" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="668.4" y="1989" width="0.2" height="15.0" fill="rgb(214,215,24)" rx="2" ry="2" />
<text  x="671.39" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1128.7" y="1989" width="0.4" height="15.0" fill="rgb(214,206,25)" rx="2" ry="2" />
<text  x="1131.73" y="1999.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1107.0" y="1509" width="0.2" height="15.0" fill="rgb(224,110,26)" rx="2" ry="2" />
<text  x="1109.98" y="1519.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="765.2" y="1973" width="0.4" height="15.0" fill="rgb(210,0,6)" rx="2" ry="2" />
<text  x="768.24" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="170.9" y="1941" width="0.2" height="15.0" fill="rgb(252,12,7)" rx="2" ry="2" />
<text  x="173.89" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (106 samples, 1.78%)</title><rect x="274.5" y="1829" width="20.9" height="15.0" fill="rgb(222,183,38)" rx="2" ry="2" />
<text  x="277.46" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="755.9" y="1957" width="2.6" height="15.0" fill="rgb(228,104,7)" rx="2" ry="2" />
<text  x="758.95" y="1967.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="373.3" y="1989" width="0.2" height="15.0" fill="rgb(234,117,42)" rx="2" ry="2" />
<text  x="376.29" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="468.6" y="1957" width="0.4" height="15.0" fill="rgb(216,49,42)" rx="2" ry="2" />
<text  x="471.56" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (80 samples, 1.34%)</title><rect x="1134.9" y="2037" width="15.8" height="15.0" fill="rgb(232,120,36)" rx="2" ry="2" />
<text  x="1137.85" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1429" width="49.6" height="15.0" fill="rgb(238,147,52)" rx="2" ry="2" />
<text  x="72.49" y="1439.5" >[unkn..</text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="178.0" y="2005" width="1.0" height="15.0" fill="rgb(246,71,4)" rx="2" ry="2" />
<text  x="181.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="211.8" y="2021" width="0.2" height="15.0" fill="rgb(220,67,43)" rx="2" ry="2" />
<text  x="214.81" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (4 samples, 0.07%)</title><rect x="201.1" y="1989" width="0.8" height="15.0" fill="rgb(214,167,36)" rx="2" ry="2" />
<text  x="204.13" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="532.6" y="2021" width="1.2" height="15.0" fill="rgb(232,20,4)" rx="2" ry="2" />
<text  x="535.60" y="2031.5" ></text>
</g>
<g >
<title>sys_epoll_wait (34 samples, 0.57%)</title><rect x="311.0" y="1989" width="6.7" height="15.0" fill="rgb(222,218,4)" rx="2" ry="2" />
<text  x="314.03" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="958.3" y="1877" width="0.2" height="15.0" fill="rgb(245,18,17)" rx="2" ry="2" />
<text  x="961.35" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (6 samples, 0.10%)</title><rect x="695.1" y="1909" width="1.2" height="15.0" fill="rgb(210,47,43)" rx="2" ry="2" />
<text  x="698.07" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="938.8" y="1989" width="0.2" height="15.0" fill="rgb(239,155,5)" rx="2" ry="2" />
<text  x="941.78" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="833.4" y="2005" width="0.6" height="15.0" fill="rgb(218,219,47)" rx="2" ry="2" />
<text  x="836.43" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (5 samples, 0.08%)</title><rect x="345.4" y="1957" width="1.0" height="15.0" fill="rgb(225,78,12)" rx="2" ry="2" />
<text  x="348.42" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (17 samples, 0.28%)</title><rect x="376.5" y="1973" width="3.3" height="15.0" fill="rgb(230,229,11)" rx="2" ry="2" />
<text  x="379.45" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="966.8" y="1925" width="0.4" height="15.0" fill="rgb(210,165,49)" rx="2" ry="2" />
<text  x="969.85" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="340.9" y="1957" width="0.6" height="15.0" fill="rgb(225,140,52)" rx="2" ry="2" />
<text  x="343.87" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (78 samples, 1.31%)</title><rect x="1135.2" y="2021" width="15.5" height="15.0" fill="rgb(225,19,22)" rx="2" ry="2" />
<text  x="1138.25" y="2031.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (2 samples, 0.03%)</title><rect x="935.6" y="1877" width="0.4" height="15.0" fill="rgb(213,170,4)" rx="2" ry="2" />
<text  x="938.62" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (36 samples, 0.60%)</title><rect x="279.0" y="1557" width="7.1" height="15.0" fill="rgb(210,98,2)" rx="2" ry="2" />
<text  x="282.01" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="117.3" y="69" width="1.0" height="15.0" fill="rgb(236,144,53)" rx="2" ry="2" />
<text  x="120.33" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="475.7" y="1973" width="0.2" height="15.0" fill="rgb(251,62,23)" rx="2" ry="2" />
<text  x="478.68" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (22 samples, 0.37%)</title><rect x="127.8" y="1973" width="4.4" height="15.0" fill="rgb(224,172,9)" rx="2" ry="2" />
<text  x="130.80" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (48 samples, 0.80%)</title><rect x="928.9" y="1989" width="9.5" height="15.0" fill="rgb(217,213,38)" rx="2" ry="2" />
<text  x="931.90" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="205.7" y="1957" width="0.2" height="15.0" fill="rgb(212,23,52)" rx="2" ry="2" />
<text  x="208.68" y="1967.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="120.5" y="2005" width="0.4" height="15.0" fill="rgb(226,89,53)" rx="2" ry="2" />
<text  x="123.49" y="2015.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (4 samples, 0.07%)</title><rect x="367.0" y="1973" width="0.8" height="15.0" fill="rgb(226,202,37)" rx="2" ry="2" />
<text  x="369.96" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1152.1" y="2005" width="0.1" height="15.0" fill="rgb(244,189,15)" rx="2" ry="2" />
<text  x="1155.05" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="207.3" y="1909" width="0.6" height="15.0" fill="rgb(228,63,23)" rx="2" ry="2" />
<text  x="210.26" y="1919.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (24 samples, 0.40%)</title><rect x="312.8" y="1925" width="4.8" height="15.0" fill="rgb(237,215,37)" rx="2" ry="2" />
<text  x="315.81" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="165" width="49.6" height="15.0" fill="rgb(248,99,14)" rx="2" ry="2" />
<text  x="72.49" y="175.5" >[unkn..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (11 samples, 0.18%)</title><rect x="359.1" y="1957" width="2.1" height="15.0" fill="rgb(242,142,25)" rx="2" ry="2" />
<text  x="362.06" y="1967.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (4 samples, 0.07%)</title><rect x="1110.9" y="1925" width="0.8" height="15.0" fill="rgb(227,166,31)" rx="2" ry="2" />
<text  x="1113.94" y="1935.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1147.7" y="1941" width="0.2" height="15.0" fill="rgb(218,224,9)" rx="2" ry="2" />
<text  x="1150.70" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (5 samples, 0.08%)</title><rect x="22.8" y="1973" width="1.0" height="15.0" fill="rgb(225,9,37)" rx="2" ry="2" />
<text  x="25.85" y="1983.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1110.3" y="1925" width="0.2" height="15.0" fill="rgb(221,134,37)" rx="2" ry="2" />
<text  x="1113.35" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="569.2" y="1989" width="0.2" height="15.0" fill="rgb(210,217,2)" rx="2" ry="2" />
<text  x="572.17" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="598.2" y="1909" width="0.2" height="15.0" fill="rgb(207,199,53)" rx="2" ry="2" />
<text  x="601.22" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="403.1" y="2021" width="0.6" height="15.0" fill="rgb(254,145,54)" rx="2" ry="2" />
<text  x="406.14" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (6 samples, 0.10%)</title><rect x="404.9" y="2005" width="1.2" height="15.0" fill="rgb(216,15,45)" rx="2" ry="2" />
<text  x="407.91" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11 samples, 0.18%)</title><rect x="1088.2" y="1893" width="2.2" height="15.0" fill="rgb(251,76,5)" rx="2" ry="2" />
<text  x="1091.21" y="1903.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="597.6" y="1925" width="0.2" height="15.0" fill="rgb(235,140,41)" rx="2" ry="2" />
<text  x="600.63" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="128.0" y="1957" width="0.4" height="15.0" fill="rgb(252,92,37)" rx="2" ry="2" />
<text  x="131.00" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="422.5" y="1989" width="0.6" height="15.0" fill="rgb(211,199,11)" rx="2" ry="2" />
<text  x="425.51" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (8 samples, 0.13%)</title><rect x="624.9" y="1973" width="1.6" height="15.0" fill="rgb(219,121,44)" rx="2" ry="2" />
<text  x="627.90" y="1983.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="119.7" y="1989" width="0.8" height="15.0" fill="rgb(225,25,15)" rx="2" ry="2" />
<text  x="122.70" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (2 samples, 0.03%)</title><rect x="599.0" y="1925" width="0.4" height="15.0" fill="rgb(237,102,44)" rx="2" ry="2" />
<text  x="602.01" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="949" width="49.6" height="15.0" fill="rgb(225,131,28)" rx="2" ry="2" />
<text  x="72.49" y="959.5" >[unkn..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1189.2" y="2021" width="0.4" height="15.0" fill="rgb(239,182,25)" rx="2" ry="2" />
<text  x="1192.21" y="2031.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="1011.5" y="2005" width="0.2" height="15.0" fill="rgb(247,149,17)" rx="2" ry="2" />
<text  x="1014.52" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="351.7" y="1973" width="0.2" height="15.0" fill="rgb(234,174,20)" rx="2" ry="2" />
<text  x="354.75" y="1983.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="582.6" y="1989" width="0.6" height="15.0" fill="rgb(246,81,6)" rx="2" ry="2" />
<text  x="585.61" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="466.0" y="1973" width="0.6" height="15.0" fill="rgb(248,175,36)" rx="2" ry="2" />
<text  x="468.99" y="1983.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="297.0" y="1749" width="0.2" height="15.0" fill="rgb(247,135,8)" rx="2" ry="2" />
<text  x="299.99" y="1759.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="276.4" y="1765" width="0.2" height="15.0" fill="rgb(229,90,41)" rx="2" ry="2" />
<text  x="279.44" y="1775.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="972.6" y="1957" width="0.2" height="15.0" fill="rgb(221,41,45)" rx="2" ry="2" />
<text  x="975.58" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1237" width="49.6" height="15.0" fill="rgb(222,216,0)" rx="2" ry="2" />
<text  x="72.49" y="1247.5" >[unkn..</text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="1143.4" y="1973" width="0.3" height="15.0" fill="rgb(251,218,33)" rx="2" ry="2" />
<text  x="1146.35" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (22 samples, 0.37%)</title><rect x="13.0" y="1861" width="4.3" height="15.0" fill="rgb(252,89,21)" rx="2" ry="2" />
<text  x="15.96" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (10 samples, 0.17%)</title><rect x="817.2" y="2005" width="2.0" height="15.0" fill="rgb(225,226,28)" rx="2" ry="2" />
<text  x="820.22" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="485.4" y="1941" width="0.2" height="15.0" fill="rgb(215,191,11)" rx="2" ry="2" />
<text  x="488.36" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="109.6" y="37" width="0.4" height="15.0" fill="rgb(210,58,51)" rx="2" ry="2" />
<text  x="112.62" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="159.0" y="1973" width="0.2" height="15.0" fill="rgb(240,46,24)" rx="2" ry="2" />
<text  x="162.03" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="365.4" y="1813" width="0.2" height="15.0" fill="rgb(234,124,6)" rx="2" ry="2" />
<text  x="368.38" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (8 samples, 0.13%)</title><rect x="608.9" y="2005" width="1.6" height="15.0" fill="rgb(251,71,37)" rx="2" ry="2" />
<text  x="611.89" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="601.4" y="2005" width="0.4" height="15.0" fill="rgb(249,149,14)" rx="2" ry="2" />
<text  x="604.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="87.5" y="37" width="0.2" height="15.0" fill="rgb(239,143,40)" rx="2" ry="2" />
<text  x="90.48" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (3 samples, 0.05%)</title><rect x="566.6" y="1989" width="0.6" height="15.0" fill="rgb(217,157,17)" rx="2" ry="2" />
<text  x="569.60" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="83.1" y="37" width="1.2" height="15.0" fill="rgb(222,20,36)" rx="2" ry="2" />
<text  x="86.13" y="47.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(245,173,19)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.03%)</title><rect x="279.6" y="1349" width="0.4" height="15.0" fill="rgb(249,204,12)" rx="2" ry="2" />
<text  x="282.60" y="1359.5" ></text>
</g>
<g >
<title>all (5,970 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(237,177,27)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>[unknown] (556 samples, 9.31%)</title><rect x="69.1" y="2021" width="109.9" height="15.0" fill="rgb(252,33,0)" rx="2" ry="2" />
<text  x="72.10" y="2031.5" >[unknown]</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (3 samples, 0.05%)</title><rect x="648.0" y="2037" width="0.6" height="15.0" fill="rgb(212,0,40)" rx="2" ry="2" />
<text  x="651.03" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1072.2" y="1813" width="0.2" height="15.0" fill="rgb(233,138,8)" rx="2" ry="2" />
<text  x="1075.20" y="1823.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="297.6" y="1813" width="0.2" height="15.0" fill="rgb(210,188,27)" rx="2" ry="2" />
<text  x="300.59" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (11 samples, 0.18%)</title><rect x="166.5" y="1989" width="2.2" height="15.0" fill="rgb(222,138,39)" rx="2" ry="2" />
<text  x="169.54" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="25.0" y="1941" width="0.2" height="15.0" fill="rgb(207,39,15)" rx="2" ry="2" />
<text  x="28.02" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (10 samples, 0.17%)</title><rect x="173.5" y="2005" width="1.9" height="15.0" fill="rgb(215,229,48)" rx="2" ry="2" />
<text  x="176.46" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (3 samples, 0.05%)</title><rect x="182.9" y="2021" width="0.6" height="15.0" fill="rgb(234,152,50)" rx="2" ry="2" />
<text  x="185.95" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="353.3" y="1957" width="0.4" height="15.0" fill="rgb(238,206,53)" rx="2" ry="2" />
<text  x="356.33" y="1967.5" ></text>
</g>
<g >
<title>__alloc_skb (15 samples, 0.25%)</title><rect x="270.1" y="1861" width="3.0" height="15.0" fill="rgb(251,45,51)" rx="2" ry="2" />
<text  x="273.11" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1064.1" y="1925" width="0.2" height="15.0" fill="rgb(218,228,25)" rx="2" ry="2" />
<text  x="1067.09" y="1935.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="368.5" y="1973" width="0.4" height="15.0" fill="rgb(232,219,49)" rx="2" ry="2" />
<text  x="371.55" y="1983.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="274.7" y="1813" width="0.2" height="15.0" fill="rgb(227,29,14)" rx="2" ry="2" />
<text  x="277.66" y="1823.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (6 samples, 0.10%)</title><rect x="834.0" y="2005" width="1.2" height="15.0" fill="rgb(252,217,54)" rx="2" ry="2" />
<text  x="837.02" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="889.0" y="2005" width="0.6" height="15.0" fill="rgb(233,164,53)" rx="2" ry="2" />
<text  x="891.97" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="497.8" y="1925" width="0.2" height="15.0" fill="rgb(236,173,12)" rx="2" ry="2" />
<text  x="500.81" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="709" width="49.6" height="15.0" fill="rgb(251,25,9)" rx="2" ry="2" />
<text  x="72.49" y="719.5" >[unkn..</text>
</g>
<g >
<title>native_write_msr (20 samples, 0.34%)</title><rect x="13.0" y="1829" width="3.9" height="15.0" fill="rgb(250,137,8)" rx="2" ry="2" />
<text  x="15.96" y="1839.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (2 samples, 0.03%)</title><rect x="70.5" y="37" width="0.4" height="15.0" fill="rgb(212,81,27)" rx="2" ry="2" />
<text  x="73.48" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="499.0" y="1925" width="0.2" height="15.0" fill="rgb(215,136,9)" rx="2" ry="2" />
<text  x="502.00" y="1935.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="612.6" y="1973" width="0.2" height="15.0" fill="rgb(232,125,21)" rx="2" ry="2" />
<text  x="615.65" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="179.0" y="2021" width="0.8" height="15.0" fill="rgb(222,57,37)" rx="2" ry="2" />
<text  x="181.99" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="667.2" y="1973" width="0.2" height="15.0" fill="rgb(236,10,0)" rx="2" ry="2" />
<text  x="670.20" y="1983.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="225.6" y="2021" width="0.2" height="15.0" fill="rgb(251,37,14)" rx="2" ry="2" />
<text  x="228.64" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="582.2" y="1989" width="0.2" height="15.0" fill="rgb(219,192,49)" rx="2" ry="2" />
<text  x="585.21" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="629.5" y="1973" width="0.9" height="15.0" fill="rgb(227,189,23)" rx="2" ry="2" />
<text  x="632.45" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="1156.4" y="2053" width="0.2" height="15.0" fill="rgb(241,185,36)" rx="2" ry="2" />
<text  x="1159.40" y="2063.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="25.2" y="1957" width="0.2" height="15.0" fill="rgb(236,229,28)" rx="2" ry="2" />
<text  x="28.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="469.0" y="2021" width="49.8" height="15.0" fill="rgb(208,30,11)" rx="2" ry="2" />
<text  x="471.95" y="2031.5" >[unkn..</text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="598.6" y="1957" width="0.2" height="15.0" fill="rgb(235,164,51)" rx="2" ry="2" />
<text  x="601.62" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="805" width="49.6" height="15.0" fill="rgb(239,9,36)" rx="2" ry="2" />
<text  x="72.49" y="815.5" >[unkn..</text>
</g>
<g >
<title>sch_direct_xmit (26 samples, 0.44%)</title><rect x="287.7" y="1701" width="5.1" height="15.0" fill="rgb(232,226,16)" rx="2" ry="2" />
<text  x="290.71" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="209.8" y="1909" width="0.2" height="15.0" fill="rgb(243,158,40)" rx="2" ry="2" />
<text  x="212.83" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1156.2" y="2053" width="0.2" height="15.0" fill="rgb(244,185,29)" rx="2" ry="2" />
<text  x="1159.20" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="496.0" y="1909" width="1.0" height="15.0" fill="rgb(208,174,26)" rx="2" ry="2" />
<text  x="499.03" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="666.0" y="2037" width="0.4" height="15.0" fill="rgb(232,18,7)" rx="2" ry="2" />
<text  x="669.02" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1153.6" y="2053" width="0.8" height="15.0" fill="rgb(220,18,22)" rx="2" ry="2" />
<text  x="1156.63" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="645" width="49.6" height="15.0" fill="rgb(225,180,7)" rx="2" ry="2" />
<text  x="72.49" y="655.5" >[unkn..</text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="765.8" y="1989" width="0.2" height="15.0" fill="rgb(220,95,14)" rx="2" ry="2" />
<text  x="768.83" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (32 samples, 0.54%)</title><rect x="758.5" y="1973" width="6.3" height="15.0" fill="rgb(218,201,16)" rx="2" ry="2" />
<text  x="761.52" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (97 samples, 1.62%)</title><rect x="349.8" y="1989" width="19.1" height="15.0" fill="rgb(205,106,8)" rx="2" ry="2" />
<text  x="352.77" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="368.2" y="1957" width="0.3" height="15.0" fill="rgb(229,16,50)" rx="2" ry="2" />
<text  x="371.15" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="817.8" y="1989" width="1.4" height="15.0" fill="rgb(217,56,23)" rx="2" ry="2" />
<text  x="820.82" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (5 samples, 0.08%)</title><rect x="822.0" y="2005" width="1.0" height="15.0" fill="rgb(227,108,14)" rx="2" ry="2" />
<text  x="824.97" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="747.1" y="1909" width="0.2" height="15.0" fill="rgb(208,51,54)" rx="2" ry="2" />
<text  x="750.06" y="1919.5" ></text>
</g>
<g >
<title>dev_queue_xmit (33 samples, 0.55%)</title><rect x="286.3" y="1733" width="6.5" height="15.0" fill="rgb(211,201,33)" rx="2" ry="2" />
<text  x="289.32" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (36 samples, 0.60%)</title><rect x="204.7" y="2005" width="7.1" height="15.0" fill="rgb(225,154,52)" rx="2" ry="2" />
<text  x="207.69" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="604.0" y="1989" width="0.3" height="15.0" fill="rgb(222,61,2)" rx="2" ry="2" />
<text  x="606.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="432.0" y="2005" width="0.2" height="15.0" fill="rgb(241,130,29)" rx="2" ry="2" />
<text  x="434.99" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="466.6" y="2005" width="2.4" height="15.0" fill="rgb(235,106,31)" rx="2" ry="2" />
<text  x="469.58" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="1010.1" y="2005" width="0.2" height="15.0" fill="rgb(218,91,47)" rx="2" ry="2" />
<text  x="1013.13" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (58 samples, 0.97%)</title><rect x="404.5" y="2021" width="11.5" height="15.0" fill="rgb(244,86,17)" rx="2" ry="2" />
<text  x="407.52" y="2031.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1070.4" y="1813" width="0.2" height="15.0" fill="rgb(211,137,38)" rx="2" ry="2" />
<text  x="1073.42" y="1823.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2 samples, 0.03%)</title><rect x="149.9" y="1925" width="0.4" height="15.0" fill="rgb(242,208,10)" rx="2" ry="2" />
<text  x="152.94" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="413.8" y="2005" width="0.8" height="15.0" fill="rgb(238,29,23)" rx="2" ry="2" />
<text  x="416.81" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="133.5" y="1941" width="0.4" height="15.0" fill="rgb(239,26,43)" rx="2" ry="2" />
<text  x="136.53" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="28.6" y="2005" width="0.2" height="15.0" fill="rgb(241,179,51)" rx="2" ry="2" />
<text  x="31.58" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (86 samples, 1.44%)</title><rect x="276.0" y="1797" width="17.0" height="15.0" fill="rgb(214,177,13)" rx="2" ry="2" />
<text  x="279.04" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1170.8" y="2037" width="0.4" height="15.0" fill="rgb(248,100,30)" rx="2" ry="2" />
<text  x="1173.83" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="567.0" y="1973" width="0.2" height="15.0" fill="rgb(211,153,31)" rx="2" ry="2" />
<text  x="569.99" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="836.4" y="1989" width="0.2" height="15.0" fill="rgb(222,66,1)" rx="2" ry="2" />
<text  x="839.40" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1096.1" y="1445" width="0.2" height="15.0" fill="rgb(207,6,42)" rx="2" ry="2" />
<text  x="1099.11" y="1455.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (1 samples, 0.02%)</title><rect x="321.3" y="2005" width="0.2" height="15.0" fill="rgb(211,219,24)" rx="2" ry="2" />
<text  x="324.31" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="608.9" y="2021" width="4.3" height="15.0" fill="rgb(233,115,5)" rx="2" ry="2" />
<text  x="611.89" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (4 samples, 0.07%)</title><rect x="556.7" y="1989" width="0.8" height="15.0" fill="rgb(234,155,31)" rx="2" ry="2" />
<text  x="559.71" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="972.4" y="1957" width="0.2" height="15.0" fill="rgb(242,209,9)" rx="2" ry="2" />
<text  x="975.38" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="197" width="49.6" height="15.0" fill="rgb(228,93,32)" rx="2" ry="2" />
<text  x="72.49" y="207.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1349" width="49.6" height="15.0" fill="rgb(241,204,47)" rx="2" ry="2" />
<text  x="72.49" y="1359.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="595.7" y="1925" width="0.1" height="15.0" fill="rgb(251,65,29)" rx="2" ry="2" />
<text  x="598.65" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (5 samples, 0.08%)</title><rect x="555.7" y="1973" width="1.0" height="15.0" fill="rgb(229,202,25)" rx="2" ry="2" />
<text  x="558.73" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="621.1" y="1941" width="0.2" height="15.0" fill="rgb(246,131,25)" rx="2" ry="2" />
<text  x="624.15" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="87.7" y="37" width="0.6" height="15.0" fill="rgb(238,153,51)" rx="2" ry="2" />
<text  x="90.68" y="47.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="209.0" y="1909" width="0.6" height="15.0" fill="rgb(230,153,24)" rx="2" ry="2" />
<text  x="212.04" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="245" width="49.6" height="15.0" fill="rgb(214,166,15)" rx="2" ry="2" />
<text  x="72.49" y="255.5" >[unkn..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (2 samples, 0.03%)</title><rect x="871.4" y="2037" width="0.4" height="15.0" fill="rgb(207,156,1)" rx="2" ry="2" />
<text  x="874.38" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="201.5" y="1973" width="0.4" height="15.0" fill="rgb(246,68,44)" rx="2" ry="2" />
<text  x="204.53" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="659.3" y="1989" width="0.2" height="15.0" fill="rgb(248,44,48)" rx="2" ry="2" />
<text  x="662.30" y="1999.5" ></text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.05%)</title><rect x="54.1" y="2005" width="0.6" height="15.0" fill="rgb(237,26,26)" rx="2" ry="2" />
<text  x="57.08" y="2015.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="208.8" y="1909" width="0.2" height="15.0" fill="rgb(233,81,1)" rx="2" ry="2" />
<text  x="211.84" y="1919.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="395.0" y="2021" width="0.2" height="15.0" fill="rgb(237,19,36)" rx="2" ry="2" />
<text  x="398.03" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="25.8" y="1973" width="0.2" height="15.0" fill="rgb(235,213,47)" rx="2" ry="2" />
<text  x="28.81" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="878.5" y="1989" width="0.2" height="15.0" fill="rgb(229,195,5)" rx="2" ry="2" />
<text  x="881.50" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1011.3" y="2005" width="0.2" height="15.0" fill="rgb(248,14,0)" rx="2" ry="2" />
<text  x="1014.32" y="2015.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1152.2" y="1989" width="0.2" height="15.0" fill="rgb(238,18,51)" rx="2" ry="2" />
<text  x="1155.25" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="377.2" y="1957" width="0.8" height="15.0" fill="rgb(232,90,45)" rx="2" ry="2" />
<text  x="380.24" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1893" width="50.0" height="15.0" fill="rgb(249,164,50)" rx="2" ry="2" />
<text  x="72.49" y="1903.5" >[unkn..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.42%)</title><rect x="12.4" y="2037" width="4.9" height="15.0" fill="rgb(223,181,44)" rx="2" ry="2" />
<text  x="15.37" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="349.2" y="1973" width="0.6" height="15.0" fill="rgb(240,33,22)" rx="2" ry="2" />
<text  x="352.18" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (2 samples, 0.03%)</title><rect x="423.3" y="1973" width="0.4" height="15.0" fill="rgb(223,120,48)" rx="2" ry="2" />
<text  x="426.30" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1128.5" y="1989" width="0.2" height="15.0" fill="rgb(227,174,53)" rx="2" ry="2" />
<text  x="1131.53" y="1999.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="295.2" y="1813" width="0.2" height="15.0" fill="rgb(208,1,3)" rx="2" ry="2" />
<text  x="298.22" y="1823.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="423.1" y="1957" width="0.2" height="15.0" fill="rgb(254,206,30)" rx="2" ry="2" />
<text  x="426.10" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="348.2" y="1941" width="0.8" height="15.0" fill="rgb(243,208,45)" rx="2" ry="2" />
<text  x="351.19" y="1951.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="638.7" y="1989" width="1.2" height="15.0" fill="rgb(241,31,17)" rx="2" ry="2" />
<text  x="641.74" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="762.3" y="1925" width="0.2" height="15.0" fill="rgb(243,191,24)" rx="2" ry="2" />
<text  x="765.27" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="309.8" y="2021" width="0.2" height="15.0" fill="rgb(219,181,36)" rx="2" ry="2" />
<text  x="312.84" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="467.2" y="1989" width="0.2" height="15.0" fill="rgb(228,173,44)" rx="2" ry="2" />
<text  x="470.18" y="1999.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="199.9" y="1957" width="0.2" height="15.0" fill="rgb(226,112,31)" rx="2" ry="2" />
<text  x="202.95" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (8 samples, 0.13%)</title><rect x="183.5" y="2021" width="1.6" height="15.0" fill="rgb(236,65,45)" rx="2" ry="2" />
<text  x="186.54" y="2031.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1105.2" y="1477" width="0.2" height="15.0" fill="rgb(251,176,53)" rx="2" ry="2" />
<text  x="1108.21" y="1487.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="880.1" y="2037" width="0.2" height="15.0" fill="rgb(241,41,6)" rx="2" ry="2" />
<text  x="883.08" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="159.6" y="1973" width="0.4" height="15.0" fill="rgb(239,78,40)" rx="2" ry="2" />
<text  x="162.62" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="871.8" y="2037" width="0.2" height="15.0" fill="rgb(216,55,24)" rx="2" ry="2" />
<text  x="874.78" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (477 samples, 7.99%)</title><rect x="671.9" y="2005" width="94.3" height="15.0" fill="rgb(237,2,25)" rx="2" ry="2" />
<text  x="674.95" y="2015.5" >facebook::m..</text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="764.1" y="1925" width="0.2" height="15.0" fill="rgb(241,72,17)" rx="2" ry="2" />
<text  x="767.05" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="517" width="49.6" height="15.0" fill="rgb(223,136,49)" rx="2" ry="2" />
<text  x="72.49" y="527.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="551.4" y="1973" width="0.2" height="15.0" fill="rgb(234,7,28)" rx="2" ry="2" />
<text  x="554.38" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="394.8" y="2021" width="0.2" height="15.0" fill="rgb(232,187,16)" rx="2" ry="2" />
<text  x="397.83" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1365" width="49.6" height="15.0" fill="rgb(208,86,36)" rx="2" ry="2" />
<text  x="72.49" y="1375.5" >[unkn..</text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="1147.7" y="1877" width="0.2" height="15.0" fill="rgb(222,97,54)" rx="2" ry="2" />
<text  x="1150.70" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="73.2" y="37" width="0.2" height="15.0" fill="rgb(243,64,17)" rx="2" ry="2" />
<text  x="76.25" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (9 samples, 0.15%)</title><rect x="99.1" y="37" width="1.8" height="15.0" fill="rgb(221,140,15)" rx="2" ry="2" />
<text  x="102.14" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (96 samples, 1.61%)</title><rect x="679.1" y="1957" width="18.9" height="15.0" fill="rgb(226,218,11)" rx="2" ry="2" />
<text  x="682.06" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (2 samples, 0.03%)</title><rect x="1143.7" y="1989" width="0.4" height="15.0" fill="rgb(218,94,21)" rx="2" ry="2" />
<text  x="1146.75" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="547.6" y="1989" width="0.2" height="15.0" fill="rgb(245,170,54)" rx="2" ry="2" />
<text  x="550.62" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (71 samples, 1.19%)</title><rect x="1093.5" y="1861" width="14.1" height="15.0" fill="rgb(240,23,44)" rx="2" ry="2" />
<text  x="1096.54" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (21 samples, 0.35%)</title><rect x="1125.4" y="2037" width="4.1" height="15.0" fill="rgb(206,215,37)" rx="2" ry="2" />
<text  x="1128.37" y="2047.5" ></text>
</g>
<g >
<title>mcrouter (5,933 samples, 99.38%)</title><rect x="17.3" y="2069" width="1172.7" height="15.0" fill="rgb(209,193,14)" rx="2" ry="2" />
<text  x="20.31" y="2079.5" >mcrouter</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(217,23,15)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (9 samples, 0.15%)</title><rect x="148.2" y="1925" width="1.7" height="15.0" fill="rgb(215,215,42)" rx="2" ry="2" />
<text  x="151.16" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="400.8" y="1877" width="0.2" height="15.0" fill="rgb(228,54,33)" rx="2" ry="2" />
<text  x="403.76" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (37 samples, 0.62%)</title><rect x="279.0" y="1605" width="7.3" height="15.0" fill="rgb(215,198,36)" rx="2" ry="2" />
<text  x="282.01" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (19 samples, 0.32%)</title><rect x="658.5" y="2037" width="3.8" height="15.0" fill="rgb(254,119,8)" rx="2" ry="2" />
<text  x="661.51" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="857.0" y="1973" width="0.1" height="15.0" fill="rgb(207,225,2)" rx="2" ry="2" />
<text  x="859.95" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="437" width="49.6" height="15.0" fill="rgb(229,28,19)" rx="2" ry="2" />
<text  x="72.49" y="447.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="1128.1" y="1989" width="0.2" height="15.0" fill="rgb(236,227,6)" rx="2" ry="2" />
<text  x="1131.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="448.8" y="2005" width="4.3" height="15.0" fill="rgb(251,162,38)" rx="2" ry="2" />
<text  x="451.79" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (19 samples, 0.32%)</title><rect x="89.3" y="53" width="3.7" height="15.0" fill="rgb(217,85,16)" rx="2" ry="2" />
<text  x="92.26" y="63.5" ></text>
</g>
<g >
<title>evmap_io_active_ (5 samples, 0.08%)</title><rect x="1119.6" y="2053" width="1.0" height="15.0" fill="rgb(223,184,25)" rx="2" ry="2" />
<text  x="1122.63" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="402.1" y="1941" width="0.6" height="15.0" fill="rgb(245,187,17)" rx="2" ry="2" />
<text  x="405.15" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (6 samples, 0.10%)</title><rect x="857.5" y="2005" width="1.2" height="15.0" fill="rgb(219,89,27)" rx="2" ry="2" />
<text  x="860.54" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (942 samples, 15.78%)</title><rect x="666.6" y="2021" width="186.2" height="15.0" fill="rgb(208,121,47)" rx="2" ry="2" />
<text  x="669.61" y="2031.5" >[unknown]</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="689.1" y="1893" width="0.2" height="15.0" fill="rgb(229,180,52)" rx="2" ry="2" />
<text  x="692.14" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (8 samples, 0.13%)</title><rect x="432.6" y="2005" width="1.6" height="15.0" fill="rgb(246,97,37)" rx="2" ry="2" />
<text  x="435.59" y="2015.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="69.1" y="2005" width="0.2" height="15.0" fill="rgb(229,58,51)" rx="2" ry="2" />
<text  x="72.10" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="619.4" y="1957" width="0.4" height="15.0" fill="rgb(254,97,31)" rx="2" ry="2" />
<text  x="622.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="273.3" y="1845" width="0.2" height="15.0" fill="rgb(238,123,2)" rx="2" ry="2" />
<text  x="276.28" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (8 samples, 0.13%)</title><rect x="339.9" y="1973" width="1.6" height="15.0" fill="rgb(248,68,16)" rx="2" ry="2" />
<text  x="342.89" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="173.3" y="2005" width="0.2" height="15.0" fill="rgb(223,229,50)" rx="2" ry="2" />
<text  x="176.26" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="93.0" y="37" width="1.4" height="15.0" fill="rgb(248,218,45)" rx="2" ry="2" />
<text  x="96.02" y="47.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (10 samples, 0.17%)</title><rect x="290.5" y="1653" width="1.9" height="15.0" fill="rgb(226,225,49)" rx="2" ry="2" />
<text  x="293.47" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="399.2" y="1845" width="0.4" height="15.0" fill="rgb(244,205,24)" rx="2" ry="2" />
<text  x="402.18" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="1110.7" y="1941" width="1.0" height="15.0" fill="rgb(209,212,40)" rx="2" ry="2" />
<text  x="1113.74" y="1951.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(229,21,48)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="284.5" y="1429" width="0.2" height="15.0" fill="rgb(206,124,20)" rx="2" ry="2" />
<text  x="287.54" y="1439.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12 samples, 0.20%)</title><rect x="287.9" y="1685" width="2.4" height="15.0" fill="rgb(241,8,46)" rx="2" ry="2" />
<text  x="290.90" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (3 samples, 0.05%)</title><rect x="536.6" y="2037" width="0.5" height="15.0" fill="rgb(234,160,11)" rx="2" ry="2" />
<text  x="539.55" y="2047.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.08%)</title><rect x="226.0" y="2021" width="1.0" height="15.0" fill="rgb(224,61,45)" rx="2" ry="2" />
<text  x="229.04" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="428.2" y="2037" width="0.2" height="15.0" fill="rgb(254,42,22)" rx="2" ry="2" />
<text  x="431.24" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="300.8" y="1909" width="0.9" height="15.0" fill="rgb(219,40,15)" rx="2" ry="2" />
<text  x="303.75" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="970.8" y="1957" width="0.8" height="15.0" fill="rgb(246,108,12)" rx="2" ry="2" />
<text  x="973.80" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="272.7" y="1813" width="0.2" height="15.0" fill="rgb(220,170,47)" rx="2" ry="2" />
<text  x="275.68" y="1823.5" ></text>
</g>
<g >
<title>jump_fcontext (79 samples, 1.32%)</title><rect x="975.0" y="2005" width="15.6" height="15.0" fill="rgb(222,50,24)" rx="2" ry="2" />
<text  x="977.95" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (2 samples, 0.03%)</title><rect x="197.8" y="1925" width="0.4" height="15.0" fill="rgb(246,209,35)" rx="2" ry="2" />
<text  x="200.77" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (39 samples, 0.65%)</title><rect x="458.9" y="2005" width="7.7" height="15.0" fill="rgb(219,85,12)" rx="2" ry="2" />
<text  x="461.87" y="2015.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1065.5" y="1925" width="0.2" height="15.0" fill="rgb(247,188,25)" rx="2" ry="2" />
<text  x="1068.48" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (17 samples, 0.28%)</title><rect x="1126.0" y="2021" width="3.3" height="15.0" fill="rgb(208,96,28)" rx="2" ry="2" />
<text  x="1128.96" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="686.6" y="1909" width="0.2" height="15.0" fill="rgb(222,155,4)" rx="2" ry="2" />
<text  x="689.57" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="764.6" y="1957" width="0.2" height="15.0" fill="rgb(252,202,23)" rx="2" ry="2" />
<text  x="767.65" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="749.0" y="1941" width="0.2" height="15.0" fill="rgb(216,90,6)" rx="2" ry="2" />
<text  x="752.03" y="1951.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="497.0" y="1861" width="0.8" height="15.0" fill="rgb(248,124,53)" rx="2" ry="2" />
<text  x="500.02" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="132.0" y="1941" width="0.2" height="15.0" fill="rgb(248,129,32)" rx="2" ry="2" />
<text  x="134.95" y="1951.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="10.4" y="2005" width="0.8" height="15.0" fill="rgb(222,201,4)" rx="2" ry="2" />
<text  x="13.40" y="2015.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (101 samples, 1.69%)</title><rect x="1073.2" y="1925" width="19.9" height="15.0" fill="rgb(205,46,53)" rx="2" ry="2" />
<text  x="1076.19" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="26.4" y="1973" width="0.2" height="15.0" fill="rgb(236,78,31)" rx="2" ry="2" />
<text  x="29.41" y="1983.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="645.5" y="2005" width="0.6" height="15.0" fill="rgb(214,181,13)" rx="2" ry="2" />
<text  x="648.46" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="118.3" y="69" width="0.2" height="15.0" fill="rgb(211,107,10)" rx="2" ry="2" />
<text  x="121.31" y="79.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="340.7" y="1957" width="0.2" height="15.0" fill="rgb(226,142,5)" rx="2" ry="2" />
<text  x="343.68" y="1967.5" ></text>
</g>
<g >
<title>tcp_recvmsg (425 samples, 7.12%)</title><rect x="1026.5" y="1941" width="84.0" height="15.0" fill="rgb(246,144,46)" rx="2" ry="2" />
<text  x="1029.54" y="1951.5" >tcp_recvmsg</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="595.5" y="1941" width="0.3" height="15.0" fill="rgb(243,149,28)" rx="2" ry="2" />
<text  x="598.45" y="1951.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="88.7" y="37" width="0.6" height="15.0" fill="rgb(236,104,9)" rx="2" ry="2" />
<text  x="91.67" y="47.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="373.7" y="1989" width="0.2" height="15.0" fill="rgb(215,18,50)" rx="2" ry="2" />
<text  x="376.69" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="400.4" y="1829" width="0.4" height="15.0" fill="rgb(216,83,7)" rx="2" ry="2" />
<text  x="403.37" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="818.8" y="1957" width="0.2" height="15.0" fill="rgb(245,56,26)" rx="2" ry="2" />
<text  x="821.80" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="395.6" y="1893" width="0.4" height="15.0" fill="rgb(225,218,9)" rx="2" ry="2" />
<text  x="398.62" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="726.9" y="1861" width="0.6" height="15.0" fill="rgb(254,90,17)" rx="2" ry="2" />
<text  x="729.89" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (71 samples, 1.19%)</title><rect x="1093.5" y="1909" width="14.1" height="15.0" fill="rgb(225,194,0)" rx="2" ry="2" />
<text  x="1096.54" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="1104.4" y="1413" width="0.8" height="15.0" fill="rgb(229,210,51)" rx="2" ry="2" />
<text  x="1107.42" y="1423.5" ></text>
</g>
<g >
<title>tcp_sendmsg (237 samples, 3.97%)</title><rect x="253.9" y="1909" width="46.9" height="15.0" fill="rgb(213,178,15)" rx="2" ry="2" />
<text  x="256.91" y="1919.5" >tcp_..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (11 samples, 0.18%)</title><rect x="687.2" y="1909" width="2.1" height="15.0" fill="rgb(229,51,6)" rx="2" ry="2" />
<text  x="690.17" y="1919.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="497.0" y="1797" width="0.8" height="15.0" fill="rgb(243,210,36)" rx="2" ry="2" />
<text  x="500.02" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="373" width="49.6" height="15.0" fill="rgb(238,171,38)" rx="2" ry="2" />
<text  x="72.49" y="383.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (21 samples, 0.35%)</title><rect x="893.3" y="2005" width="4.2" height="15.0" fill="rgb(245,195,9)" rx="2" ry="2" />
<text  x="896.32" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="379.4" y="1957" width="0.2" height="15.0" fill="rgb(254,85,24)" rx="2" ry="2" />
<text  x="382.42" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (7 samples, 0.12%)</title><rect x="1016.9" y="2037" width="1.3" height="15.0" fill="rgb(231,35,54)" rx="2" ry="2" />
<text  x="1019.85" y="2047.5" ></text>
</g>
<g >
<title>mod_timer (4 samples, 0.07%)</title><rect x="296.4" y="1765" width="0.8" height="15.0" fill="rgb(207,215,38)" rx="2" ry="2" />
<text  x="299.40" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (13 samples, 0.22%)</title><rect x="346.4" y="1973" width="2.6" height="15.0" fill="rgb(220,169,38)" rx="2" ry="2" />
<text  x="349.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="168.9" y="1989" width="3.8" height="15.0" fill="rgb(224,119,54)" rx="2" ry="2" />
<text  x="171.91" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="1129.5" y="2053" width="0.4" height="15.0" fill="rgb(223,115,41)" rx="2" ry="2" />
<text  x="1132.52" y="2063.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="640.3" y="2005" width="0.2" height="15.0" fill="rgb(226,182,54)" rx="2" ry="2" />
<text  x="643.32" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="11.4" y="1957" width="1.0" height="15.0" fill="rgb(239,185,41)" rx="2" ry="2" />
<text  x="14.38" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1147.7" y="1973" width="0.2" height="15.0" fill="rgb(230,220,45)" rx="2" ry="2" />
<text  x="1150.70" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="1095.7" y="1461" width="0.6" height="15.0" fill="rgb(243,216,4)" rx="2" ry="2" />
<text  x="1098.72" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="606.1" y="1909" width="0.4" height="15.0" fill="rgb(214,12,38)" rx="2" ry="2" />
<text  x="609.13" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (22 samples, 0.37%)</title><rect x="572.5" y="1973" width="4.4" height="15.0" fill="rgb(223,95,16)" rx="2" ry="2" />
<text  x="575.53" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="417.2" y="1941" width="0.4" height="15.0" fill="rgb(252,76,12)" rx="2" ry="2" />
<text  x="420.17" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="743.9" y="1893" width="0.2" height="15.0" fill="rgb(221,172,11)" rx="2" ry="2" />
<text  x="746.89" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (6 samples, 0.10%)</title><rect x="596.0" y="1941" width="1.2" height="15.0" fill="rgb(212,160,19)" rx="2" ry="2" />
<text  x="599.05" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="25.0" y="1925" width="0.2" height="15.0" fill="rgb(218,18,0)" rx="2" ry="2" />
<text  x="28.02" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="740.5" y="1877" width="0.2" height="15.0" fill="rgb(251,48,33)" rx="2" ry="2" />
<text  x="743.53" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1007.0" y="2005" width="0.2" height="15.0" fill="rgb(219,134,27)" rx="2" ry="2" />
<text  x="1009.97" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="741.9" y="1877" width="0.4" height="15.0" fill="rgb(216,221,28)" rx="2" ry="2" />
<text  x="744.92" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (23 samples, 0.39%)</title><rect x="858.7" y="2005" width="4.6" height="15.0" fill="rgb(231,214,33)" rx="2" ry="2" />
<text  x="861.73" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (17 samples, 0.28%)</title><rect x="868.0" y="2037" width="3.4" height="15.0" fill="rgb(220,156,18)" rx="2" ry="2" />
<text  x="871.02" y="2047.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (69 samples, 1.16%)</title><rect x="1093.9" y="1749" width="13.7" height="15.0" fill="rgb(252,96,8)" rx="2" ry="2" />
<text  x="1096.94" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (5 samples, 0.08%)</title><rect x="210.2" y="1909" width="1.0" height="15.0" fill="rgb(253,149,27)" rx="2" ry="2" />
<text  x="213.22" y="1919.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="1024.6" y="2005" width="0.2" height="15.0" fill="rgb(234,150,5)" rx="2" ry="2" />
<text  x="1027.56" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1845" width="49.8" height="15.0" fill="rgb(239,49,51)" rx="2" ry="2" />
<text  x="72.49" y="1855.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="821" width="49.6" height="15.0" fill="rgb(249,196,37)" rx="2" ry="2" />
<text  x="72.49" y="831.5" >[unkn..</text>
</g>
<g >
<title>event_base_loop@plt (1 samples, 0.02%)</title><rect x="205.5" y="1957" width="0.2" height="15.0" fill="rgb(227,71,47)" rx="2" ry="2" />
<text  x="208.48" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (2 samples, 0.03%)</title><rect x="421.9" y="1925" width="0.4" height="15.0" fill="rgb(208,50,43)" rx="2" ry="2" />
<text  x="424.91" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="863.3" y="2005" width="0.2" height="15.0" fill="rgb(227,18,48)" rx="2" ry="2" />
<text  x="866.28" y="2015.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.4" y="1845" width="0.8" height="15.0" fill="rgb(222,127,29)" rx="2" ry="2" />
<text  x="14.38" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="402.9" y="2021" width="0.2" height="15.0" fill="rgb(230,5,34)" rx="2" ry="2" />
<text  x="405.94" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="605.5" y="1941" width="0.2" height="15.0" fill="rgb(242,8,18)" rx="2" ry="2" />
<text  x="608.53" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="106.7" y="37" width="0.9" height="15.0" fill="rgb(205,12,42)" rx="2" ry="2" />
<text  x="109.65" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="115.9" y="53" width="0.2" height="15.0" fill="rgb(234,181,5)" rx="2" ry="2" />
<text  x="118.94" y="63.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="1094.1" y="1573" width="0.2" height="15.0" fill="rgb(210,170,20)" rx="2" ry="2" />
<text  x="1097.14" y="1583.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (10 samples, 0.17%)</title><rect x="331.2" y="1925" width="2.0" height="15.0" fill="rgb(250,2,40)" rx="2" ry="2" />
<text  x="334.19" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.4" y="1877" width="0.8" height="15.0" fill="rgb(212,118,0)" rx="2" ry="2" />
<text  x="14.38" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="536.4" y="2021" width="0.2" height="15.0" fill="rgb(205,19,44)" rx="2" ry="2" />
<text  x="539.36" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="761.1" y="1941" width="1.4" height="15.0" fill="rgb(218,19,29)" rx="2" ry="2" />
<text  x="764.09" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (47 samples, 0.79%)</title><rect x="326.8" y="1973" width="9.3" height="15.0" fill="rgb(214,223,36)" rx="2" ry="2" />
<text  x="329.84" y="1983.5" ></text>
</g>
<g >
<title>std::current_exception (2 samples, 0.03%)</title><rect x="748.2" y="1909" width="0.4" height="15.0" fill="rgb(225,151,53)" rx="2" ry="2" />
<text  x="751.24" y="1919.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="279.4" y="1333" width="0.2" height="15.0" fill="rgb(234,216,25)" rx="2" ry="2" />
<text  x="282.40" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="981" width="49.6" height="15.0" fill="rgb(236,207,38)" rx="2" ry="2" />
<text  x="72.49" y="991.5" >[unkn..</text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="275.8" y="1797" width="0.2" height="15.0" fill="rgb(210,93,48)" rx="2" ry="2" />
<text  x="278.85" y="1807.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1047.3" y="1829" width="0.2" height="15.0" fill="rgb(214,52,43)" rx="2" ry="2" />
<text  x="1050.29" y="1839.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="300.4" y="1877" width="0.4" height="15.0" fill="rgb(223,159,4)" rx="2" ry="2" />
<text  x="303.36" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="347.2" y="1957" width="0.6" height="15.0" fill="rgb(244,181,31)" rx="2" ry="2" />
<text  x="350.20" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1128.1" y="1973" width="0.2" height="15.0" fill="rgb(208,176,28)" rx="2" ry="2" />
<text  x="1131.13" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (36 samples, 0.60%)</title><rect x="279.0" y="1573" width="7.1" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="282.01" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (2 samples, 0.03%)</title><rect x="470.5" y="1989" width="0.4" height="15.0" fill="rgb(214,186,18)" rx="2" ry="2" />
<text  x="473.54" y="1999.5" ></text>
</g>
<g >
<title>skb_release_head_state (78 samples, 1.31%)</title><rect x="1047.5" y="1893" width="15.4" height="15.0" fill="rgb(212,50,23)" rx="2" ry="2" />
<text  x="1050.49" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="709.3" y="1877" width="0.2" height="15.0" fill="rgb(228,195,22)" rx="2" ry="2" />
<text  x="712.30" y="1887.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="748.0" y="1909" width="0.2" height="15.0" fill="rgb(228,61,52)" rx="2" ry="2" />
<text  x="751.04" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="103.9" y="37" width="1.4" height="15.0" fill="rgb(231,133,19)" rx="2" ry="2" />
<text  x="106.89" y="47.5" ></text>
</g>
<g >
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="293.2" y="1797" width="0.6" height="15.0" fill="rgb(224,126,23)" rx="2" ry="2" />
<text  x="296.24" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (5 samples, 0.08%)</title><rect x="393.8" y="1989" width="1.0" height="15.0" fill="rgb(243,20,22)" rx="2" ry="2" />
<text  x="396.85" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="117" width="49.6" height="15.0" fill="rgb(244,76,4)" rx="2" ry="2" />
<text  x="72.49" y="127.5" >[unkn..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="745.5" y="1893" width="0.8" height="15.0" fill="rgb(230,17,30)" rx="2" ry="2" />
<text  x="748.47" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1029" width="49.6" height="15.0" fill="rgb(221,119,53)" rx="2" ry="2" />
<text  x="72.49" y="1039.5" >[unkn..</text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="301.1" y="1877" width="0.6" height="15.0" fill="rgb(215,39,12)" rx="2" ry="2" />
<text  x="304.15" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="204.7" y="1973" width="0.2" height="15.0" fill="rgb(212,141,53)" rx="2" ry="2" />
<text  x="207.69" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (79 samples, 1.32%)</title><rect x="837.0" y="1989" width="15.6" height="15.0" fill="rgb(252,122,41)" rx="2" ry="2" />
<text  x="839.99" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="399.0" y="1861" width="0.6" height="15.0" fill="rgb(207,136,37)" rx="2" ry="2" />
<text  x="401.98" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="666.6" y="2005" width="0.8" height="15.0" fill="rgb(208,119,47)" rx="2" ry="2" />
<text  x="669.61" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (3 samples, 0.05%)</title><rect x="686.0" y="1909" width="0.6" height="15.0" fill="rgb(230,141,11)" rx="2" ry="2" />
<text  x="688.98" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (3 samples, 0.05%)</title><rect x="570.7" y="1989" width="0.6" height="15.0" fill="rgb(212,124,53)" rx="2" ry="2" />
<text  x="573.75" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="418.2" y="2005" width="4.3" height="15.0" fill="rgb(216,1,13)" rx="2" ry="2" />
<text  x="421.16" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (2 samples, 0.03%)</title><rect x="1166.5" y="2053" width="0.4" height="15.0" fill="rgb(244,163,36)" rx="2" ry="2" />
<text  x="1169.48" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="918.2" y="1957" width="0.2" height="15.0" fill="rgb(243,160,14)" rx="2" ry="2" />
<text  x="921.22" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="744.5" y="1893" width="1.0" height="15.0" fill="rgb(214,228,44)" rx="2" ry="2" />
<text  x="747.49" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (8 samples, 0.13%)</title><rect x="209.6" y="1941" width="1.6" height="15.0" fill="rgb(220,187,44)" rx="2" ry="2" />
<text  x="212.63" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="565" width="49.6" height="15.0" fill="rgb(237,39,49)" rx="2" ry="2" />
<text  x="72.49" y="575.5" >[unkn..</text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (5 samples, 0.08%)</title><rect x="333.8" y="1925" width="0.9" height="15.0" fill="rgb(245,193,39)" rx="2" ry="2" />
<text  x="336.76" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="172.9" y="2005" width="0.4" height="15.0" fill="rgb(242,217,43)" rx="2" ry="2" />
<text  x="175.87" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="130.8" y="1925" width="0.2" height="15.0" fill="rgb(207,147,35)" rx="2" ry="2" />
<text  x="133.77" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="131.6" y="1925" width="0.4" height="15.0" fill="rgb(221,131,4)" rx="2" ry="2" />
<text  x="134.56" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1205" width="49.6" height="15.0" fill="rgb(218,140,29)" rx="2" ry="2" />
<text  x="72.49" y="1215.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="750.0" y="1909" width="1.2" height="15.0" fill="rgb(250,10,49)" rx="2" ry="2" />
<text  x="753.02" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="856.6" y="2005" width="0.2" height="15.0" fill="rgb(205,5,30)" rx="2" ry="2" />
<text  x="859.56" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (45 samples, 0.75%)</title><rect x="1096.3" y="1477" width="8.9" height="15.0" fill="rgb(250,34,2)" rx="2" ry="2" />
<text  x="1099.31" y="1487.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (36 samples, 0.60%)</title><rect x="505.9" y="1973" width="7.1" height="15.0" fill="rgb(245,156,34)" rx="2" ry="2" />
<text  x="508.92" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (6 samples, 0.10%)</title><rect x="129.8" y="1941" width="1.2" height="15.0" fill="rgb(214,116,35)" rx="2" ry="2" />
<text  x="132.78" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (384 samples, 6.43%)</title><rect x="318.9" y="2021" width="75.9" height="15.0" fill="rgb(253,116,23)" rx="2" ry="2" />
<text  x="321.93" y="2031.5" >folly::f..</text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="709.9" y="1909" width="0.4" height="15.0" fill="rgb(223,7,12)" rx="2" ry="2" />
<text  x="712.90" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (36 samples, 0.60%)</title><rect x="279.0" y="1525" width="7.1" height="15.0" fill="rgb(209,31,5)" rx="2" ry="2" />
<text  x="282.01" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="149" width="49.6" height="15.0" fill="rgb(227,218,12)" rx="2" ry="2" />
<text  x="72.49" y="159.5" >[unkn..</text>
</g>
<g >
<title>folly::Function&lt;void  (16 samples, 0.27%)</title><rect x="707.1" y="1925" width="3.2" height="15.0" fill="rgb(236,224,24)" rx="2" ry="2" />
<text  x="710.13" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc (6 samples, 0.10%)</title><rect x="251.5" y="1893" width="1.2" height="15.0" fill="rgb(234,103,38)" rx="2" ry="2" />
<text  x="254.53" y="1903.5" ></text>
</g>
<g >
<title>dst_release (3 samples, 0.05%)</title><rect x="1038.2" y="1893" width="0.6" height="15.0" fill="rgb(245,57,15)" rx="2" ry="2" />
<text  x="1041.20" y="1903.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (7 samples, 0.12%)</title><rect x="295.8" y="1829" width="1.4" height="15.0" fill="rgb(217,177,3)" rx="2" ry="2" />
<text  x="298.81" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="863.5" y="2005" width="0.2" height="15.0" fill="rgb(245,113,40)" rx="2" ry="2" />
<text  x="866.47" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (18 samples, 0.30%)</title><rect x="604.3" y="1989" width="3.6" height="15.0" fill="rgb(243,61,42)" rx="2" ry="2" />
<text  x="607.35" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="117.1" y="69" width="0.2" height="15.0" fill="rgb(230,165,1)" rx="2" ry="2" />
<text  x="120.13" y="79.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="1114.7" y="2053" width="0.8" height="15.0" fill="rgb(247,133,34)" rx="2" ry="2" />
<text  x="1117.69" y="2063.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (62 samples, 1.04%)</title><rect x="17.3" y="2053" width="12.3" height="15.0" fill="rgb(221,164,46)" rx="2" ry="2" />
<text  x="20.31" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="1130.3" y="2053" width="0.4" height="15.0" fill="rgb(225,103,45)" rx="2" ry="2" />
<text  x="1133.31" y="2063.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="283.9" y="1381" width="0.6" height="15.0" fill="rgb(225,117,18)" rx="2" ry="2" />
<text  x="286.95" y="1391.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="825.3" y="1989" width="0.2" height="15.0" fill="rgb(242,122,29)" rx="2" ry="2" />
<text  x="828.33" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="607.5" y="1941" width="0.4" height="15.0" fill="rgb(215,107,12)" rx="2" ry="2" />
<text  x="610.51" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="634.0" y="1973" width="0.4" height="15.0" fill="rgb(254,107,26)" rx="2" ry="2" />
<text  x="637.00" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="539.5" y="2037" width="0.2" height="15.0" fill="rgb(251,25,21)" rx="2" ry="2" />
<text  x="542.52" y="2047.5" ></text>
</g>
<g >
<title>__skb_clone (6 samples, 0.10%)</title><rect x="293.8" y="1797" width="1.2" height="15.0" fill="rgb(253,38,39)" rx="2" ry="2" />
<text  x="296.83" y="1807.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1063.5" y="1909" width="0.2" height="15.0" fill="rgb(245,90,6)" rx="2" ry="2" />
<text  x="1066.50" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="170.5" y="1941" width="0.4" height="15.0" fill="rgb(237,187,10)" rx="2" ry="2" />
<text  x="173.50" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (8 samples, 0.13%)</title><rect x="534.4" y="2037" width="1.6" height="15.0" fill="rgb(253,17,10)" rx="2" ry="2" />
<text  x="537.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1685" width="49.8" height="15.0" fill="rgb(241,147,21)" rx="2" ry="2" />
<text  x="72.49" y="1695.5" >[unkn..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="599.6" y="1973" width="0.2" height="15.0" fill="rgb(214,181,53)" rx="2" ry="2" />
<text  x="602.60" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="115.5" y="37" width="0.4" height="15.0" fill="rgb(244,111,52)" rx="2" ry="2" />
<text  x="118.55" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="464.6" y="1973" width="1.4" height="15.0" fill="rgb(222,36,40)" rx="2" ry="2" />
<text  x="467.61" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="172.7" y="1973" width="0.2" height="15.0" fill="rgb(239,226,30)" rx="2" ry="2" />
<text  x="175.67" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1093.1" y="1925" width="0.2" height="15.0" fill="rgb(245,53,8)" rx="2" ry="2" />
<text  x="1096.15" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="1128.1" y="1941" width="0.2" height="15.0" fill="rgb(206,23,39)" rx="2" ry="2" />
<text  x="1131.13" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (13 samples, 0.22%)</title><rect x="111.8" y="37" width="2.6" height="15.0" fill="rgb(233,67,25)" rx="2" ry="2" />
<text  x="114.79" y="47.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="497.0" y="1845" width="0.8" height="15.0" fill="rgb(227,49,20)" rx="2" ry="2" />
<text  x="500.02" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="22.8" y="1957" width="0.4" height="15.0" fill="rgb(218,68,32)" rx="2" ry="2" />
<text  x="25.85" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="229.2" y="1973" width="0.2" height="15.0" fill="rgb(207,224,54)" rx="2" ry="2" />
<text  x="232.20" y="1983.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="1094.3" y="1525" width="0.2" height="15.0" fill="rgb(215,86,5)" rx="2" ry="2" />
<text  x="1097.34" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (67 samples, 1.12%)</title><rect x="1094.1" y="1589" width="13.3" height="15.0" fill="rgb(211,5,48)" rx="2" ry="2" />
<text  x="1097.14" y="1599.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (14 samples, 0.23%)</title><rect x="950.6" y="1893" width="2.8" height="15.0" fill="rgb(242,201,6)" rx="2" ry="2" />
<text  x="953.64" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (4 samples, 0.07%)</title><rect x="548.0" y="1989" width="0.8" height="15.0" fill="rgb(233,22,36)" rx="2" ry="2" />
<text  x="551.02" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="209.0" y="1893" width="0.2" height="15.0" fill="rgb(242,204,21)" rx="2" ry="2" />
<text  x="212.04" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (11 samples, 0.18%)</title><rect x="395.4" y="1925" width="2.2" height="15.0" fill="rgb(237,50,4)" rx="2" ry="2" />
<text  x="398.43" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="617.0" y="1973" width="0.2" height="15.0" fill="rgb(240,163,22)" rx="2" ry="2" />
<text  x="620.00" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (7 samples, 0.12%)</title><rect x="467.6" y="1973" width="1.4" height="15.0" fill="rgb(246,214,8)" rx="2" ry="2" />
<text  x="470.57" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="601.8" y="2005" width="0.6" height="15.0" fill="rgb(220,104,31)" rx="2" ry="2" />
<text  x="604.78" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (3 samples, 0.05%)</title><rect x="654.9" y="2005" width="0.6" height="15.0" fill="rgb(209,124,4)" rx="2" ry="2" />
<text  x="657.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="95.0" y="37" width="0.2" height="15.0" fill="rgb(206,59,35)" rx="2" ry="2" />
<text  x="97.99" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (15 samples, 0.25%)</title><rect x="419.5" y="1957" width="3.0" height="15.0" fill="rgb(222,38,44)" rx="2" ry="2" />
<text  x="422.54" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="179.2" y="2005" width="0.6" height="15.0" fill="rgb(226,49,48)" rx="2" ry="2" />
<text  x="182.19" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="156.7" y="1957" width="0.6" height="15.0" fill="rgb(238,125,40)" rx="2" ry="2" />
<text  x="159.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onWriteQuiescence (1 samples, 0.02%)</title><rect x="547.4" y="1989" width="0.2" height="15.0" fill="rgb(219,149,36)" rx="2" ry="2" />
<text  x="550.42" y="1999.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1115.5" y="2053" width="0.2" height="15.0" fill="rgb(241,110,3)" rx="2" ry="2" />
<text  x="1118.48" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="196.6" y="1973" width="0.4" height="15.0" fill="rgb(253,157,14)" rx="2" ry="2" />
<text  x="199.59" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (41 samples, 0.69%)</title><rect x="504.9" y="1989" width="8.1" height="15.0" fill="rgb(241,2,9)" rx="2" ry="2" />
<text  x="507.93" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="334.7" y="1957" width="1.4" height="15.0" fill="rgb(246,184,18)" rx="2" ry="2" />
<text  x="337.75" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (39 samples, 0.65%)</title><rect x="383.0" y="1989" width="7.7" height="15.0" fill="rgb(229,142,4)" rx="2" ry="2" />
<text  x="385.97" y="1999.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="516.6" y="2005" width="0.2" height="15.0" fill="rgb(218,85,16)" rx="2" ry="2" />
<text  x="519.59" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="739.7" y="1861" width="0.4" height="15.0" fill="rgb(208,140,19)" rx="2" ry="2" />
<text  x="742.74" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(237,187,22)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="966.6" y="1925" width="0.2" height="15.0" fill="rgb(224,108,24)" rx="2" ry="2" />
<text  x="969.65" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="647.4" y="2037" width="0.6" height="15.0" fill="rgb(248,107,18)" rx="2" ry="2" />
<text  x="650.44" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (9 samples, 0.15%)</title><rect x="23.8" y="1973" width="1.8" height="15.0" fill="rgb(226,82,53)" rx="2" ry="2" />
<text  x="26.84" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (1 samples, 0.02%)</title><rect x="213.2" y="2021" width="0.2" height="15.0" fill="rgb(251,187,30)" rx="2" ry="2" />
<text  x="216.19" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="419.1" y="1925" width="0.4" height="15.0" fill="rgb(205,91,16)" rx="2" ry="2" />
<text  x="422.15" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (2 samples, 0.03%)</title><rect x="1120.6" y="2053" width="0.4" height="15.0" fill="rgb(231,211,37)" rx="2" ry="2" />
<text  x="1123.62" y="2063.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (443 samples, 7.42%)</title><rect x="1024.8" y="1989" width="87.5" height="15.0" fill="rgb(224,15,31)" rx="2" ry="2" />
<text  x="1027.76" y="1999.5" >SYSC_recvf..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="154.9" y="1941" width="0.4" height="15.0" fill="rgb(229,12,3)" rx="2" ry="2" />
<text  x="157.88" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="118.7" y="53" width="0.4" height="15.0" fill="rgb(239,92,44)" rx="2" ry="2" />
<text  x="121.71" y="63.5" ></text>
</g>
<g >
<title>skb_clone (6 samples, 0.10%)</title><rect x="293.8" y="1813" width="1.2" height="15.0" fill="rgb(229,150,20)" rx="2" ry="2" />
<text  x="296.83" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="618.4" y="1973" width="0.4" height="15.0" fill="rgb(224,125,40)" rx="2" ry="2" />
<text  x="621.38" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (13 samples, 0.22%)</title><rect x="471.1" y="1989" width="2.6" height="15.0" fill="rgb(233,217,28)" rx="2" ry="2" />
<text  x="474.13" y="1999.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(211,197,1)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>_copy_to_iter (12 samples, 0.20%)</title><rect x="1088.0" y="1909" width="2.4" height="15.0" fill="rgb(239,159,12)" rx="2" ry="2" />
<text  x="1091.01" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (32 samples, 0.54%)</title><rect x="384.2" y="1973" width="6.3" height="15.0" fill="rgb(212,125,10)" rx="2" ry="2" />
<text  x="387.16" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="88.3" y="37" width="0.2" height="15.0" fill="rgb(247,156,9)" rx="2" ry="2" />
<text  x="91.27" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="403.3" y="2005" width="0.4" height="15.0" fill="rgb(215,181,26)" rx="2" ry="2" />
<text  x="406.33" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (36 samples, 0.60%)</title><rect x="1098.1" y="1429" width="7.1" height="15.0" fill="rgb(248,64,26)" rx="2" ry="2" />
<text  x="1101.09" y="1439.5" ></text>
</g>
<g >
<title>std::move&lt;void  (2 samples, 0.03%)</title><rect x="423.3" y="1957" width="0.4" height="15.0" fill="rgb(218,41,34)" rx="2" ry="2" />
<text  x="426.30" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="409.3" y="1989" width="0.2" height="15.0" fill="rgb(232,120,6)" rx="2" ry="2" />
<text  x="412.26" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="309.8" y="2005" width="0.2" height="15.0" fill="rgb(232,184,16)" rx="2" ry="2" />
<text  x="312.84" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="431.8" y="1941" width="0.2" height="15.0" fill="rgb(209,104,53)" rx="2" ry="2" />
<text  x="434.80" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="889.6" y="2005" width="0.2" height="15.0" fill="rgb(238,95,20)" rx="2" ry="2" />
<text  x="892.56" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (4 samples, 0.07%)</title><rect x="203.7" y="2021" width="0.8" height="15.0" fill="rgb(216,162,41)" rx="2" ry="2" />
<text  x="206.70" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (6 samples, 0.10%)</title><rect x="910.5" y="1973" width="1.2" height="15.0" fill="rgb(230,6,16)" rx="2" ry="2" />
<text  x="913.52" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="418.6" y="1957" width="0.9" height="15.0" fill="rgb(230,108,39)" rx="2" ry="2" />
<text  x="421.55" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="614.2" y="2005" width="0.2" height="15.0" fill="rgb(221,136,31)" rx="2" ry="2" />
<text  x="617.23" y="2015.5" ></text>
</g>
<g >
<title>release_sock (38 samples, 0.64%)</title><rect x="1065.7" y="1925" width="7.5" height="15.0" fill="rgb(246,44,35)" rx="2" ry="2" />
<text  x="1068.68" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (29 samples, 0.49%)</title><rect x="1171.4" y="2037" width="5.8" height="15.0" fill="rgb(254,72,23)" rx="2" ry="2" />
<text  x="1174.42" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (4 samples, 0.07%)</title><rect x="72.3" y="37" width="0.8" height="15.0" fill="rgb(220,142,5)" rx="2" ry="2" />
<text  x="75.26" y="47.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1461" width="49.6" height="15.0" fill="rgb(251,56,17)" rx="2" ry="2" />
<text  x="72.49" y="1471.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="531.6" y="1989" width="0.2" height="15.0" fill="rgb(250,139,8)" rx="2" ry="2" />
<text  x="534.61" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (3 samples, 0.05%)</title><rect x="596.6" y="1925" width="0.6" height="15.0" fill="rgb(226,92,4)" rx="2" ry="2" />
<text  x="599.64" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="176.2" y="2005" width="0.2" height="15.0" fill="rgb(244,215,34)" rx="2" ry="2" />
<text  x="179.23" y="2015.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="119.1" y="1493" width="0.2" height="15.0" fill="rgb(240,182,25)" rx="2" ry="2" />
<text  x="122.11" y="1503.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (17 samples, 0.28%)</title><rect x="269.7" y="1877" width="3.4" height="15.0" fill="rgb(241,14,1)" rx="2" ry="2" />
<text  x="272.72" y="1887.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="11.4" y="1941" width="1.0" height="15.0" fill="rgb(232,36,38)" rx="2" ry="2" />
<text  x="14.38" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (6 samples, 0.10%)</title><rect x="229.6" y="2021" width="1.2" height="15.0" fill="rgb(214,26,18)" rx="2" ry="2" />
<text  x="232.59" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="168.7" y="1989" width="0.2" height="15.0" fill="rgb(212,40,40)" rx="2" ry="2" />
<text  x="171.72" y="1999.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1093.0" y="1909" width="0.1" height="15.0" fill="rgb(227,142,26)" rx="2" ry="2" />
<text  x="1095.95" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="607.1" y="1893" width="0.2" height="15.0" fill="rgb(215,135,50)" rx="2" ry="2" />
<text  x="610.12" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1129.1" y="2005" width="0.2" height="15.0" fill="rgb(210,77,34)" rx="2" ry="2" />
<text  x="1132.12" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="499.2" y="1925" width="0.4" height="15.0" fill="rgb(213,218,13)" rx="2" ry="2" />
<text  x="502.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="878.3" y="2021" width="1.8" height="15.0" fill="rgb(254,102,38)" rx="2" ry="2" />
<text  x="881.30" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (5 samples, 0.08%)</title><rect x="493.9" y="1909" width="0.9" height="15.0" fill="rgb(207,220,34)" rx="2" ry="2" />
<text  x="496.86" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="200.1" y="1957" width="0.8" height="15.0" fill="rgb(244,171,10)" rx="2" ry="2" />
<text  x="203.14" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="111.2" y="37" width="0.4" height="15.0" fill="rgb(252,135,27)" rx="2" ry="2" />
<text  x="114.20" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (145 samples, 2.43%)</title><rect x="939.0" y="1989" width="28.6" height="15.0" fill="rgb(251,153,54)" rx="2" ry="2" />
<text  x="941.98" y="1999.5" >fo..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (45 samples, 0.75%)</title><rect x="95.0" y="53" width="8.9" height="15.0" fill="rgb(247,160,9)" rx="2" ry="2" />
<text  x="97.99" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="131.0" y="1941" width="1.0" height="15.0" fill="rgb(213,220,29)" rx="2" ry="2" />
<text  x="133.96" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="396.0" y="1893" width="0.4" height="15.0" fill="rgb(217,104,20)" rx="2" ry="2" />
<text  x="399.02" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="12.4" y="1957" width="0.2" height="15.0" fill="rgb(246,97,6)" rx="2" ry="2" />
<text  x="15.37" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1189.2" y="2037" width="0.4" height="15.0" fill="rgb(209,112,34)" rx="2" ry="2" />
<text  x="1192.21" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="1070.2" y="1845" width="0.4" height="15.0" fill="rgb(216,182,25)" rx="2" ry="2" />
<text  x="1073.22" y="1855.5" ></text>
</g>
<g >
<title>skb_free_head (3 samples, 0.05%)</title><rect x="283.9" y="1413" width="0.6" height="15.0" fill="rgb(248,75,36)" rx="2" ry="2" />
<text  x="286.95" y="1423.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="931.1" y="1925" width="5.9" height="15.0" fill="rgb(235,176,36)" rx="2" ry="2" />
<text  x="934.07" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="184.9" y="2005" width="0.2" height="15.0" fill="rgb(233,107,6)" rx="2" ry="2" />
<text  x="187.92" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="856.8" y="2005" width="0.2" height="15.0" fill="rgb(208,217,2)" rx="2" ry="2" />
<text  x="859.75" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="871.4" y="2021" width="0.4" height="15.0" fill="rgb(224,57,31)" rx="2" ry="2" />
<text  x="874.38" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.50%)</title><rect x="602.8" y="2005" width="5.9" height="15.0" fill="rgb(228,74,30)" rx="2" ry="2" />
<text  x="605.77" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (28 samples, 0.47%)</title><rect x="461.0" y="1989" width="5.6" height="15.0" fill="rgb(217,175,20)" rx="2" ry="2" />
<text  x="464.05" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="592.7" y="1877" width="0.2" height="15.0" fill="rgb(250,163,36)" rx="2" ry="2" />
<text  x="595.69" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4,862 samples, 81.44%)</title><rect x="54.1" y="2053" width="961.0" height="15.0" fill="rgb(252,104,33)" rx="2" ry="2" />
<text  x="57.08" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9 samples, 0.15%)</title><rect x="1005.2" y="2037" width="1.8" height="15.0" fill="rgb(231,192,28)" rx="2" ry="2" />
<text  x="1008.19" y="2047.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="279.8" y="1333" width="0.2" height="15.0" fill="rgb(215,202,35)" rx="2" ry="2" />
<text  x="282.80" y="1343.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="671.4" y="2005" width="0.5" height="15.0" fill="rgb(239,13,23)" rx="2" ry="2" />
<text  x="674.35" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="371.5" y="1973" width="0.4" height="15.0" fill="rgb(237,7,48)" rx="2" ry="2" />
<text  x="374.51" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="191.8" y="1957" width="0.2" height="15.0" fill="rgb(224,132,29)" rx="2" ry="2" />
<text  x="194.84" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (51 samples, 0.85%)</title><rect x="856.8" y="2037" width="10.0" height="15.0" fill="rgb(218,153,30)" rx="2" ry="2" />
<text  x="859.75" y="2047.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="1128.1" y="1893" width="0.2" height="15.0" fill="rgb(223,177,23)" rx="2" ry="2" />
<text  x="1131.13" y="1903.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="430.8" y="2005" width="0.2" height="15.0" fill="rgb(246,172,8)" rx="2" ry="2" />
<text  x="433.81" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (68 samples, 1.14%)</title><rect x="1094.1" y="1669" width="13.5" height="15.0" fill="rgb(211,216,37)" rx="2" ry="2" />
<text  x="1097.14" y="1679.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="149.7" y="1909" width="0.2" height="15.0" fill="rgb(250,215,54)" rx="2" ry="2" />
<text  x="152.74" y="1919.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="10.4" y="1973" width="0.8" height="15.0" fill="rgb(214,75,30)" rx="2" ry="2" />
<text  x="13.40" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (16 samples, 0.27%)</title><rect x="398.0" y="1893" width="3.2" height="15.0" fill="rgb(214,221,42)" rx="2" ry="2" />
<text  x="401.00" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="499.2" y="1909" width="0.4" height="15.0" fill="rgb(235,130,7)" rx="2" ry="2" />
<text  x="502.20" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="634.4" y="1973" width="0.4" height="15.0" fill="rgb(228,57,53)" rx="2" ry="2" />
<text  x="637.39" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1381" width="49.6" height="15.0" fill="rgb(238,75,30)" rx="2" ry="2" />
<text  x="72.49" y="1391.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="490.7" y="1909" width="0.2" height="15.0" fill="rgb(230,79,19)" rx="2" ry="2" />
<text  x="493.70" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="417.6" y="1973" width="0.4" height="15.0" fill="rgb(209,27,5)" rx="2" ry="2" />
<text  x="420.56" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1151.9" y="2005" width="0.2" height="15.0" fill="rgb(231,224,37)" rx="2" ry="2" />
<text  x="1154.85" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (390 samples, 6.53%)</title><rect x="897.5" y="2005" width="77.1" height="15.0" fill="rgb(233,136,19)" rx="2" ry="2" />
<text  x="900.47" y="2015.5" >folly::f..</text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (5 samples, 0.08%)</title><rect x="197.2" y="1989" width="1.0" height="15.0" fill="rgb(207,183,45)" rx="2" ry="2" />
<text  x="200.18" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="552.4" y="1941" width="0.4" height="15.0" fill="rgb(229,132,22)" rx="2" ry="2" />
<text  x="555.37" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (8 samples, 0.13%)</title><rect x="878.3" y="2005" width="1.6" height="15.0" fill="rgb(228,148,45)" rx="2" ry="2" />
<text  x="881.30" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="503.9" y="1957" width="0.6" height="15.0" fill="rgb(229,9,28)" rx="2" ry="2" />
<text  x="506.94" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="11.2" y="2053" width="1.2" height="15.0" fill="rgb(221,131,15)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="378.6" y="1925" width="0.8" height="15.0" fill="rgb(221,92,39)" rx="2" ry="2" />
<text  x="381.63" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="203.5" y="1989" width="0.2" height="15.0" fill="rgb(237,66,26)" rx="2" ry="2" />
<text  x="206.50" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="1013.7" y="1989" width="1.0" height="15.0" fill="rgb(234,193,48)" rx="2" ry="2" />
<text  x="1016.69" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (15 samples, 0.25%)</title><rect x="84.3" y="37" width="3.0" height="15.0" fill="rgb(213,2,54)" rx="2" ry="2" />
<text  x="87.32" y="47.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (6 samples, 0.10%)</title><rect x="1110.5" y="1957" width="1.2" height="15.0" fill="rgb(254,43,38)" rx="2" ry="2" />
<text  x="1113.54" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="205.7" y="1925" width="0.2" height="15.0" fill="rgb(251,17,45)" rx="2" ry="2" />
<text  x="208.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="1077" width="49.6" height="15.0" fill="rgb(228,216,23)" rx="2" ry="2" />
<text  x="72.49" y="1087.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (11 samples, 0.18%)</title><rect x="353.7" y="1957" width="2.2" height="15.0" fill="rgb(229,158,6)" rx="2" ry="2" />
<text  x="356.72" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="293" width="49.6" height="15.0" fill="rgb(222,181,39)" rx="2" ry="2" />
<text  x="72.49" y="303.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="19.9" y="1989" width="0.2" height="15.0" fill="rgb(233,78,17)" rx="2" ry="2" />
<text  x="22.88" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (154 samples, 2.58%)</title><rect x="616.6" y="2037" width="30.4" height="15.0" fill="rgb(237,133,35)" rx="2" ry="2" />
<text  x="619.60" y="2047.5" >fa..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (3 samples, 0.05%)</title><rect x="832.4" y="2005" width="0.6" height="15.0" fill="rgb(230,4,20)" rx="2" ry="2" />
<text  x="835.44" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1092.2" y="1893" width="0.2" height="15.0" fill="rgb(219,85,10)" rx="2" ry="2" />
<text  x="1095.16" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="420.9" y="1909" width="0.2" height="15.0" fill="rgb(237,1,38)" rx="2" ry="2" />
<text  x="423.92" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="341" width="49.6" height="15.0" fill="rgb(219,126,3)" rx="2" ry="2" />
<text  x="72.49" y="351.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (9 samples, 0.15%)</title><rect x="1142.0" y="1989" width="1.7" height="15.0" fill="rgb(213,74,5)" rx="2" ry="2" />
<text  x="1144.97" y="1999.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="227.0" y="2037" width="0.2" height="15.0" fill="rgb(207,142,25)" rx="2" ry="2" />
<text  x="230.03" y="2047.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="497.0" y="1877" width="0.8" height="15.0" fill="rgb(251,79,12)" rx="2" ry="2" />
<text  x="500.02" y="1887.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="962.7" y="1909" width="1.6" height="15.0" fill="rgb(206,54,35)" rx="2" ry="2" />
<text  x="965.70" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="1095.3" y="1477" width="1.0" height="15.0" fill="rgb(254,171,29)" rx="2" ry="2" />
<text  x="1098.32" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="488.9" y="1909" width="0.6" height="15.0" fill="rgb(223,173,31)" rx="2" ry="2" />
<text  x="491.92" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (6 samples, 0.10%)</title><rect x="891.7" y="2005" width="1.2" height="15.0" fill="rgb(218,12,47)" rx="2" ry="2" />
<text  x="894.74" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="481.0" y="1957" width="0.2" height="15.0" fill="rgb(209,113,35)" rx="2" ry="2" />
<text  x="484.01" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (137 samples, 2.29%)</title><rect x="473.7" y="1989" width="27.1" height="15.0" fill="rgb(228,97,45)" rx="2" ry="2" />
<text  x="476.70" y="1999.5" >f..</text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (6 samples, 0.10%)</title><rect x="208.4" y="1941" width="1.2" height="15.0" fill="rgb(229,57,1)" rx="2" ry="2" />
<text  x="211.45" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (18 samples, 0.30%)</title><rect x="694.5" y="1941" width="3.5" height="15.0" fill="rgb(212,56,29)" rx="2" ry="2" />
<text  x="697.48" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1105.4" y="1493" width="0.2" height="15.0" fill="rgb(205,80,13)" rx="2" ry="2" />
<text  x="1108.40" y="1503.5" ></text>
</g>
<g >
<title>sock_def_readable (9 samples, 0.15%)</title><rect x="1070.8" y="1861" width="1.8" height="15.0" fill="rgb(237,198,50)" rx="2" ry="2" />
<text  x="1073.81" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="592.7" y="1925" width="0.4" height="15.0" fill="rgb(243,167,54)" rx="2" ry="2" />
<text  x="595.69" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (14 samples, 0.23%)</title><rect x="1156.6" y="2053" width="2.8" height="15.0" fill="rgb(235,187,46)" rx="2" ry="2" />
<text  x="1159.60" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="378.2" y="1941" width="1.2" height="15.0" fill="rgb(219,11,7)" rx="2" ry="2" />
<text  x="381.23" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="598.2" y="1925" width="0.4" height="15.0" fill="rgb(245,40,24)" rx="2" ry="2" />
<text  x="601.22" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.34%)</title><rect x="651.6" y="2021" width="3.9" height="15.0" fill="rgb(228,143,35)" rx="2" ry="2" />
<text  x="654.59" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="170.5" y="1957" width="0.6" height="15.0" fill="rgb(254,149,2)" rx="2" ry="2" />
<text  x="173.50" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="837" width="49.6" height="15.0" fill="rgb(246,227,44)" rx="2" ry="2" />
<text  x="72.49" y="847.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (6 samples, 0.10%)</title><rect x="855.2" y="2005" width="1.2" height="15.0" fill="rgb(239,92,51)" rx="2" ry="2" />
<text  x="858.17" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="118.7" y="101" width="0.4" height="15.0" fill="rgb(249,98,34)" rx="2" ry="2" />
<text  x="121.71" y="111.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (16 samples, 0.27%)</title><rect x="619.0" y="1973" width="3.1" height="15.0" fill="rgb(231,32,39)" rx="2" ry="2" />
<text  x="621.97" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (3 samples, 0.05%)</title><rect x="403.9" y="2037" width="0.6" height="15.0" fill="rgb(215,20,11)" rx="2" ry="2" />
<text  x="406.93" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (18 samples, 0.30%)</title><rect x="187.7" y="1941" width="3.5" height="15.0" fill="rgb(252,170,26)" rx="2" ry="2" />
<text  x="190.69" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="825.5" y="2005" width="0.2" height="15.0" fill="rgb(247,22,22)" rx="2" ry="2" />
<text  x="828.52" y="2015.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="365.6" y="1941" width="0.4" height="15.0" fill="rgb(248,121,50)" rx="2" ry="2" />
<text  x="368.58" y="1951.5" ></text>
</g>
<g >
<title>tcp_push (2 samples, 0.03%)</title><rect x="255.1" y="1893" width="0.4" height="15.0" fill="rgb(212,36,24)" rx="2" ry="2" />
<text  x="258.09" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="613" width="49.6" height="15.0" fill="rgb(249,44,4)" rx="2" ry="2" />
<text  x="72.49" y="623.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (4 samples, 0.07%)</title><rect x="411.0" y="1957" width="0.8" height="15.0" fill="rgb(250,14,25)" rx="2" ry="2" />
<text  x="414.04" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (306 samples, 5.13%)</title><rect x="243.4" y="2005" width="60.5" height="15.0" fill="rgb(209,228,39)" rx="2" ry="2" />
<text  x="246.43" y="2015.5" >do_sys..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="168.3" y="1973" width="0.4" height="15.0" fill="rgb(251,86,15)" rx="2" ry="2" />
<text  x="171.32" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="551.6" y="1973" width="1.2" height="15.0" fill="rgb(225,164,45)" rx="2" ry="2" />
<text  x="554.57" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="365.4" y="1845" width="0.2" height="15.0" fill="rgb(254,176,49)" rx="2" ry="2" />
<text  x="368.38" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="623.1" y="1989" width="0.4" height="15.0" fill="rgb(253,190,51)" rx="2" ry="2" />
<text  x="626.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="118.7" y="85" width="0.4" height="15.0" fill="rgb(248,75,40)" rx="2" ry="2" />
<text  x="121.71" y="95.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="970.2" y="1973" width="2.0" height="15.0" fill="rgb(249,56,36)" rx="2" ry="2" />
<text  x="973.21" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (3 samples, 0.05%)</title><rect x="1152.6" y="2053" width="0.6" height="15.0" fill="rgb(227,128,40)" rx="2" ry="2" />
<text  x="1155.64" y="2063.5" ></text>
</g>
<g >
<title>__sys_sendmsg (285 samples, 4.77%)</title><rect x="247.4" y="1973" width="56.3" height="15.0" fill="rgb(209,65,36)" rx="2" ry="2" />
<text  x="250.38" y="1983.5" >__sys..</text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(213,13,29)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="667.4" y="2005" width="0.4" height="15.0" fill="rgb(225,22,52)" rx="2" ry="2" />
<text  x="670.40" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="401.4" y="1909" width="0.2" height="15.0" fill="rgb(231,80,11)" rx="2" ry="2" />
<text  x="404.36" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="402.3" y="1925" width="0.4" height="15.0" fill="rgb(218,93,0)" rx="2" ry="2" />
<text  x="405.35" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="423.1" y="1973" width="0.2" height="15.0" fill="rgb(253,76,32)" rx="2" ry="2" />
<text  x="426.10" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.20%)</title><rect x="495.4" y="1925" width="2.4" height="15.0" fill="rgb(241,67,43)" rx="2" ry="2" />
<text  x="498.44" y="1935.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(238,26,17)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (7 samples, 0.12%)</title><rect x="429.2" y="2037" width="1.4" height="15.0" fill="rgb(230,145,43)" rx="2" ry="2" />
<text  x="432.23" y="2047.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="419.7" y="1941" width="0.2" height="15.0" fill="rgb(252,76,54)" rx="2" ry="2" />
<text  x="422.74" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="11.2" y="2037" width="1.2" height="15.0" fill="rgb(220,7,9)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="1003.0" y="2037" width="0.2" height="15.0" fill="rgb(207,222,41)" rx="2" ry="2" />
<text  x="1006.02" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (11 samples, 0.18%)</title><rect x="1035.8" y="1877" width="2.2" height="15.0" fill="rgb(236,221,50)" rx="2" ry="2" />
<text  x="1038.83" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (5 samples, 0.08%)</title><rect x="153.5" y="1925" width="1.0" height="15.0" fill="rgb(246,169,27)" rx="2" ry="2" />
<text  x="156.50" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (5 samples, 0.08%)</title><rect x="213.4" y="2021" width="1.0" height="15.0" fill="rgb(223,28,16)" rx="2" ry="2" />
<text  x="216.39" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (21 samples, 0.35%)</title><rect x="187.1" y="1957" width="4.1" height="15.0" fill="rgb(212,0,22)" rx="2" ry="2" />
<text  x="190.10" y="1967.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (4 samples, 0.07%)</title><rect x="1149.7" y="2005" width="0.8" height="15.0" fill="rgb(208,38,32)" rx="2" ry="2" />
<text  x="1152.68" y="2015.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1115.7" y="2053" width="0.4" height="15.0" fill="rgb(245,172,28)" rx="2" ry="2" />
<text  x="1118.68" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1877" width="50.0" height="15.0" fill="rgb(249,202,1)" rx="2" ry="2" />
<text  x="72.49" y="1887.5" >[unkn..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="309.6" y="2037" width="0.4" height="15.0" fill="rgb(238,228,5)" rx="2" ry="2" />
<text  x="312.64" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (1 samples, 0.02%)</title><rect x="25.6" y="1973" width="0.2" height="15.0" fill="rgb(248,199,28)" rx="2" ry="2" />
<text  x="28.61" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="353.3" y="1941" width="0.4" height="15.0" fill="rgb(222,188,33)" rx="2" ry="2" />
<text  x="356.33" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="599.2" y="1893" width="0.2" height="15.0" fill="rgb(244,135,18)" rx="2" ry="2" />
<text  x="602.21" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="397.2" y="1909" width="0.4" height="15.0" fill="rgb(238,164,10)" rx="2" ry="2" />
<text  x="400.21" y="1919.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.15%)</title><rect x="1108.4" y="1909" width="1.7" height="15.0" fill="rgb(208,4,7)" rx="2" ry="2" />
<text  x="1111.37" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (22 samples, 0.37%)</title><rect x="442.7" y="2005" width="4.3" height="15.0" fill="rgb(207,128,48)" rx="2" ry="2" />
<text  x="445.67" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (8 samples, 0.13%)</title><rect x="469.0" y="1989" width="1.5" height="15.0" fill="rgb(219,30,43)" rx="2" ry="2" />
<text  x="471.95" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="422.7" y="1973" width="0.2" height="15.0" fill="rgb(220,153,26)" rx="2" ry="2" />
<text  x="425.70" y="1983.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1070.6" y="1845" width="0.2" height="15.0" fill="rgb(248,211,52)" rx="2" ry="2" />
<text  x="1073.62" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="73.1" y="37" width="0.1" height="15.0" fill="rgb(233,171,19)" rx="2" ry="2" />
<text  x="76.05" y="47.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="762.1" y="1925" width="0.2" height="15.0" fill="rgb(220,13,17)" rx="2" ry="2" />
<text  x="765.08" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="171.5" y="1957" width="0.6" height="15.0" fill="rgb(222,110,38)" rx="2" ry="2" />
<text  x="174.48" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (8 samples, 0.13%)</title><rect x="201.9" y="1989" width="1.6" height="15.0" fill="rgb(239,55,31)" rx="2" ry="2" />
<text  x="204.92" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="111.6" y="69" width="4.3" height="15.0" fill="rgb(245,142,47)" rx="2" ry="2" />
<text  x="114.59" y="79.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="365.4" y="1781" width="0.2" height="15.0" fill="rgb(248,83,43)" rx="2" ry="2" />
<text  x="368.38" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="617.2" y="1973" width="0.2" height="15.0" fill="rgb(213,61,24)" rx="2" ry="2" />
<text  x="620.20" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="526.1" y="2021" width="0.2" height="15.0" fill="rgb(216,67,9)" rx="2" ry="2" />
<text  x="529.08" y="2031.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1033.5" y="1925" width="0.4" height="15.0" fill="rgb(240,24,12)" rx="2" ry="2" />
<text  x="1036.46" y="1935.5" ></text>
</g>
<g >
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="1063.7" y="1925" width="0.4" height="15.0" fill="rgb(240,217,38)" rx="2" ry="2" />
<text  x="1066.70" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="360.6" y="1925" width="0.2" height="15.0" fill="rgb(206,33,42)" rx="2" ry="2" />
<text  x="363.64" y="1935.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(208,75,38)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="968.4" y="1989" width="0.8" height="15.0" fill="rgb(209,4,20)" rx="2" ry="2" />
<text  x="971.43" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="936.0" y="1877" width="0.4" height="15.0" fill="rgb(240,200,34)" rx="2" ry="2" />
<text  x="939.01" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="602.8" y="1989" width="0.2" height="15.0" fill="rgb(227,30,5)" rx="2" ry="2" />
<text  x="605.77" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (22 samples, 0.37%)</title><rect x="13.0" y="1877" width="4.3" height="15.0" fill="rgb(214,228,6)" rx="2" ry="2" />
<text  x="15.96" y="1887.5" ></text>
</g>
<g >
<title>sys_recvfrom (443 samples, 7.42%)</title><rect x="1024.8" y="2005" width="87.5" height="15.0" fill="rgb(217,84,27)" rx="2" ry="2" />
<text  x="1027.76" y="2015.5" >sys_recvfrom</text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="764.1" y="1941" width="0.2" height="15.0" fill="rgb(250,17,45)" rx="2" ry="2" />
<text  x="767.05" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="165.2" y="1989" width="0.4" height="15.0" fill="rgb(237,134,15)" rx="2" ry="2" />
<text  x="168.16" y="1999.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="254.9" y="1893" width="0.2" height="15.0" fill="rgb(248,141,49)" rx="2" ry="2" />
<text  x="257.89" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="911.7" y="1973" width="1.4" height="15.0" fill="rgb(249,81,33)" rx="2" ry="2" />
<text  x="914.70" y="1983.5" ></text>
</g>
<g >
<title>__memchr_avx2 (5 samples, 0.08%)</title><rect x="306.5" y="2037" width="1.0" height="15.0" fill="rgb(253,173,4)" rx="2" ry="2" />
<text  x="309.48" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1589" width="49.8" height="15.0" fill="rgb(207,91,20)" rx="2" ry="2" />
<text  x="72.49" y="1599.5" >[unkn..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="596.8" y="1877" width="0.2" height="15.0" fill="rgb(209,54,7)" rx="2" ry="2" />
<text  x="599.84" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (110 samples, 1.84%)</title><rect x="907.2" y="1989" width="21.7" height="15.0" fill="rgb(246,215,38)" rx="2" ry="2" />
<text  x="910.16" y="1999.5" >f..</text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1087.6" y="1909" width="0.4" height="15.0" fill="rgb(225,18,40)" rx="2" ry="2" />
<text  x="1090.61" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="651.4" y="2005" width="0.2" height="15.0" fill="rgb(226,179,21)" rx="2" ry="2" />
<text  x="654.39" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="497.0" y="1813" width="0.8" height="15.0" fill="rgb(225,33,50)" rx="2" ry="2" />
<text  x="500.02" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="336.1" y="1989" width="0.6" height="15.0" fill="rgb(233,227,4)" rx="2" ry="2" />
<text  x="339.13" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (16 samples, 0.27%)</title><rect x="526.3" y="2021" width="3.1" height="15.0" fill="rgb(219,221,23)" rx="2" ry="2" />
<text  x="529.27" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1701" width="49.8" height="15.0" fill="rgb(238,180,52)" rx="2" ry="2" />
<text  x="72.49" y="1711.5" >[unkn..</text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="877.3" y="2037" width="0.8" height="15.0" fill="rgb(227,75,23)" rx="2" ry="2" />
<text  x="880.31" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (2 samples, 0.03%)</title><rect x="937.0" y="1941" width="0.4" height="15.0" fill="rgb(243,115,48)" rx="2" ry="2" />
<text  x="940.00" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="659.5" y="1989" width="0.2" height="15.0" fill="rgb(208,112,54)" rx="2" ry="2" />
<text  x="662.49" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (14 samples, 0.23%)</title><rect x="668.6" y="1989" width="2.8" height="15.0" fill="rgb(251,73,45)" rx="2" ry="2" />
<text  x="671.59" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (145 samples, 2.43%)</title><rect x="939.0" y="1941" width="28.6" height="15.0" fill="rgb(250,141,25)" rx="2" ry="2" />
<text  x="941.98" y="1951.5" >[m..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="485" width="49.6" height="15.0" fill="rgb(235,1,4)" rx="2" ry="2" />
<text  x="72.49" y="495.5" >[unkn..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="20.1" y="1957" width="0.2" height="15.0" fill="rgb(222,132,16)" rx="2" ry="2" />
<text  x="23.08" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (9 samples, 0.15%)</title><rect x="694.5" y="1925" width="1.8" height="15.0" fill="rgb(245,134,31)" rx="2" ry="2" />
<text  x="697.48" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="536.4" y="2037" width="0.2" height="15.0" fill="rgb(228,102,35)" rx="2" ry="2" />
<text  x="539.36" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (2 samples, 0.03%)</title><rect x="764.3" y="1941" width="0.3" height="15.0" fill="rgb(224,88,5)" rx="2" ry="2" />
<text  x="767.25" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (7 samples, 0.12%)</title><rect x="378.0" y="1957" width="1.4" height="15.0" fill="rgb(229,27,41)" rx="2" ry="2" />
<text  x="381.03" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (54 samples, 0.90%)</title><rect x="1094.9" y="1509" width="10.7" height="15.0" fill="rgb(241,3,0)" rx="2" ry="2" />
<text  x="1097.93" y="1519.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="375.7" y="1989" width="0.2" height="15.0" fill="rgb(231,81,51)" rx="2" ry="2" />
<text  x="378.66" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="662.9" y="2021" width="0.5" height="15.0" fill="rgb(215,159,15)" rx="2" ry="2" />
<text  x="665.85" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="111.2" y="53" width="0.4" height="15.0" fill="rgb(218,168,44)" rx="2" ry="2" />
<text  x="114.20" y="63.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="69.5" y="1941" width="50.0" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="72.49" y="1951.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (3 samples, 0.05%)</title><rect x="1165.7" y="2053" width="0.6" height="15.0" fill="rgb(235,218,7)" rx="2" ry="2" />
<text  x="1168.69" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (13 samples, 0.22%)</title><rect x="109.0" y="69" width="2.6" height="15.0" fill="rgb(235,17,20)" rx="2" ry="2" />
<text  x="112.03" y="79.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (51 samples, 0.85%)</title><rect x="19.3" y="2021" width="10.1" height="15.0" fill="rgb(244,58,2)" rx="2" ry="2" />
<text  x="22.29" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (13 samples, 0.22%)</title><rect x="1107.6" y="1925" width="2.5" height="15.0" fill="rgb(215,53,11)" rx="2" ry="2" />
<text  x="1110.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1014.7" y="2037" width="0.2" height="15.0" fill="rgb(245,34,47)" rx="2" ry="2" />
<text  x="1017.68" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (3 samples, 0.05%)</title><rect x="362.8" y="1941" width="0.6" height="15.0" fill="rgb(248,106,47)" rx="2" ry="2" />
<text  x="365.81" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="857.0" y="1989" width="0.5" height="15.0" fill="rgb(234,140,52)" rx="2" ry="2" />
<text  x="859.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="109.0" y="53" width="2.2" height="15.0" fill="rgb(230,126,8)" rx="2" ry="2" />
<text  x="112.03" y="63.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="423.1" y="1989" width="0.6" height="15.0" fill="rgb(253,145,53)" rx="2" ry="2" />
<text  x="426.10" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="651.4" y="2021" width="0.2" height="15.0" fill="rgb(225,6,19)" rx="2" ry="2" />
<text  x="654.39" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (3 samples, 0.05%)</title><rect x="972.2" y="1989" width="0.6" height="15.0" fill="rgb(240,103,46)" rx="2" ry="2" />
<text  x="975.18" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="418.2" y="1989" width="4.3" height="15.0" fill="rgb(254,163,50)" rx="2" ry="2" />
<text  x="421.16" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="95.8" y="37" width="2.2" height="15.0" fill="rgb(239,15,34)" rx="2" ry="2" />
<text  x="98.78" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (9 samples, 0.15%)</title><rect x="1174.2" y="2021" width="1.8" height="15.0" fill="rgb(236,219,7)" rx="2" ry="2" />
<text  x="1177.19" y="2031.5" ></text>
</g>
<g >
<title>schedule (24 samples, 0.40%)</title><rect x="12.6" y="1941" width="4.7" height="15.0" fill="rgb(211,168,3)" rx="2" ry="2" />
<text  x="15.57" y="1951.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="205.1" y="1957" width="0.4" height="15.0" fill="rgb(220,124,51)" rx="2" ry="2" />
<text  x="208.09" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="757.9" y="1941" width="0.6" height="15.0" fill="rgb(212,86,26)" rx="2" ry="2" />
<text  x="760.93" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="390.3" y="1957" width="0.2" height="15.0" fill="rgb(248,188,37)" rx="2" ry="2" />
<text  x="393.29" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="23.4" y="1941" width="0.4" height="15.0" fill="rgb(252,40,41)" rx="2" ry="2" />
<text  x="26.44" y="1951.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (13 samples, 0.22%)</title><rect x="913.3" y="1973" width="2.6" height="15.0" fill="rgb(251,125,26)" rx="2" ry="2" />
<text  x="916.28" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="662.9" y="2005" width="0.5" height="15.0" fill="rgb(206,46,45)" rx="2" ry="2" />
<text  x="665.85" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1861" width="49.8" height="15.0" fill="rgb(209,165,37)" rx="2" ry="2" />
<text  x="72.49" y="1871.5" >[unkn..</text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="199.7" y="1957" width="0.2" height="15.0" fill="rgb(227,33,43)" rx="2" ry="2" />
<text  x="202.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (100 samples, 1.68%)</title><rect x="69.5" y="53" width="19.8" height="15.0" fill="rgb(219,225,10)" rx="2" ry="2" />
<text  x="72.49" y="63.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (13 samples, 0.22%)</title><rect x="630.4" y="1973" width="2.6" height="15.0" fill="rgb(239,121,29)" rx="2" ry="2" />
<text  x="633.44" y="1983.5" ></text>
</g>
<g >
<title>kfree (39 samples, 0.65%)</title><rect x="1097.5" y="1445" width="7.7" height="15.0" fill="rgb(231,93,3)" rx="2" ry="2" />
<text  x="1100.50" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (14 samples, 0.23%)</title><rect x="605.1" y="1973" width="2.8" height="15.0" fill="rgb(224,64,44)" rx="2" ry="2" />
<text  x="608.14" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (8 samples, 0.13%)</title><rect x="467.4" y="1989" width="1.6" height="15.0" fill="rgb(244,148,21)" rx="2" ry="2" />
<text  x="470.37" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (259 samples, 4.34%)</title><rect x="69.3" y="2005" width="51.2" height="15.0" fill="rgb(246,127,25)" rx="2" ry="2" />
<text  x="72.30" y="2015.5" >[unkn..</text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="157.3" y="1957" width="0.2" height="15.0" fill="rgb(240,124,29)" rx="2" ry="2" />
<text  x="160.25" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (29 samples, 0.49%)</title><rect x="280.0" y="1477" width="5.7" height="15.0" fill="rgb(212,70,9)" rx="2" ry="2" />
<text  x="283.00" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="498.0" y="1941" width="0.4" height="15.0" fill="rgb(253,92,19)" rx="2" ry="2" />
<text  x="501.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (5 samples, 0.08%)</title><rect x="665.0" y="2037" width="1.0" height="15.0" fill="rgb(233,33,2)" rx="2" ry="2" />
<text  x="668.03" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (4 samples, 0.07%)</title><rect x="406.1" y="2005" width="0.8" height="15.0" fill="rgb(230,220,43)" rx="2" ry="2" />
<text  x="409.10" y="2015.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="275.6" y="1797" width="0.2" height="15.0" fill="rgb(250,3,9)" rx="2" ry="2" />
<text  x="278.65" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (39 samples, 0.65%)</title><rect x="682.8" y="1941" width="7.7" height="15.0" fill="rgb(251,191,17)" rx="2" ry="2" />
<text  x="685.82" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="1129.9" y="2053" width="0.4" height="15.0" fill="rgb(226,1,42)" rx="2" ry="2" />
<text  x="1132.91" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="660.5" y="2005" width="1.8" height="15.0" fill="rgb(246,167,47)" rx="2" ry="2" />
<text  x="663.48" y="2015.5" ></text>
</g>
<g >
<title>ep_send_events_proc (30 samples, 0.50%)</title><rect x="311.6" y="1941" width="6.0" height="15.0" fill="rgb(240,72,13)" rx="2" ry="2" />
<text  x="314.62" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="165.0" y="1973" width="0.2" height="15.0" fill="rgb(236,119,32)" rx="2" ry="2" />
<text  x="167.96" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::fibers::LoopController*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="394.6" y="1909" width="0.2" height="15.0" fill="rgb(239,52,32)" rx="2" ry="2" />
<text  x="397.64" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="592.5" y="1957" width="0.2" height="15.0" fill="rgb(226,3,15)" rx="2" ry="2" />
<text  x="595.49" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="271.7" y="1813" width="0.8" height="15.0" fill="rgb(249,148,37)" rx="2" ry="2" />
<text  x="274.70" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="662.3" y="2037" width="1.1" height="15.0" fill="rgb(205,152,47)" rx="2" ry="2" />
<text  x="665.26" y="2047.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="11.4" y="1925" width="1.0" height="15.0" fill="rgb(239,97,39)" rx="2" ry="2" />
<text  x="14.38" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (5 samples, 0.08%)</title><rect x="557.5" y="1989" width="1.0" height="15.0" fill="rgb(250,7,42)" rx="2" ry="2" />
<text  x="560.50" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="396.4" y="1877" width="0.4" height="15.0" fill="rgb(223,174,31)" rx="2" ry="2" />
<text  x="399.42" y="1887.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(233,107,12)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (7 samples, 0.12%)</title><rect x="157.5" y="1957" width="1.3" height="15.0" fill="rgb(254,165,16)" rx="2" ry="2" />
<text  x="160.45" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (11 samples, 0.18%)</title><rect x="819.6" y="2005" width="2.2" height="15.0" fill="rgb(239,38,47)" rx="2" ry="2" />
<text  x="822.59" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (9 samples, 0.15%)</title><rect x="951.6" y="1877" width="1.8" height="15.0" fill="rgb(215,193,45)" rx="2" ry="2" />
<text  x="954.63" y="1887.5" ></text>
</g>
<g >
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="276.0" y="1781" width="0.6" height="15.0" fill="rgb(221,35,23)" rx="2" ry="2" />
<text  x="279.04" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="209.2" y="1877" width="0.4" height="15.0" fill="rgb(241,190,14)" rx="2" ry="2" />
<text  x="212.24" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="626.9" y="1973" width="2.4" height="15.0" fill="rgb(224,195,7)" rx="2" ry="2" />
<text  x="629.88" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="154.5" y="1925" width="0.4" height="15.0" fill="rgb(207,168,31)" rx="2" ry="2" />
<text  x="157.49" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="191.6" y="1989" width="0.2" height="15.0" fill="rgb(233,71,33)" rx="2" ry="2" />
<text  x="194.64" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="167.7" y="1973" width="0.4" height="15.0" fill="rgb(250,209,15)" rx="2" ry="2" />
<text  x="170.73" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (9 samples, 0.15%)</title><rect x="567.4" y="1989" width="1.8" height="15.0" fill="rgb(212,98,3)" rx="2" ry="2" />
<text  x="570.39" y="1999.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="584.6" y="1989" width="0.4" height="15.0" fill="rgb(209,169,5)" rx="2" ry="2" />
<text  x="587.58" y="1999.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="301.7" y="1957" width="0.4" height="15.0" fill="rgb(238,126,29)" rx="2" ry="2" />
<text  x="304.74" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="698.0" y="1973" width="0.2" height="15.0" fill="rgb(250,104,36)" rx="2" ry="2" />
<text  x="701.04" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="421.3" y="1909" width="0.2" height="15.0" fill="rgb(248,88,17)" rx="2" ry="2" />
<text  x="424.32" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="400.2" y="1845" width="0.6" height="15.0" fill="rgb(246,169,32)" rx="2" ry="2" />
<text  x="403.17" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="336.7" y="1989" width="0.2" height="15.0" fill="rgb(249,104,27)" rx="2" ry="2" />
<text  x="339.72" y="1999.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.4" y="1941" width="0.2" height="15.0" fill="rgb(249,145,49)" rx="2" ry="2" />
<text  x="940.40" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="658.5" y="1989" width="0.2" height="15.0" fill="rgb(252,130,46)" rx="2" ry="2" />
<text  x="661.51" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.2" y="1957" width="0.2" height="15.0" fill="rgb(248,39,41)" rx="2" ry="2" />
<text  x="941.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (20 samples, 0.34%)</title><rect x="852.8" y="2037" width="4.0" height="15.0" fill="rgb(254,168,11)" rx="2" ry="2" />
<text  x="855.80" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="853" width="49.6" height="15.0" fill="rgb(243,76,2)" rx="2" ry="2" />
<text  x="72.49" y="863.5" >[unkn..</text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(230,27,45)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="74.4" y="37" width="0.8" height="15.0" fill="rgb(253,156,1)" rx="2" ry="2" />
<text  x="77.44" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="967.2" y="1925" width="0.4" height="15.0" fill="rgb(247,37,1)" rx="2" ry="2" />
<text  x="970.24" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="458.3" y="2005" width="0.4" height="15.0" fill="rgb(236,77,31)" rx="2" ry="2" />
<text  x="461.28" y="2015.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (12 samples, 0.20%)</title><rect x="330.8" y="1941" width="2.4" height="15.0" fill="rgb(225,88,28)" rx="2" ry="2" />
<text  x="333.79" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="755.6" y="1957" width="0.3" height="15.0" fill="rgb(217,180,48)" rx="2" ry="2" />
<text  x="758.55" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="497.0" y="1765" width="0.8" height="15.0" fill="rgb(213,195,40)" rx="2" ry="2" />
<text  x="500.02" y="1775.5" ></text>
</g>
<g >
<title>skb_release_all (129 samples, 2.16%)</title><rect x="1038.0" y="1909" width="25.5" height="15.0" fill="rgb(213,207,31)" rx="2" ry="2" />
<text  x="1041.00" y="1919.5" >s..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="132.3" y="1957" width="0.2" height="15.0" fill="rgb(243,136,35)" rx="2" ry="2" />
<text  x="135.35" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (67 samples, 1.12%)</title><rect x="1094.1" y="1605" width="13.3" height="15.0" fill="rgb(219,218,12)" rx="2" ry="2" />
<text  x="1097.14" y="1615.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="874.9" y="2021" width="0.2" height="15.0" fill="rgb(219,29,48)" rx="2" ry="2" />
<text  x="877.94" y="2031.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="365.4" y="1797" width="0.2" height="15.0" fill="rgb(222,183,0)" rx="2" ry="2" />
<text  x="368.38" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="116.5" y="37" width="0.6" height="15.0" fill="rgb(241,152,7)" rx="2" ry="2" />
<text  x="119.54" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1149.3" y="2005" width="0.4" height="15.0" fill="rgb(233,153,52)" rx="2" ry="2" />
<text  x="1152.28" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="689.1" y="1877" width="0.2" height="15.0" fill="rgb(213,119,39)" rx="2" ry="2" />
<text  x="692.14" y="1887.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="317.6" y="1957" width="0.1" height="15.0" fill="rgb(224,225,54)" rx="2" ry="2" />
<text  x="320.55" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="657.1" y="2037" width="0.4" height="15.0" fill="rgb(215,217,34)" rx="2" ry="2" />
<text  x="660.12" y="2047.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (5 samples, 0.08%)</title><rect x="316.6" y="1893" width="1.0" height="15.0" fill="rgb(234,132,50)" rx="2" ry="2" />
<text  x="319.56" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="635.8" y="1989" width="1.6" height="15.0" fill="rgb(221,193,41)" rx="2" ry="2" />
<text  x="638.78" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.85%)</title><rect x="856.8" y="2021" width="10.0" height="15.0" fill="rgb(223,199,31)" rx="2" ry="2" />
<text  x="859.75" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="423.7" y="2021" width="2.0" height="15.0" fill="rgb(222,207,16)" rx="2" ry="2" />
<text  x="426.69" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (34 samples, 0.57%)</title><rect x="204.9" y="1973" width="6.7" height="15.0" fill="rgb(232,199,3)" rx="2" ry="2" />
<text  x="207.89" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="629" width="49.6" height="15.0" fill="rgb(227,14,51)" rx="2" ry="2" />
<text  x="72.49" y="639.5" >[unkn..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="878.7" y="1989" width="1.2" height="15.0" fill="rgb(246,23,46)" rx="2" ry="2" />
<text  x="881.69" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="229.2" y="1989" width="0.2" height="15.0" fill="rgb(229,5,27)" rx="2" ry="2" />
<text  x="232.20" y="1999.5" ></text>
</g>
<g >
<title>ep_poll (34 samples, 0.57%)</title><rect x="311.0" y="1973" width="6.7" height="15.0" fill="rgb(231,78,20)" rx="2" ry="2" />
<text  x="314.03" y="1983.5" ></text>
</g>
<g >
<title>__fget (6 samples, 0.10%)</title><rect x="302.1" y="1909" width="1.2" height="15.0" fill="rgb(212,112,30)" rx="2" ry="2" />
<text  x="305.13" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 2.01%)</title><rect x="616.6" y="2005" width="23.7" height="15.0" fill="rgb(229,86,29)" rx="2" ry="2" />
<text  x="619.60" y="2015.5" >[..</text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="267.7" y="1861" width="0.8" height="15.0" fill="rgb(211,106,12)" rx="2" ry="2" />
<text  x="270.74" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="110.2" y="37" width="0.4" height="15.0" fill="rgb(225,119,8)" rx="2" ry="2" />
<text  x="113.21" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="190.7" y="1909" width="0.5" height="15.0" fill="rgb(242,51,23)" rx="2" ry="2" />
<text  x="193.66" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (7 samples, 0.12%)</title><rect x="420.5" y="1925" width="1.4" height="15.0" fill="rgb(250,225,38)" rx="2" ry="2" />
<text  x="423.53" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12 samples, 0.20%)</title><rect x="652.6" y="1989" width="2.3" height="15.0" fill="rgb(227,195,38)" rx="2" ry="2" />
<text  x="655.58" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="597" width="49.6" height="15.0" fill="rgb(217,129,9)" rx="2" ry="2" />
<text  x="72.49" y="607.5" >[unkn..</text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="404.5" y="2005" width="0.4" height="15.0" fill="rgb(223,13,33)" rx="2" ry="2" />
<text  x="407.52" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (8 samples, 0.13%)</title><rect x="188.9" y="1925" width="1.6" height="15.0" fill="rgb(227,172,12)" rx="2" ry="2" />
<text  x="191.88" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (6 samples, 0.10%)</title><rect x="925.9" y="1957" width="1.2" height="15.0" fill="rgb(247,170,17)" rx="2" ry="2" />
<text  x="928.93" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (30 samples, 0.50%)</title><rect x="280.0" y="1493" width="5.9" height="15.0" fill="rgb(222,95,35)" rx="2" ry="2" />
<text  x="283.00" y="1503.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="23.2" y="1925" width="0.2" height="15.0" fill="rgb(237,7,33)" rx="2" ry="2" />
<text  x="26.24" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="567.2" y="1989" width="0.2" height="15.0" fill="rgb(223,163,36)" rx="2" ry="2" />
<text  x="570.19" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="25.0" y="1893" width="0.2" height="15.0" fill="rgb(233,91,26)" rx="2" ry="2" />
<text  x="28.02" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (8 samples, 0.13%)</title><rect x="905.6" y="1989" width="1.6" height="15.0" fill="rgb(205,74,2)" rx="2" ry="2" />
<text  x="908.57" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="114.6" y="37" width="0.9" height="15.0" fill="rgb(213,86,1)" rx="2" ry="2" />
<text  x="117.56" y="47.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (25 samples, 0.42%)</title><rect x="12.4" y="2069" width="4.9" height="15.0" fill="rgb(252,137,2)" rx="2" ry="2" />
<text  x="15.37" y="2079.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (12 samples, 0.20%)</title><rect x="106.7" y="53" width="2.3" height="15.0" fill="rgb(214,45,6)" rx="2" ry="2" />
<text  x="109.65" y="63.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="225.8" y="2021" width="0.2" height="15.0" fill="rgb(205,175,11)" rx="2" ry="2" />
<text  x="228.84" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="337.5" y="1973" width="0.2" height="15.0" fill="rgb(212,178,33)" rx="2" ry="2" />
<text  x="340.51" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="763.1" y="1941" width="0.2" height="15.0" fill="rgb(207,149,0)" rx="2" ry="2" />
<text  x="766.07" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (4 samples, 0.07%)</title><rect x="613.2" y="2037" width="0.8" height="15.0" fill="rgb(218,91,24)" rx="2" ry="2" />
<text  x="616.24" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (22 samples, 0.37%)</title><rect x="593.3" y="1957" width="4.3" height="15.0" fill="rgb(222,65,8)" rx="2" ry="2" />
<text  x="596.28" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="503.0" y="1973" width="1.9" height="15.0" fill="rgb(218,45,17)" rx="2" ry="2" />
<text  x="505.95" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1129.1" y="1973" width="0.2" height="15.0" fill="rgb(238,221,11)" rx="2" ry="2" />
<text  x="1132.12" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="395.6" y="1909" width="0.8" height="15.0" fill="rgb(241,185,40)" rx="2" ry="2" />
<text  x="398.62" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="211.2" y="1941" width="0.2" height="15.0" fill="rgb(253,61,2)" rx="2" ry="2" />
<text  x="214.21" y="1951.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (5 samples, 0.08%)</title><rect x="116.1" y="69" width="1.0" height="15.0" fill="rgb(217,98,22)" rx="2" ry="2" />
<text  x="119.14" y="79.5" ></text>
</g>
<g >
<title>sys_futex (6 samples, 0.10%)</title><rect x="11.2" y="2005" width="1.2" height="15.0" fill="rgb(237,228,34)" rx="2" ry="2" />
<text  x="14.19" y="2015.5" ></text>
</g>
<g >
<title>___sys_sendmsg (273 samples, 4.57%)</title><rect x="247.8" y="1957" width="53.9" height="15.0" fill="rgb(221,106,24)" rx="2" ry="2" />
<text  x="250.78" y="1967.5" >___sy..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="380.6" y="1973" width="0.2" height="15.0" fill="rgb(235,170,29)" rx="2" ry="2" />
<text  x="383.60" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="158.8" y="1957" width="0.2" height="15.0" fill="rgb(206,119,29)" rx="2" ry="2" />
<text  x="161.83" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="595.8" y="1941" width="0.2" height="15.0" fill="rgb(225,103,44)" rx="2" ry="2" />
<text  x="598.85" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (354 samples, 5.93%)</title><rect x="321.9" y="2005" width="70.0" height="15.0" fill="rgb(248,78,40)" rx="2" ry="2" />
<text  x="324.90" y="2015.5" >folly::..</text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="27.6" y="1957" width="0.4" height="15.0" fill="rgb(227,33,2)" rx="2" ry="2" />
<text  x="30.59" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (68 samples, 1.14%)</title><rect x="1094.1" y="1717" width="13.5" height="15.0" fill="rgb(230,40,26)" rx="2" ry="2" />
<text  x="1097.14" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.1" y="53" width="0.2" height="15.0" fill="rgb(218,63,23)" rx="2" ry="2" />
<text  x="121.12" y="63.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (8 samples, 0.13%)</title><rect x="692.9" y="1941" width="1.6" height="15.0" fill="rgb(221,120,34)" rx="2" ry="2" />
<text  x="695.90" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1541" width="49.8" height="15.0" fill="rgb(230,70,29)" rx="2" ry="2" />
<text  x="72.49" y="1551.5" >[unkn..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="689.1" y="1861" width="0.2" height="15.0" fill="rgb(221,191,1)" rx="2" ry="2" />
<text  x="692.14" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="552.8" y="1989" width="0.4" height="15.0" fill="rgb(208,223,46)" rx="2" ry="2" />
<text  x="555.76" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (26 samples, 0.44%)</title><rect x="206.1" y="1957" width="5.1" height="15.0" fill="rgb(227,67,21)" rx="2" ry="2" />
<text  x="209.07" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (15 samples, 0.25%)</title><rect x="810.3" y="1973" width="3.0" height="15.0" fill="rgb(228,112,16)" rx="2" ry="2" />
<text  x="813.30" y="1983.5" ></text>
</g>
<g >
<title>perf_ctx_unlock (1 samples, 0.02%)</title><rect x="12.2" y="1893" width="0.2" height="15.0" fill="rgb(247,137,44)" rx="2" ry="2" />
<text  x="15.17" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="431.8" y="1973" width="0.2" height="15.0" fill="rgb(206,196,31)" rx="2" ry="2" />
<text  x="434.80" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.4" y="1925" width="0.8" height="15.0" fill="rgb(243,184,21)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="751.6" y="1941" width="0.8" height="15.0" fill="rgb(241,145,25)" rx="2" ry="2" />
<text  x="754.60" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (2 samples, 0.03%)</title><rect x="321.5" y="2005" width="0.4" height="15.0" fill="rgb(213,97,22)" rx="2" ry="2" />
<text  x="324.50" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (8 samples, 0.13%)</title><rect x="356.5" y="1941" width="1.6" height="15.0" fill="rgb(244,35,17)" rx="2" ry="2" />
<text  x="359.49" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (14 samples, 0.23%)</title><rect x="950.6" y="1909" width="2.8" height="15.0" fill="rgb(244,207,51)" rx="2" ry="2" />
<text  x="953.64" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="207.7" y="1893" width="0.2" height="15.0" fill="rgb(250,60,30)" rx="2" ry="2" />
<text  x="210.65" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="354.7" y="1941" width="0.6" height="15.0" fill="rgb(251,45,43)" rx="2" ry="2" />
<text  x="357.71" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (21 samples, 0.35%)</title><rect x="1033.9" y="1909" width="4.1" height="15.0" fill="rgb(236,196,16)" rx="2" ry="2" />
<text  x="1036.85" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1092.4" y="1893" width="0.2" height="15.0" fill="rgb(207,169,19)" rx="2" ry="2" />
<text  x="1095.36" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="312.6" y="1925" width="0.2" height="15.0" fill="rgb(209,170,22)" rx="2" ry="2" />
<text  x="315.61" y="1935.5" ></text>
</g>
<g >
<title>dst_release (55 samples, 0.92%)</title><rect x="1049.9" y="1877" width="10.8" height="15.0" fill="rgb(236,116,52)" rx="2" ry="2" />
<text  x="1052.86" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(224,3,3)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>ip_finish_output (70 samples, 1.17%)</title><rect x="1093.7" y="1813" width="13.9" height="15.0" fill="rgb(251,151,41)" rx="2" ry="2" />
<text  x="1096.74" y="1823.5" ></text>
</g>
<g >
<title>ip_output (82 samples, 1.37%)</title><rect x="276.6" y="1781" width="16.2" height="15.0" fill="rgb(244,98,52)" rx="2" ry="2" />
<text  x="279.64" y="1791.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="1072.6" y="1861" width="0.6" height="15.0" fill="rgb(221,64,50)" rx="2" ry="2" />
<text  x="1075.59" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="11.2" y="2021" width="1.2" height="15.0" fill="rgb(226,143,36)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="296.2" y="1765" width="0.2" height="15.0" fill="rgb(213,101,37)" rx="2" ry="2" />
<text  x="299.20" y="1775.5" ></text>
</g>
<g >
<title>rb_erase (4 samples, 0.07%)</title><rect x="284.7" y="1461" width="0.8" height="15.0" fill="rgb(245,216,4)" rx="2" ry="2" />
<text  x="287.74" y="1471.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="348.6" y="1909" width="0.2" height="15.0" fill="rgb(250,109,49)" rx="2" ry="2" />
<text  x="351.58" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="453" width="49.6" height="15.0" fill="rgb(224,172,6)" rx="2" ry="2" />
<text  x="72.49" y="463.5" >[unkn..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="105.9" y="37" width="0.8" height="15.0" fill="rgb(217,37,35)" rx="2" ry="2" />
<text  x="108.86" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (5 samples, 0.08%)</title><rect x="633.0" y="1973" width="1.0" height="15.0" fill="rgb(220,36,23)" rx="2" ry="2" />
<text  x="636.01" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="608.7" y="2005" width="0.2" height="15.0" fill="rgb(218,116,12)" rx="2" ry="2" />
<text  x="611.70" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (8 samples, 0.13%)</title><rect x="374.1" y="1989" width="1.6" height="15.0" fill="rgb(238,46,17)" rx="2" ry="2" />
<text  x="377.08" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="503.7" y="1957" width="0.2" height="15.0" fill="rgb(215,7,8)" rx="2" ry="2" />
<text  x="506.74" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="155.3" y="1941" width="0.2" height="15.0" fill="rgb(249,220,22)" rx="2" ry="2" />
<text  x="158.28" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="115.9" y="69" width="0.2" height="15.0" fill="rgb(239,108,48)" rx="2" ry="2" />
<text  x="118.94" y="79.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="69.5" y="1669" width="49.8" height="15.0" fill="rgb(253,202,47)" rx="2" ry="2" />
<text  x="72.49" y="1679.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (1 samples, 0.02%)</title><rect x="651.4" y="2037" width="0.2" height="15.0" fill="rgb(236,170,34)" rx="2" ry="2" />
<text  x="654.39" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (20 samples, 0.34%)</title><rect x="858.9" y="1989" width="4.0" height="15.0" fill="rgb(212,136,38)" rx="2" ry="2" />
<text  x="861.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (12 samples, 0.20%)</title><rect x="829.7" y="1989" width="2.3" height="15.0" fill="rgb(228,188,33)" rx="2" ry="2" />
<text  x="832.68" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="168.1" y="1973" width="0.2" height="15.0" fill="rgb(218,176,53)" rx="2" ry="2" />
<text  x="171.12" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="423.1" y="2005" width="0.6" height="15.0" fill="rgb(220,6,42)" rx="2" ry="2" />
<text  x="426.10" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="26.6" y="1973" width="1.4" height="15.0" fill="rgb(213,173,30)" rx="2" ry="2" />
<text  x="29.60" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.1" y="37" width="0.2" height="15.0" fill="rgb(243,54,35)" rx="2" ry="2" />
<text  x="121.12" y="47.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (16 samples, 0.27%)</title><rect x="1116.1" y="2053" width="3.1" height="15.0" fill="rgb(217,78,41)" rx="2" ry="2" />
<text  x="1119.08" y="2063.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1047.3" y="1797" width="0.2" height="15.0" fill="rgb(254,79,13)" rx="2" ry="2" />
<text  x="1050.29" y="1807.5" ></text>
</g>
<g >
<title>process_backlog (68 samples, 1.14%)</title><rect x="1094.1" y="1701" width="13.5" height="15.0" fill="rgb(215,122,48)" rx="2" ry="2" />
<text  x="1097.14" y="1711.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="349.2" y="1957" width="0.6" height="15.0" fill="rgb(252,12,26)" rx="2" ry="2" />
<text  x="352.18" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="333.0" y="1893" width="0.2" height="15.0" fill="rgb(252,93,28)" rx="2" ry="2" />
<text  x="335.97" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="424.1" y="2005" width="1.0" height="15.0" fill="rgb(254,104,24)" rx="2" ry="2" />
<text  x="427.09" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1026.3" y="1941" width="0.2" height="15.0" fill="rgb(221,122,5)" rx="2" ry="2" />
<text  x="1029.34" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="184.9" y="1973" width="0.2" height="15.0" fill="rgb(206,48,36)" rx="2" ry="2" />
<text  x="187.92" y="1983.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (2 samples, 0.03%)</title><rect x="937.8" y="1957" width="0.4" height="15.0" fill="rgb(205,64,46)" rx="2" ry="2" />
<text  x="940.79" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="309" width="49.6" height="15.0" fill="rgb(218,145,8)" rx="2" ry="2" />
<text  x="72.49" y="319.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.15%)</title><rect x="605.7" y="1941" width="1.8" height="15.0" fill="rgb(235,92,47)" rx="2" ry="2" />
<text  x="608.73" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="379.0" y="1909" width="0.2" height="15.0" fill="rgb(240,5,11)" rx="2" ry="2" />
<text  x="382.02" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="116.1" y="37" width="0.4" height="15.0" fill="rgb(242,10,28)" rx="2" ry="2" />
<text  x="119.14" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (477 samples, 7.99%)</title><rect x="1018.6" y="2037" width="94.3" height="15.0" fill="rgb(249,199,52)" rx="2" ry="2" />
<text  x="1021.63" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>[unknown] (193 samples, 3.23%)</title><rect x="430.8" y="2021" width="38.2" height="15.0" fill="rgb(235,185,36)" rx="2" ry="2" />
<text  x="433.81" y="2031.5" >[un..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1007.0" y="2021" width="0.2" height="15.0" fill="rgb(253,187,45)" rx="2" ry="2" />
<text  x="1009.97" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (5 samples, 0.08%)</title><rect x="75.2" y="37" width="1.0" height="15.0" fill="rgb(227,163,17)" rx="2" ry="2" />
<text  x="78.23" y="47.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="272.3" y="1749" width="0.2" height="15.0" fill="rgb(246,193,18)" rx="2" ry="2" />
<text  x="275.29" y="1759.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="27.0" y="1957" width="0.4" height="15.0" fill="rgb(237,61,51)" rx="2" ry="2" />
<text  x="30.00" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (145 samples, 2.43%)</title><rect x="939.0" y="1973" width="28.6" height="15.0" fill="rgb(225,195,41)" rx="2" ry="2" />
<text  x="941.98" y="1983.5" >fo..</text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="741" width="49.6" height="15.0" fill="rgb(209,134,54)" rx="2" ry="2" />
<text  x="72.49" y="751.5" >[unkn..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="110.0" y="37" width="0.2" height="15.0" fill="rgb(219,146,36)" rx="2" ry="2" />
<text  x="113.01" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1128.7" y="2005" width="0.4" height="15.0" fill="rgb(222,178,46)" rx="2" ry="2" />
<text  x="1131.73" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (37 samples, 0.62%)</title><rect x="279.0" y="1637" width="7.3" height="15.0" fill="rgb(241,10,1)" rx="2" ry="2" />
<text  x="282.01" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.20%)</title><rect x="69.5" y="677" width="49.6" height="15.0" fill="rgb(233,57,33)" rx="2" ry="2" />
<text  x="72.49" y="687.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="352.9" y="1957" width="0.4" height="15.0" fill="rgb(227,13,12)" rx="2" ry="2" />
<text  x="355.93" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (37 samples, 0.62%)</title><rect x="165.6" y="2005" width="7.3" height="15.0" fill="rgb(219,208,17)" rx="2" ry="2" />
<text  x="168.55" y="2015.5" ></text>
</g>
</g>
</svg>
